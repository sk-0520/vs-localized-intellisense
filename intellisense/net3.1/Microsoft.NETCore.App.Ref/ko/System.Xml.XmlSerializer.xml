<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>XML Web services 사용을 위해 .NET 형식을 생성할 때 사용할 다양한 옵션을 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>데이터 바인딩을 활성화합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>웹 메서드의 비동기 호출에 대한 이벤트를 만듭니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>웹 메서드의 비동기 호출에 대한 Begin 및 End 메서드를 만듭니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 및 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 특성의 <see langword="Order" /> 속성을 통해 지정된 대로 명시적으로 정해진 순서에 따라 직렬화 코드를 생성합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>속성별 기본 형식을 나타냅니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>필드별 기본 형식과 <see cref="N:System" /> 네임스페이스 형식별 기본 형식을 나타냅니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>입력 텍스트를 코드 엔터티 이름으로 변환하는 정적 메서드를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifier" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>입력 문자열에서 카멜식 대/소문자 문자열을 생성합니다.</summary>
      <param name="identifier">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns>매개 변수 문자열의 카멜식 대/소문자 버전입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>입력 문자열에서 파스칼식 대/소문자 문자열을 생성합니다.</summary>
      <param name="identifier">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns>매개 변수 문자열의 파스칼식 대/소문자 버전입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>입력 문자열에서 올바른 코드 엔터티 이름을 생성합니다.</summary>
      <param name="identifier">일반적으로 XML 요소나 특성 이름에서 가져오는 메서드 매개 변수와 같은 코드 엔터티 이름입니다.</param>
      <returns>메서드 매개 변수의 이름과 같이 코드 식별자로 사용할 수 있는 문자열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>관련 코드 엔터티 이름의 그룹이나 .NET Framework XML serialization 인프라에서 생성한 형식 매핑을 유지합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 클래스의 새 인스턴스를 초기화하고 코드 식별자가 대/소문자를 구분하는지 여부를 확인합니다.</summary>
      <param name="caseSensitive">식별자가 대/소문자를 구분하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>명명된 코드 엔터티나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다.</summary>
      <param name="identifier">코드 엔터티를 인덱싱할 때 사용되는 이름입니다.</param>
      <param name="value">코드 엔터티 또는 형식 매핑 정보입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>지정한 이름을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용하지 못하게 합니다.</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 범위 내에서 사용할 수 없게 되는 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>명명된 코드 항목이나 형식 매핑을 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에 추가합니다. 이 때 이름은 범위 내에서 고유해야 합니다.</summary>
      <param name="identifier">코드 엔터티를 인덱싱할 때 사용되는 후보 이름입니다.</param>
      <param name="value">코드 엔터티 또는 형식 매핑 정보입니다.</param>
      <returns>이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 모든 코드 엔터티나 형식 매핑을 해당하는 이름과 함께 제거합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>지정한 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 이미 사용되고 있는지 여부를 확인합니다.</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용되는지 확인할 이름입니다.</param>
      <returns>이름이 이미 사용되고 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>
        <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> 속성 값에 따라 이름을 수정하여 입력의 대/소문자를 올바르게 만듭니다.</summary>
      <param name="identifier">수정될 수 있는 이름입니다.</param>
      <returns>입력 식별자와 같거나 첫 문자의 대/소문자가 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>입력 이름이 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내의 다른 이름과 충돌하는지 확인하고 충돌할 경우 수정된 문자열을 생성합니다.</summary>
      <param name="identifier">고유하지 않은 경우 수정할 이름입니다.</param>
      <returns>이름 충돌이 있는 경우 식별자 매개 변수 값이나 수정된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위에서 입력 이름으로 식별되는 코드 엔터티나 형식 매핑을 제거합니다.</summary>
      <param name="identifier">제거할 코드 엔터티나 형식 매핑의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스의 예약된 이름에서 입력 이름을 제거합니다.</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에서 사용할 수 있게 될 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 인스턴스 범위 내에 있는 코드 엔터티 또는 형식 매핑의 배열을 반환합니다.</summary>
      <param name="type">인스턴스의 모든 코드 엔터티 또는 형식 매핑에 대한 형식입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 개체에서 저장한 코드 엔터티 또는 형식 매핑의 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>인스턴스가 카멜식 대/소문자를 사용하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인스턴스가 카멜식 대/소문자를 사용하면 <see langword="true" />이고, 그렇지 않고 파스칼식 대/소문자를 사용하면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>스키마 집합이 .NET Framework 코드 엔터티에 바인딩되는 컨텍스트를 설명합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>지정된 코드 식별자에 대해 지정된 형식 공유 옵션을 사용하여 <see cref="T:System.Xml.Serialization.ImportContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identifiers">컨텍스트가 적용되는 코드 엔터티입니다.</param>
      <param name="shareTypes">사용자 지정 형식이 스키마에서 공유되는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>사용자 지정 형식이 공유되는지 여부를 지정하는 값을 가져옵니다.</summary>
      <returns>사용자 지정 형식이 스키마에서 공유되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>컨텍스트가 적용되는 코드 엔터티 집합을 가져옵니다.</summary>
      <returns>컨텍스트가 적용되는 코드 엔터티를 지정하는 <see cref="T:System.Xml.Serialization.CodeIdentifiers" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>코드 엔터티 설명을 가져올 때 생성되는 경고 컬렉션을 가져옵니다.</summary>
      <returns>코드 엔터티 설명을 가져올 때 생성된 경고를 포함하는 <see cref="T:System.Collections.Specialized.StringCollection" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>.NET Framework 인프라에서 사용할 <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> 속성을 설정합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>공백과 특성 값이 정규화되는지 여부를 가져오거나 설정합니다.</summary>
      <returns>공백 특성 값이 정규화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>XML을 구문 분석할 때 공백을 처리하는 방법을 가져오거나 설정합니다.</summary>
      <returns>XML을 구문 분석할 때 공백 처리 방법을 설명하는 <see cref="T:System.Xml.WhitespaceHandling" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>스키마 가져오기를 설명합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 멤버를 인코딩된 SOAP 특성으로 serialize하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>지정된 값을 XML 특성의 이름으로 사용하여 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeName">XML 특성의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 특성의 이름을 가져오거나 설정합니다.</summary>
      <returns>XML 특성의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 SOAP 특성의 XSD(XML Schema Definition language) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns>XML 스키마 데이터 형식입니다.</returns>
      <exception cref="T:System.Exception">지정한 XML 스키마 데이터 형식을 .NET 데이터 형식에 매핑할 수 없는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>XML 특성의 XML 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>XML 특성의 XML 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 인코딩된 SOAP로 serialize하거나 deserialize하는 경우 속성, 필드 및 클래스에 적용된 특성을 재정의할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" />에 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
      <param name="type">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="member">재정의할 멤버의 이름입니다.</param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> 개체의 컬렉션에 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.SoapAttributes" />로 재정의할 개체를 지정합니다.</summary>
      <param name="type">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다.</summary>
      <param name="type">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 <paramref name="member" /> 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
      <param name="type">재정의할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <param name="member">반환할 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 SOAP 메서드를 serialize 및 deserialize하는 방식을 제어하는 특성 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>지정된 사용자 지정 형식을 사용하여 <see cref="T:System.Xml.Serialization.SoapAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스와 같은 <see cref="T:System.Type" /> 인터페이스를 구현하는 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>재정의할 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />를 가져오거나 설정합니다.</summary>
      <returns>멤버가serialize될 때 <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />의 동작을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>XML 요소 또는 특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns>XML 요소 또는 특성의 기본값을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>재정의할 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />를 가져오거나 설정합니다.</summary>
      <returns>재정의할 <see cref="T:System.Xml.Serialization.SoapElementAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 SOAP 열거형을 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 지정하는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드나 속성을 인코딩된 SOAP XML로 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 필드 또는 속성을 serialize하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 개체 형식을 인코딩된 SOAP XML로 sealize하는 방식을 지시하는 개체를 가져오거나 설정합니다.</summary>
      <returns>클래스 선언에 적용되는 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />를 재정의하거나 클래스 선언에 적용되는 <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 공용 멤버 값이 인코딩된 SOAP XML 요소로 serialize되도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName">serialize된 멤버의 XML 요소 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>생성된 XML 요소의 XSD(XML Schema Definition language) 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns>XML 스키마 데이터 형식 중 하나입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>생성된 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>생성된 XML 요소의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="xsi:null" /> 특성이 "1"로 설정된 멤버를 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:null" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>지정된 요소 이름을 사용하여 <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성된 XML 요소 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형을 serialize할 때 XML 문서에서 생성된 값 또는 열거형 멤버를 deserialize할 때 인식된 값입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 호출하여 공용 필드 또는 공용 읽기/쓰기 속성 값을 serialize하지 않도록 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 인코딩된 SOAP XML로 serialize하거나 deserialize할 때 형식을 인식할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>지정한 형식을 사용하여 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">포함시킬 개체의 형식입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>개체를 serialize하거나 deserialize할 때 사용할 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns>포함시킬 개체의 형식입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>.NET Framework 형식 또는 웹 서비스 메서드 정보에서 SOAP 인코딩된 메시지에 대한 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>가져온 형식 매핑의 기본 XML 네임스페이스를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>XML serialization의 재정의를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스가  SOAP 인코딩을 사용하여 매핑된 형식을 serialize하는 방법을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>XML serialization 재정의 및 기본 XML 네임스페이스를 지정하여 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> 클래스가  SOAP 인코딩을 사용하여 매핑된 형식을 serialize하는 방법을 재정의하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체입니다.</param>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <param name="validate">생성된 deserializer가 래퍼 요소에 필요한 정규화된 이름을 확인해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 매개 변수 값은 <paramref name="hasWrapperElement" /> 매개 변수 값이 <see langword="true" />인 경우에만 관련이 있습니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>웹 서비스 메서드에서 수집된 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL 메시지 부분에 해당하는 요소가 SOAP 메시지의 추가 래퍼 요소에 포함되어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="writeAccessors">RPC 스타일 웹 서비스 바인딩을 나타내려면 <see langword="true" />이고, 문서 스타일의 웹 서비스 바인딩 또는 SOAP 헤더를 나타내려면 <see langword="false" />입니다.</param>
      <param name="validate">생성된 deserializer가 래퍼 요소에 필요한 정규화된 이름을 확인해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 매개 변수 값은 <paramref name="hasWrapperElement" /> 매개 변수 값이 <see langword="true" />인 경우에만 관련이 있습니다.</param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 값 중 하나입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>.NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <returns>형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>.NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="defaultNamespace">사용할 기본 XML 네임스페이스입니다.</param>
      <returns>형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용할 수 있도록 형식에 대한 매핑을 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 인스턴스의 컨텍스트에 저장합니다.</summary>
      <param name="type">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용할 수 있도록 파생 형식에 대한 매핑을 <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> 인스턴스의 컨텍스트에 저장합니다.</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 특성에서 파생된 사용자 지정 특성을 포함하는 <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> 리플렉션 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>문서에서 클래스를 생성하기 위해 WSDL 문서의 XSD &lt;<see langword="part" />&gt; 요소에 대한 특정 속성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>WSDL part 요소의 이름 특성과 일치하는 값을 가져오거나 설정합니다.</summary>
      <returns>요소 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>WSDL part 요소의 형식 특성과 일치하는 값을 가져오거나 설정합니다.</summary>
      <returns>XML 형식과 일치하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>클래스 인스턴스를 SOAP 인코딩된 XML로 serialize할 때 <see cref="T:System.Xml.Serialization.XmlSerializer" />에 의해 생성되는 스키마를 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 형식의 이름을 지정합니다.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 형식의 이름과 XML 네임스페이스를 지정합니다.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
      <param name="ns">형식의 XML 네임스페이스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>SOAP 인코딩된 XML 스키마 문서에 형식을 포함시킬지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>SOAP 인코딩된 XML 스키마 문서에 형식을 포함시키려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>XML 형식의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>XML 형식의 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>XML 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns>XML 형식의 이름입니다. 기본값은 클래스 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>deserialization 중에 암호화된 SOAP XML 스트림에서 발견한 알 수는 있지만 참조되지 않은 개체에 데이터를 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o">참조되지 않은 개체입니다.</param>
      <param name="id">참조되지 않은 개체를 식별하는 데 사용되는 고유 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>개체의 ID를 가져옵니다.</summary>
      <returns>개체의 ID입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>deserialize되었지만 참조되지 않은 개체를 가져옵니다.</summary>
      <returns>deserialize되었지만 참조되지 않은 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute">추가할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
      <returns>새로 추가한 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 컬렉션에 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="attribute">원하는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 컬렉션을 호환 가능한 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 1차원 배열에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사된 요소의 대상인 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 개체의 일차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스를 가져옵니다.</summary>
      <param name="attribute">원하는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</param>
      <returns>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 인덱스의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 삽입합니다.</summary>
      <param name="index">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />가 삽입되는 위치의 인덱스입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 가져오거나 설정합니다.</summary>
      <param name="index">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />의 인덱스입니다.</param>
      <returns>지정된 인덱스에 있는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />를 컬렉션에서 제거합니다.</summary>
      <param name="attribute">제거할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 특정 클래스 멤버를 XML 요소의 배열로 serialize하도록 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> 클래스의 새 인스턴스를 초기화하며 XML 문서 인스턴스에서 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 생성하는 XML 요소의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>serialize된 배열에 지정되어 있는 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>serialize된 배열의 XML 요소 이름으로, 기본값은 <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />가 할당된 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 생성한 XML 요소 이름이 정규화되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see langword="XmlSchemaForm.None" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 XML 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>XML 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>요소가 serialize 또는 deserialize되는 명시적 순서를 가져오거나 설정합니다.</summary>
      <returns>코드가 생성되는 순서입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize된 배열에 배치할 수 있는 파생 형식을 지정하는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 문서에 생성된 XML 요소의 이름을 지정합니다.</summary>
      <param name="elementName">XML 요소의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 문서에 생성된 XML 요소의 이름 및 생성된 XML 문서에 삽입할 수 있는 <see cref="T:System.Type" />을 지정합니다.</summary>
      <param name="elementName">XML 요소의 이름입니다.</param>
      <param name="type">serialize할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 클래스의 새 인스턴스를 초기화하고 serialize된 배열에 삽입할 수 있는 <see cref="T:System.Type" />을 지정합니다.</summary>
      <param name="type">serialize할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>생성된 XML 요소의 XML 데이터 형식을 가져오거나 설정합니다.</summary>
      <returns>XSD (XML 스키마 정의) 데이터 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>생성된 XML 요소의 이름을 가져오거나 설정합니다.</summary>
      <returns>생성된 XML 요소의 이름입니다. 기본값은 멤버 식별자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>생성된 XML 요소의 이름이 정규화된 이름인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 값 중 하나입니다. 기본값은 <see langword="XmlSchemaForm.None" />입니다.</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> 속성이 <see langword="XmlSchemaForm.Unqualified" />로 설정되어 있으며 <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 값이 지정되어 있는 경우</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 멤버를 <see langword="xsi:nil" /> 특성이 <see langword="true" />로 설정된 빈 XML 태그로 serialize해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 <see langword="true" /> 특성을 생성하면 <see langword="xsi:nil" />이고, 그렇지 않으면 <see langword="false" />이고 인스턴스가 생성되지 않습니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>생성된 XML 요소의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>생성된 XML 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>XML 요소 계층 구조에서 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 영향을 주는 수준을 가져오거나 설정합니다.</summary>
      <returns>배열의 배열에 있는 인덱스 집합의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>배열에 사용할 수 있는 형식을 가져오거나 설정합니다.</summary>
      <returns>배열에 사용할 수 있는 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute">컬렉션에 추가할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns>추가된 항목의 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>컬렉션에 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />이 들어 있는지 여부를 확인합니다.</summary>
      <param name="attribute">확인할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns>컬렉션에 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>지정한 대상 인덱스에서 시작하여 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 배열을 컬렉션에 복사합니다.</summary>
      <param name="array">컬렉션에 복사할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체의 배열입니다.</param>
      <param name="index">복사된 특성이 시작되는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>컬렉션에서 지정한 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 처음 나타나는 인덱스(0부터 시작)를 반환하고, 컬렉션에 특성이 없으면 -1을 반환합니다.</summary>
      <param name="attribute">컬렉션에서 찾을 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
      <returns>컬렉션에서 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />의 첫 번째 인덱스이고, 컬렉션에 특성이 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>지정된 인덱스의 컬렉션에 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />를 삽입합니다.</summary>
      <param name="index">특성이 삽입되는 인덱스입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 항목을 가져오거나 설정합니다.</summary>
      <param name="index">가져오거나 설정할 컬렉션 멤버의 인덱스(0부터 시작)입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />가 컬렉션에 있는 경우 컬렉션에서 이를 제거합니다.</summary>
      <param name="attribute">제거할 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>알 수 없는 XML 특성을 나타내는 개체를 가져옵니다.</summary>
      <returns>알 수 없는 XML 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>XML 문서 인스턴스에 있어야 하는 XML 특성 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns>XML 특성 이름의 쉼표로 구분된 목록입니다. 각 이름은 <paramref name="namespace" />:<paramref name="name" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>알 수 없는 XML 특성의 줄 번호를 가져옵니다.</summary>
      <returns>알 수 없는 XML 특성의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>해당 줄에서 알 수 없는 XML 특성의 위치를 가져옵니다.</summary>
      <returns>알 수 없는 XML 특성의 위치 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>deserializ되고 있는 개체를 가져옵니다.</summary>
      <returns>deserialize되는 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하여 개체를 serialize하거나 deserialize하면 속성, 필드 및 클래스 특성을 재정의할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 재정의할 개체를 지정합니다. <paramref name="member" /> 매개 변수는 재정의되는 멤버의 이름을 지정합니다.</summary>
      <param name="type">재정의할 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="member">재정의할 멤버의 이름입니다.</param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체를 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체 컬렉션에 추가합니다. <paramref name="type" /> 매개 변수는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체로 재정의할 개체를 지정합니다.</summary>
      <param name="type">재정의되는 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="attributes">재정의 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>지정한 기본 클래스 형식과 관련된 개체를 가져옵니다.</summary>
      <param name="type">검색할 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>지정한 (기본 클래스) 형식과 관련된 개체를 가져옵니다. 해당 멤버 매개 변수는 재정의되는 기본 클래스 멤버를 지정합니다.</summary>
      <param name="type">원하는 특성의 컬렉션과 관련된 기본 클래스 <see cref="T:System.Type" />입니다.</param>
      <param name="member">반환할 <see cref="T:System.Xml.Serialization.XmlAttributes" />를 지정하는 재정의된 멤버의 이름입니다.</param>
      <returns>재정의 특성의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize 및 deserialize하는 방식을 제어하는 특성 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> 클래스의 새 인스턴스를 초기화하고 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize 및 deserialize하는 방법을 사용자 지정합니다.</summary>
      <param name="provider">XML serialization을 제어하는 특성의 대체 구현을 제공할 수 있는 클래스입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>재정의할 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />를 가져오거나 설정합니다.</summary>
      <returns>재정의할 <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>재정의할 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> 개체의 컬렉션을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />가 배열을 반환하는 공용 필드 또는 읽기/쓰기 속성을 serialize하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성에 의해 반환된 배열 내에 삽입된 항목을 serialize하는 방식을 지정하는 개체 컬렉션을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 공용 읽기/쓰기 속성을 XML 특성으로 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>공용 필드 또는 읽기/쓰기 속성을 XML 특성으로 serialize하는 것을 제어하는 <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>일련의 선택을 명확하게 구별하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="xsi:choice" /> 요소로 serialize되는 클래스 멤버에 적용할 수 있는 <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>XML 요소 또는 특성의 기본값을 가져오거나 설정합니다.</summary>
      <returns>XML 요소 또는 특성의 기본값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성을 XML 요소로 serialize하는 방식을 지정하는 개체의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 개체의 컬렉션을 포함하는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 열거형 멤버를 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />가 열거형 멤버를 serialize하는 방식을 지정하는 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 읽기/쓰기 속성을 serialize하는지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 필드 또는 속성을 serialize하지 않으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 개체를 반환하는 멤버가 들어 있는 개체가 재정의될 때 모든 네임스페이스 선언을 유지할지 여부를 지정하는 값을 가져오거나 설정합니다.</summary>
      <returns>네임스페이스 선언을 유지해야 한다면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스를 XML 루트 요소로 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>XML 루트 요소로 지정된 클래스를 재정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 공용 필드 또는 공용 읽기/쓰기 속성을 XML 텍스트로 serialize하도록 하는 개체를 가져오거나 설정합니다.</summary>
      <returns>공용 속성 또는 필드의 기본 serialization을 재정의하는 <see cref="T:System.Xml.Serialization.XmlTextAttribute" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 적용된 클래스를 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />가 serialize하는 방식을 지정하는 개체를 가져오거나 설정합니다.</summary>
      <returns>클래스 선언에 적용된 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />를 재정의하는 <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>열거형을 사용하여 멤버를 추가로 검색할 수 있음을 지정합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">선택을 검색하는 데 사용하는 열거형을 반환하는 멤버 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>형식을 검색하는 경우 사용할 열거형을 반환하는 필드의 이름을 가져오거나 설정합니다.</summary>
      <returns>열거형을 반환하는 필드의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>
        <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />의 스레드로부터 안전한 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 메서드에 이벤트 대리자를 전달하는 데 사용할 수 있는 필드를 포함합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> 이벤트를 처리하는 메서드를 나타내는 개체를 가져오거나 설정합니다.</summary>
      <returns>이벤트 처리기를 가리키는 <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />가 클래스를 serialize하는 기본 방식을 재정의하는 데 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 컬렉션에 추가합니다.</summary>
      <param name="attribute">추가할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns>새로 추가한 항목의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>컬렉션에 지정된 개체가 들어 있는지 여부를 확인합니다.</summary>
      <param name="attribute">찾아볼 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns>개체가 컬렉션에 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> 또는 그 일부를 1차원 배열에 복사합니다.</summary>
      <param name="array">복사된 요소를 보유하는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 배열입니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 인덱스를 가져옵니다.</summary>
      <param name="attribute">인덱스가 검색되는 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />의 인덱스이며 0에서 시작합니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" />를 컬렉션에 삽입합니다.</summary>
      <param name="index">멤버가 삽입된 0부터 시작하는 인덱스입니다.</param>
      <param name="attribute">삽입할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <see cref="T:System.Xml.Serialization.XmlElementAttributes" />의 유효한 인덱스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Xml.Serialization.XmlElementAttributes" />가 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>컬렉션에서 지정된 개체를 제거합니다.</summary>
      <param name="attribute">컬렉션에서 제거할 <see cref="T:System.Xml.Serialization.XmlElementAttribute" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>알 수 없는 XML 요소를 나타내는 개체를 가져옵니다.</summary>
      <returns>알 수 없는 XML 요소를 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>XML 문서 인스턴스에 있어야 하는 XML 요소 이름의 쉼표로 구분된 목록을 가져옵니다.</summary>
      <returns>XML 요소 이름의 쉼표로 구분된 목록입니다. 각 이름은 <paramref name="namespace" />:<paramref name="name" /> 형식입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
      <returns>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호를 가져옵니다.</summary>
      <returns>XML 판독기가 <see cref="T:System.Xml.XmlTextReader" />인 경우 알 수 없는 요소가 발견된 줄 번호입니다. 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialize하고 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 개체를 serialize하거나 deserialize할 때 형식을 인식할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">포함할 개체의 <see cref="T:System.Type" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>포함할 개체의 형식을 가져오거나 설정합니다.</summary>
      <returns>포함할 개체의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>.NET Framework 형식과 XML 스키마 데이터 형식 사이의 매핑을 지원합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>매핑된 요소의 이름을 가져옵니다.</summary>
      <returns>매핑된 요소의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>매핑된 요소의 네임스페이스를 가져옵니다.</summary>
      <returns>매핑된 요소의 네임스페이스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>매핑을 조회하는 데 사용되는 키를 설정합니다.</summary>
      <param name="key">조회 키입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>매핑의 XSD 요소 이름을 가져옵니다.</summary>
      <returns>XSD 요소 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>매핑이 읽기, 쓰기 또는 둘 다인지 여부를 지정합니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>read 및 write 메서드가 모두 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>read 메서드가 생성됩니다.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>write 메서드가 생성됩니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>.NET Framework 웹 서비스 메서드의 코드 엔터티를 WSDL(Web Services Description Language) 메시지의 요소에 매핑합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>.NET Framework 형식이 임의 형식의 XML 요소 또는 특성에 매핑되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>형식이 XML 요소 또는 특성에 매핑되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>.NET Framework 형식의 해당 필드에 지정된 값이 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>해당 필드에 지정된 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>이 매핑에 적용되는 XML 요소 선언의 비정규화된 이름을 가져옵니다.</summary>
      <returns>이 매핑에 적용되는 XML 요소 선언의 비정규화된 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>이 매핑이 나타내는 웹 서비스 메서드 멤버의 이름을 가져옵니다.</summary>
      <returns>이 매핑이 나타내는 웹 서비스 메서드 멤버의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>이 매핑에 적용되는 XML 네임스페이스를 가져옵니다.</summary>
      <returns>이 매핑에 적용되는 XML 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>이 매핑에 대한 .NET Framework 형식의 정규화된 형식 이름을 가져옵니다.</summary>
      <returns>이 매핑에 대한 .NET Framework 형식의 정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>이 매핑에 대한 .NET Framework 형식의 형식 이름을 가져옵니다.</summary>
      <returns>이 매핑에 대한 .NET Framework 형식의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>이 매핑에 대한 .NET Framework 형식의 네임스페이스를 가져옵니다.</summary>
      <returns>이 매핑에 대한 .NET Framework 형식의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>서비스 설명 문서에 표시되는 XML 요소 이름을 가져옵니다.</summary>
      <returns>XML 요소 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>.NET Framework 웹 서비스 메서드와 SOAP 웹 서비스에 대해 정의된 WSDL(Web Services Description Language) 메시지 간의 매핑을 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>SOAP 메시지가 매핑되는 웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 수를 가져옵니다.</summary>
      <returns>컬렉션에 있는 매핑의 수입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>SOAP 메시지에 매핑되는 웹 서비스 메서드에 속한 .NET Framework 코드 엔터티의 내부 형식 매핑 정보가 포함된 항목을 가져옵니다.</summary>
      <param name="index">반환할 매핑의 인덱스입니다.</param>
      <returns>요청된 <see cref="T:System.Xml.Serialization.XmlMemberMapping" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>SOAP 메시지를 나타내는 XML 스키마 요소의 데이터 형식에 매핑되는 .NET Framework 형식의 이름을 가져옵니다.</summary>
      <returns>.NET Framework 형식의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>SOAP 메시지를 나타내는 XML 스키마 요소의 데이터 형식에 매핑되는 .NET Framework 형식의 네임스페이스를 가져옵니다.</summary>
      <returns>매핑의 .NET Framework 네임스페이스입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> 이벤트에 대한 데이터를 제공합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>알 수 없는 XML 노드의 줄 번호를 가져옵니다.</summary>
      <returns>알 수 없는 XML 노드의 줄 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>해당 줄에서 알 수 없는 XML 노드의 위치를 가져옵니다.</summary>
      <returns>알 수 없는 XML 노드의 위치 번호입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>deserialization 중인 XML 노드의 XML 로컬 이름을 가져옵니다.</summary>
      <returns>deserialization 중인 노드의 XML 로컬 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>deserialization 중인 XML 노드의 이름을 가져옵니다.</summary>
      <returns>deserialization 중인 노드의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>deserialize중인 XML 노드와 관련된 네임스페이스 URI를 가져옵니다.</summary>
      <returns>deserialization 중인 XML 노드와 관련된 네임스페이스 URI입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>deserialization 중인 XML 노드의 형식을 가져옵니다.</summary>
      <returns>deserialization 중인 XML 노드를 나타내는 <see cref="T:System.Xml.XmlNodeType" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>deserializ되고 있는 개체를 가져옵니다.</summary>
      <returns>deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>deserialization 중인 XML 노드의 텍스트를 가져옵니다.</summary>
      <returns>deserialization 중인 XML 노드의 텍스트입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 이벤트를 처리하는 메서드를 나타냅니다.</summary>
      <param name="sender">이벤트 소스입니다.</param>
      <param name="e">이벤트 데이터를 포함하는 <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>WSDL(Web Services Description Language) 문서의 리터럴 XSD(XML 스키마 정의) 메시지 부분을 포함하는 XML 스키마 요소 선언과 .NET Framework 형식 또는 웹 서비스 메서드 정보의 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>지정된 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>지정된 XML serialization 재정의를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>지정된 XML serialization 재정의와 기본 XML 네임스페이스를 사용하여 <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스가 매핑 형식을 serialize하는 방법을 재정의하는 개체입니다.</param>
      <param name="defaultNamespace">가져온 형식 매핑에 사용할 기본 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 매핑이 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>웹 서비스 메서드의 정보를 사용하여 내부 형식 매핑을 반환하고 XML 요소 이름, XML 네임스페이스 및 기타 옵션을 지정할 수 있도록 합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="openModel">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>웹 서비스 메서드에서 정보에 대한 내부 형식 매핑을 생성합니다.</summary>
      <param name="elementName">웹 서비스 메서드에서 생성한 XML 요소 이름입니다.</param>
      <param name="ns">웹 서비스 메서드에서 생성한 XML 요소 네임스페이스입니다.</param>
      <param name="members">웹 서비스 메서드에 속한 .NET Framework 코드 엔터티가 포함된 <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 개체의 배열입니다.</param>
      <param name="hasWrapperElement">WSDL(Web Services Description Language) 메시지 부분과 일치하는 요소가 SOAP 메시지의 추가 래퍼 요소로 묶여야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="rpc">메서드가 원격 프로시저 호출이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="openModel">생성된 스키마 형식이 <see langword="true" /> 요소로 표시되도록 지정하려면 <see langword="&lt;xs:anyAttribute&gt;" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 값 중 하나입니다. 기본값은 <see langword="None" />입니다.</param>
      <returns>매핑이 들어 있는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>지정한 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <returns>형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>지정한 형식 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="defaultNamespace">사용할 기본 XML 네임스페이스입니다.</param>
      <returns>형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>지정한 형식 및 특성을 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="root">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
      <returns>.NET Framework 형식과 XML 스키마 요소의 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>지정한 형식, 특성 및 네임스페이스를 사용하여 .NET Framework 형식에 대한 XML 스키마 요소의 매핑을 생성합니다.</summary>
      <param name="type">형식 매핑을 생성할 .NET Framework 형식입니다.</param>
      <param name="root">형식에 적용되는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 특성입니다.</param>
      <param name="defaultNamespace">사용할 기본 XML 네임스페이스입니다.</param>
      <returns>형식을 XML 스키마 요소에 연결하는 내부 .NET Framework 매핑을 포함하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용할 형식에 대한 매핑을 포함합니다.</summary>
      <param name="type">형식 매핑 정보를 저장할 .NET Framework 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>나중에 가져오기 메서드를 호출할 때 사용할 파생 형식에 대한 매핑을 포함합니다.</summary>
      <param name="provider">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 특성에서 파생된 사용자 지정 특성을 포함하는 <see cref="T:System.Reflection.ICustomAttributeProvider" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>.NET Framework 웹 서비스 메서드의 코드 엔터티와 SOAP 웹 서비스에 대해 정의된 WSDL(Web Services Description Language) 메시지 내용 간의 매핑을 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" />가 출력 매개 변수가 아닌 웹 서비스 메서드 반환 값을 표시하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>멤버가 웹 서비스 반환 값을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>이 매핑에 대한 웹 서비스 메서드 멤버의 이름을 가져오거나 설정합니다.</summary>
      <returns>웹 서비스 메서드의 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>이 매핑이 나타내는 웹 서비스 메서드 멤버 코드 엔터티의 형식을 가져오거나 설정합니다.</summary>
      <returns>이 매핑이 나타내는 웹 서비스 메서드 멤버 코드 엔터티의 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>해당 XML 요소 정의의 <c>isNullable</c> 특성 값이 <see langword="false" />임을 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> 속성을 재정의하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>멤버 코드 엔터티에 적용된 SOAP 관련 특성의 컬렉션을 가진 <see cref="T:System.Xml.Serialization.SoapAttributes" />를 가져오거나 설정합니다.</summary>
      <returns>멤버에 적용된 SOAP 특성을 나타내는 개체가 포함된 <see cref="T:System.Xml.Serialization.SoapAttributes" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>멤버 코드 엔터티에 적용된 <see cref="T:System.Xml.Serialization.XmlAttributes" /> 관련 특성의 컬렉션을 가진 <see cref="T:System.Xml.Serialization.XmlSerializer" />를 가져오거나 설정합니다.</summary>
      <returns>멤버 코드에 적용된 XML 특성을 나타내는 <see cref="T:System.Xml.Serialization.XmlAttributes" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션에 대해 반복을 가능하게 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="list">반복할 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns>컬렉션의 현재 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>열거자를 컬렉션의 다음 항목으로 이동합니다.</summary>
      <returns>이동이 성공적으로 수행되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 현재 요소입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체 컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 형식 매핑 개체에 있는 XML 스키마 요소 선언으로  채웁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas">형식 매핑에서 얻은 요소 선언이 추가될 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>&lt;any&gt; 요소를 지정된 네임스페이스로 식별되는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 내보냅니다.</summary>
      <param name="ns">&lt;any&gt; 요소를 추가할 XML 스키마 문서의 네임스페이스입니다.</param>
      <returns>&lt;any&gt; 요소 선언에 할당된 임의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>개체 또는 형식에 대한 요소 선언을 SOAP 메시지나 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="members">내보낼 매핑이 포함된 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</param>
      <returns>추가된 정수가 있는 문자열 "any"입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>리터럴 SOAP 메시지 정의의 각 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" />에 추가합니다.</summary>
      <param name="xmlMembersMapping">WSDL(Web Services Description Language) 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>리터럴 SOAP 메시지 정의의 각 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" />에 추가하고 포함 요소가 들어 있는지 여부를 지정합니다.</summary>
      <param name="xmlMembersMapping">.NET Framework 형식과 XML 스키마 요소 간의 내부 매핑입니다.</param>
      <param name="exportEnclosingType">스키마를 포함하는 스키마 요소가 들어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>리터럴 SOAP 메시지 정의의 단일 요소 부분에 대해 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="xmlMembersMapping">WSDL(Web Services Description Language) 메시지 정의의 요소 부분에 대한 내부 .NET Framework 형식 매핑입니다.</param>
      <returns>내보낸 요소 선언의 정규화된 XML 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>.NET Framework 형식에 대한 요소 선언을 해당 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체에 추가합니다.</summary>
      <param name="xmlTypeMapping">.NET Framework 형식과 XML 스키마 요소 간의 내부 매핑입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>WSDL 문서의 리터럴 XSD 메시지 부분을 포함하여 XML 스키마 요소 선언에 대한 .NET Framework 형식의 내부 매핑을 생성합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>WSDL 문서에서 정의한 SOAP 리터럴 메시지에서 사용되는 XML 스키마를 나타내는 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 개체의 컬렉션을 가져와서 <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> 개체의 컬렉션입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>SOAP 리터럴 메시지에서 사용하는 XML 스키마를 나타내는 <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> 개체와 WSDL(Web Services Description Language) 문서에서 정의된 바인딩에 대해 생성되는 클래스의 컬렉션을 가져와서 <see cref="T:System.Xml.Schema.XmlSchema" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체</param>
      <param name="typeIdentifiers">WSDL 문서에서 정의한 바인딩에 대해 생성되는 클래스의 컬렉션을 지정하는 <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>WSDL 문서에서 정의한 단일 SOAP 리터럴 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName">.NET Framework 형식이 생성되는 요소 형식의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="elementName">WSDL 문서에 있는 part 요소의 이름입니다.</param>
      <returns>WSDL 메시지 정의의 단일 요소 부분에 대한 .NET Framework 형식 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType">XSD 요소의 형식에 해당하도록 생성된 .NET Framework 형식의 기본 형식입니다.</param>
      <returns>XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보를 나타내는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>XML 스키마 문서에서 정의된 요소나 WSDL 문서의 부분으로 정의된 요소에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType">XSD 요소의 형식에 해당하도록 생성된 .NET Framework 형식의 기본 형식입니다.</param>
      <param name="baseTypeCanBeIndirect">XSD 요소에 해당하는 형식이 기본 형식에서 간접적으로 상속될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name">매핑을 생성할 요소의 이름입니다.</param>
      <param name="ns">매핑을 생성할 요소의 네임스페이스입니다.</param>
      <param name="members">매핑을 생성할 요소의 멤버를 지정하는 <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> 인스턴스의 배열입니다.</param>
      <returns>형식 매핑 정보를 포함하는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 단일 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name">메시지 부분 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns>단일 요소 부분을 포함하는 WSDL 메시지 정의에 대한 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="names">메시지 부분의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" /> 형식의 배열입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 .NET Framework 형식 매핑을 나타내는 <see cref="T:System.Xml.Serialization.XmlMembersMapping" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>WSDL 문서에 정의된 리터럴 사용 SOAP 메시지의 요소 부분에 대한 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="names">메시지 부분의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" /> 형식의 배열입니다.</param>
      <param name="baseType">메시지 부분에 해당하도록 생성되는 .NET Framework 형식의 기본 형식입니다.</param>
      <param name="baseTypeCanBeIndirect">메시지 부분에 해당하는 형식이 기본 형식에서 간접적으로 상속할 수 있음을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>WSDL 메시지 정의의 요소 부분에 대한 .NET Framework 형식 매핑입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns>형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType">기본 형식을 지정하는 <see cref="T:System.Type" /> 개체입니다.</param>
      <returns>형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="typeName">XML 요소를 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="baseType">기본 형식을 지정하는 <see cref="T:System.Type" /> 개체입니다.</param>
      <param name="baseTypeCanBeIndirect">생성된 형식이 <paramref name="baseType" />을 간접적으로 상속할 수 있는지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.</param>
      <returns>형식 매핑을 설명하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>XML 스키마 문서에 정의된 요소의 내부 형식 매핑 정보를 생성합니다.</summary>
      <param name="name">XML 스키마 문서에서 정의된 요소의 이름을 지정하는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns>XML 스키마 요소에 대한 .NET Framework 형식 매핑 정보입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>XML 스키마의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>개체를 컬렉션의 끝에 추가합니다.</summary>
      <param name="schema">개체의 컬렉션에 추가할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" />가 추가되는 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>어셈블리 참조를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="schema">추가할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <param name="baseUri">스키마 개체의 <see cref="T:System.Uri" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" />가 추가되는 인덱스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 클래스의 인스턴스를 컬렉션의 끝에 추가합니다.</summary>
      <param name="schemas">컬렉션의 끝에 추가할 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>어셈블리 참조를 나타내는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="schema">추가할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>XML 스키마의 요소 및 특성 이름을 처리하고 선택적으로 XML 스키마의 유효성을 검사합니다.</summary>
      <param name="handler">strict 매개 변수가 <see langword="true" />로 설정되었을 때 XML 스키마 유효성 검사에서 오류 및 경고를 처리할 콜백 메서드를 지정하는 <see cref="T:System.Xml.Schema.ValidationEventHandler" />입니다.</param>
      <param name="fullCompile">
        <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> 클래스의 <see cref="T:System.Xml.Serialization.XmlSchemas" /> 메서드를 사용하여 컬렉션에 있는 XML 스키마의 유효성을 검사하려면 <see langword="true" />로 설정하고, 그렇지 않으면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>지정한 네임스페이스에 속하는 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체가 컬렉션에 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="targetNamespace">확인할 항목의 네임스페이스입니다.</param>
      <returns>항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" />에 특정 스키마가 있는지 여부를 확인합니다.</summary>
      <param name="schema">찾을 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
      <returns>컬렉션에 지정한 항목이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />를 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다. 대상 배열의 지정된 인덱스에서 복사를 시작합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" />에서 복사한 스키마의 대상인 일차원 <see cref="T:System.Xml.Serialization.XmlSchemas" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">복사가 시작되는 배열의 인덱스를 나타내는 32비트 정수입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>지정된 이름과 형식의 <see cref="T:System.Xml.Schema.XmlSchemaObject" />를 XML 스키마 중 하나에서 찾습니다.</summary>
      <param name="name">컬렉션에서 <see cref="T:System.Xml.XmlQualifiedName" /> 개체를 찾는 데 사용되는 네임스페이스가 포함된 정규화된 이름을 지정하는 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <param name="type">찾으려는 개체의 <see cref="T:System.Type" />입니다. 가능한 형식은 <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 및 <see cref="T:System.Xml.Schema.XmlSchemaNotation" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 또는 <see cref="T:System.Xml.Schema.XmlSchemaElement" />와 같은 <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>동일한 네임스페이스에 속해 있는 스키마의 컬렉션을 가져옵니다.</summary>
      <param name="ns">검색할 스키마의 네임스페이스입니다.</param>
      <returns>스키마가 포함되어 있는 <see cref="T:System.Collections.IList" /> 구현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>지정한 스키마를 검색하고, 전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 이 스키마가 처음 나타나는 인덱스(0부터 시작)를 반환합니다.</summary>
      <param name="schema">찾을 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
      <returns>지정한 값이 있으면 전체 <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 이 값이 처음 나타나는 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>지정한 인덱스의 <see cref="T:System.Xml.Serialization.XmlSchemas" />에 스키마를 삽입합니다.</summary>
      <param name="index">
        <paramref name="schema" />을 삽입해야 하는 인덱스(0부터 시작)입니다.</param>
      <param name="schema">삽입할 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>스키마가 컴파일되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>스키마가 컴파일되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>지정한 XML 스키마에 <see langword="IsDataSet" /> 또는 상응하는 값으로 설정된 사용자 지정 <see langword="true" /> 특성이 포함되어 있는지 여부를 확인하는 정적 메서드입니다.</summary>
      <param name="schema">
        <see langword="IsDataSet" /> 값으로 설정된 <see langword="true" /> 특성이 포함되어 있는지 확인할 XML 스키마입니다.</param>
      <returns>지정된 스키마가 있으면 <see langword="true" />이고 , 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>지정된 인덱스에서 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 가져오거나 설정합니다.</summary>
      <param name="index">검색할 항목의 인덱스입니다.</param>
      <returns>지정된 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>지정한 네임스페이스에 연결된 XML 스키마를 나타내는 지정한 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체를 가져옵니다.</summary>
      <param name="ns">지정된 개체의 네임스페이스입니다.</param>
      <returns>지정된 <see cref="T:System.Xml.Schema.XmlSchema" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스의 콘텐츠를 지운 후에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에 새 요소를 삽입하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="index" />에 있는 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에서 요소를 제거할 때 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="value">
        <paramref name="index" />에서 제거할 요소의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 인스턴스에 값을 설정하기 전에 추가로 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="oldValue" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="oldValue">
        <paramref name="newValue" />로 바꿀 값입니다.</param>
      <param name="newValue">
        <paramref name="index" />에 있는 요소의 새 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" />에서 처음 나타나는 특정 스키마를 제거합니다.</summary>
      <param name="schema">제거할 <see cref="T:System.Xml.Schema.XmlSchema" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>XML 스키마의 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>컬렉션 또는 열거형에 매핑되는 SOAP 인코딩된 XML 데이터 형식을 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="collection">컬렉션 항목 배열이 복사되는 컬렉션입니다.</param>
      <param name="collectionItems">
        <c>개체 컬렉션</c>으로 복사되는 항목의 배열입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>SOAP 인코딩된 XML 데이터를 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="fixup">채울 항목에 대한 문자열 식별자의 배열과 고정할 개체가 포함된 <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 및 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />를 위한 기본 클래스일 뿐 아니라 이 두 가지 형식 모두에 공통으로 사용되는 메서드를 포함하는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>SOAP로 인코딩된 루트가 아닌 XML 데이터에서 형식을 deserialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <returns>콜백에서 반환된 개체입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스로 deserialization을 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>필요한 경우 호출될 콜백 메서드가 있는 개체를 저장하여 SOAP 인코딩된 배열이나 SOAP 인코딩된 다중 참조 요소에 매핑되는 .NET Framework 컬렉션이나 열거형을 채웁니다.</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자 및 콜백 메서드의 입력 데이터입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>필요한 경우 호출될 콜백 메서드 인스턴스가 있는 개체를 저장하여 SOAP 인코딩된 배열의 개체를 채웁니다.</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자 및 콜백 메서드의 입력 데이터입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>나중에 호출하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 대리자의 구현과 해당 입력 데이터를 저장합니다.</summary>
      <param name="name">deserialize되는 .NET Framework 형식의 이름입니다.</param>
      <param name="ns">deserialize되는 .NET Framework 형식의 네임스페이스입니다.</param>
      <param name="type">deserialize될 <see cref="T:System.Type" />입니다.</param>
      <param name="read">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> 대리자입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>나중에 <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> 메서드를 통해 액세스하기 위해 SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize되는 개체를 저장합니다.</summary>
      <param name="id">요소를 식별하는 <see langword="id" /> 요소의 <see langword="multiRef" /> 특성 값입니다.</param>
      <param name="o">XML 요소에서 deserialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>deserializer가 증가했는지 여부를 확인합니다.</summary>
      <param name="whileIterations">while 루프의 현재 <see langword="count" />입니다.</param>
      <param name="readerCount">현재 <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />가 증가하지 않은 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>모든 공백 문자를 지정한 문자열의 처음과 끝에서 제거합니다.</summary>
      <param name="value">공백이 트리밍될 문자열입니다.</param>
      <returns>트리밍된 문자열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자 인스턴스와 메서드의 입력을 포함하며 메서드의 매개 변수도 제공합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>콜백 메서드의 매개 변수를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="collection">콜백 메서드에서 컬렉션 항목 배열을 복사하는 컬렉션입니다.</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="collectionItems">콜백 메서드에서 컬렉션을 복사하는 배열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자를 인스턴스화하는 콜백 메서드를 가져옵니다.</summary>
      <returns>콜백 메서드를 가리키는 <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> 대리자입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>콜백 메서드에 대한 <paramref name="object collection" />을 가져옵니다.</summary>
      <returns>픽스업에 사용되는 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>콜백 메서드에서 컬렉션을 복사하는 배열을 가져옵니다.</summary>
      <returns>콜백 메서드에서 컬렉션을 복사하는 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>deserialize되는 개체가 추상 개체여야 함을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name">추상 형식의 이름입니다.</param>
      <param name="ns">추상 형식의 .NET Framework 네임스페이스입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>내부 요소를 읽는 옵션을 사용하여 <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 해당 XML 표현의 개체를 채웁니다.</summary>
      <param name="xsdDerived">파생된 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="nsDerived">파생된 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="xsdBase">기본 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="nsBase">기본 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="clrDerived">파생된 .NET Framework 형식의 네임스페이스입니다.</param>
      <param name="clrBase">기본 .NET Framework 형식의 이름입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>생성자에서 보안 예외를 throw하기 때문에 deserialize되는 개체가 인스턴스화될 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="typeName">형식의 이름입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>사용할 수 있는 생성자가 없기 때문에 deserialize되는 개체가 인스턴스화될 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="typeName">형식의 이름입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>명시적 참조 변환이 실패했음을 나타내는 <see cref="T:System.InvalidCastException" />을 만듭니다.</summary>
      <param name="type">개체가 캐스팅될 수 없는 <see cref="T:System.Type" />입니다. 이 형식은 예외 메시지에 포함됩니다.</param>
      <param name="value">캐스팅될 수 없는 개체입니다. 이 개체는 예외 메시지에 포함됩니다.</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>명시적 참조 변환이 실패했음을 나타내는 <see cref="T:System.InvalidCastException" />을 만듭니다.</summary>
      <param name="type">개체가 캐스팅될 수 없는 <see cref="T:System.Type" />입니다. 이 형식은 예외 메시지에 포함됩니다.</param>
      <param name="value">캐스팅될 수 없는 개체입니다. 이 개체는 예외 메시지에 포함됩니다.</param>
      <param name="id">문자열 식별자입니다.</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>XML 스키마 데이터 형식에 매핑된 파생 형식을 찾을 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name">사용할 수 없는 파생 형식에 매핑된 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns">사용할 수 없는 파생 형식에 매핑된 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="clrType">파생 형식을 찾을 수 없는 .NET Framework 기본 형식의 전체 이름입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>SOAP 인코딩된 컬렉션 형식을 수정할 수 없고 그 값을 채울 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name">매핑이 있는 .NET Framework 형식의 정규화된 이름입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>열거형 값이 올바르지 않음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value">올바르지 않은 열거형 값입니다.</param>
      <param name="enumType">열거형 형식입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>
        <see cref="T:System.InvalidOperationException" />의 현재 위치가 알 수 없는 XML 노드를 나타냄을 의미하는 <see cref="T:System.Xml.XmlReader" />을 만듭니다.</summary>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>형식을 알 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type">알 수 없는 형식의 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 예외입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>XML 문자열이 유효한 .NET Framework 형식 이름으로 변환되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns>XML 문자열이 유효한 .NET Framework 형식 이름으로 디코딩되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>XML 문서가 deserialize되는 XML 문서 개체를 가져옵니다.</summary>
      <returns>deserialize된 <see cref="T:System.Xml.XmlDocument" /> 데이터를 나타내는 <see cref="T:System.Xml.XmlDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>지정된 배열 또는 복사본이 지정한 인덱스를 포함할 수 있을 정도로 큰지 확인합니다.</summary>
      <param name="a">확인하고 있는 <see cref="T:System.Array" />입니다.</param>
      <param name="index">필수 인덱스입니다.</param>
      <param name="elementType">배열 요소의 <see cref="T:System.Type" />입니다.</param>
      <returns>기존 배열이 충분히 크면 기존 <see cref="T:System.Array" />이고, 그렇지 않으면 원래 배열 요소를 포함하는 더 큰 새 배열입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자 인스턴스와 메서드의 입력을 포함하며 메서드의 매개 변수 역할을 합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o">콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체입니다.</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="count">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 속성을 통해 가져온 문자열 배열의 크기입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="o">콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체입니다.</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자를 인스턴스화하는 메서드입니다.</param>
      <param name="ids">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> 속성을 통해 가져온 문자열 배열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자의 인스턴스를 만드는 콜백 메서드를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> 대리자의 인스턴스를 만드는 콜백 메서드입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>콜백 구현에서 값을 채우는 <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> 속성에 속하는 개체에 대한 키 배열을 가져오거나 설정합니다.</summary>
      <returns>키 배열입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>콜백 구현에서 값을 채우는 다른 개체를 포함하는 개체를 가져오거나 설정합니다.</summary>
      <returns>채울 값이 있는 개체가 포함된 소스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>데이터 형식이 .NET Framework 참조 형식에 매핑되는 SOAP 인코딩된 배열의 값을 채웁니다.</summary>
      <param name="fixup">값이 채워진 배열을 포함하는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 SOAP 인코딩된 배열의 길이를 가져옵니다.</summary>
      <param name="name">배열에 지정해야 하는 로컬 이름입니다.</param>
      <param name="ns">배열에 지정해야 하는 네임스페이스입니다.</param>
      <returns>SOAP 배열의 길이입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 XML 요소의 null 특성이 <see langword="true" /> 값으로 설정되어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />가 현재 값이 <see langword="true" />인 null 특성에 위치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize되고 있는 개체와 <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />에서 이전에 저장한 개체를 가져옵니다.</summary>
      <param name="id">요소를 식별하는 <see langword="id" /> 요소의 <see langword="multiRef" /> 특성 값입니다.</param>
      <returns>SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize될 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>
        <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 XML 요소의 <see langword="xsi:type" /> 특성 값을 가져옵니다.</summary>
      <returns>XML 요소의 데이터 형식을 나타내는 XML의 정규화된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>SOAP 인코딩된 XML 데이터에 매핑되는 개체를 채우는 콜백 메서드를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>
        <see cref="T:System.Xml.NameTable" /> 개체에 요소와 특성 이름을 저장합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>SOAP 1.1 반환 값에 대해 <see langword="true" />여야 하는 값을 가져오거나 설정합니다.</summary>
      <returns>값이 반환 값이면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>XML 특성 이름이 XML 네임스페이스를 나타내는지 여부를 확인합니다.</summary>
      <param name="name">XML 특성의 이름입니다.</param>
      <returns>XML 특성 이름이 XML 네임스페이스를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>XML 특성이 WSDL(Web Services Description Language) 네임스페이스의 <see langword="arrayType" />인 경우 이 특성의 값을 설정합니다.</summary>
      <param name="attr">형식이 <see langword="wsdl:array" />일 수 있는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 자신이 현재 위치한 요소의 정규화된 이름을 읽도록 합니다.</summary>
      <returns>현재 XML 요소의 정규화된 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 XML 끝 태그를 읽도록 합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />가 사용하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>
        <see cref="T:System.Xml.XmlReader" />의 현재 횟수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />의 현재 횟수입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>현재 XML 요소의 null 특성 값이 true인 경우 <see cref="T:System.Xml.XmlReader" />에서 이 요소를 읽도록 합니다.</summary>
      <returns>요소에 null="true" 특성 값이 있고 요소를 읽었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>
        <see cref="T:System.Xml.XmlReader" />에서 자신이 현재 위치한 요소의 정규화된 이름을 읽도록 합니다.</summary>
      <returns>현재 XML 요소의 정규화된 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다. 그렇지 않고 null="true" 특성 값이 있으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 <see langword="null" />일 수 있는 단순한 텍스트 전용 XML 요소를 읽도록 합니다.</summary>
      <returns>문자열 값입니다. 그렇지 않으면, <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>SOAP 인코딩에서 XML 요소를 참조하는 데 사용되는 <see langword="href" /> 특성(SOAP 1.2의 경우 <see langword="ref" /> 특성)의 값을 읽습니다.</summary>
      <param name="fixupReference">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns>값을 읽었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>SOAP 인코딩된 <see langword="multiRef" /> XML 요소에서 개체를 deserialize합니다.</summary>
      <returns>문서에서 참조된 요소의 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>SOAP 인코딩된 <see langword="multiRef" /> XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <returns>문서에서 참조된 요소의 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>SOAP 메시지의 SOAP 인코딩된 <see langword="multiRef" /> 요소에서 개체를 deserialize합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="elementCanBeType">요소 이름이 또한 XML 스키마 데이터 형식 이름이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="fixupReference">
        <see langword="href" /> 특성의 값을 읽어 올 출력 문자열입니다.</param>
      <returns>deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="name">요소의 XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns">요소의 XML 스키마 데이터 형식의 네임스페이스입니다.</param>
      <param name="fixupReference">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns>deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>
        <see langword="multiRef" /> 요소에 대한 참조가 포함된 SOAP 메시지의 XML 요소에서 개체를 deserialize합니다.</summary>
      <param name="fixupReference">
        <see langword="href" /> 특성 값을 읽어 올 출력 문자열입니다.</param>
      <returns>deserialize된 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />의 현재 위치에서 해당 XML 표현의 개체를 채웁니다.</summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" />의 현재 위치에 해당하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns>멤버가 <see cref="T:System.Xml.Serialization.IXmlSerializable" />의 위치에서 채워진 <see cref="T:System.Xml.XmlReader" /> 인터페이스를 구현하는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>이 메서드는 .NET Framework 인프라를 지원하며 코드에서 직접 사용할 수 없습니다.</summary>
      <param name="serializable">XMLReader의 현재 위치에 해당하는 IXmlSerializable 개체입니다.</param>
      <param name="wrappedAny">serialize 가능한 개체를 래핑할지 여부를 지정합니다.</param>
      <returns>XmlReader의 위치에서 채워진 멤버와 함께 IXmlSerializable 인터페이스를 구현하는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>입력 값에 추가된 <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과를 생성합니다.</summary>
      <param name="value">
        <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과 앞에 붙는 문자열입니다.</param>
      <returns>입력 값에 추가된 <see cref="M:System.Xml.XmlReader.ReadString" /> 메서드의 호출 결과입니다</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>
        <see cref="M:System.Xml.XmlReader.ReadString" /> 클래스의 <see cref="T:System.Xml.XmlReader" /> 메서드에 대한 호출 결과를 반환합니다. 필요한 경우 공백을 트리밍하고 입력 값에 추가합니다.</summary>
      <param name="value">추가될 문자열입니다.</param>
      <param name="trim">읽기 작업 결과를 트리밍해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>입력 값에 추가되는 읽기 작업의 결과입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>null 값(<see langword="xsi:nil = 'true'" />)을 허용하는 XML 요소를 읽고 제네릭 <see cref="T:System.Nullable`1" /> 값을 반환합니다.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />의 현재 위치에 대한 단순 데이터 형식을 나타내는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns>null XML 값을 나타내는 제네릭 <see cref="T:System.Nullable`1" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치한 XML 노드의 값을 가져옵니다.</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" />의 현재 위치에 대한 단순 데이터 형식을 나타내는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns>값이 단순한 XML 스키마 데이터 형식인 경우 .NET Framework 값 형식인 노드 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 XML 문서 루트 요소를 읽도록 합니다.</summary>
      <param name="wrapped">메서드에서 요소의 시작 요소를 읽은 후 내용만 읽어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>읽은 루트 요소를 포함하는 <see cref="T:System.Xml.XmlDocument" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 XML 노드를 읽도록 합니다.</summary>
      <param name="wrapped">요소의 시작 요소를 읽은 후 내용만 읽어야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>읽은 XML 노드를 나타내는 <see cref="T:System.Xml.XmlNode" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>SOAP 인코딩된 <see langword="multiRef" /> 요소에서 deserialize될 개체를 저장합니다.</summary>
      <param name="o">deserialize될 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>동적으로 생성된 어셈블리를 이름별로 가져옵니다.</summary>
      <param name="assemblyFullName">어셈블리의 전체 이름입니다.</param>
      <returns>동적으로 생성된 <see cref="T:System.Reflection.Assembly" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>해당 배열 또는 복사본이 지정된 길이보다 길지 않은지 확인합니다.</summary>
      <param name="a">확인하고 있는 배열입니다.</param>
      <param name="length">배열의 최대 길이입니다.</param>
      <param name="elementType">배열 요소의 <see cref="T:System.Type" />입니다.</param>
      <param name="isNullable">배열에 대해 <see langword="true" />이고 입력 배열에 대해 있으며 반환될 수 있으면 <see langword="null" />이고, 그렇지 않으면 더 작은 새 배열입니다.</param>
      <returns>기존 배열이 이미 충분히 작으면 기존 <see cref="T:System.Array" />이고, 그렇지 않으면 최대 크기가 <paramref name="length" />인 원래 배열의 요소를 포함하는 더 작은 새 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 문자열 값을 읽고 Base 64 바이트 배열로 반환하도록 합니다.</summary>
      <param name="isNull">
        <see langword="true" />을 반환하면 <see langword="null" />이고, base-64바이트 배열을 반환하면 <see langword="false" />입니다.</param>
      <returns>Base 64 바이트 배열입니다. 그렇지 않고 <paramref name="isNull" /> 매개 변수 값이 <see langword="null" />이면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>입력 문자열에서 Base 64 바이트 배열을 생성합니다.</summary>
      <param name="value">Base-64바이트 배열로 변환할 문자열입니다.</param>
      <returns>Base 64 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />가 현재 위치에서 문자열 값을 읽고 16진 바이트 배열로 반환하도록 합니다.</summary>
      <param name="isNull">
        <see langword="true" />을 반환하면 <see langword="null" />이고, 16진 바이트 배열을 반환하면 <see langword="false" />입니다.</param>
      <returns>16진수 바이트 배열입니다. 그렇지 않고 <paramref name="isNull" /> 매개 변수의 값이 <see langword="true" />이면 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>입력 문자열에서 16진수 바이트 배열을 생성합니다.</summary>
      <param name="value">16진수 바이트 배열로 변환하는 문자열입니다.</param>
      <returns>16진수 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>입력 문자열에서 <see cref="T:System.Char" /> 개체를 생성합니다.</summary>
      <param name="value">
        <see cref="T:System.Char" /> 개체로 변환할 문자열입니다.</param>
      <returns>
        <see cref="T:System.Char" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>입력 문자열에서 <see cref="T:System.DateTime" /> 개체를 생성합니다.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> 클래스 개체로 변환할 문자열입니다.</param>
      <returns>
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>입력 문자열에서 <see cref="T:System.DateTime" /> 개체를 생성합니다.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> 개체로 변환할 문자열입니다.</param>
      <returns>
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>열거자 목록의 상수를 나타내는 구분 식별자로 구성된 문자열에서 숫자 열거형 값을 생성합니다.</summary>
      <param name="value">각 식별자가 설정된 열거자 목록의 상수를 나타내는 구분 식별자로 구성된 문자열입니다.</param>
      <param name="h">키인 식별자와 정수인 상수로 구성된 <see cref="T:System.Collections.Hashtable" />입니다.</param>
      <param name="typeName">열거형 형식의 이름입니다.</param>
      <returns>일련의 비트 <see langword="OR" /> 연산인 열거형 값으로 구성된 long 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>시간을 나타내는 문자열에서 <see cref="T:System.DateTime" />을 생성합니다.</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> 개체로 변환할 문자열입니다.</param>
      <returns>
        <see cref="T:System.DateTime" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>XML 이름을 디코딩합니다.</summary>
      <param name="value">디코딩할 XML 이름입니다.</param>
      <returns>디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>XML 이름을 디코딩합니다.</summary>
      <param name="value">디코딩할 XML 이름입니다.</param>
      <returns>디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>XML 이름을 디코딩합니다.</summary>
      <param name="value">디코딩할 XML 이름입니다.</param>
      <returns>디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>XML 이름을 디코딩합니다.</summary>
      <param name="value">디코딩할 XML 이름입니다.</param>
      <returns>디코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>접두사를 포함할 수 있는 이름에서 <see cref="T:System.Xml.XmlQualifiedName" />을 가져옵니다.</summary>
      <param name="value">접두사를 포함할 수 있는 이름입니다.</param>
      <returns>네임스페이스로 한정된 XML 이름을 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="attr">요청한 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="attr">요청한 특성을 나타내는 <see cref="T:System.Xml.XmlAttribute" />입니다.</param>
      <param name="qnames">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">deserialize되고 있는 <see cref="T:System.Object" />입니다.</param>
      <param name="elem">이벤트가 발생하는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="elem">이벤트가 발생하는 <see cref="T:System.Xml.XmlElement" />입니다.</param>
      <param name="qnames">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">deserialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="o">deserialize되는 개체입니다.</param>
      <param name="qnames">XML의 정규화된 이름을 쉼표로 구분한 목록입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />의 현재 위치에 대해 <see cref="T:System.Xml.XmlReader" /> 이벤트를 발생시킵니다.</summary>
      <param name="id">참조되지 않은 개체를 식별하는 데 사용되는 고유한 문자열입니다. 이후에 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> 속성을 통해 액세스할 수 있습니다.</param>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />에서 deserialize하려고 하는 개체입니다. 이후에 <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> 속성을 통해 액세스할 수 있습니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>SOAP로 인코딩된 루트가 아닌 XML 데이터에서 형식을 serialize하기 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 사용하는 대리자입니다.</summary>
      <param name="o">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 serialization을 제어하는 데 사용되는 추상 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>나중에 호출할 수 있도록 <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 구현과 이 구현에서 적용하는 형식을 저장합니다.</summary>
      <param name="type">serialize된 개체의 <see cref="T:System.Type" />입니다.</param>
      <param name="typeName">serialize된 개체 형식의 이름입니다.</param>
      <param name="typeNs">serialize된 개체 형식의 네임스페이스입니다.</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>XML 스키마 <see langword="choice" /> 요소 선언을 따르는 요소에 대한 예기치 못한 이름을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value">유효하지 않은 이름입니다.</param>
      <param name="identifier">이 이름이 속한 <see langword="choice" /> 요소 선언입니다.</param>
      <param name="name">요소의 예상되는 로컬 이름입니다.</param>
      <param name="ns">요소의 예상 네임스페이스입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>
        <see cref="T:System.InvalidOperationException" />가 멤버에 잘못 적용되었음을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />을 만듭니다. <see cref="T:System.Xml.XmlNode" /> 형식이거나 <see cref="T:System.Xml.XmlNode" />에서 파생된 멤버만 유효합니다.</summary>
      <param name="o">잘못된 멤버를 나타내는 개체입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>
        <see cref="T:System.InvalidOperationException" />가 멤버에 잘못 적용되었음을 나타내는 <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />을 만듭니다. <see cref="T:System.Xml.XmlNode" /> 형식이거나 <see cref="T:System.Xml.XmlNode" />에서 파생된 멤버만 유효합니다.</summary>
      <param name="type">잘못된 <see cref="T:System.Type" />입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>XML 스키마 <see langword="choice" /> 요소 선언이 적용되는 배열을 쓰는 동안 오류가 발생했음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type">serialize되는 형식입니다.</param>
      <param name="identifier">
        <see langword="choice" /> 요소 선언의 이름입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>잘못된 열거형 값에 대해 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value">잘못된 열거형을 나타내는 개체입니다.</param>
      <param name="typeName">XML 형식 이름입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>XML 요소의 값이 열거형 형식과 일치하지 않음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="value">유효하지 않은 값입니다.</param>
      <param name="elementName">잘못된 값을 가진 XML 요소의 이름입니다.</param>
      <param name="enumValue">유효한 값입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>XML 스키마 <see langword="any" /> 요소 선언을 따르는 XML 요소를 처리할 수 없음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="name">처리할 수 없는 XML 요소입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>serialize되는 형식이 올바른 방식으로 사용되지 않거나 예기치 않게 사용되었음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="o">serialize될 수 없는 형식의 개체입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>serialize되는 형식이 올바른 방식으로 사용되지 않거나 예기치 않게 사용되었음을 나타내는 <see cref="T:System.InvalidOperationException" />을 만듭니다.</summary>
      <param name="type">serialize될 수 없는 형식입니다.</param>
      <returns>새로 만들어진 예외입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>유효한 XML을 쓰는 데 <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> 메서드가 사용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> 메서드가 인코딩된 이름을 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Base 64 바이트 배열을 처리합니다.</summary>
      <param name="value">Base 64 <see cref="T:System.Byte" /> 배열입니다.</param>
      <returns>인수로 전달된 같은 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>입력 16진 바이트 배열에서 문자열을 생성합니다.</summary>
      <param name="value">문자열로 변환할 16진 바이트 배열입니다.</param>
      <returns>문자열로 변환된 바이트 배열 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>입력 <see cref="T:System.Char" />에서 문자열을 생성합니다.</summary>
      <param name="value">문자열로 변환할 <see cref="T:System.Char" />입니다.</param>
      <returns>문자열로 변환된 <see cref="T:System.Char" /> 값입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> 개체에서 문자열을 생성합니다.</summary>
      <param name="value">문자열로 변환할 <see cref="T:System.DateTime" />입니다.</param>
      <returns>날짜만 표시하고 시간은 표시하지 않는 <see cref="T:System.DateTime" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>입력 <see cref="T:System.DateTime" />에서 문자열을 생성합니다.</summary>
      <param name="value">문자열로 변환할 <see cref="T:System.DateTime" />입니다.</param>
      <returns>날짜와 시간을 표시하는 <see cref="T:System.DateTime" />의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>설정된 열거형 멤버를 나타내는 구분 식별자로 구성된 문자열을 생성합니다.</summary>
      <param name="value">일련의 비트 <see langword="OR" /> 연산인 열거형 값입니다.</param>
      <param name="values">열거형의 이름 값입니다.</param>
      <param name="ids">열거형의 상수 값입니다.</param>
      <returns>각 식별자가 설정된 열거자 목록의 멤버를 나타내는 구분 식별자로 구성된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>열거형의 열거자 목록에서 숫자 열거형 값과 이름 및 상수를 가져오고 설정된 열거형 멤버를 나타내는 구분 식별자로 구성된 문자열을 반환합니다.</summary>
      <param name="value">일련의 비트 <see langword="OR" /> 연산인 열거형 값입니다.</param>
      <param name="values">열거형의 값입니다.</param>
      <param name="ids">열거형의 상수입니다.</param>
      <param name="typeName">형식의 이름입니다.</param>
      <returns>구분 식별자로 구성된 문자열입니다. 각 항목은 비트 연산에서 설정한 값 중 하나입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> 개체에서 문자열을 생성합니다.</summary>
      <param name="value">문자열로 변환되는 <see cref="T:System.DateTime" />입니다.</param>
      <returns>시간만 표시하고 날짜는 표시하지 않는 <see cref="T:System.DateTime" /> 개체의 문자열 표현입니다</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>유효하지 않은 문자를 이스케이프 시퀀스로 바꿔 유효한 XML 이름을 인코딩합니다.</summary>
      <param name="name">XML 이름으로 사용될 문자열입니다.</param>
      <returns>인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>유효하지 않은 문자를 이스케이프 시퀀스로 바꿔 유효한 XML 로컬 이름을 인코딩합니다.</summary>
      <param name="ncName">로컬(비정규화된) XML 이름으로 사용될 문자열입니다.</param>
      <returns>인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>XML 이름을 인코딩합니다.</summary>
      <param name="nmToken">인코딩할 XML 이름입니다.</param>
      <returns>인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>공백으로 구분된 XML 이름의 시퀀스를 단일 XML 이름으로 인코딩합니다.</summary>
      <param name="nmTokens">인코딩할 XML 이름의 시퀀스를 공백으로 구분한 목록입니다.</param>
      <returns>인코딩된 문자열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름을 반환합니다.</summary>
      <param name="xmlQualifiedName">쓸 XML 데이터를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <returns>잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>잘못된 문자를 이스케이프 시퀀스로 바꿔 정규화된 XML 이름으로 쓸 수 있는 문자열을 생성합니다.</summary>
      <param name="xmlQualifiedName">쓸 XML 데이터를 나타내는 <see cref="T:System.Xml.XmlQualifiedName" />입니다.</param>
      <param name="ignoreEmpty">문자열에서 빈 공백을 무시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>잘못된 문자를 이스케이프 시퀀스로 바꾼 정규화된 XML 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> 대리자의 인스턴스를 초기화하여 SOAP 인코딩된 XML 데이터를 serialize합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>XML 문서에서 정규화된 이름을 생성할 때 사용되는 네임스페이스와 접두사가 포함된 정규화된 XML 이름 개체의 목록을 가져오거나 설정합니다.</summary>
      <returns>네임스페이스 및 접두사 쌍이 포함된 <see cref="T:System.Collections.ArrayList" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>동적으로 생성된 어셈블리를 이름별로 가져옵니다.</summary>
      <param name="assemblyFullName">어셈블리의 전체 이름입니다.</param>
      <returns>동적으로 생성된 어셈블리입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>SOAP 인코딩된 SOAP 메시지를 serialize하는 동안에만 개체 참조를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> 개체가 이름에 대해 네임스페이스가 지정되지 않은 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName">XML 특성의 로컬 이름입니다.</param>
      <param name="value">바이트 배열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />가 이름에 대해 네임스페이스가 지정되지 않은 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName">XML 특성의 로컬 이름입니다.</param>
      <param name="value">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> 개체가 XML 특성을 쓰도록 합니다.</summary>
      <param name="localName">XML 특성의 로컬 이름입니다.</param>
      <param name="ns">XML 특성의 네임스페이스입니다.</param>
      <param name="value">바이트 배열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>XML 특성을 씁니다.</summary>
      <param name="localName">XML 특성의 로컬 이름입니다.</param>
      <param name="ns">XML 특성의 네임스페이스입니다.</param>
      <param name="value">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>네임스페이스 접두사를 수동으로 지정하는 XML 특성을 씁니다.</summary>
      <param name="prefix">쓸 네임스페이스 접두사입니다.</param>
      <param name="localName">XML 특성의 로컬 이름입니다.</param>
      <param name="ns">접두사가 나타내는 네임스페이스입니다.</param>
      <param name="value">문자열로 표시되는 XML 특성의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>명명된 XML 요소 본문 내에 XML 노드 개체를 씁니다.</summary>
      <param name="node">쓸 XML 노드입니다. 자식 XML 요소일 수 있습니다.</param>
      <param name="name">쓸 부모 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 부모 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="any">XML 요소의 경우 노드가 XML 스키마 <see langword="true" /> 요소 선언을 따르면 <see langword="any" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> 개체가 명명된 XML 요소의 본문 내에 <see cref="T:System.Xml.XmlNode" /> 개체를 쓰도록 합니다.</summary>
      <param name="node">쓸 XML 노드입니다. 자식 XML 요소일 수 있습니다.</param>
      <param name="name">쓸 부모 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 부모 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="any">XML 요소의 경우 노드가 XML 스키마 <see langword="true" /> 요소 선언을 따르면 <see langword="any" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 정규화된 이름으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">네임스페이스로 한정된 경우 해당 접두사를 사용하여 요소 텍스트에서 쓸 이름입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">네임스페이스 한정자 없이 쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="ns">XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>XML 요소를 해당 본문에 지정된 값으로 씁니다.</summary>
      <param name="localName">XML 요소의 로컬 이름입니다.</param>
      <param name="value">XML 요소의 텍스트 값입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>본문이 비어 있는 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>본문이 비어 있는 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>
        <see langword="&lt;closing&gt;" /> 요소 태그를 씁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>
        <see langword="&lt;closing&gt;" /> 요소 태그를 씁니다.</summary>
      <param name="o">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>SOAP 인코딩된 <see langword="id" /> 요소에 표시되는 <see langword="multiRef" /> 특성을 씁니다.</summary>
      <param name="o">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>네임스페이스 선언 특성을 씁니다.</summary>
      <param name="xmlns">선언할 XML 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>본문에 유효한 정규화된 XML 이름이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 정규화된 XML 이름입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>본문에 유효한 정규화된 XML 이름이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 정규화된 XML 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 문자열입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>바이트 배열을 XML 요소의 본문으로 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 바이트 배열입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 문자열입니다.</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 특성에 쓰여질 XML 스키마 데이터 형식의 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>본문에 문자열이 포함되어 있는 XML 요소를 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>바이트 배열을 XML 요소의 본문으로 씁니다. <see cref="T:System.Xml.XmlWriter" />는 문자열 값이 <see langword="xsi:nil='true'" />인 경우 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>본문에 문자열이 포함되어 있는 XML 요소를 씁니다. 문자열의 값이 <see langword="xsi:nil='true'" />인 경우 <see cref="T:System.Xml.XmlWriter" />는 <see langword="null" /> 특성을 삽입합니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="value">XML 요소의 본문에 쓸 문자열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 특성을 사용하여 XML 요소를 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>지정된 개체의 <see langword="&lt;multiRef&gt;" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
      <param name="suppressReference">요소가 데이터가 포함된 다른 요소를 참조하도록 하는 대신 개체를 XML 요소로 직접 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>지정된 개체의 <see langword="multiRef" /> XML 요소에 대한 참조를 포함할 수 있는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">현재 XML 요소나 현재 요소가 참조하는 <see langword="multiRef" /> 요소에서 serialize되는 개체입니다.</param>
      <param name="ambientType">개체의 형식 매핑에 저장된 형식입니다(<see langword="typeof" /> 작업을 통해 직접 찾은 개체 형식과 다름).</param>
      <param name="suppressReference">요소가 데이터가 포함된 다른 요소를 참조하도록 하는 대신 개체를 XML 요소로 직접 serialize하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isNullable">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>
        <see cref="T:System.Xml.XmlWriter" />에 사용되고 있는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />를 가져오거나 설정합니다.</summary>
      <returns>클래스 인스턴스에서 사용하는 <see cref="T:System.Xml.XmlWriter" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>SOAP 메시지에서 SOAP 인코딩된 <see langword="multiRef" /> XML 요소로 개체를 serialize합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>지정된 개체의 <see langword="multiRef" /> 요소에 대한 참조를 포함하는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓰고 있는 참조 요소의 로컬 이름입니다.</param>
      <param name="ns">쓰고 있는 참조 요소의 네임스페이스입니다.</param>
      <param name="o">serialize되고 있는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>지정된 개체의 <see langword="multiRef" /> 요소에 대한 참조를 포함하는 SOAP 메시지 XML 요소를 씁니다.</summary>
      <param name="n">쓰고 있는 참조 요소의 로컬 이름입니다.</param>
      <param name="ns">쓰고 있는 참조 요소의 네임스페이스입니다.</param>
      <param name="o">serialize되고 있는 개체입니다.</param>
      <param name="isNullable">serialize할 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>SOAP 1.2 RPC 결과 요소를 지정된 정규화된 이름으로 본문에 씁니다.</summary>
      <param name="name">결과 본문의 로컬 이름입니다.</param>
      <param name="ns">결과 본문의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>사용자 지정 XML 서식을 XML 요소로 사용하는 개체를 씁니다.</summary>
      <param name="serializable">사용자 지정 XML 서식을 사용하는 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 인터페이스를 구현하는 개체입니다.</param>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 클래스 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlNode" />가 사용자 지정 XML 서식을 XML 요소로 사용하는 개체를 쓰도록 합니다.</summary>
      <param name="serializable">사용자 지정 XML 서식을 사용하는 <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 인터페이스를 구현하는 개체입니다.</param>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="isNullable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> 개체가 <see langword="true" />인 경우 <see langword="xsi:nil='true'" /> 특성을 쓰려면 <see langword="null" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="wrapped">여는 요소 태그 쓰기를 무시하려면 <see langword="true" />이고, 여는 요소 태그를 쓰려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>작성기가 XML 문서의 시작 부분에 위치할 경우 XML 선언을 씁니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="writePrefixed">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">XML 요소로 serialize되는 개체입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">XML 요소로 serialize되는 개체입니다.</param>
      <param name="writePrefixed">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>여는 요소 태그와 모든 특성을 씁니다.</summary>
      <param name="name">쓸 XML 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 XML 요소의 네임스페이스입니다.</param>
      <param name="o">XML 요소로 serialize되는 개체입니다.</param>
      <param name="writePrefixed">지정된 네임스페이스에 사용할 수 있는 요소 이름이 없는 경우 접두사와 함께 요소 이름을 쓰려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="xmlns">생성된 XML에 사용할 접두사와 네임스페이스 쌍을 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>텍스트 본문이 간단한 XML 스키마 데이터 형식의 값인 XML 요소를 씁니다.</summary>
      <param name="name">쓸 요소의 로컬 이름입니다.</param>
      <param name="ns">쓸 요소의 네임스페이스입니다.</param>
      <param name="o">요소 본문에서 serialize될 개체입니다.</param>
      <param name="xsiType">XML 요소가 <see langword="true" /> 특성을 사용하여 텍스트 값 형식을 명시적으로 지정하면 <see langword="xsi:type" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Base 64 바이트 배열을 씁니다.</summary>
      <param name="value">쓸 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>지정된 문자열 값을 씁니다.</summary>
      <param name="value">쓸 문자열의 값입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>지정된 <see cref="T:System.Xml.XmlNode" />를 XML 특성으로 씁니다.</summary>
      <param name="node">작성할 XML 노드입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>지정된 <see cref="T:System.Xml.XmlNode" /> 개체를 XML 특성으로 씁니다.</summary>
      <param name="node">작성할 XML 노드입니다.</param>
      <param name="container">WSDL(웹 서비스 기술 언어) 네임스페이스(“http://schemas.xmlsoap.org/wsdl/”)에서 <see langword="arrayType" /> 특성에 대해 정규화된 이름 값을 생성하는 데 사용되는 <see cref="T:System.Xml.Schema.XmlSchemaObject" /> 개체(또는 <see langword="null" />)입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>문서로 serialize되는 XML 요소에 대해 <see langword="xsi:type" /> 특성을 씁니다.</summary>
      <param name="name">XML 스키마 데이터 형식의 로컬 이름입니다.</param>
      <param name="ns">XML 스키마 데이터 형식의 네임스페이스입니다.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>XML 문서로 개체를 serialize하고 XML 문서에서 개체를 deserialize합니다. <see cref="T:System.Xml.Serialization.XmlSerializer" />를 사용하면 개체가 XML로 인코딩되는 방식을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 모든 XML 요소의 기본 네임스페이스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="defaultNamespace">모든 XML 요소에 사용할 기본 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</summary>
      <param name="type">serialize할 개체의 형식입니다.</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="overrides">
        <paramref name="type" /> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 형식의 개체를 XML 문서 인스턴스로 serialize하고 XML 문서 인스턴스를 <see cref="T:System.Object" /> 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Object" /> 클래스의 새 인스턴스를 초기화합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드에서 그 클래스를 다른 클래스로 재정의합니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="overrides">
        <paramref name="type" /> 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <param name="location">형식의 위치입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>지정된 형식의 개체를 XML 문서로 serialize하고 XML 문서를 지정된 형식의 개체로 deserialize할 수 있는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 새 인스턴스를 초기화합니다. 또한 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 serialize할 수 있는 개체의 형식입니다.</param>
      <param name="root">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>특정 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 초기화합니다.</summary>
      <param name="xmlTypeMapping">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>이 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 지정된 XML 문서를 deserialize할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <param name="xmlReader">deserialize할 문서를 가리키는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 가리키는 개체를 이 <see cref="T:System.Xml.XmlReader" />가 deserialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>serialize할 XML 문서를 읽는 데 사용되는 개체를 반환합니다.</summary>
      <returns>XML 문서를 읽는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
      <exception cref="T:System.NotImplementedException">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>파생 클래스에서 재정의되는 경우 개체를 serialize하는 데 사용되는 작성기를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> 클래스를 구현하는 인스턴스입니다.</returns>
      <exception cref="T:System.NotImplementedException">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>지정된 <see cref="T:System.IO.Stream" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="stream">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.Stream" />입니다.</param>
      <returns>deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>지정된 <see cref="T:System.IO.TextReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="textReader">deserialize할 XML 문서를 포함하는 <see cref="T:System.IO.TextReader" />입니다.</param>
      <returns>deserialize되는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>지정된 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="reader">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</param>
      <returns>deserialize된 개체입니다.</returns>
      <exception cref="T:System.NotImplementedException">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize합니다.</summary>
      <param name="xmlReader">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <returns>deserialize되는 <see cref="T:System.Object" />입니다.</returns>
      <exception cref="T:System.InvalidOperationException">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서와 인코딩 스타일을 deserialize합니다.</summary>
      <param name="xmlReader">deserialize할 XML 문서를 포함하는 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="encodingStyle">serialize된 XML의 인코딩 스타일입니다.</param>
      <returns>deserialize된 개체입니다.</returns>
      <exception cref="T:System.InvalidOperationException">deserialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 데이터를 사용하여 개체를 deserialize합니다.</summary>
      <param name="xmlReader">문서를 읽는 데 사용되는 <see cref="T:System.Xml.XmlReader" /> 클래스의 인스턴스입니다.</param>
      <param name="encodingStyle">사용되는 인코딩입니다.</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</param>
      <returns>deserialize되는 개체입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>지정된 <see cref="T:System.Xml.XmlReader" />에 포함된 XML 문서를 deserialize하고 deserialization을 수행하는 동안 발생하는 이벤트를 재정의할 수 있도록 합니다.</summary>
      <param name="xmlReader">deserialize할 문서가 포함된 <see cref="T:System.Xml.XmlReader" />입니다.</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> 클래스의 인스턴스입니다.</param>
      <returns>deserialize되는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열에서 만들어진 <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> 개체의 배열을 반환합니다.</summary>
      <param name="mappings">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />의 배열입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>지정된 매핑에 따라 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스를 반환합니다.</summary>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> 개체의 배열입니다.</param>
      <param name="type">deserialize된 개체의 <see cref="T:System.Type" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>형식 배열에서 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열을 반환합니다.</summary>
      <param name="types">
        <see cref="T:System.Type" /> 개체의 배열입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>지정된 형식을 serialize 또는 deserialize하기 위해 특별히 생성된 하나 또는 여러 버전의 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름을 반환합니다.</summary>
      <param name="type">deserialize하고 있는 <see cref="T:System.Type" />입니다.</param>
      <returns>형식에 대한 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 포함된 어셈블리의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>지정된 네임스페이스의 지정된 형식에 대한 serializer가 포함된 어셈블리의 이름을 반환합니다.</summary>
      <param name="type">원하는 <see cref="T:System.Type" />입니다.</param>
      <param name="defaultNamespace">형식의 네임스페이스입니다.</param>
      <returns>특별히 빌드된 serializer가 포함된 어셈블리의 이름입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 네임스페이스를 참조하는 지정된 <see cref="T:System.IO.Stream" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="stream">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.Stream" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="textWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.IO.TextWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</summary>
      <param name="textWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.IO.TextWriter" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces">생성된 XML 문서의 네임스페이스를 포함하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="writer">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />입니다.</param>
      <exception cref="T:System.NotImplementedException">하위 클래스에서 재정의되지 않은 메서드에 액세스하려는 경우</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스를 참조합니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o">serialize할 <see cref="T:System.Object" />입니다.</param>
      <param name="namespaces">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>지정된 개체를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />를 사용하여 XML 문서를 파일에 쓰며 지정된 네임스페이스 및 인코딩 스타일을 참조합니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o">serialize할 개체입니다.</param>
      <param name="namespaces">개체에서 참조하는 <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />입니다.</param>
      <param name="encodingStyle">serialize된 XML의 인코딩 스타일입니다.</param>
      <exception cref="T:System.InvalidOperationException">serialization 중 오류가 발생했습니다. <see cref="P:System.Exception.InnerException" /> 속성을 사용하여 원래 예외를 사용할 수 있습니다.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>지정된 <see cref="T:System.Object" />를 serialize하고 지정된 <see cref="T:System.Xml.XmlWriter" />, XML 네임스페이스 및 인코딩을 사용하여 XML 문서를 파일에 씁니다.</summary>
      <param name="xmlWriter">XML 문서를 쓰는 데 사용되는 <see cref="T:System.Xml.XmlWriter" />입니다.</param>
      <param name="o">serialize할 개체입니다.</param>
      <param name="namespaces">사용할 네임스페이스 및 접두사가 포함된 <see langword="XmlSerializerNamespaces" />의 인스턴스입니다.</param>
      <param name="encodingStyle">문서에서 사용되는 인코딩입니다.</param>
      <param name="id">SOAP로 인코딩된 메시지의 경우 id 특성을 생성하는 데 사용되는 기본 문자열입니다.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 특성이 나타날 때 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 요소를 발견하면 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 deserialization을 수행하는 동안 알 수 없는 형식의 XML 노드가 나타날 때 발생합니다.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>SOAP로 인코딩된 XML 스트림의 deserialization을 수행하는 동안 <see cref="T:System.Xml.Serialization.XmlSerializer" />가 사용되지 않았거나 참조되지 않은 인식할 수 있는 형식을 발견하면 발생합니다.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>웹 서비스 클라이언트 프록시에 적용되며 사용자 지정 serializer를 포함하는 어셈블리를 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>지정된 어셈블리 이름을 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblyName">어셈블리의 암호화되지 않은 단순한 이름입니다.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>지정된 어셈블리 이름과 어셈블리 위치를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assemblyName">어셈블리의 암호화되지 않은 단순한 이름입니다.</param>
      <param name="codeBase">어셈블리의 URL 위치인 문자열입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>특정 형식 집합을 위한 serializer가 포함된 어셈블리의 이름을 가져오거나 설정합니다.</summary>
      <returns>어셈블리의 암호화되지 않은 단순한 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>serializer가 포함된 어셈블리의 위치를 가져오거나 설정합니다.</summary>
      <returns>경로 또는 URI와 같이 어셈블리를 가리키는 위치입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>보다 효율적인 serialization을 위해 <see cref="T:System.Xml.Serialization.XmlSerializer" />의 형식화된 버전을 만듭니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>지정한 형식을 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <returns>지정한 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>지정한 형식 및 네임스페이스를 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="defaultNamespace">모든 XML 요소에 사용할 기본 네임스페이스입니다.</param>
      <returns>지정한 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>지정한 형식을 serialize하는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. 필드 또는 속성이 배열을 반환하는 경우 <paramref name="extraTypes" /> 매개 변수는 배열에 삽입될 수 있는 개체를 지정합니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>지정한 형식의 개체를 XML 문서로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="overrides">기본 serialization 동작을 재정의하는 필드를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>지정한 형식의 개체를 XML 문서 인스턴스로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="overrides">기본 serialization 동작을 재정의하는 필드를 포함하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>지정한 형식의 개체를 XML 문서 인스턴스로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. serialize되는 각 개체는 클래스의 인스턴스를 포함할 수 있으며, 이 오버로드는 다른 클래스로 재정의할 수 있습니다. 또한 이 오버로드는 모든 XML 요소의 기본 네임스페이스 및 XML 루트 요소로 사용할 클래스를 지정합니다.</summary>
      <param name="type">이 <see cref="T:System.Type" />가 serialize할 수 있는 개체의 <see cref="T:System.Xml.Serialization.XmlSerializer" />입니다.</param>
      <param name="overrides">형식 매개 변수에 지정된 클래스의 동작을 확장하거나 재정의하는 <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />입니다.</param>
      <param name="extraTypes">serialize할 추가 개체 형식으로 이루어진 <see cref="T:System.Type" /> 배열입니다.</param>
      <param name="root">XML 요소 속성을 정의하는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <param name="defaultNamespace">XML 문서에 있는 모든 XML 요소의 기본 네임스페이스입니다.</param>
      <param name="location">형식의 위치를 지정하는 경로입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>지정한 형식의 개체를 XML 문서로 serialize하고 그 반대의 작업도 수행하는 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다. XML 루트 요소를 나타내는 개체를 지정합니다.</summary>
      <param name="type">serialize할 <see cref="T:System.Type" />입니다.</param>
      <param name="root">XML 루트 요소를 나타내는 <see cref="T:System.Xml.Serialization.XmlRootAttribute" />입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />의 파생입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>특정 형식을 다른 형식에 매핑하는 개체를 사용하여 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생을 반환합니다.</summary>
      <param name="xmlTypeMapping">특정 형식을 다른 형식에 매핑하는 <see cref="T:System.Xml.Serialization.XmlTypeMapping" />입니다.</param>
      <returns>매핑된 형식을 serialize하기 위해 특별히 만든 <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스의 파생입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>미리 생성한 형식화된 serializer의 판독기, 작성기 및 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>형식을 serialize할 수 있는지 여부를 결정하는 값을 가져옵니다.</summary>
      <param name="type">serialize될 형식입니다.</param>
      <returns>형식을 serialize할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>지정된 형식에 대한 serializer를 반환합니다.</summary>
      <param name="type">serialize될 형식입니다.</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> 클래스에서 파생되는 형식의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>serializer에서 사용되는 XML 판독기 개체를 가져옵니다.</summary>
      <returns>XML 문서 또는 데이터 스트림을 읽는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationReader" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>데이터 스트림을 읽는 데 사용되는 메서드의 컬렉션을 가져옵니다.</summary>
      <returns>메서드가 포함된 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>어셈블리에 있는 형식화된 serializer의 컬렉션을 가져옵니다.</summary>
      <returns>형식화된 serializer가 들어 있는 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>데이터 스트림에 쓰는 데 사용되는 메서드의 컬렉션을 가져옵니다.</summary>
      <returns>메서드가 포함된 <see cref="T:System.Collections.Hashtable" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>serializer의 XML 작성기 개체를 가져옵니다.</summary>
      <returns>XML 데이터 스트림이나 문서에 쓰는 데 사용되는 <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>이 특성이 어셈블리에 적용되는 경우 코드가 serialization 인프라에서 생성되었고 성능 향상을 위해 다시 사용될 수 있음을 나타냅니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>지정된 형식에 대한 <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="type">serialize될 형식입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>어셈블리의 CLR(공통 언어 런타임) 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>어셈블리의 CLR(공통 언어 런타임) 네임스페이스를 포함하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>부모 어셈블리의 ID를 가져오거나 설정합니다.</summary>
      <returns>부모 어셈블리의 버전입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>serializer가 작동하는 형식을 가져오거나 설정합니다.</summary>
      <returns>serialize될 <see cref="T:System.Type" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>어셈블리의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns>어셈블리의 버전입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 특성 대상을 serialize할 때 생성되는 XML 스키마를 제어합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> 클래스의 새 인스턴스를 초기화하고 XML 형식의 이름을 지정합니다.</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" />가 클래스 인스턴스를 serialize할 때 생성하고 클래스 인스턴스를 deserialize할 때 인식하는 XML 형식의 이름입니다.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>결과 스키마 형식이 XSD 익명 형식인지 여부를 결정하는 값을 가져오거나 설정합니다.</summary>
      <returns>결과 스키마 형식이 XSD 익명 형식이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>XML 스키마 문서에 형식을 포함할지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>XML 스키마 문서에 형식을 포함하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>XML 형식의 네임스페이스를 가져오거나 설정합니다.</summary>
      <returns>XML 형식의 네임스페이스입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>XML 형식의 이름을 가져오거나 설정합니다.</summary>
      <returns>XML 형식의 이름입니다.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>한 형식과 다른 형식의 매핑을 포함합니다.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>네임스페이스와 형식이 포함된 정규화된 형식 이름입니다.</summary>
      <returns>정규화된 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>매핑된 개체의 형식 이름을 가져옵니다.</summary>
      <returns>매핑된 개체의 형식 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>매핑된 개체의 XML 요소 이름을 가져옵니다.</summary>
      <returns>매핑된 개체의 XML 요소 이름입니다. 기본값은 개체의 클래스 이름입니다.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>매핑된 개체의 XML 네임스페이스를 가져옵니다.</summary>
      <returns>매핑된 개체의 XML 네임스페이스입니다. 기본값은 빈 문자열("")입니다.</returns>
    </member>
  </members>
</doc>