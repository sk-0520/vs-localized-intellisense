<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Loader</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Metadata.AssemblyExtensions" />
    <member name="M:System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)">
      <param name="assembly" />
      <param name="blob" />
      <param name="length" />
    </member>
    <member name="T:System.Runtime.Loader.AssemblyDependencyResolver">
      <summary>프로그램에서 지정된 어셈블리의 종속성에 따라 어셈블리 및 네이티브 라이브러리를 경로로 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.#ctor(System.String)">
      <summary>구성 요소 어셈블리의 경로를 사용하여 <see cref="T:System.Runtime.Loader.AssemblyDependencyResolver" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="componentAssemblyPath">구성 요소 또는 플러그 인의 관리형 진입점에 대한 경로입니다.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveAssemblyToPath(System.Reflection.AssemblyName)">
      <summary>구성 요소의 종속성을 기반으로 지정된 어셈블리 이름을 사용하여 어셈블리의 경로를 확인합니다.</summary>
      <param name="assemblyName">확인할 어셈블리 이름입니다.</param>
      <returns>구성 요소의 deps.json 파일에서 지정된 이름을 사용하는 어셈블리의 경로입니다. 또는 어셈블리가 deps.json 파일에 없거나 deps.json 파일에 지정된 위치의 디스크에 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyDependencyResolver.ResolveUnmanagedDllToPath(System.String)">
      <summary>구성 요소의 종속성에 따라 지정된 이름을 사용하여 네이티브 라이브러리의 경로를 확인합니다.</summary>
      <param name="unmanagedDllName">확인할 네이티브 라이브러리의 이름입니다.</param>
      <returns>구성 요소의 deps.json 파일에서 지정된 이름과 현재 런타임 식별자를 사용하는 네이티브 라이브러리의 경로입니다. 또는 어셈블리가 deps.json 파일에 없거나 deps.json 파일에 지정된 위치의 디스크에 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext">
      <summary>어셈블리 로드 범위의 런타임 개념을 나타냅니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.Boolean)">
      <summary>언로드 사용 여부를 나타내는 값을 사용하여 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="isCollectible">
        <see langword="true" />를 사용하도록 설정하려면 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />이고, 그렇지 않으면 <see langword="false" />입니다. 언로드 활성화와 관련된 성능 비용이 발생하기 때문에 기본값은 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.#ctor(System.String,System.Boolean)">
      <summary>언로드 사용 여부를 나타내는 값과 이름을 사용하여 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">새 인스턴스의 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.Name" />에 대한 값입니다. 이 값은 <see langword="null" />일 수 있습니다.</param>
      <param name="isCollectible">
        <see langword="true" />를 사용하도록 설정하려면 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.Unload" />이고, 그렇지 않으면 <see langword="false" />입니다. 언로드 활성화와 관련된 성능 비용이 발생하기 때문에 기본값은 <see langword="false" />입니다.</param>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.All">
      <summary>모든 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 인스턴스 컬렉션을 반환합니다.</summary>
      <returns>모든 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 인스턴스의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Assemblies">
      <summary>
        <see cref="T:System.Reflection.Assembly" />에 로드된 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 인스턴스의 컬렉션을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />에 로드 된 <see cref="T:System.Reflection.Assembly" /> 인스턴스의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope">
      <summary>
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />에 단독으로 사용되는 반환 형식을 제공합니다. <see langword="using" /> 블록에서 <see cref="T:System.IDisposable" />로 사용하도록 되어 있습니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ContextualReflectionScope.Dispose">
      <summary>이 인스턴스를 반환한 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />에 대한 호출 이전 값으로 <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />를 설정합니다.</summary>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext">
      <summary>가장 최근에 호출로 인해 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />으로 설정된 <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />를 가져옵니다.</summary>
      <returns>
        <see cref="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection" />에 대 한 가장 최근의 호출로 설정 된 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />입니다. 이 값은 <see langword="null" />일 수 있습니다. 값은 <see cref="T:System.Threading.AsyncLocal`1" />에 저장 되므로 값은 비동기 컨텍스트에서만 고유 합니다.</returns>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Default">
      <summary>기본 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />를 가져옵니다. 기본 컨텍스트에는 주 애플리케이션 어셈블리 및 해당 정적 종속성이 포함됩니다.</summary>
      <returns>기본 어셈블리 로드 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection">
      <summary>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />를 <see langword="this" /><see cref="T:System.Runtime.Loader.AssemblyLoadContext" />로 설정합니다.</summary>
      <returns>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />의 이전 값을 복원하는 개체입니다. <see cref="T:System.IDisposable" /> 블록에서 <see langword="using" />로 사용하도록 되어 있습니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.EnterContextualReflection(System.Reflection.Assembly)">
      <summary>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />를 어셈블리를 로드한 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />로 설정합니다.</summary>
      <param name="activating">요청된 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 인스턴스를 확인하는 데 사용되는 어셈블리입니다.</param>
      <returns>
        <see cref="P:System.Runtime.Loader.AssemblyLoadContext.CurrentContextualReflectionContext" />의 이전 값을 복원하는 개체입니다. <see cref="T:System.IDisposable" /> 블록에서 <see langword="using" />로 사용하도록 되어 있습니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Finalize">
      <summary>가비지 수집에서 회수하기 전에 개체에서 리소스를 해제하고 다른 정리 작업을 수행할 수 있게 합니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetAssemblyName(System.String)">
      <summary>어셈블리 경로에 대한 <see cref="T:System.Reflection.AssemblyName" />을 가져옵니다.</summary>
      <param name="assemblyPath">어셈블리에 대 한 경로입니다.</param>
      <returns>
        <paramref name="assemblyPath" />에서 어셈블리에 대해 완전히 구문 분석된 어셈블리 이름을 포함하는 개체입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">어셈블리를 찾을 수 없습니다.</exception>
      <exception cref="T:System.BadImageFormatException">어셈블리는 유효한 어셈블리가 아닙니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.GetLoadContext(System.Reflection.Assembly)">
      <summary>지정된 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />를 포함하는 <see cref="T:System.Reflection.Assembly" />입니다.</summary>
      <param name="assembly">어셈블리입니다.</param>
      <returns>
        <paramref name="assembly" />를 포함하는 어셈블리 로드 컨텍스트입니다. 런타임에서 <paramref name="assembly" />를 제공하지 않으면 이 메서드는 null을 반환합니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" />가 <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.IsCollectible">
      <summary>이 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />가 수집 가능한지를 나타내는 값을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> 수집 가능한 경우를 <see langword="true" /> 합니다. 그렇지 않으면 <see langword="false" />합니다. 생성자에 값을 지정 하지 않으면 값이 <see langword="false" />됩니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Load(System.Reflection.AssemblyName)">
      <summary>파생된 클래스에서 재정의될 때 해당 <see cref="T:System.Reflection.AssemblyName" />에 따라 어셈블리를 확인하고 로드할 수 있습니다.</summary>
      <param name="assemblyName">로드될 어셈블리를 설명하는 개체입니다.</param>
      <returns>로드된 어셈블리 또는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyName(System.Reflection.AssemblyName)">
      <summary>해당 <see cref="T:System.Reflection.AssemblyName" />이 지정된 어셈블리를 확인하고 로드합니다.</summary>
      <param name="assemblyName">로드할 어셈블리를 설명하는 개체입니다.</param>
      <returns>로드된 어셈블리 또는 throw입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" />가 없는 경우</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" />는 유효한 어셈블리가 아닙니다.</exception>
      <exception cref="T:System.IO.FileLoadException">
        <paramref name="assemblyName" />과 일치하지 않는 어셈블리 또는 모듈이 로드되었습니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(System.String)">
      <summary>지정된 경로에 있는 어셈블리 파일의 내용을 로드합니다.</summary>
      <param name="assemblyPath">로드할 파일의 정규화된 경로입니다.</param>
      <returns>로드된 어셈블리입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 인수는 절대 경로가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyPath" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileLoadException">찾은 파일을 로드할 수 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyPath" /> 매개 변수가 빈 문자열("")이거나 없습니다.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" />는 유효한 어셈블리가 아닙니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromNativeImagePath(System.String,System.String)">
      <summary>지정된 경로에서 관리 어셈블리 파일의 네이티브 이미지 콘텐츠를 로드합니다.</summary>
      <param name="nativeImagePath">로드할 파일의 정규화된 경로입니다.</param>
      <param name="assemblyPath">로드할 IL 버전 파일의 정규화된 경로 또는 <see langword="null" />입니다.</param>
      <returns>로드된 어셈블리입니다.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="nativeImagePath" /> 인수는 절대 경로가 아닙니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyPath" /> 인수는 절대 경로가 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeImagePath" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.IO.FileLoadException">찾은 파일을 로드할 수 없습니다.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="nativeImagePath" /> 매개 변수가 빈 문자열("")이거나 없습니다.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyPath" />는 유효한 어셈블리가 아닙니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream)">
      <summary>관리 어셈블리가 포함된 COFF(공용 개체 파일 형식) 기반 이미지를 사용하여 어셈블리를 로드합니다.</summary>
      <param name="assembly">관리 어셈블리가 포함된 COFF 기반 이미지인 바이트 배열입니다.</param>
      <returns>로드된 어셈블리입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" />는 유효한 어셈블리가 아닙니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadFromStream(System.IO.Stream,System.IO.Stream)">
      <summary>관리 어셈블리가 포함되고 경우에 따라 어셈블리에 대한 기호가 포함되는 COFF(공용 개체 파일 형식) 기반 이미지를 사용하여 어셈블리를 로드합니다.</summary>
      <param name="assembly">관리 어셈블리가 포함된 COFF 기반 이미지인 바이트 배열입니다.</param>
      <param name="assemblySymbols">어셈블리의 기호를 나타내는 원시 바이트가 포함된 바이트 배열입니다.</param>
      <returns>로드된 어셈블리입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assembly" />는 유효한 어셈블리가 아닙니다.</exception>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll(System.String)">
      <summary>파생된 클래스가 이름별로 관리되지 않는 라이브러리를 로드할 수 있습니다.</summary>
      <param name="unmanagedDllName">관리되지 않는 라이브러리의 이름입니다. 일반적으로 해당 경로 또는 확장명이 없는 파일 이름입니다.</param>
      <returns>로드된 라이브러리에 대한 핸들 또는 <see cref="F:System.IntPtr.Zero" />입니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDllFromPath(System.String)">
      <summary>지정된 경로에서 관리되지 않는 라이브러리를 로드합니다.</summary>
      <param name="unmanagedDllPath">관리되지 않는 라이브러리의 경로입니다.</param>
      <returns>로드된 네이티브 라이브러리의 OS 핸들입니다.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="unmanagedDllPath" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="unmanagedDllPath" /> 인수가 비어 있거나 절대 경로가 아닙니다.</exception>
      <exception cref="T:System.DllNotFoundException">라이브러리를 찾을 수 없습니다.</exception>
      <exception cref="T:System.BadImageFormatException">라이브러리가 올바르지 않습니다.</exception>
    </member>
    <member name="P:System.Runtime.Loader.AssemblyLoadContext.Name">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />의 이름입니다. 이 값은 <see langword="null" />일 수 있습니다.</returns>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Resolving">
      <summary>이 어셈블리 로드 컨텍스트에 로드하려고 할 때 어셈블리를 확인하는 데 실패하는 경우 발생합니다.</summary>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll">
      <summary>네이티브 라이브러리를 확인하지 못할 경우에 발생합니다.</summary>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.SetProfileOptimizationRoot(System.String)">
      <summary>이 로드 컨텍스트의 최적화 프로필이 저장되는 루트 경로를 설정합니다.</summary>
      <param name="directoryPath">최적화 프로필이 저장되는 디렉터리의 전체 경로입니다.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.StartProfileOptimization(System.String)">
      <summary>지정된 프로필의 프로필 최적화를 시작합니다.</summary>
      <param name="profile">최적화 프로필의 이름입니다.</param>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.ToString">
      <summary>이 로드 컨텍스트의 문자열 표현을 반환합니다.</summary>
      <returns>이 로드 컨텍스트의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Runtime.Loader.AssemblyLoadContext.Unload">
      <summary>이 <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />의 언로드를 시작합니다.</summary>
      <exception cref="T:System.InvalidOperationException">언로드가 허용되지 않습니다.</exception>
    </member>
    <member name="E:System.Runtime.Loader.AssemblyLoadContext.Unloading">
      <summary>
        <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />를 언로드하는 경우 발생합니다.</summary>
    </member>
  </members>
</doc>