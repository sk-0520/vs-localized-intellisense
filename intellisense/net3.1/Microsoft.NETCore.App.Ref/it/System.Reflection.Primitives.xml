<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Emit.FlowControl">
      <summary>Descrive in che modo un'istruzione modifica il flusso di controllo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Branch">
      <summary>Istruzione branch.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Break">
      <summary>Istruzione break.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Call">
      <summary>Istruzione call.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Cond_Branch">
      <summary>Istruzione branch condizionale.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Meta">
      <summary>Fornisce informazioni su un'istruzione successiva. L'istruzione <see langword="Unaligned" /> di <see langword="Reflection.Emit.Opcodes" />, ad esempio, contiene <see langword="FlowControl.Meta" /> e specifica che l'istruzione di puntatore successiva potrebbe non essere allineata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Next">
      <summary>Indica il flusso di controllo normale.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Phi">
      <summary>Questo valore di enumeratore è riservato e non deve essere utilizzato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Return">
      <summary>Istruzione return.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Throw">
      <summary>Istruzione throw relativa alle eccezioni</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCode">
      <summary>Descrive un'istruzione del linguaggio intermedio (IL).</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Object)">
      <summary>Verifica se l'oggetto indicato è uguale all'oggetto <see langword="Opcode" />.</summary>
      <param name="obj">Oggetto da confrontare con questo oggetto.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di <see langword="Opcode" /> ed è uguale a questo oggetto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)">
      <summary>Indica se l'istanza corrente è uguale all'oggetto <see cref="T:System.Reflection.Emit.OpCode" /> specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Reflection.Emit.OpCode" /> da confrontare con l'istanza corrente.</param>
      <returns>
        <see langword="true" /> se il valore di <paramref name="obj" /> è uguale al valore dell'istanza corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.FlowControl">
      <summary>Caratteristiche del controllo di flusso dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Tipo di controllo del flusso.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.GetHashCode">
      <summary>Restituisce il codice hash generato per l'oggetto <see langword="Opcode" />.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Name">
      <summary>Nome dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Nome dell'istruzione IL.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indica se due strutture <see cref="T:System.Reflection.Emit.OpCode" /> sono uguali.</summary>
      <param name="a">Oggetto <see cref="T:System.Reflection.Emit.OpCode" /> da confrontare con <paramref name="b" />.</param>
      <param name="b">Oggetto <see cref="T:System.Reflection.Emit.OpCode" /> da confrontare con <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> è uguale a <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indica se due strutture <see cref="T:System.Reflection.Emit.OpCode" /> non sono uguali.</summary>
      <param name="a">Oggetto <see cref="T:System.Reflection.Emit.OpCode" /> da confrontare con <paramref name="b" />.</param>
      <param name="b">Oggetto <see cref="T:System.Reflection.Emit.OpCode" /> da confrontare con <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> non è uguale a <paramref name="b" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OpCodeType">
      <summary>Tipo di istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Tipo di istruzione del linguaggio intermedio (IL).</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OperandType">
      <summary>Tipo di operando di un'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Tipo di operando di un'istruzione IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Size">
      <summary>Dimensione dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Dimensione dell'istruzione IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPop">
      <summary>Modalità di estrazione dallo stack da parte dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Modalità di estrazione dallo stack da parte dell'istruzione IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPush">
      <summary>Modalità di inserimento dell'operando nello stack da parte dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Modalità di inserimento dell'operando nello stack da parte dell'istruzione IL.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.ToString">
      <summary>Restituisce l'oggetto <see langword="Opcode" /> come <see cref="T:System.String" />.</summary>
      <returns>Stringa contenente il nome di questo <see langword="Opcode" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Value">
      <summary>Ottiene il valore numerico dell'istruzione del linguaggio intermedio (IL).</summary>
      <returns>Sola lettura. Valore numerico dell'istruzione IL.</returns>
    </member>
    <member name="T:System.Reflection.Emit.OpCodes">
      <summary>Fornisce le rappresentazioni dei campi delle istruzioni MSIL (Microsoft Intermediate Language) per la creazione da parte dei membri della classe <see cref="T:System.Reflection.Emit.ILGenerator" />, ad esempio il metodo <see cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add">
      <summary>Somma due valori e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf">
      <summary>Somma due valori interi, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un">
      <summary>Somma due valori interi senza segno, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.And">
      <summary>Calcola l'operatore AND bit per bit di due valori e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Arglist">
      <summary>Restituisce un puntatore non gestito all'elenco di argomenti del metodo corrente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se due valori sono uguali.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se due valori sono uguali.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è maggiore o uguale al secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è maggiore o uguale al secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è maggiore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è maggiore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è maggiore del secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è maggiore del secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è maggiore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è maggiore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è minore o uguale al secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è minore o uguale al secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è minore o uguale al secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è minore o uguale al secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è minore del secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è minore del secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se il primo valore è minore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) se il primo valore è minore del secondo, durante il confronto di valori interi senza segno o valori float non ordinati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un">
      <summary>Trasferisce il controllo a un'istruzione di destinazione quando due valori interi senza segno o valori float non ordinati non sono uguali.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve) quando due valori interi senza segno o valori float non ordinati non sono uguali.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Box">
      <summary>Converte un tipo di valore in un riferimento a un oggetto di tipo <see langword="O" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br">
      <summary>Trasferisce il controllo a un'istruzione di destinazione in modo incondizionato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione in modo incondizionato (forma breve).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Break">
      <summary>Segnala a Common Language Infrastructure (CLI) di indicare al debugger che è stato raggiunto un punto di interruzione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se <paramref name="value" /> è <see langword="false" />, un riferimento null (<see langword="Nothing" /> in Visual Basic) oppure zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se <paramref name="value" /> è <see langword="false" />, un riferimento null oppure zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue">
      <summary>Trasferisce il controllo a un'istruzione di destinazione se <paramref name="value" /> è <see langword="true" />, diverso da null o da zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue_S">
      <summary>Trasferisce il controllo a un'istruzione di destinazione (forma breve), se <paramref name="value" /> è <see langword="true" />, diverso da null oppure diverso da zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Call">
      <summary>Chiama il metodo indicato dal descrittore di metodo passato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Calli">
      <summary>Chiama il metodo indicato nello stack di valutazione, come un puntatore a un punto di ingresso, con gli argomenti descritti da una convenzione di chiamata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Callvirt">
      <summary>Chiama un metodo ad associazione tardiva su un oggetto, inserendo il valore restituito nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Castclass">
      <summary>Tenta di eseguire il cast di un oggetto passato per riferimento alla classe specificata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ceq">
      <summary>Confronta due valori. Se tali valori sono uguali, nello stack di valutazione viene inserito il valore intero 1 <see langword="(int32" />); in caso contrario, viene inserito 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt">
      <summary>Confronta due valori. Se il primo valore è maggiore del secondo, nello stack di valutazione viene inserito il valore intero 1 <see langword="(int32" />); in caso contrario, viene inserito 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt_Un">
      <summary>Confronta due valori senza segno o non ordinati. Se il primo valore è maggiore del secondo, nello stack di valutazione viene inserito il valore intero 1 <see langword="(int32" />); in caso contrario, viene inserito 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ckfinite">
      <summary>Genera un'eccezione <see cref="T:System.ArithmeticException" /> se il valore non è un numero finito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt">
      <summary>Confronta due valori. Se il primo valore è inferiore al secondo, nello stack di valutazione viene inserito il valore intero 1 <see langword="(int32" />); in caso contrario, viene inserito 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt_Un">
      <summary>Confronta i due valori senza segno o non ordinati <paramref name="value1" /> e <paramref name="value2" />. Se <paramref name="value1" /> è minore di <paramref name="value2" />, nello stack di valutazione viene inserito il valore intero 1 <see langword="(int32" />); in caso contrario, viene inserito 0 (<see langword="int32" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Constrained">
      <summary>Vincola il tipo su cui viene eseguita una chiamata al metodo virtuale.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I1">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="int8" />, quindi lo estende, aggiungendo spazi, a <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I2">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="int16" />, quindi lo estende, aggiungendo spazi, a <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I4">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I8">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="native int" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="native int" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="int8" /> con segno e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="int8" /> con segno e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="int16" /> con segno e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="int16" /> con segno e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="int32" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="int32" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="int64" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="int64" /> con segno, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="unsigned native int" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="unsigned native int" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="unsigned int8" /> e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="unsigned int8" /> e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="unsigned int16" /> e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="unsigned int16" /> e lo estende a <see langword="int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="unsigned int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="unsigned int32" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8">
      <summary>Converte il valore con segno all'inizio dello stack di valutazione in <see langword="unsigned int64" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un">
      <summary>Converte il valore senza segno all'inizio dello stack di valutazione in <see langword="unsigned int64" />, generando un'eccezione <see cref="T:System.OverflowException" /> in caso di overflow.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R_Un">
      <summary>Converte il valore intero senza segno all'inizio dello stack di valutazione in <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R4">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R8">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="float64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="unsigned native int" /> e lo estende a <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U1">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="unsigned int8" /> e lo estende a <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U2">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="unsigned int16" /> e lo estende a <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U4">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="unsigned int32" /> e lo estende a <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U8">
      <summary>Converte il valore all'inizio dello stack di valutazione in <see langword="unsigned int64" /> e lo estende a <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpblk">
      <summary>Copia un numero specificato di byte da un indirizzo di origine a un indirizzo di destinazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpobj">
      <summary>Copia il tipo di valore individuato in corrispondenza dell'indirizzo di un oggetto di tipo <see langword="&amp;" />, <see langword="" /> o <see langword="native int" /> nell'indirizzo dell'oggetto di destinazione, di tipo <see langword="&amp;" />, <see langword="" /> o <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div">
      <summary>Divide due valori e inserisce il risultato come valore in virgola mobile (di tipo <see langword="F" />) o quoziente (di tipo <see langword="int32" />) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div_Un">
      <summary>Divide due valori interi senza segno e inserisce il risultato (<see langword="int32" />) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Dup">
      <summary>Copia il valore corrente più in alto nello stack di valutazione e inserisce la copia nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfilter">
      <summary>Trasferisce il controllo dalla clausola <see langword="filter" /> di un'eccezione nuovamente al gestore di eccezioni di Common Language Infrastructure (CLI).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfinally">
      <summary>Trasferisce il controllo dalla clausola <see langword="fault" /> o <see langword="finally" /> di un blocco di eccezioni al gestore di eccezioni di Common Language Infrastructure (CLI).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initblk">
      <summary>Inizializza un blocco specificato di memoria in corrispondenza di un indirizzo specifico su una dimensione e un valore iniziale dati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initobj">
      <summary>Inizializza ciascun campo del tipo di valore in corrispondenza di un indirizzo specifico su un riferimento Null o uno 0 di tipo primitivo appropriato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Isinst">
      <summary>Verifica se un riferimento a un oggetto di tipo <see langword="O" /> è un'istanza di una classe particolare.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Jmp">
      <summary>Esce dal metodo corrente e passa a quello specificato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg">
      <summary>Carica un argomento (a cui fa riferimento un valore di indice specificato) nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_0">
      <summary>Carica l'argomento in corrispondenza dell'indice 0 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_1">
      <summary>Carica l'argomento in corrispondenza dell'indice 1 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_2">
      <summary>Carica l'argomento in corrispondenza dell'indice 2 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_3">
      <summary>Carica l'argomento in corrispondenza dell'indice 3 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_S">
      <summary>Carica l'argomento (a cui fa riferimento un indice specificato in forma breve) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga">
      <summary>Carica l'indirizzo di un argomento nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga_S">
      <summary>Carica l'indirizzo di un argomento, in forma breve, nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4">
      <summary>Inserisce un valore fornito di tipo <see langword="int32" /> nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_0">
      <summary>Inserisce il valore intero 0 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_1">
      <summary>Inserisce il valore intero 1 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_2">
      <summary>Inserisce il valore intero 2 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_3">
      <summary>Inserisce il valore intero 3 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_4">
      <summary>Inserisce il valore intero 4 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_5">
      <summary>Inserisce il valore intero 5 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_6">
      <summary>Inserisce il valore intero 6 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_7">
      <summary>Inserisce il valore intero 7 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_8">
      <summary>Inserisce il valore intero 8 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1">
      <summary>Inserisce il valore intero -1 nello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_S">
      <summary>Inserisce il valore fornito <see langword="int8" /> nello stack di valutazione come <see langword="int32" /> (forma breve).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I8">
      <summary>Inserisce un valore fornito di tipo <see langword="int64" /> nello stack di valutazione come <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R4">
      <summary>Inserisce un valore fornito di tipo <see langword="float32" /> nello stack di valutazione come tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R8">
      <summary>Inserisce un valore fornito di tipo <see langword="float64" /> nello stack di valutazione come tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem">
      <summary>Carica l'elemento in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come tipo specificato nell'istruzione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I">
      <summary>Carica l'elemento con tipo <see langword="native int" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I1">
      <summary>Carica l'elemento con tipo <see langword="int8" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I2">
      <summary>Carica l'elemento con tipo <see langword="int16" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I4">
      <summary>Carica l'elemento con tipo <see langword="int32" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I8">
      <summary>Carica l'elemento con tipo <see langword="int64" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R4">
      <summary>Carica l'elemento con tipo <see langword="float32" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R8">
      <summary>Carica l'elemento con tipo <see langword="float64" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_Ref">
      <summary>Carica l'elemento contenente un riferimento a un oggetto in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come tipo <see langword="O" /> (riferimento a un oggetto).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U1">
      <summary>Carica l'elemento con tipo <see langword="unsigned int8" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U2">
      <summary>Carica l'elemento con tipo <see langword="unsigned int16" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U4">
      <summary>Carica l'elemento con tipo <see langword="unsigned int32" /> in corrispondenza dell'indice di matrice specificato all'inizio dello stack di valutazione come <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelema">
      <summary>Carica l'indirizzo dell'elemento di matrice in corrispondenza di un indice di matrice specificato all'inizio dello stack di valutazione come tipo <see langword="&amp;" /> (puntatore gestito).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldfld">
      <summary>Trova il valore di un campo nell'oggetto il cui riferimento si trova attualmente nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldflda">
      <summary>Trova l'indirizzo di un campo nell'oggetto il cui riferimento si trova attualmente nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldftn">
      <summary>Inserisce un puntatore non gestito di tipo <see langword="native int" /> al codice nativo che implementa un metodo specifico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I">
      <summary>Carica indirettamente un valore di tipo <see langword="native int" /> come <see langword="native int" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I1">
      <summary>Carica indirettamente un valore di tipo <see langword="int8" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I2">
      <summary>Carica indirettamente un valore di tipo <see langword="int16" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I4">
      <summary>Carica indirettamente un valore di tipo <see langword="int32" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I8">
      <summary>Carica indirettamente un valore di tipo <see langword="int64" /> come <see langword="int64" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R4">
      <summary>Carica indirettamente un valore di tipo <see langword="float32" /> come un tipo <see langword="F" /> (float) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R8">
      <summary>Carica indirettamente un valore di tipo <see langword="float64" /> come un tipo <see langword="F" /> (float) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_Ref">
      <summary>Carica indirettamente un riferimento a un oggetto come un tipo <see langword="O" /> (riferimento a un oggetto) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U1">
      <summary>Carica indirettamente un valore di tipo <see langword="unsigned int8" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U2">
      <summary>Carica indirettamente un valore di tipo <see langword="unsigned int16" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U4">
      <summary>Carica indirettamente un valore di tipo <see langword="unsigned int32" /> come <see langword="int32" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldlen">
      <summary>Inserisce il numero di elementi di una matrice unidimensionale in base zero nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc">
      <summary>Carica la variabile locale in corrispondenza di un indice specifico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_0">
      <summary>Carica la variabile locale in corrispondenza dell'indice 0 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_1">
      <summary>Carica la variabile locale in corrispondenza dell'indice 1 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_2">
      <summary>Carica la variabile locale in corrispondenza dell'indice 2 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_3">
      <summary>Carica la variabile locale in corrispondenza dell'indice 3 nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_S">
      <summary>Carica la variabile locale in corrispondenza di un indice specifico nello stack di valutazione, forma breve.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca">
      <summary>Carica l'indirizzo della variabile locale in corrispondenza di un indice specifico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca_S">
      <summary>Carica l'indirizzo della variabile locale in corrispondenza di un indice specifico nello stack di valutazione, forma breve.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldnull">
      <summary>Inserisce un riferimento null di tipo <see langword="O" /> nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldobj">
      <summary>Copia l'oggetto tipo di valore a cui punta un indirizzo all'inizio dello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsfld">
      <summary>Inserisce il valore di un campo statico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsflda">
      <summary>Inserisce l'indirizzo di un campo statico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldstr">
      <summary>Inserisce un nuovo riferimento a un oggetto in un valore letterale stringa archiviato nei metadati.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldtoken">
      <summary>Converte un token di metadati nella relativa rappresentazione di runtime, inserendolo nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldvirtftn">
      <summary>Inserisce un puntatore non gestito di tipo (<see langword="native int" />) al codice nativo che implementa un particolare metodo virtual con un oggetto specificato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave">
      <summary>Esce da un'area protetta di codice, trasferendo il controllo in modo incondizionato a un'istruzione di destinazione specifica.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave_S">
      <summary>Esce da un'area protetta di codice, trasferendo il controllo in modo incondizionato a un'istruzione di destinazione (forma breve).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Localloc">
      <summary>Esegue l'allocazione di un numero di byte dal pool di memoria dinamica locale e inserisce l'indirizzo (un puntatore transitorio di tipo <see langword="*" />) del primo byte allocato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mkrefany">
      <summary>Inserisce un riferimento tipizzato a un'istanza di un tipo specifico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul">
      <summary>Moltiplica due valori e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf">
      <summary>Moltiplica due valori interi, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un">
      <summary>Moltiplica due valori interi senza segno, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Neg">
      <summary>Nega un valore e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newarr">
      <summary>Inserisce un riferimento a un oggetto in una matrice unidimensionale in base zero i cui elementi sono di un tipo specifico nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newobj">
      <summary>Crea un nuovo oggetto o una nuova istanza di un tipo di valore, inserendo un riferimento a un oggetto (di tipo <see langword="O" />) nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Nop">
      <summary>Riempie lo spazio se i codici operativi sono corretti. Non viene eseguita alcuna operazione significativa sebbene possa essere usato un ciclo di elaborazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Not">
      <summary>Calcola il complemento bit per bit del valore intero all'inizio dello stack e inserisce il risultato nello stack di valutazione come lo stesso tipo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Or">
      <summary>Calcola il complemento bit per bit dei due valori interi all'inizio dello stack e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Pop">
      <summary>Rimuove il valore attualmente all'inizio dello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix1">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix2">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix3">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix4">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix5">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix6">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix7">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefixref">
      <summary>Si tratta di un'istruzione riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Readonly">
      <summary>Specifica che la successiva operazione sull'indirizzo di matrice non comporta l'esecuzione di alcun controllo del tipo in fase di esecuzione e che viene restituito un puntatore gestito la cui modificabilità è limitata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanytype">
      <summary>Recupera il token di tipo incorporato in un riferimento tipizzato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanyval">
      <summary>Recupera l'indirizzo (di tipo <see langword="&amp;" />) incorporato in un riferimento tipizzato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem">
      <summary>Divide due valori e inserisce il resto nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem_Un">
      <summary>Divide due valori senza segno e inserisce il resto nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ret">
      <summary>Restituisce il risultato del metodo corrente, inserendo il valore restituito (se presente) dallo stack di valutazione del chiamato nello stack di valutazione del chiamante.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rethrow">
      <summary>Genera nuovamente l'eccezione corrente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shl">
      <summary>Sposta un valore intero verso sinistra (spostando gli zeri) di un numero specificato di bit, inserendo il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr">
      <summary>Sposta un valore intero verso destra (spostando il segno) di un numero specificato di bit, inserendo il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr_Un">
      <summary>Sposta un valore intero senza segno verso destra (spostando gli zeri) di un numero specificato di bit, inserendo il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sizeof">
      <summary>Inserisce la dimensione in byte del tipo di valore fornito nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg">
      <summary>Archivia il valore all'inizio dello stack di valutazione nello slot di argomento in corrispondenza di un indice specificato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg_S">
      <summary>Archivia il valore all'inizio dello stack di valutazione nello slot di argomento in corrispondenza di un indice specificato, forma breve.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore presente nello stack di valutazione, il cui tipo è specificato nell'istruzione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="native int" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I1">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="int8" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I2">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="int16" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I4">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="int32" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I8">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="int64" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R4">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="float32" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R8">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore <see langword="float64" /> sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_Ref">
      <summary>Sostituisce l'elemento di matrice in corrispondenza di un indice specificato con il valore di un riferimento a un oggetto (di tipo <see langword="O" />) sullo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stfld">
      <summary>Sostituisce il valore archiviato nel campo di un riferimento a un oggetto o puntatore con un nuovo valore.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I">
      <summary>Memorizza un valore di tipo <see langword="native int" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I1">
      <summary>Memorizza un valore di tipo <see langword="int8" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I2">
      <summary>Memorizza un valore di tipo <see langword="int16" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I4">
      <summary>Memorizza un valore di tipo <see langword="int32" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I8">
      <summary>Memorizza un valore di tipo <see langword="int64" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R4">
      <summary>Memorizza un valore di tipo <see langword="float32" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R8">
      <summary>Memorizza un valore di tipo <see langword="float64" /> in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_Ref">
      <summary>Archivia il valore di un riferimento a un oggetto in corrispondenza di un indirizzo fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc">
      <summary>Estrae il valore corrente dall'inizio dello stack di valutazione e lo archivia nell'elenco delle variabili locali in corrispondenza di un indice specificato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_0">
      <summary>Estrae il valore corrente dall'inizio dello stack di valutazione e lo archivia nell'elenco delle variabili locali in corrispondenza dell'indice 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_1">
      <summary>Preleva il valore corrente dall'inizio dello stack di valutazione e lo memorizza nell'elenco delle variabili locali in corrispondenza dell'indice 1.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_2">
      <summary>Preleva il valore corrente dall'inizio dello stack di valutazione e lo archivia nell'elenco delle variabili locali in corrispondenza dell'indice 2.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_3">
      <summary>Preleva il valore corrente dall'inizio dello stack di valutazione e lo memorizza nell'elenco delle variabili locali in corrispondenza dell'indice 3.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_S">
      <summary>Estrae il valore corrente dall'inizio dello stack di valutazione e lo memorizza nell'elenco delle variabili in corrispondenza di <paramref name="index" /> (forma breve).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stobj">
      <summary>Copia un valore di un tipo specificato dallo stack di valutazione in un indirizzo di memoria fornito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stsfld">
      <summary>Sostituisce il valore di un campo statico con un valore dallo stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub">
      <summary>Sottrae un valore da un altro e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf">
      <summary>Sottrae un valore intero da un altro, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un">
      <summary>Sottrae un valore intero senza segno da un altro, esegue un controllo dell'overflow e inserisce il risultato nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Switch">
      <summary>Implementa una tabella di collegamento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Tailcall">
      <summary>Esegue un'istruzione di chiamata al metodo con suffisso tale da rimuovere lo stack frame del metodo corrente prima dell'esecuzione dell'istruzione di chiamata effettiva.</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCodes.TakesSingleByteArgument(System.Reflection.Emit.OpCode)">
      <summary>Restituisce true o false se il codice operativo fornito accetta un argomento a byte singolo.</summary>
      <param name="inst">Istanza di un oggetto Opcode.</param>
      <returns>
        <see langword="true" /> o <see langword="false" />.</returns>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Throw">
      <summary>Genera l'oggetto eccezione attualmente nello stack di valutazione.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unaligned">
      <summary>Indica che un indirizzo attualmente all'inizio dello stack di valutazione potrebbe non essere allineato rispetto alla dimensione standard dell'istruzione <see langword="ldind" />, <see langword="stind" />, <see langword="ldfld" />, <see langword="stfld" />, <see langword="ldobj" />, <see langword="stobj" />, <see langword="initblk" /> o <see langword="cpblk" /> immediatamente successiva.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox">
      <summary>Converte la rappresentazione boxed di un tipo di valore nel relativo formato unboxed.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox_Any">
      <summary>Converte la rappresentazione boxed di un tipo specificato nell'istruzione nel relativo formato unboxed.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Volatile">
      <summary>Specifica che un indirizzo attualmente all'inizio dello stack di valutazione potrebbe essere volatile e che i risultati della lettura del percorso non possono essere memorizzati nella cache o che non è possibile eliminare archivi multipli in tale percorso.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Xor">
      <summary>Calcola l'operazione XOR bit per bit dei primi due valori dello stack di valutazione, inserendo il risultato nello stack di valutazione.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCodeType">
      <summary>Descrive i tipi delle istruzioni MSIL (Microsoft Intermediate Language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Annotation">
      <summary>Questo valore di enumeratore è riservato e non deve essere utilizzato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Macro">
      <summary>Si tratta di istruzioni MSIL utilizzate come sinonimi di altre istruzioni MSIL. Ad esempio, <see langword="ldarg.0" /> rappresenta l'istruzione <see langword="ldarg" /> con un argomento corrispondente a 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Nternal">
      <summary>Descrive un'istruzione MSIL riservata.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Objmodel">
      <summary>Descrive un'istruzione MSIL che si applica agli oggetti.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Prefix">
      <summary>Descrive un'istruzione di prefisso che consente di modificare il comportamento dell'istruzione che segue.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Primitive">
      <summary>Descrive un'istruzione incorporata.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OperandType">
      <summary>Descrive il tipo di operando dell'istruzione MSIL (Microsoft Intermediate Language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineBrTarget">
      <summary>L'operando è una destinazione di creazione di un ramo di tipo integer a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineField">
      <summary>L'operando è un token di metadati a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI">
      <summary>L'operando è un Integer a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI8">
      <summary>L'operando è un Integer a 64 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineMethod">
      <summary>L'operando è un token di metadati a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineNone">
      <summary>Nessun operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlinePhi">
      <summary>L'operando è riservato e non deve essere utilizzato.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineR">
      <summary>L'operando è un numero a virgola mobile IEEE a 64 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSig">
      <summary>L'operando è un token di firme di metadati a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineString">
      <summary>L'operando è un token di stringa di metadati a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSwitch">
      <summary>L'operando è un argomento integer a 32 bit di un'istruzione switch.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineTok">
      <summary>L'operando è un token <see langword="FieldRef" />, <see langword="MethodRef" /> oppure <see langword="TypeRef" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineType">
      <summary>L'operando è un token di metadati a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineVar">
      <summary>L'operando è un Integer a 16 bit contenente l'ordinale di un argomento o una variabile locale.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineBrTarget">
      <summary>L'operando è una destinazione di creazione di un ramo di tipo integer a 8 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineI">
      <summary>L'operando è un Integer a 8 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineR">
      <summary>L'operando è un numero a virgola mobile IEEE a 32 bit.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineVar">
      <summary>L'operando è un Integer a 8 bit contenente l'ordinale di un argomento o una variabile locale.</summary>
    </member>
    <member name="T:System.Reflection.Emit.PackingSize">
      <summary>Specifica uno dei due fattori che determinano l'allineamento in memoria dei campi quando un tipo viene sottoposto a marshalling.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size1">
      <summary>La dimensione di compressione è di 1 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size128">
      <summary>La dimensione di compressione è di 128 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size16">
      <summary>La dimensione di compressione è di 16 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size2">
      <summary>La dimensione di compressione è di 2 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size32">
      <summary>La dimensione di compressione è di 32 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size4">
      <summary>La dimensione di compressione è di 4 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size64">
      <summary>La dimensione di compressione è di 64 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size8">
      <summary>La dimensione di compressione è di 8 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Unspecified">
      <summary>La dimensione di compressione non è specificata.</summary>
    </member>
    <member name="T:System.Reflection.Emit.StackBehaviour">
      <summary>Descrive l'inserimento e l'estrazione di valori in uno stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop0">
      <summary>Nessun valore estratto dallo stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1">
      <summary>Estrae un valore dallo stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1_pop1">
      <summary>Estrae un valore dallo stack per il primo operando e un valore per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi">
      <summary>Estrae un Integer a 32 bit dallo stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_pop1">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo operando e un valore per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo operando e un Integer a 32 bit per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo, per il secondo e per il terzo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi8">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo operando e un Integer a 64 bit per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr4">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo operando e un numero a virgola mobile a 32 bit per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr8">
      <summary>Estrae dallo stack un Integer a 32 bit per il primo operando e un numero a virgola mobile a 64 bit per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref">
      <summary>Estrae un riferimento dallo stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_pop1">
      <summary>Estrae dallo stack un riferimento per il primo operando e un valore per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi">
      <summary>Estrae dallo stack un riferimento per il primo operando e un Integer a 32 bit per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un Integer a 32 bit per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un valore per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un Integer a 64 bit per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un Integer a 32 bit per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un numero a virgola mobile a 64 bit per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref">
      <summary>Estrae dallo stack un riferimento per il primo operando, un valore per il secondo e un riferimento per il terzo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push0">
      <summary>Nessun valore inserito nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1">
      <summary>Inserisce un valore nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1_push1">
      <summary>Inserisce nello stack un valore per il primo operando e un valore per il secondo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi">
      <summary>Inserisce un Integer a 32 bit nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi8">
      <summary>Inserisce un Integer a 64 bit nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr4">
      <summary>Inserisce un numero a virgola mobile a 32 bit nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr8">
      <summary>Inserisce un numero a virgola mobile a 64 bit nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushref">
      <summary>Inserisce un riferimento nello stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpop">
      <summary>Estrae una variabile dallo stack.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpush">
      <summary>Inserisce una variabile nello stack.</summary>
    </member>
  </members>
</doc>