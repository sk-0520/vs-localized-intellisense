<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Requests</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationManager">
      <summary>Administra los módulos de autenticación a los que se llama durante el proceso de autenticación del cliente.</summary>
    </member>
    <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Llama a cada uno de los módulos de autenticación registrados para encontrar el primer módulo que pueda responder a la solicitud de autenticación.</summary>
      <param name="challenge">Desafío devuelto por el recurso de Internet.</param>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> que inició el desafío de autenticación.</param>
      <param name="credentials">
        <see cref="T:System.Net.ICredentials" /> asociadas a esta solicitud.</param>
      <returns>Instancia de la clase <see cref="T:System.Net.Authorization" /> que contiene el resultado del intento de autorización. Si no hay ningún módulo de autenticación que responda al desafío, el método devuelve <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="challenge" /> es <see langword="null" />.
o bien
<paramref name="request" /> es <see langword="null" />.
O bien
<paramref name="credentials" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.CredentialPolicy">
      <summary>Obtiene o establece la directiva de credenciales que se utilizará para las solicitudes de recursos realizadas con la clase <see cref="T:System.Net.HttpWebRequest" />.</summary>
      <returns>Un objeto que implementa la interfaz <see cref="T:System.Net.ICredentialPolicy" /> que determina si se envían credenciales con las solicitudes. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <summary>Obtiene el diccionario que contiene los Nombres de entidad de seguridad de servicio (SPN) utilizados para identificar los hosts durante la autenticación Kerberos para las solicitudes realizadas utilizando <see cref="T:System.Net.WebRequest" /> y sus clases derivadas.</summary>
      <returns>Un objeto <see cref="T:System.Collections.Specialized.StringDictionary" /> en el que se puede escribir que contiene los valores SPN para las claves compuestas de información de host.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Realiza la autenticación previa de una solicitud.</summary>
      <param name="request">
        <see cref="T:System.Net.WebRequest" /> realizada en un recurso de Internet.</param>
      <param name="credentials">
        <see cref="T:System.Net.ICredentials" /> asociadas a la solicitud.</param>
      <returns>Es una instancia de la clase <see cref="T:System.Net.Authorization" /> si se puede realizar la autenticación previa de la solicitud; de lo contrario es <see langword="null" />. Si <paramref name="credentials" /> es <see langword="null" /> este método devuelve <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <summary>Registra un módulo de autenticación con el administrador de autenticación.</summary>
      <param name="authenticationModule">
        <see cref="T:System.Net.IAuthenticationModule" /> que se va a registrar con el administrador de autenticación.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.RegisteredModules">
      <summary>Obtiene una lista de módulos de autenticación registrados con el administrador de autenticación.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que permite leer los módulos de autenticación registrados.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <summary>Quita el módulo de autenticación especificado de la lista de módulos registrados.</summary>
      <param name="authenticationModule">
        <see cref="T:System.Net.IAuthenticationModule" /> que se va a quitar de la lista de módulos registrados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No está registrado el <see cref="T:System.Net.IAuthenticationModule" /> especificado.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <summary>Quita módulos de autenticación con el esquema de autenticación especificado de la lista de módulos registrados.</summary>
      <param name="authenticationScheme">Esquema de autenticación del módulo que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationScheme" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">No está registrado un módulo de este esquema de autenticación.</exception>
    </member>
    <member name="T:System.Net.Authorization">
      <summary>Contiene un mensaje de autenticación para un servidor de Internet.</summary>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Authorization" /> con el mensaje de autorización especificado.</summary>
      <param name="token">Mensaje de autorización cifrado esperado por el servidor.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Authorization" /> con el estado de finalización y el mensaje de autorización especificados.</summary>
      <param name="token">Mensaje de autorización cifrado esperado por el servidor.</param>
      <param name="finished">Estado de finalización del intento de autorización. Es <see langword="true" /> si se ha completado el intento de autorización; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Net.Authorization" /> con el identificador de grupo de conexión, el estado de finalización y el mensaje de autorización especificados.</summary>
      <param name="token">Mensaje de autorización cifrado esperado por el servidor.</param>
      <param name="finished">Estado de finalización del intento de autorización. Es <see langword="true" /> si se ha completado el intento de autorización; en caso contrario, es <see langword="false" />.</param>
      <param name="connectionGroupId">Un identificador único que puede utilizarse para crear conexiones cliente-servidor privadas, que sólo estén enlazadas a este esquema de autenticación.</param>
    </member>
    <member name="P:System.Net.Authorization.Complete">
      <summary>Obtiene el estado de finalización de la autorización.</summary>
      <returns>
        <see langword="true" /> si el proceso de autenticación ha finalizado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ConnectionGroupId">
      <summary>Obtiene un identificador único para conexiones específicas del usuario.</summary>
      <returns>Una cadena única que asocia una conexión a una entidad de autenticación.</returns>
    </member>
    <member name="P:System.Net.Authorization.Message">
      <summary>Obtiene el mensaje devuelto al servidor en respuesta a un desafío de autenticación.</summary>
      <returns>Mensaje que se devolverá al servidor como respuesta a un desafío de autenticación.</returns>
    </member>
    <member name="P:System.Net.Authorization.MutuallyAuthenticated">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que indica si ocurrió una autenticación mutua.</summary>
      <returns>Es <see langword="true" /> si se autenticaron cliente y servidor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ProtectionRealm">
      <summary>Obtiene o establece el prefijo de los identificadores URI que pueden autenticarse con la propiedad <see cref="P:System.Net.Authorization.Message" />.</summary>
      <returns>Matriz de cadenas que contiene prefijos URI.</returns>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary>Especifica el significado de los valores de tiempo que controlan el comportamiento del almacenamiento en caché para los recursos obtenidos mediante objetos <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary>Se puede obtener contenido de la caché hasta que sea anterior a la edad especificada con este valor.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> y <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> y <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary>Se puede tomar contenido de la caché después de haber expirado, hasta que transcurre el tiempo especificado con este valor.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary>Se puede obtener contenido de la caché si el tiempo restante antes de que expire es mayor o igual que el tiempo especificado con este valor.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary>Sólo para uso interno. El marco de trabajo iniciará una <see cref="T:System.ArgumentException" /> si intenta utilizar este miembro.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary>Especifica el comportamiento de almacenamiento en caché para los recursos obtenidos utilizando el protocolo de transferencia de hipertexto (HTTP).</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary>Atiende una solicitud utilizando el servidor. Ninguna entrada se obtiene de las memorias caché, ni se agrega o se quita de las memorias caché entre el cliente y servidor. Ninguna entrada se obtiene de las memorias caché, ni se agrega o se quita de las memorias caché entre el cliente y servidor. Éste es el comportamiento predeterminado de la caché especificado en el archivo de configuración del equipo que se distribuye con .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary>Atiende una solicitud de un recurso de la caché si el recurso está disponible; de lo contrario, envía una solicitud de un recurso al servidor. Si el elemento solicitado está disponible en cualquier caché entre el cliente y el servidor, la caché intermedia podría atender la solicitud.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary>Atiende una solicitud mediante el recurso almacenado en la memoria caché local; no envía una solicitud de un elemento que no se encuentre en la caché. Cuando se especifica este nivel de directiva de caché, se produce una excepción <see cref="T:System.Net.WebException" /> si el elemento no está en la caché del cliente.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary>Atiende una solicitud de un recurso de la caché del equipo local o de una caché remota en la red de área local. Si no se puede atender la solicitud, se produce una excepción <see cref="T:System.Net.WebException" />. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché <see langword="only-if-cached" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary>Atiende una solicitud de un recurso utilizando la copia almacenada en caché del recurso o enviando una solicitud del recurso al servidor. La directiva de caché actual y la antigüedad del contenido de la caché determinan la acción que se va a realizar. Éste es el nivel de caché que deben utilizar la mayoría de las aplicaciones.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary>Nunca atiende una solicitud utilizando los recursos de la caché y no almacena los recursos en memoria caché. Si el recurso está presente en la caché local, se quita. Este nivel de directiva indica a las memorias caché intermedias que deben quitar el recurso. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché no-cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary>Atiende una solicitud utilizando el servidor o una caché distinta de la caché local. Antes de que una caché intermedia pueda atender a la solicitud, esa caché debe revalidar su entrada almacenada en caché con el servidor. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché max-age = 0 y el encabezado <see langword="Pragma" /> no-cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary>Atiende una solicitud utilizando el servidor. La respuesta podría guardarse en la caché. En el protocolo de almacenamiento en caché HTTP, esto se logra utilizando la directiva de control de caché no-cache y el encabezado <see langword="Pragma" /> no-cache.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary>Compara la copia del recurso en la caché con la copia en el servidor. Si la copia en el servidor es más reciente, se usa para atender a la solicitud y reemplaza a la copia en la caché. Si la copia en la caché es la misma que la del servidor, se usa la copia almacenada en caché. En el protocolo de almacenamiento en caché HTTP, esto se logra mediante una solicitud condicional.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary>Define los requisitos de almacenamiento en memoria caché de una aplicación para los recursos obtenidos mediante objetos <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> utilizando la fecha de sincronización de caché especificada.</summary>
      <param name="cacheSyncDate">Objeto <see cref="T:System.DateTime" /> que especifica cuándo se deben volver a validar los recursos almacenados en caché.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> con los valores del control de edad y de tiempo especificados.</summary>
      <param name="cacheAgeControl">Uno de los siguientes valores de la enumeración <see cref="T:System.Net.Cache.HttpCacheAgeControl" />: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> o <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
      <param name="ageOrFreshOrStale">Valor de <see cref="T:System.TimeSpan" /> que especifica un período de tiempo.</param>
      <exception cref="T:System.ArgumentException">El valor especificado para el parámetro <paramref name="cacheAgeControl" /> no se puede utilizar con este constructor.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> utilizando la edad máxima especificada, el valor de control de edad y el valor de tiempo.</summary>
      <param name="cacheAgeControl">Valor <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
      <param name="maxAge">Valor de <see cref="T:System.TimeSpan" /> que especifica la edad máxima de los recursos.</param>
      <param name="freshOrStale">Valor de <see cref="T:System.TimeSpan" /> que especifica un período de tiempo.</param>
      <exception cref="T:System.ArgumentException">El valor especificado para el parámetro <paramref name="cacheAgeControl" /> no es válido.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> utilizando la edad máxima, el valor de control de edad, el valor de tiempo y la fecha de sincronización de caché especificados.</summary>
      <param name="cacheAgeControl">Valor <see cref="T:System.Net.Cache.HttpCacheAgeControl" />.</param>
      <param name="maxAge">Valor de <see cref="T:System.TimeSpan" /> que especifica la edad máxima de los recursos.</param>
      <param name="freshOrStale">Valor de <see cref="T:System.TimeSpan" /> que especifica un período de tiempo.</param>
      <param name="cacheSyncDate">Objeto <see cref="T:System.DateTime" /> que especifica cuándo se deben volver a validar los recursos almacenados en caché.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> mediante la directiva de caché especificada.</summary>
      <param name="level">Valor <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />.</param>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary>Obtiene la fecha de sincronización de caché para esta instancia.</summary>
      <returns>Un valor de <see cref="T:System.DateTime" /> establecido en la fecha especificada cuando se creó esta instancia. Si no se ha especificado ninguna fecha, el valor de esta propiedad es <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary>Obtiene el valor de <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> especificado cuando se creó esta instancia.</summary>
      <returns>Un valor de <see cref="T:System.Net.Cache.HttpRequestCacheLevel" /> que especifica el comportamiento de la caché para los recursos obtenidos mediante objetos <see cref="T:System.Net.HttpWebRequest" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary>Obtiene la edad máxima permitida para un recurso devuelto de la caché.</summary>
      <returns>Un valor de <see cref="T:System.TimeSpan" /> establecido en el valor de edad máximo especificado cuando se creó esta instancia. Si no se ha especificado ninguna fecha, el valor de esta propiedad es <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary>Obtiene el valor de antigüedad máximo permitido para un recurso devuelto de la caché.</summary>
      <returns>Un valor de <see cref="T:System.TimeSpan" /> establecido en el valor de antigüedad máximo especificado cuando se creó esta instancia. Si no se ha especificado ninguna fecha, el valor de esta propiedad es <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary>Obtiene la actualización mínima permitida para un recurso devuelto de la caché.</summary>
      <returns>Un valor de <see cref="T:System.TimeSpan" /> que especifica la actualización mínima especificada cuando se creó esta instancia. Si no se ha especificado ninguna fecha, el valor de esta propiedad es <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary>Devuelve una representación en forma de cadena de esta instancia.</summary>
      <returns>Valor <see cref="T:System.String" /> que contiene los valores de propiedades de esta instancia.</returns>
    </member>
    <member name="T:System.Net.FileWebRequest">
      <summary>Proporciona una implementación del sistema de archivos de la clase <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.FileWebRequest" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar el nuevo objeto <see cref="T:System.Net.FileWebRequest" />.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.FileWebRequest" />.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.Abort">
      <summary>Cancela una solicitud de un recurso de Internet.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica de un objeto <see cref="T:System.IO.Stream" /> que se va a utilizar para escribir datos.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.FileWebRequest.Method" /> es <c>GET</c> y la aplicación escribe en la secuencia.</exception>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> está utilizando la secuencia.</exception>
      <exception cref="T:System.ApplicationException">No hay ninguna secuencia de escritura disponible.</exception>
      <exception cref="T:System.Net.WebException">Se anuló <see cref="T:System.Net.FileWebRequest" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica de un recurso del sistema de archivos.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene la información de estado para esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> ya usa la secuencia.</exception>
      <exception cref="T:System.Net.WebException">Se anuló <see cref="T:System.Net.FileWebRequest" />.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ConnectionGroupName">
      <summary>Obtiene o establece el nombre del grupo de conexiones para la solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>Nombre del grupo de conexiones para la solicitud.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentLength">
      <summary>Obtiene o establece la longitud del contenido de los datos que se envían.</summary>
      <returns>Número de bytes de los datos de la solicitud que se envían.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.FileWebRequest.ContentLength" /> es menor que 0.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentType">
      <summary>Obtiene o establece el tipo de contenido de los datos que se envían. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>Tipo de contenido de los datos que se envían.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Credentials">
      <summary>Obtiene o establece las credenciales asociadas a esta solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> que contiene las credenciales de autenticación asociadas a esta solicitud. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Finaliza una solicitud asincrónica de una instancia de <see cref="T:System.IO.Stream" /> que la aplicación usa para escribir datos.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud pendiente de una secuencia.</param>
      <returns>Objeto <see cref="T:System.IO.Stream" /> que utiliza la aplicación para escribir datos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Termina una solicitud asincrónica de un recurso del sistema de archivos.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud pendiente de una respuesta.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del recurso del sistema de archivos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStream">
      <summary>Devuelve un objeto <see cref="T:System.IO.Stream" /> para escribir datos en el recurso del sistema de archivos.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> para escribir datos en el recurso del sistema de archivos.</returns>
      <exception cref="T:System.Net.WebException">Se agota el tiempo de espera de la solicitud.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStreamAsync">
      <summary>Devuelve una secuencia para escribir datos en el recurso del sistema de archivos como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> está utilizando la secuencia.
o bien
La secuencia ya ha recibido una respuesta anterior a la solicitud.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.FileWebRequest.Method" /> es GET o HEAD.</exception>
      <exception cref="T:System.Net.WebException">Se anuló <see cref="T:System.Net.FileWebRequest" />.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponse">
      <summary>Devuelve una respuesta a una solicitud del sistema de archivos.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del recurso del sistema de archivos.</returns>
      <exception cref="T:System.Net.WebException">Se ha agotado el tiempo de espera de la solicitud.</exception>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponseAsync">
      <summary>Devuelve una respuesta a una solicitud del sistema de archivos como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> ya usa la secuencia.</exception>
      <exception cref="T:System.Net.WebException">Se anuló <see cref="T:System.Net.FileWebRequest" />.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.Headers">
      <summary>Obtiene una colección de los pares de nombre y valor asociados a la solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene los pares de nombre/valor de encabezado que están asociados a esta solicitud.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Method">
      <summary>Obtiene o establece el método de protocolo utilizado para realizar la solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>Método de protocolo que se utilizará en esta solicitud.</returns>
      <exception cref="T:System.ArgumentException">El método no es válido.
o bien
El método no se admite.
O bien
Se especificaron varios métodos.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.PreAuthenticate">
      <summary>Obtiene o establece un valor que indica si se va a realizar la autenticación previa de una solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>Es <see langword="true" /> si se va a realizar la autenticación previa; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Proxy">
      <summary>Obtiene o establece el proxy de red que se va a utilizar para esta solicitud. Esta propiedad está reservada para un uso futuro.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> que indica el proxy de red que se va a utilizar para esta solicitud.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.RequestUri">
      <summary>Obtiene el identificador uniforme de recursos (URI) de la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene el identificador URI de la solicitud.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar <see cref="T:System.Net.FileWebRequest" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados de <see cref="T:System.Net.FileWebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el destino de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.FileWebRequest" />.</param>
    </member>
    <member name="P:System.Net.FileWebRequest.Timeout">
      <summary>Obtiene o establece el tiempo que transcurre hasta que se agota el tiempo de espera de la solicitud.</summary>
      <returns>Tiempo, en milisegundos, hasta que se agota el tiempo de espera de la solicitud o valor de <see cref="F:System.Threading.Timeout.Infinite" /> que indica que el tiempo de espera de la solicitud no se ha agotado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <summary>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Siempre inicia una <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">No se admiten las credenciales predeterminadas para los identificadores uniformes de recursos (URI) de archivo.</exception>
    </member>
    <member name="T:System.Net.FileWebResponse">
      <summary>Proporciona una implementación del sistema de archivos de la clase <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.FileWebResponse" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva instancia de <see cref="T:System.Net.FileWebResponse" />.</param>
      <param name="streamingContext">Instancia de la clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada que está asociada a la nueva instancia de <see cref="T:System.Net.FileWebResponse" />.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.Close">
      <summary>Cierra la secuencia de respuesta.</summary>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentLength">
      <summary>Obtiene la longitud del contenido en el recurso del sistema de archivos.</summary>
      <returns>Número de bytes devuelto del recurso del sistema de archivos.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentType">
      <summary>Obtiene el tipo de contenido del recurso del sistema de archivos.</summary>
      <returns>Valor "binary/octet-stream".</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.GetResponseStream">
      <summary>Devuelve el flujo de datos desde el recurso del sistema de archivos.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> para leer datos del recurso del sistema de archivos.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.Headers">
      <summary>Obtiene una colección de pares de nombre/valor de encabezado asociados a la respuesta.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene los pares de nombre/valor de encabezado que están asociados a la respuesta.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ResponseUri">
      <summary>Obtiene el identificador URI del recurso del sistema de archivos que proporcionó la respuesta.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene el identificador URI del recurso del sistema de archivos que proporcionó la respuesta.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.SupportsHeaders">
      <summary>Obtiene un valor que indica si la instancia <see cref="P:System.Net.FileWebResponse.Headers" /> admite la propiedad <see cref="T:System.Net.FileWebResponse" />.</summary>
      <returns>Es <see langword="true" /> si la propiedad <see cref="P:System.Net.FileWebResponse.Headers" /> se admite en la instancia <see cref="T:System.Net.FileWebResponse" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.FileWebResponse" /> actual.</summary>
      <param name="serializationInfo">Una clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados para <see cref="T:System.Net.FileWebResponse" />.</param>
      <param name="streamingContext">Un objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el destino de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.FileWebResponse" />.</param>
    </member>
    <member name="T:System.Net.FtpStatusCode">
      <summary>Especifica los códigos de estado devueltos para una operación del Protocolo de transferencia de archivos (FTP).</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.AccountNeeded">
      <summary>Especifica que se requiere una cuenta de usuario en el servidor.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <summary>Especifica que se produjo un error que impidió que la acción de la solicitud finalizara.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <summary>Especifica que la acción solicitada no se pudo realizar porque el tipo de página especificado es desconocido. Los tipos de página se describen en RFC 959, Sección 3.1.2.3.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <summary>Especifica que la acción solicitada no se puede realizar en el archivo especificado.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <summary>Especifica que la acción solicitada no se puede realizar en el archivo especificado porque no está disponible.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <summary>Especifica que la acción solicitada no se puede realizar en el archivo especificado porque no está disponible o ya se está utilizando.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <summary>Especifica que la acción solicitada no se puede realizar porque no hay espacio suficiente en el servidor.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <summary>Especifica que uno o varios argumentos del comando tienen un error de sintaxis.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.BadCommandSequence">
      <summary>Especifica que la secuencia de comandos no está en el orden correcto.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CantOpenData">
      <summary>Especifica que no se puede abrir la conexión de datos.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingControl">
      <summary>Especifica que el servidor está cerrando la conexión de control.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingData">
      <summary>Especifica que el servidor está cerrando la conexión de datos y que la acción del archivo solicitada se realizó satisfactoriamente.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandExtraneous">
      <summary>Especifica que el servidor no implementa el comando porque no se necesita.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <summary>Especifica que el servidor FTP no implementa el comando.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandOK">
      <summary>Especifica que el comando finalizó correctamente.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <summary>Especifica que el comando tiene un error de sintaxis o no es un comando reconocido por el servidor.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ConnectionClosed">
      <summary>Especifica que la conexión ha sido cerrada.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <summary>Especifica que la conexión de datos ya está abierta y se está iniciando la transferencia solicitada.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DirectoryStatus">
      <summary>Especifica el estado de un directorio.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.EnteringPassive">
      <summary>Especifica que el servidor está activando el modo pasivo.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionAborted">
      <summary>Especifica que no se puede realizar la acción solicitada.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionOK">
      <summary>Especifica que la acción de archivo solicitada finalizó correctamente.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileCommandPending">
      <summary>Especifica que la acción de archivo solicitada requiere información adicional.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileStatus">
      <summary>Especifica el estado de un archivo.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.LoggedInProceed">
      <summary>Especifica que el usuario ha iniciado sesión y puede enviar comandos.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <summary>Especifica que el servidor requiere que se proporcione una cuenta de inicio de sesión.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NotLoggedIn">
      <summary>Especifica que debe enviarse la información de inicio de sesión al servidor.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.OpeningData">
      <summary>Especifica que el servidor está abriendo la conexión de datos.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.PathnameCreated">
      <summary>Especifica que se ha creado el nombre de ruta de acceso solicitado.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.RestartMarker">
      <summary>Especifica que la respuesta contiene una respuesta de marcador de reinicio. El texto de la descripción que acompaña a este estado contiene el marcador de flujo de datos del usuario y el marcador del servidor.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <summary>Especifica que el servidor espera que se proporcione una contraseña.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendUserCommand">
      <summary>Especifica que el servidor está listo para una operación del inicio de sesión de usuario.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <summary>Especifica que el servidor acepta el mecanismo de autenticación especificado por el cliente, y el intercambio de datos de seguridad ha finalizado.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <summary>Especifica que el servicio no está disponible.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <summary>Especifica que el servicio ahora no está disponible; intente la solicitud más adelante.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SystemType">
      <summary>Especifica el nombre del tipo de sistema utilizando los nombres de sistema publicados en el documento Assigned Numbers publicado por la IANA (Internet Assigned Numbers Authority).</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.Undefined">
      <summary>Se incluye por integridad; los servidores no devuelven nunca este valor.</summary>
    </member>
    <member name="T:System.Net.FtpWebRequest">
      <summary>Implementa un cliente del Protocolo de transferencia de archivos (FTP).</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.Abort">
      <summary>Finaliza una operación de FTP asincrónica.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Empieza a abrir para escritura de forma asincrónica la secuencia de contenido de una solicitud.</summary>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación ha terminado.</param>
      <returns>Una instancia <see cref="T:System.IAsyncResult" /> que indica el estado de la operación.</returns>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a este método o <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> todavía no ha finalizado.</exception>
      <exception cref="T:System.Net.WebException">No se pudo establecer una conexión con el servidor FTP.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.FtpWebRequest.Method" /> no está establecida en <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Empieza enviando una solicitud y recibiendo de forma asincrónica una respuesta de un servidor FTP.</summary>
      <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que hace referencia al método que se invocará cuando la operación se complete.</param>
      <param name="state">Objeto definido por el usuario que contiene información sobre la operación. Este objeto se pasa al delegado de <paramref name="callback" /> cuando la operación ha terminado.</param>
      <returns>Una instancia <see cref="T:System.IAsyncResult" /> que indica el estado de la operación.</returns>
      <exception cref="T:System.InvalidOperationException">Ya se ha llamado a <see cref="M:System.Net.FtpWebRequest.GetResponse" /> o <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> para esta instancia.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ClientCertificates">
      <summary>Obtiene o establece los certificados usados para establecer una conexión cifrada con el servidor FTP.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> que contiene los certificados de cliente.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <summary>Obtiene o establece el nombre del grupo de conexiones que contiene el punto de servicio utilizado para enviar la solicitud actual.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene un nombre de grupo de conexión.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentLength">
      <summary>Obtiene o establece un valor omitido por la clase <see cref="T:System.Net.FtpWebRequest" />.</summary>
      <returns>Valor <see cref="T:System.Int64" /> que se debe omitir.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentOffset">
      <summary>Obtiene o establece un desplazamiento de bytes en el archivo que descargará esta solicitud.</summary>
      <returns>Una instancia de <see cref="T:System.Int64" /> que especifica el desplazamiento en el archivo, en bytes. El valor predeterminado es cero.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para esta propiedad es menor que cero.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentType">
      <summary>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">La información de tipo de contenido no se admite para FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Credentials">
      <summary>Obtiene o establece las credenciales utilizadas para la comunicación con el servidor FTP.</summary>
      <returns>Una instancia de <see cref="T:System.Net.ICredentials" />; o bien <see langword="null" />, si no se ha establecido la propiedad.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Se especificó un objeto <see cref="T:System.Net.ICredentials" /> de un tipo distinto de <see cref="T:System.Net.NetworkCredential" /> para una operación de conjunto.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <summary>Define la directiva de caché predeterminada para todas las solicitudes de FTP.</summary>
      <returns>Una <see cref="T:System.Net.Cache.RequestCachePolicy" /> que define la directiva de caché para las solicitudes de FTP.</returns>
      <exception cref="T:System.ArgumentNullException">El llamador intentó establecer esta propiedad en <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.EnableSsl">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica que se debe utilizar una conexión SSL.</summary>
      <returns>Es <see langword="true" /> si las transmisiones de datos y de control están cifradas; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">La conexión al servidor FTP ya ha sido establecida.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Finaliza una operación asincrónica pendiente iniciada con <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">El objeto <see cref="T:System.IAsyncResult" /> que se devuelve cuando se inicia la operación.</param>
      <returns>Una instancia de <see cref="T:System.IO.Stream" /> que admite escritura asociada a esta instancia.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se obtuvo mediante una llamada a <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se llamó a este método para la operación identificada por <paramref name="asyncResult" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Finaliza una operación asincrónica pendiente iniciada con <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</summary>
      <param name="asyncResult">El objeto <see cref="T:System.IAsyncResult" /> que se devuelve cuando se inicia la operación.</param>
      <returns>Referencia a <see cref="T:System.Net.WebResponse" /> que contiene una instancia de <see cref="T:System.Net.FtpWebResponse" />. Este objeto contiene la respuesta del servidor FTP a la solicitud.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> no se obtuvo mediante una llamada a <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ya se llamó a este método para la operación identificada por <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.Net.WebException">Se produjo un error utilizando un proxy HTTP.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetRequestStream">
      <summary>Recupera la secuencia utilizada para cargar datos a un servidor FTP.</summary>
      <returns>Una instancia de <see cref="T:System.IO.Stream" /> que admite escritura utilizada para almacenar los datos que la solicitud actual debe enviar al servidor.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha llamado a <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, que aún no ha finalizado.
o bien
Está habilitado un proxy HTTP y se ha intentado utilizar un comando FTP distinto de <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> o <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
      <exception cref="T:System.Net.WebException">No se pudo establecer una conexión con el servidor FTP.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.FtpWebRequest.Method" /> no está establecida en <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> o <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</exception>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetResponse">
      <summary>Devuelve la respuesta del servidor FTP.</summary>
      <returns>Referencia a <see cref="T:System.Net.WebResponse" /> que contiene una instancia de <see cref="T:System.Net.FtpWebResponse" />. Este objeto contiene la respuesta del servidor FTP a la solicitud.</returns>
      <exception cref="T:System.InvalidOperationException">Ya se ha llamado a <see cref="M:System.Net.FtpWebRequest.GetResponse" /> o <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> para esta instancia.
O bien
Está habilitado un proxy HTTP y se ha intentado utilizar un comando FTP distinto de <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> o <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> está establecida en <see langword="true" />, pero el servidor no admite esta característica.
O bien
Se especificó <see cref="P:System.Net.FtpWebRequest.Timeout" /> y el tiempo de espera ha expirado.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Headers">
      <summary>Obtiene un objeto <see cref="T:System.Net.WebHeaderCollection" /> vacío.</summary>
      <returns>Objeto <see cref="T:System.Net.WebHeaderCollection" /> vacío.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.KeepAlive">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica si la conexión de control al servidor FTP se cierra después de que la solicitud finalice.</summary>
      <returns>Es <see langword="true" /> si no se debe destruir la conexión al servidor; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Method">
      <summary>Obtiene o establece el comando que se envía al servidor FTP.</summary>
      <returns>Un valor <see cref="T:System.String" /> que contiene el comando FTP que se envía al servidor. El valor predeterminado es <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
      <exception cref="T:System.ArgumentException">El método no es válido.
o bien
El método no se admite.
O bien
Se especificaron varios métodos.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.PreAuthenticate">
      <summary>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">La autenticación previa no se admite para FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.Proxy">
      <summary>Obtiene o establece el servidor proxy que se utiliza para la comunicación con el servidor FTP.</summary>
      <returns>Una instancia de <see cref="T:System.Net.IWebProxy" /> responsable de las comunicaciones con el servidor FTP. En .NET Core, su valor es <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">Esta propiedad no puede establecerse en <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <summary>Obtiene o establece un tiempo de espera para una operación de lectura o escritura en una secuencia.</summary>
      <returns>Número de milisegundos antes de que se agote el tiempo de lectura o escritura. El valor predeterminado es 300.000 milisegundos (5 minutos).</returns>
      <exception cref="T:System.InvalidOperationException">Ya se ha enviado la solicitud.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de conjunto es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RenameTo">
      <summary>Obtiene o establece el nuevo nombre de un archivo al que se cambia el nombre.</summary>
      <returns>El nuevo nombre del archivo al que se cambia el nombre.</returns>
      <exception cref="T:System.ArgumentException">El valor especificado para una operación set es <see langword="null" /> o una cadena vacía.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.RequestUri">
      <summary>Obtiene el identificador URI solicitado por esta instancia.</summary>
      <returns>Una instancia de <see cref="T:System.Uri" /> que identifica un recurso al que se obtiene acceso mediante el Protocolo de transferencia de archivos.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ServicePoint">
      <summary>Obtiene el objeto <see cref="T:System.Net.ServicePoint" /> utilizado para conectarse al servidor FTP.</summary>
      <returns>Un objeto <see cref="T:System.Net.ServicePoint" /> que puede utilizarse para personalizar el comportamiento de la conexión.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Timeout">
      <summary>Obtiene o establece el número de milisegundos de espera de una solicitud.</summary>
      <returns>
        <see cref="T:System.Int32" /> Valor que contiene el número de milisegundos que se va a esperar antes de que se agote el tiempo de espera de una solicitud. El valor predeterminado es <see cref="F:System.Threading.Timeout.Infinite" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es menor que cero y no es <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseBinary">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que especifica el tipo de datos para las transferencias de archivos.</summary>
      <returns>Es <see langword="true" /> para indicar al servidor que los datos que se transfieren son binarios; es <see langword="false" /> para indicar que los datos son de texto. El valor predeterminado es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <summary>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Siempre inicia una excepción <see cref="T:System.NotSupportedException" />.</returns>
      <exception cref="T:System.NotSupportedException">Las credenciales predeterminadas no se admiten para FTP.</exception>
    </member>
    <member name="P:System.Net.FtpWebRequest.UsePassive">
      <summary>Obtiene o establece el comportamiento del proceso de transferencia de datos de una aplicación cliente.</summary>
      <returns>Es <see langword="false" /> si el proceso de transferencia de datos de la aplicación cliente realiza escuchas para detectar una conexión en el puerto de datos; o bien, es <see langword="true" /> si el cliente debe iniciar una conexión en el puerto de datos. El valor predeterminado es <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se ha especificado un nuevo valor en esta propiedad para una solicitud que ya está en curso.</exception>
    </member>
    <member name="T:System.Net.FtpWebResponse">
      <summary>Encapsula la respuesta de un servidor de Protocolo de transferencia de archivos (FTP) a una solicitud.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.BannerMessage">
      <summary>Obtiene el mensaje enviado por el servidor FTP cuando se establece una conexión antes del inicio de sesión.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el mensaje de pancarta enviado por el servidor; es <see cref="F:System.String.Empty" /> si no se envía ningún mensaje.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.Close">
      <summary>Libera los recursos mantenidos por la respuesta.</summary>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentLength">
      <summary>Obtiene la longitud de los datos recibidos del servidor FTP.</summary>
      <returns>Valor <see cref="T:System.Int64" /> que contiene el número de bytes de datos recibidos desde el servidor FTP.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentType">
      <summary>Devuelve <see cref="T:System.NotImplementedException" /> en todos los casos</summary>
      <returns>Devuelve <see cref="T:System.NotImplementedException" /> en todos los casos</returns>
      <exception cref="T:System.NotImplementedException">En todos los casos.</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.ExitMessage">
      <summary>Obtiene el mensaje enviado por el servidor cuando la sesión de FTP está finalizando.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el mensaje de salida enviado por el servidor; es <see cref="F:System.String.Empty" /> si no se envía ningún mensaje.</returns>
    </member>
    <member name="M:System.Net.FtpWebResponse.GetResponseStream">
      <summary>Recupera la secuencia que contiene los datos de respuesta enviados desde un servidor FTP.</summary>
      <returns>Instancia de <see cref="T:System.IO.Stream" /> legible que contiene los datos devueltos con la respuesta; de lo contrario, es <see cref="F:System.IO.Stream.Null" /> si el servidor no devuelve datos de respuesta.</returns>
      <exception cref="T:System.InvalidOperationException">La respuesta no devolvió un flujo de datos.</exception>
    </member>
    <member name="P:System.Net.FtpWebResponse.Headers">
      <summary>Obtiene un objeto <see cref="T:System.Net.WebHeaderCollection" /> vacío.</summary>
      <returns>Objeto <see cref="T:System.Net.WebHeaderCollection" /> vacío.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.LastModified">
      <summary>Obtiene la fecha y hora en que se modificó por última vez un archivo en un servidor FTP.</summary>
      <returns>
        <see cref="T:System.DateTime" /> que contiene la fecha y hora de última modificación de un archivo.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ResponseUri">
      <summary>Obtiene el identificador URI que envió la respuesta a la solicitud.</summary>
      <returns>Instancia de <see cref="T:System.Uri" /> que identifica el recurso asociado a esta respuesta.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusCode">
      <summary>Obtiene el código de estado más reciente que se ha enviado desde el servidor FTP.</summary>
      <returns>Valor <see cref="T:System.Net.FtpStatusCode" /> que indica el código de estado más reciente que se ha devuelto con esta respuesta.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusDescription">
      <summary>Obtiene texto que describe un código de estado enviado desde el servidor FTP.</summary>
      <returns>Instancia de <see cref="T:System.String" /> que contiene el código de estado y el mensaje devuelto con esta respuesta.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.SupportsHeaders">
      <summary>Obtiene un valor que indica si la instancia <see cref="P:System.Net.FtpWebResponse.Headers" /> admite la propiedad <see cref="T:System.Net.FtpWebResponse" />.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.
Es <see langword="true" /> si la propiedad <see cref="P:System.Net.FtpWebResponse.Headers" /> se admite en la instancia <see cref="T:System.Net.FtpWebResponse" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.WelcomeMessage">
      <summary>Obtiene el mensaje enviado por el servidor FTP cuando la autenticación ha finalizado.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el mensaje de bienvenida enviado por el servidor; es <see cref="F:System.String.Empty" /> si no se envía ningún mensaje.</returns>
    </member>
    <member name="T:System.Net.GlobalProxySelection">
      <summary>Contiene una instancia del proxy global predeterminado para todas las solicitudes HTTP.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.GlobalProxySelection" />.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <summary>Devuelve una instancia de proxy vacía.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> que no contiene ninguna información.</returns>
    </member>
    <member name="P:System.Net.GlobalProxySelection.Select">
      <summary>Obtiene o establece el proxy HTTP global.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> que se utiliza en cada llamada a <see cref="M:System.Net.HttpWebRequest.GetResponse" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación de conjunto era <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de llamada no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="T:System.Net.HttpContinueDelegate">
      <summary>Representa el método que envía una notificación a los llamadores siempre que el cliente recibe una respuesta de continuar.</summary>
      <param name="StatusCode">Valor numérico del estado HTTP del servidor.</param>
      <param name="httpHeaders">Encabezados devueltos con la respuesta 100-continue del servidor.</param>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Proporciona una implementación específica de HTTP de la clase <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpWebRequest" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />. Este constructor está obsoleto.</summary>
      <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información requerida para serializar el nuevo objeto <see cref="T:System.Net.HttpWebRequest" />.</param>
      <param name="streamingContext">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.HttpWebRequest" />.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Cancela una solicitud de un recurso de Internet.</summary>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Accept" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="Accept" />. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <summary>Agrega un encabezado de intervalo de bytes a una solicitud de un intervalo específico desde el principio o el final de los datos solicitados.</summary>
      <param name="range">Punto inicial o final del intervalo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <summary>Agrega un encabezado de intervalo de bytes a la solicitud de un intervalo especificado.</summary>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.
O bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <summary>Agrega un encabezado de intervalo de bytes a una solicitud de un intervalo específico desde el principio o el final de los datos solicitados.</summary>
      <param name="range">Punto inicial o final del intervalo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <summary>Agrega un encabezado de intervalo de bytes a la solicitud de un intervalo especificado.</summary>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.
o bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <summary>Agrega un encabezado Range a una solicitud de un intervalo específico del principio o del final de los datos solicitados.</summary>
      <param name="rangeSpecifier">Descripción del intervalo.</param>
      <param name="range">Punto inicial o final del intervalo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <summary>Agrega un encabezado de intervalo a una solicitud de un intervalo especificado.</summary>
      <param name="rangeSpecifier">Descripción del intervalo.</param>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.
o bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <summary>Agrega un encabezado Range a una solicitud de un intervalo específico del principio o del final de los datos solicitados.</summary>
      <param name="rangeSpecifier">Descripción del intervalo.</param>
      <param name="range">Punto inicial o final del intervalo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <summary>Agrega un encabezado de intervalo a una solicitud de un intervalo especificado.</summary>
      <param name="rangeSpecifier">Descripción del intervalo.</param>
      <param name="from">Posición en la que se va a empezar a enviar datos.</param>
      <param name="to">Posición en la que se va a terminar de enviar datos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> es mayor que <paramref name="to" />.
O bien
<paramref name="from" /> o <paramref name="to" /> es menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se pudo agregar el encabezado de intervalo.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Address">
      <summary>Obtiene el identificador URI del recurso de Internet que respondió realmente a la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que identifica el recurso de Internet que responde realmente a la solicitud. El valor predeterminado es el identificador URI utilizado por el método <see cref="M:System.Net.WebRequest.Create(System.String)" /> para inicializar la solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>Obtiene o establece un valor que indica si la solicitud debe seguir las respuestas de redirección.</summary>
      <returns>
        <see langword="true" /> si la solicitud debe seguir automáticamente las respuestas de redirección recibidas del recurso de Internet; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>Obtiene o establece un valor que indica si los datos recibidos del recurso de Internet deben almacenarse en el búfer.</summary>
      <returns>
        <see langword="true" /> para habilitar el almacenamiento en búfer de los datos recibidos del recurso de Internet; <see langword="false" /> para deshabilitar el almacenamiento en búfer. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary>Obtiene o establece un valor que indica si se deben almacenar en el búfer los datos enviados al recurso de Internet.</summary>
      <returns>
        <see langword="true" /> para habilitar el almacenamiento de los datos enviados al recurso de Internet en el búfer; <see langword="false" /> para deshabilitar el almacenamiento en el búfer. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <summary>Obtiene o establece el tipo de descompresión que se utiliza.</summary>
      <returns>Objeto <see cref="T:System.Net.DecompressionMethods" /> que indica el tipo de descompresión que se utiliza.</returns>
      <exception cref="T:System.InvalidOperationException">El estado del objeto actual no permite establecer esta propiedad.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica de un objeto <see cref="T:System.IO.Stream" /> que se va a utilizar para escribir datos.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto de estado de esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.HttpWebRequest.Method" /> es GET o HEAD.
o bien
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> es <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> es <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.Method" /> es POST o PUT.</exception>
      <exception cref="T:System.InvalidOperationException">La secuencia ya la está usando una llamada anterior a <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.
o bien
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en un valor y <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.
O bien
El grupo de subprocesos se está quedando sin subprocesos.</exception>
      <exception cref="T:System.NotSupportedException">El validador de caché de solicitud indicó que la respuesta para esta solicitud se puede atender desde la memoria caché; sin embargo, las solicitudes que escriben datos no deben usar la caché. Esta excepción puede producirse si usa un validador de caché personalizado que se implementa incorrectamente.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.</exception>
      <exception cref="T:System.ObjectDisposedException">En una aplicación de .NET Compact Framework, no se obtuvo una secuencia de solicitud con longitud de contenido cero y se cerró correctamente. Para más información sobre cómo controlar solicitudes de longitud de contenido cero, vea Programación para redes en .NET Compact Framework.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Inicia una solicitud asincrónica de un recurso de Internet.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto de estado de esta solicitud.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica de una respuesta.</returns>
      <exception cref="T:System.InvalidOperationException">La secuencia ya la está usando una llamada anterior a <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.
o bien
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en un valor y <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.
o bien
El grupo de subprocesos se está quedando sin subprocesos.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> es GET o HEAD y <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es mayor o igual que cero o <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="true" />.
O bien
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> es <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.Method" /> es POST o PUT.
o bien
La <see cref="T:System.Net.HttpWebRequest" /> tiene un cuerpo de entidad, pero el método <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> se invoca sin llamar al método <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.
o bien
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> es mayor que cero, pero la aplicación no escribe todos los datos prometidos.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ClientCertificates">
      <summary>Obtiene o establece la colección de certificados de seguridad asociados a esta solicitud.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> que contiene los certificados de seguridad asociados a esta solicitud.</returns>
      <exception cref="T:System.ArgumentNullException">El valor especificado para una operación Set es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Connection">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Connection" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="Connection" />. El valor predeterminado es <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">El valor de <see cref="P:System.Net.HttpWebRequest.Connection" /> se establece en Mantener conexión o Cerrar.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <summary>Obtiene o establece el nombre del grupo de conexiones para la solicitud.</summary>
      <returns>Nombre del grupo de conexiones para esta solicitud. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength">
      <summary>Obtiene o establece el encabezado HTTP <see langword="Content-length" />.</summary>
      <returns>Número de bytes de los datos enviados al recurso de Internet. El valor predeterminado es -1, que indica que no se estableció el valor de la propiedad y no hay datos de solicitud para enviar.</returns>
      <exception cref="T:System.InvalidOperationException">La solicitud se ha iniciado mediante la llamada al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> o <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El nuevo valor de <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es menor que 0.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Content-type" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="Content-type" />. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueDelegate">
      <summary>Obtiene o establece el método de delegado al que se llama cuando se recibe una respuesta HTTP 100-continue desde el recurso de Internet.</summary>
      <returns>Delegado que implementa el método de devolución de llamada que se ejecuta cuando se devuelve una respuesta HTTP Continue desde el recurso de Internet. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueTimeout">
      <summary>Obtiene o establece el tiempo de espera, en milisegundos, para esperar hasta que se reciba 100-Continue del servidor.</summary>
      <returns>El tiempo de espera, en milisegundos, que se espera hasta que se recibe 100-Continue.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Obtiene o establece las cookies asociadas a la solicitud.</summary>
      <returns>
        <see cref="T:System.Net.CookieContainer" /> que contiene las cookies asociadas a esta solicitud.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Obtiene o establece la información de autenticación para la solicitud.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> que contiene las credenciales de autenticación asociadas a la solicitud. De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Date">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Date" /> que se va a usar en una solicitud HTTP.</summary>
      <returns>Valor del encabezado Date de la solicitud HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <summary>Obtiene o establece la directiva de caché predeterminada para esta solicitud.</summary>
      <returns>
        <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> que especifica la directiva de caché activa para esta solicitud cuando ninguna otra directiva es aplicable.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <summary>Obtiene o establece la longitud máxima predeterminada de una respuesta de error de HTTP.</summary>
      <returns>Longitud máxima predeterminada de una respuesta de error de HTTP.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que 0 y no es igual a -1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <summary>Obtiene o establece el valor predeterminado de la propiedad <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />.</summary>
      <returns>Longitud, en kilobytes (1024 bytes), del valor máximo predeterminado para los encabezados de respuesta recibidos. El archivo de configuración predeterminado establece este valor en 64 kilobytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor no es igual a -1 y es inferior a cero.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Finaliza una solicitud asincrónica para utilizar un objeto <see cref="T:System.IO.Stream" /> para escribir datos.</summary>
      <param name="asyncResult">Solicitud de una secuencia pendiente.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir los datos de la solicitud.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">La solicitud no se completó y no hay ninguna secuencia disponible.</exception>
      <exception cref="T:System.ArgumentException">La instancia actual no devolvió <paramref name="asyncResult" /> desde una llamada a <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó anteriormente a este método por medio de <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
o bien
Error al procesar la solicitud.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary>Finaliza una solicitud asincrónica de un objeto <see cref="T:System.IO.Stream" /> que se va a usar para escribir los datos y genera el objeto <see cref="T:System.Net.TransportContext" /> asociado a la secuencia.</summary>
      <param name="asyncResult">Solicitud pendiente de un flujo.</param>
      <param name="context">
        <see cref="T:System.Net.TransportContext" /> para <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir los datos de la solicitud.</returns>
      <exception cref="T:System.ArgumentException">La instancia actual no devolvió <paramref name="asyncResult" /> desde una llamada a <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó previamente a este método mediante <paramref name="asyncResult" />.</exception>
      <exception cref="T:System.IO.IOException">No se completó la solicitud y no hay ninguna secuencia disponible.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
O bien
Error al procesar la solicitud.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Termina una solicitud asincrónica de un recurso de Internet.</summary>
      <param name="asyncResult">Solicitud de una respuesta pendiente.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del recurso de Internet.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó anteriormente a este método por medio de <paramref name="asyncResult." />.
o bien
La propiedad <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es mayor que 0, aunque no se han escrito los datos en la secuencia de la solicitud.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
o bien
Error al procesar la solicitud.</exception>
      <exception cref="T:System.ArgumentException">La instancia actual no devolvió <paramref name="asyncResult" /> desde una llamada a <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Expect" />.</summary>
      <returns>Contenido del encabezado HTTP <see langword="Expect" />. El valor predeterminado es <see langword="null" />.

El valor de esta propiedad se almacena en <see cref="T:System.Net.WebHeaderCollection" />. Si se establece WebHeaderCollection, se pierde el valor de propiedad.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="Expect" /> se establece en una cadena que contiene "100-continue" como subcadena.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary>Obtiene un objeto <see cref="T:System.IO.Stream" /> que se utilizará para escribir los datos de la solicitud.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir los datos de la solicitud.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.HttpWebRequest.Method" /> es GET o HEAD.
o bien
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> es <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> es <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.Method" /> es POST o PUT.</exception>
      <exception cref="T:System.InvalidOperationException">Se llama al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> más de una vez.
o bien
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en un valor y <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">El validador de caché de solicitud indicó que la respuesta para esta solicitud se puede atender desde la memoria caché; sin embargo, las solicitudes que escriben datos no deben usar la caché. Esta excepción puede producirse si usa un validador de caché personalizado que se implementa incorrectamente.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
o bien
El período de tiempo de espera para la solicitud expiró.
o bien
Error al procesar la solicitud.</exception>
      <exception cref="T:System.ObjectDisposedException">En una aplicación de .NET Compact Framework, no se obtuvo una secuencia de solicitud con longitud de contenido cero y se cerró correctamente. Para más información sobre cómo controlar solicitudes de longitud de contenido cero, vea Programación para redes en .NET Compact Framework.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary>Obtiene un objeto <see cref="T:System.IO.Stream" /> que se va a usar para escribir los datos de la solicitud y genera el objeto <see cref="T:System.Net.TransportContext" /> asociado a la secuencia.</summary>
      <param name="context">
        <see cref="T:System.Net.TransportContext" /> para <see cref="T:System.IO.Stream" />.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> que se utiliza para escribir los datos de la solicitud.</returns>
      <exception cref="T:System.Exception">El método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> no pudo obtener <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.InvalidOperationException">No puede llamarse al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> más de una vez.
o bien
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en un valor y <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">El validador de caché de solicitud indicó que la respuesta para esta solicitud se puede atender desde la memoria caché; sin embargo, las solicitudes que escriben datos no deben usar la caché. Esta excepción puede producirse si usa un validador de caché personalizado que se implementa incorrectamente.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">La propiedad <see cref="P:System.Net.HttpWebRequest.Method" /> es GET o HEAD.
o bien
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> es <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> es <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.Method" /> es POST o PUT.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
O bien
El período de tiempo de espera para la solicitud expiró.
o bien
Error al procesar la solicitud.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary>Devuelve una respuesta desde un recurso de Internet.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del recurso de Internet.</returns>
      <exception cref="T:System.InvalidOperationException">Una llamada anterior a <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> ya usa la secuencia.
o bien
<see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en un valor y <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> es GET o HEAD, y <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es mayor o igual que cero o <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="true" />.
o bien
<see cref="P:System.Net.HttpWebRequest.KeepAlive" /> es <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> es <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> es -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" /> y <see cref="P:System.Net.HttpWebRequest.Method" /> es POST o PUT.
o bien
La <see cref="T:System.Net.HttpWebRequest" /> tiene un cuerpo de entidad, pero el método <see cref="M:System.Net.HttpWebRequest.GetResponse" /> se invoca sin llamar al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />.
O bien
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> es mayor que cero, pero la aplicación no escribe todos los datos prometidos.</exception>
      <exception cref="T:System.NotSupportedException">El validador de caché de la solicitud indicó que la respuesta a esta solicitud se puede obtener de la caché; sin embargo, esta solicitud incluye los datos que se deben enviar al servidor. Las solicitudes que envían datos no deben utilizar la caché. Esta excepción puede producirse si usa un validador de caché personalizado que se implementa incorrectamente.</exception>
      <exception cref="T:System.Net.WebException">Se llamó a <see cref="M:System.Net.HttpWebRequest.Abort" /> anteriormente.
o bien
El período de tiempo de espera para la solicitud expiró.
o bien
Error al procesar la solicitud.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Obtiene un valor que indica si se ha recibido una respuesta de un recurso de Internet.</summary>
      <returns>
        <see langword="true" /> si se ha recibido una respuesta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Especifica una colección de los pares nombre/valor que componen los encabezados HTTP.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene los pares nombre-valor que componen los encabezados de la solicitud HTTP.</returns>
      <exception cref="T:System.InvalidOperationException">La solicitud se ha iniciado mediante la llamada al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> o <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary>Obtiene o establece el valor del encabezado Host que se va a usar en una solicitud HTTP independiente del identificador URI de la solicitud.</summary>
      <returns>Valor del encabezado Host de la solicitud HTTP.</returns>
      <exception cref="T:System.ArgumentNullException">El encabezado host no se puede establecer en <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El encabezado host no se puede establecer en un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">El encabezado host no se puede establecer después de que empiece a enviarse la <see cref="T:System.Net.HttpWebRequest" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="If-Modified-Since" />.</summary>
      <returns>
        <see cref="T:System.DateTime" /> que contiene el contenido del encabezado HTTP <see langword="If-Modified-Since" />. El valor predeterminado es el de la fecha y la hora actuales.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary>Obtiene o establece un valor que indica si se debe establecer una conexión persistente en el recurso de Internet.</summary>
      <returns>Es <see langword="true" /> si la solicitud al recurso de Internet debe contener un encabezado HTTP <see langword="Connection" /> con el valor Keep-alive; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary>Obtiene o establece el número máximo de redirecciones que seguirá la solicitud.</summary>
      <returns>El número máximo de respuestas de redirección que seguirá la solicitud. El valor predeterminado es 50.</returns>
      <exception cref="T:System.ArgumentException">El valor está establecido en 0 o menos.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary>Obtiene o establece la longitud máxima permitida de los encabezados de respuesta.</summary>
      <returns>La longitud en kilobytes (1024 bytes) de los encabezados de respuesta.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad se establece después de enviarse la solicitud.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor es menor que 0 y distinto de -1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary>Obtiene o establece el tipo del medio de la solicitud.</summary>
      <returns>Tipo del medio de la solicitud. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Obtiene o establece el método para la solicitud.</summary>
      <returns>Método de solicitud que se debe utilizar para establecer contacto con el recurso de Internet. El valor predeterminado es GET.</returns>
      <exception cref="T:System.ArgumentException">No se proporciona ningún método.
o bien
La cadena de método contiene caracteres no válidos.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary>Obtiene o establece un valor que indica si se debe canalizar la solicitud en el recurso de Internet.</summary>
      <returns>
        <see langword="true" /> si la solicitud debe canalizarse; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary>Obtiene o establece un valor que indica si se envía un encabezado de autorización con la solicitud.</summary>
      <returns>
        <see langword="true" /> para enviar un encabezado de autorización HTTP con las solicitudes después de que tenga lugar la autenticación; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary>Obtiene o establece la versión de HTTP que se va a utilizar para la solicitud.</summary>
      <returns>Versión HTTP que se va a utilizar para la solicitud. De manera predeterminada, es <see cref="F:System.Net.HttpVersion.Version11" />.</returns>
      <exception cref="T:System.ArgumentException">La versión HTTP está establecida en un valor distinto de 1.0 o 1.1.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary>Obtiene o establece la información de proxy para la solicitud.</summary>
      <returns>El objeto <see cref="T:System.Net.IWebProxy" /> que se utiliza para especificar el servidor proxy de la solicitud. El valor predeterminado se establece mediante una llamada a la propiedad <see cref="P:System.Net.GlobalProxySelection.Select" />.</returns>
      <exception cref="T:System.ArgumentNullException">El valor de <see cref="P:System.Net.HttpWebRequest.Proxy" /> está establecido en <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La solicitud se inició llamando a uno de los métodos <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> o <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de llamada no tiene permiso para la operación solicitada.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary>Obtiene o establece un tiempo de espera, en milisegundos, al leer o escribir una secuencia.</summary>
      <returns>Número de milisegundos antes de que se agote el tiempo de escritura o lectura. El valor predeterminado es 300.000 milisegundos (5 minutos).</returns>
      <exception cref="T:System.InvalidOperationException">Ya se ha enviado la solicitud.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado para una operación de conjunto es menor o igual que cero y distinto de <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Referer" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="Referer" />. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Obtiene el identificador URI original de la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que contiene el identificador URI del recurso de Internet pasado al método <see cref="M:System.Net.WebRequest.Create(System.String)" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary>Obtiene o establece un valor que indica si se deben enviar los datos en segmentos al recurso de Internet.</summary>
      <returns>Es <see langword="true" /> para que los datos se envíen en segmentos al recurso de Internet; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">La solicitud se ha iniciado mediante la llamada al método <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> o <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <summary>Obtiene o establece una función de devolución de llamada para validar el certificado de servidor.</summary>
      <returns>Función de devolución de llamada para validar el certificado de servidor.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary>Obtiene el punto de servicio que se va a utilizar para la solicitud.</summary>
      <returns>
        <see cref="T:System.Net.ServicePoint" /> que representa la conexión de red con el recurso de Internet.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Obtiene un valor que indica si la solicitud admite un <see cref="T:System.Net.CookieContainer" />.</summary>
      <returns>
        <see langword="true" /> si la solicitud admite un <see cref="T:System.Net.CookieContainer" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary>Obtiene o establece el valor de tiempo de espera, en milisegundos, para los métodos <see cref="M:System.Net.HttpWebRequest.GetResponse" /> y <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />.</summary>
      <returns>Número de milisegundos que se va a esperar antes de que se agote el tiempo de espera de la solicitud. El valor predeterminado es 100.000 milisegundos (100 segundos).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor especificado es inferior a cero y no es <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="Transfer-encoding" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="Transfer-encoding" />. El valor predeterminado es <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece cuando <see cref="P:System.Net.HttpWebRequest.SendChunked" /> es <see langword="false" />.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> se establece en el valor "Chunked".</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary>Obtiene o establece un valor que indica si se permite el uso compartido de las conexiones de alta velocidad autenticadas por NTLM.</summary>
      <returns>
        <see langword="true" /> para mantener abierta la conexión autenticada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary>Obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si se envían las credenciales predeterminadas con las solicitudes.</summary>
      <returns>Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer esta propiedad después de que se enviara la solicitud.</exception>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Obtiene o establece el valor del encabezado HTTP <see langword="User-agent" />.</summary>
      <returns>Valor del encabezado HTTP <see langword="User-agent" />. El valor predeterminado es <see langword="null" />.

El valor de esta propiedad se almacena en <see cref="T:System.Net.WebHeaderCollection" />. Si se establece WebHeaderCollection, se pierde el valor de propiedad.</returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Proporciona una implementación específica de HTTP de la clase <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpWebResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.HttpWebResponse" /> desde las instancias <see cref="T:System.Runtime.Serialization.StreamingContext" /> y <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva excepción <see cref="T:System.Net.HttpWebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva excepción <see cref="T:System.Net.HttpWebRequest" />.</param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary>Obtiene el juego de caracteres de la respuesta.</summary>
      <returns>Cadena que contiene el juego de caracteres de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Cierra la secuencia de respuesta.</summary>
      <exception cref="T:System.ObjectDisposedException">Solo .NET Core: Este objeto <see cref="T:System.Net.HttpWebResponse" /> se ha eliminado.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary>Obtiene el método usado para codificar el cuerpo de la respuesta.</summary>
      <returns>Cadena que describe el método usado para codificar el cuerpo de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Obtiene la longitud del contenido devuelto por la solicitud.</summary>
      <returns>Número de bytes devueltos por la solicitud. La longitud del contenido no incluye la información de encabezado.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Obtiene el tipo de contenido de la respuesta.</summary>
      <returns>Cadena que contiene el tipo de contenido de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Obtiene o establece las cookies asociadas a esta respuesta.</summary>
      <returns>Un objeto <see cref="T:System.Net.CookieCollection" /> que contiene las cookies asociadas a esta respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Net.HttpWebResponse" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary>Obtiene el contenido de un encabezado que se devolvió con la respuesta.</summary>
      <param name="headerName">Valor de encabezado que se va a devolver.</param>
      <returns>Contenido del encabezado especificado.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Obtiene la secuencia usada para leer el cuerpo de la respuesta del servidor.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> que contiene el cuerpo de la respuesta.</returns>
      <exception cref="T:System.Net.ProtocolViolationException">No hay secuencia de respuesta.</exception>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Obtiene los encabezados asociados con esta respuesta del servidor.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene la información de encabezado devuelta con la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si se autenticaron el cliente y el servidor.</summary>
      <returns>Es <see langword="true" /> si se realizó una autenticación mutua; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary>Obtiene la fecha y la hora en la que se modificó por última vez el contenido de la respuesta.</summary>
      <returns>
        <see cref="T:System.DateTime" /> que contiene la fecha y la hora en la que se modificó el contenido de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Obtiene el método usado para devolver la respuesta.</summary>
      <returns>Cadena que contiene el método HTTP usado para devolver la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary>Obtiene la versión del protocolo HTTP usado en la respuesta.</summary>
      <returns>Objeto <see cref="T:System.Version" /> que contiene la versión del usado HTTP de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Obtiene el URI del recurso de Internet que respondió a la solicitud.</summary>
      <returns>El URI del recurso de Internet que respondió a la solicitud.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary>Obtiene el nombre del servidor que envió la respuesta.</summary>
      <returns>Cadena que contiene el nombre del servidor que envió la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Obtiene el estado de la respuesta.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.HttpStatusCode" />.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Obtiene la descripción del estado devuelto con la respuesta.</summary>
      <returns>Cadena que describe el estado de la respuesta.</returns>
      <exception cref="T:System.ObjectDisposedException">Se ha eliminado la instancia actual.</exception>
    </member>
    <member name="P:System.Net.HttpWebResponse.SupportsHeaders">
      <summary>Obtiene un valor que indica si se admiten encabezados.</summary>
      <returns>Es <see langword="true" /> si se admiten encabezados; de lo contrario, es <see langword="false" />. Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializa esta instancia en el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
      <param name="serializationInfo">Objeto en el que se serializa este <see cref="T:System.Net.HttpWebResponse" />.</param>
      <param name="streamingContext">El destino de la serialización.</param>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary>Proporciona la interfaz de autenticación base para módulos de autenticación de cliente Web.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Net.Authorization" /> en respuesta a un desafío de autenticación de un servidor.</summary>
      <param name="challenge">Desafío de autenticación enviado por el servidor.</param>
      <param name="request">Instancia de <see cref="T:System.Net.WebRequest" /> asociada al desafío.</param>
      <param name="credentials">Credenciales asociadas al desafío.</param>
      <returns>Instancia de <see cref="T:System.Net.Authorization" /> que contiene el mensaje de autorización para la solicitud, o <see langword="null" /> si no puede controlarse el desafío.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary>Obtiene el tipo de autenticación proporcionado por este módulo de autenticación.</summary>
      <returns>Cadena que indica el tipo de autenticación proporcionado por este módulo de autenticación.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary>Obtiene un valor que indica si el módulo de autenticación admite la preautenticación.</summary>
      <returns>
        <see langword="true" /> si el módulo de autorización admite la preautenticación; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Devuelve una instancia de la clase <see cref="T:System.Net.Authorization" /> para una solicitud de autenticación a un servidor.</summary>
      <param name="request">Instancia de <see cref="T:System.Net.WebRequest" /> asociada a la solicitud de autenticación.</param>
      <param name="credentials">Credenciales asociadas a la solicitud de autenticación.</param>
      <returns>Instancia de <see cref="T:System.Net.Authorization" /> que contiene el mensaje de autorización de la solicitud.</returns>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary>Define la directiva de credenciales que se utilizará para las solicitudes de recursos realizadas con <see cref="T:System.Net.WebRequest" /> y sus clases derivadas.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>Devuelve un valor <see cref="T:System.Boolean" /> que indica si se envían las credenciales del cliente con una solicitud de recurso realizada utilizando una instancia de la clase <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="challengeUri">El objeto <see cref="T:System.Uri" /> que recibe la solicitud.</param>
      <param name="request">El objeto <see cref="T:System.Net.WebRequest" /> que representa el recurso solicitado.</param>
      <param name="credential">El objeto <see cref="T:System.Net.NetworkCredential" /> que debe enviarse con la solicitud si este método devuelve <see langword="true" />.</param>
      <param name="authenticationModule">El objeto <see cref="T:System.Net.IAuthenticationModule" /> que debe realizar la autenticación, si ésta se requiere.</param>
      <returns>Es <see langword="true" /> si se envían las credenciales con la solicitud; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Proporciona la interfaz base para crear instancias de <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Crea una instancia de <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="uri">Identificador uniforme de recursos (URI) del recurso web.</param>
      <returns>Instancia de <see cref="T:System.Net.WebRequest" />.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="uri" /> no lo admite esta instancia de <see cref="T:System.Net.IWebRequestCreate" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.  
  

            
  
 El URI especificado en <paramref name="uri" /> no es un URI válido.</exception>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>Excepción que se produce cuando se produce un error mientras se utiliza un protocolo de red.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.ProtocolViolationException" />.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.ProtocolViolationException" /> desde las instancias <see cref="T:System.Runtime.Serialization.StreamingContext" /> y <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información que se exige para deserializar <see cref="T:System.Net.ProtocolViolationException" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva excepción <see cref="T:System.Net.ProtocolViolationException" />.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.ProtocolViolationException" /> con el mensaje especificado.</summary>
      <param name="message">Cadena con el mensaje de error.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializa esta instancia en el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
      <param name="serializationInfo">Objeto en el que se serializa este <see cref="T:System.Net.ProtocolViolationException" />.</param>
      <param name="streamingContext">El destino de la serialización.</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary>Excepción que se produce cuando ocurre un error al acceder a la red mediante un protocolo acoplable.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> desde las instancias <see cref="T:System.Runtime.Serialization.StreamingContext" /> y <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva excepción <see cref="T:System.Net.WebException" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada asociada a la nueva excepción <see cref="T:System.Net.WebException" />.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error especificado.</summary>
      <param name="message">Texto del mensaje de error.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error y la excepción anidada especificados.</summary>
      <param name="message">Texto del mensaje de error.</param>
      <param name="inner">Excepción anidada.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error, la excepción anidada, el estado y la respuesta especificados.</summary>
      <param name="message">Texto del mensaje de error.</param>
      <param name="inner">Excepción anidada.</param>
      <param name="status">Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</param>
      <param name="response">Instancia de <see cref="T:System.Net.WebResponse" /> que contiene la respuesta del host remoto.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebException" /> con el mensaje de error y el estado especificados.</summary>
      <param name="message">Texto del mensaje de error.</param>
      <param name="status">Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.WebException" /> actual.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que se va a utilizar.</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Obtiene la respuesta que devolvió el host remoto.</summary>
      <returns>Si hay una respuesta disponible en el recurso de Internet, se trata de una instancia de <see cref="T:System.Net.WebResponse" /> que contiene la respuesta de error de un recurso de Internet; en caso contrario, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Obtiene el estado de la respuesta.</summary>
      <returns>Uno de los valores de <see cref="T:System.Net.WebExceptionStatus" />.</returns>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serializa esta instancia en el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado.</summary>
      <param name="serializationInfo">Objeto en el que se serializa este <see cref="T:System.Net.WebException" />.</param>
      <param name="streamingContext">El destino de la serialización.</param>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Define códigos de estado para la clase <see cref="T:System.Net.WebException" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary>No se encontró la entrada de caché especificada.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>No se ha podido establecer contacto con el punto de servicio remoto en el nivel de transporte.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>La conexión se ha cerrado prematuramente.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>La conexión de una solicitud que especificaba el encabezado Keep-alive se cerró inesperadamente.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>Se ha recibido un mensaje que ha superado el límite especificado al enviar una solicitud o recibir una respuesta del servidor.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>El servicio de resolución de nombres no ha podido resolver el nombre de host.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>Una solicitud asincrónica interna está pendiente.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>La solicitud era una solicitud canalizada y la conexión se cerró antes de que se recibiera la respuesta.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>La respuesta recibida del servidor se completó, pero indicó la existencia de un error en el nivel de protocolo. Por ejemplo, un error de protocolo HTTP tal como "401 Access Denied" (Acceso denegado) utilizaría este estado.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>El servicio de resolución de nombres no pudo resolver el nombre de host del proxy.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>No se ha recibido una respuesta completa del servidor remoto.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>La solicitud se canceló, se llamó al método <see cref="M:System.Net.WebRequest.Abort" /> o se produjo un error no clasificable. Este es el valor predeterminado de la clase <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary>La directiva de caché no permitió la solicitud. En general, esto ocurre cuando una solicitud no puede almacenarse en caché y la directiva en vigor prohíbe enviarla al servidor. Podría recibir este estado si un método de solicitud implicara la presencia de un cuerpo de la solicitud, un método de solicitud requiriese una interacción directa con el servidor o una solicitud contuviera un encabezado condicional.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary>El servidor proxy no permitió esta solicitud.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>Error que se produce al establecer una conexión utilizando SSL.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>No se pudo enviar una solicitud completa al servidor remoto.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>La respuesta del servidor no era una respuesta HTTP válida.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>No se ha detectado ningún error.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>No se recibió ninguna respuesta durante el período de tiempo de espera de una solicitud.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>No se pudo validar un certificado de servidor.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>Se ha producido una excepción de un tipo desconocido.</summary>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Realiza una solicitud a un identificador uniforme de recursos (URI). Esta es una clase <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebRequest" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva instancia de <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que indica el origen de la secuencia serializada asociada a la nueva instancia de <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al constructor, cuando el constructor no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Anula la solicitud.</summary>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary>Obtiene o establece valores que indican el nivel de autenticación y de suplantación utilizados para esta solicitud.</summary>
      <returns>Combinación bit a bit de los valores de <see cref="T:System.Net.Security.AuthenticationLevel" />. El valor predeterminado es <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.
En la autenticación mutua, el cliente y el servidor presentan credenciales para establecer su identidad. Los valores <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> y <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" /> son pertinentes para la autenticación Kerberos. La autenticación Kerberos se puede admitir directamente o se puede utilizar si se utiliza el protocolo de seguridad Negotiate para seleccionar el protocolo de seguridad activo. Para obtener más información acerca de los protocolos de autenticación, consulte autenticación de Internet.
Para determinar si estaba activa la autenticación mutua, compruebe la propiedad <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.
Si especifica el valor del marcador de autenticación <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" /> y no se produce una autenticación mutua, su aplicación recibirá una <see cref="T:System.IO.IOException" /> con una excepción interna <see cref="T:System.Net.ProtocolViolationException" /> que indica un error en la autenticación mutua.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Cuando se reemplaza en una clase descendiente, proporciona una versión asincrónica del método <see cref="M:System.Net.WebRequest.GetRequestStream" />.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene información de estado para esta solicitud asincrónica.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Cuando se reemplaza en una clase descendiente, comienza una solicitud asincrónica de un recurso de Internet.</summary>
      <param name="callback">Delegado <see cref="T:System.AsyncCallback" />.</param>
      <param name="state">Objeto que contiene información de estado para esta solicitud asincrónica.</param>
      <returns>
        <see cref="T:System.IAsyncResult" /> que hace referencia a la solicitud asincrónica.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary>Obtiene o establece la directiva de caché para esta solicitud.</summary>
      <returns>Un objeto <see cref="T:System.Net.Cache.RequestCachePolicy" /> que define una directiva de caché.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece el nombre del grupo de conexiones para la solicitud.</summary>
      <returns>Nombre del grupo de conexiones para la solicitud.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece la longitud del contenido de los datos solicitados que se envían.</summary>
      <returns>Número de bytes de los datos de la solicitud que se envían.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece el tipo de contenido de los datos solicitados que se envían.</summary>
      <returns>Tipo de contenido de los datos de la solicitud.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.WebRequest" /> para el esquema URI especificado.</summary>
      <param name="requestUriString">URI que identifica el recurso de Internet.</param>
      <returns>Descendiente <see cref="T:System.Net.WebRequest" /> para un esquema URI específico.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="requestUriString" /> no se ha registrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de la llamada no tiene permiso <see cref="T:System.Net.WebPermissionAttribute" /> para conectarse al URI solicitado o un URI al que se redirige la solicitud.</exception>
      <exception cref="T:System.UriFormatException">En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.  
  

            
  
 El URI especificado en <paramref name="requestUriString" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.WebRequest" /> para el esquema URI especificado.</summary>
      <param name="requestUri">
        <see cref="T:System.Uri" /> que contiene el identificador URI del recurso solicitado.</param>
      <returns>Descendiente <see cref="T:System.Net.WebRequest" /> para el esquema URI especificado.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="requestUri" /> no está registrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de la llamada no tiene permiso <see cref="T:System.Net.WebPermissionAttribute" /> para conectarse al URI solicitado o un URI al que se redirige la solicitud.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.WebRequest" /> para el esquema URI especificado.</summary>
      <param name="requestUri">
        <see cref="T:System.Uri" /> que contiene el identificador URI del recurso solicitado.</param>
      <returns>Descendiente <see cref="T:System.Net.WebRequest" /> para el esquema URI especificado.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="requestUri" /> no está registrado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de la llamada no tiene permiso <see cref="T:System.Net.WebPermissionAttribute" /> para conectarse al URI solicitado o un URI al que se redirige la solicitud.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.HttpWebRequest" /> para la cadena de URI especificada.</summary>
      <param name="requestUriString">Cadena de URI que identifica el recurso de Internet.</param>
      <returns>Instancia de <see cref="T:System.Net.HttpWebRequest" /> para la cadena de URI concreta.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="requestUriString" /> es http o https.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de la llamada no tiene permiso <see cref="T:System.Net.WebPermissionAttribute" /> para conectarse al URI solicitado o un URI al que se redirige la solicitud.</exception>
      <exception cref="T:System.UriFormatException">El URI especificado en <paramref name="requestUriString" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Net.HttpWebRequest" /> para el URI especificado.</summary>
      <param name="requestUri">URI que identifica el recurso de Internet.</param>
      <returns>Instancia de <see cref="T:System.Net.HttpWebRequest" /> para la cadena de URI concreta.</returns>
      <exception cref="T:System.NotSupportedException">El esquema de solicitud especificado en <paramref name="requestUri" /> es http o https.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">El autor de la llamada no tiene permiso <see cref="T:System.Net.WebPermissionAttribute" /> para conectarse al URI solicitado o un URI al que se redirige la solicitud.</exception>
      <exception cref="T:System.UriFormatException">El URI especificado en <paramref name="requestUri" /> no es un URI válido.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece las credenciales de red utilizadas para autenticar la solicitud con el recurso de Internet.</summary>
      <returns>
        <see cref="T:System.Net.ICredentials" /> que contiene las credenciales de autenticación asociadas a la solicitud. De manera predeterminada, es <see langword="null" />.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary>Obtiene o establece la directiva de caché predeterminada para esta solicitud.</summary>
      <returns>
        <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> que especifica la directiva de caché activa para esta solicitud cuando ninguna otra directiva es aplicable.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary>Obtiene o establece el proxy HTTP global.</summary>
      <returns>Objeto <see cref="T:System.Net.IWebProxy" /> usado en cada llamada a las instancias de <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Cuando se reemplaza en una clase descendiente, devuelve <see cref="T:System.IO.Stream" /> para escribir datos en el recurso de Internet.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que hace referencia a una solicitud pendiente de una secuencia.</param>
      <returns>
        <see cref="T:System.IO.Stream" /> donde se escribirán datos.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Cuando se reemplaza en una clase descendiente, devuelve <see cref="T:System.Net.WebResponse" />.</summary>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> que hace referencia a una solicitud de respuesta pendiente.</param>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene una respuesta a la solicitud de Internet.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary>Cuando se reemplaza en una clase descendiente, devuelve <see cref="T:System.IO.Stream" /> para escribir datos en el recurso de Internet.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> para escribir datos en el recurso de Internet.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
      <summary>Cuando se invalida en una clase descendiente, devuelve un objeto <see cref="T:System.IO.Stream" /> para escribir datos en el recurso de Internet como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary>Cuando se reemplaza en una clase descendiente, devuelve una respuesta a una solicitud de Internet.</summary>
      <returns>
        <see cref="T:System.Net.WebResponse" /> que contiene la respuesta a la solicitud de Internet.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.GetResponseAsync">
      <summary>Cuando se invalida en una clase descendiente, devuelve una respuesta a una solicitud de Internet como una operación asincrónica.</summary>
      <returns>Objeto de tarea que representa la operación asincrónica.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary>Devuelve un servidor proxy configurado con la configuración de Internet Explorer del usuario actualmente suplantado.</summary>
      <returns>Objeto <see cref="T:System.Net.IWebProxy" /> usado en cada llamada a las instancias de <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece la colección de pares de nombre/valor de encabezado asociados a la solicitud.</summary>
      <returns>
        <see cref="T:System.Net.WebHeaderCollection" /> que contiene los pares de nombre/valor de encabezado que están asociados a esta solicitud.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary>Obtiene o establece el nivel de suplantación para la solicitud actual.</summary>
      <returns>Valor <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece el método de protocolo que se va a utilizar en esta solicitud.</summary>
      <returns>Método de protocolo que se utilizará en esta solicitud.</returns>
      <exception cref="T:System.NotImplementedException">Si la propiedad no se reemplaza en una clase descendiente, se intenta por cualquier medio obtener o establecer la propiedad.</exception>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary>Cuando se reemplaza en una clase descendiente, indica si se va a realizar la autenticación previa de la solicitud.</summary>
      <returns>Es <see langword="true" /> para realizar una autenticación previa; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece el proxy de red que se va a utilizar para tener acceso a este recurso de Internet.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> que se va a utilizar para tener acceso al recurso de Internet.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Registra un descendiente <see cref="T:System.Net.WebRequest" /> para el identificador URI especificado.</summary>
      <param name="prefix">Identificador URI o prefijo URI completo que resuelve el descendiente de <see cref="T:System.Net.WebRequest" />.</param>
      <param name="creator">Método de creación al que llama <see cref="T:System.Net.WebRequest" /> para crear el descendiente <see cref="T:System.Net.WebRequest" />.</param>
      <returns>Es <see langword="true" /> si el registro es correcto; en caso contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> es <see langword="null" />
O bien
<paramref name="creator" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene el identificador URI del recurso de Internet asociado a la solicitud.</summary>
      <returns>
        <see cref="T:System.Uri" /> que representa el recurso asociado a la solicitud</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Cuando se reemplaza en una clase descendiente, rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.WebRequest" />.</summary>
      <param name="serializationInfo">Una clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados para el objeto <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">Una clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el destino de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotImplementedException">Se intenta serializar el objeto, cuando la interfaz no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary>Obtiene o establece el tiempo, en milisegundos, antes de que se agoten los tiempos de espera de la solicitud.</summary>
      <returns>Período de tiempo, en milisegundos, hasta que se agota el tiempo de espera de la solicitud o el valor <see cref="F:System.Threading.Timeout.Infinite" /> para indicar que la solicitud no agota el tiempo de espera. La clase descendiente define el valor predeterminado.</returns>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece un valor <see cref="T:System.Boolean" /> que controla si se envían <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> con las solicitudes.</summary>
      <returns>Es <see langword="true" /> si se utilizan las credenciales predeterminadas; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer esta propiedad después de que se enviara la solicitud.</exception>
      <exception cref="T:System.NotImplementedException">Se intenta por todos los medios obtener acceso a la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary>Clase contenedora de las clases <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" /> y <see cref="T:System.Net.WebRequestMethods.Http" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary>Representa los tipos de métodos de protocolo de archivo que se pueden utilizar con una solicitud FILE. Esta clase no puede heredarse.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary>Representa el método de protocolo FILE GET, utilizado para recuperar un archivo de una ubicación especificada.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary>Representa el método de protocolo FILE PUT, utilizado para copiar un archivo en una ubicación especificada.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary>Representa los tipos de métodos del protocolo FTP que se pueden utilizar con una solicitud FTP. Esta clase no puede heredarse.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary>Representa el método de protocolo FTP APPE, utilizado para anexar un archivo a un archivo existente en un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary>Representa el método de protocolo FTP DELE, utilizado para eliminar un archivo en un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary>Representa el método de protocolo FTP RETR, utilizado para descargar un archivo de un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary>Representa el método de protocolo FTP MDTM, utilizado para recuperar la marca de fecha y hora de un archivo en un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary>Representa el método de protocolo FTP SIZE, utilizado para recuperar el tamaño de un archivo en un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary>Representa el método de protocolo FTP NLIST, que obtiene una lista corta de los archivos de un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary>Representa el método de protocolo FTP LIST, que obtiene una lista detallada de los archivos de un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary>Representa el método de protocolo FTP MKD, que crea un directorio en un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary>Representa el método de protocolo FTP PWD, que imprime el nombre del directorio de trabajo actual.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary>Representa el método de protocolo FTP RMD, que quita un directorio.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary>Representa el método de protocolo FTP RENAME, que cambia el nombre de un directorio.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary>Representa el método de protocolo FTP STOR, que carga un archivo a un servidor FTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary>Representa el protocolo FTP STOU, que carga un archivo con un nombre único a un servidor FTP.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary>Representa los tipos de métodos de protocolo HTTP que se pueden utilizar con una solicitud HTTP.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary>Representa el método de protocolo HTTP CONNECT, utilizado con un servidor proxy que puede cambiar dinámicamente a "túnel", como en el caso de túneles SSL.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary>Representa un método de protocolo HTTP GET.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary>Representa un método de protocolo HTTP HEAD. El método HEAD es idéntico a GET, excepto que el servidor sólo devuelve los encabezados de mensaje en la respuesta, sin el cuerpo del mensaje.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary>Representa una solicitud de HTTP MKCOL, que crea una colección nueva (como una colección de páginas) en la ubicación especificada por el identificador uniforme de recursos (URI).</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary>Representa un método de protocolo POST HTTP, utilizado para enviar una entidad nueva como adición a un identificador URI.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary>Representa un método de protocolo HTTP PUT, utilizado para reemplazar una entidad identificada por un identificador URI.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Proporciona una respuesta desde un identificador de recursos uniforme (URI). Esta es una clase <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.WebResponse" /> desde las instancias especificadas de las clases <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Instancia de la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar la nueva instancia de <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">Instancia de la clase <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen de la secuencia serializada que está asociada a la nueva instancia de <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios tener acceso al constructor, cuando el constructor no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>Cuando se reemplaza por una clase descendiente, cierra la secuencia de respuesta.</summary>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>Cuando se reemplaza en una clase descendiente, obtiene o establece la longitud del contenido de los datos recibidos.</summary>
      <returns>Número de bytes devuelto desde el recurso de Internet.</returns>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>Cuando se realizan omisiones en una clase derivada, obtiene o establece el tipo de contenido de los datos recibidos.</summary>
      <returns>Cadena que contiene el tipo de contenido de la respuesta.</returns>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>Libera los recursos no administrados que utiliza el objeto <see cref="T:System.Net.WebResponse" />.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa el objeto <see cref="T:System.Net.WebResponse" /> y, de forma opcional, desecha los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar los recursos administrados y no administrados; es <see langword="false" /> para liberar sólo los recursos no administrados.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Llena <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto de destino.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se rellena con datos.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica el destino de esta serialización.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>Cuando se reemplaza en una clase descendiente, se devuelve el flujo de datos desde el recurso de Internet.</summary>
      <returns>Instancia de la clase <see cref="T:System.IO.Stream" /> para leer los datos procedentes del recurso de Internet.</returns>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios tener acceso al método, cuando el método no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>Cuando se realizan omisiones en una clase derivada, obtiene una colección de pares de nombre-valor de encabezado asociados a esta solicitud.</summary>
      <returns>Instancia de la clase <see cref="T:System.Net.WebHeaderCollection" /> que contiene los valores de encabezado asociados a esta respuesta.</returns>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si esta respuesta se obtuvo de la caché.</summary>
      <returns>Es <see langword="true" /> si la respuesta se obtiene de la caché; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary>Obtiene un valor <see cref="T:System.Boolean" /> que indica si ocurrió una autenticación mutua.</summary>
      <returns>Es <see langword="true" /> si se autenticaron cliente y servidor; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el identificador URI del recurso de Internet que respondió a la solicitud.</summary>
      <returns>Instancia de la clase <see cref="T:System.Uri" /> que contiene el identificador URI del recurso de Internet que respondió a la solicitud.</returns>
      <exception cref="T:System.NotSupportedException">Se intenta por todos los medios obtener o establecer la propiedad, cuando la propiedad no se reemplaza en una clase descendiente.</exception>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Obtiene un valor que indica si se admiten encabezados.</summary>
      <returns>Devuelva <see cref="T:System.Boolean" />.
Es <see langword="true" /> si se admiten encabezados; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Rellena una instancia de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el objeto <see cref="T:System.Net.WebResponse" />.</summary>
      <param name="serializationInfo">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contendrá los datos serializados para <see cref="T:System.Net.WebResponse" />.</param>
      <param name="streamingContext">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el destino de la secuencia serializada asociada al nuevo objeto <see cref="T:System.Net.WebResponse" />.</param>
    </member>
  </members>
</doc>