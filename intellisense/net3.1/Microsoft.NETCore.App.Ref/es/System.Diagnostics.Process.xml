<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Process</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafeProcessHandle">
      <summary>Proporciona un contenedor administrado para un identificador de proceso.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafeProcessHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> desde el identificador especificado, indicando si se debe liberar el identificador durante la fase de finalización.</summary>
      <param name="existingHandle">Identificador que se va a almacenar en un contenedor.</param>
      <param name="ownsHandle">
        <see langword="true" /> para permitir que <see cref="T:Microsoft.Win32.SafeHandles.SafeProcessHandle" /> libere de manera fiable el identificador durante la fase de finalización; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafeProcessHandle.IsInvalid" />
    <member name="T:System.Diagnostics.DataReceivedEventArgs">
      <summary>Proporciona datos para los eventos <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> y <see cref="E:System.Diagnostics.Process.ErrorDataReceived" />.</summary>
    </member>
    <member name="P:System.Diagnostics.DataReceivedEventArgs.Data">
      <summary>Obtiene la línea de caracteres escrita en un flujo de salida de <see cref="T:System.Diagnostics.Process" /> redirigido.</summary>
      <returns>Línea escrita por una secuencia <see cref="T:System.Diagnostics.Process" /> asociada en su secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> o <see cref="P:System.Diagnostics.Process.StandardError" /> redirigida.</returns>
    </member>
    <member name="T:System.Diagnostics.DataReceivedEventHandler">
      <summary>Representa el método que controlará los eventos <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> o <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> de un <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">Objeto <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Diagnostics.MonitoringDescriptionAttribute">
      <summary>Especifica una descripción para una propiedad o evento.</summary>
    </member>
    <member name="M:System.Diagnostics.MonitoringDescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.MonitoringDescriptionAttribute" /> utilizando la descripción especificada.</summary>
      <param name="description">Texto de descripción definido por la aplicación.</param>
    </member>
    <member name="P:System.Diagnostics.MonitoringDescriptionAttribute.Description">
      <summary>Obtiene el texto de descripción asociado al elemento supervisado.</summary>
      <returns>Descripción definida por la aplicación.</returns>
    </member>
    <member name="T:System.Diagnostics.Process">
      <summary>Proporciona acceso a procesos locales y remotos, y permite iniciar y detener procesos del sistema local.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Process" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.BasePriority">
      <summary>Obtiene la prioridad base del proceso asociado.</summary>
      <returns>Prioridad base, que se calcula a partir de <see cref="P:System.Diagnostics.Process.PriorityClass" /> del proceso asociado.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso ha terminado.
o bien
El proceso no se ha iniciado, por lo que no hay ningún identificador de proceso.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginErrorReadLine">
      <summary>Inicia las operaciones de lectura asincrónica en la secuencia de <see cref="P:System.Diagnostics.Process.StandardError" /> redirigida de la aplicación.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> es <see langword="false" />.
o bien
Ya hay una operación de lectura asincrónica en curso en la secuencia <see cref="P:System.Diagnostics.Process.StandardError" />.
o bien
Una operación de lectura sincrónica ha utilizado la secuencia <see cref="P:System.Diagnostics.Process.StandardError" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.BeginOutputReadLine">
      <summary>Inicia las operaciones de lectura asincrónica en la secuencia de <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirigida de la aplicación.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> es <see langword="false" />.
o bien
Ya hay una operación de lectura asincrónica en curso en la secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" />.
o bien
Una operación de lectura sincrónica ha utilizado la secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelErrorRead">
      <summary>Cancela la operación de lectura asincrónica en la secuencia redirigida de <see cref="P:System.Diagnostics.Process.StandardError" /> de una aplicación.</summary>
      <exception cref="T:System.InvalidOperationException">La secuencia <see cref="P:System.Diagnostics.Process.StandardError" /> no se ha habilitado para operaciones de lectura asincrónicas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.CancelOutputRead">
      <summary>Cancela la operación de lectura asincrónica en la secuencia redirigida de <see cref="P:System.Diagnostics.Process.StandardOutput" /> de una aplicación.</summary>
      <exception cref="T:System.InvalidOperationException">La secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> no se ha habilitado para operaciones de lectura asincrónicas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Close">
      <summary>Libera todos los recursos asociados a este componente.</summary>
    </member>
    <member name="M:System.Diagnostics.Process.CloseMainWindow">
      <summary>Cierra un proceso que contiene una interfaz de usuario mediante el envío de un mensaje de cierre a su ventana principal.</summary>
      <returns>Es <see langword="true" /> si el mensaje de cierre se envió correctamente; es <see langword="false" /> si el proceso asociado no tiene una ventana principal o si la ventana principal está deshabilitada (por ejemplo, si se está mostrando un cuadro de diálogo modal).</returns>
      <exception cref="T:System.InvalidOperationException">El proceso ya se cerró.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Dispose(System.Boolean)">
      <summary>Libera todos los recursos utilizados por este proceso.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="P:System.Diagnostics.Process.EnableRaisingEvents">
      <summary>Obtiene o establece si el evento <see cref="E:System.Diagnostics.Process.Exited" /> debe provocarse cuando termine el proceso.</summary>
      <returns>Es <see langword="true" /> si el evento <see cref="E:System.Diagnostics.Process.Exited" /> debe provocarse cuando termine el proceso asociado (al salir o al llamar a <see cref="M:System.Diagnostics.Process.Kill" />); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />. Tenga en cuenta que el evento <see cref="E:System.Diagnostics.Process.Exited" /> se produce incluso si el valor de <see cref="P:System.Diagnostics.Process.EnableRaisingEvents" /> se <see langword="false" /> cuando el proceso se cierra durante o antes de que el usuario realice una comprobación de <see cref="P:System.Diagnostics.Process.HasExited" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.EnterDebugMode">
      <summary>Coloca un componente <see cref="T:System.Diagnostics.Process" /> en estado de interacción con los procesos del sistema operativo que se ejecutan en un modo especial; para ello, habilita la propiedad nativa <see langword="SeDebugPrivilege" /> en el subproceso actual.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.ErrorDataReceived">
      <summary>Se produce cuando una aplicación escribe en su secuencia redirigida de <see cref="P:System.Diagnostics.Process.StandardError" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitCode">
      <summary>Obtiene el valor especificado por el proceso asociado al terminar.</summary>
      <returns>Código especificado por el proceso asociado al terminar.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso no finalizó.
o bien
El proceso <see cref="P:System.Diagnostics.Process.Handle" /> no es válido.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.ExitCode" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="E:System.Diagnostics.Process.Exited">
      <summary>Se produce cuando termina un proceso.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.ExitTime">
      <summary>Obtiene el momento en el que terminó el proceso asociado.</summary>
      <returns>
        <see cref="T:System.DateTime" /> que indica cuándo terminó el proceso asociado.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.ExitTime" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetCurrentProcess">
      <summary>Obtiene un nuevo componente <see cref="T:System.Diagnostics.Process" /> y lo asocia al proceso que está activo en ese momento.</summary>
      <returns>Nuevo componente <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso que se está ejecutando en la aplicación que realiza la llamada.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
      <summary>Devuelve un nuevo componente <see cref="T:System.Diagnostics.Process" />, dado un identificador de un proceso en el equipo local.</summary>
      <param name="processId">Identificador de un recurso de proceso único en el sistema.</param>
      <returns>Componente <see cref="T:System.Diagnostics.Process" /> asociado al recurso del proceso local que se identifica mediante el parámetro <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">El proceso especificado por el parámetro <paramref name="processId" /> no se está ejecutando. Es posible que el identificador haya expirado.</exception>
      <exception cref="T:System.InvalidOperationException">Este objeto no inició el proceso.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
      <summary>Devuelve un nuevo componente <see cref="T:System.Diagnostics.Process" />, dados un identificador de proceso y el nombre de un equipo en la red.</summary>
      <param name="processId">Identificador de un recurso de proceso único en el sistema.</param>
      <param name="machineName">Nombre de un equipo en la red.</param>
      <returns>Componente <see cref="T:System.Diagnostics.Process" /> asociado a un recurso de proceso remoto que se identifica mediante el parámetro <paramref name="processId" />.</returns>
      <exception cref="T:System.ArgumentException">El proceso especificado por el parámetro <paramref name="processId" /> no se está ejecutando. Es posible que el identificador haya expirado.
o bien
La sintaxis de parámetro <paramref name="machineName" /> no es válida. El nombre puede tener longitud cero (0).</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="machineName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Este objeto no inició el proceso.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses">
      <summary>Crea un nuevo componente <see cref="T:System.Diagnostics.Process" /> para cada recurso de proceso del equipo local.</summary>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.Process" /> que representa todos los recursos del proceso que se ejecutan en el equipo local.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
      <summary>Crea un nuevo componente <see cref="T:System.Diagnostics.Process" /> para cada recurso de proceso en el equipo especificado.</summary>
      <param name="machineName">Equipo desde el que se lee la lista de procesos.</param>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.Process" /> que representa todos los recursos del proceso que se ejecutan en el equipo especificado.</returns>
      <exception cref="T:System.ArgumentException">La sintaxis de parámetro <paramref name="machineName" /> no es válida. Puede tener longitud cero (0).</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="machineName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La plataforma del sistema operativo no admite esta operación en equipos remotos.</exception>
      <exception cref="T:System.InvalidOperationException">Hay problemas de acceso a la API del contador de rendimiento que se usa para obtener información del proceso. Esta excepción es específica de Windows NT, Windows 2000 y Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un problema al obtener acceso a una API del sistema subyacente.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
      <summary>Crea una matriz de nuevos componentes <see cref="T:System.Diagnostics.Process" /> y los asocia a todos los recursos de proceso del equipo local que comparten el nombre de proceso especificado.</summary>
      <param name="processName">Nombre descriptivo del proceso.</param>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.Process" /> que representa los recursos del proceso que ejecutan la aplicación o el archivo especificado.</returns>
      <exception cref="T:System.InvalidOperationException">Hay problemas de acceso a la API del contador de rendimiento que se usa para obtener información del proceso. Esta excepción es específica de Windows NT, Windows 2000 y Windows XP.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
      <summary>Crea una matriz de nuevos componentes <see cref="T:System.Diagnostics.Process" /> y los asocia a todos los recursos de proceso de un equipo remoto que comparten el nombre del proceso especificado.</summary>
      <param name="processName">Nombre descriptivo del proceso.</param>
      <param name="machineName">Nombre de un equipo en la red.</param>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.Process" /> que representa los recursos del proceso que ejecutan la aplicación o el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException">La sintaxis de parámetro <paramref name="machineName" /> no es válida. Puede tener longitud cero (0).</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="machineName" /> es <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La plataforma del sistema operativo no admite esta operación en equipos remotos.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha producido un error en el intento de conectarse a <paramref name="machineName" />.
o bien
Hay problemas de acceso a la API del contador de rendimiento que se usa para obtener información del proceso. Esta excepción es específica de Windows NT, Windows 2000 y Windows XP.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se ha producido un problema al obtener acceso a una API del sistema subyacente.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Handle">
      <summary>Obtiene el identificador nativo del proceso asociado.</summary>
      <returns>Identificador que el sistema operativo asignó al proceso asociado cuando este se inició. El sistema utiliza este identificador para hacer un seguimiento de los atributos del proceso.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso no se ha iniciado o ha terminado. No puede leerse la propiedad <see cref="P:System.Diagnostics.Process.Handle" /> porque no hay ningún proceso asociado a esta instancia de <see cref="T:System.Diagnostics.Process" />.
o bien
La instancia de <see cref="T:System.Diagnostics.Process" /> ha quedado asociada a un proceso en ejecución, pero no se tienen los permisos necesarios para obtener un identificador con derechos de acceso total.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.Handle" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.HandleCount">
      <summary>Obtiene el número de identificadores abiertos por el proceso.</summary>
      <returns>Número de identificadores de sistema operativo abiertos por el proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.HasExited">
      <summary>Obtiene un valor que indica si el proceso asociado finalizó.</summary>
      <returns>Es <see langword="true" /> si el proceso del sistema operativo al que hace referencia el componente <see cref="T:System.Diagnostics.Process" /> terminó; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">No hay ningún proceso asociado al objeto.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar el código de salida para el proceso.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Id">
      <summary>Obtiene el identificador único del proceso asociado.</summary>
      <returns>Identificador único generado por el sistema del proceso al que hace referencia esta instancia de <see cref="T:System.Diagnostics.Process" />.</returns>
      <exception cref="T:System.InvalidOperationException">No se ha establecido la propiedad <see cref="P:System.Diagnostics.Process.Id" /> del proceso.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill">
      <summary>Detiene inmediatamente el proceso asociado.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo terminar el proceso asociado.
o bien
El proceso está finalizando.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando llamar a <see cref="M:System.Diagnostics.Process.Kill" /> para un proceso que se ejecuta en un equipo remoto. El método está disponible solo para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso ya se cerró.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Kill(System.Boolean)">
      <summary>Detiene inmediatamente el proceso asociado y, opcionalmente, sus procesos secundarios o descendientes.</summary>
      <param name="entireProcessTree">
        <see langword="true" /> para terminar el proceso asociado y sus descendientes; <see langword="false" /> para terminar solo el proceso asociado.</param>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo terminar el proceso asociado.
o bien
El proceso está finalizando.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando llamar a <see cref="M:System.Diagnostics.Process.Kill" /> para un proceso que se ejecuta en un equipo remoto. El método está disponible solo para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso ya se cerró.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" /> .
o bien
El proceso de llamada es miembro del árbol descendiente del proceso asociado.</exception>
      <exception cref="T:System.AggregateException">No se pudieron finalizar todos los procesos del árbol descendiente del proceso asociado.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.LeaveDebugMode">
      <summary>Recupera un componente <see cref="T:System.Diagnostics.Process" /> del estado que le permite interactuar con procesos del sistema operativo que se ejecuten en un modo especial.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.MachineName">
      <summary>Obtiene el nombre del equipo en el que se está ejecutando el proceso asociado.</summary>
      <returns>Nombre del equipo en el que se está ejecutando el proceso asociado.</returns>
      <exception cref="T:System.InvalidOperationException">No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainModule">
      <summary>Obtiene el módulo principal del proceso asociado.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessModule" /> utilizado para iniciar el proceso.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.MainModule" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Un proceso de 32 bits está intentando obtener acceso a los módulos de un proceso de 64 bits.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.
o bien
El proceso ha terminado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowHandle">
      <summary>Obtiene el identificador de ventana de la ventana principal del proceso asociado.</summary>
      <returns>Identificador de ventana generado por el sistema para la ventana principal del proceso asociado.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> no está definido porque el proceso ha terminado.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.MainWindowHandle" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MainWindowTitle">
      <summary>Obtiene el título de la ventana principal del proceso.</summary>
      <returns>Título de la ventana principal del proceso.</returns>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> no está definida porque el proceso ha terminado.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.MainWindowTitle" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MaxWorkingSet">
      <summary>Obtiene o establece el tamaño del espacio de trabajo máximo permitido, en bytes, para el proceso asociado.</summary>
      <returns>Tamaño máximo permitido para el espacio de trabajo del proceso en la memoria expresado en bytes.</returns>
      <exception cref="T:System.ArgumentException">El tamaño del espacio de trabajo máximo no es válido. Debe ser mayor o igual que el tamaño del espacio de trabajo mínimo.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">La información del espacio de trabajo no se puede recuperar del recurso del proceso asociado.
o bien
El identificador de proceso o el controlador de proceso es cero porque el proceso no se ha iniciado.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.MaxWorkingSet" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.
o bien
El proceso ha terminado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.MinWorkingSet">
      <summary>Obtiene o establece el tamaño del espacio de trabajo mínimo permitido, en bytes, para el proceso asociado.</summary>
      <returns>Tamaño mínimo necesario para el espacio de trabajo del proceso en la memoria expresado en bytes.</returns>
      <exception cref="T:System.ArgumentException">El tamaño del espacio de trabajo mínimo no es válido. Debe ser menor o igual que el tamaño del espacio de trabajo máximo.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">La información del espacio de trabajo no se puede recuperar del recurso del proceso asociado.
o bien
El identificador de proceso o el controlador de proceso es cero porque el proceso no se ha iniciado.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.MinWorkingSet" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.
o bien
El proceso ha terminado.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.Modules">
      <summary>Obtiene los módulos cargados por el proceso asociado.</summary>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.ProcessModule" /> que representa los módulos cargados por el proceso asociado.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.Modules" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.Modules" /> para el proceso del sistema o el proceso inactivo. Estos procesos no tienen módulos.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize">
      <summary>Obtiene el tamaño de la memoria no paginada del sistema en bytes que se asignó para el proceso asociado.</summary>
      <returns>Cantidad de memoria, en bytes, que el sistema ha asignado para el proceso asociado que no se puede escribir en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.NonpagedSystemMemorySize64">
      <summary>Obtiene el tamaño de la memoria no paginada del sistema en bytes que se asignó para el proceso asociado.</summary>
      <returns>Tamaño de la memoria del sistema, expresado en bytes, que se asignó para el proceso asociado que no puede escribirse en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.OnExited">
      <summary>Genera el evento <see cref="E:System.Diagnostics.Process.Exited" />.</summary>
    </member>
    <member name="E:System.Diagnostics.Process.OutputDataReceived">
      <summary>Se produce cada vez que una aplicación escribe una línea en su secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> redirigida.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize">
      <summary>Obtiene el tamaño de la memoria paginada, en bytes, asignada para el proceso asociado.</summary>
      <returns>Cantidad de memoria, en bytes, asignada por el proceso asociado que se puede escribir en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedMemorySize64">
      <summary>Obtiene el tamaño de la memoria paginada, en bytes, asignada para el proceso asociado.</summary>
      <returns>Tamaño de la memoria, expresado en bytes, que se asignó en el archivo de paginación de la memoria virtual para el proceso asociado.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize">
      <summary>Obtiene el tamaño de la memoria paginable del sistema en bytes que se asignó para el proceso asociado.</summary>
      <returns>Cantidad de memoria, en bytes, que el sistema ha asignado para el proceso asociado que se puede escribir en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PagedSystemMemorySize64">
      <summary>Obtiene el tamaño de la memoria paginable del sistema en bytes que se asignó para el proceso asociado.</summary>
      <returns>El tamaño de la memoria del sistema, expresado en bytes, que se ha asignado para el proceso asociado que puede escribirse en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize">
      <summary>Obtiene el tamaño de memoria máximo en el archivo de paginación de la memoria virtual, en bytes, que usa el proceso asociado.</summary>
      <returns>Cantidad máxima de memoria, en bytes, asignada por el proceso asociado que se podría escribir en el archivo de paginación de la memoria virtual.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakPagedMemorySize64">
      <summary>Obtiene el tamaño de memoria máximo en el archivo de paginación de la memoria virtual, en bytes, que usa el proceso asociado.</summary>
      <returns>El tamaño de memoria máximo, expresado en bytes, asignado en el archivo de paginación de la memoria virtual para el proceso asociado desde su inicio.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize">
      <summary>Obtiene la cantidad máxima de memoria virtual, en bytes, que usa el proceso asociado.</summary>
      <returns>Cantidad máxima de memoria virtual, en bytes, solicitada por el proceso asociado.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakVirtualMemorySize64">
      <summary>Obtiene la cantidad máxima de memoria virtual, en bytes, que usa el proceso asociado.</summary>
      <returns>El tamaño máximo de memoria virtual, expresado en bytes, que se ha asignado para el proceso asociado desde su inicio.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet">
      <summary>Obtiene el tamaño de espacio de trabajo máximo para el proceso asociado, en bytes.</summary>
      <returns>Cantidad máxima de memoria física que el proceso asociado precisa de una sola vez, expresada en bytes.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PeakWorkingSet64">
      <summary>Obtiene la cantidad máxima de la memoria física, en bytes que usa el proceso asociado.</summary>
      <returns>Tamaño máximo de memoria física, expresado en bytes, que se asignó para el proceso asociado desde su inicio.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityBoostEnabled">
      <summary>Obtiene o establece un valor que indica si el sistema operativo debería aumentar temporalmente la prioridad del proceso asociado cuando la ventana principal tenga el foco.</summary>
      <returns>Es <see langword="true" /> si la prioridad del proceso debe aumentarse dinámicamente cuando este salga del estado de espera; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">La información de aumento de prioridad no pudo recuperarse del recurso del proceso asociado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">El identificador del proceso o el controlador del proceso es cero. (No se ha iniciado el proceso).</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.PriorityBoostEnabled" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PriorityClass">
      <summary>Obtiene o establece la categoría de prioridad general del proceso asociado.</summary>
      <returns>Categoría de prioridad del proceso asociado a partir de la cual se calcula el <see cref="P:System.Diagnostics.Process.BasePriority" /> del proceso.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">La información de la prioridad del proceso no pudo establecerse o recuperarse del recurso del proceso asociado.
o bien
El identificador del proceso o el controlador del proceso es cero. (No se ha iniciado el proceso).</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.PriorityClass" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no está disponible.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">No se puede establecer la clase de prioridad porque no usa un valor válido, según se define en la enumeración <see cref="T:System.Diagnostics.ProcessPriorityClass" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize">
      <summary>Obtiene el tamaño de memoria privada, en bytes, asignada para el proceso asociado.</summary>
      <returns>Número de bytes asignados por el proceso asociado que no pueden compartirse con otros procesos.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivateMemorySize64">
      <summary>Obtiene el tamaño de memoria privada, en bytes, asignada para el proceso asociado.</summary>
      <returns>Tamaño de la memoria, expresado en bytes, que se asignó para el proceso asociado que no puede compartirse con otros procesos.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.PrivilegedProcessorTime">
      <summary>Obtiene el tiempo de procesador con privilegios de este proceso.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que el proceso invirtió en la ejecución de código dentro del núcleo del sistema operativo.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessName">
      <summary>Obtiene el nombre del proceso.</summary>
      <returns>Nombre que el sistema usa para identificar el proceso ante el usuario.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso no tiene un identificador o no hay ningún proceso asociado a <see cref="T:System.Diagnostics.Process" />.
o bien
El proceso asociado finalizó.</exception>
      <exception cref="T:System.NotSupportedException">El proceso no está en este equipo.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.ProcessorAffinity">
      <summary>Obtiene o establece los procesadores en los que se puede programar la ejecución de los subprocesos de este proceso.</summary>
      <returns>Máscara de bits que representa los procesadores en los que pueden ejecutarse los subprocesos del proceso asociado. El valor predeterminado depende del número de procesadores del equipo. El valor predeterminado es 2 n -1, donde n es el número de procesadores.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">La información de <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> no pudo establecerse o recuperarse del recurso del proceso asociado.
o bien
El identificador del proceso o el controlador del proceso es cero. (No se ha iniciado el proceso).</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.ProcessorAffinity" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso <see cref="P:System.Diagnostics.Process.Id" /> no estaba disponible.
o bien
El proceso ha terminado.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Refresh">
      <summary>Descarta cualquier información acerca del proceso asociado que se haya almacenado en caché en el componente del proceso.</summary>
    </member>
    <member name="P:System.Diagnostics.Process.Responding">
      <summary>Obtiene un valor que indica si la interfaz de usuario del proceso está respondiendo.</summary>
      <returns>Es <see langword="true" /> si la interfaz de usuario del proceso asociado está respondiendo al sistema; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.Responding" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SafeHandle">
      <summary>Obtiene el identificador nativo de este proceso.</summary>
      <returns>Identificador nativo de este proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.SessionId">
      <summary>Obtiene el identificador de la sesión de Terminal Services para el proceso asociado.</summary>
      <returns>Identificador de la sesión de Terminal Services para el proceso asociado.</returns>
      <exception cref="T:System.NullReferenceException">No hay ninguna sesión asociada a este proceso.</exception>
      <exception cref="T:System.InvalidOperationException">No hay ningún proceso asociado a este identificador de sesión.
o bien
El proceso asociado no está en este equipo.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardError">
      <summary>Obtiene una secuencia que se usa para leer la salida de errores de la aplicación.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> que puede usarse para leer la secuencia de error estándar de la aplicación.</returns>
      <exception cref="T:System.InvalidOperationException">La secuencia <see cref="P:System.Diagnostics.Process.StandardError" /> no se ha definido para redirección; asegúrese de que <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> se establece en <see langword="true" /> y <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> que se establece en <see langword="false" />.
o bien
La secuencia <see cref="P:System.Diagnostics.Process.StandardError" /> se ha abierto para operaciones de lectura asincrónicas con <see cref="M:System.Diagnostics.Process.BeginErrorReadLine" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardInput">
      <summary>Obtiene una secuencia que se utiliza para escribir la entrada de la aplicación.</summary>
      <returns>
        <see cref="T:System.IO.StreamWriter" /> que puede usarse para escribir la secuencia de entrada estándar de la aplicación.</returns>
      <exception cref="T:System.InvalidOperationException">La secuencia <see cref="P:System.Diagnostics.Process.StandardInput" /> no se ha definido porque <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" /> está establecido en <see langword="false" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StandardOutput">
      <summary>Obtiene una secuencia usada para leer la salida de texto de la aplicación.</summary>
      <returns>
        <see cref="T:System.IO.StreamReader" /> que puede usarse para leer la secuencia de salida estándar de la aplicación.</returns>
      <exception cref="T:System.InvalidOperationException">La secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> no se ha definido para redirección; asegúrese de que <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> se establece en <see langword="true" /> y <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> que se establece en <see langword="false" />.
o bien
La secuencia <see cref="P:System.Diagnostics.Process.StandardOutput" /> se ha abierto para operaciones de lectura asincrónicas con <see cref="M:System.Diagnostics.Process.BeginOutputReadLine" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start">
      <summary>Inicia (o reutiliza) el recurso de proceso especificado por la propiedad <see cref="P:System.Diagnostics.Process.StartInfo" /> de este componente <see cref="T:System.Diagnostics.Process" /> y lo asocia al componente.</summary>
      <returns>Es <see langword="true" /> si se inicia un recurso de proceso; es <see langword="false" /> si no se inicia ningún recurso de proceso nuevo (por ejemplo, si se vuelve a usar un recurso existente).</returns>
      <exception cref="T:System.InvalidOperationException">No se especificó ningún nombre de archivo en <see cref="P:System.Diagnostics.Process.StartInfo" /> del componente <see cref="T:System.Diagnostics.Process" />.
o bien
El miembro <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> de la propiedad <see cref="P:System.Diagnostics.Process.StartInfo" /> es <see langword="true" /> mientras <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />o <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> es <see langword="true" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Método que no se admite en sistemas operativos sin la compatibilidad de shell, como Nano Server (solo en .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
      <summary>Inicia el recurso de proceso que se especifica mediante el parámetro que contiene la información de inicio del proceso (por ejemplo, el nombre de archivo del proceso que se va a iniciar) y asocia el recurso a un nuevo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="startInfo">
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> que contiene la información que se usa para iniciar el proceso, incluidos el nombre de archivo y los argumentos de línea de comandos.</param>
      <returns>Nuevo <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso, o <see langword="null" /> si no se inicia ningún recurso de proceso. Observe que un proceso nuevo que se inicia junto a instancias del mismo proceso ya en ejecución es independiente de los demás. Además, Inicio puede devolver un proceso no nulo con su propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> ya establecida en <see langword="true" />. En tal caso, el proceso iniciado puede haber activado una instancia existente de sí mismo y, a continuación, haber salido.</returns>
      <exception cref="T:System.InvalidOperationException">No se especificó ningún nombre de archivo en la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> del parámetro <paramref name="startInfo" />.
o bien
La propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> del parámetro <paramref name="startInfo" /> es <see langword="true" /> y las propiedades <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />, <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" /> o <see cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" /> también son <see langword="true" />.
o bien
La propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> del parámetro <paramref name="startInfo" /> es <see langword="true" /> y la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> no es <see langword="null" /> o está vacía, o la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.Password" /> no es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="startInfo" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.
o bien
El archivo especificado en la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> del parámetro <paramref name="startInfo" /> no se encontró.
o bien
La suma de la longitud de los argumentos y la longitud de la ruta de acceso completa al proceso supera 2080. El mensaje de error asociado a esta excepción puede ser uno de los siguientes: "El área de datos pasada a una llamada al sistema es demasiado pequeña". o "Se denegó el acceso".</exception>
      <exception cref="T:System.PlatformNotSupportedException">Método que no se admite en sistemas operativos sin la compatibilidad de shell, como Nano Server (solo en .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String)">
      <summary>Inicia un recurso de proceso con la especificación del nombre de un documento o de un archivo de aplicación y asocia el recurso a un nuevo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Nombre de un archivo de documento o aplicación que se va a ejecutar en el proceso.</param>
      <returns>Nuevo <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso, o <see langword="null" /> si no se inicia ningún recurso de proceso. Observe que un proceso nuevo que se inicia junto a instancias del mismo proceso ya en ejecución es independiente de los demás. Además, Inicio puede devolver un proceso no nulo con su propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> ya establecida en <see langword="true" />. En tal caso, el proceso iniciado puede haber activado una instancia existente de sí mismo y, a continuación, haber salido.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.
o bien
No se encontró el archivo especificado en <paramref name="fileName" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La variable de entorno PATH tiene una cadena que contiene comillas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
      <summary>Inicia un recurso de proceso mediante la especificación del nombre de una aplicación y un conjunto de argumentos de línea de comandos, y asocia el recurso a un nuevo componente <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Nombre de un archivo de aplicación que se va a ejecutar en el proceso.</param>
      <param name="arguments">Argumentos de línea de comandos que se van a pasar al iniciar el proceso.</param>
      <returns>Nuevo <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso, o <see langword="null" /> si no se inicia ningún recurso de proceso. Observe que un proceso nuevo que se inicia junto a instancias del mismo proceso ya en ejecución es independiente de los demás. Además, Inicio puede devolver un proceso no nulo con su propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> ya establecida en <see langword="true" />. En tal caso, el proceso iniciado puede haber activado una instancia existente de sí mismo y, a continuación, haber salido.</returns>
      <exception cref="T:System.InvalidOperationException">El parámetro <paramref name="fileName" /> o <paramref name="arguments" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.
o bien
No se encontró el archivo especificado en <paramref name="fileName" />.
o bien
La suma de la longitud de los argumentos y la longitud de la ruta de acceso completa al proceso supera 2080. El mensaje de error asociado a esta excepción puede ser uno de los siguientes: "El área de datos pasada a una llamada al sistema es demasiado pequeña". o "Se denegó el acceso".</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">La variable de entorno PATH tiene una cadena que contiene comillas.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Inicia un recurso de proceso mediante la especificación del nombre de una aplicación, un nombre de usuario, una contraseña y un dominio, y asocia el recurso a un nuevo componente de <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Nombre de un archivo de aplicación que se va a ejecutar en el proceso.</param>
      <param name="userName">Nombre de usuario que se va a usar al iniciarse el proceso.</param>
      <param name="password">
        <see cref="T:System.Security.SecureString" /> que contiene la contraseña que se va a utilizar al iniciarse el proceso.</param>
      <param name="domain">Dominio que se va a utilizar al iniciarse el proceso.</param>
      <returns>Nuevo <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso, o <see langword="null" /> si no se inicia ningún recurso de proceso. Observe que un proceso nuevo que se inicia junto a instancias del mismo proceso ya en ejecución es independiente de los demás. Además, Inicio puede devolver un proceso no nulo con su propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> ya establecida en <see langword="true" />. En tal caso, el proceso iniciado puede haber activado una instancia existente de sí mismo y, a continuación, haber salido.</returns>
      <exception cref="T:System.InvalidOperationException">No se especificó ningún nombre de archivo.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.
o bien
No se encontró el archivo especificado en <paramref name="fileName" />.</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este miembro no es compatible en Linux o macOS (solo en .NET Core).</exception>
    </member>
    <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
      <summary>Inicia un recurso de proceso mediante la especificación del nombre de una aplicación y un conjunto de argumentos de línea de comandos, un nombre de usuario, una contraseña y un dominio, y asocia el recurso a un nuevo componente de <see cref="T:System.Diagnostics.Process" />.</summary>
      <param name="fileName">Nombre de un archivo de aplicación que se va a ejecutar en el proceso.</param>
      <param name="arguments">Argumentos de línea de comandos que se van a pasar al iniciar el proceso.</param>
      <param name="userName">Nombre de usuario que se va a usar al iniciarse el proceso.</param>
      <param name="password">
        <see cref="T:System.Security.SecureString" /> que contiene la contraseña que se va a utilizar al iniciarse el proceso.</param>
      <param name="domain">Dominio que se va a utilizar al iniciarse el proceso.</param>
      <returns>Nuevo <see cref="T:System.Diagnostics.Process" /> que está asociado al recurso del proceso, o <see langword="null" /> si no se inicia ningún recurso de proceso. Observe que un proceso nuevo que se inicia junto a instancias del mismo proceso ya en ejecución es independiente de los demás. Además, Inicio puede devolver un proceso no nulo con su propiedad <see cref="P:System.Diagnostics.Process.HasExited" /> ya establecida en <see langword="true" />. En tal caso, el proceso iniciado puede haber activado una instancia existente de sí mismo y, a continuación, haber salido.</returns>
      <exception cref="T:System.InvalidOperationException">No se especificó ningún nombre de archivo.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error al abrir el archivo asociado.
o bien
No se encontró el archivo especificado en <paramref name="fileName" />.
o bien
La suma de la longitud de los argumentos y la longitud de la ruta de acceso completa al archivo asociado supera 2080. El mensaje de error asociado a esta excepción puede ser uno de los siguientes: "El área de datos pasada a una llamada al sistema es demasiado pequeña". o "Se denegó el acceso".</exception>
      <exception cref="T:System.ObjectDisposedException">El objeto del proceso ya se ha desechado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Este miembro no es compatible en Linux o macOS (solo en .NET Core).</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartInfo">
      <summary>Obtiene o establece las propiedades que se pasan al método <see cref="M:System.Diagnostics.Process.Start" /> de <see cref="T:System.Diagnostics.Process" />.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ProcessStartInfo" /> que representa los datos con los que iniciar el proceso. Estos argumentos incluyen el nombre del archivo ejecutable o del documento que se usó para iniciar el proceso.</returns>
      <exception cref="T:System.ArgumentNullException">El valor que especifica el <see cref="P:System.Diagnostics.Process.StartInfo" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Diagnostics.Process.Start" /> no se ha utilizado para iniciar el proceso.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.StartTime">
      <summary>Obtiene el momento en el que se inició el proceso asociado.</summary>
      <returns>Objeto que indica cuándo se inició el proceso. Si no se está ejecutando el proceso, se produce una excepción.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.StartTime" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.InvalidOperationException">El proceso ha terminado.
o bien
No se ha iniciado el proceso.</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">Se produjo un error en la llamada a la función de Windows.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.SynchronizingObject">
      <summary>Obtiene o establece el objeto utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como resultado de un evento de terminación del proceso.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como resultado de un evento <see cref="E:System.Diagnostics.Process.Exited" /> del proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.Threads">
      <summary>Obtiene el conjunto de subprocesos que se están ejecutando en el proceso asociado.</summary>
      <returns>Matriz de tipo <see cref="T:System.Diagnostics.ProcessThread" /> que representa los subprocesos del sistema operativo que se están ejecutando actualmente en el proceso asociado.</returns>
      <exception cref="T:System.SystemException">El proceso no tiene un <see cref="P:System.Diagnostics.Process.Id" />, o no hay ningún proceso asociado a la instancia <see cref="T:System.Diagnostics.Process" />.
o bien
El proceso asociado finalizó.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.ToString">
      <summary>Aplica formato de cadena al nombre del proceso, combinándolo con el tipo de componente principal, si es aplicable.</summary>
      <returns>
        <see cref="P:System.Diagnostics.Process.ProcessName" />, combinado con el valor devuelto de <see cref="M:System.Object.ToString" /> del componente base.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.TotalProcessorTime">
      <summary>Obtiene el tiempo de procesador total de este proceso.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> indica la cantidad de tiempo que el proceso asociado ha empleado en utilizar la CPU. Este valor es la suma de <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> y <see cref="P:System.Diagnostics.Process.PrivilegedProcessorTime" />.</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.TotalProcessorTime" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.UserProcessorTime">
      <summary>Obtiene el tiempo de procesador de usuario de este proceso.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que el proceso asociado empleó en ejecutar código en la parte de la aplicación que corresponde al proceso (no en el núcleo del sistema operativo).</returns>
      <exception cref="T:System.NotSupportedException">Está intentando obtener acceso a la propiedad <see cref="P:System.Diagnostics.Process.UserProcessorTime" /> de un proceso que se ejecuta en un equipo remoto. Esta propiedad está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize">
      <summary>Obtiene el tamaño de la memoria virtual del proceso en bytes.</summary>
      <returns>Cantidad de memoria virtual, en bytes, solicitada por el proceso asociado.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.VirtualMemorySize64">
      <summary>Obtiene la cantidad de la memoria virtual, en bytes, que se asignó para el proceso asociado.</summary>
      <returns>Tamaño de memoria virtual, expresado en bytes, que se asignó para el proceso asociado.</returns>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit">
      <summary>Indica al componente <see cref="T:System.Diagnostics.Process" /> que espere indefinidamente hasta que el proceso asociado termine.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo tener acceso al valor de espera.</exception>
      <exception cref="T:System.SystemException">No se ha establecido ningún <see cref="P:System.Diagnostics.Process.Id" /> de proceso y no existe un <see cref="P:System.Diagnostics.Process.Handle" /> desde el que se pueda determinar la propiedad <see cref="P:System.Diagnostics.Process.Id" />.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" /> .
o bien
Está intentando llamar a <see cref="M:System.Diagnostics.Process.WaitForExit" /> para un proceso que se ejecuta en un equipo remoto. Este método está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForExit(System.Int32)">
      <summary>Indica al componente <see cref="T:System.Diagnostics.Process" /> que espere a que el proceso asociado termine durante el número de milisegundos especificado.</summary>
      <param name="milliseconds">Cantidad de tiempo, en milisegundos, que se esperará hasta que termine el proceso asociado. El valor máximo es el valor mayor posible de un entero de 32 bits, que representa el infinito para el sistema operativo.</param>
      <returns>Es <see langword="true" /> si el proceso asociado finalizó; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo tener acceso al valor de espera.</exception>
      <exception cref="T:System.SystemException">No se ha establecido ningún <see cref="P:System.Diagnostics.Process.Id" /> de proceso y no existe un <see cref="P:System.Diagnostics.Process.Handle" /> desde el que se pueda determinar la propiedad <see cref="P:System.Diagnostics.Process.Id" />.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" /> .
o bien
Está intentando llamar a <see cref="M:System.Diagnostics.Process.WaitForExit(System.Int32)" /> para un proceso que se ejecuta en un equipo remoto. Este método está disponible únicamente para los procesos que se ejecutan en el equipo local.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="milliseconds" /> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle">
      <summary>Hace que el componente <see cref="T:System.Diagnostics.Process" /> espere indefinidamente a que el proceso asociado entre en estado de inactividad. Esta sobrecarga solo se aplica a los procesos que tengan una interfaz de usuario y, por tanto, un bucle de mensajes.</summary>
      <returns>
        <see langword="true" /> si el proceso asociado alcanzó un estado de inactividad.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso no tiene una interfaz gráfica.
o bien
Se ha producido un error desconocido. El proceso no pudo entrar en un estado inactivo.
o bien
El proceso ya se cerró.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="M:System.Diagnostics.Process.WaitForInputIdle(System.Int32)">
      <summary>Hace que el componente <see cref="T:System.Diagnostics.Process" /> espere a que el proceso asociado entre en estado de inactividad durante el número de milisegundos especificado. Esta sobrecarga solo se aplica a los procesos que tengan una interfaz de usuario y, por tanto, un bucle de mensajes.</summary>
      <param name="milliseconds">Valor de 1 para <see cref="F:System.Int32.MaxValue" /> que especifica el tiempo, en milisegundos, que se debe esperar para que el proceso asociado esté inactivo. El valor 0 especifica una devolución inmediata, y el valor -1 especifica una espera infinita.</param>
      <returns>Es <see langword="true" /> si el proceso asociado alcanzó el estado de inactividad; de lo contrario, es <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">El proceso no tiene una interfaz gráfica.
o bien
Se ha producido un error desconocido. El proceso no pudo entrar en un estado inactivo.
o bien
El proceso ya se cerró.
o bien
No hay ningún proceso asociado a este objeto <see cref="T:System.Diagnostics.Process" />.</exception>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet">
      <summary>Obtiene el uso de memoria física del proceso asociado, en bytes.</summary>
      <returns>Cantidad total de memoria física que el proceso asociado está usando, expresada en bytes.</returns>
    </member>
    <member name="P:System.Diagnostics.Process.WorkingSet64">
      <summary>Obtiene el tamaño de memoria física, expresado en bytes, que se asignó para el proceso asociado.</summary>
      <returns>Tamaño de memoria física, expresado en bytes, que se asignó para el proceso asociado.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModule">
      <summary>Representa un archivo .dll o .exe que se carga en un proceso determinado.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.BaseAddress">
      <summary>Obtiene la dirección de memoria donde se cargó el módulo.</summary>
      <returns>La dirección de carga del módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.EntryPointAddress">
      <summary>Obtiene la dirección de memoria para la función que se ejecuta cuando el sistema carga y ejecuta el módulo.</summary>
      <returns>El punto de entrada del módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileName">
      <summary>Obtiene la ruta de acceso completa al módulo.</summary>
      <returns>La ruta de acceso completa que define la ubicación del módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
      <summary>Obtiene información de versión sobre el módulo.</summary>
      <returns>
        <see cref="T:System.Diagnostics.FileVersionInfo" /> que contiene la información de versión del módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleMemorySize">
      <summary>Obtiene la cantidad de memoria necesaria para cargar el módulo.</summary>
      <returns>Tamaño, en bytes, de la memoria que ocupa el módulo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModule.ModuleName">
      <summary>Obtiene el nombre del módulo de proceso.</summary>
      <returns>El nombre del módulo.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModule.ToString">
      <summary>Convierte el nombre del módulo en una cadena.</summary>
      <returns>Valor de propiedad <see cref="P:System.Diagnostics.ProcessModule.ModuleName" />.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessModuleCollection">
      <summary>Proporciona una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessModuleCollection" /> sin instancias de <see cref="T:System.Diagnostics.ProcessModule" /> asociadas.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Diagnostics.ProcessModuleCollection" />, con la matriz especificada de instancias de <see cref="T:System.Diagnostics.ProcessModule" />.</summary>
      <param name="processModules">Matriz de instancias de <see cref="T:System.Diagnostics.ProcessModule" /> con la que se inicializa esta instancia de <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)">
      <summary>Determina si el módulo de proceso especificado se encuentra en la colección.</summary>
      <param name="module">Instancia de <see cref="T:System.Diagnostics.ProcessModule" /> que indica el módulo que se va a buscar en la colección.</param>
      <returns>Es <see langword="true" /> si el módulo está en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)">
      <summary>Copia una matriz de instancias de <see cref="T:System.Diagnostics.ProcessModule" /> a la colección, en el índice especificado.</summary>
      <param name="array">Matriz de instancias <see cref="T:System.Diagnostics.ProcessModule" /> que se va a agregar a la colección.</param>
      <param name="index">Ubicación en la que se van a agregar las nuevas instancias.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
      <summary>Proporciona la ubicación de un módulo especificado en la colección.</summary>
      <param name="module">El <see cref="T:System.Diagnostics.ProcessModule" /> cuyo índice se recupera.</param>
      <returns>Índice de base cero que define la ubicación del módulo en <see cref="T:System.Diagnostics.ProcessModuleCollection" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessModuleCollection.Item(System.Int32)">
      <summary>Obtiene un índice para recorrer en iteración el conjunto de módulos de proceso.</summary>
      <param name="index">Valor del índice de base cero del módulo de la colección.</param>
      <returns>Objeto <see cref="T:System.Diagnostics.ProcessModule" /> que indiza los módulos de la colección.</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessPriorityClass">
      <summary>Indica la prioridad que el sistema asocia a un proceso. Este valor, junto con el valor de prioridad de cada subproceso del proceso, determina el nivel de prioridad base de cada subproceso.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.AboveNormal">
      <summary>Especifica que el proceso tiene una prioridad superior a <see langword="Normal" /> pero inferior a <see langword="High" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.BelowNormal">
      <summary>Especifica que el proceso tiene una prioridad superior a <see langword="Idle" /> pero inferior a <see langword="Normal" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.High">
      <summary>Especifica que el proceso realiza tareas críticas en el tiempo que deben ejecutarse de inmediato, como el cuadro de diálogo <see langword="Task List" />, que debe responder rápidamente cuando el usuario lo llama, independientemente de la carga del sistema operativo. Los subprocesos del proceso tienen prioridad sobre los subprocesos de aquellos procesos de clase de prioridad normal o inactiva. Extreme las precauciones al especificar <see langword="High" /> para la clase de prioridad del proceso, ya que una aplicación de la clase de prioridad alta puede usar casi todo el tiempo de procesador disponible.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Idle">
      <summary>Especifica que los subprocesos de este proceso se ejecutan solo cuando el sistema está inactivo, como el protector de pantalla. Los subprocesos del proceso tienen menor prioridad que los subprocesos de cualquier proceso que se ejecute en una clase de prioridad más alta. Esta clase de prioridad se hereda mediante procesos secundarios.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.Normal">
      <summary>Especifica que el proceso no tiene necesidades de programación especiales.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessPriorityClass.RealTime">
      <summary>Especifica que el proceso tiene la prioridad más alta posible. Los subprocesos de un proceso con prioridad <see langword="RealTime" /> tienen prioridad sobre los subprocesos de todos los demás procesos, incluidos los procesos del sistema operativo que realizan tareas importantes. Por lo tanto, un proceso de prioridad <see langword="RealTime" /> que se ejecute durante más de un breve intervalo puede hacer que las memorias caché del disco no se vacíen o que el mouse no responda.</summary>
    </member>
    <member name="T:System.Diagnostics.ProcessStartInfo">
      <summary>Especifica un conjunto de valores que se usa cuando se inicia un proceso.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessStartInfo" /> sin especificar un nombre de archivo con el que iniciar el proceso.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessStartInfo" /> y especifica un nombre de archivo, como una aplicación o un documento, con el que se inicia el proceso.</summary>
      <param name="fileName">Aplicación o documento con que se inicia un proceso.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessStartInfo" /> y especifica un nombre de archivo de aplicación con el que se iniciará el proceso, así como un conjunto de argumentos de línea de comandos que se pasarán a la aplicación.</summary>
      <param name="fileName">Aplicación con que se inicia un proceso.</param>
      <param name="arguments">Argumentos de línea de comandos que se van a pasar a la aplicación al iniciar el proceso.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ArgumentList">
      <summary>Obtiene una colección de argumentos de línea de comandos que se van a usar al iniciar la aplicación.</summary>
      <returns>Colección de argumentos de la línea de comandos.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
      <summary>Obtiene o establece el conjunto de argumentos de línea de comandos que se van a usar al iniciar la aplicación.</summary>
      <returns>Cadena única que contiene los argumentos para pasar a la aplicación de destino especificada en la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow">
      <summary>Obtiene o establece un valor que indica si el proceso se va a iniciar en una nueva ventana.</summary>
      <returns>Es <see langword="true" /> si el proceso se debe iniciar sin crear una nueva ventana que lo contenga; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Domain">
      <summary>Obtiene o establece un valor que identifica el dominio que se va a usar al iniciarse el proceso. Si este valor es <see langword="null" />, la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> debe especificarse en formato UPN.</summary>
      <returns>Dominio de Active Directory que se va a usar al iniciarse el proceso. Si este valor es <see langword="null" />, la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> debe especificarse en formato UPN.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Environment">
      <summary>Obtiene las variables de entorno que se aplican a este proceso y a sus procesos secundarios.</summary>
      <returns>Diccionario genérico que contiene las variables de entorno que se aplican a este proceso y a sus procesos secundarios. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
      <summary>Obtiene rutas de acceso para búsqueda de archivos, directorios para archivos temporales, opciones específicas de la aplicación y otra información similar.</summary>
      <returns>Diccionario de cadenas que proporciona las variables de entorno que se aplican a este proceso y a los procesos secundarios. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialog">
      <summary>Obtiene o establece un valor que indica si se va a mostrar un cuadro de diálogo de error al usuario si el proceso no se puede iniciar.</summary>
      <returns>Es <see langword="true" /> si un cuadro de diálogo debería mostrarse en la pantalla si el proceso no se puede iniciar; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle">
      <summary>Obtiene o establece el identificador de ventana que se usará cuando se muestre un cuadro de diálogo para un proceso que no se puede iniciar.</summary>
      <returns>Puntero al identificador del cuadro de diálogo de error que aparece como resultado de un error en el inicio del proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
      <summary>Obtiene o establece la aplicación o el documento que se va a iniciar.</summary>
      <returns>Nombre de la aplicación que se va a iniciar o nombre de un documento que tiene un tipo de archivo asociado a una aplicación que dispone de una acción de apertura predeterminada. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile">
      <summary>Obtiene o establece un valor que indica si el perfil de usuario de Windows se va a cargar desde el registro.</summary>
      <returns>
        <see langword="true" /> si el perfil de usuario de Windows se debe cargar; si no, <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Password">
      <summary>Obtiene o establece una cadena segura que contiene la contraseña del usuario que se va a usar al iniciar el proceso.</summary>
      <returns>Contraseña de usuario que se va a usar al iniciar el proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText">
      <summary>Obtiene o establece la contraseña de usuario no cifrada que se va a usar al iniciar el proceso.</summary>
      <returns>Contraseña de usuario no cifrada.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError">
      <summary>Obtiene o establece un valor que indica si la salida de errores de una aplicación se escribe en la secuencia de <see cref="P:System.Diagnostics.Process.StandardError" />.</summary>
      <returns>
        <see langword="true" /> si la salida de error se debe escribir en <see cref="P:System.Diagnostics.Process.StandardError" />; si no, <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput">
      <summary>Obtiene o establece un valor que indica si la entrada para una aplicación se lee de la secuencia de <see cref="P:System.Diagnostics.Process.StandardInput" />.</summary>
      <returns>
        <see langword="true" /> si la entrada se debe leer desde <see cref="P:System.Diagnostics.Process.StandardInput" />; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput">
      <summary>Obtiene o establece un valor que indica si la salida de una aplicación se escribe en la secuencia de <see cref="P:System.Diagnostics.Process.StandardOutput" />.</summary>
      <returns>
        <see langword="true" /> si la salida se debe escribir en <see cref="P:System.Diagnostics.Process.StandardOutput" />; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
      <summary>Obtiene o establece la codificación preferente para la salida de errores.</summary>
      <returns>Objeto que representa la codificación preferente para la salida de errores. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding">
      <summary>Obtiene o establece la codificación preferente para la entrada estándar.</summary>
      <returns>Objeto que representa la codificación preferida para la entrada estándar. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
      <summary>Obtiene o establece la codificación preferente para la salida estándar.</summary>
      <returns>Objeto que representa la codificación preferente para la salida estándar. El valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
      <summary>Obtiene o establece el nombre de usuario que se va a usar al iniciar el proceso. Si usa el formato UPN, <paramref name="user" />@<paramref name="DNS_domain_name" />, la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> debe ser <see langword="null" />.</summary>
      <returns>Nombre de usuario que se va a usar al iniciarse el proceso. Si usa el formato UPN, <paramref name="user" />@<paramref name="DNS_domain_name" />, la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> debe ser <see langword="null" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.UseShellExecute">
      <summary>Obtiene o establece un valor que indica si se va a usar el shell del sistema operativo para iniciar el proceso.</summary>
      <returns>
        <see langword="true" /> si el shell se debe usar al iniciar el proceso; <see langword="false" /> si el proceso debería crearse directamente desde el archivo ejecutable. El valor predeterminado es <see langword="true" /> en .NET Framework aplicaciones y <see langword="false" /> en aplicaciones de .NET Core.</returns>
      <exception cref="T:System.PlatformNotSupportedException">Se produce un intento de establecer el valor en <see langword="true" /> en aplicaciones de la Plataforma Universal de Windows (UWP).</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verb">
      <summary>Obtiene o establece el verbo que se usará al abrir la aplicación o el documento que especifique la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>Acción que se realizará con el archivo que abra el proceso. El valor predeterminado es una cadena vacía (""), lo que significa que no se realizará ninguna acción.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
      <summary>Obtiene el conjunto de verbos asociado al tipo de archivo especificado en la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</summary>
      <returns>Acciones que el sistema puede aplicar al archivo indicado mediante la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WindowStyle">
      <summary>Obtiene o establece el estado de ventana que se usará cuando se inicie el proceso.</summary>
      <returns>Uno de los valores de enumeración que indica si el proceso se inicia en una ventana maximizada, minimizada, normal (ni maximizada ni minimizada) o invisible. El valor predeterminado es <see langword="Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">El estilo de ventana no es uno de los miembros de la enumeración <see cref="T:System.Diagnostics.ProcessWindowStyle" />.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
      <summary>Cuando la propiedad de <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> es <see langword="false" />, obtiene o establece el directorio de trabajo para que el proceso se inicie. Cuando <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> es <see langword="true" />, obtiene o establece el directorio que contiene el proceso que se iniciará.</summary>
      <returns>Cuando <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> es <see langword="true" />, el nombre completo del directorio que contiene el proceso que se va a iniciar. Cuando la propiedad de <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> es <see langword="false" />, el directorio de trabajo para que el proceso se inicie. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="T:System.Diagnostics.ProcessThread">
      <summary>Representa un subproceso del sistema operativo.</summary>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.BasePriority">
      <summary>Obtiene la prioridad base del subproceso.</summary>
      <returns>Prioridad base del subproceso, calculada por el sistema operativo mediante la combinación de la clase de prioridad del proceso y el nivel de prioridad del subproceso asociado.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.CurrentPriority">
      <summary>Obtiene la prioridad actual del subproceso.</summary>
      <returns>Prioridad actual del subproceso, que puede variar respecto a la prioridad base en función de cómo programe el subproceso el sistema operativo. Es posible aumentar temporalmente la prioridad para un subproceso activo.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.Id">
      <summary>Obtiene el identificador único del subproceso.</summary>
      <returns>Identificador único asociado a un subproceso específico.</returns>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.IdealProcessor">
      <summary>Establece el procesador preferido para ejecutar este subproceso.</summary>
      <returns>Procesador preferido para el subproceso, que se utiliza cuando el sistema programa los subprocesos, con el fin de determinar en qué procesador se ejecutará.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">El sistema no pudo establecer el subproceso para que se iniciara en el procesador especificado.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityBoostEnabled">
      <summary>Obtiene o establece un valor que indica si el sistema operativo debe aumentar temporalmente la prioridad del subproceso asociado siempre que la ventana principal del proceso del subproceso reciba el foco.</summary>
      <returns>Es <see langword="true" /> para aumentar la prioridad del subproceso cuando el usuario interactúe con la interfaz del proceso; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar la información del aumento de prioridad.
o bien
No se pudo establecer la información del aumento de prioridad.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PriorityLevel">
      <summary>Obtiene o establece el nivel de prioridad del subproceso.</summary>
      <returns>Uno de los valores de <see cref="T:System.Diagnostics.ThreadPriorityLevel" />, que especifica un intervalo que limita la prioridad del subproceso.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar la información del nivel de prioridad de subproceso.
O bien
No se pudo establecer el nivel de prioridad del subproceso.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.PrivilegedProcessorTime">
      <summary>Obtiene el tiempo durante el cual el subproceso ha ejecutado código dentro del núcleo del sistema operativo.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que el subproceso ha estado ejecutando código dentro del núcleo del sistema operativo.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar el tiempo del subproceso.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ProcessorAffinity">
      <summary>Establece los procesadores en los que puede ejecutarse el subproceso asociado.</summary>
      <returns>
        <see cref="T:System.IntPtr" /> que señala a un conjunto de bits, cada uno de los cuales representa a un procesador en el que puede ejecutarse el subproceso.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo establecer la afinidad de procesador.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="M:System.Diagnostics.ProcessThread.ResetIdealProcessor">
      <summary>Restablece el procesador ideal para este subproceso a fin de indicar que no hay un solo procesador ideal. En otras palabras, cualquier procesador es ideal.</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo restablecer el procesador ideal.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartAddress">
      <summary>Obtiene la dirección de memoria de la función a la que llamó el sistema operativo para iniciar este subproceso.</summary>
      <returns>Dirección inicial del subproceso, que señala a la función definida por la aplicación que el subproceso ejecuta.</returns>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.StartTime">
      <summary>Obtiene la hora a la que el sistema operativo inició el subproceso.</summary>
      <returns>
        <see cref="T:System.DateTime" /> que representa la hora que tenía el sistema cuando el sistema operativo inició el subproceso.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar el tiempo del subproceso.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.ThreadState">
      <summary>Obtiene el estado actual de este subproceso.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ThreadState" /> que indica el estado de ejecución del subproceso; por ejemplo, en ejecución, en espera o terminado.</returns>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.TotalProcessorTime">
      <summary>Obtiene la cantidad total de tiempo que este subproceso ha estado usando el procesador.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que el subproceso ha tenido el control del procesador.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar el tiempo del subproceso.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.UserProcessorTime">
      <summary>Obtiene el tiempo durante el cual el subproceso asociado ha ejecutado código dentro de la aplicación.</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> que indica la cantidad de tiempo que el subproceso ha estado ejecutando código dentro de la aplicación, en lugar de dentro del núcleo del sistema operativo.</returns>
      <exception cref="T:System.ComponentModel.Win32Exception">No se pudo recuperar el tiempo del subproceso.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="P:System.Diagnostics.ProcessThread.WaitReason">
      <summary>Obtiene la razón por la que el subproceso está esperando.</summary>
      <returns>
        <see cref="T:System.Diagnostics.ThreadWaitReason" /> que representa la razón por la cual el subproceso se encuentra en estado de espera.</returns>
      <exception cref="T:System.InvalidOperationException">El subproceso no se encuentra en estado de espera.</exception>
      <exception cref="T:System.NotSupportedException">El proceso está en un equipo remoto.</exception>
    </member>
    <member name="T:System.Diagnostics.ProcessThreadCollection">
      <summary>Proporciona una colección fuertemente tipada de objetos <see cref="T:System.Diagnostics.ProcessThread" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessThreadCollection" /> sin instancias de <see cref="T:System.Diagnostics.ProcessThread" /> asociadas.</summary>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.ProcessThreadCollection" /> utilizando la matriz de instancias de <see cref="T:System.Diagnostics.ProcessThread" /> especificada.</summary>
      <param name="processThreads">Matriz de instancias de <see cref="T:System.Diagnostics.ProcessThread" /> con la que se inicializa esta instancia de <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)">
      <summary>Agrega un subproceso del proceso a la colección.</summary>
      <param name="thread">Subproceso que se va a agregar a la colección.</param>
      <returns>Índice de base cero del subproceso de la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)">
      <summary>Determina si el subproceso de proceso especificado se encuentra en la colección.</summary>
      <param name="thread">Instancia de <see cref="T:System.Diagnostics.ProcessThread" /> que indica el subproceso que se va a buscar en la colección.</param>
      <returns>Es <see langword="true" /> si el subproceso está en la colección; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)">
      <summary>Copia una matriz de instancias de <see cref="T:System.Diagnostics.ProcessThread" /> a la colección, en el índice especificado.</summary>
      <param name="array">Matriz de instancias de <see cref="T:System.Diagnostics.ProcessThread" /> que se va a agregar a la colección.</param>
      <param name="index">Ubicación en la que se van a agregar las nuevas instancias.</param>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
      <summary>Proporciona la ubicación de un subproceso especificado en la colección.</summary>
      <param name="thread">Objeto <see cref="T:System.Diagnostics.ProcessThread" /> cuyo índice se recupera.</param>
      <returns>Índice de base cero que define la ubicación del subproceso en la <see cref="T:System.Diagnostics.ProcessThreadCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)">
      <summary>Inserta un subproceso de proceso en la ubicación especificada de la colección.</summary>
      <param name="index">Índice de base cero que indica la ubicación en la que se va a insertar el subproceso.</param>
      <param name="thread">Subproceso que se va a insertar en la colección.</param>
    </member>
    <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
      <summary>Obtiene un índice para recorrer en iteración el conjunto de subprocesos.</summary>
      <param name="index">Valor del índice de base cero del subproceso de la colección.</param>
      <returns>Objeto <see cref="T:System.Diagnostics.ProcessThread" /> que indiza los subprocesos de la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
      <summary>Elimina un subproceso de proceso de la colección.</summary>
      <param name="thread">Subproceso que se va a quitar de la colección.</param>
    </member>
    <member name="T:System.Diagnostics.ProcessWindowStyle">
      <summary>Determinaba cómo debe aparecer una ventana cuando el sistema inicia un proceso.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Hidden">
      <summary>Estilo de ventana oculta. Una ventana puede estar visible u oculta. El sistema muestra una ventana oculta sin dibujarla. Si una ventana está oculta, en realidad está deshabilitada. Una ventana oculta puede procesar mensajes del sistema o de otras ventanas, pero no puede procesar los datos de entrada del usuario ni mostrar los de salida. Una aplicación, con frecuencia, puede mantener oculta una nueva ventana mientras personaliza su aspecto y, a continuación, hacer que el estilo de ventana sea <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />. Para utilizar <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" />, la propiedad <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> debe ser <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Maximized">
      <summary>Estilo de ventana maximizada. De manera predeterminada, el sistema agranda una ventana maximizada para que ocupe toda la pantalla o, en el caso de las ventanas secundarias, toda el área de cliente de la ventana primaria. Si la ventana tiene barra de título, el sistema la mueve automáticamente a la parte superior de la pantalla o del área de cliente de la ventana primaria. Además, el sistema deshabilita el borde de tamaño de la ventana y la capacidad de ubicación de ventana de la barra de título para que el usuario no pueda mover la ventana arrastrando la barra de título.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Minimized">
      <summary>Estilo de ventana minimizada. De manera predeterminada, el sistema reduce una ventana minimizada al tamaño del botón de la barra de tareas y la mueve a la barra de tareas.</summary>
    </member>
    <member name="F:System.Diagnostics.ProcessWindowStyle.Normal">
      <summary>Estilo de ventana normal y visible. El sistema muestra en la pantalla una ventana con el estilo <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />, en una ubicación predeterminada. Si la ventana está visible, el usuario puede introducir información en la ventana y ver los resultados de la misma. Una aplicación, con frecuencia, puede inicializar una nueva ventana con el estilo <see cref="F:System.Diagnostics.ProcessWindowStyle.Hidden" /> mientras personaliza su aspecto y, a continuación, hacer que el estilo de ventana sea <see cref="F:System.Diagnostics.ProcessWindowStyle.Normal" />.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadPriorityLevel">
      <summary>Especifica el nivel de prioridad de un subproceso.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.AboveNormal">
      <summary>Especifica un paso por encima de la prioridad normal para la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.BelowNormal">
      <summary>Especifica un paso por debajo de la prioridad normal para la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Highest">
      <summary>Especifica la prioridad más alta. En otras palabras, dos pasos por encima de la prioridad normal para la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Idle">
      <summary>Especifica la prioridad de inactividad. Éste es el valor de prioridad más bajo posible para todos los subprocesos, independientemente del valor de la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Lowest">
      <summary>Especifica la prioridad más baja. Es decir, dos pasos por debajo de la prioridad normal para la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.Normal">
      <summary>Especifica la prioridad normal para la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadPriorityLevel.TimeCritical">
      <summary>Especifica la prioridad de tiempo crítico. Éste es el valor de prioridad más alto de todos los subprocesos, independientemente del valor de la clase <see cref="T:System.Diagnostics.ProcessPriorityClass" /> asociada.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadState">
      <summary>Especifica el estado de ejecución actual del subproceso.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Initialized">
      <summary>Estado que indica que el subproceso se ha inicializado, pero no se ha iniciado todavía.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Ready">
      <summary>Estado que indica que el subproceso está esperando para usar un procesador porque no hay ninguno libre. El subproceso está preparado para ejecutarse en el primer procesador que quede disponible.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Running">
      <summary>Estado que indica que el subproceso está usando un procesador actualmente.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Standby">
      <summary>Estado que indica que el subproceso va a empezar a usar un procesador. En un momento dado, sólo puede haber un subproceso en este estado.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Terminated">
      <summary>Estado que indica que el subproceso ha finalizado su ejecución y ha terminado.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Transition">
      <summary>Estado que indica que el subproceso está esperando un recurso, que no es el procesador, para poder ejecutarse. Por ejemplo, puede estar esperando a que la pila de ejecución se pagine desde el disco.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Unknown">
      <summary>No se conoce el estado del subproceso.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadState.Wait">
      <summary>Estado que indica que el subproceso no está listo para usar el procesador porque está esperando a que termine una operación periférica o a que quede libre un recurso. Cuando el subproceso esté listo, se volverá a programar.</summary>
    </member>
    <member name="T:System.Diagnostics.ThreadWaitReason">
      <summary>Especifica la razón por la que el subproceso está esperando.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairHigh">
      <summary>El subproceso está esperando un par de eventos alto.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.EventPairLow">
      <summary>El subproceso está esperando un par de eventos bajo.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.ExecutionDelay">
      <summary>La ejecución del subproceso está retardada.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Executive">
      <summary>El subproceso está esperando al programador.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.FreePage">
      <summary>El subproceso está esperando una página de memoria virtual libre.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReceive">
      <summary>El subproceso está esperando a que llegue una llamada a procedimiento local.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.LpcReply">
      <summary>El subproceso está esperando a que llegue la respuesta a una llamada a procedimiento local.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageIn">
      <summary>El subproceso está esperando a que llegue a la memoria una página de memoria virtual.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.PageOut">
      <summary>El subproceso está esperando a que se escriba en el disco una página de memoria virtual.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Suspended">
      <summary>La ejecución del subproceso está suspendida.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.SystemAllocation">
      <summary>El subproceso está esperando la asignación del sistema.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.Unknown">
      <summary>No se conoce la razón por la que el subproceso está esperando.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.UserRequest">
      <summary>El subproceso está esperando una solicitud del usuario.</summary>
    </member>
    <member name="F:System.Diagnostics.ThreadWaitReason.VirtualMemory">
      <summary>El subproceso está esperando a que el sistema asigne memoria virtual.</summary>
    </member>
  </members>
</doc>