<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Core</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indica el estilo de ventana que se va a utilizar para el programa invocado al llamar a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>Se oculta la ventana y el foco se pasa a la ventana oculta. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHide" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>La ventana se maximiza con foco. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMaximizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>La ventana se muestra como un icono con foco. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMinimizedFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>La ventana se muestra como un icono. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMinimizedNoFocus" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>La ventana tiene el foco y vuelve a su tamaño y posición originales. Este miembro es equivalente a la constante <see langword="vbNormalFocus" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>La ventana se restaura a su tamaño y posición más recientes. La ventana activa actualmente permanece activa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNormalNoFocus" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indica el tipo de procedimiento que se debe invocar al llamar a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>Se recupera el valor de propiedad.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbGet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>Se determina el valor de propiedad de objeto. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLet" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>Se invoca un método.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbMethod" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>Se determina el valor de propiedad.  Este miembro es equivalente a la constante de Visual Basic <see langword="vbSet" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>Una <see langword="Collection" /> de Visual Basic es un conjunto ordenado de elementos a los que se puede hacer referencia como una unidad.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Crea y devuelve un nuevo objeto <see cref="T:Microsoft.VisualBasic.Collection" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Agrega un elemento a un objeto <see langword="Collection" />.</summary>
      <param name="Item">Obligatorio. Objeto de cualquier tipo que especifica el elemento que se va a agregar a la colección.</param>
      <param name="Key">Opcional. Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar en lugar de un índice de posición para obtener acceso a este nuevo elemento de la colección.</param>
      <param name="Before">Opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección delante del elemento identificado por el argumento <paramref name="Before" />. Si <paramref name="Before" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. Si <paramref name="Before" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</param>
      <param name="After">Opcional. Expresión que especifica una posición relativa en la colección. El elemento que se va a agregar se coloca en la colección detrás del elemento identificado por el argumento <paramref name="After" />. Si <paramref name="After" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see langword="Count" /> de la colección. Si <paramref name="After" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia. No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Elimina todos los elementos de un objeto <see langword="Collection" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Devuelve un valor que indica si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta.</summary>
      <param name="Key">Obligatorio. Expresión de tipo <see langword="String" /> que especifica la clave que se va a buscar en los elementos de la colección.</param>
      <returns>
        <see langword="true" /> si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Obtiene el número de elementos de una colección.</summary>
      <returns>El número de elementos de una colección.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns>Enumerador que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Index">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</param>
      <returns>Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Index">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección. O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</param>
      <returns>Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</summary>
      <param name="Key">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</param>
      <returns>Un elemento específico de un objeto <see langword="Collection" /> por posición o por clave.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Quita un elemento de un objeto <see langword="Collection" />.</summary>
      <param name="Index">Expresión numérica que especifica la posición de un elemento de la colección. <paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Quita un elemento de un objeto <see langword="Collection" />.</summary>
      <param name="Key">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección. <paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>El atributo <see langword="ComClassAttribute" /> indica al compilador que agregue los metadatos que permiten exponer una clase como un objeto COM.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
      <param name="_InterfaceID">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see langword="ComClassAttribute" />.</summary>
      <param name="_ClassID">Inicializa el valor de la propiedad <see langword="ClassID" /> que se utiliza para identificar de manera única una clase.</param>
      <param name="_InterfaceID">Inicializa el valor de la propiedad <see langword="InterfaceID" /> que se utiliza para identificar de manera única una interfaz.</param>
      <param name="_EventId">Inicializa el valor de la propiedad <see langword="EventID" /> que se utiliza para identificar de manera única un evento.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Obtiene un identificador de clase que se utiliza para identificar de manera única una clase.</summary>
      <returns>Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Obtiene un identificador de evento que se utiliza para identificar de manera única un evento.</summary>
      <returns>Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única un evento de la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Obtiene un identificador de interfaz que se utiliza para identificar de manera única una interfaz.</summary>
      <returns>Sólo lectura. Una cadena que puede utilizar el compilador para identificar de manera única una interfaz de la clase cuando se crea un objeto COM.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</summary>
      <returns>Un valor <see langword="Boolean" /> que indica que el nombre de la interfaz COM oculta o prevalece sobre otro miembro de la clase o clase base.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indica cómo comparar las cadenas cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Realiza una comparación binaria. Este miembro es equivalente a la constante de Visual Basic <see langword="vbBinaryCompare" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Realiza una comparación textual. Este miembro es equivalente a la constante de Visual Basic <see langword="vbTextCompare" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.BooleanType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Boolean" />.</param>
      <returns>Valor de tipo <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.BooleanType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Boolean" />.</param>
      <returns>Valor de tipo <see langword="Boolean" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ByteType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Byte" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Byte" />.</param>
      <returns>Valor de tipo <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ByteType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Byte" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Byte" />.</param>
      <returns>Valor de tipo <see langword="Byte" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharArrayType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="CharArray" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="CharArray" />.</param>
      <returns>Valor de tipo <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharArrayType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="CharArray" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="CharArray" />.</param>
      <returns>Valor de tipo <see langword="CharArray" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.CharType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Char" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Char" />.</param>
      <returns>Valor de tipo <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.CharType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Char" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Char" />.</param>
      <returns>Valor de tipo <see langword="Char" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Conversions">
      <summary>Proporciona los métodos que realizan diversas conversiones de tipos.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ChangeType(System.Object,System.Type)">
      <summary>Convierte un objeto al tipo especificado.</summary>
      <param name="Expression">Objeto que se va a convertir.</param>
      <param name="TargetType">Tipo al que se va a convertir el objeto.</param>
      <returns>Un objeto del tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FallbackUserDefinedConversion(System.Object,System.Type)">
      <summary>Convierte un objeto al tipo especificado.</summary>
      <param name="Expression">Objeto que se va a convertir.</param>
      <param name="TargetType">Tipo al que se va a convertir el objeto.</param>
      <returns>Un objeto del tipo de destino especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharAndCount(System.Char,System.Int32)">
      <summary>Convierte un valor <see cref="T:System.Char" /> en una cadena, dado un recuento de bytes.</summary>
      <param name="Value">Valor <see langword="Char" /> que se va a convertir.</param>
      <param name="Count">Recuento de bytes del valor <see langword="Char" />.</param>
      <returns>La representación de cadena del valor especificado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArray(System.Char[])">
      <summary>Convierte una matriz de <see cref="T:System.Char" /> en una cadena.</summary>
      <param name="Value">Matriz de <see langword="Char" /> que se va a convertir.</param>
      <returns>La representación de cadena de la matriz especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.FromCharArraySubset(System.Char[],System.Int32,System.Int32)">
      <summary>Convierte un subconjunto de una matriz de <see cref="T:System.Char" /> en una cadena.</summary>
      <param name="Value">Matriz de <see langword="Char" /> que se va a convertir.</param>
      <param name="StartIndex">Índice de base cero de la posición inicial.</param>
      <param name="Length">Longitud del subconjunto en bytes.</param>
      <returns>La representación de cadena de la matriz especificada desde la posición inicial a la longitud especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>Valor <see langword="Boolean" />. Devuelve <see langword="False" /> si el valor del objeto es null; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToBoolean(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.Boolean" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Boolean" />. Devuelve <see langword="False" /> si el valor de la cadena es null; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Byte" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Byte" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToByte(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.Byte" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Byte" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Char" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Char" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToChar(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.Char" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Char" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.Object)">
      <summary>Convierte un objeto en una matriz de <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>Una matriz de <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToCharArrayRankOne(System.String)">
      <summary>Convierte una cadena en una matriz de <see cref="T:System.Char" /> unidimensional.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Una matriz de <see langword="Char" /> unidimensional.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="DateTime" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDate(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.DateTime" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="DateTime" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Boolean)">
      <summary>Convierte un valor <see cref="T:System.Boolean" /> en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Valor Boolean que se va a convertir.</param>
      <returns>El valor <see langword="Decimal" /> del valor Boolean.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Decimal" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDecimal(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.Decimal" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Decimal" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Double" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Double" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.Double" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Double" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToGenericParameter``1(System.Object)">
      <summary>Convierte un objeto a un tipo genérico <paramref name="T" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <typeparam name="T">Tipo en el que convertir <paramref name="Value" />.</typeparam>
      <returns>Una estructura u objeto de tipo genérico <paramref name="T" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.Object)">
      <summary>Convierte un objeto en un valor entero.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="int" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToInteger(System.String)">
      <summary>Convierte una cadena en un valor entero.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="int" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.Object)">
      <summary>Convierte un objeto en un valor <see langword="Long" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Long" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToLong(System.String)">
      <summary>Convierte una cadena en un valor <see langword="Long" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Long" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.SByte" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="SByte" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSByte(System.String)">
      <summary>Convierte una cadena en un valor <see cref="T:System.SByte" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="SByte" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.Object)">
      <summary>Convierte un objeto en un valor <see langword="Short" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Short" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToShort(System.String)">
      <summary>Convierte una cadena en un valor <see langword="Short" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Short" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.Single" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Single" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToSingle(System.String)">
      <summary>Convierte un objeto <see cref="T:System.String" /> en un valor <see cref="T:System.Single" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Single" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Boolean)">
      <summary>Convierte un valor <see cref="T:System.Boolean" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Boolean" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Byte)">
      <summary>Convierte un valor <see cref="T:System.Byte" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Byte" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Byte" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Char)">
      <summary>Convierte un valor <see cref="T:System.Char" /> en un objeto <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Char" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Char" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.DateTime)">
      <summary>Convierte un valor <see cref="T:System.DateTime" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="DateTime" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="DateTime" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal)">
      <summary>Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Decimal" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Convierte un valor <see cref="T:System.Decimal" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value">Valor <see langword="decimal" /> que se va a convertir.</param>
      <param name="NumberFormat">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Decimal" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double)">
      <summary>Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Double" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Convierte un valor <see cref="T:System.Double" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value">Valor <see langword="Double" /> que se va a convertir.</param>
      <param name="NumberFormat">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Double" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int16)">
      <summary>Convierte un valor <see langword="Short" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Short" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Short" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int32)">
      <summary>Convierte un valor entero en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="int" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="int" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Int64)">
      <summary>Convierte un valor <see langword="Long" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Long" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Long" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Object)">
      <summary>Convierte un objeto en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>La representación de <see langword="String" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single)">
      <summary>Convierte un valor <see cref="T:System.Single" /> (número de punto flotante de precisión sencilla) en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Single" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Convierte un valor <see cref="T:System.Single" /> en un valor <see cref="T:System.String" />, utilizando el formato de número especificado.</summary>
      <param name="Value">Valor <see langword="Single" /> que se va a convertir.</param>
      <param name="NumberFormat">Formato de número que se va a utilizar, de acuerdo con <see cref="T:System.Globalization.NumberFormatInfo" />.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Single" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt32)">
      <summary>Convierte un valor <see langword="uint" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Uint" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Uint" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToString(System.UInt64)">
      <summary>Convierte un valor <see langword="Ulong" /> en un valor <see cref="T:System.String" />.</summary>
      <param name="Value">Valor <see langword="Ulong" /> que se va a convertir.</param>
      <returns>Representación de <see langword="String" /> del valor <see langword="Ulong" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.Object)">
      <summary>Convierte un objeto en un valor <see langword="Uint" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Uint" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUInteger(System.String)">
      <summary>Convierte una cadena en un valor <see langword="Uint" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Uint" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.Object)">
      <summary>Convierte un objeto en un valor <see langword="Ulong" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Ulong" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToULong(System.String)">
      <summary>Convierte una cadena en un valor <see langword="Ulong" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Ulong" /> de la cadena.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.Object)">
      <summary>Convierte un objeto en un valor <see langword="Ushort" />.</summary>
      <param name="Value">Objeto que se va a convertir.</param>
      <returns>El valor de <see langword="Ushort" /> del objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Conversions.ToUShort(System.String)">
      <summary>Convierte una cadena en un valor <see langword="Ushort" />.</summary>
      <param name="Value">Cadena que se va a convertir.</param>
      <returns>Valor <see langword="Ushort" /> de la cadena.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DateType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Date" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Date" />.</param>
      <returns>Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Date" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Date" />.</param>
      <returns>Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DateType.FromString(System.String,System.Globalization.CultureInfo)">
      <summary>Devuelve un valor de tipo <see langword="Date" /> que corresponde a la cadena especificada y la información de referencia cultural.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Date" />.</param>
      <param name="culture">Obligatorio. Objeto <see cref="T:System.Globalization.CultureInfo" /> que define cómo se aplica formato y se muestran los valores de fecha, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Date" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DecimalType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromBoolean(System.Boolean)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que corresponde al valor de tipo <see langword="Boolean" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Boolean" /> que se va a convertir en un valor <see langword="Decimal" />.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Decimal" />.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con el objeto especificado y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DecimalType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Decimal" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Decimal" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Decimal" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute">
      <summary>Cuando se aplica a una clase, el compilador llama implícitamente a un método de inicialización de componentes desde el constructor sintético predeterminado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute.#ctor">
      <summary>Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.CompilerServices.DesignerGeneratedAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.DoubleType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Double" />.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Double" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.DoubleType.Parse(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Double" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Double" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Double" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization">
      <summary>El compilador de Visual Basic utiliza esta clase durante la inicialización local estática; no está diseñada para ser llamada directamente desde el código. Si no se puede inicializar una variable local estática, se produce una excepción de este tipo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.IncompleteInitialization" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.IntegerType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor de tipo <see langword="Integer" />.</param>
      <returns>Valor de tipo <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.IntegerType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Integer" />.</param>
      <returns>Valor de tipo <see langword="Integer" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LateBinding">
      <summary>Esta clase está obsoleta desde Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Realiza una llamada enlazada en tiempo de ejecución a un método de objeto.</summary>
      <param name="o">Objeto en el que se va a llamar a un método.</param>
      <param name="objType">Tipo del objeto.</param>
      <param name="name">Nombre del método de <paramref name="o" /> al que se va a llamar.</param>
      <param name="args">Matriz de valores de parámetro que se van a pasar al método.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="CopyBack">Matriz de valores <see langword="Boolean" />, donde <see langword="True" /> indica que al parámetro asociado se le pasa <see langword="ByRef" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean[])">
      <summary>Devuelve un valor enlazado en tiempo de ejecución de un objeto.</summary>
      <param name="o">Objeto cuyo valor se va a devolver.</param>
      <param name="objType">Tipo del objeto.</param>
      <param name="name">Nombre de miembro del objeto <paramref name="o" /> cuyo valor se va a recuperar.</param>
      <param name="args">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="CopyBack">Matriz de valores <see langword="Boolean" />, donde <see langword="True" /> indica que al parámetro asociado se le pasa <see langword="ByRef" />.</param>
      <returns>Si <paramref name="o" /> es una matriz, se devuelve el valor de <paramref name="o" /> en la ubicación especificada por <paramref name="args" />. Si <paramref name="o" /> es un objeto, se devuelve el valor devuelto de <paramref name="o" /> invocado mediante los parámetros con nombre en <paramref name="paramnames" /> y sus valores asociados en <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Devuelve un valor enlazado en tiempo de ejecución de un objeto mediante el índice o los parámetros especificados.</summary>
      <param name="o">Objeto cuyo valor se va a devolver.</param>
      <param name="args">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <returns>Si <paramref name="o" /> es una matriz, se devuelve el valor de <paramref name="o" /> en la ubicación especificada por <paramref name="args" />. Si <paramref name="o" /> es un objeto, se devuelve el valor devuelto de <paramref name="o" /> invocado mediante los parámetros con nombre en <paramref name="paramnames" /> y sus valores asociados en <paramref name="args" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Establece un valor enlazado en tiempo de ejecución de un objeto mediante los parámetros especificados.</summary>
      <param name="o">Objeto cuyo valor se va a establecer.</param>
      <param name="args">Matriz de uno o varios valores de índice que especifican la ubicación en <paramref name="o" /> si <paramref name="o" /> es una matriz unidimensional o multidimensional, o bien, valores de argumento que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Establece un valor enlazado en tiempo de ejecución de un objeto mediante los parámetros especificados.</summary>
      <param name="o">Objeto cuyo valor se va a establecer.</param>
      <param name="args">Matriz de uno o varios valores de parámetro que se van a pasar al objeto <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="OptimisticSet">Es <see langword="True" /> para suprimir la excepción que se produce cuando no se encuentra el miembro establecido.</param>
      <param name="RValueBase">Es <see langword="True" /> para identificar <paramref name="o" /> como el resultado de una expresión enlazada en tiempo de ejecución.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[])">
      <summary>Establece un valor enlazado en tiempo de ejecución de un miembro de un objeto mediante los parámetros especificados.</summary>
      <param name="o">Objeto de cuyo miembro se va a establecer el valor.</param>
      <param name="objType">Tipo del objeto.</param>
      <param name="name">Nombre del miembro que se va a establecer.</param>
      <param name="args">Matriz de uno o varios valores de parámetro que se van a pasar al miembro de <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Establece un valor enlazado en tiempo de ejecución de un miembro de un objeto mediante los parámetros especificados.</summary>
      <param name="o">Objeto de cuyo miembro se va a establecer el valor.</param>
      <param name="objType">Tipo del objeto.</param>
      <param name="name">Nombre del miembro que se va a establecer.</param>
      <param name="args">Matriz de uno o varios valores de parámetro que se van a pasar al miembro de <paramref name="o" />.</param>
      <param name="paramnames">Matriz que contiene los nombres de los parámetros a los que se pasan los valores de la matriz <paramref name="args" />.</param>
      <param name="OptimisticSet">Es <see langword="True" /> para suprimir la excepción que se produce cuando no se encuentra el miembro establecido.</param>
      <param name="RValueBase">Es <see langword="True" /> para identificar <paramref name="o" /> como el resultado de una expresión enlazada en tiempo de ejecución.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LikeOperator">
      <summary>Esta clase proporciona elementos del asistente que el compilador de Visual Basic usa para realizar el trabajo correspondiente al operador Like. No está diseñada para ser llamada directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Realiza una comparación de cadenas de texto o binarias dados dos objetos. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Source">Cadena que se va a comparar.</param>
      <param name="Pattern">Cadena con la que se va a comparar <paramref name="Source" />.</param>
      <param name="CompareOption">Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.</param>
      <returns>
        <see langword="True" /> si las cadenas coinciden; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LikeOperator.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Realiza una comparación de cadenas de texto o binarias dadas dos cadenas. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Source">Cadena que se va a comparar.</param>
      <param name="Pattern">Cadena con la que se va a comparar <paramref name="Source" />.</param>
      <param name="CompareOption">Enumeración <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica si se utiliza o no la comparación de texto. En caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Text" />, este método utiliza la comparación de texto; en caso de <see cref="F:Microsoft.VisualBasic.CompareMethod.Binary" />, este método utiliza la comparación binaria.</param>
      <returns>
        <see langword="True" /> si las cadenas coinciden; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.LongType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Long" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Long" />.</param>
      <returns>Valor de tipo <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.LongType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Long" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Long" />.</param>
      <returns>Valor de tipo <see langword="Long" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.NewLateBinding">
      <summary>Esta clase proporciona los asistentes que utiliza el compilador de Visual Basic; no está diseñada para que la llame el código directamente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackCall(System.Object,System.String,System.Object[],System.String[],System.Boolean)">
      <summary>Ejecuta un método enlazado en tiempo de ejecución o una llamada a la función. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="IgnoreReturn">Valor <see langword="Boolean" /> que indica si se puede omitir el valor devuelto o no.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackGet(System.Object,System.String,System.Object[],System.String[])">
      <summary>Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="OptimisticSet">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault1(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados, o llama al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método. Si <paramref name="Instance" /> es de tipo <see cref="T:System.Dynamic.IDynamicMetaObjectProvider" />, se debe enlazar mediante Dynamic Language Runtime; de lo contrario, se realiza el enlace en tiempo de ejecución estándar.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="ReportErrors">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackInvokeDefault2(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados, o llama al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="ReportErrors">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSet(System.Object,System.String,System.Object[])">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.FallbackSetComplex(System.Object,System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="OptimisticSet">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCall(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[],System.Boolean)">
      <summary>Ejecuta un método enlazado en tiempo de ejecución o una llamada a la función. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type">Tipo del objeto de llamada.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="TypeArguments">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="CopyBack">Matriz de valores <see langword="Boolean" /> que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a <see langword="LateCall" />.</param>
      <param name="IgnoreReturn">Valor <see langword="Boolean" /> que indica si se puede omitir el valor devuelto o no.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateCallInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Ejecuta una llamada enlazada en tiempo de ejecución al método o la función predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="ReportErrors">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean[])">
      <summary>Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type">Tipo del objeto de llamada.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="TypeArguments">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="CopyBack">Matriz de valores <see langword="Boolean" /> que el enlazador en tiempo de ejecución utiliza para comunicarse con el sitio de llamada en el que los argumentos hacen coincidir los parámetros <see langword="ByRef" />. Cada valor <see langword="True" /> indica que los argumentos coincidieron y se deben copiar después de que haya finalizado la llamada a <see langword="LateCall" />.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateGetInvokeDefault(System.Object,System.Object[],System.String[],System.Boolean)">
      <summary>Ejecuta una operación de obtención enlazada en tiempo de ejecución de la propiedad o el campo predeterminados. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="ReportErrors">Un valor <see langword="Boolean" /> que se usa para especificar si deben iniciarse excepciones cuando se encuentra un error. Se establece en <see langword="True" /> para iniciar excepciones. Se establece en <see langword="False" /> para devolver <see langword="Nothing" /> cuando se detecta un error.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexGet(System.Object,System.Object[],System.String[])">
      <summary>Ejecuta una llamada de acceso a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <returns>Instancia del objeto de llamada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSet(System.Object,System.Object[],System.String[])">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateIndexSetComplex(System.Object,System.Object[],System.String[],System.Boolean,System.Boolean)">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="OptimisticSet">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[])">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type">Tipo del objeto de llamada.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="TypeArguments">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSet(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean,Microsoft.VisualBasic.CallType)">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type">Tipo del objeto de llamada.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="TypeArguments">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="OptimisticSet">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
      <param name="CallType">Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de CallType puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />. Sólo se utiliza <see langword="Set" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.NewLateBinding.LateSetComplex(System.Object,System.Type,System.String,System.Object[],System.String[],System.Type[],System.Boolean,System.Boolean)">
      <summary>Ejecuta una llamada de escritura a get o al campo de la propiedad enlazada en tiempo de ejecución. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="Instance">Instancia del objeto de llamada que expone la propiedad o el método.</param>
      <param name="Type">Tipo del objeto de llamada.</param>
      <param name="MemberName">Nombre de la propiedad o del método del objeto de llamada.</param>
      <param name="Arguments">Matriz que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <param name="ArgumentNames">Matriz de nombres de argumento.</param>
      <param name="TypeArguments">Matriz de tipos de argumento; sólo se utiliza para que las llamadas genéricas pasen los tipos de argumento.</param>
      <param name="OptimisticSet">Valor <see langword="Boolean" /> utilizado para determinar si funcionará la operación de establecimiento. Se establece en <see langword="True" /> cuando se crea que se ha establecido un valor intermedio en la propiedad o campo; en caso contrario, es <see langword="False" />.</param>
      <param name="RValueBase">Valor <see langword="Boolean" /> que especifica cuándo la referencia base de la referencia enlazada es <see langword="RValue" />. Se establece en <see langword="True" /> cuando la referencia base de la referencia enlazada es <see langword="RValue" />; de esta forma, puede generar una excepción en tiempo de ejecución para asignaciones enlazadas a los campos de <see langword="RValues" /> de tipos de valor. En caso contrario, se establece en <see langword="False" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl">
      <summary>El compilador de Visual Basic utiliza esta clase para el control de flujo de objetos; no se ha creado para que lo llame directamente el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.CheckForSyncLockOnValueType(System.Object)">
      <summary>Busca un bloqueo de sincronización en el tipo especificado.</summary>
      <param name="Expression">El tipo de datos para el que se busca el bloqueo de sincronización.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl">
      <summary>Proporciona al compilador de Visual Basic los servicios para compilar los bucles <see langword="For...Next" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForLoopInitObj(System.Object,System.Object,System.Object,System.Object,System.Object@,System.Object@)">
      <summary>Inicializa un bucle <see langword="For...Next" />.</summary>
      <param name="Counter">Variable del contador de bucles.</param>
      <param name="Start">Valor inicial del contador de bucles.</param>
      <param name="Limit">Valor de la opción <see langword="To" />.</param>
      <param name="StepValue">Valor de la opción <see langword="Step" />.</param>
      <param name="LoopForResult">Objeto que contiene valores comprobados para los valores del bucle.</param>
      <param name="CounterResult">Valor del contador para la siguiente iteración del bucle.</param>
      <returns>Es <see langword="False" /> si el bucle se ha terminado; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckDec(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue">Obligatorio. Valor de tipo <see langword="Decimal" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckObj(System.Object,System.Object,System.Object@)">
      <summary>Incrementa un bucle <see langword="For...Next" />.</summary>
      <param name="Counter">Variable del contador de bucles.</param>
      <param name="LoopObj">Objeto que contiene valores comprobados para los valores del bucle.</param>
      <param name="CounterResult">Valor del contador para la siguiente iteración del bucle.</param>
      <returns>Es <see langword="False" /> si el bucle se ha terminado; de lo contrario, es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR4(System.Single,System.Single,System.Single)">
      <summary>Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue">Obligatorio. Valor de tipo <see langword="Single" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectFlowControl.ForLoopControl.ForNextCheckR8(System.Double,System.Double,System.Double)">
      <summary>Comprueba si hay valores válidos para el contador de bucles, valores <see langword="Step" /> y <see langword="To" />.</summary>
      <param name="count">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor inicial que se ha pasado para la variable del contador de bucles.</param>
      <param name="limit">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="To" />.</param>
      <param name="StepValue">Obligatorio. Valor de tipo <see langword="Double" /> que representa el valor que se ha pasado mediante la palabra clave <see langword="Step" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="StepValue" /> es mayor que cero y <paramref name="count" /> es menor o igual que <paramref name="limit" />, o bien, si <paramref name="StepValue" /> es menor o igual que cero y <paramref name="count" /> es mayor o igual que <paramref name="limit" />; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ObjectType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)">
      <summary>Realiza una operación de suma (+).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>La suma de <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)">
      <summary>Realiza una operación <see langword="And" /> bit a bit.</summary>
      <param name="obj1">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Se devuelve 1 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 1; de lo contrario, se devuelve 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)">
      <summary>Realiza una operación <see langword="Or" /> bit a bit.</summary>
      <param name="obj1">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Se devuelve 0 si tanto <paramref name="obj1" /> como <paramref name="obj2" /> se evalúan como 0; de lo contrario, se devuelve 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)">
      <summary>Realiza una operación <see langword="Xor" />.</summary>
      <param name="obj1">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)">
      <summary>Realiza una operación de división (/).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Cociente completo de <paramref name="o1" /> dividido entre <paramref name="o2" />, incluido cualquier resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)">
      <summary>Devuelve un valor primitivo al que se ha aplicado la conversión boxing. Este método se utiliza para evitar que las estructuras se copien varias veces.</summary>
      <param name="o">Obligatorio. Cualquier expresión.</param>
      <returns>Valor primitivo de <paramref name="o" /> como objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)">
      <summary>Realiza una operación de división de enteros (\).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Cociente entero de <paramref name="o1" /> dividido entre <paramref name="o2" />, que descarta cualquier resto y conserva sólo la parte entera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)">
      <summary>Realiza una comparación <see langword="Like" />.</summary>
      <param name="vLeft">Obligatorio. Cualquier expresión.</param>
      <param name="vRight">Obligatorio. Expresión de cadena que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <param name="CompareOption">Obligatorio. Valor de <see cref="T:Microsoft.VisualBasic.CompareMethod" /> que especifica que la operación usa texto o una comparación binaria.</param>
      <returns>Es <see langword="True" /> si la representación de cadena del valor en <paramref name="vLeft" /> se ajusta al modelo incluido en <paramref name="vRight" />; de lo contrario, es <see langword="False" />. Es <see langword="True" /> si tanto <paramref name="vLeft" /> como <paramref name="vRight" /> son <see langword="Nothing" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)">
      <summary>Realiza una operación de módulo (<see langword="Mod" />).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Resto después de dividir <paramref name="o1" /> entre <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)">
      <summary>Realiza una operación de multiplicación (*).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Producto de <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)">
      <summary>Realiza una operación unaria menos (-).</summary>
      <param name="obj">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Valor negativo de <paramref name="obj" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)">
      <summary>Realiza una operación <see langword="Not" />.</summary>
      <param name="obj">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="obj" /> es <see langword="True" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 1 si <paramref name="obj" /> es 0; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)">
      <summary>Realiza una comparación de cadenas de texto o binarias dados dos objetos.</summary>
      <param name="o1">Obligatorio. Cualquier expresión.</param>
      <param name="o2">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Valor 
 Condición 
 -1 

<paramref name="o1" /> es menor que <paramref name="o2" />.  
  
 0 

<paramref name="o1" /> es igual a <paramref name="o2" />.  
  
 1 

<paramref name="o1" /> es mayor que <paramref name="o2" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)">
      <summary>Realiza una operación unaria más (+).</summary>
      <param name="obj">Obligatorio. Cualquier expresión numérica.</param>
      <returns>El valor de <paramref name="obj" />. (El signo de <paramref name="obj" /> no cambia.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)">
      <summary>Realiza una operación exponencial (^).</summary>
      <param name="obj1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="obj2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Resultado de <paramref name="obj1" /> elevado a la potencia de <paramref name="obj2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)">
      <summary>Realiza una operación de desplazamiento aritmético a la izquierda (&lt;&lt;).</summary>
      <param name="o1">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns>Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)">
      <summary>Realiza una operación de desplazamiento aritmético a la derecha (&gt;&gt;).</summary>
      <param name="o1">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="amount">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns>Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="o1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)">
      <summary>Realiza una operación de concatenación de cadenas (&amp;).</summary>
      <param name="vLeft">Obligatorio. Cualquier expresión.</param>
      <param name="vRight">Obligatorio. Cualquier expresión.</param>
      <returns>Cadena que representa la concatenación de <paramref name="vLeft" /> y <paramref name="vRight" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)">
      <summary>Realiza una operación de resta (-).</summary>
      <param name="o1">Obligatorio. Cualquier expresión numérica.</param>
      <param name="o2">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Diferencia entre <paramref name="o1" /> y <paramref name="o2" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)">
      <summary>Realiza una comparación <see langword="Xor" />.</summary>
      <param name="obj1">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="obj2">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Valor de tipo <see langword="Boolean" /> o valor numérico. Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />. Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Operators">
      <summary>Proporciona operadores matemáticos enlazados en tiempo de ejecución, como <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> y <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que el compilador de Visual Basic utiliza internamente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)">
      <summary>Representa el operador de suma (+) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>La suma de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)">
      <summary>Representa el operador <see langword="And" /> de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Para las operaciones <see langword="Boolean" />, es <see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="True" />; de lo contrario, es <see langword="False" />. Para las operaciones bit a bit, es 1 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 1; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador de igualdad (=) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>
        <see langword="True" /> si <paramref name="Left" /> y <paramref name="Right" /> son iguales; en caso contrario, <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador mayor que (&gt;) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="Left" /> es mayor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador mayor que o igual a (&gt;=) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="Left" /> es mayor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador menor que (&lt;) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="Left" /> es menor que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador menor que o igual a (&lt;=) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="Left" /> es menor o igual que <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador de desigualdad (&lt;&gt;) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Es <see langword="True" /> si <paramref name="Left" /> no es igual a <paramref name="Right" />; en caso contrario, es <see langword="False" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)">
      <summary>Realiza una comparación de cadenas de texto o binarias dadas dos cadenas.</summary>
      <param name="Left">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Right">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Valor 
 Condición 
 -1 

<paramref name="Left" /> es menor que <paramref name="Right" />.  
  
 0 

<paramref name="Left" /> es igual a <paramref name="Right" />.  
  
 1 

<paramref name="Left" /> es mayor que <paramref name="Right" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)">
      <summary>Representa el operador de concatenación (&amp;) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <returns>Cadena que representa la concatenación de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador de igualdad (=) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>El resultado del operador de igualdad sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador mayor que (&gt;) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Resultado del operador mayor que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador mayor que o igual a (&gt;=) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Resultado del operador mayor o igual que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador menor que (&lt;) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Resultado del operador menor que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador menor que o igual a (&lt;=) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Resultado del operador menor o igual que sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)">
      <summary>Representa el operador de desigualdad (&lt;&gt;) sobrecargado de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión.</param>
      <param name="Right">Obligatorio. Cualquier expresión.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación de cadenas sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Resultado del operador de desigualdad sobrecargado. Es <see langword="False" /> si no se admite la sobrecarga del operador.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)">
      <summary>Representa el operador de división (/) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Cociente completo de <paramref name="Left" /> dividido entre <paramref name="Right" />, incluido cualquier resto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)">
      <summary>Representa el operador exponencial (^) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Resultado de <paramref name="Left" /> elevado a la potencia de <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])">
      <summary>Ejecuta una evaluación enlazada en tiempo de ejecución de un operador definido por el usuario. Este método del asistente no está diseñado para ser llamado directamente desde el código.</summary>
      <param name="vbOp">Operador definido por el usuario.</param>
      <param name="Arguments">Valores de argumento que se van a pasar al operador definido por el usuario.</param>
      <returns>Resultado devuelto por el operador definido por el usuario.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)">
      <summary>Representa el operador de división (\) de enteros de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Cociente entero de <paramref name="Left" /> dividido entre <paramref name="Right" />, que descarta cualquier resto y conserva sólo la parte entera.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)">
      <summary>Representa el operador de desplazamiento aritmético a la izquierda (&lt;&lt;) de Visual Basic.</summary>
      <param name="Operand">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns>Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)">
      <summary>Representa el operador <see langword="Mod" /> de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Resto después de dividir <paramref name="Left" /> entre <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)">
      <summary>Representa el operador de multiplicación (*) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Producto de <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)">
      <summary>Representa el operador unario menos (-) de Visual Basic.</summary>
      <param name="Operand">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Valor negativo de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)">
      <summary>Representa el operador <see langword="Not" /> de Visual Basic.</summary>
      <param name="Operand">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Operand" /> es <see langword="True" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 1 si <paramref name="Operand" /> es 0; de lo contrario, es 0.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)">
      <summary>Representa el operador <see langword="Or" /> de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Para las operaciones <see langword="Boolean" />, es <see langword="False" /> si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como <see langword="False" />; de lo contrario, es <see langword="True" />. Para las operaciones bit a bit, es 0 si <paramref name="Left" /> y <paramref name="Right" /> se evalúan como 0; de lo contrario, es 1.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)">
      <summary>Representa el operador unario más (+) de Visual Basic.</summary>
      <param name="Operand">Obligatorio. Cualquier expresión numérica.</param>
      <returns>El valor de <paramref name="Operand" />. (El signo de <paramref name="Operand" /> no cambia.)</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)">
      <summary>Representa el operador de desplazamiento aritmético a la derecha (&gt;&gt;) de Visual Basic.</summary>
      <param name="Operand">Obligatorio. Expresión numérica integral. Modelo de bits que se va a desplazar. El tipo de datos debe ser un tipo entero (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> o <see langword="ULong" />).</param>
      <param name="Amount">Obligatorio. Expresión numérica. Número de bits que se va a desplazar el modelo de bits. El tipo de datos debe ser <see langword="Integer" /> o ampliarse a <see langword="Integer" />.</param>
      <returns>Valor numérico integral. Resultado de desplazar el modelo de bits. El tipo de datos es el mismo que el de <paramref name="Operand" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)">
      <summary>Representa el operador de resta (-) de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica.</param>
      <returns>Diferencia entre <paramref name="Left" /> y <paramref name="Right" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)">
      <summary>Representa el operador <see langword="Xor" /> de Visual Basic.</summary>
      <param name="Left">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <param name="Right">Obligatorio. Cualquier expresión numérica o de tipo <see langword="Boolean" />.</param>
      <returns>Valor de tipo <see langword="Boolean" /> o valor numérico. Para una comparación <see langword="Boolean" />, el valor devuelto es la exclusión lógica (disyunción lógica exclusiva) de dos valores <see langword="Boolean" />. Para las operaciones (numéricas) bit a bit, el valor devuelto es un valor numérico que representa la exclusión bit a bit (disyunción bit a bit exclusiva) de dos modelos de bits numéricos. Para obtener más información, vea Operador Xor.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute">
      <summary>Especifica que el valor actual de <see langword="Option Compare" /> debe pasarse como valor predeterminado de un argumento.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionCompareAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute">
      <summary>El compilador de Visual Basic emite esta clase auxiliar para indicar (en la depuración de Visual Basic) qué opción de comparación se usa, de texto o binaria.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.OptionTextAttribute" />. Este método es un método del asistente.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ProjectData">
      <summary>Proporciona los asistentes del objeto <see langword="Err" /> de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.ClearProjectError">
      <summary>Realiza el trabajo que corresponde al método <see langword="Clear" /> del objeto <see langword="Err" />. Es un método del asistente.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.CreateProjectError(System.Int32)">
      <summary>Realiza el trabajo que corresponde al método <see langword="Raise" /> del objeto <see langword="Err" />. Es un método del asistente.</summary>
      <param name="hr">Entero que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario.</param>
      <returns>Un objeto <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.EndApp">
      <summary>Cierra todos los archivos del ensamblado que realiza la llamada y detiene el proceso.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception)">
      <summary>El compilador de Visual Basic utiliza este método del asistente para capturar las excepciones del objeto <see langword="Err" />.</summary>
      <param name="ex">Objeto <see cref="T:System.Exception" /> que se va a detectar.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ProjectData.SetProjectError(System.Exception,System.Int32)">
      <summary>El compilador de Visual Basic utiliza este método del asistente para capturar las excepciones del objeto <see langword="Err" />.</summary>
      <param name="ex">Objeto <see cref="T:System.Exception" /> que se va a detectar.</param>
      <param name="lErl">Número de línea de la excepción.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.ShortType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Short" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Short" />.</param>
      <returns>Valor de tipo <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.ShortType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Short" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Short" />.</param>
      <returns>Valor de tipo <see langword="Short" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.SingleType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Single" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Single" />.</param>
      <returns>Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromObject(System.Object,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Single" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="Single" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Single" /> que corresponde a la cadena especificada.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Single" />.</param>
      <returns>Valor de tipo <see langword="Single" /> que corresponde a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.SingleType.FromString(System.String,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="Single" /> que se corresponde con la cadena especificada y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Cadena que se va a convertir en un valor de tipo <see langword="Single" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="Single" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute">
      <summary>Esta clase proporciona atributos que se aplican a la construcción del módulo estándar cuando se emite a Lenguaje intermedio (IL). No está pensada para que se llame directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StandardModuleAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag">
      <summary>El compilador de Visual Basic utiliza esta clase internamente durante la inicialización de miembros locales estáticos; no está diseñada para que se llame directamente desde el código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompilerServices.StaticLocalInitFlag.State">
      <summary>Devuelve el estado de la marca de inicialización del miembro local estático (inicializado o no).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.StringType">
      <summary>Esta clase ha quedado obsoleta en Visual Basic 2005.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromBoolean(System.Boolean)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Boolean" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Boolean" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromByte(System.Byte)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Byte" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Byte" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromChar(System.Char)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Char" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Char" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDate(System.DateTime)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde a la fecha especificada.</summary>
      <param name="Value">Obligatorio. Fecha que se va a convertir en un valor de tipo <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Decimal" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDecimal(System.Decimal,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Decimal" /> especificado y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Decimal" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Double" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromDouble(System.Double,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Double" /> especificado y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Double" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromInteger(System.Int32)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Integer" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Integer" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromLong(System.Int64)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int64" /> especificado (entero de 64 bits).</summary>
      <param name="Value">Obligatorio. Valor <see langword="Int64" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromObject(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al objeto especificado.</summary>
      <param name="Value">Obligatorio. Objeto que se va a convertir en un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromShort(System.Int16)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Int16" /> especificado (entero de 16 bits).</summary>
      <param name="Value">Obligatorio. Valor <see langword="Int616" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que corresponde al valor de tipo <see langword="Single" /> especificado.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Single" /> que se va a convertir a un valor <see langword="String" />.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.FromSingle(System.Single,System.Globalization.NumberFormatInfo)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que se corresponde con el valor <see langword="Single" /> especificado y la información de formato numérico.</summary>
      <param name="Value">Obligatorio. Valor <see langword="Single" /> que se va a convertir a un valor <see langword="String" />.</param>
      <param name="NumberFormat">Objeto <see cref="T:System.Globalization.NumberFormatInfo" /> que define cómo se aplica formato y se muestran los valores numéricos, dependiendo de la referencia cultural.</param>
      <returns>Valor de tipo <see langword="String" /> correspondiente a <paramref name="Value" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.MidStmtStr(System.String@,System.Int32,System.Int32,System.String)">
      <summary>Sobrescribe el parámetro <paramref name="sDest" /> con el contenido del parámetro <paramref name="sInsert" />.</summary>
      <param name="sDest">Obligatorio. Variable de cadena que se va a modificar.</param>
      <param name="StartPosition">Obligatorio. Ubicación en el parámetro <paramref name="sDest" /> desde la que se comienza a sobrescribir. El índice es de base 1.</param>
      <param name="MaxInsertLength">Obligatorio. Número máximo de caracteres del parámetro <paramref name="sInsert" /> que se van a utilizar, a partir del primer carácter.</param>
      <param name="sInsert">Obligatorio. Valor de cadena con el que se va a sobrescribir el parámetro <paramref name="sDest" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrCmp(System.String,System.String,System.Boolean)">
      <summary>Compara dos cadenas.</summary>
      <param name="sLeft">Obligatorio. Cadena que se va a comparar con <paramref name="sRight" />.</param>
      <param name="sRight">Obligatorio. Cadena que se va a comparar con <paramref name="sLeft" />.</param>
      <param name="TextCompare">Obligatorio. <see langword="True" /> si se va a realizar una comparación sin distinguir mayúsculas de minúsculas; de lo contrario, <see langword="False" />.</param>
      <returns>Valor 
 Condición 
 cero 
 Las dos cadenas son iguales.  
  
 menor que cero 

<paramref name="sLeft" /> es menor que <paramref name="sRight" />.  
  
 mayor que cero 

<paramref name="sLeft" /> es mayor que <paramref name="sRight" />.  
  

.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLike(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />.</summary>
      <param name="Source">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern">Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <param name="CompareOption">Especifica cómo comparar las cadenas con los modelos, según <see cref="T:Microsoft.VisualBasic.CompareMethod" />. Puede ser <see langword="vbBinaryCompare" /> para la comparación binaria o <see langword="vbTextCompare" /> para la basada en un criterio de ordenación de texto sin distinción entre mayúsculas y minúsculas determinado por el valor <see langword="LocaleID" /> del sistema.</param>
      <returns>Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeBinary(System.String,System.String)">
      <summary>Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación binaria.</summary>
      <param name="Source">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern">Obligatorio. Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <returns>Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.StringType.StrLikeText(System.String,System.String)">
      <summary>Compara los parámetros <paramref name="Source" /> y <paramref name="Pattern" /> y devuelve los mismos resultados que el operador <see langword="Like" />, mediante la comparación de texto.</summary>
      <param name="Source">Obligatorio. Cualquier expresión <see langword="String" /> .</param>
      <param name="Pattern">Obligatorio. Expresión <see langword="String" /> que se ajuste a las convenciones de coincidencia de modelos descritas en Like (Operador).</param>
      <returns>Valor de tipo <see langword="Boolean" /> que indica si la cadena se ajusta al modelo. Si el valor de la cadena se ajusta al modelo incluido en Pattern, el resultado es <see langword="True" />. Si la cadena no se ajusta al modelo, el resultado es <see langword="False" />. Si tanto la cadena como el modelo son cadenas vacías, el resultado es <see langword="True" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Utils">
      <summary>Contiene utilidades que usa el compilador de Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Utils.CopyArray(System.Array,System.Array)">
      <summary>Este método lo utiliza el compilador de Visual Basic como un método del asistente de <see langword="Redim" />.</summary>
      <param name="arySrc">Matriz que se va a copiar.</param>
      <param name="aryDest">Matriz de destino.</param>
      <returns>La matriz copiada.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.CompilerServices.Versioned">
      <summary>El módulo <see cref="T:Microsoft.VisualBasic.CompilerServices.Versioned" /> contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</summary>
      <param name="Instance">Obligatorio. <see langword="Object" />. Puntero al objeto que expone la propiedad o el método.</param>
      <param name="MethodName">Obligatorio. <see langword="String" />. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.</param>
      <param name="UseCallType">Obligatorio. Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de <see langword="CallType" /> puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Arguments">Opcional. <see langword="ParamArray" />. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <returns>Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.IsNumeric(System.Object)">
      <summary>Devuelve un valor booleano que indica si una expresión se puede evaluar como número.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor booleano que indica si una expresión se puede evaluar como número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.SystemTypeName(System.String)">
      <summary>Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.</summary>
      <param name="VbName">Obligatorio. Variable de cadena que contiene un nombre de tipo de Visual Basic.</param>
      <returns>Devuelve un valor de cadena que contiene el nombre del tipo de datos del sistema de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.TypeName(System.Object)">
      <summary>Devuelve un valor de cadena que contiene información del tipo de datos de una variable.</summary>
      <param name="Expression">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns>Devuelve un valor de cadena que contiene información del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.CompilerServices.Versioned.VbTypeName(System.String)">
      <summary>Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.</summary>
      <param name="SystemName">Obligatorio. Variable de cadena que contiene un nombre de tipo utilizado por Common Language Runtime.</param>
      <returns>Devuelve un valor de cadena que contiene el nombre del tipo de datos de Visual Basic de una variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>El módulo <see langword="Constants" /> contiene diversas constantes. Estas constantes pueden utilizarse en cualquier parte del código.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indica que se hizo clic en el botón <see langword="Abort" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indica que se van a mostrar los botones <see langword="Abort" />, <see langword="Retry" /> e <see langword="Ignore" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indica que el archivo ha cambiado desde la última operación de copia de seguridad para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indica que el tipo de un objeto Variant es una matriz. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBack">
      <summary>Representa un carácter de retroceso para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBinaryCompare">
      <summary>Especifica que debe realizarse una comparación binaria cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbBoolean">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Boolean" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbByte">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Byte" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCancel">
      <summary>Indica que se hizo clic en el botón <see langword="Cancel" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCr">
      <summary>Representa un carácter de retorno de carro para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCritical">
      <summary>Indica que se va a mostrar el icono de mensaje crítico cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCrLf">
      <summary>Representa un carácter de retorno de carro combinado con un carácter de avance de línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbCurrency">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Currency" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDate">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Date" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDecimal">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Decimal" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton1">
      <summary>Indica que el botón situado más a la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton2">
      <summary>Indica que el segundo botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDefaultButton3">
      <summary>Indica que el tercer botón de la izquierda se selecciona como botón predeterminado cuando aparece el cuadro de mensaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDirectory">
      <summary>Indica que el archivo es un directorio o carpeta para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbDouble">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Double" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbEmpty">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Empty" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbExclamation">
      <summary>Indica que se va a mostrar el icono de exclamación cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFalse">
      <summary>Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="False" /> cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFourDays">
      <summary>Indica que debe usarse la primera semana del año que tenga al menos cuatro días cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstFullWeek">
      <summary>Indica que debe usarse la primera semana completa del año cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFirstJan1">
      <summary>Indica que debe usarse la semana del año en la que tiene lugar el 1 de enero cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFormFeed">
      <summary>Representa un carácter de avance de página para las funciones de impresión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbFriday">
      <summary>Especifica que debe usarse el viernes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGeneralDate">
      <summary>Indica que debe usarse el formato de fecha general de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbGet">
      <summary>Especifica que debe usarse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHidden">
      <summary>Indica que el archivo es un archivo oculto para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHide">
      <summary>Indica que el estilo de ventana está oculto en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbHiragana">
      <summary>Indica que los caracteres hiragana deben convertirse en caracteres katakana cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbIgnore">
      <summary>Indica que se hizo clic en el botón <see langword="Ignore" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInformation">
      <summary>Indica que se va a mostrar el icono de información cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbInteger">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Integer" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbKatakana">
      <summary>Indica que los caracteres katakana deben convertirse en caracteres hiragana cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLet">
      <summary>Indica que un valor de propiedad debe establecerse en una instancia de objeto cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLf">
      <summary>Representa un carácter de salto de línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLinguisticCasing">
      <summary>Indica que cuando se llama a la función <see langword="StrConv" />, los caracteres deben convertirse de forma que usen reglas lingüísticas sobre el uso de mayúsculas o minúsculas en lugar de reglas del sistema de archivos sobre el uso de mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLong">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Long" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongDate">
      <summary>Indica que debe usarse el formato de fecha larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLongTime">
      <summary>Indica que debe usarse el formato de hora larga de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbLowerCase">
      <summary>Indica que los caracteres katakana deben convertirse en caracteres en minúsculas cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMaximizedFocus">
      <summary>Indica que el estilo de ventana se maximiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMethod">
      <summary>Especifica que debe llamarse a un método cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedFocus">
      <summary>Indica que el estilo de ventana se minimiza con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMinimizedNoFocus">
      <summary>Indica que el estilo de ventana se minimiza sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMonday">
      <summary>Especifica que debe usarse el lunes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxHelp">
      <summary>Indica que se va a mostrar el botón <see langword="Help" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRight">
      <summary>Indica que el texto se va a alinear a la derecha cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxRtlReading">
      <summary>Indica que se va a mostrar texto con un orden de lectura de derecha a izquierda (sistemas hebreo y árabe) cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbMsgBoxSetForeground">
      <summary>Indica que el cuadro de mensaje va a aparecer en primer plano cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNarrow">
      <summary>Indica que los caracteres anchos (de doble byte) deben convertirse en caracteres estrechos (de un solo byte) cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNewLine">
      <summary>Representa un carácter de nueva línea para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNo">
      <summary>Indica que se hizo clic en el botón <see langword="No" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormal">
      <summary>Indica que el archivo es un archivo normal para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalFocus">
      <summary>Indica que el estilo de ventana es normal con el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNormalNoFocus">
      <summary>Indica que el estilo de ventana es normal sin el foco en el programa invocado cuando se llama a la función <see langword="Shell" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNull">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Nothing" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullChar">
      <summary>Representa un carácter null para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbNullString">
      <summary>Representa una cadena de longitud cero para las funciones de impresión y visualización y para llamar a procedimientos externos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObject">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Object" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbObjectError">
      <summary>Representa el número de error del objeto. Los números de error definidos por el usuario deberían ser mayores que este valor.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOK">
      <summary>Indica que se hizo clic en el botón <see langword="OK" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKCancel">
      <summary>Indica que se van a mostrar los botones <see langword="OK" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbOKOnly">
      <summary>Indica que solo se va a mostrar el botón <see langword="OK" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbProperCase">
      <summary>Indica que cuando se llama a la función <see langword="StrConv" />, la primera letra de cada palabra de una cadena debe escribirse en mayúscula y las demás letras en minúscula.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbQuestion">
      <summary>Indica que se va a mostrar el icono de interrogación cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbReadOnly">
      <summary>Indica que el archivo es de solo lectura para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetry">
      <summary>Indica que se hizo clic en el botón <see langword="Retry" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbRetryCancel">
      <summary>Indica que se van a mostrar los botones <see langword="Retry" /> y <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSaturday">
      <summary>Especifica que debe usarse el sábado como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSet">
      <summary>Indica que debe establecerse un valor de propiedad cuando se llama a la función <see langword="CallByName" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortDate">
      <summary>Indica que debe usarse el formato de fecha corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbShortTime">
      <summary>Indica que debe usarse el formato de hora corta de la referencia cultural actual cuando se llama a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSimplifiedChinese">
      <summary>Indica que los caracteres deben convertirse a chino simplificado cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSingle">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Single" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbString">
      <summary>Indica que el tipo de un objeto Variant es <see langword="String" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSunday">
      <summary>Especifica que debe usarse el domingo como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystem">
      <summary>Indica que el archivo es un archivo de sistema para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbSystemModal">
      <summary>Indica que se va a mostrar el cuadro de mensaje como un cuadro de diálogo modal cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTab">
      <summary>Representa un carácter de tabulación para las funciones de impresión y visualización.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTextCompare">
      <summary>Indica que debe realizarse una comparación de texto cuando se llama a las funciones de comparación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbThursday">
      <summary>Especifica que debe usarse el jueves como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTraditionalChinese">
      <summary>Indica que los caracteres deben convertirse a chino tradicional cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTrue">
      <summary>Indica que debe utilizarse un valor <see langword="Boolean" /> de <see langword="True" /> cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbTuesday">
      <summary>Especifica que debe usarse el martes como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUpperCase">
      <summary>Indica que los caracteres katakana deben convertirse en caracteres en mayúsculas cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseDefault">
      <summary>Indica que debe usarse el valor <see langword="Boolean" /> predeterminado cuando se llama a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUserDefinedType">
      <summary>Indica que el tipo de un objeto Variant es un tipo definido por el usuario. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystem">
      <summary>Indica que debe usarse la semana especificada por el sistema como primera semana del año cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbUseSystemDayOfWeek">
      <summary>Indica que debe usarse el día especificado por el sistema como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVariant">
      <summary>Indica que el tipo de un objeto Variant es <see langword="Variant" />. Valor devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVerticalTab">
      <summary>Representa un carácter de retorno de carro para las funciones de impresión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbVolume">
      <summary>Indica el atributo de archivo de la etiqueta de volumen para las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWednesday">
      <summary>Especifica que debe usarse el miércoles como primer día de la semana cuando se llama a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbWide">
      <summary>Indica que los caracteres estrechos (de un solo byte) deben convertirse en caracteres anchos (de doble byte) cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYes">
      <summary>Indica que se hizo clic en el botón <see langword="Yes" /> de un cuadro de mensaje. Valor devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNo">
      <summary>Indica que se van a mostrar los botones <see langword="Yes" /> y <see langword="No" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbYesNoCancel">
      <summary>Indica que se van a mostrar los botones <see langword="Yes" />, <see langword="No" /> e <see langword="Cancel" /> cuando se llame a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ControlChars">
      <summary>El módulo <see langword="ControlChars" /> contiene constantes utilizadas como caracteres de control. Estas constantes pueden utilizarse en cualquier parte del código.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ControlChars.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.ControlChars" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Back">
      <summary>Representa un carácter de retroceso (<see langword="vbBack" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Cr">
      <summary>Representa un carácter de retorno de carro (<see langword="vbCr" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.CrLf">
      <summary>Representa una combinación de caracteres de retorno de carro y salto de línea (<see langword="vbCrLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.FormFeed">
      <summary>Representa un carácter de avance de página para las funciones de impresión (<see langword="vbFormFeed" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Lf">
      <summary>Representa un carácter de salto de línea (<see langword="vbLf" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NewLine">
      <summary>Representa un carácter de nueva línea (<see langword="vbNewLine" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.NullChar">
      <summary>Representa un carácter nulo (<see langword="vbNullChar" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Quote">
      <summary>Representa un carácter de comillas dobles.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.Tab">
      <summary>Representa un carácter de tabulación (<see langword="vbTab" />).</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.ControlChars.VerticalTab">
      <summary>Representa un carácter de tabulación vertical (<see langword="vbVerticalTab" />).</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Conversion">
      <summary>El módulo <see langword="Conversion" /> contiene los procedimientos utilizados para realizar diversas operaciones de conversión.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic(System.Object,System.Type)">
      <summary>Convierte un objeto al tipo especificado.</summary>
      <param name="Expression">Objeto que se va a convertir.</param>
      <param name="TargetType">Tipo al que se va a convertir el objeto.</param>
      <returns>Objeto cuyo tipo en tiempo de ejecución es el tipo de destino solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.CTypeDynamic``1(System.Object)">
      <summary>Convierte un objeto al tipo genérico especificado.</summary>
      <param name="Expression">Objeto que se va a convertir.</param>
      <typeparam name="TargetType">Tipo al que se va a convertir el objeto.</typeparam>
      <returns>Objeto con tipos estáticos como el tipo genérico solicitado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString">
      <summary>Devuelve el mensaje de error que corresponde a un número de error determinado.</summary>
      <returns>Mensaje de error correspondiente al error en tiempo de ejecución más reciente.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.ErrorToString(System.Int32)">
      <summary>Devuelve el mensaje de error que corresponde a un número de error determinado.</summary>
      <param name="ErrorNumber">Opcional. Cualquier número de error válido.</param>
      <returns>Mensaje de error que corresponde a un número de error determinado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ErrorNumber" /> está fuera del intervalo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Decimal)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Decimal" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Double)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Double" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int16)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Short" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int32)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Integer" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Int64)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Long" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Object)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Object" /> o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene <see langword="Nothing" />, se devuelve <see langword="Nothing" />.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Fix(System.Single)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Single" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Byte)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int16)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int32)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Int64)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.Object)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.SByte)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt16)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt32)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Hex(System.UInt64)">
      <summary>Devuelve una cadena que representa el valor hexadecimal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor hexadecimal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Decimal)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Decimal" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Double)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Double" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int16)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Short" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int32)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Integer" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Int64)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Long" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Object)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Object" /> o cualquier expresión numérica válida. Si <paramref name="Number" /> contiene <see langword="Nothing" />, se devuelve <see langword="Nothing" />.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Int(System.Single)">
      <summary>Devuelve la parte entera de un número.</summary>
      <param name="Number">Obligatorio. Número de tipo <see langword="Single" /> o cualquier expresión numérica válida.</param>
      <returns>Parte entera de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se ha especificado Number.</exception>
      <exception cref="T:System.ArgumentException">Number no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Byte)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int16)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int32)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Int64)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.Object)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.SByte)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt16)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt32)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Oct(System.UInt64)">
      <summary>Devuelve una cadena que representa el valor octal de un número.</summary>
      <param name="Number">Obligatorio. Cualquier expresión numérica o expresión de tipo <see langword="String" /> válida.</param>
      <returns>Cadena que representa el valor octal de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Str(System.Object)">
      <summary>Devuelve una representación de tipo <see langword="String" /> de un número.</summary>
      <param name="Number">Obligatorio. <see langword="Object" /> que contiene cualquier expresión numérica válida.</param>
      <returns>Representación de <see langword="String" /> de un número.</returns>
      <exception cref="T:System.ArgumentNullException">No se especificó <paramref name="Number" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Number" /> no es un tipo numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Char)">
      <summary>Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="Expression">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.Object)">
      <summary>Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="Expression">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Conversion.Val(System.String)">
      <summary>Devuelve los números contenidos en una cadena como un valor numérico del tipo apropiado.</summary>
      <param name="InputStr">Obligatorio. Cualquier expresión <see langword="String" /> válida, variable <see langword="Object" /> o valor <see langword="Char" />. Si <paramref name="Expression" /> es de tipo <see langword="Object" />, su valor debe ser convertible a <see langword="String" /> o se produce un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Números incluidos en una cadena como un valor numérico del tipo apropiado.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="InputStr" /> es demasiado grande.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Expression" /> es una expresión de tipo <see langword="Object" /> que no es convertible a <see langword="String" />.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.DateAndTime">
      <summary>El módulo <see langword="DateAndTime" /> contiene los procedimientos y propiedades que se utilizan en las operaciones de fecha y hora.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(Microsoft.VisualBasic.DateInterval,System.Double,System.DateTime)">
      <summary>Devuelve un valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea sumar.</param>
      <param name="Number">Obligatorio. Expresión de punto flotante que representa el número de intervalos que se desea sumar. Puede ser positivo (para obtener valores de fecha y hora futuros) o negativo (para obtener valores de fecha y hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.</param>
      <param name="DateValue">Obligatorio. Una expresión que representa la fecha y la hora a las que se va a sumar el intervalo. <paramref name="DateValue" /> no se cambia en el programa que realiza la llamada.</param>
      <returns>Valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La fecha calculada es anterior a las 00:00:00 horas del 1 de enero del año 1 o posterior a las 23:59:59 del 31 de diciembre de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateAdd(System.String,System.Double,System.Object)">
      <summary>Devuelve un valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea sumar.</param>
      <param name="Number">Obligatorio. Expresión de punto flotante que representa el número de intervalos que se desea sumar. <paramref name="Number" /> puede ser positivo (para obtener valores de fecha y hora futuros) o negativo (para obtener valores de fecha y hora del pasado). Puede contener una parte fraccionaria cuando <paramref name="Interval" /> especifica horas, minutos o segundos. Para otros valores de <paramref name="Interval" />, se omite cualquier parte fraccionaria de <paramref name="Number" />.</param>
      <param name="DateValue">Obligatorio. Una expresión que representa la fecha y la hora a las que se va a sumar el intervalo. <paramref name="DateValue" /> no se cambia en el programa que realiza la llamada.</param>
      <returns>Valor que contiene un valor de fecha y hora al que se ha sumado un intervalo de tiempo especificado.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La fecha calculada es anterior a las 00:00:00 horas del 1 de enero del año 1 o posterior a las 23:59:59 del 31 de diciembre de 9999.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(Microsoft.VisualBasic.DateInterval,System.DateTime,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.</param>
      <param name="Date1">Obligatorio. Primer valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="Date2">Obligatorio. Segundo valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="DayOfWeek">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> está fuera del intervalo.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> o <paramref name="Date2" /> pertenece a un tipo no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateDiff(System.String,System.Object,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Devuelve un valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa el intervalo de tiempo que se desea utilizar como unidad de la diferencia entre <paramref name="Date1" /> y <paramref name="Date2" />.</param>
      <param name="Date1">Obligatorio. Primer valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="Date2">Obligatorio. Segundo valor de fecha u hora que se va a utilizar en el cálculo.</param>
      <param name="DayOfWeek">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Valor Long que especifica el número de intervalos de tiempo entre dos valores de <see langword="Date" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Date1" />, <paramref name="Date2" /> o <paramref name="DayofWeek" /> está fuera del intervalo.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="Date1" /> o <paramref name="Date2" /> pertenece a un tipo no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(Microsoft.VisualBasic.DateInterval,System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Devuelve un valor Integer que contiene el componente especificado de un valor <see langword="Date" /> dado.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa la parte correspondiente al valor de fecha u hora que se desea devolver.</param>
      <param name="DateValue">Obligatorio. Valor de <see langword="Date" /> que se desea evaluar.</param>
      <param name="FirstDayOfWeekValue">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="FirstWeekOfYearValue">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Valor Integer que contiene el componente especificado de un valor de <see langword="Date" /> dado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DatePart(System.String,System.Object,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Devuelve un valor que contiene el componente especificado de un valor de <see langword="Date" /> dado.</summary>
      <param name="Interval">Obligatorio. Valor de enumeración <see cref="T:Microsoft.VisualBasic.DateInterval" /> o expresión de cadena que representa la parte correspondiente al valor de fecha u hora que se desea devolver.</param>
      <param name="DateValue">Obligatorio. Valor <see langword="Date" /> que se desea evaluar.</param>
      <param name="DayOfWeek">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <param name="WeekOfYear">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> que especifica la primera semana del año. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1" />.</param>
      <returns>Valor Integer que contiene el componente especificado de un valor de <see langword="Date" /> dado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Interval" /> no es válido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="DateValue" /> no está establecido en <see langword="Date" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Devuelve un valor de <see langword="Date" /> que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).</summary>
      <param name="Year">Obligatorio. Expresión de tipo Integer entre 1 y 9999. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Si el valor de <paramref name="Year" /> está comprendido entre 0 y 99, se interpreta como un año comprendido entre 1930 y 2029, tal como se explica abajo en la sección "Comentarios". Si el valor de <paramref name="Year" /> es menor que 1, se resta del año actual.</param>
      <param name="Month">Obligatorio. Expresión de tipo Integer entre 1 y 12. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Month" /> se resta 1 y se aplica al mes de enero del año calculado. En otros términos, se suma (<paramref name="Month" /> - 1) al mes de enero. Si es necesario, se vuelve a calcular el año. Los resultados siguientes muestran este efecto:
Si el valor de <paramref name="Month" /> es 1, el resultado es el mes de enero del año calculado.
Si el valor de <paramref name="Month" /> es 0, el resultado es el mes de diciembre del año anterior.
Si el valor de <paramref name="Month" /> es -1, el resultado es el mes de noviembre del año anterior.
Si el valor de <paramref name="Month" /> es 13, el resultado es el mes de enero del año siguiente.</param>
      <param name="Day">Obligatorio. Expresión de tipo Integer entre 1 y 31. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. Del valor de <paramref name="Day" /> se resta 1 y se aplica al primer día del mes calculado. En otros términos, se suma (<paramref name="Day" /> - 1) al primer día del mes. Se vuelven a calcular el mes y el año si es necesario. Los resultados siguientes muestran este efecto:
Si el valor de <paramref name="Day" /> es 1, el resultado es el primer día del mes calculado.
Si el valor de <paramref name="Day" /> es 0, el resultado es el último día del mes anterior.
Si el valor de <paramref name="Day" /> es -1, el resultado es el penúltimo día del mes anterior.
Si el valor de <paramref name="Day" /> está más allá del final del mes actual, el resultado es el correspondiente día del mes siguiente. Por ejemplo, si el valor de <paramref name="Month" /> es 4 y el valor de <paramref name="Day" /> es 31, el resultado es el 1 de mayo.</param>
      <returns>Valor <see langword="Date" /> que representa un año, mes y día especificados, con la información de hora establecida en medianoche (00:00:00).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.DateString">
      <summary>Devuelve o establece un valor de String que representa la fecha actual según el sistema.</summary>
      <returns>Devuelve o establece un valor de String que representa la fecha actual según el sistema.</returns>
      <exception cref="T:System.InvalidCastException">Formato no válido utilizado para establecer el valor de <see cref="P:Microsoft.VisualBasic.DateAndTime.DateString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.DateValue(System.String)">
      <summary>Devuelve un valor de <see langword="Date" /> que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).</summary>
      <param name="StringDate">Obligatorio. Expresión de tipo String que representa un valor de fecha u hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.</param>
      <returns>Valor de tipo <see langword="Date" /> que contiene la información de fecha representada por una cadena, con la información de hora establecida en medianoche (00:00:00).</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringDate" /> incluye información de hora no válida.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Day(System.DateTime)">
      <summary>Devuelve un valor Integer de 1 a 31 que representa el día del mes.</summary>
      <param name="DateValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el día.</param>
      <returns>Valor Integer de 1 a 31 que representa el día del mes.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Hour(System.DateTime)">
      <summary>Devuelve un valor Integer de 0 a 23 que representa la hora del día.</summary>
      <param name="TimeValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer la hora.</param>
      <returns>Valor Integer de 0 a 23 que representa la hora del día.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Minute(System.DateTime)">
      <summary>Devuelve un valor Integer de 0 a 59 que representa el minuto de la hora.</summary>
      <param name="TimeValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el minuto.</param>
      <returns>Valor Integer de 0 a 59 que representa el minuto de la hora.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Month(System.DateTime)">
      <summary>Devuelve un valor Integer de 1 a 12 que representa el mes del año.</summary>
      <param name="DateValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el mes.</param>
      <returns>Valor Integer de 1 a 12 que representa el mes del año.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.MonthName(System.Int32,System.Boolean)">
      <summary>Devuelve un valor String que contiene el nombre del mes especificado.</summary>
      <param name="Month">Obligatorio. Designación numérica del mes, del 1 al 13; 1 indica el mes de enero y 12 indica el mes de diciembre. El valor 13 se puede utilizar con un calendario de 13 meses. Si el sistema utiliza un calendario de 12 meses y el valor de <paramref name="Month" /> es 13, <c>MonthName</c> devuelve una cadena vacía.</param>
      <param name="Abbreviate">Opcional. <see langword="True" /> para abreviar el nombre del mes; en caso contrario, <see langword="False" />. De manera predeterminada, es <see langword="False" />.</param>
      <returns>Valor String que contiene el nombre del mes especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Month" /> es menor que 1 o mayor que 13.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Now">
      <summary>Devuelve un valor que contiene la fecha y la hora actuales de acuerdo con el sistema.</summary>
      <returns>Fecha y hora actuales según el sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Second(System.DateTime)">
      <summary>Devuelve un valor Integer de 0 a 59 que representa el segundo del minuto.</summary>
      <param name="TimeValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el segundo.</param>
      <returns>Valor Integer de 0 a 59 que representa el segundo del minuto.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeOfDay">
      <summary>Devuelve o establece un valor <see langword="Date" /> que contiene la hora del día actual de acuerdo con el sistema.</summary>
      <returns>Devuelve o establece un valor <see langword="Date" /> que contiene la hora del día actual de acuerdo con el sistema.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Timer">
      <summary>Devuelve un valor <see cref="T:System.Double" /> que representa el número de segundos transcurridos desde la medianoche.</summary>
      <returns>Valor que representa el número de segundos transcurridos desde la medianoche.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeSerial(System.Int32,System.Int32,System.Int32)">
      <summary>Devuelve un valor de <see langword="Date" /> que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.</summary>
      <param name="Hour">Obligatorio. Expresión de tipo Integer entre 0 y 23. Sin embargo, también se aceptan los valores no comprendidos en este intervalo.</param>
      <param name="Minute">Obligatorio. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Minute" /> se suma a la hora calculada, por lo que un valor negativo especifica los minutos anteriores a esa hora.</param>
      <param name="Second">Obligatorio. Expresión de tipo Integer entre 0 y 59. Sin embargo, también se aceptan los valores no comprendidos en este intervalo. El valor de <paramref name="Second" /> se suma al minuto calculado, por lo que un valor negativo especifica los segundos anteriores a ese minuto.</param>
      <returns>Valor <see langword="Date" /> que representa una hora, un minuto y un segundo especificados, con la información de fecha establecida con respecto al 1 de enero del año 1.</returns>
      <exception cref="T:System.ArgumentException">Un argumento queda fuera del intervalo –2.147.483.648 a 2.147.483.647</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La hora calculada es menos de 24 horas negativas.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.TimeString">
      <summary>Devuelve o establece un valor String que representa la hora actual del día según el sistema.</summary>
      <returns>Devuelve o establece un valor String que representa la hora actual del día según el sistema.</returns>
      <exception cref="T:System.InvalidCastException">Formato no válido utilizado para establecer el valor de <see langword="TimeString" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.TimeValue(System.String)">
      <summary>Devuelve un valor de <see langword="Date" /> que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.</summary>
      <param name="StringTime">Obligatorio. Expresión de tipo String que representa un valor de fecha y hora desde las 00:00:00 horas del 1 de enero del año 1 hasta las 23:59:59 horas del 31 de diciembre de 9999.</param>
      <returns>Valor de <see langword="Date" /> que contiene la información de hora representada por una cadena, con la información de fecha establecida en el 1 de enero del año 1.</returns>
      <exception cref="T:System.InvalidCastException">
        <paramref name="StringTime" /> incluye información de fecha no válida.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.DateAndTime.Today">
      <summary>Devuelve o establece un valor <see langword="Date" /> que contiene la fecha actual de acuerdo con el sistema.</summary>
      <returns>Devuelve o establece un valor <see langword="Date" /> que contiene la fecha actual de acuerdo con el sistema.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Weekday(System.DateTime,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Devuelve un valor Integer que contiene un número que representa el día de la semana.</summary>
      <param name="DateValue">Obligatorio. Valor <see langword="Date" /> para el que se desea determinar el día de la semana.</param>
      <param name="DayOfWeek">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see cref="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday" />.</param>
      <returns>Valor Integer que contiene un número que representa el día de la semana.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="DayOfWeek" /> es menor que 0 o mayor que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.WeekdayName(System.Int32,System.Boolean,Microsoft.VisualBasic.FirstDayOfWeek)">
      <summary>Devuelve un valor String que contiene el nombre del día de la semana especificado.</summary>
      <param name="Weekday">Obligatorio. Integer. Designación numérica del día de la semana, del 1 al 7; 1 indica el primer día de la semana y 7 indica el último día de la semana. Las identidades del primer y último día dependen del valor de <paramref name="FirstDayOfWeekValue" />.</param>
      <param name="Abbreviate">Opcional. Valor de tipo <see langword="Boolean" /> que indica si el nombre del día de la semana se va a abreviar. Si se omite, el valor predeterminado es <see langword="False" />, lo que significa que el nombre del día de la semana no se abrevia.</param>
      <param name="FirstDayOfWeekValue">Opcional. Valor elegido de la enumeración <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> que especifica el primer día de la semana. Si no se especifica, se utiliza <see langword="FirstDayOfWeek.System" />.</param>
      <returns>Valor String que contiene el nombre del día de la semana especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Weekday" /> es menor que 1 o mayor que 7, o <paramref name="FirstDayOfWeekValue" /> es menor que 0 o mayor que 7.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.DateAndTime.Year(System.DateTime)">
      <summary>Devuelve un valor Integer de 1 a 9999 que representa el año.</summary>
      <param name="DateValue">Obligatorio. Valor <see langword="Date" /> del que se desea extraer el año.</param>
      <returns>Valor Integer de 1 a 9999 que representa el año.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.DateFormat">
      <summary>Indica cómo se muestran las fechas al llamar a la función <see langword="FormatDateTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.GeneralDate">
      <summary>En el caso de números reales, muestra una fecha y una hora. Si el número no tiene parte fraccionaria, muestra sólo una fecha. Si el número no tiene parte de entero, sólo muestra una hora. La configuración regional del equipo determina la forma en que se muestran la fecha y la hora. Este miembro es equivalente a la constante de Visual Basic <see langword="vbGeneralDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongDate">
      <summary>Muestra una fecha con el formato de fecha larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLongDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.LongTime">
      <summary>Muestra una hora con el formato de hora larga especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLongTime" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortDate">
      <summary>Muestra una fecha con el formato de fecha corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbShortDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateFormat.ShortTime">
      <summary>Muestra una hora con el formato de hora corta especificado en la configuración regional del equipo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbShortTime" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DateInterval">
      <summary>Indica cómo determinar y dar formato a los intervalos de fecha al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Day">
      <summary>Día del mes (de 1 a 31)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.DayOfYear">
      <summary>Día (de 1 a 366)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Hour">
      <summary>Hora (de 0 a 23)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Minute">
      <summary>Minuto (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Month">
      <summary>Mes (de 1 a 12)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Quarter">
      <summary>Trimestre del año (de 1 a 4)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Second">
      <summary>Segundo (de 0 a 59)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Weekday">
      <summary>Día de la semana (de 1 a 7)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.WeekOfYear">
      <summary>Semana del año (de 1 a 53)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DateInterval.Year">
      <summary>Año</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.DueDate">
      <summary>Indica cuándo vencen los pagos al llamar a métodos financieros.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.BegOfPeriod">
      <summary>Se sitúa al principio del intervalo de fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.DueDate.EndOfPeriod">
      <summary>Se sitúa al final del intervalo de fechas.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.ErrObject">
      <summary>El módulo <see langword="ErrObject" /> contiene las propiedades y los procedimientos que se utilizan para identificar y controlar los errores en tiempo de ejecución mediante el objeto <see langword="Err" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Clear">
      <summary>Borra todos los valores de propiedad del objeto <see langword="Err" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Description">
      <summary>Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error. Lectura y escritura.</summary>
      <returns>Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error. Lectura y escritura.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Erl">
      <summary>Obtiene un entero que indica el número de línea de la última instrucción ejecutada.</summary>
      <returns>Número de línea de la última instrucción ejecutada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.GetException">
      <summary>Devuelve la excepción que representa el error que se ha producido.</summary>
      <returns>Excepción que representa el error que se ha producido.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.LastDllError">
      <summary>Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</summary>
      <returns>Código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (DLL).</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.ErrObject.Number">
      <summary>Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.</summary>
      <returns>Devuelve o establece un valor numérico que especifica un error. Lectura y escritura.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> es mayor que 65535.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)">
      <summary>Genera un error en tiempo de ejecución; se puede utilizar en lugar de la instrucción <see langword="Error" />.</summary>
      <param name="Number">Obligatorio. Entero de tipo <see langword="Long" /> que identifica la naturaleza del error. Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario. Cuando se establece el valor de la propiedad <see langword="Number" /> en un código de error propio en un módulo de clase, se suma el número del código de error a la constante <see langword="vbObjectError" />. Por ejemplo, para generar el número de error 513, asigne <c>vbObjectError + 513</c> a la propiedad <see langword="Number" />.</param>
      <param name="Source">Opcional. Expresión de tipo <see langword="String" /> que denomina el objeto o la aplicación que generó el error. Al establecer esta propiedad para un objeto, use el formato <c>project</c>.<c>class</c>. Si no se especifica <paramref name="Source" />, se utiliza el identificador de proceso del actual proyecto de Visual Basic.</param>
      <param name="Description">Opcional. Expresión de tipo <see langword="String" /> que describe el error. Si no se especifica, se examina el valor de la propiedad <see langword="Number" />. Si se puede asignar a un código de error en tiempo de ejecución de Visual Basic, la cadena que devuelva la función <see langword="Error" /> se utilizará como la propiedad <see langword="Description" />. Si hay ningún error de Visual Basic que corresponda a la propiedad <see langword="Number" />, se utiliza el mensaje "Error definido por la aplicación o por el objeto".</param>
      <param name="HelpFile">Opcional. Ruta de acceso completa al archivo de Ayuda referente a este error. Si no se especifica, Visual Basic utiliza la unidad, la ruta de acceso y el nombre completos del archivo de Ayuda de Visual Basic.</param>
      <param name="HelpContext">Opcional. Identificador de contexto que identifica un tema dentro del <paramref name="HelpFile" /> que proporciona ayuda para el error. Si no se especifica, se utiliza el identificador de contexto del archivo de Ayuda de Visual Basic correspondiente a la propiedad <see langword="Number" /> si existe.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.FileAttribute">
      <summary>Indica los atributos de archivo que se deben utilizar al llamar a las funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Archive">
      <summary>El archivo ha cambiado desde que se realizó la última copia de seguridad. Este miembro es equivalente a la constante de Visual Basic <see langword="vbArchive" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Directory">
      <summary>Directorio o carpeta. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDirectory" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Hidden">
      <summary>Oculto. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHidden" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Normal">
      <summary>Normal (valor predeterminado para <see langword="Dir" /> y <see langword="SetAttr" />). No se aplica ninguna característica especial a este archivo. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNormal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.ReadOnly">
      <summary>Sólo lectura. Este miembro es equivalente a la constante de Visual Basic <see langword="vbReadOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.System">
      <summary>Archivo de sistema. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSystem" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileAttribute.Volume">
      <summary>Etiqueta de volumen. Este atributo no es válido cuando se utiliza con <see langword="SetAttr" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbVolume" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <summary>Especifica qué se hace cuando un directorio que se va a eliminar contiene archivos o directorios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <summary>Elimine el contenido del directorio junto con el directorio. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <summary>Produzca <see cref="T:System.IO.IOException" /> si el directorio no se encuentra vacío. La propiedad <see langword="Data" /> de la excepción muestra una lista de los archivos que no se pudieron eliminar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FieldType">
      <summary>Indica si los campos de texto están delimitados o tienen un ancho fijo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <summary>Indica que los campos están delimitados.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <summary>Indica que los campos tienen un ancho fijo.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <summary>Proporciona propiedades y métodos para trabajar con unidades, archivos y directorios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <summary>Combina dos rutas de acceso y devuelve una ruta de acceso con un formato correcto.</summary>
      <param name="baseDirectory">
        <see langword="String" />. Primera ruta de acceso que se va a combinar.</param>
      <param name="relativePath">
        <see langword="String" />. Segunda ruta de acceso que se va a combinar.</param>
      <returns>Combinación de las rutas de acceso especificadas.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="baseDirectory" /> o <paramref name="relativePath" /> son rutas de acceso incorrectas.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <summary>Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName">Ubicación donde se va a copiar el contenido del directorio.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está establecido en <see langword="UIOption.AllDialogs" /> y el usuario cancela la operación o no se puede copiar uno o más archivos del directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica la acción que se va a realizar cuando el usuario haga clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="ShowUI" /> está establecido en <see langword="UIOption.AllDialogs" /> y el usuario cancela la operación o no se puede copiar uno o más archivos del directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <summary>Copia el contenido de un directorio en otro directorio.</summary>
      <param name="sourceDirectoryName">Directorio que se va a copiar.</param>
      <param name="destinationDirectoryName">Ubicación donde se va a copiar el contenido del directorio.</param>
      <param name="overwrite">
        <see langword="True" /> para sobrescribir los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationDirectoryName" /> o <paramref name="sourceDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio de origen no existe.</exception>
      <exception cref="T:System.IO.IOException">La ruta de acceso de origen y la ruta de acceso de destino son iguales.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de carpeta de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Existe un archivo de destino pero no se puede obtener acceso a él.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <summary>Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName">Archivo que se va a copiar.</param>
      <param name="destinationFileName">Ubicación en la que se va a copiar el archivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">Hay un archivo en uso con el mismo nombre en el directorio de destino.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName">Archivo que se va a copiar.</param>
      <param name="destinationFileName">Ubicación en la que se va a copiar el archivo.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName">Archivo que se va a copiar.</param>
      <param name="destinationFileName">Ubicación en la que se va a copiar el archivo.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica la acción que se va a realizar cuando el usuario haga clic en Cancelar durante la operación. El valor predeterminado es <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="UICancelOption" /> está establecido en <see langword="ThrowException" /> y el usuario ha cancelado la operación o se ha producido un error de E/S no especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <summary>Copia un archivo en una nueva ubicación.</summary>
      <param name="sourceFileName">Archivo que se va a copiar.</param>
      <param name="destinationFileName">Ubicación en la que se va a copiar el archivo.</param>
      <param name="overwrite">
        <see langword="True" /> si deben sobrescribirse los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destinationFileName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> o <paramref name="sourceFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo de destino existe y <paramref name="overwrite" /> se establece en <see langword="False" />.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <summary>Crea un directorio.</summary>
      <param name="directory">Nombre y ubicación del directorio.</param>
      <exception cref="T:System.ArgumentException">El nombre del directorio es incorrecto. Por ejemplo, contiene caracteres no válidos o está compuesto solo por espacios en blanco.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">El nombre del directorio es demasiado largo.</exception>
      <exception cref="T:System.NotSupportedException">El nombre de directorio consta sólo de dos puntos (:).</exception>
      <exception cref="T:System.IO.IOException">El directorio principal del directorio que se va a crear es de solo lectura.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene permiso para crear el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <summary>Obtiene o establece el directorio actual.</summary>
      <returns>Directorio actual para las operaciones de E/S de archivo.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso no es válida.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <summary>Elimina un directorio.</summary>
      <param name="directory">Directorio que se va a eliminar.</param>
      <param name="onDirectoryNotEmpty">Especifica qué se hace cuando un directorio que se va a eliminar contiene archivos o directorios. El valor predeterminado es <see langword="DeleteDirectoryOption.DeleteAllContents" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Elimina un directorio.</summary>
      <param name="directory">Directorio que se va a eliminar.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Elimina un directorio.</summary>
      <param name="directory">Directorio que se va a eliminar.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica si se va a producir una excepción cuando el usuario haga clic en Cancelar.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso es una cadena de longitud cero, es incorrecta, contiene solo espacios en blanco o contiene caracteres no válidos (incluidos los caracteres comodín). La ruta de acceso es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe o es un archivo.</exception>
      <exception cref="T:System.IO.IOException">Un archivo del directorio o subdirectorio está en uso.</exception>
      <exception cref="T:System.NotSupportedException">El nombre de directorio contiene dos puntos (:).</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.OperationCanceledException">El usuario cancela la operación o no se puede eliminar el directorio.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <summary>Elimina un archivo.</summary>
      <param name="file">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <summary>Elimina un archivo.</summary>
      <param name="file">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Elimina un archivo.</summary>
      <param name="file">Nombre y ruta de acceso al archivo que se va a eliminar.</param>
      <param name="showUI">Indica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="recycle">Especifica si el archivo eliminado se va a enviar o no a la Papelera de reciclaje. El valor predeterminado es <see langword="RecycleOption.DeletePermanently" />.</param>
      <param name="onUserCancel">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; tiene una barra diagonal final a partir de la cual se debe especificar un archivo; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene permiso para eliminar el archivo o el archivo es de solo lectura.</exception>
      <exception cref="T:System.OperationCanceledException">El usuario ha cancelado la operación y el parámetro <paramref name="onUserCancel" /> está establecido en <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <summary>Devuelve <see langword="True" /> si el directorio especificado existe.</summary>
      <param name="directory">Ruta de acceso al directorio.</param>
      <returns>Es <see langword="True" /> si existe el directorio; en caso contrario, es <see langword="False" />. Este método también devuelve <see langword="False" /> si el parámetro representa el nombre y la ruta de acceso de un archivo en lugar de un directorio.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <summary>Devuelve una colección de sólo lectura de todos los nombres de unidad disponibles.</summary>
      <returns>Colección de solo lectura de todas las unidades disponibles, especificadas como objetos <see cref="T:System.IO.DriveInfo" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <summary>Devuelve <see langword="True" /> si el archivo especificado existe.</summary>
      <param name="file">Nombre y ruta de acceso al archivo.</param>
      <returns>Devuelve <see langword="True" /> si el archivo existe; de lo contrario, este método devuelve <see langword="False" />. Este método también devuelve <see langword="False" /> si el parámetro representa la ruta de acceso de un directorio en lugar de un archivo.</returns>
      <exception cref="T:System.ArgumentException">El nombre del archivo finaliza con una barra diagonal inversa (\).</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <summary>Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.</summary>
      <param name="directory">Directorio en el que se va a buscar.</param>
      <param name="containsText">Texto de búsqueda.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la búsqueda debe distinguir entre mayúsculas y minúsculas; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="True" />.</param>
      <param name="searchType">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <returns>Colección de solo lectura de los nombres de los archivos que contienen el texto especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero, solo contiene un espacio en blanco, contiene caracteres no válidos o es una ruta de acceso de dispositivo (empieza por <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">La ruta de acceso del directorio especificada contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Devuelve una colección de cadenas de sólo lectura que representa los nombres de los archivos que contienen el texto especificado.</summary>
      <param name="directory">Directorio en el que se va a buscar.</param>
      <param name="containsText">Texto de búsqueda.</param>
      <param name="ignoreCase">
        <see langword="True" /> si la búsqueda debe distinguir entre mayúsculas y minúsculas; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="True" />.</param>
      <param name="searchType">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="fileWildcards">Modelo con el que hay que coincidir.</param>
      <returns>Colección de solo lectura de los nombres de los archivos que contienen el texto especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero, solo contiene un espacio en blanco, contiene caracteres no válidos o es una ruta de acceso de dispositivo (empieza por <c>\.&lt;/code&gt;).</c></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">La ruta de acceso del directorio especificada contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <summary>Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.</summary>
      <param name="directory">Nombre y ruta de acceso al directorio.</param>
      <returns>Colección de solo lectura de los nombres de ruta de acceso a los subdirectorios dentro del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Devuelve una colección de cadenas que representan los nombres de las rutas de acceso a los subdirectorios de un directorio.</summary>
      <param name="directory">Nombre y ruta de acceso al directorio.</param>
      <param name="searchType">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modelo para comparar los nombres.</param>
      <returns>Colección de solo lectura de los nombres de ruta de acceso a los subdirectorios dentro del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">Uno o más de los caracteres comodín especificados es <see langword="Nothing" />, una cadena vacía o contiene solo espacios.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio especificado no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio especificado apunta a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.IO.DirectoryInfo" /> de la ruta de acceso especificada.</summary>
      <param name="directory">
        <see langword="String" />. Ruta de acceso al directorio.</param>
      <returns>Objeto <see cref="T:System.IO.DirectoryInfo" /> para la ruta de acceso especificada.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">La ruta de acceso del directorio contiene dos puntos (:) o tiene un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.IO.DriveInfo" /> de la unidad especificada.</summary>
      <param name="drive">Unidad que se va a examinar.</param>
      <returns>Objeto <see cref="T:System.IO.DriveInfo" /> para la unidad especificada.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="drive" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.IO.FileInfo" /> del archivo especificado.</summary>
      <param name="file">Nombre y ruta de acceso al archivo.</param>
      <returns>Objeto <see cref="T:System.IO.FileInfo" /> para el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException">El nombre de la ruta de acceso es incorrecto. Por ejemplo, contiene caracteres no válidos o está compuesto solo por espacios en blanco. El nombre de archivo tiene un símbolo de barra oblicua final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.NotSupportedException">La ruta de acceso contiene un signo de dos puntos en el medio de la cadena.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso es demasiado larga.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene acceso de ACL (lista de control de acceso) al archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <summary>Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.</summary>
      <param name="directory">Directorio en el que se va a buscar.</param>
      <returns>Colección de solo lectura de los nombres de archivo del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio que se desea buscar no existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> señala a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <summary>Devuelve una colección de cadenas de sólo lectura que representan los nombres de los archivos de un directorio.</summary>
      <param name="directory">Directorio en el que se va a buscar.</param>
      <param name="searchType">Indica si se van a incluir las subcarpetas. El valor predeterminado es <see langword="SearchOption.SearchTopLevelOnly" />.</param>
      <param name="wildcards">Modelo con el que hay que coincidir.</param>
      <returns>Colección de solo lectura de los nombres de archivo del directorio especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio que se desea buscar no existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="directory" /> señala a un archivo existente.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene los permisos necesarios.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <summary>Analiza el nombre de archivo de la ruta de acceso proporcionada.</summary>
      <param name="path">Obligatorio. Ruta de acceso que se va a analizar. <see langword="String" />.</param>
      <returns>Nombre de archivo desde la ruta de acceso especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <summary>Devuelve la ruta de acceso primaria de la ruta de acceso especificada.</summary>
      <param name="path">Ruta de acceso que se va a examinar.</param>
      <returns>Ruta de acceso primaria de la ruta de acceso especificada.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no tiene una ruta de acceso primaria porque es una ruta de acceso raíz.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <summary>Crea un archivo temporal de cero bytes y nombre único en el disco y devuelve la ruta de acceso completa a ese archivo.</summary>
      <returns>Un valor de tipo <see langword="String" /> que contiene la ruta de acceso completa del archivo temporal.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <summary>Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">El origen es un directorio raíz o la ruta de acceso de origen y la ruta de acceso de destino son las mismas.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio de destino ya existe y <paramref name="overwrite" /> está establecido en <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="onUserCancel" /> está establecido en <see langword="ThrowException" /> y un subdirectorio del archivo no se puede copiar.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> está establecida en <see langword="ThrowException" /> y el usuario cancela la operación o ésta no se puede finalizar.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <summary>Mueve un directorio de una ubicación a otra.</summary>
      <param name="sourceDirectoryName">Ruta de acceso al directorio que se va a mover.</param>
      <param name="destinationDirectoryName">Ruta de acceso al directorio al que se va a mover el directorio de origen.</param>
      <param name="overwrite">
        <see langword="True" /> si deben sobrescribirse los directorios existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las siguientes razones: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceDirectoryName" /> o <paramref name="destinationDirectoryName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">El directorio de destino ya existe y <paramref name="overwrite" /> está establecido en <see langword="False" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.InvalidOperationException">La operación es cíclica.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <summary>Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <summary>Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <summary>Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="showUI">Especifica si se va a seguir visualmente el progreso de la operación. El valor predeterminado es <see langword="UIOption.OnlyErrorDialogs" />.</param>
      <param name="onUserCancel">Especifica si se va a producir una excepción cuando el usuario cancele la operación. El valor predeterminado es <see langword="UICancelOption.ThrowException" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.OperationCanceledException">
        <paramref name="onUserCancel" /> está establecido en <see langword="ThrowException" /> y el usuario ha cancelado la operación o se ha producido un error de E/S no especificado.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <summary>Mueve un archivo a una nueva ubicación.</summary>
      <param name="sourceFileName">Ruta de acceso al archivo que se va a mover.</param>
      <param name="destinationFileName">Ruta de acceso al directorio al que se moverá el archivo.</param>
      <param name="overwrite">
        <see langword="True" /> para sobrescribir los archivos existentes; de lo contrario, <see langword="False" />. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationFileName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de código de origen no es válido o no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <summary>El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <summary>El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados como, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <param name="fieldWidths">Ancho de los campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <summary>El método <see langword="OpenTextFieldParser" /> permite crear un objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />, que proporciona una forma sencilla y eficaz de analizar los archivos de texto estructurados como, por ejemplo, los registros. El objeto <see langword="TextFieldParser" /> puede utilizarse para leer los archivos de ancho fijo y delimitado.</summary>
      <param name="file">Archivo que se va a abrir con <see langword="TextFieldParser" />.</param>
      <param name="delimiters">Delimitadores de los campos.</param>
      <returns>
        <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> para leer el archivo especificado.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">No se puede analizar una fila con el formato especificado. El mensaje de excepción especifica la línea que inicia la excepción, mientras que a la propiedad <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> se le asigna el texto incluido en la línea.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <summary>Abre un objeto <see cref="T:System.IO.StreamReader" /> para leer desde un archivo.</summary>
      <param name="file">Archivo que se va a leer.</param>
      <returns>Objeto <see cref="T:System.IO.StreamReader" /> que se va a leer del archivo</returns>
      <exception cref="T:System.ArgumentException">El nombre de archivo finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver leer en el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <summary>Abre un objeto <see cref="T:System.IO.StreamReader" /> para leer desde un archivo.</summary>
      <param name="file">Archivo que se va a leer.</param>
      <param name="encoding">Codificación que se va a usar para el contenido del archivo. El valor predeterminado es ASCII.</param>
      <returns>Objeto <see cref="T:System.IO.StreamReader" /> que se va a leer del archivo</returns>
      <exception cref="T:System.ArgumentException">El nombre de archivo finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver leer en el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <summary>Abre un objeto <see cref="T:System.IO.StreamWriter" /> para escribir en el archivo especificado.</summary>
      <param name="file">Archivo en el que se va a escribir.</param>
      <param name="append">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> que se va a escribir en el archivo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentException">El nombre de archivo finaliza con una barra oblicua final.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Abre un objeto <see cref="T:System.IO.StreamWriter" /> para escribir en el archivo especificado.</summary>
      <param name="file">Archivo en el que se va a escribir.</param>
      <param name="append">
        <see langword="True" /> para anexar el contenido en el archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <param name="encoding">Codificación que se va a usar al escribir en el archivo. El valor predeterminado es ASCII.</param>
      <returns>Objeto <see cref="T:System.IO.StreamWriter" /> que se va a escribir en el archivo especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.ArgumentException">El nombre de archivo finaliza con una barra oblicua final.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <summary>Devuelve el contenido de un archivo como una matriz de bytes.</summary>
      <param name="file">Archivo que se va a leer.</param>
      <returns>Una matriz de <see langword="Byte" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <summary>Devuelve el contenido de un archivo de texto como un objeto <see langword="String" />.</summary>
      <param name="file">Nombre y ruta de acceso al archivo que se va a leer.</param>
      <returns>Un valor de tipo <see langword="String" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <summary>Devuelve el contenido de un archivo de texto como un objeto <see langword="String" />.</summary>
      <param name="file">Nombre y ruta de acceso al archivo que se va a leer.</param>
      <param name="encoding">Codificación de caracteres que se usará al leer el archivo. El valor predeterminado es UTF-8.</param>
      <returns>Un valor de tipo <see langword="String" /> que contiene el contenido del archivo.</returns>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <summary>Cambia el nombre de un directorio.</summary>
      <param name="directory">Ruta de acceso y nombre del directorio cuyo nombre se va a cambiar.</param>
      <param name="newName">Nuevo nombre para el directorio.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contiene información sobre la ruta de acceso.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="directory" /> es <see langword="Nothing" />.
O bien
<paramref name="newName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">Ya hay un archivo o directorio con el nombre especificado en <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <summary>Cambia el nombre de un archivo.</summary>
      <param name="file">Archivo cuyo nombre se va a cambiar.</param>
      <param name="newName">Nuevo nombre de archivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newName" /> contiene información de la ruta de acceso o finaliza con una barra diagonal inversa (\).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.
o bien
<paramref name="newName" /> es <see langword="Nothing" /> o una cadena vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El directorio no existe.</exception>
      <exception cref="T:System.IO.IOException">Ya hay un archivo o directorio con el nombre especificado en <paramref name="newName" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
      <exception cref="T:System.UnauthorizedAccessException">El usuario no tiene el permiso necesario.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <summary>Escribe datos en un archivo binario.</summary>
      <param name="file">Ruta de acceso y nombre del archivo en el que se va a escribir.</param>
      <param name="data">Datos que se van a escribir en el archivo.</param>
      <param name="append">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <summary>Escribe texto en un archivo.</summary>
      <param name="file">Archivo en el que se va a escribir.</param>
      <param name="text">Texto que se va a escribir en el archivo.</param>
      <param name="append">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>Escribe texto en un archivo.</summary>
      <param name="file">Archivo en el que se va a escribir.</param>
      <param name="text">Texto que se va a escribir en el archivo.</param>
      <param name="append">
        <see langword="True" /> para anexar el contenido del archivo; <see langword="False" /> para sobrescribir el contenido del archivo.</param>
      <param name="encoding">Codificación que se usará al escribir en el archivo.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida por una de las razones siguientes: es una cadena de longitud cero; solo contiene un espacio en blanco; contiene caracteres no válidos; o es una ruta de acceso de dispositivo (empieza por \\.\); finaliza con una barra diagonal final.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="file" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo no existe.</exception>
      <exception cref="T:System.IO.IOException">El archivo está en uso por otro proceso, o hay un error de E/S.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso supera la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.NotSupportedException">Un nombre de archivo o directorio de la ruta de acceso contiene dos puntos (:) o está en un formato no válido.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria para escribir la cadena en el búfer.</exception>
      <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para ver la ruta de acceso.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <summary>Es la excepción que se genera cuando el método <see cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" /> no puede analizar una fila con el formato especificado.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con datos serializados.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje que describe el error.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">
        <see cref="T:System.String" /> que describe el error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (<see langword="Nothing" /> en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado y un número de línea.</summary>
      <param name="message">El mensaje de la excepción.</param>
      <param name="lineNumber">Número de la línea incorrecta.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> con el mensaje de error especificado, un número de línea y una referencia a la excepción interna que representa la causa de esta excepción.</summary>
      <param name="message">El mensaje de la excepción.</param>
      <param name="lineNumber">Número de la línea incorrecta.</param>
      <param name="innerException">Clase <see cref="T:System.Exception" /> que es la causa de la excepción actual. Si el parámetro <see cref="P:System.Exception.InnerException" /> no es una referencia nula (<see langword="Nothing" /> en Visual Basic), la excepción actual se inicia en un bloque catch que controla la excepción interna.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Establece el objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con información sobre la excepción.</summary>
      <param name="info">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene los datos serializados del objeto sobre la excepción iniciada.</param>
      <param name="context">Estructura <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene información contextual sobre el origen o el destino.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <summary>Obtiene el número de la línea incorrecta.</summary>
      <returns>Número de la línea incorrecta.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <summary>Crea y devuelve una representación de cadena de la excepción actual.</summary>
      <returns>Representación de cadena de la excepción actual.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <summary>Especifica si un archivo debe eliminarse de manera permanente o colocarse en la Papelera de reciclaje.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <summary>Elimina el archivo o directorio de manera permanente. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <summary>Envía el archivo o directorio a la Papelera de reciclaje.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <summary>Especifica si se buscan todos o sólo los directorios de nivel superior.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <summary>Busque el directorio especificado y todos los subdirectorios que se encuentren dentro de él. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <summary>Busque sólo el directorio especificado y excluya los subdirectorios.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <summary>Proporciona propiedades para obtener acceso a directorios a los que suele hacerse referencia.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <summary>Devuelve una instancia de la clase <see cref="P:Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <summary>Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para todos los usuarios.</summary>
      <returns>Ruta de acceso al directorio de datos de la aplicación para todos los usuarios.</returns>
      <exception cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <summary>Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para el usuario actual.</summary>
      <returns>Ruta de acceso al directorio de datos de la aplicación para el usuario actual.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Escritorio.</summary>
      <returns>Ruta de acceso al directorio Escritorio.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <summary>Obtiene un nombre de ruta de acceso que apunta al directorio My Documents.</summary>
      <returns>Ruta de acceso al directorio Mis documentos.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Mi música.</summary>
      <returns>Ruta de acceso al directorio Mi música.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Mis imágenes.</summary>
      <returns>Ruta de acceso al directorio Mis imágenes.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <summary>Obtiene una ruta de acceso que apunta al directorio Archivos de programa.</summary>
      <returns>Ruta de acceso al directorio de archivos de programa .</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Programas.</summary>
      <returns>Ruta de acceso al directorio Programas.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Temp.</summary>
      <returns>Ruta de acceso al directorio Temp.</returns>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <summary>Proporciona los métodos y propiedades para analizar archivos de texto estructurados.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />. Secuencia que se va a analizar.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <param name="leaveOpen">
        <see langword="Boolean" />. Indica si debe mantenerse abierto el objeto <paramref name="stream" /> cuando el objeto <see langword="TextFieldParser" /> está cerrado. El valor predeterminado es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.ArgumentException">No se pueden leer desde <paramref name="stream" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="reader">
        <see cref="T:System.IO.TextReader" />. Secuencia de <see cref="T:System.IO.TextReader" /> que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es una cadena vacía.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es una cadena vacía o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see langword="TextFieldParser" />.</summary>
      <param name="path">
        <see langword="String" />. Ruta de acceso completa al archivo que se va a analizar.</param>
      <param name="defaultEncoding">
        <see cref="T:System.Text.Encoding" />. Codificación de caracteres que se va a utilizar si no se determina la codificación del archivo. El valor predeterminado es <see cref="P:System.Text.Encoding.UTF8" />.</param>
      <param name="detectEncoding">
        <see langword="Boolean" />. Indica si se deben buscar marcas de orden de byte al comienzo del archivo. El valor predeterminado es <see langword="True" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> es una cadena vacía o <paramref name="defaultEncoding" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <summary>Cierra el actual objeto <see langword="TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <summary>Define los símbolos (token) de comentarios. Un símbolo (token) de comentario es una cadena que, cuando se encuentra al principio de una línea, indica que dicha línea es un comentario y que el analizador debe omitirla.</summary>
      <returns>Matriz de cadenas que contiene todos los tokens de comentario del objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Un token de comentario incluye un espacio en blanco.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <summary>Define los delimitadores de un archivo de texto.</summary>
      <returns>Matriz de cadenas que contiene todos los delimitadores de campo del objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</returns>
      <exception cref="T:System.ArgumentException">Un valor delimitador se establece en un carácter de nueva línea, una cadena vacía o <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <summary>Libera los recursos que usa el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
      <param name="disposing">booleano. <see langword="True" /> libera los recursos administrados y no administrados; <see langword="False" /> libera sólo los recursos no administrados.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <summary>Devuelve <see langword="True" /> si entre la actual posición del cursor y el final del archivo no hay líneas que no estén en blanco ni líneas que no sean comentarios.</summary>
      <returns>Es <see langword="True" /> si no quedan más datos para leer; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <summary>Devuelve la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</summary>
      <returns>Línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <summary>Devuelve el número de la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</summary>
      <returns>Número de la línea que ha causado la excepción <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> más reciente.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <summary>Denota el ancho de cada columna del archivo de texto que se está analizando.</summary>
      <returns>Matriz de enteros que contiene el ancho de cada columna del archivo de texto que se está analizando.</returns>
      <exception cref="T:System.ArgumentException">Un valor de ancho en cualquier ubicación distinta de la última entrada de la matriz es menor o igual que cero ().</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <summary>Permite que el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <summary>Denota si los campos están entre comillas al analizarse un archivo delimitado.</summary>
      <returns>Es <see langword="True" /> si los campos están entre comillas; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <summary>Devuelve el actual número de línea o devuelve -1 si no hay más caracteres disponibles en la secuencia.</summary>
      <returns>Número de línea actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <summary>Lee el número especificado de caracteres sin avanzar el cursor.</summary>
      <param name="numberOfChars">
        <see langword="Int32" />. Número de caracteres que se van a leer. Obligatorio.</param>
      <returns>Cadena que contiene el número especificado de caracteres que se van a leer.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="numberOfChars" /> es menor que 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <summary>Lee todos los campos en la línea actual, los devuelve como una matriz de cadenas y avanza el cursor a la siguiente línea que contiene datos.</summary>
      <returns>Matriz de cadenas que contiene los valores de campo de la línea actual.</returns>
      <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException">No se puede analizar un campo utilizando el formato especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <summary>Devuelve la línea actual como una cadena y avanza el cursor a la siguiente línea.</summary>
      <returns>Línea actual del archivo o de la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <summary>Lee el resto del archivo de texto y lo devuelve como una cadena.</summary>
      <returns>Texto restante del archivo o de la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <summary>Establece los delimitadores del lector en los valores especificados y establece el tipo de campo en <see langword="Delimited" />.</summary>
      <param name="delimiters">Matriz de tipo <see langword="String" />.</param>
      <exception cref="T:System.ArgumentException">Un delimitador es de longitud cero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <summary>Establece los delimitadores para el lector en los valores especificados.</summary>
      <param name="fieldWidths">Matriz de <see langword="Integer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileIO.TextFieldParser.System#IDisposable#Dispose">
      <summary>Libera los recursos que usa el objeto <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <summary>Indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</summary>
      <returns>Valor de <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> que indica si el archivo que se va a analizar es un archivo delimitado o de ancho fijo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <summary>Indica si los espacios en blanco iniciales y finales deben quitarse de los valores de campo.</summary>
      <returns>Es <see langword="True" /> si los espacios en blanco iniciales y finales deben quitarse de los valores de campo; de lo contrario, es <see langword="False" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <summary>Especifica si se produce una excepción en caso de que el usuario haga clic en Cancelar durante una operación.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <summary>No haga nada cuando el usuario haga clic en Cancelar.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <summary>Produzca una excepción cuando el usuario haga clic en Cancelar.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileIO.UIOption">
      <summary>Especifica qué cuadros de diálogo se deben mostrar a la hora de copiar, eliminar o mover archivos o directorios.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <summary>Mostrar el cuadro de diálogo de progreso y cualquier cuadro de diálogo de error.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <summary>Sólo mostrar cuadros de diálogo de error y ocultar los cuadros de diálogo de progreso. Predeterminado</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FileSystem">
      <summary>El módulo <see langword="FileSystem" /> contiene los procedimientos utilizados para realizar operaciones con archivos, directorios o carpetas y del sistema. La característica <see langword="My" /> proporciona mayor productividad y rendimiento en las operaciones de E/S con archivos que el módulo <see langword="FileSystem" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDir(System.String)">
      <summary>Cambia el directorio o la carpeta actual. La característica <see langword="My" /> proporciona mayor productividad y rendimiento que la función <see langword="ChDir" /> en las operaciones de E/S con archivos. Para obtener más información, consulta <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Path">Obligatorio. Expresión de cadena que identifica el directorio o la carpeta que se convierte en el nuevo directorio predeterminado o la nueva carpeta predeterminada. <paramref name="Path" /> puede incluir la unidad. Si no se especifica ninguna unidad, <see langword="ChDir" /> cambia el directorio predeterminado o la carpeta predeterminada en la unidad actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> está vacía.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.Char)">
      <summary>Cambia la unidad actual.</summary>
      <param name="Drive">Obligatorio. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, <see langword="ChDrive" /> utiliza sólo la primera letra.</param>
      <exception cref="T:System.IO.IOException">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.ChDrive(System.String)">
      <summary>Cambia la unidad actual.</summary>
      <param name="Drive">Obligatorio. Expresión de cadena que especifica una unidad existente. Si se proporciona una cadena de longitud cero (""), la unidad actual no cambia. Si el argumento <paramref name="Drive" /> es una cadena de varios caracteres, <see langword="ChDrive" /> utiliza sólo la primera letra.</param>
      <exception cref="T:System.IO.IOException">Se ha especificado una unidad no válida o la unidad no está disponible.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir">
      <summary>Devuelve una cadena que representa la ruta de acceso actual. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="CurDir" /> en las operaciones de E/S de archivo. Para obtener más información, vea <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <returns>Una cadena que representa la ruta de acceso actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.CurDir(System.Char)">
      <summary>Devuelve una cadena que representa la ruta de acceso actual. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="CurDir" /> en las operaciones de E/S de archivo. Para obtener más información, vea <see cref="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />.</summary>
      <param name="Drive">Opcional. Expresión de tipo <see langword="Char" /> que especifica una unidad existente. Si no se especifica ninguna unidad o si <paramref name="Drive" /> es una cadena de longitud cero (""), <see langword="CurDir" /> devuelve la ruta de acceso a la unidad actual.</param>
      <returns>Una cadena que representa la ruta de acceso actual.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir">
      <summary>Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="Dir" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obtener más información.</summary>
      <returns>Una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Dir(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Devuelve una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="Dir" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" /> para obtener más información.</summary>
      <param name="PathName">Opcional. Expresión de cadena que especifica un nombre de archivo, directorio o carpeta, o bien, la etiqueta de volumen de la unidad. Si no se encuentra <paramref name="PathName" />, se devuelve una cadena de longitud cero (<see langword="&quot;&quot;" />).</param>
      <param name="Attributes">Opcional. Enumeración o expresión numérica cuyo valor especifica los atributos de archivo. Si se omite, <see langword="Dir" /> devuelve archivos que coinciden con <paramref name="Pathname" /> pero que no tienen ningún atributo.</param>
      <returns>Una cadena que representa el nombre de un archivo, un directorio o una carpeta que coincide con un atributo de archivo o modelo especificado, o la etiqueta de volumen de una unidad.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.EOF(System.Int32)">
      <summary>Devuelve un valor booleano o <see langword="True" /> cuando se alcanza el final de un archivo abierto para <see langword="Random" /> o <see langword="Input" /> secuencial.</summary>
      <param name="FileNumber">Obligatorio. <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <returns>Valor booleano o <see langword="True" /> cuando se alcanza el final de un archivo abierto para <see langword="Random" /> o <see langword="Input" /> secuencial.</returns>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileAttr(System.Int32)">
      <summary>Devuelve una enumeración que representa el modo de archivo de los archivos abiertos mediante la función <see langword="FileOpen" />. El <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> proporciona más productividad y rendimiento que la función <see langword="FileAttr" /> en las operaciones de E/S con archivos. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /> para obtener más información.</summary>
      <param name="FileNumber">Obligatorio. <see langword="Integer" />. Cualquier número de archivo válido.</param>
      <returns>Los siguientes valores de enumeración indican el modo de acceso al archivo:
  Valor 
  Modo 
  1 
 <see langword="OpenMode.Input" /> 2 
 <see langword="OpenMode.Output" /> 4 
 <see langword="OpenMode.Random" /> 8 
 <see langword="OpenMode.Append" /> 32 
 <see langword="OpenMode.Binary" /></returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileClose(System.Int32[])">
      <summary>Concluye las operaciones de entrada/salida (E/S) en un archivo abierto con la función <see langword="FileOpen" />. El objeto <see langword="My" /> proporciona más productividad y rendimiento en las operaciones de E/S de archivo. Vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> para obtener más información.</summary>
      <param name="FileNumbers">Opcional. Matriz de parámetros de 0 o más canales que se van a cerrar.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileCopy(System.String,System.String)">
      <summary>Copia un archivo. El objeto <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> ofrece más productividad y rendimiento que <see langword="FileCopy" /> en las operaciones de E/S de archivo. Vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" /> para obtener más información.</summary>
      <param name="Source">Obligatorio. Expresión de cadena que especifica el nombre del archivo que se va a copiar. <paramref name="Source" /> puede incluir el directorio o la carpeta así como la unidad del archivo de origen.</param>
      <param name="Destination">Obligatorio. Expresión de cadena que especifica el nombre del archivo de destino. <paramref name="Destination" /> puede incluir el directorio o la carpeta así como la unidad del archivo de destino.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> o <paramref name="Destination" /> no son válidos o no se especifican.</exception>
      <exception cref="T:System.IO.IOException">El archivo ya está abierto.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No existe el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileDateTime(System.String)">
      <summary>Devuelve un valor de tipo <see langword="Date" /> que indica la fecha y hora en que se escribió un archivo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileDateTime" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" /></summary>
      <param name="PathName">Obligatorio. Expresión de cadena que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o carpeta y la unidad.</param>
      <returns>Valor de tipo <see langword="Date" /> que indica la fecha y hora de creación o de la última modificación de un archivo.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="PathName" /> no es válido o contiene caracteres comodín.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de destino no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Array@,System.Int64,System.Boolean,System.Boolean)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <param name="ArrayIsDynamic">Opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz debe tratarse como una matriz dinámica y si es necesario un descriptor que describa el tamaño y los límites de la matriz.</param>
      <param name="StringIsFixedLength">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Boolean@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /></summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Byte@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Char@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.DateTime@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Decimal@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Double@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int16@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int32@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Int64@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.Single@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.String@,System.Int64,System.Boolean)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <param name="StringIsFixedLength">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de 2 bytes para la cadena que describe la longitud. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGet(System.Int32,System.ValueType@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGet" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileGetObject(System.Int32,System.Object@,System.Int64)">
      <summary>Lee datos de un archivo de disco abierto en una variable.  La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileGetObject" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre de variable válido en la que se leen los datos.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o el número de bytes (archivos en modo <see langword="Binary" />) en el que comienza la lectura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileLen(System.String)">
      <summary>Devuelve un valor que especifica la longitud de un archivo en bytes. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileLen" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />.</summary>
      <param name="PathName">Obligatorio. Expresión de cadena que especifica un archivo. <paramref name="PathName" /> puede incluir el directorio o carpeta y la unidad.</param>
      <returns>Longitud de un archivo en bytes.</returns>
      <exception cref="T:System.IO.FileNotFoundException">No existe el archivo.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileOpen(System.Int32,System.String,Microsoft.VisualBasic.OpenMode,Microsoft.VisualBasic.OpenAccess,Microsoft.VisualBasic.OpenShare,System.Int32)">
      <summary>Abre un archivo para operaciones de entrada o salida. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileOpen" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido. Utilice la función <see langword="FreeFile" /> para obtener el siguiente número de archivo disponible.</param>
      <param name="FileName">Obligatorio. Expresión de cadena que especifica un nombre de archivo y que puede incluir el directorio o la carpeta, y la unidad.</param>
      <param name="Mode">Obligatorio. Enumeración que especifica el modo de archivo: <see langword="Append" />, <see langword="Binary" />, <see langword="Input" />, <see langword="Output" /> o <see langword="Random" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenMode" />.</param>
      <param name="Access">Opcional. Enumeración que especifica las operaciones permitidas en el archivo abierto: <see langword="Read" />, <see langword="Write" /> o <see langword="ReadWrite" />. Tiene como valor predeterminado <see langword="ReadWrite" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenAccess" />.</param>
      <param name="Share">Opcional. Enumeración que especifica las operaciones no permitidas en el archivo abierto por otros procesos: <see langword="Shared" />, <see langword="Lock Read" />, <see langword="Lock Write" /> y <see langword="Lock Read Write" />. Tiene como valor predeterminado <see langword="Lock Read Write" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.OpenShare" />.</param>
      <param name="RecordLength">Opcional. Número menor o igual que 32.767 (bytes). En el caso de los archivos abiertos para el acceso aleatorio, este valor es la longitud de registro. En el caso de los archivos secuenciales, este valor es el número de caracteres almacenados en búfer.</param>
      <exception cref="T:System.ArgumentException">La longitud del registro es negativa (y no es igual a ‑1).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileName" /> ya está abierto o <paramref name="FileName" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Array,System.Int64,System.Boolean,System.Boolean)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <param name="ArrayIsDynamic">Opcional. Sólo se aplica al escribir una matriz. Especifica si la matriz se va a tratar como una matriz dinámica y si se va a escribir un descriptor de matriz para la cadena que describe la longitud.</param>
      <param name="StringIsFixedLength">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Boolean,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Byte,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Char,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.DateTime,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Decimal,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Double,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int16,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int32,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Int64,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.Single,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.String,System.Int64,System.Boolean)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <param name="StringIsFixedLength">Opcional. Se aplica sólo al escribir una cadena. Especifica si se va a escribir un descriptor de longitud de cadena de 2 bytes para la cadena en el archivo. De manera predeterminada, es <see langword="False" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Int32,System.ValueType,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePut(System.Object,System.Object,System.Object)">
      <summary>Escribe los datos de una variable en un archivo de disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePut" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="RecordNumber" /> &lt; 1 y no es igual a -1.</exception>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FilePutObject(System.Int32,System.Object,System.Int64)">
      <summary>Escribe los datos de una variable en un archivo de disco.  La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FilePutObject" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Nombre válido de variable que contiene los datos escritos en disco.</param>
      <param name="RecordNumber">Opcional. Número de registro (archivos en modo <see langword="Random" />) o número de byte (archivos en modo <see langword="Binary" />) en el que comienza la escritura.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FileWidth(System.Int32,System.Int32)">
      <summary>Asigna un ancho de línea de salida a un archivo abierto mediante la función <see langword="FileOpen" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="RecordWidth">Obligatorio. Expresión numérica del 0 al 255, inclusive, que indica el número de caracteres que aparecen en una línea antes de que se inicie una nueva línea. Si el valor de <paramref name="RecordWidth" /> es 0, la longitud de línea no tiene límite. El valor predeterminado para <paramref name="RecordWidth" /> es 0.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.FreeFile">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que representa el siguiente número de archivo disponible para la función <see langword="FileOpen" />.</summary>
      <returns>Valor entero que representa el siguiente número de archivo disponible para la función <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">Hay más de 255 archivos en uso.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.GetAttr(System.String)">
      <summary>Devuelve un valor de <see langword="FileAttribute" /> que representa los atributos de un archivo, un directorio o una carpeta. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="FileAttribute" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatorio. Expresión de cadena que especifica un nombre de archivo, directorio o carpeta. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <returns>Combinación bit a bit de los valores de la enumeración.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="Pathname" /> no es válido o contiene caracteres comodín.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo de destino no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Boolean@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Byte@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Char@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.DateTime@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Decimal@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Double@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int16@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int32@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Int64@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Object@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.Single@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Input(System.Int32,System.String@)">
      <summary>Lee los datos de un archivo secuencial abierto y los asigna a variables.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Value">Obligatorio. Variable a la que se han asignado los valores leídos del archivo; no puede ser una variable de objeto o matriz.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.InputString(System.Int32,System.Int32)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que contiene los caracteres de un archivo abierto en modo <see langword="Input" /> o <see langword="Binary" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="InputString" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="CharCount">Obligatorio. Cualquier expresión numérica válida que especifique el número de caracteres que se van a leer.</param>
      <returns>Cadena que contiene los caracteres de un archivo abierto en modo <see langword="Input" /> o <see langword="Binary" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="InputString" />.</returns>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> no existe.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCount" /> &lt; 0 o &gt; 214.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Kill(System.String)">
      <summary>Elimina archivos de un disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Kill" />. Para obtener más información, consulta <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatorio. Expresión de cadena que especifica uno o varios nombres de archivo que se van a eliminar. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <exception cref="T:System.IO.IOException">El archivo o los archivos de destino están abiertos.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo o los archivos de destino.</exception>
      <exception cref="T:System.Security.SecurityException">Permiso denegado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LineInput(System.Int32)">
      <summary>Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de <see langword="String" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <returns>Lee una sola línea de un archivo secuencial abierto y la asigna a una variable de <see langword="String" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">Se ha llegado al final del archivo.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="FileNumber" /> no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Loc(System.Int32)">
      <summary>Devuelve un valor que especifica la actual posición de lectura y escritura en un archivo abierto.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido de tipo <see langword="Integer" />.</param>
      <returns>Posición de lectura o escritura actual en un archivo abierto.</returns>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Record">Opcional. Número del único registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Lock(System.Int32,System.Int64,System.Int64)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="FromRecord">Opcional. Número del primer registro o byte que se va a bloquear o desbloquear.</param>
      <param name="ToRecord">Opcional. Número del último registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.LOF(System.Int32)">
      <summary>Devuelve el tamaño, en bytes, de un archivo abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="LOF" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Número entero que contiene un número de archivo válido.</param>
      <returns>Tamaño, en bytes, de un archivo abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="LOF" />.</returns>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.MkDir(System.String)">
      <summary>Crea un directorio nuevo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="MkDir" />. Para obtener más información, vea <see cref="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />.</summary>
      <param name="Path">Obligatorio. Expresión de cadena que identifica el directorio que se va a crear. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, <see langword="MkDir" /> crea el nuevo directorio en la unidad actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> no se ha especificado o está vacío.</exception>
      <exception cref="T:System.Security.SecurityException">Permiso denegado.</exception>
      <exception cref="T:System.IO.IOException">El directorio ya existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Print(System.Int32,System.Object[])">
      <summary>Escribe los datos con formato de presentación en un archivo secuencial.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Output">Opcional. Cero o más expresiones delimitadas por comas para escribir en un archivo.
La configuración del argumento <paramref name="Output" /> es:
<see langword="T:System.IO.IOException" />: El modo de archivo no es válido.
<see langword="T:System.IO.IOException" />:<paramref name="FileNumber" /> no existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.PrintLine(System.Int32,System.Object[])">
      <summary>Escribe los datos con formato de presentación en un archivo secuencial.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Output">Opcional. Cero o más expresiones delimitadas por comas para escribir en un archivo.
La configuración del argumento <paramref name="Output" /> es:
<see langword="T:System.IO.IOException" />: El modo de archivo no es válido.
<see langword="T:System.IO.IOException" />:<paramref name="FileNumber" /> no existe.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Rename(System.String,System.String)">
      <summary>Cambia el nombre de un archivo o directorio ubicado en el disco. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Rename" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="OldPath">Obligatorio. Expresión de cadena que especifica el nombre y la ubicación de archivo existentes. <paramref name="OldPath" /> puede incluir el directorio y la unidad del archivo.</param>
      <param name="NewPath">Obligatorio. Expresión de cadena que especifica el nombre y la ubicación de archivo nuevos. <paramref name="NewPath" /> puede incluir el directorio y la unidad de la ubicación de destino. El nombre de archivo especificado por <paramref name="NewPath" /> no puede existir.</param>
      <exception cref="T:System.ArgumentException">La ruta de acceso no es válida.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El archivo <paramref name="OldPath" /> no existe.</exception>
      <exception cref="T:System.IO.IOException">No se puede cambiar el nombre en un dispositivo diferente.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Reset">
      <summary>Cierra todos los archivos ubicados en el disco que se han abierto mediante la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Reset" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.RmDir(System.String)">
      <summary>Quita un directorio existente. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="RmDir" />. Para obtener más información, vea <see cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />.</summary>
      <param name="Path">Obligatorio. Expresión de cadena que identifica el directorio o la carpeta que se va a quitar. <paramref name="Path" /> puede incluir la unidad. Si no hay ninguna unidad especificada, <see langword="RmDir" /> quita el directorio de la unidad actual.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Path" /> no se ha especificado o está vacío.</exception>
      <exception cref="T:System.IO.IOException">El directorio de destino contiene archivos.</exception>
      <exception cref="T:System.IO.FileNotFoundException">El directorio no existe.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32)">
      <summary>Devuelve un valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Seek" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. <see langword="Integer" /> que contiene un número de archivo válido.</param>
      <returns>Valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />.</returns>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Seek(System.Int32,System.Int64)">
      <summary>Devuelve un valor <see langword="Long" /> que especifica la posición actual de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" /> o bien establece la posición de la siguiente operación de lectura o escritura en un archivo abierto con la función <see langword="FileOpen" />. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="Seek" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. <see langword="Integer" /> que contiene un número de archivo válido.</param>
      <param name="Position">Obligatorio. Número del 1 al 2.147.483.647, incluido, que indica dónde debe llevarse a cabo la siguiente operación de lectura o escritura.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SetAttr(System.String,Microsoft.VisualBasic.FileAttribute)">
      <summary>Establece la información de atributos de un archivo. La característica <see langword="My" /> proporciona una mayor productividad y rendimiento en las operaciones de E/S de archivo que <see langword="SetAttr" />. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="PathName">Obligatorio. Expresión de cadena que especifica un nombre de archivo. <paramref name="PathName" /> puede incluir el directorio o la carpeta y la unidad.</param>
      <param name="Attributes">Obligatorio. Constante o expresión numérica, cuya suma especifica los atributos de un archivo.</param>
      <exception cref="T:System.ArgumentException">El tipo de <paramref name="Attribute" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.SPC(System.Int16)">
      <summary>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar la salida.</summary>
      <param name="Count">Obligatorio. Número de espacios que se van a insertar antes de mostrar o imprimir la siguiente expresión en una lista.</param>
      <returns>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar la salida.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB">
      <summary>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</summary>
      <returns>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.TAB(System.Int16)">
      <summary>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</summary>
      <param name="Column">Opcional. Número de columna a la que se realiza el desplazamiento antes de mostrar o imprimir la siguiente expresión en una lista. Si se omite, <see langword="TAB" /> mueve el punto de inserción al principio de la siguiente zona de impresión.</param>
      <returns>Se utiliza con la función <see langword="Print" /> o <see langword="PrintLine" /> para colocar el resultado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="Record">Opcional. Número del único registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Unlock(System.Int32,System.Int64,System.Int64)">
      <summary>Controla el acceso de otros procesos a la totalidad o a una parte de un archivo abierto mediante la función <see langword="Open" />. La característica <see langword="My" /> proporciona más productividad y rendimiento que <see langword="Lock" /> y <see langword="Unlock" /> en las operaciones de E/S con archivos. Para obtener más información, vea <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />.</summary>
      <param name="FileNumber">Obligatorio. Cualquier número de archivo válido.</param>
      <param name="FromRecord">Opcional. Número del primer registro o byte que se va a bloquear o desbloquear.</param>
      <param name="ToRecord">Opcional. Número del último registro o byte que se va a bloquear o desbloquear.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.Write(System.Int32,System.Object[])">
      <summary>Escribe datos en un archivo secuencial. Los datos escritos con <see langword="Write" /> normalmente se leen desde un archivo mediante <see langword="Input" />.</summary>
      <param name="FileNumber">Obligatorio. Expresión <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <param name="Output">Opcional. Una o más expresiones delimitadas por comas para escribir en un archivo.</param>
      <exception cref="T:System.IO.IOException">El modo de archivo no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.FileSystem.WriteLine(System.Int32,System.Object[])">
      <summary>Escribe datos en un archivo secuencial. Los datos escritos con <see langword="Write" /> normalmente se leen desde un archivo mediante <see langword="Input" />.</summary>
      <param name="FileNumber">Obligatorio. Expresión <see langword="Integer" /> que contiene cualquier número de archivo válido.</param>
      <param name="Output">Opcional. Una o más expresiones delimitadas por comas para escribir en un archivo.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Financial">
      <summary>El módulo <see langword="Financial" /> contiene los procedimientos que se utilizan para llevar a cabo operaciones financieras.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Devuelve un valor que especifica la amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.</summary>
      <param name="Cost">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life">Obligatorio. Extensión de la vida útil del activo.</param>
      <param name="Period">Obligatorio. Período por el que se calcula la amortización del activo.</param>
      <param name="Factor">Opcional. Tipo de disminución del saldo. Si se omite, se supone 2 (método de amortización doble de saldo decreciente).</param>
      <returns>Amortización de un activo durante un período de tiempo específico mediante el método de amortización doble de saldo decreciente o algún otro método que se especifique.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Factor" /> &lt;= 0, <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &lt;= 0 o <paramref name="Period" /> &gt; <paramref name="Life." /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="Pmt">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV">Opcional. Valor presente (o suma global) de una serie de pagos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <see langword="DueDate.EndOfPeriod" /> si los pagos vencen al final del período o <see langword="DueDate.BegOfPeriod" /> si los pagos vencen al principio del mismo. Si se omite, se supone que es <see langword="DueDate.EndOfPeriod" />.</param>
      <returns>El valor futuro de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el pago de intereses durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Per">Obligatorio. Período de pago de 1 a <paramref name="NPer" />.</param>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Pago de intereses durante un período determinado de una anualidad basado en pagos fijos periódicos y una tasa de interés fija.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;= 0 o <paramref name="Per" /> &gt; <paramref name="NPer" /></exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)">
      <summary>Devuelve un valor que especifica la tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).</summary>
      <param name="ValueArray">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <param name="Guess">Opcional. <see langword="IRR" /> devuelve un objeto que especifica el valor estimado. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).</param>
      <returns>Tasa de rendimiento interna para una serie de flujos de caja periódicos (pagos e ingresos).</returns>
      <exception cref="T:System.ArgumentException">Los valores de argumento de matriz no son válidos o <paramref name="Guess" /> &lt;= -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)">
      <summary>Devuelve un valor que especifica la tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).</summary>
      <param name="ValueArray">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <param name="FinanceRate">Obligatorio. Tipo de interés abonado como costo de la financiación.</param>
      <param name="ReinvestRate">Obligatorio. Tipo de interés de las ganancias por la reinversión del dinero en efectivo.</param>
      <returns>Tasa de rendimiento interna modificada para una serie de flujos de caja periódicos (pagos e ingresos).</returns>
      <exception cref="T:System.ArgumentException">El rango de <paramref name="ValueArray" /> no es igual a 1, <paramref name="FinanceRate" /> = -1 o <paramref name="ReinvestRate" /> = -1</exception>
      <exception cref="T:System.DivideByZeroException">Se ha producido una división entre cero.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el número de períodos de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Pmt">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Número de períodos de una anualidad basado en pagos periódicos y fijos, así como un tipo de interés fijo.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rate" /> = 0 y <paramref name="Pmt" /> = 0</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)">
      <summary>Devuelve un valor que especifica el valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.</summary>
      <param name="Rate">Obligatorio. Tipo de descuento durante el período, expresado como un valor decimal.</param>
      <param name="ValueArray">Obligatorio. Matriz de <see langword="Double" /> que especifica los valores de flujo de caja. La matriz debe contener por lo menos un valor negativo (un pago) y un valor positivo (un ingreso).</param>
      <returns>Valor presente neto de una inversión basándose en una serie de flujos de caja periódicos (pagos e ingresos) y una tasa de descuento.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ValueArray" /> es <see langword="Nothing" />, intervalo de <paramref name="ValueArray" /> &lt;&gt; 1, o <paramref name="Rate" /> = -1</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV">Obligatorio. Valor presente (o suma global) actual de una serie de pagos que se van a abonar en el futuro. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Pago de una anualidad basándose en los pagos periódicos y fijos así como un tipo de interés fijo.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el pago de principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="Per">Obligatorio. Período de pago de 1 a <paramref name="NPer" />.</param>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="PV">Obligatorio. Valor actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Pago principal durante un período determinado de una anualidad basándose en los pagos fijos periódicos y una tasa de interés fija.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Per" /> &lt;=0 o <paramref name="Per" /> &gt; <paramref name="NPer" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)">
      <summary>Devuelve un valor que especifica el valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.</summary>
      <param name="Rate">Obligatorio. Tipo de interés por período. Por ejemplo, si se obtiene un crédito para la compra de un vehículo con un tipo anual (APR) del 10 por ciento y se realizan pagos mensuales, el tipo por período será 0,1/12 ó 0,0083.</param>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4 x 12 (ó 48) períodos de pago.</param>
      <param name="Pmt">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <returns>Valor presente de una anualidad basándose en los pagos periódicos y fijos que se van a realizar en el futuro así como un tipo de interés fijo.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)">
      <summary>Devuelve un valor que especifica el tipo de interés por período de una anualidad.</summary>
      <param name="NPer">Obligatorio. Número total de períodos de pago de la anualidad. Por ejemplo, si se realizan pagos mensuales para amortizar un crédito a cuatro años para la compra de un vehículo, el crédito tiene un total de 4*12 (o 48) períodos de pago.</param>
      <param name="Pmt">Obligatorio. Pago que se va a realizar en cada período. Normalmente, los pagos contienen capital principal e interés que no cambia durante la vida útil de la anualidad.</param>
      <param name="PV">Obligatorio. Valor presente o actual de una serie de pagos o ingresos futuros. Por ejemplo, cuando se pide un crédito para comprar un vehículo, el importe del crédito será el valor presente para la entidad crediticia de los pagos mensuales que se van a realizar.</param>
      <param name="FV">Opcional. Valor futuro o saldo en efectivo deseados una vez realizado el pago final. Por ejemplo, el valor futuro de un crédito es 0 $ porque ése es su valor después del último pago. Sin embargo, si se desea ahorrar 50.000 $ durante 18 años para la educación de un hijo, el valor futuro es 50.000 $. Si se omite, se supone que el valor es 0.</param>
      <param name="Due">Opcional. Objeto de tipo <see cref="T:Microsoft.VisualBasic.DueDate" /> que indica cuándo vencen los pagos. Este argumento debe ser <c>DueDate.EndOfPeriod</c> si los pagos vencen al final del período o <c>DueDate.BegOfPeriod</c> si los pagos vencen al principio del período. Si se omite, se da por supuesto el argumento <c>DueDate.EndOfPeriod</c>.</param>
      <param name="Guess">Opcional. <see langword="Rate" /> devuelve un valor que estima. Si se omite <paramref name="Guess" /> es 0,1 (10 por ciento).</param>
      <returns>Tipo de interés por período de una anualidad.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="NPer" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)">
      <summary>Devuelve un valor que especifica la amortización lineal de un activo para un solo período.</summary>
      <param name="Cost">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life">Obligatorio. Extensión de la vida útil del activo.</param>
      <returns>Amortización lineal de un activo para un solo período.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Life" /> = 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)">
      <summary>Devuelve un valor que especifica la amortización de la suma de cifras de los años de un activo para un período específico.</summary>
      <param name="Cost">Obligatorio. Costo inicial del activo.</param>
      <param name="Salvage">Obligatorio. Valor del activo al final de su vida útil.</param>
      <param name="Life">Obligatorio. Extensión de la vida útil del activo.</param>
      <param name="Period">Obligatorio. Período por el que se calcula la amortización del activo.</param>
      <returns>Amortización de la suma de cifras de los años de un activo para un período específico.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Salvage" /> &lt; 0, <paramref name="Period" /> &gt; <paramref name="Life" /> o <paramref name="Period" /> &lt;=0.</exception>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstDayOfWeek">
      <summary>Indica el primer día de la semana que se utiliza al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Friday">
      <summary>Viernes. Este miembro es equivalente a <see langword="vbFriday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Monday">
      <summary>Lunes. Este miembro es equivalente a <see langword="vbMonday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Saturday">
      <summary>Sábado. Este miembro es equivalente a <see langword="vbSaturday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Sunday">
      <summary>Domingo (predeterminado). Este miembro es equivalente a <see langword="vbSunday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.System">
      <summary>El primer día de la semana tal y como aparece especificado en la configuración del sistema. Este miembro es equivalente a <see langword="vbUseSystemDayOfWeek" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Thursday">
      <summary>Jueves. Este miembro es equivalente a <see langword="vbThursday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Tuesday">
      <summary>Martes. Este miembro es equivalente a <see langword="vbTuesday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstDayOfWeek.Wednesday">
      <summary>Miércoles. Este miembro es equivalente a <see langword="vbWednesday" /> de la constante de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.FirstWeekOfYear">
      <summary>Indica la primera semana del año que se utiliza al llamar a funciones relacionadas con fechas.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFourDays">
      <summary>Primera semana que tiene al menos cuatro días en el nuevo año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstFourDays" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.FirstFullWeek">
      <summary>Primera semana completa del año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstFullWeek" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.Jan1">
      <summary>Semana en la que se encuentra el 1 de enero (valor predeterminado). Este miembro es equivalente a la constante de Visual Basic <see langword="vbFirstJan1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.FirstWeekOfYear.System">
      <summary>Semana especificada en el sistema como primera semana del año. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUseSystem" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.HideModuleNameAttribute">
      <summary>El atributo <see langword="HideModuleNameAttribute" />, cuando se aplica a un módulo, permite tener acceso a los miembros del módulo utilizando únicamente la cualificación requerida para el módulo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.HideModuleNameAttribute.#ctor">
      <summary>Inicializa una nueva instancia del atributo <see cref="T:Microsoft.VisualBasic.HideModuleNameAttribute" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Information">
      <summary>El módulo <see langword="Information" /> contiene los procedimientos que se utilizan para devolver o comprobar información.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.Err">
      <summary>Contiene información sobre los errores en tiempo de ejecución.</summary>
      <returns>Contiene información sobre los errores en tiempo de ejecución.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsArray(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una variable apunta a una matriz.</summary>
      <param name="VarName">Obligatorio. Variable de <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una variable apunta a una matriz.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDate(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión representa un valor de <see langword="Date" /> válido.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión representa un valor de <see langword="Date" /> válido.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsDBNull(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como clase <see cref="T:System.DBNull" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsError(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión es un tipo de excepción.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión es un tipo de excepción.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNothing(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión no tiene ningún objeto asignado.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión no tiene ningún objeto asignado.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsNumeric(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión puede evaluarse como un número.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión puede evaluarse como un número.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.IsReference(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como un tipo de referencia.</summary>
      <param name="Expression">Obligatorio. Expresión <see langword="Object" />.</param>
      <returns>Devuelve un valor de tipo <see langword="Boolean" /> que indica si una expresión se evalúa como un tipo de referencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.LBound(System.Array,System.Int32)">
      <summary>Devuelve el subíndice más bajo que está disponible para la dimensión indicada de una matriz.</summary>
      <param name="Array">Obligatorio. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más bajo posible de una dimensión.</param>
      <param name="Rank">Opcional. <see langword="Integer" />. Dimensión para la que se va a devolver el subíndice más bajo posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.</param>
      <returns>
        <see langword="Integer" />. Valor más bajo que el subíndice de la dimensión especificada puede contener. <see langword="LBound" /> siempre devuelve 0 si se ha inicializado <paramref name="Array" />, incluso si no tiene elementos; por ejemplo, si es una cadena de longitud cero. Si <paramref name="Array" /> es <see langword="Nothing" />, <see langword="LBound" /> genera una excepción <see cref="T:System.ArgumentNullException" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> es menor que 1 o <paramref name="Rank" /> es mayor que el rango de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.QBColor(System.Int32)">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que representa el código de color RGB correspondiente al número de color especificado.</summary>
      <param name="Color">Obligatorio. Número entero del 0 al 15.</param>
      <returns>Devuelve un valor de tipo <see langword="Integer" /> que representa el código de color RGB correspondiente al número de color especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Color" /> está fuera del intervalo del 0 al 15, ambos inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.RGB(System.Int32,System.Int32,System.Int32)">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.</summary>
      <param name="Red">Obligatorio. Valor <see langword="Integer" /> comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente rojo del color.</param>
      <param name="Green">Obligatorio. Valor <see langword="Integer" /> comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente verde del color.</param>
      <param name="Blue">Obligatorio. Valor <see langword="Integer" /> en el intervalo comprendido entre 0 y 255, ambos inclusive, que representa la intensidad del componente azul del color.</param>
      <returns>Devuelve un valor de tipo <see langword="Integer" /> que representa un valor de color RGB de un conjunto de componentes de color rojo, verde y azul.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Green" />, <paramref name="Blue" />, <paramref name="Red" /> está fuera del intervalo del 0 al 255, ambos inclusive.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.SystemTypeName(System.String)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos del sistema de una variable.</summary>
      <param name="VbName">Obligatorio. Variable de <see langword="String" /> que contiene un nombre de tipo de Visual Basic.</param>
      <returns>Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos del sistema de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.TypeName(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que contiene información del tipo de datos de una variable.</summary>
      <param name="VarName">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns>Devuelve un valor de tipo <see langword="String" /> que contiene información del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.UBound(System.Array,System.Int32)">
      <summary>Devuelve el subíndice más alto que está disponible para la dimensión indicada de una matriz.</summary>
      <param name="Array">Obligatorio. Matriz de cualquier tipo de datos. Matriz en la que se desea buscar el subíndice más alto posible de una dimensión.</param>
      <param name="Rank">Opcional. <see langword="Integer" />. Dimensión para la que se va a devolver el subíndice más alto posible. Utilice 1 para la primera dimensión, 2 para la segunda, etc. Si se omite <paramref name="Rank" />, se supone que el valor es 1.</param>
      <returns>
        <see langword="Integer" />. Valor más alto que el subíndice de la dimensión especificada puede contener. Si <paramref name="Array" /> tiene solo un elemento, <see langword="UBound" /> devuelve 0. Si <paramref name="Array" /> no tiene elementos, por ejemplo si es una cadena de longitud cero, <see langword="UBound" /> devuelve -1.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Array" /> es <see langword="Nothing" />.</exception>
      <exception cref="T:System.RankException">
        <paramref name="Rank" /> es menor que 1 o <paramref name="Rank" /> es mayor que el rango de <paramref name="Array" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VarType(System.Object)">
      <summary>Devuelve un valor de tipo <see langword="Integer" /> que contiene la clasificación del tipo de datos de una variable.</summary>
      <param name="VarName">Obligatorio. Variable de <see langword="Object" />. Si <see langword="Option Strict" /> es <see langword="Off" />, se puede pasar una variable de cualquier tipo de datos, excepto una estructura.</param>
      <returns>Devuelve un valor de tipo <see langword="Integer" /> que contiene la clasificación del tipo de datos de una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Information.VbTypeName(System.String)">
      <summary>Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos de Visual Basic de una variable.</summary>
      <param name="UrtName">Obligatorio. Variable de tipo <see langword="String" /> que contiene un nombre de tipo utilizado por Common Language Runtime.</param>
      <returns>Devuelve un valor de tipo <see langword="String" /> que contiene el nombre del tipo de datos de Visual Basic de una variable.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Interaction">
      <summary>El módulo <see langword="Interaction" /> contiene los procedimientos que se utilizan para interactuar con objetos, aplicaciones y sistemas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.Beep">
      <summary>Emite un sonido a través del altavoz del equipo.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CallByName(System.Object,System.String,Microsoft.VisualBasic.CallType,System.Object[])">
      <summary>Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</summary>
      <param name="ObjectRef">Obligatorio. <see langword="Object" />. Puntero al objeto que expone la propiedad o el método.</param>
      <param name="ProcName">Obligatorio. <see langword="String" />. Expresión de cadena que contiene el nombre de la propiedad o del método en el objeto.</param>
      <param name="UseCallType">Obligatorio. Miembro de enumeración de tipo <see cref="T:Microsoft.VisualBasic.CallType" /> que representa el tipo de procedimiento al que se llama. El valor de <see langword="CallType" /> puede ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</param>
      <param name="Args">Opcional. <see langword="ParamArray" />. Matriz de parámetros que contiene los argumentos que se van a pasar a la propiedad o al método al que se llama.</param>
      <returns>Ejecuta un método en un objeto, o bien establece o devuelve una propiedad en un objeto.</returns>
      <exception cref="T:System.ArgumentException">Valor <paramref name="UseCallType" /> no válido; debe ser <see langword="Method" />, <see langword="Get" /> o <see langword="Set" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.CreateObject(System.String,System.String)">
      <summary>Crea y devuelve una referencia a un objeto COM. <see langword="CreateObject" /> no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.</summary>
      <param name="ProgId">Obligatorio. <see langword="String" />. Id. de programa del objeto que se va a crear.</param>
      <param name="ServerName">Opcional. <see langword="String" />. Nombre del servidor de red donde se va a crear el objeto. Si <paramref name="ServerName" /> es una cadena vacía (""), se utiliza el equipo local.</param>
      <returns>Crea y devuelve una referencia a un objeto COM. <see langword="CreateObject" /> no se puede utilizar para crear instancias de clases en Visual Basic, a menos que dichas clases se expongan explícitamente como componentes COM.</returns>
      <exception cref="T:System.Exception">El servidor no está disponible.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No existe ningún objeto del tipo especificado.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Interaction.IIf(System.Boolean,System.Object,System.Object)">
      <summary>Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.</summary>
      <param name="Expression">Obligatorio. <see langword="Boolean" />. Expresión que desea evaluar.</param>
      <param name="TruePart">Obligatorio. <see langword="Object" />. Se devuelve si <paramref name="Expression" /> se evalúa como <see langword="True" />.</param>
      <param name="FalsePart">Obligatorio. <see langword="Object" />. Se devuelve si <paramref name="Expression" /> se evalúa como <see langword="False" />.</param>
      <returns>Devuelve uno de dos objetos, dependiendo de la evaluación de una expresión.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxResult">
      <summary>Indica qué botón se ha presionado en un cuadro de mensaje, devuelto por la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Abort">
      <summary>Se ha presionado el botón Anular. Este miembro es equivalente a la constante de Visual Basic <see langword="vbAbort" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Cancel">
      <summary>Se ha presionado el botón Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ignore">
      <summary>Se ha presionado el botón Omitir. Este miembro es equivalente a la constante de Visual Basic <see langword="vbIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.No">
      <summary>Se ha presionado el botón No. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Ok">
      <summary>Se ha presionado el botón Aceptar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbOK" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Retry">
      <summary>Se ha presionado el botón Reintentar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbRetry" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxResult.Yes">
      <summary>Se ha presionado el botón Sí. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYes" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MsgBoxStyle">
      <summary>Indica qué botones se mostrarán cuando se llama a la función <see langword="MsgBox" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.AbortRetryIgnore">
      <summary>Botones Anular, Reintentar y Omitir. Este miembro es equivalente a la constante de Visual Basic <see langword="vbAbortRetryIgnore" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.ApplicationModal">
      <summary>Cuadro de mensaje modal de la aplicación. Este miembro es equivalente a la constante de Visual Basic <see langword="vbApplicationModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Critical">
      <summary>Mensaje crítico. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCritical" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton1">
      <summary>El primer botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton1" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton2">
      <summary>El segundo botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.DefaultButton3">
      <summary>El tercer botón es el predeterminado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbDefaultButton3" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Exclamation">
      <summary>Mensaje de advertencia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbExclamation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Information">
      <summary>Mensaje de información. Este miembro es equivalente a la constante de Visual Basic <see langword="vbInformation" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxHelp">
      <summary>Texto de ayuda. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxHelp" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRight">
      <summary>Texto alineado a la derecha. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxRight" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxRtlReading">
      <summary>Texto de lectura de derecha a izquierda (sistemas árabe y hebreo). Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxRtlReading" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.MsgBoxSetForeground">
      <summary>Ventana de cuadro de mensaje de primer plano. Este miembro es equivalente a la constante de Visual Basic <see langword="vbMsgBoxSetForeground" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkCancel">
      <summary>BotonesAceptar y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbOKCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.OkOnly">
      <summary>Solo botón Aceptar (predeterminado). Este miembro es equivalente a la constante de Visual Basic <see langword="vbOKOnly" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.Question">
      <summary>Consulta de advertencia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbQuestion" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.RetryCancel">
      <summary>Botones Reintentar y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbRetryCancel" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.SystemModal">
      <summary>Cuadro de mensaje modal del sistema. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSystemModal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNo">
      <summary>Botones Sí y No. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYesNo" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.MsgBoxStyle.YesNoCancel">
      <summary>Botones Sí, No y Cancelar. Este miembro es equivalente a la constante de Visual Basic <see langword="vbYesNoCancel" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.MyGroupCollectionAttribute">
      <summary>Este atributo admite <see langword="My.Forms" /> y <see langword="My.WebServices" /> en Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.MyGroupCollectionAttribute.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Este atributo admite <see langword="My.Forms" /> y <see langword="My.WebServices" /> en Visual Basic.</summary>
      <param name="typeToCollect">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName" />. El compilador genera las propiedades de descriptor de acceso para las clases que se derivan de este tipo.</param>
      <param name="createInstanceMethodName">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod" />. Especifica el método de la clase que crea las instancias del tipo.</param>
      <param name="disposeInstanceMethodName">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod" />. Especifica el método de la clase que desecha las instancias del tipo.</param>
      <param name="defaultInstanceAlias">
        <see langword="String" />. Inicializa la propiedad <see cref="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias" />. Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.CreateMethod">
      <summary>Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns>Especifica el método de la clase que crea las instancias del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DefaultInstanceAlias">
      <summary>Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns>Especifica el nombre de la propiedad que devuelve la instancia predeterminada de la clase.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.DisposeMethod">
      <summary>Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns>Especifica el método de la clase que desecha las instancias del tipo.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.MyGroupCollectionAttribute.MyGroupName">
      <summary>Esta propiedad admite <see langword="My" /> en Visual Basic.</summary>
      <returns>Especifica el nombre del tipo para el que el compilador genera las propiedades de descriptor de acceso.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenAccess">
      <summary>Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Default">
      <summary>Acceso permitido de lectura y escritura. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Read">
      <summary>Acceso de lectura permitido.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.ReadWrite">
      <summary>Acceso permitido de lectura y escritura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenAccess.Write">
      <summary>Acceso de escritura permitido.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenMode">
      <summary>Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Append">
      <summary>Archivo que se abre para anexar datos. Predeterminado</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Binary">
      <summary>Archivo que se abre para el acceso binario.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Input">
      <summary>Archivo que se abre para el acceso de lectura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Output">
      <summary>Archivo que se abre para el acceso de escritura.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenMode.Random">
      <summary>Archivo que se abre para el acceso aleatorio.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.OpenShare">
      <summary>Indica cómo abrir un archivo al llamar a funciones de acceso a archivos.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Default">
      <summary>
        <see langword="LockReadWrite" />. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockRead">
      <summary>Otros procesos no pueden leer el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockReadWrite">
      <summary>Otros procesos no pueden leer ni escribir en el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.LockWrite">
      <summary>Otros procesos no pueden escribir en el archivo.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.OpenShare.Shared">
      <summary>Cualquier proceso puede leer o escribir en el archivo.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.SpcInfo">
      <summary>Esta clase admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.SpcInfo.Count">
      <summary>Este campo admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Strings">
      <summary>El módulo <see langword="Strings" /> contiene procedimientos que se utilizan para llevar a cabo operaciones con cadenas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.Char)">
      <summary>Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Asc(System.String)">
      <summary>Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.Char)">
      <summary>Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.AscW(System.String)">
      <summary>Devuelve un valor entero que representa el código de carácter correspondiente a un carácter.</summary>
      <param name="String">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" /> o <see langword="String" />. Si <paramref name="String" /> es una expresión de tipo <see langword="String" />, sólo se utiliza el primer carácter de la cadena para la entrada. Si <paramref name="String" /> es <see langword="Nothing" /> o no contiene caracteres, se genera un error <see cref="T:System.ArgumentException" />.</param>
      <returns>Código de carácter correspondiente a un carácter.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Chr(System.Int32)">
      <summary>Devuelve el carácter asociado al código de carácter especificado.</summary>
      <param name="CharCode">Obligatorio. Expresión de tipo <see langword="Integer" /> que representa el <c>punto de código</c> o el código del carácter.</param>
      <returns>Carácter asociado al código de carácter especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; 0 o &gt; 255 para <see langword="Chr" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.ChrW(System.Int32)">
      <summary>Devuelve el carácter asociado al código de carácter especificado.</summary>
      <param name="CharCode">Obligatorio. Expresión de tipo <see langword="Integer" /> que representa el <c>punto de código</c> o el código del carácter.</param>
      <returns>Carácter asociado al código de carácter especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="CharCode" /> &lt; -32768 o &gt; 65535 para <see langword="ChrW" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.Object[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve una matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</summary>
      <param name="Source">Obligatorio. Matriz unidimensional de cadenas en la que se va a buscar.</param>
      <param name="Match">Obligatorio. Cadena que se va a buscar.</param>
      <param name="Include">Opcional. Valor de tipo <see langword="Boolean" /> que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es <see langword="True" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es <see langword="False" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.</param>
      <param name="Compare">Opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Consulte los valores en "Configuración".</param>
      <returns>Matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> es <see langword="Nothing" /> o no es una matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Filter(System.String[],System.String,System.Boolean,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve una matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</summary>
      <param name="Source">Obligatorio. Matriz unidimensional de cadenas en la que se va a buscar.</param>
      <param name="Match">Obligatorio. Cadena que se va a buscar.</param>
      <param name="Include">Opcional. Valor de tipo <see langword="Boolean" /> que indica si se van a devolver subcadenas que incluyen o excluyen <paramref name="Match" />. Si el valor de <paramref name="Include" /> es <see langword="True" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que contiene <paramref name="Match" /> como subcadena. Si el valor de <paramref name="Include" /> es <see langword="False" />, la función <see langword="Filter" /> devuelve el subconjunto de la matriz que no contiene <paramref name="Match" /> como subcadena.</param>
      <param name="Compare">Opcional. Valor numérico que indica el tipo de comparación de cadenas que se va a utilizar. Consulte los valores en "Configuración".</param>
      <returns>Matriz basada en cero que contiene un subconjunto de una matriz <see langword="String" /> basada en criterios de filtro especificados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Source" /> es <see langword="Nothing" /> o no es una matriz unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Format(System.Object,System.String)">
      <summary>Devuelve una cadena con el formato que especifiquen las instrucciones contenidas en una expresión <see langword="String" /> de formato.</summary>
      <param name="Expression">Obligatorio. Cualquier expresión válida.</param>
      <param name="Style">Opcional. Expresión válida de formato de tipo <see langword="String" /> con nombre o definida por el usuario.</param>
      <returns>Cadena con el formato que especifiquen las instrucciones contenidas en una expresión <see langword="String" /> de formato.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatCurrency(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Devuelve una expresión con formato de moneda en la que se utilizará el símbolo de moneda que se haya definido en el panel de control del sistema.</summary>
      <param name="Expression">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.</param>
      <param name="IncludeLeadingDigit">Opcional. Enumeración de <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se muestra un cero inicial o no para los valores fraccionarios. Vea los valores en la sección "Comentarios".</param>
      <param name="UseParensForNegativeNumbers">Opcional. Enumeración <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los valores negativos se van a colocar entre paréntesis o no. Vea los valores en la sección "Comentarios".</param>
      <param name="GroupDigits">Opcional. Enumeración <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional del equipo. Vea los valores en la sección "Comentarios".</param>
      <returns>Expresión con formato de moneda en la que se utilizará el símbolo de moneda que se haya definido en el panel de control del sistema.</returns>
      <exception cref="T:System.ArgumentException">El número de dígitos situados a continuación del signo decimal es mayor que 99.</exception>
      <exception cref="T:System.InvalidCastException">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatDateTime(System.DateTime,Microsoft.VisualBasic.DateFormat)">
      <summary>Devuelve una expresión de cadena que representa un valor de fecha u hora.</summary>
      <param name="Expression">Obligatorio. Expresión de <see langword="Date" /> a la que se va a aplicar formato.</param>
      <param name="NamedFormat">Opcional. Valor numérico que indica el formato de fecha y hora utilizado. Si se omite, se utiliza <see langword="DateFormat.GeneralDate" />.</param>
      <returns>Expresión de cadena que representa un valor de fecha u hora.</returns>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="NamedFormat" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatNumber(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Devuelve una expresión con formato de número.</summary>
      <param name="Expression">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico que indica el número de posiciones que se muestran a la derecha del separador decimal. El valor predeterminado es -1, que indica que se utiliza la configuración regional del equipo.</param>
      <param name="IncludeLeadingDigit">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se muestra un 0 inicial para los valores fraccionarios. Consulte los valores en "Configuración".</param>
      <param name="UseParensForNegativeNumbers">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los valores negativos se van a colocar entre paréntesis. Consulte los valores en "Configuración".</param>
      <param name="GroupDigits">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional. Consulte los valores en "Configuración".</param>
      <returns>Expresión con formato de número.</returns>
      <exception cref="T:System.InvalidCastException">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.FormatPercent(System.Object,System.Int32,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState,Microsoft.VisualBasic.TriState)">
      <summary>Devuelve una expresión con formato de porcentaje (es decir, multiplicada por 100) con un carácter % final.</summary>
      <param name="Expression">Obligatorio. Expresión a la que se debe dar formato.</param>
      <param name="NumDigitsAfterDecimal">Opcional. Valor numérico que indica cuántos lugares a la derecha del decimal se muestran. El valor predeterminado es -1, que indica que se utiliza la configuración regional.</param>
      <param name="IncludeLeadingDigit">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si se debe o no mostrar un cero inicial en los valores fraccionarios. Consulte los valores en "Configuración".</param>
      <param name="UseParensForNegativeNumbers">Opcional. <see cref="T:Microsoft.VisualBasic.TriState" /> constante que indica si hay que poner los valores negativos entre paréntesis. Consulte los valores en "Configuración".</param>
      <param name="GroupDigits">Opcional. Constante <see cref="T:Microsoft.VisualBasic.TriState" /> que indica si los números se agrupan o no mediante el delimitador de grupo especificado en la configuración regional. Consulte los valores en "Configuración".</param>
      <returns>Expresión con formato de porcentaje (es decir, multiplicada por 100) con un carácter % final.</returns>
      <exception cref="T:System.InvalidCastException">El tipo no es numérico.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.GetChar(System.String,System.Int32)">
      <summary>Devuelve un valor de <see langword="Char" /> que representa el carácter correspondiente al índice especificado en la cadena proporcionada.</summary>
      <param name="str">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="Index">Obligatorio. Expresión <see langword="Integer" />. Índice (de base 1) del carácter de <paramref name="str" /> que se va a devolver.</param>
      <returns>Devuelve un valor de <see langword="Char" /> que representa el carácter correspondiente al índice especificado en la cadena proporcionada.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> es <see langword="Nothing" />, <paramref name="Index" /> &lt; 1, o <paramref name="Index" /> es mayor que el índice del último carácter de <paramref name="str" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.Int32,System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.</summary>
      <param name="Start">Opcional. Expresión numérica que establece la posición inicial de cada búsqueda. Si se omite, la búsqueda comienza en la posición del primer carácter. El índice de inicio es de base 1.</param>
      <param name="String1">Obligatorio. Expresión de tipo <see langword="String" /> en la que se va a buscar.</param>
      <param name="String2">Obligatorio. Expresión de tipo <see langword="String" /> que se va a buscar.</param>
      <param name="Compare">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns>Si 
 InStr devuelve 

<paramref name="String1" /> es de longitud cero o <see langword="Nothing" /> 0 

<paramref name="String2" /> es de longitud cero o <see langword="Nothing" /><paramref name="start" />
No se encuentra 
<paramref name="String2" />. 
 0 

<paramref name="String2" /> se encuentra dentro de <paramref name="String1" />. Posición donde empieza la coincidencia 

<paramref name="Start" /> &gt; longitud de <paramref name="String1" /> 0 

.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt; 1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStr(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve un entero que especifica la posición inicial de la primera aparición de una cadena dentro de otra.</summary>
      <param name="String1">Obligatorio. Expresión de tipo <see langword="String" /> en la que se va a buscar.</param>
      <param name="String2">Obligatorio. Expresión de tipo <see langword="String" /> que se va a buscar.</param>
      <param name="Compare">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns>Si 
 InStr devuelve 

<paramref name="String1" /> es de longitud cero o <see langword="Nothing" /> 0 

<paramref name="String2" /> es de longitud cero o <see langword="Nothing" /> La posición inicial para la búsqueda, que establece como valor predeterminado a la posición del primer carácter.  
  
No se encuentra 
<paramref name="String2" />. 
 0 

<paramref name="String2" /> se encuentra dentro de <paramref name="String1" />. Posición donde empieza la coincidencia 



.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.InStrRev(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve la posición de la primera aparición de una cadena dentro de otra, comenzando por el extremo derecho de la cadena.</summary>
      <param name="StringCheck">Obligatorio. Expresión de cadena en la que se va a buscar.</param>
      <param name="StringMatch">Obligatorio. Expresión de cadena que se va a buscar.</param>
      <param name="Start">Opcional. Expresión numérica que establece la posición inicial de base 1 para cada búsqueda, empezando por el lado izquierdo de la cadena. Si se omite <paramref name="Start" />, se utiliza -1, lo que significa que la búsqueda comienza en la posición del último carácter. A continuación, la búsqueda se realiza de derecha a izquierda.</param>
      <param name="Compare">Opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Si se omite, se realiza una comparación binaria. Para obtener los valores, vea Configuración.</param>
      <returns>Si 
 InStrRev devolverá: 

<paramref name="StringCheck" /> tiene longitud cero 
 0 

<paramref name="StringMatch" /> tiene longitud cero 

<paramref name="Start" />
No se encuentra 
<paramref name="StringMatch" />. 
 0 

<paramref name="StringMatch" /> se encuentra dentro de <paramref name="StringCheck" />. La posición en la que se localice la primera coincidencia, comenzando por el extremo derecho de la cadena  
  

<paramref name="Start" /> es mayor que la longitud de <paramref name="StringMatch" /> 0 

.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> = 0 o <paramref name="Start" /> &lt; -1.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.Object[],System.String)">
      <summary>Devuelve una cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</summary>
      <param name="SourceArray">Obligatorio. Matriz unidimensional que contiene las subcadenas que se van a unir.</param>
      <param name="Delimiter">Opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o <see langword="Nothing" />, todos los elementos de la lista se concatenan sin delimitadores.</param>
      <returns>Cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> no es unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Join(System.String[],System.String)">
      <summary>Devuelve una cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</summary>
      <param name="SourceArray">Obligatorio. Matriz unidimensional que contiene las subcadenas que se van a unir.</param>
      <param name="Delimiter">Opcional. Cualquier cadena que se utilice para separar las subcadenas en la cadena devuelta. Si se omite, se utiliza el carácter de espacio (" "). Si <paramref name="Delimiter" /> es una cadena de longitud cero ("") o <see langword="Nothing" />, todos los elementos de la lista se concatenan sin delimitadores.</param>
      <returns>Cadena creada a partir de la combinación de varias subcadenas contenidas en una matriz.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="SourceArray" /> no es unidimensional.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.Char)">
      <summary>Devuelve una cadena o un carácter convertidos en minúscula.</summary>
      <param name="Value">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns>Cadena o un carácter convertidos en minúscula.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LCase(System.String)">
      <summary>Devuelve una cadena o un carácter convertidos en minúscula.</summary>
      <param name="Value">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns>Cadena o un carácter convertidos en minúscula.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Left(System.String,System.Int32)">
      <summary>Devuelve una cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.</summary>
      <param name="str">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven los caracteres situados más a la izquierda.</param>
      <param name="Length">Obligatorio. Expresión <see langword="Integer" />. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.</param>
      <returns>Cadena que contiene un número especificado de caracteres a partir del lado izquierdo de una cadena.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Boolean)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Byte)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Char)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.DateTime)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Decimal)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Double)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int16)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int32)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Int64)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Object)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.SByte)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.Single)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.String)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt16)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt32)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Len(System.UInt64)">
      <summary>Devuelve un entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</summary>
      <param name="Expression">Cualquier expresión de tipo <see langword="String" /> o nombre de variable válidos. Si <paramref name="Expression" /> es del tipo <see langword="Object" />, la función <see langword="Len" /> devuelve el tamaño con el que la función <see langword="FilePut" /> escribirá en el archivo.</param>
      <returns>Número entero que contiene el número de caracteres de una cadena o el número nominal de bytes necesarios para almacenar una variable.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LSet(System.String,System.Int32)">
      <summary>Devuelve una cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.</summary>
      <param name="Source">Obligatorio. Expresión <see langword="String" />. Nombre de variable de cadena.</param>
      <param name="Length">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena devuelta.</param>
      <returns>Cadena alineada a la izquierda que contiene la cadena especificada ajustada a la longitud indicada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.LTrim(System.String)">
      <summary>Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns>Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32)">
      <summary>Devuelve una cadena que contiene todos los caracteres a partir de la posición especificada de una cadena.</summary>
      <param name="str">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven caracteres.</param>
      <param name="Start">Obligatorio. Expresión <see langword="Integer" />. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres de <paramref name="str" />, la función <see langword="Mid" /> devuelve una cadena de longitud cero (""). <paramref name="Start" /> se basa en uno.</param>
      <returns>Una cadena que consta de todos los caracteres a partir de la posición especificada en la cadena.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Mid(System.String,System.Int32,System.Int32)">
      <summary>Devuelve una cadena que contiene un número de caracteres especificado a partir de una posición especificada de una cadena.</summary>
      <param name="str">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven caracteres.</param>
      <param name="Start">Obligatorio. Expresión <see langword="Integer" />. Posición inicial de los caracteres que se van a devolver. Si <paramref name="Start" /> es mayor que el número de caracteres de <paramref name="str" />, la función <see langword="Mid" /> devuelve una cadena de longitud cero (""). <paramref name="Start" /> se basa en uno.</param>
      <param name="Length">Opcional. Expresión <see langword="Integer" />. Número de caracteres que se van a devolver. Si se omite o si hay un número de caracteres menor que <paramref name="Length" /> en el texto (incluido el carácter situado en la posición <paramref name="Start" />), se devuelven todos los caracteres desde la posición inicial hasta la posición final de la cadena.</param>
      <returns>Una cadena que consta del número especificado de caracteres a partir de la posición especificada en la cadena.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Start" /> &lt;= 0 o <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Replace(System.String,System.String,System.String,System.Int32,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve una cadena en la que la subcadena especificada se reemplaza determinado número de veces por otra subcadena.</summary>
      <param name="Expression">Obligatorio. Expresión de cadena que contiene la subcadena que se va a reemplazar.</param>
      <param name="Find">Obligatorio. Subcadena que se va a buscar.</param>
      <param name="Replacement">Obligatorio. Subcadena de reemplazo.</param>
      <param name="Start">Opcional. Posición dentro de <paramref name="Expression" /> que inicia una subcadena usada para el reemplazo. El valor devuelto de <see langword="Replace" /> es una cadena que comienza en <paramref name="Start" />, con substituciones adecuadas. Si se omite, se supone que el valor es 1.</param>
      <param name="Count">Opcional. Número de reemplazos de subcadena que se van a realizar. Si se omite, el valor predeterminado es -1, lo que significa que se van a realizar todos los reemplazos posibles.</param>
      <param name="Compare">Opcional. Valor numérico que indica el tipo de comparación que se va a utilizar al evaluar subcadenas. Para obtener los valores, vea Configuración.</param>
      <returns>
        <see langword="Replace" /> devuelve los siguientes valores.
 Si 
 Replace devolverá: 
<paramref name="Find" /> es de longitud cero o <see langword="Nothing" /> Copia de <paramref name="Expression" /><paramref name="Replace" /> tiene longitud cero 
 Copia de <paramref name="Expression" /> sin apariciones de <paramref name="Find" /><paramref name="Expression" /> es de longitud cero o <see langword="Nothing" />, o bien <paramref name="Start" /> es mayor que la longitud de <paramref name="Expression" /><see langword="Nothing" /><paramref name="Count" /> es igual a 0, 
 Copia de <paramref name="Expression" /></returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Count" /> &lt; -1 o <paramref name="Start" /> &lt;= 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Right(System.String,System.Int32)">
      <summary>Devuelve una cadena que contiene un número especificado de caracteres desde el lado derecho de una cadena.</summary>
      <param name="str">Obligatorio. Expresión de tipo <see langword="String" /> de la que se devuelven los caracteres situados más a la derecha.</param>
      <param name="Length">Obligatorio. <see langword="Integer" />. Expresión numérica que indica el número de caracteres que se van a devolver. Si es 0, se devuelve una cadena de longitud cero (""). Si es mayor o igual que el número de caracteres en <paramref name="str" />, se devuelve la cadena completa.</param>
      <returns>Cadena que contiene un número especificado de caracteres desde el lado derecho de una cadena.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Length" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RSet(System.String,System.Int32)">
      <summary>Devuelve una cadena alineada a la derecha que contiene la cadena especificada y con la longitud especificada.</summary>
      <param name="Source">Obligatorio. Expresión <see langword="String" />. Nombre de variable de cadena.</param>
      <param name="Length">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena devuelta.</param>
      <returns>Cadena alineada a la derecha que contiene la cadena especificada y con la longitud especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.RTrim(System.String)">
      <summary>Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns>Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Space(System.Int32)">
      <summary>Devuelve una cadena que consta del número especificado de espacios.</summary>
      <param name="Number">Obligatorio. Expresión <see langword="Integer" />. Número de espacios deseados en la cadena.</param>
      <returns>Cadena que consta del número especificado de espacios.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> &lt; 0.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Split(System.String,System.String,System.Int32,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve una matriz unidimensional basada en cero que contiene un número especificado de subcadenas.</summary>
      <param name="Expression">Obligatorio. Expresión de tipo <see langword="String" /> que contiene subcadenas y delimitadores.</param>
      <param name="Delimiter">Opcional. Cualquier carácter individual que se utilice para identificar los límites de las subcadenas. Si se omite <paramref name="Delimiter" />, se supone que el carácter de espacio (" ") es el delimitador.</param>
      <param name="Limit">Opcional. Número máximo de subcadenas en las que se debe dividir la cadena de entrada. El valor predeterminado es -1, que indica que la cadena de entrada se debe dividir cada vez que aparece la cadena <paramref name="Delimiter" />.</param>
      <param name="Compare">Opcional. Valor numérico que indica la comparación que se va a utilizar al evaluar subcadenas. Consulte los valores en "Configuración".</param>
      <returns>Matriz de tipo<see langword="String" /> . Si <paramref name="Expression" /> es una cadena de longitud cero (""), <see langword="Split" /> devuelve una matriz de un solo elemento que contiene una cadena de longitud cero. Si <paramref name="Delimiter" /> es una cadena de longitud cero o si no aparece en <paramref name="Expression" />, <see langword="Split" /> devuelve una matriz de un solo elemento que contiene toda la cadena <paramref name="Expression" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrComp(System.String,System.String,Microsoft.VisualBasic.CompareMethod)">
      <summary>Devuelve un valor, -1, 0 ó 1, que indica el resultado de una comparación de cadena.</summary>
      <param name="String1">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="String2">Obligatorio. Cualquier expresión <see langword="String" /> válida.</param>
      <param name="Compare">Opcional. Especifica el tipo de comparación de cadenas. Si se omite <paramref name="Compare" />, la configuración de <see langword="Option Compare" /> determina el tipo de comparación.</param>
      <returns>La función <see langword="StrComp" /> devuelve los siguientes valores.
  Si 
  StrComp devuelve 
 <paramref name="String1" /> se ordena delante de <paramref name="String2" /> -1 
 <paramref name="String1" /> es igual a <paramref name="String2" /> 0 
 <paramref name="String1" /> se ordena después de <paramref name="String2" /> 1</returns>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="Compare" /> no es válido.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrConv(System.String,Microsoft.VisualBasic.VbStrConv,System.Int32)">
      <summary>Devuelve una cadena convertida según se ha especificado.</summary>
      <param name="str">Obligatorio. Expresión de tipo <see langword="String" /> que se va a convertir.</param>
      <param name="Conversion">Obligatorio. Miembro <see cref="T:Microsoft.VisualBasic.VbStrConv" />. Valor de enumeración que especifica el tipo de conversión que se va a realizar.</param>
      <param name="LocaleID">Opcional. Valor de <see langword="LocaleID" /> si difiere del valor de <see langword="LocaleID" /> del sistema. (El valor de <see langword="LocaleID" /> del sistema es el valor predeterminado.)</param>
      <returns>Cadena convertida según se ha especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="LocaleID" /> no admitido, <paramref name="Conversion" /> &lt; 0 o &gt; 2048, o conversión no admitida para la configuración regional especificada.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Char)">
      <summary>Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns>Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.Object)">
      <summary>Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns>Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrDup(System.Int32,System.String)">
      <summary>Devuelve una cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</summary>
      <param name="Number">Obligatorio. Expresión <see langword="Integer" />. Longitud de la cadena que se va a devolver.</param>
      <param name="Character">Obligatorio. Cualquier expresión válida de tipo <see langword="Char" />, <see langword="String" /> u <see langword="Object" />. Se utilizará sólo el primer carácter de la expresión. Si el carácter es de tipo <see langword="Object" />, debe contener un valor de <see langword="Char" /> o de <see langword="String" />.</param>
      <returns>Cadena o un objeto que se compone del carácter especificado repetido el número de veces especificado.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="Number" /> es menor que 0 o el tipo <paramref name="Character" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Character" /> es <see langword="Nothing" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.StrReverse(System.String)">
      <summary>Devuelve una cadena en la que se invierte el orden de los caracteres de la cadena especificada.</summary>
      <param name="Expression">Obligatorio. Expresión de cadena cuyos caracteres se van a invertir. Si <paramref name="Expression" /> es una cadena de longitud cero (""), se devuelve una cadena de longitud cero.</param>
      <returns>Cadena en la que se invierte el orden de los caracteres de la cadena especificada.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.Trim(System.String)">
      <summary>Devuelve una cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</summary>
      <param name="str">Obligatorio. Cualquier expresión de <see langword="String" /> válida.</param>
      <returns>Cadena que contiene una copia de una cadena especificada sin espacios iniciales (<see langword="LTrim" />), sin espacios finales (<see langword="RTrim" />) o sin espacios iniciales ni finales (<see langword="Trim" />).</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.Char)">
      <summary>Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</summary>
      <param name="Value">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns>Cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Strings.UCase(System.String)">
      <summary>Devuelve una cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</summary>
      <param name="Value">Obligatorio. Cualquier expresión válida de tipo <see langword="String" /> o <see langword="Char" />.</param>
      <returns>Cadena o un carácter que contiene la cadena especificada convertida en mayúsculas.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.TabInfo">
      <summary>Esta clase admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TabInfo.Column">
      <summary>Este campo admite las funciones <see langword="Print" /> y <see langword="PrintLine" /> de Visual Basic.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.TriState">
      <summary>Indica un valor booleano o si se debería utilizar el valor predeterminado a la hora de llamar a funciones de formato numérico.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.False">
      <summary>False. El valor numérico de este miembro es 0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.True">
      <summary>True. El valor numérico de este miembro es -1.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.TriState.UseDefault">
      <summary>Configuración predeterminada. El valor numérico de este miembro es -2.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VariantType">
      <summary>Indica el tipo de un objeto de variante, devuelto por la función <see langword="VarType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Array">
      <summary>Matriz. Este miembro es equivalente a la constante de Visual Basic <see langword="vbArray" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Boolean">
      <summary>
        <see langword="Boolean" />. (<see langword="True" /> o <see langword="False" />.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbBoolean" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Byte">
      <summary>
        <see langword="Byte" />. (De 0 a 255.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbByte" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Char">
      <summary>
        <see langword="Char" />. (De 0 a 65535). Este miembro es equivalente a la constante de Visual Basic <see langword="vbChar" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Currency">
      <summary>Divisa. Este miembro es equivalente a la constante de Visual Basic <see langword="vbCurrency" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.DataObject">
      <summary>DataObject.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Date">
      <summary>
        <see langword="Date" />. (0:00:00 del 1 de enero de 0001 a 11:59:59 p.m. del 31 de diciembre de 9999). Este miembro es equivalente a la constante de Visual Basic <see langword="vbDate" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Decimal">
      <summary>
        <see langword="Decimal" />. (De 0 a +/-79.228.162.514.264.337.593.543.950.335 sin separador decimal; de 0 a +/-7,9228162514264337593543950335 con 28 posiciones a la derecha del separador decimal; el número menor distinto de cero es +/-0,0000000000000000000000000001.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbDecimal" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Double">
      <summary>
        <see langword="Double" />. (De -1,79769313486231E+308 a -4,94065645841247E-324 para los valores negativos; de 4,94065645841247E-324 a 1,79769313486231E+308 para los valores positivos.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbDouble" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Empty">
      <summary>Referencia nula. Este miembro es equivalente a la constante de Visual Basic <see langword="vbEmpty" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Error">
      <summary>
        <see cref="T:System.Exception" />
      </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Integer">
      <summary>
        <see langword="Integer" />. (De -2.147.483.648 a 2.147.483.647.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbInteger" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Long">
      <summary>
        <see langword="Long" />. (De -9.223.372.036.854.775.808 a 9.223.372.036.854.775.807.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbLong" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Null">
      <summary>Objeto null. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNull" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Object">
      <summary>Cualquier tipo puede almacenarse en una variable de tipo <see langword="Object" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbObject" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Short">
      <summary>
        <see langword="Short" />. (De -32.768 a 32.767.)</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Single">
      <summary>
        <see langword="Single" />. (De -3,402823E+38 a -1,401298E-45 para los valores negativos; de 1,401298E-45 a 3,402823E+38 para los valores positivos.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbSingle" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.String">
      <summary>
        <see langword="String" />. (De 0 a 2.000 millones de caracteres Unicode aproximadamente.) Este miembro es equivalente a la constante de Visual Basic <see langword="vbString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.UserDefinedType">
      <summary>Tipo definido por el usuario. Cada miembro de la estructura tiene un intervalo determinado por su tipo de datos e independiente de los intervalos de los otros miembros. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUserDefinedType" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VariantType.Variant">
      <summary>
        <see langword="Variant" />. Este miembro es equivalente a la constante de Visual Basic <see langword="vbVariant" />.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedArrayAttribute">
      <summary>Indica que una matriz de una estructura o variable no local debe ser tratada como una matriz de longitud fija.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32)">
      <summary>Inicializa el valor de la propiedad <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedArrayAttribute.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa el valor de la propiedad <see langword="Bounds" />.</summary>
      <param name="UpperBound1">Inicializa el valor del campo superior, que representa el tamaño de la primera dimensión de la matriz.</param>
      <param name="UpperBound2">Inicializa el valor del campo superior, que representa el tamaño de la segunda dimensión de la matriz.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Bounds">
      <summary>Devuelve los límites de la matriz.</summary>
      <returns>Contiene una matriz de enteros que representa los límites de la matriz.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedArrayAttribute.Length">
      <summary>Devuelve el tamaño de la matriz.</summary>
      <returns>Contiene un entero que representa el número de elementos de la matriz.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBFixedStringAttribute">
      <summary>Indica que una matriz debe ser tratada como si fuera de longitud fija.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBFixedStringAttribute.#ctor(System.Int32)">
      <summary>Inicializa el valor del campo <see langword="SizeConst" />.</summary>
      <param name="Length">Longitud de la cadena fija.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.VBFixedStringAttribute.Length">
      <summary>Obtiene la longitud de la cadena.</summary>
      <returns>La longitud de la cadena.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBMath">
      <summary>El módulo <see langword="VbMath" /> contiene procedimientos que se utilizan para llevar a cabo operaciones matemáticas.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize">
      <summary>Inicializa el generador de números aleatorios.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)">
      <summary>Inicializa el generador de números aleatorios.</summary>
      <param name="Number">Opcional. <see langword="Object" /> o cualquier expresión numérica válida.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd">
      <summary>Devuelve un número aleatorio de tipo <see langword="Single" />.</summary>
      <returns>El siguiente número aleatorio en la secuencia.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)">
      <summary>Devuelve un número aleatorio de tipo <see langword="Single" />.</summary>
      <param name="Number">Opcional. Valor de tipo <see langword="Single" /> o cualquier expresión de tipo <see langword="Single" /> válida.</param>
      <returns>Si el número es menor que cero, Rnd genera cada vez el mismo número utilizando <paramref name="Number" /> como valor de inicialización. Si el número es mayor que cero, Rnd genera el siguiente número aleatorio en la secuencia. Si el número es igual a cero, Rnd genera el último número generado. Si no se proporciona ningún número, Rnd genera el siguiente número aleatorio en la secuencia.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VbStrConv">
      <summary>Indica qué tipo de conversión se realiza cuando se llama a la función <see langword="StrConv" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Hiragana">
      <summary>Convierte los caracteres Katakana de la cadena en caracteres Hiragana. Se aplica únicamente a la configuración regional para japonés. Este miembro es equivalente a la constante de Visual Basic <see langword="vbHiragana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Katakana">
      <summary>Convierte los caracteres Hiragana de la cadena en caracteres Katakana. Se aplica únicamente a la configuración regional para japonés. Este miembro es equivalente a la constante de Visual Basic <see langword="vbKatakana" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.LinguisticCasing">
      <summary>Convierte la cadena de reglas del sistema de archivos para mayúsculas y minúsculas a reglas lingüísticas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLinguisticCasing" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Lowercase">
      <summary>Convierte la cadena a minúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbLowerCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Narrow">
      <summary>Convierte los caracteres anchos (dos bytes) de la cadena en caracteres estrechos (un solo byte). Se aplica a las configuraciones regionales para Asia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbNarrow" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.None">
      <summary>No realiza ninguna conversión.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.ProperCase">
      <summary>Convierte la primera letra de cada palabra de la cadena a mayúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbProperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.SimplifiedChinese">
      <summary>Convierte la cadena en caracteres de chino simplificado. Este miembro es equivalente a la constante de Visual Basic <see langword="vbSimplifiedChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.TraditionalChinese">
      <summary>Convierte la cadena en caracteres de chino tradicional. Este miembro es equivalente a la constante de Visual Basic <see langword="vbTraditionalChinese" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Uppercase">
      <summary>Convierte la cadena a mayúsculas. Este miembro es equivalente a la constante de Visual Basic <see langword="vbUpperCase" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.VbStrConv.Wide">
      <summary>Convierte los caracteres estrechos (un solo byte) de la cadena en caracteres anchos (dos bytes). Se aplica a las configuraciones regionales para Asia. Este miembro es equivalente a la constante de Visual Basic <see langword="vbWide" />. Es posible que en la conversión se use la forma de normalización C, incluso si un carácter de entrada ya es de ancho completo. Por ejemplo, la cadena "は゛" (que ya es de ancho completo) se normaliza a "ば". Vea Unicode normalization forms (Formas de normalización Unicode).</summary>
    </member>
  </members>
</doc>