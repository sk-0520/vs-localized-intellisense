<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>Especifica si una propiedad o evento se debería mostrar en una ventana Propiedades.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable">
        <see langword="true" /> si se puede modificar una propiedad o un evento en tiempo de diseño; en cualquier otro caso, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>Obtiene un valor que indica si un objeto se puede examinar.</summary>
      <returns>
        <see langword="true" />si el objeto es examinable; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>Especifica el valor predeterminado de <see cref="T:System.ComponentModel.BrowsableAttribute" />, que es <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj">Otro objeto con el que se va a realizar la comparación.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>Especifica que no se puede modificar una propiedad o un evento en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>Especifica que se puede modificar una propiedad o un evento en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>Especifica el nombre de la categoría en la que se agrupa la propiedad o el evento cuando se muestra en un control <see cref="T:System.Windows.Forms.PropertyGrid" /> establecido en el modo Por categorías.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CategoryAttribute" /> utilizando el nombre de categoría Default.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.CategoryAttribute" /> utilizando el nombre de categoría especificado.</summary>
      <param name="category">Nombre de la categoría.</param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Action.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de acción.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Appearance.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de apariencia.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Asynchronous.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría Asynchronous.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Behavior.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de comportamiento.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>Obtiene el nombre de la categoría correspondiente a la propiedad o al evento a los que se aplica este atributo.</summary>
      <returns>Nombre de la categoría correspondiente a la propiedad o al evento a los que se aplica este atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Data.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de datos.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Default.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría predeterminada.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Design.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de diseño.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría DragDrop.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> de la categoría de arrastrar y colocar.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> actual.</summary>
      <param name="obj">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Focus.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de foco.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Format.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de formato.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>Devuelve el código hash de este atributo.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>Busca el nombre traducido de la categoría especificada.</summary>
      <param name="value">Identificador de la categoría que se busca.</param>
      <returns>El nombre traducido de la categoría, o <see langword="null" />si no existe ninguno.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Key.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de teclado.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Layout.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de presentación.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría Mouse.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de mouse.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>Obtiene un objeto <see cref="T:System.ComponentModel.CategoryAttribute" /> que representa la categoría WindowStyle.</summary>
      <returns>El atributo <see cref="T:System.ComponentModel.CategoryAttribute" /> correspondiente a la categoría de estilo de ventana.</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary>Proporciona la implementación base de la interfaz <see cref="T:System.ComponentModel.IComponent" /> y permite que las aplicaciones compartan objetos.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary>Obtiene un valor que indica si el componente puede generar un evento.</summary>
      <returns>Es <see langword="true" /> si el componente puede generar eventos; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary>Obtiene <see cref="T:System.ComponentModel.IContainer" /> que contiene <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>Interfaz <see cref="T:System.ComponentModel.IContainer" /> que contiene el objeto <see cref="T:System.ComponentModel.Component" />, en caso de que exista, o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no está encapsulado en una interfaz <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary>Obtiene un valor que indica si <see cref="T:System.ComponentModel.Component" /> está actualmente en modo de diseño.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.ComponentModel.Component" /> se encuentra en modo de diseño; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary>Libera todos los recursos que usa <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Component" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary>Se produce cuando el componente se elimina mediante una llamada al método <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary>Obtiene la lista de controladores de eventos asociados a <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventHandlerList" /> que proporciona los delegados correspondientes a este componente.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary>Libera recursos no administrados y realiza otras operaciones de limpieza antes de que se reclame el objeto <see cref="T:System.ComponentModel.Component" /> durante la recolección de elementos no utilizados.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary>Devuelve un objeto que representa el servicio suministrado por <see cref="T:System.ComponentModel.Component" /> o por <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service">Servicio suministrado por <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>Objeto <see cref="T:System.Object" /> que representa un servicio proporcionado por el objeto <see cref="T:System.ComponentModel.Component" /> o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no proporciona el servicio especificado.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary>Obtiene o establece el <see cref="T:System.ComponentModel.ISite" /> de <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>La interfaz <see cref="T:System.ComponentModel.ISite" /> asociada al objeto <see cref="T:System.ComponentModel.Component" />, o <see langword="null" /> si el objeto <see cref="T:System.ComponentModel.Component" /> no está encapsulado en una interfaz <see cref="T:System.ComponentModel.IContainer" />, si el objeto <see cref="T:System.ComponentModel.Component" /> no tiene una interfaz <see cref="T:System.ComponentModel.ISite" /> asociada, o si el objeto <see cref="T:System.ComponentModel.Component" /> se quita de su interfaz <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary>Devuelve una <see cref="T:System.String" /> que contiene el nombre del <see cref="T:System.ComponentModel.Component" />, si existe. Este método no se debe invalidar.</summary>
      <returns>Una <see cref="T:System.String" /> que contiene el nombre de <see cref="T:System.ComponentModel.Component" />, si existe, o <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> no tiene nombre.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>Proporciona un contenedor de sólo lectura para una colección de objetos <see cref="T:System.ComponentModel.IComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ComponentCollection" /> utilizando la matriz de componentes especificada.</summary>
      <param name="components">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> con los que se inicializa la colección.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary>Copia toda la colección en una matriz, empezando a escribir por el índice especificado.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.ComponentModel.IComponent" /> en la que se copian los objetos de la colección.</param>
      <param name="index">Índice de <paramref name="array" /> por el que se debe empezar a copiar.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.ComponentModel.Component" /> de la colección por el índice de colección especificado.</summary>
      <param name="index">Índice de colección del objeto <see cref="T:System.ComponentModel.Component" /> que se va a obtener.</param>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> en el índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Si el índice especificado no está comprendido en el intervalo de índices de la colección.</exception>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary>Obtiene cualquier componente de la colección que coincida con el nombre especificado.</summary>
      <param name="name">Nombre del objeto <see cref="T:System.ComponentModel.IComponent" /> que se va a obtener.</param>
      <returns>Un componente cuyo nombre coincide con el nombre especificado por el parámetro <paramref name="name" />, o <see langword="null" /> si no se encuentra el componente denominado en la colección.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>Especifica una descripción para una propiedad o evento.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DescriptionAttribute" /> sin ningún parámetro.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DescriptionAttribute" /> con una descripción.</summary>
      <param name="description">El texto de la descripción.</param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>Especifica el valor predeterminado de <see cref="T:System.ComponentModel.DescriptionAttribute" />, que es una cadena vacía (""). Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>Obtiene la descripción almacenada en este atributo.</summary>
      <returns>La descripción almacenada en este atributo.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>Obtiene o establece la cadena almacenada como descripción.</summary>
      <returns>La cadena almacenada como descripción. El valor predeterminado es una cadena vacía ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DescriptionAttribute" /> actual.</summary>
      <param name="obj">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary>Devuelve un valor que indica si ésta es la instancia <see cref="T:System.ComponentModel.DescriptionAttribute" /> predeterminada.</summary>
      <returns>Es <see langword="true" /> si esta es la instancia <see cref="T:System.ComponentModel.DescriptionAttribute" /> predeterminada; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary>Especifica que el diseñador de una clase pertenece a una categoría determinada.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> con una cadena vacía ("").</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> con el nombre de categoría dado.</summary>
      <param name="category">Nombre de la categoría.</param>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary>Obtiene el nombre de la categoría.</summary>
      <returns>Nombre de la categoría.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary>Especifica que un componente marcado con esta categoría utiliza un diseñador de componentes. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary>Especifica que un componente marcado con esta categoría no puede utilizar un diseñador de componentes. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> actual.</summary>
      <param name="obj">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary>Especifica que un componente marcado con esta categoría utiliza un diseñador de formularios. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary>Especifica que un componente marcado con esta categoría utiliza un diseñador genérico. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary>Obtiene un identificador único para este atributo.</summary>
      <returns>
        <see cref="T:System.Object" /> que es un identificador único para el atributo.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary>Especifica la visibilidad de una propiedad para el serializador en tiempo de diseño.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary>El generador de código crea código para el contenido del objeto en lugar del objeto en sí.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary>El generador de código no crea código para el objeto.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary>El generador de código crea código para el objeto.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary>Especifica el tipo de persistencia que se va a utilizar al serializar una propiedad en un componente en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> usando el valor de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> especificado.</summary>
      <param name="visibility">Uno de los valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary>Especifica que un serializador debe serializar el contenido de la propiedad en lugar de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary>Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, es decir, un diseñador visual utiliza las reglas predeterminadas para generar el valor de una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary>Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj">Otro objeto con el que se va a realizar la comparación.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary>Devuelve el código hash de este objeto.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary>Especifica que un serializador no debe serializar el valor de la propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary>Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns>Es <see langword="true" /> si el atributo está establecido en el valor predeterminado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary>Obtiene un valor que indica el modo básico de serialización que debe utilizar un serializador al determinar si se conserva el valor de una propiedad y la forma de hacerlo.</summary>
      <returns>Uno de los valores de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. De manera predeterminada, es <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary>Especifica que se debe permitir a un serializador la serialización del valor de la propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary>Especifica si una propiedad sólo se puede establecer en tiempo de diseño.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly">
        <see langword="true" /> si la propiedad sólo se puede establecerse en tiempo de diseño; <see langword="false" /> si puede establecerse en tiempo de diseño y en tiempo de ejecución.</param>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary>Especifica el valor predeterminado de <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, que es <see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> actual.</summary>
      <param name="obj">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash de un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary>Obtiene un valor que indica si una propiedad sólo se puede establecer en tiempo de diseño.</summary>
      <returns>
        <see langword="true" /> si una propiedad sólo se puede establecer en tiempo de diseño; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary>Especifica que una propiedad puede establecerse en tiempo de diseño o en tiempo de ejecución. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary>Especifica que una propiedad sólo se puede establecer en tiempo de diseño. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary>Especifica el nombre para mostrar de una propiedad, evento o método void público que no toma ningún argumento.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.DisplayNameAttribute" /> utilizando el nombre para mostrar.</summary>
      <param name="displayName">El nombre para mostrar.</param>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary>Especifica el valor predeterminado del atributo <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Este campo es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary>Obtiene el nombre para mostrar de una propiedad, evento o método void público que no toma ningún argumento almacenado en este atributo.</summary>
      <returns>El nombre para mostrar.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary>Obtiene o establece el nombre para mostrar.</summary>
      <returns>Nombre para mostrar.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary>Determina si dos instancias de <see cref="T:System.ComponentModel.DisplayNameAttribute" /> son iguales.</summary>
      <param name="obj">Objeto <see cref="T:System.ComponentModel.DisplayNameAttribute" /> que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del objeto actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash para el objeto <see cref="T:System.ComponentModel.DisplayNameAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary>Proporciona una lista simple de delegados. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary>Agrega un delegado a la lista.</summary>
      <param name="key">Objeto que posee el evento.</param>
      <param name="value">Delegado que se va a agregar a la lista.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary>Agrega una lista de delegados a la lista actual.</summary>
      <param name="listToAddFrom">Lista que se va a agregar.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary>Se deshace de la lista de delegados.</summary>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary>Obtiene o establece el delegado del objeto especificado.</summary>
      <param name="key">Objeto que se va a buscar en la lista.</param>
      <returns>Delegado de la clave especificada, o <see langword="null" /> si el delegado no existe.</returns>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary>Quita un delegado de la lista.</summary>
      <param name="key">Objeto que posee el evento.</param>
      <param name="value">Delegado que se va a quitar de la lista.</param>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>Proporciona la funcionalidad necesaria para todos los componentes.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>Representa el método que controla el evento <see cref="E:System.ComponentModel.IComponent.Disposed" /> de un componente.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>Obtiene o establece la clase <see cref="T:System.ComponentModel.ISite" /> asociada a la clase <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns>Objeto <see cref="T:System.ComponentModel.ISite" /> asociado al componente; o <see langword="null" />, si el componente no tiene un sitio asociado.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>Proporciona funcionalidad para contenedores. Los contenedores son objetos que contienen cero o más componentes de forma lógica.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>Agrega la <see cref="T:System.ComponentModel.IComponent" /> especificada a <see cref="T:System.ComponentModel.IContainer" /> al final de la lista.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Agrega la <see cref="T:System.ComponentModel.IComponent" /> especificada a <see cref="T:System.ComponentModel.IContainer" /> al final de la lista, y le asigna un nombre al componente.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a agregar.</param>
      <param name="name">Nombre único que se le va a asignar al componente, sin hacer distinción entre mayúsculas y minúsculas.
o bien
<see langword="null" /> que deja al componente sin nombre.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>Obtiene todos los componentes de <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns>Colección de objetos <see cref="T:System.ComponentModel.IComponent" /> que representa todos los componentes de <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>Quita un componente del objeto <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> que se va a quitar.</param>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary>Especifica que un objeto no tiene subpropiedades que se puedan editar. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable">
        <see langword="true" />si el objeto es inmutable; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary>Representa el valor predeterminado de <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> que se va a comparar con esta instancia o una referencia nula (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash para el objeto <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> actual.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary>Obtiene si el objeto es inmutable.</summary>
      <returns>
        <see langword="true" />si el objeto es inmutable; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary>Indica si el valor de esta instancia es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si esta instancia es el atributo predeterminado para la clase; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary>Especifica que un objeto tiene al menos una subpropiedad editable. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary>Especifica que un objeto no tiene subpropiedades que se puedan editar. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary>Especifica el evento que se provoca en la inicialización. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName">Nombre del evento de inicialización.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary>Obtiene el nombre del evento de inicialización.</summary>
      <returns>Nombre del evento de inicialización.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary>Se inicia cuando un subproceso en el que se debe ejecutar una operación ya no existe o no tiene ningún bucle de mensajes.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />dados.</summary>
      <param name="info">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
      <param name="context">Destino que se va a utilizar para la deserialización.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descripción detallada especificada.</summary>
      <param name="message">Descripción detallada del error.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> con la descripción detallada especificada y la excepción especificada.</summary>
      <param name="message">Descripción detallada del error.</param>
      <param name="innerException">Referencia a la excepción interna que es la causa de esta excepción.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary>Excepción que se produjo al utilizar argumentos no válidos que son enumeradores.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> sin un mensaje.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con el contexto y los datos de serialización especificados.</summary>
      <param name="info">Clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que se va a utilizar para la deserialización.</param>
      <param name="context">Destino que se va a utilizar para la deserialización.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con el mensaje especificado.</summary>
      <param name="message">Mensaje que aparece con esta excepción.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con la descripción detallada especificada y la excepción especificada.</summary>
      <param name="message">Descripción detallada del error.</param>
      <param name="innerException">Referencia a la excepción interna que es la causa de esta excepción.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> con un mensaje generado a partir del argumento, el valor no válido y una clase de enumeración.</summary>
      <param name="argumentName">Nombre del argumento que provocó la excepción.</param>
      <param name="invalidValue">Valor del argumento que produjo un error.</param>
      <param name="enumClass">Un objeto <see cref="T:System.Type" /> que representa la clase de enumeración con los valores válidos.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>Proporciona la funcionalidad requerida por los sitios.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>Cuando una clase implementa <see cref="T:System.ComponentModel.ISite" />, se obtiene el componente asociado al sitio.</summary>
      <returns>Instancia de <see cref="T:System.ComponentModel.IComponent" /> asociada a <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>Obtiene la <see cref="T:System.ComponentModel.IContainer" /> asociada a <see cref="T:System.ComponentModel.ISite" /> cuando se implementa por medio de una clase.</summary>
      <returns>Instancia de <see cref="T:System.ComponentModel.IContainer" /> asociada a <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>Determina si el componente se encuentra en modo de diseño cuando se implementa por medio de una clase.</summary>
      <returns>Es <see langword="true" /> si el componente está en modo de diseño; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>Obtiene o establece el nombre del componente asociado a <see cref="T:System.ComponentModel.ISite" /> cuando se implementa por medio de una clase.</summary>
      <returns>Nombre del componente asociado a <see cref="T:System.ComponentModel.ISite" />; o <see langword="null" /> si no se ha asignado un nombre al componente.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary>Especifica que este objeto admite una notificación sencilla con transacciones para inicializaciones por lotes.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary>Indica al objeto que está comenzando la inicialización.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary>Indica al objeto que se ha completado la inicialización.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary>Proporciona un medio para ejecutar de forma sincrónica o asincrónica un delegado.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary>De forma asincrónica ejecuta el delegado en el subproceso que creó este objeto.</summary>
      <param name="method">
        <see cref="T:System.Delegate" /> de un método que obtiene los parámetros del mismo número y tipo que los incluidos en <paramref name="args" />.</param>
      <param name="args">Matriz de tipo <see cref="T:System.Object" /> cuyos valores se pasan como argumentos al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <returns>Interfaz <see cref="T:System.IAsyncResult" /> que representa la operación asincrónica iniciada por la llamada a este método.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary>Espera a que finalice el proceso iniciado mediante la llamada a <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> y, a continuación, devuelve el valor generado por el proceso.</summary>
      <param name="result">Interfaz <see cref="T:System.IAsyncResult" /> que representa la operación asincrónica iniciada por la llamada a <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor devuelto generado por la operación asincrónica.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary>De forma sincrónica ejecuta el delegado en el subproceso que creó este objeto y calcula las referencias de la llamada en el subproceso de creación.</summary>
      <param name="method">
        <see cref="T:System.Delegate" /> que contiene una llamada a un método, en el contexto del subproceso del control.</param>
      <param name="args">Matriz de tipo <see cref="T:System.Object" /> que representa los argumentos que se pasan al método especificado. Puede ser <see langword="null" /> si no se necesita ningún argumento.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor devuelto por el delegado al que se ha invocado, o <see langword="null" /> si el delegado no devuelve ningún valor.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary>Obtiene un valor que indica si el elemento que realiza la llamada debe llamar a <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> cuando se llame a un objeto que implemente esta interfaz.</summary>
      <returns>
        <see langword="true" /> si el elemento que realiza la llamada llama a <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary>Especifica si se debería localizar una propiedad. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable">
        <see langword="true" /> si se debe traducir una propiedad; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary>Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary>Devuelve un valor que indica si el valor del objeto especificado es igual al atributo <see cref="T:System.ComponentModel.LocalizableAttribute" /> actual.</summary>
      <param name="obj">Objeto que contiene el valor cuya equivalencia se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el valor del objeto especificado es igual al del actual; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash para el objeto <see cref="T:System.ComponentModel.LocalizableAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary>Obtiene un valor que indica si una propiedad se debe traducir.</summary>
      <returns>
        <see langword="true" /> si se debe traducir una propiedad; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary>Especifica que no se debe traducir una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary>Especifica que se debe traducir una propiedad. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary>Especifica que esta propiedad puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge">
        <see langword="true" /> si esta propiedad se puede combinar en una ventana Propiedades con otras propiedades pertenecientes a otros objetos; en caso contrario, <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary>Obtiene un valor que indica si esta propiedad puede combinarse en una ventana Propiedades con propiedades pertenecientes a otros objetos.</summary>
      <returns>
        <see langword="true" /> si esta propiedad se puede combinar en una ventana Propiedades con otras propiedades pertenecientes a otros objetos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary>Especifica el valor predeterminado, que es <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />. Esta propiedad se puede combinar con propiedades que pertenecen a otros objetos en una ventana Propiedades. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary>Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="obj">Otro objeto con el que se va a realizar la comparación.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash para el objeto <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary>Especifica que una propiedad no puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary>Especifica que una propiedad puede combinarse en una ventana Propiedades con otras propiedades pertenecientes a otros objetos. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary>Indica que la propiedad principal se notifica cuando cambia el valor de la propiedad a la que se aplica este atributo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> utilizando el valor especificado para determinar si a la propiedad principal se le notifican los cambios en el valor de la propiedad.</summary>
      <param name="notifyParent">Es <see langword="true" /> si se deben notificar los cambios a la propiedad principal; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary>Indica el estado de atributo predeterminado, que indica que la propiedad principal no recibirá notificación de los cambios en su valor. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary>Obtiene un valor que indica si el objeto especificado es el mismo que el objeto actual.</summary>
      <param name="obj">Objeto cuya igualdad se va a comprobar.</param>
      <returns>Es <see langword="true" /> si el objeto es el mismo que este objeto; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary>Obtiene el código hash de este objeto.</summary>
      <returns>Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary>Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns>Es <see langword="true" /> si el valor actual del atributo es el valor predeterminado del atributo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary>Indica que a la propiedad principal no se le notifican los cambios en el valor de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary>Obtiene o establece un valor que indica si a la propiedad principal se le deben notificar los cambios en el valor de la propiedad.</summary>
      <returns>Es <see langword="true" /> si se deben notificar los cambios a la propiedad principal; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary>Indica que a la propiedad principal se le notifican los cambios en el valor de la propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary>Indica si el nombre de la propiedad asociada se muestra entre paréntesis en la ventana Propiedades. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> que indica que la propiedad asociada no debe mostrarse entre paréntesis.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />, utilizando el valor especificado para indicar si el atributo se muestra entre paréntesis.</summary>
      <param name="needParenthesis">Es <see langword="true" /> si el nombre debe ir entre paréntesis; en caso contrario, es <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> con un valor predeterminado que indica que la propiedad asociada no debe mostrarse entre paréntesis. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary>Compara el objeto especificado con este objeto para comprobar su igualdad.</summary>
      <param name="o">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary>Obtiene el código hash de este objeto.</summary>
      <returns>Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary>Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns>Es <see langword="true" /> si el valor actual del atributo es el valor predeterminado del atributo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary>Obtiene un valor que indica si la ventana Propiedades muestra el nombre de la propiedad entre paréntesis.</summary>
      <returns>Es <see langword="true" /> si se muestra la propiedad entre paréntesis; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>Especifica si la propiedad a la que está enlazado este atributo es de sólo lectura o de lectura y escritura. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly">
        <see langword="true" /> para mostrar que la propiedad a la que está enlazado este atributo es de sólo lectura; <see langword="false" /> para mostrar que la propiedad es de lectura y escritura.</param>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary>Especifica el valor predeterminado de <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, que es <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (es decir, la propiedad a la que está enlazado este atributo es de lectura y escritura). Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>Indica si esta instancia y un objeto especificado son iguales.</summary>
      <param name="value">Otro objeto con el que se va a realizar la comparación.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>Devuelve el código hash de esta instancia.</summary>
      <returns>Código hash para el objeto <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> actual.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary>Determina si este atributo es el valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>Obtiene un valor que indica si la propiedad a la que está enlazado este atributo es de sólo lectura.</summary>
      <returns>
        <see langword="true" /> si la propiedad con la que está enlazado este atributo es de sólo lectura; <see langword="false" /> si es de lectura y escritura.</returns>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary>Especifica que la propiedad a la que está enlazado este atributo es de lectura y escritura y se puede modificar. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary>Especifica que la propiedad a la que está enlazado este atributo es de sólo lectura y no se puede modificar en el explorador de servidores. Este campo <see langword="static" /> es de solo lectura.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary>Define los identificadores que indican el tipo de actualización de la ventana Propiedades.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary>Las propiedades deben ser obligatorias y se ha de actualizar la vista.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary>No es necesario actualizar.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary>Se ha de actualizar la vista.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary>Indica que la cuadrícula de la propiedad debería actualizarse cuando cambia el valor de propiedad asociado. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh">Valor de <see cref="T:System.ComponentModel.RefreshProperties" /> que indica la naturaleza de la actualización.</param>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary>Indica que todas las propiedades se consultan de nuevo y se actualizan si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary>Indica que no se actualiza ninguna otra propiedad si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary>Reemplaza al método <see cref="Overload:System.Object.Equals" /> del objeto.</summary>
      <param name="value">Objeto cuya igualdad se va a comprobar.</param>
      <returns>
        <see langword="true" /> si el objeto especificado es el mismo; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary>Devuelve el código hash de este objeto.</summary>
      <returns>Código hash del objeto al que pertenece el atributo.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary>Obtiene un valor que indica si el valor actual del atributo es su valor predeterminado.</summary>
      <returns>
        <see langword="true" /> si el valor actual del atributo es el valor predeterminado; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary>Obtiene las propiedades de actualización del miembro.</summary>
      <returns>Enumeración <see cref="T:System.ComponentModel.RefreshProperties" /> que indica las actuales propiedades de actualización del miembro.</returns>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary>Indica que se vuelven a dibujar todas las propiedades si cambia el valor de propiedad. Este campo es de solo lectura.</summary>
    </member>
  </members>
</doc>