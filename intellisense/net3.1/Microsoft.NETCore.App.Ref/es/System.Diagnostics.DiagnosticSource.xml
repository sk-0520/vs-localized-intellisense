<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Representa una operación con el contexto que se usará para el registro.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">Nombre de la operación.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtiene las marcas (definidas por la especificación del id. W3C) asociadas a la actividad.</summary>
      <returns>marcas asociadas a la actividad.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para tener un nuevo elemento de equipaje con la clave y el valor especificados.</summary>
      <param name="key">Clave de equipaje.</param>
      <param name="value">Valor de equipaje.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para que tenga una etiqueta nueva con los elementos <paramref name="key" /> y <paramref name="value" /> proporcionados. .</summary>
      <param name="key">Clave de etiqueta.</param>
      <param name="value">Valor de etiqueta.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtiene una colección de pares clave-valor que representa la información que se pasa a los elementos secundarios de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Una enumeración de pares de clave y valor de cadena de cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtiene o establece la operación actual (<see cref="T:System.Diagnostics.Activity" />) del subproceso actual.  Fluye a través de llamadas asincrónicas.</summary>
      <returns>Operación actual para el subproceso actual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtiene o establece el formato del id. predeterminado para el elemento <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtiene la duración de la operación.</summary>
      <returns>La diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización si la <see cref="T:System.Diagnostics.Activity" /> ha finalizado (se ha llamado a<see cref="M:System.Diagnostics.Activity.Stop" /> o <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />), o <see cref="F:System.TimeSpan.Zero" /> si la <see cref="T:System.Diagnostics.Activity" /> no ha finalizado y no se ha llamado a <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtiene o establece un valor que determina si el elemento <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> siempre se utiliza para definir el formato del id. predeterminado.</summary>
      <returns>
        <see langword="true" /> para usar siempre el <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Devuelve el valor de un par clave-valor agregado a la actividad con <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">Clave de equipaje.</param>
      <returns>Valor del elemento de par clave-valor si existe o <see langword="null" /> si no existe.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtiene un identificador específico de una solicitud determinada.</summary>
      <returns>El id. de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtiene el formato para el elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>Formato del <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtiene el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtiene el elemento primario <see cref="T:System.Diagnostics.Activity" /> que ha creado esta actividad.</summary>
      <returns>Elemento primario de este <see cref="T:System.Diagnostics.Activity" />, si procede del mismo proceso, o <see langword="null" /> si esta instancia no tiene ningún elemento primario (es una actividad raíz) o si el elemento primario es de fuera del proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtiene el identificador del elemento primario de esta actividad.</summary>
      <returns>IDENTIFICADOR primario, si existe, o <see langword="null" /> si no lo está.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtiene el elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> del objeto primario.</summary>
      <returns>
        <see cref="P:System.Diagnostics.Activity.SpanId" />del elemento primario.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtiene un valor que indica si se establece la marca W3CIdFlags.Recorded.</summary>
      <returns>
        <see langword="true" /> si se establece la marca W3CIdFlags. Recorded; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtiene el identificador de raíz de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>IDENTIFICADOR raíz o <see langword="null" /> si la instancia actual tiene un <see cref="P:System.Diagnostics.Activity.ParentId" /> o un <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para establecer su elemento <see cref="P:System.Diagnostics.Activity.Duration" /> como la diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización especificada.</summary>
      <param name="endTimeUtc">Hora de finalización UTC.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Establece el formato del identificador de este objeto <see cref="T:System.Diagnostics.Activity" /> antes de que se inicie.</summary>
      <param name="format">Uno de los valores de enumeración que especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Establece el identificador principal mediante la convención W3C de un elemento TraceId y un elemento SpanId.</summary>
      <param name="traceId">Elemento TraceId de la actividad principal.</param>
      <param name="spanId">Elemento SpanId de la actividad principal.</param>
      <param name="activityTraceFlags">Uno de los valores de enumeración que especifica marcas definidas por el estándar W3C asociadas a una actividad.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para indicar que el elemento <see cref="T:System.Diagnostics.Activity" /> con un identificador <paramref name="parentId" /> ha producido <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">Identificador de la operación principal.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Establece la hora de inicio de <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">Hora de inicio <see cref="T:System.Diagnostics.Activity" /> en formato UTC.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtiene la parte del intervalo del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>IDENTIFICADOR de la parte de intervalo de <see cref="P:System.Diagnostics.Activity.Id" />, si el <see cref="T:System.Diagnostics.Activity" /> tiene el formato W3C; de lo contrario, <see langword="SpanId" />cero.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Inicia la actividad.</summary>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtiene la hora a la que se ha iniciado la operación.</summary>
      <returns>La hora UTC en que se inició la operación.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Detiene la actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtiene una colección de pares clave-valor que representa la información que se va a registrar junto con <see cref="T:System.Diagnostics.Activity" /> en el sistema de registro.</summary>
      <returns>Una enumeración de pares de clave-valor de cadena-cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtiene la parte de TraceId del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>IDENTIFICADOR de la parte TraceId del <see cref="P:System.Diagnostics.Activity.Id" />, si el identificador tiene el formato W3C; de lo contrario, es cero TraceId.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtiene el encabezado <see langword="tracestate" /> W3C.</summary>
      <returns>Encabezado W3C <see langword="tracestate" />.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>Formato jerárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Formato desconocido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>Formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Representa un elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> con formato según un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copia los 8 bytes del elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> actual en un intervalo especificado.</summary>
      <param name="destination">El intervalo al que los 8 bytes de SpanID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de ocho bytes.</summary>
      <param name="idData">Intervalo de solo lectura de ocho bytes.</param>
      <returns>Id. del nuevo intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de 16 caracteres hexadecimales.</summary>
      <param name="idData">Intervalo que contiene 16 caracteres hexadecimales.</param>
      <returns>Id. del nuevo intervalo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.
O bien
Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Determina si esta instancia y la instancia <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada tienen el mismo valor.</summary>
      <param name="spanId">La instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="spanId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>la instancia actual y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivitySpanId" />, tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivitySpanId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Devuelve el código hash de SpanId.</summary>
      <returns>El código hash de SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen el mismo valor.</summary>
      <param name="spanId1">Primera instancia que se va a comparar.</param>
      <param name="spandId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es el mismo valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determine si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen valores distintos.</summary>
      <param name="spanId1">Primera instancia que se va a comparar.</param>
      <param name="spandId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es distinto del valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Especifica las marcas definidas por el estándar W3C asociadas a una actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>No se marcó la actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>La actividad (o, lo que es más probable, sus elementos primarios) están marcados como útiles para registrar.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Representa un elemento <see cref="P:System.Diagnostics.Activity.TraceId" /> cuyo formato se basa en un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copia los 16 bytes del elemento <see cref="T:System.Diagnostics.ActivityTraceId" /> actual en un intervalo especificado.</summary>
      <param name="destination">Intervalo en el que los 16 bytes de TraceID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 16 bytes.</summary>
      <param name="idData">Intervalo de solo lectura de 16 bytes.</param>
      <returns>Nuevo id. de seguimiento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 32 caracteres hexadecimales.</summary>
      <param name="idData">Intervalo que contiene 32 caracteres hexadecimales.</param>
      <returns>Nuevo id. de seguimiento.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.
o bien
Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns>Nuevo id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Determina si la instancia actual y un objeto <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado son iguales.</summary>
      <param name="traceId">La instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="traceId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Determina si esta instancia y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivityTraceId" />, tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivityTraceId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Devuelve el código hash del identificador de seguimiento.</summary>
      <returns>El código hash del identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1">Primera instancia que se va a comparar.</param>
      <param name="traceId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es el mismo que el de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1">Primera instancia que se va a comparar.</param>
      <param name="traceId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es distinto al de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 32 caracteres de este identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Devuelve una cadena hexadecimal de 32 caracteres que representa este identificador de seguimiento.</summary>
      <returns>Representación de cadena hexadecimal de 32 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Proporciona una implementación de la clase abstracta <see cref="T:System.Diagnostics.DiagnosticSource" /> que representa una ubicación con nombre a la que un origen envía su información (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Crea un nuevo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">Nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtiene la colección de clientes de escucha de este elemento <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Desecha el elemento NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Determina si hay algún suscriptor registrado.</summary>
      <returns>
        <see langword="true" /> si hay algún suscriptor registrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Comprueba si <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name" />
      <returns>
        <see langword="true" /> si las notificaciones están habilitadas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Comprueba si algún suscriptor de los eventos de diagnóstico está interesado en recibir eventos con este nombre. Los suscriptores indican su interés mediante un delegado proporcionado en <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />.</summary>
      <param name="name">Nombre del evento que se va a comprobar.</param>
      <param name="arg1">Objeto que representa un contexto.</param>
      <param name="arg2">Objeto que representa un contexto.</param>
      <returns>
        <see langword="true" /> si está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtiene el nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca el método OnActivityExport de todos los suscriptores.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca el método OnActivityImport de todos los suscriptores.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Objeto que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Agrega un suscriptor.</summary>
      <param name="observer">Suscriptor.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre y hasta dos objetos de contexto.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra los eventos en función de su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si un filtro de evento no es deseable.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Agrega un suscriptor, opcionalmente filtra los eventos en función de su nombre y hasta dos objetos de contexto, y especifica los métodos a los que se va a llamar cuando los proveedores importen o exporten actividades externas al proceso.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra eventos según su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si no quiere usarse un filtro de evento.</param>
      <param name="onActivityImport">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud entrante.</param>
      <param name="onActivityExport">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud saliente.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra los eventos en función de su nombre (<see cref="T:System.String" />). El delegado debe devolver <see langword="true" /> si el evento está habilitado.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Devuelve una cadena con el nombre de este DiagnosticListener.</summary>
      <returns>Nombre de este DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Registra una notificación.</summary>
      <param name="name">Nombre del evento que se registrará.</param>
      <param name="value">Objeto que representa la carga para el evento.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Clase abstracta que permite instrumentar el código para el registro de tiempo de producción de las cargas de datos enriquecidos para su uso dentro del proceso que se ha instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <returns>
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <param name="arg1">Objeto que representa el contexto adicional de IsEnabled. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro para comprobar si el consumidor quiere obtener notificaciones de estos eventos. En función de esto, el productor puede llamar a IsEnabled(string, object, object) de nuevo con el contexto no <see langword="null" />.</param>
      <param name="arg2">Opcional. Objeto que representa el contexto adicional de IsEnabled. <see langword="null" /> es el valor predeterminado. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro o ha pasado todo el contexto necesario en <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfiere el estado desde una actividad a algún evento u operación, como una solicitud HTTP saliente, que se producirá fuera del proceso.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Un objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfiere el estado a una actividad desde algún evento u operación, como una solicitud entrante, que se produjo fuera del proceso.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Carga útil que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Inicia <see cref="T:System.Diagnostics.Activity" /> y escribe un evento de inicio.</summary>
      <param name="activity">
        <see cref="T:System.Diagnostics.Activity" /> que se va a iniciar.</param>
      <param name="args">Objeto que representa el valor que se va a pasar como una carga para el evento.</param>
      <returns>Actividad iniciada para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Detiene el elemento <see cref="T:System.Diagnostics.Activity" /> dado, mantiene la actividad global <see cref="P:System.Diagnostics.Activity.Current" /> y notifica a los consumidores que <see cref="T:System.Diagnostics.Activity" /> se ha detenido.</summary>
      <param name="activity">Actividad que se va a detener.</param>
      <param name="args">Objeto que representa el valor pasado como una carga para el evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Proporciona una manera genérica de registrar cargas complejas.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <param name="value">Objeto que representa el valor que se va a pasar como una carga para el evento. Suele ser un tipo anónimo que contiene varios subvalores.</param>
    </member>
  </members>
</doc>