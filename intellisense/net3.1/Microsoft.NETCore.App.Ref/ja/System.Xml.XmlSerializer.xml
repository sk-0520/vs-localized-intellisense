<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>XML Web サービスで使用する .NET 型を生成するときに使用する各種のオプションを指定します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>データ バインディングを有効にします。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Web メソッドを非同期呼び出しするイベントを作成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Web メソッドの非同期呼び出し用の Begin メソッドおよび End メソッドを作成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" />、および <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> 属性の <see langword="Order" /> プロパティで明示的に指定されている順序に従いシリアル化コードを生成します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>プロパティでプリミティブ型を表します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>フィールドおよび <see cref="N:System" /> 名前空間型でプリミティブ型を表します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>入力テキストをコード エンティティの名前に変換する静的メソッドを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifier" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>入力文字列から Camel 形式の文字列を作成します。</summary>
      <param name="identifier">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns>Camel 形式に変換されたパラメーター文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>入力文字列から Pascal 形式の文字列を作成します。</summary>
      <param name="identifier">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns>Pascal 形式に変換されたパラメーター文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>入力文字列から有効なコード エンティティを作成します。</summary>
      <param name="identifier">コード エンティティの名前。たとえば、メソッド パラメーターなど。通常は XML 要素名または属性名が使用されます。</param>
      <returns>メソッド パラメーターの名前など、コード識別子として使用できる文字列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>.NET Framework の XML シリアル化インフラストラクチャが生成する、関連するコード エンティティまたは型の関連付け情報の名前のグループを保持します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> クラスの新しいインスタンスを初期化します。そして、コード識別子が大文字と小文字を区別するかどうかを判断します。</summary>
      <param name="caseSensitive">識別子が大文字と小文字を区別する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープに、名前付きのコード エンティティまたは型の対応付け情報を追加します。</summary>
      <param name="identifier">コード エンティティを識別するのに使用する名前。</param>
      <param name="value">コード エンティティまたは型の対応付け情報。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>指定した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用されるのを防ぎます。</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用を許可しない名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>名前付きのコード エンティティまたは型対応付け情報を <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープに追加します。これにより、名前はスコープ内で一意であることが保証されます。</summary>
      <param name="identifier">コード エンティティを識別するのに使用する名前の候補。</param>
      <param name="value">コード エンティティまたは型の対応付け情報。</param>
      <returns>識別子パラメーター値。名前の競合が発生した場合は修正済みの文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープから、すべてのコード エンティティまたは型の対応付け情報、さらにはそれらの名前を削除します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>指定した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で既に使用されているかどうかを判断します。</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用されているかどうかを確認する名前。</param>
      <returns>名前が既に使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>
        <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" /> プロパティの値に従い名前を修正することで、入力した名前で大文字小文字が正しく使用されるようにします。</summary>
      <param name="identifier">修正対象の名前。</param>
      <returns>入力した識別子と同じ文字列、または先頭の文字の大文字小文字が修正された文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>入力した名前が <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内の別の名前と競合していないか判断し、競合している場合は修正済みの文字列を生成します。</summary>
      <param name="identifier">一意でない場合に修正される名前。</param>
      <returns>識別子パラメーター値。名前の競合が発生した場合は修正済みの文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープから、入力した名前で識別されるコード エンティティまたは型の対応付け情報を削除します。</summary>
      <param name="identifier">削除するコード エンティティまたは型の対応付け情報の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスの予約済みの名前から、入力した名前を削除します。</summary>
      <param name="identifier">
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内で使用を許可する名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> インスタンスのスコープ内にある、コード エンティティまたは型の対応付け情報の配列を返します。</summary>
      <param name="type">インスタンス内にあるすべてのコード エンティティの型、または型の対応付け情報。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> オブジェクトに格納されているコード エンティティまたは型の対応付け情報の配列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>インスタンスが Camel 形式を使用するかどうか示す値を取得または設定します。</summary>
      <returns>インスタンスが Camel 形式を使用する場合は <see langword="true" />、インスタンスが Pascal 形式を使用する場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>.NET Framework コード エンティティにスキーマ セットがバインドされるコンテキストを示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>指定したコード識別子の <see cref="T:System.Xml.Serialization.ImportContext" /> クラスの新しいインスタンスを、指定した型共有オプションを使用して初期化します。</summary>
      <param name="identifiers">コンテキストが適用されるコード エンティティ。</param>
      <param name="shareTypes">カスタム型がスキーマ間で共有されているかどうかを示す <see cref="T:System.Boolean" /> 値。</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>カスタム型が共有されているかどうか示す値を取得します。</summary>
      <returns>カスタム型がスキーマ間で共有されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>コンテキストが適用されるコード エンティティのセットを取得します。</summary>
      <returns>コンテキストが適用されるコード エンティティを示す <see cref="T:System.Xml.Serialization.CodeIdentifiers" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>記述したコード エンティティをインポートする際に生成される警告のコレクションを取得します。</summary>
      <returns>記述したコード エンティティをインポートした際に生成された警告を含む <see cref="T:System.Collections.Specialized.StringCollection" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>.NET Framework インフラストラクチャが使用する <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> プロパティを確立します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>空白および属性値が正規化されているかどうか示す値を取得または設定します。</summary>
      <returns>空白および属性値が正規化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>XML 解析時の空白の処理方法を取得または設定します。</summary>
      <returns>XML 解析時の空白の処理方法を示す <see cref="T:System.Xml.WhitespaceHandling" /> 列挙値のメンバー。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>スキーマ インポーターを示します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス メンバーをエンコード済みの SOAP 属性としてシリアル化する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>XML 属性の名前とする値を指定して、<see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeName">XML 属性の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 属性の名前を取得または設定します。</summary>
      <returns>XML 属性の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された SOAP 属性の XML スキーマ定義言語 (XSD) データ型を取得または設定します。</summary>
      <returns>XML スキーマデータ型。</returns>
      <exception cref="T:System.Exception">指定した XML スキーマ データ型を .NET データ型に割り当てることはできません。</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>XML 属性の XML 名前空間を取得または設定します。</summary>
      <returns>XML 属性の XML 名前空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> を使用してオブジェクトをエンコード済みの SOAP としてシリアル化または逆シリアル化するときに、プロパティ、フィールド、クラスに適用される属性をオーバーライドできるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> に格納されている <see cref="T:System.Xml.Serialization.SoapAttributes" /> オブジェクトのコレクションに <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> を追加します。 <paramref name="type" /> パラメーターには、この <see cref="T:System.Xml.Serialization.SoapAttributes" /> によってオーバーライドされるオブジェクトを指定します。 <paramref name="member" /> パラメーターは、オーバーライドされるメンバーの名前を指定します。</summary>
      <param name="type">オーバーライドするオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="member">オーバーライドするメンバーの名前。</param>
      <param name="attributes">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> を <see cref="T:System.Xml.Serialization.SoapAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターには、この <see cref="T:System.Xml.Serialization.SoapAttributes" /> によってオーバーライドされるオブジェクトを指定します。</summary>
      <param name="type">オーバーライドされるオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="attributes">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>指定された型 (基本クラス) に関連付けられているオブジェクトを取得します。</summary>
      <param name="type">取得する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <returns>オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>指定された型 (基本クラス) に関連付けられているオブジェクトを取得します。 <paramref name="member" /> パラメーターには、オーバーライドされる基本クラス メンバーを指定します。</summary>
      <param name="type">オーバーライドする対象の属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <param name="member">返す <see cref="T:System.Xml.Serialization.SoapAttributes" /> を指定する、オーバーライドされたメンバーの名前。</param>
      <returns>オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が SOAP メソッドをシリアル化および逆シリアル化する方法を制御する属性オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>指定されたカスタム型を使用して、<see cref="T:System.Xml.Serialization.SoapAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> インターフェイスを実装する <see cref="T:System.Type" /> クラスなどのオブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>オーバーライドする <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> を取得または設定します。</summary>
      <returns>メンバーをシリアル化するときの <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> の動作をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>XML 要素または XML 属性の既定値を取得または設定します。</summary>
      <returns>XML 要素または XML 属性の既定値を表すオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>オーバーライドする <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> を取得または設定します。</summary>
      <returns>オーバーライドする <see cref="T:System.Xml.Serialization.SoapElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が SOAP 列挙体をシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を指定するオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、パブリック フィールドまたはパブリック プロパティをエンコード済みの SOAP XML としてシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がそのフィールドまたはプロパティをシリアル化しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>オブジェクト型をエンコード済みの SOAP XML にシリアル化する方法を <see cref="T:System.Xml.Serialization.XmlSerializer" /> に指示するオブジェクトを取得または設定します。</summary>
      <returns>クラス宣言に適用された <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> をオーバーライドするか、クラス宣言に適用されているか、いずれかの <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック メンバーの値をエンコード済みの SOAP XML 要素としてシリアル化することを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>XML 要素の名前を指定して、<see cref="T:System.Xml.Serialization.SoapElementAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="elementName">シリアル化されたメンバーの XML 要素名。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>生成された XML 要素の XML スキーマ定義言語 (XSD: XML Schema Definition Language) データ型を取得または設定します。</summary>
      <returns>XML スキーマ データ型の 1 つ。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>生成された XML 要素の名前を取得または設定します。</summary>
      <returns>生成された XML 要素の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、<see langword="xsi:null" /> 属性が "1" に設定されているメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:null" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>要素名を指定して、<see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成される XML 要素名。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体をシリアル化する場合は XML ドキュメントに生成された値を、列挙体メンバーを逆シリアル化する場合には認識した値を、取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体をシリアル化する場合は XML ドキュメントに生成された値。列挙体メンバーを逆シリアル化する場合は認識した値。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> に対して、パブリック フィールドまたはパブリックな読み書き可能プロパティの値をシリアル化しないように指示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをエンコード済みの SOAP XML としてシリアル化または逆シリアル化するときに、型を認識できるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>指定された型を使用して、<see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">含めるオブジェクトの型。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>オブジェクトをシリアル化または逆シリアル化するときに使用するオブジェクトの型を取得または設定します。</summary>
      <returns>含めるオブジェクトの型。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>.NET Framework 型、または Web サービス メソッド情報から、SOAP エンコード済みメッセージへの対応付けを生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>インポートされる型の対応付けに使用する既定の XML 名前空間を指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultNamespace">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>XML シリアル化のオーバーライドを指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスは、SOAP エンコーディングを使用して、対応付けされた型のシリアル化を行いますが、その方法をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>XML シリアル化のオーバーライドと既定の XML 名前空間を指定して、<see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> クラスは、SOAP エンコーディングを使用して、対応付けされた型のシリアル化を行いますが、その方法をオーバーライドする <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクト。</param>
      <param name="defaultNamespace">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <param name="validate">生成されるデシリアライザーでラッパー要素の予期される修飾名をチェックする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <paramref name="hasWrapperElement" /> パラメーターに <see langword="true" /> 値を指定する場合に限り、このパラメーターは使用できます。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Web サービス メソッドから収集した情報の内部型対応付けを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティの配列。</param>
      <param name="hasWrapperElement">WSDL メッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="writeAccessors">RPC 形式の Web サービス バインディングを使用する場合は <see langword="true" />、ドキュメント形式の Web サービス バインディングまたは SOAP ヘッダーを使用する場合は <see langword="false" />。</param>
      <param name="validate">生成されるデシリアライザーでラッパー要素の予期される修飾名をチェックする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 <paramref name="hasWrapperElement" /> パラメーターに <see langword="true" /> 値を指定する場合に限り、このパラメーターは使用できます。</param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 値のいずれか。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する内部 .NET Framework 型の対応付け。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>.NET Framework 型の XML スキーマ要素に対する対応付けを生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <returns>.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>.NET Framework 型の XML スキーマ要素に対する対応付けを生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="defaultNamespace">使用する既定の XML 名前空間。</param>
      <returns>.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> インスタンスのコンテキストで、型の対応付けを実行します。この対応付け情報は、インポート メソッドを呼び出す場合など後で使用します。</summary>
      <param name="type">型の対応付け情報を保存する .NET Framework 型。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> インスタンスのコンテキストで、派生型の対応付けを実行します。この対応付け情報は、インポート メソッドを呼び出す場合など後で使用します。</summary>
      <param name="provider">
        <see cref="T:System.Reflection.ICustomAttributeProvider" /> 属性から派生したカスタム属性を格納する <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> リフレクション オブジェクト。</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>WSDL ドキュメントからクラスを生成するために、WSDL ドキュメントの XSD &lt;<see langword="part" />&gt; 要素の特定の属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>WSDL の part 要素の name 属性に対応する値を取得または設定します。</summary>
      <returns>要素名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>WSDL の part 要素の type 属性に対応する値を取得または設定します。</summary>
      <returns>XML 型に対応する <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>SOAP エンコード済みの XML としてクラス インスタンスがシリアル化されるときに、<see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成されるスキーマを制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> クラスの新しいインスタンスを初期化し、型の名前および型の XML 名前空間を指定します。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
      <param name="ns">型の XML 名前空間。</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>SOAP エンコード済みの XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>SOAP エンコード済みの XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>XML 型の名前空間を取得または設定します。</summary>
      <returns>XML 型の名前空間。 既定値は、空の文字列 ("") です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>XML 型の名前を取得または設定します。</summary>
      <returns>XML 型の名前。 既定値は、クラス名です。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>エンコード済みの SOAP XML ストリームで逆シリアル化時に見つかった、既知ではあっても未参照のオブジェクトに対してデータを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o">未参照のオブジェクト。</param>
      <param name="id">参照されないオブジェクトを識別するために使用される一意の文字列。</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>オブジェクトの ID を取得します。</summary>
      <returns>オブジェクトの ID。</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>逆シリアル化された、未参照のオブジェクトを取得します。</summary>
      <returns>逆シリアル化された、未参照のオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute">追加する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>新しく追加された <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> がコレクション内に存在するかどうかを示す値を取得します。</summary>
      <param name="attribute">コレクション内に存在するかどうかを確認する対象の <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> がコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>コピー先配列の指定されたインデックスを開始位置として、コレクション全体を、<see cref="T:System.Xml.Serialization.XmlElementAttribute" /> オブジェクトの互換性がある 1 次元配列にコピーします。</summary>
      <param name="array">コレクションからコピーされる要素のコピー先である <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> オブジェクトの 1 次元配列。 配列には、0 から始まるインデックスが設定されている必要があります。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックスを取得します。</summary>
      <param name="attribute">インデックスを取得する対象の <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
      <returns>指定した <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクション内の指定のインデックス位置に挿入します。</summary>
      <param name="index">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> の挿入位置を示すインデックス。</param>
      <param name="attribute">挿入する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>指定したインデックス位置にある <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> を取得または設定します。</summary>
      <param name="index">
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> のインデックス。</param>
      <returns>指定したインデックス位置にある <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>指定された <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> をコレクションから削除します。</summary>
      <param name="attribute">削除する <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が特定のクラス メンバーを XML 要素の配列としてシリアル化する必要があることを指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメント インスタンスに生成される XML 要素名を指定します。</summary>
      <param name="elementName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が生成する XML 要素の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>シリアル化された配列に与えられた、XML 要素の名前を取得または設定します。</summary>
      <returns>シリアル化された配列の XML 要素名。 既定値は、<see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> が割り当てられたメンバーの名前です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。 既定値は、<see langword="XmlSchemaForm.None" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>XML 要素の名前空間を取得または設定します。</summary>
      <returns>XML 要素の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>要素のシリアル化または逆シリアル化を行う明示的な順序を取得または設定します。</summary>
      <returns>コード生成の順序。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化された配列で配置できる派生型を指定する属性を表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前を指定します。</summary>
      <param name="elementName">XML 要素の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、XML ドキュメントで生成される XML 要素の名前、および生成される XML ドキュメントに挿入できる <see cref="T:System.Type" /> を指定します。</summary>
      <param name="elementName">XML 要素の名前。</param>
      <param name="type">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> クラスの新しいインスタンスを初期化し、シリアル化される配列に挿入できる <see cref="T:System.Type" /> を指定します。</summary>
      <param name="type">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>生成された XML 要素の XML データ型を取得または設定します。</summary>
      <returns>XML スキーマ定義 (XSD) データ型。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>生成された XML 要素の名前を取得または設定します。</summary>
      <returns>生成された XML 要素の名前。 既定値はメンバー識別子です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>生成された XML 要素名が修飾されているかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaForm" /> 値のいずれか 1 つ。 既定値は、<see langword="XmlSchemaForm.None" /> です。</returns>
      <exception cref="T:System.Exception">
        <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> プロパティが <see langword="XmlSchemaForm.Unqualified" /> に設定され、<see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> 値が指定されています。</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> で、<see langword="xsi:nil" /> 属性が <see langword="true" /> に設定された空の XML タグとしてメンバーをシリアル化する必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が <see langword="true" /> 属性を生成する場合は <see langword="xsi:nil" />。それ以外の場合は <see langword="false" /> で、インスタンスは作成されません。 既定値は、<see langword="true" /> です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>生成された XML 要素の名前空間を取得または設定します。</summary>
      <returns>生成された XML 要素の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が影響を与える XML 要素の階層構造のレベルを取得または設定します。</summary>
      <returns>複数の配列内の 1 つの配列のインデックスのセットの 0 から始まるインデックス番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>配列内で使用できる型を取得または設定します。</summary>
      <returns>配列内で使用できる <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute">コレクションに追加する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>追加された項目のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> がコレクションに含まれているかどうかを判断します。</summary>
      <param name="attribute">確認する対象の <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> がコレクションに含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>コピー先の指定したインデックスを開始位置として、<see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> 配列をコレクションにコピーします。</summary>
      <param name="array">コレクションにコピーする <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクトの配列。</param>
      <param name="index">コピーされた属性の開始位置のインデックス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>コレクション内で指定した <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が最初に見つかった位置の 0 から始まるインデックスを返します。属性がコレクション内で見つからなかった場合は -1 を返します。</summary>
      <param name="attribute">コレクション内で検索する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
      <returns>コレクション内の <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> の最初のインデックス。コレクション内に属性が存在しない場合は -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> をコレクション内の指定のインデックス位置に挿入します。</summary>
      <param name="index">属性が挿入される位置のインデックス。</param>
      <param name="attribute">挿入する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>指定したインデックス位置にある項目を取得または設定します。</summary>
      <param name="index">取得または設定するコレクション メンバーの 0 から始まるインデックス。</param>
      <returns>指定されたインデックス位置にある <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>コレクションに <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> が存在する場合は削除します。</summary>
      <param name="attribute">削除する <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>不明な XML 属性を表すオブジェクトを取得します。</summary>
      <returns>不明な XML 属性を表す <see cref="T:System.Xml.XmlAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>XML ドキュメントのインスタンスに出現する可能性のある XML 属性名をコンマで区切ったリストとして取得します。</summary>
      <returns>XML 属性名をコンマで区切ったリスト。 各名前には <paramref name="namespace" />:<paramref name="name" /> の形式が使用されます。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>不明 XML 属性の行番号を取得します。</summary>
      <returns>不明 XML 属性の行番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>不明 XML 属性の行内の位置を取得します。</summary>
      <returns>不明 XML 属性の位置番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>逆シリアル化されているオブジェクトを取得します。</summary>
      <returns>逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> を処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>オブジェクトをシリアル化または逆シリアル化するために <see cref="T:System.Xml.Serialization.XmlSerializer" /> を使用するときに、プロパティ、フィールド、クラスの各属性をユーザーがオーバーライドできるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトを <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターは、オーバーライドされるオブジェクトを指定します。 <paramref name="member" /> パラメーターは、オーバーライドされるメンバーの名前を指定します。</summary>
      <param name="type">オーバーライドするオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="member">オーバーライドするメンバーの名前。</param>
      <param name="attributes">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトを <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトのコレクションに追加します。 <paramref name="type" /> パラメーターは、<see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクトによってオーバーライドされるオブジェクトを指定します。</summary>
      <param name="type">オーバーライドされるオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="attributes">オーバーライドする側の属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>指定された (基本クラス) 型に関連付けられたオブジェクトを取得します。</summary>
      <param name="type">取得する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <returns>オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>指定された (基本クラス) 型に関連付けられたオブジェクトを取得します。 メンバー パラメーターは、オーバーライドされた基本クラス メンバーを指定します。</summary>
      <param name="type">使用する属性のコレクションに関連付けられている基本クラスの <see cref="T:System.Type" />。</param>
      <param name="member">返す <see cref="T:System.Xml.Serialization.XmlAttributes" /> を指定する、オーバーライドされたメンバーの名前。</param>
      <returns>オーバーライドする側の属性のコレクションを表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法を制御する属性オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlAttributes" /> クラスの新しいインスタンスを初期化し、<see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化および逆シリアル化する方法をカスタマイズします。</summary>
      <param name="provider">XML のシリアル化を制御する属性の代替実装を提供できるクラス。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> を取得または設定します。</summary>
      <returns>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>オーバーライドする <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> オブジェクトのコレクションを表す <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、配列を返すパブリック フィールドまたは読み取り/書き込みプロパティをシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
      <returns>配列を返すパブリック フィールドまたは読み取り/書き込みプロパティを <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> でシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>パブリック フィールドまたは読み取り/書き込みプロパティによって返された配列に挿入されている項目を <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化する方法を指定するオブジェクトのコレクションを取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> オブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、パブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を指定するオブジェクトを取得または設定します。</summary>
      <returns>パブリック フィールドまたは読み取り/書き込みプロパティを XML 属性としてシリアル化する方法を制御する <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>複数の選択肢を区別できるようにするオブジェクトを取得または設定します。</summary>
      <returns>
        <see langword="xsi:choice" /> 要素としてシリアル化されているクラス メンバーに適用できる <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>XML 要素または XML 属性の既定値を取得または設定します。</summary>
      <returns>XML 要素または XML 属性の既定値を表す <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み取り/書き込みプロパティを XML 要素としてシリアル化する方法を指定する、オブジェクトのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> オブジェクトのコレクションを格納している <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が列挙体メンバーをシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> が列挙体メンバーをシリアル化する方法を指定する <see cref="T:System.Xml.Serialization.XmlSerializer" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がパブリック フィールドまたは読み書き可能なパブリック プロパティをシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がそのフィールドまたはプロパティをシリアル化しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> オブジェクトを返すメンバーを格納するオブジェクトがオーバーライドされたときに、すべての名前空間宣言を保持するかどうかを示す値を取得または設定します。</summary>
      <returns>名前空間宣言を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラスを XML ルート要素としてシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns>XML ルート要素として属性が設定されているクラスをオーバーライドする <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> に対してパブリック フィールドまたはパブリックな読み取り/書き込みプロパティを XML テキストとしてシリアル化するよう指示するオブジェクトを取得または設定します。</summary>
      <returns>パブリック プロパティまたはフィールドの既定のシリアル化をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTextAttribute" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が適用されているクラスを <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> がシリアル化する方法を指定するオブジェクトを取得または指定します。</summary>
      <returns>クラス宣言に適用された <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> をオーバーライドする <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>列挙体を使用してメンバーをさらに検出できるように指定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">メンバーを検出するために使用される列挙体を返すメンバー名。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>型を検出するときに使用される列挙体を返すフィールドの名前を取得または設定します。</summary>
      <returns>列挙体を返すフィールドの名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>
        <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> のスレッド セーフな <see cref="T:System.Xml.Serialization.XmlSerializer" /> メソッドにイベント デリゲートを渡すために使用できるフィールドを含みます。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlElementEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> イベントを処理するメソッドを表すオブジェクトを取得または設定します。</summary>
      <returns>イベント ハンドラーをポイントする <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> がクラスをシリアル化する既定の方法をオーバーライドするために使用する、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> をコレクションに追加します。</summary>
      <param name="attribute">追加する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>新しく追加された項目の 0 から始まるインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>指定したオブジェクトがコレクションに格納されているかどうかを確認します。</summary>
      <param name="attribute">検索対象の <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>オブジェクトがコレクション内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> またはその一部を 1 次元配列にコピーします。</summary>
      <param name="array">コピーされた要素を保つための <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> アレー。</param>
      <param name="index">コピーの開始位置とする <paramref name="array" /> のインデックス (0 から始まる)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>指定した <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> のインデックスを取得します。</summary>
      <param name="attribute">インデックスを取得する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> の 0 から始まるインデックス番号。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>コレクションに <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> を挿入します。</summary>
      <param name="index">メンバーが挿入される 0 から始まるインデックス。</param>
      <param name="attribute">挿入する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>指定したインデックスにある要素を取得または設定します。</summary>
      <param name="index">取得または設定する要素の、0 から始まるインデックス番号。</param>
      <returns>指定したインデックス位置にある要素。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> が <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> の有効なインデックスではありません。</exception>
      <exception cref="T:System.NotSupportedException">このプロパティが設定されていますが、<see cref="T:System.Xml.Serialization.XmlElementAttributes" /> が読み取り専用です。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>指定されたオブジェクトをコレクションから削除します。</summary>
      <param name="attribute">コレクションから削除する <see cref="T:System.Xml.Serialization.XmlElementAttribute" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>不明な XML 要素を表すオブジェクトを取得します。</summary>
      <returns>不明な XML 要素を表すオブジェクト。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>XML ドキュメントのインスタンスに出現する可能性のある XML 要素名をコンマで区切ったリストとして取得します。</summary>
      <returns>XML 要素名をコンマで区切ったリスト。 各名前には <paramref name="namespace" />:<paramref name="name" /> の形式が使用されます。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった場所の行番号を取得します。</summary>
      <returns>XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった場所の行番号。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった行内の位置を取得します。</summary>
      <returns>XML リーダーが <see cref="T:System.Xml.XmlTextReader" /> の場合に、不明な要素が見つかった行内の番号。それ以外の場合は -1。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が逆シリアル化しているオブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> によって逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlElementEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がオブジェクトをシリアル化または逆シリアル化するときに、型を認識できるようにします。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">含めるオブジェクトの <see cref="T:System.Type" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>含めるオブジェクトの型を取得または設定します。</summary>
      <returns>含めるオブジェクトの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>.NET Framework 型と XML スキーマ データ型間の対応付けをサポートします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>マップされる要素の名前を取得します。</summary>
      <returns>マップされる要素の名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>マップされる要素の名前空間を取得します。</summary>
      <returns>マップされる要素の名前空間。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>マッピングの検索に使用するキーを設定します。</summary>
      <param name="key">検索キー。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>マッピングの XSD 要素の名前を取得します。</summary>
      <returns>XSD 要素の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>マッピングについて、読み取り、書き込み、その両方のいずれにするかを指定します。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>書き込みメソッドと読み込みメソッドの両方が生成されます。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>読み込みメソッドが生成されます。</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>書き込みメソッドが生成されます。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>.NET Framework の Web サービス メソッドのコード エンティティを、Web サービス記述言語 (WSDL: Web Services Description Language) メッセージの要素にマップします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>.NET Framework 型が、任意の型の XML 要素または属性にマップされているかどうかを示す値を取得または設定します。</summary>
      <returns>型が XML の任意の要素または属性にマップされている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>.NET Framework 型の付属フィールドに値が指定されているかどうかを示す値を取得します。</summary>
      <returns>付属フィールドに値が指定されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>このマッピングに適用される XML 要素宣言の修飾なしの名前を取得します。</summary>
      <returns>このマッピングに適用される XML 要素宣言の修飾なしの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>このマッピングが表す Web サービス メソッド メンバーの名前を取得します。</summary>
      <returns>このマッピングが表す Web サービス メソッド メンバーの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>このマッピングに適用される XML 名前空間を取得します。</summary>
      <returns>このマッピングに適用される XML 名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>このマッピングの .NET Framework 型の完全修飾型名を取得します。</summary>
      <returns>このマッピングの .NET Framework 型の完全修飾型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>このマッピングの .NET Framework 型の型名を取得します。</summary>
      <returns>このマッピングの .NET Framework 型の型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>このマッピングの .NET Framework 型の名前空間を取得します。</summary>
      <returns>このマッピングの .NET Framework 型の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>サービスの説明ドキュメントに記載される XML 要素名を取得します。</summary>
      <returns>XML 要素の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>.NET Framework Web サービス メソッドと、SOAP Web サービスに対して定義されている Web サービス記述言語 (WSDL: Web Services Description Language) メッセージとのマッピングを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>SOAP メッセージがマップされる Web サービス メソッドに属する .NET Framework コード エンティティの数を取得します。</summary>
      <returns>コレクション内のマッピングの数。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>SOAP メッセージにマップされる Web サービス メソッドに属する .NET Framework コード エンティティの、内部型マッピング情報を含む項目を取得します。</summary>
      <param name="index">返される対応付けのインデックス。</param>
      <returns>要求された <see cref="T:System.Xml.Serialization.XmlMemberMapping" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>SOAP メッセージを表す XML スキーマ要素のデータ型にマップされる .NET Framework 型の名前を取得します。</summary>
      <returns>.NET Framework 型の名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>SOAP メッセージを表す XML スキーマ要素のデータ型にマップされる .NET Framework 型の名前空間を取得します。</summary>
      <returns>マップされる .NET Framework の名前空間。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> イベントのデータを提供します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>不明な XML ノードの行番号を取得します。</summary>
      <returns>不明な XML ノードの行番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>不明な XML ノードが見つかった行内の位置を取得します。</summary>
      <returns>不明な XML ノードの位置番号。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>逆シリアル化されている XML ノードの XML ローカル名を取得します。</summary>
      <returns>逆シリアル化されている XML ノードの XML ローカル名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>逆シリアル化されている XML ノードの名前を取得します。</summary>
      <returns>逆シリアル化されているノードの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>逆シリアル化されている XML ノードに関連付けられている名前空間 URI を取得します。</summary>
      <returns>逆シリアル化されている XML ノードに関連付けられている名前空間 URI。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>逆シリアル化されている XML ノードの型を取得します。</summary>
      <returns>逆シリアル化されている XML ノードを表す <see cref="T:System.Xml.XmlNodeType" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>逆シリアル化されているオブジェクトを取得します。</summary>
      <returns>逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>逆シリアル化されている XML ノードのテキストを取得します。</summary>
      <returns>逆シリアル化されている XML ノードのテキスト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> の <see cref="T:System.Xml.Serialization.XmlSerializer" /> イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベント データを格納している <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" />。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>XML スキーマ要素宣言 (Web サービス記述言語 (WSDL: Web Services Description Language) ドキュメント内のリテラル XML スキーマ定義 (XSD: XML Schema Definition) のメッセージ部分など) と、対応する .NET Framework 型または Web サービス メソッドの対応付け情報を生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>指定した既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="defaultNamespace">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>指定した XML シリアル化オーバーライドを使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>指定した XML シリアル化オーバーライドと既定の XML 名前空間を使用して、<see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="attributeOverrides">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる対応付けされた型のシリアル化をオーバーライドするオブジェクト。</param>
      <param name="defaultNamespace">インポートされる型の対応付け情報に使用する既定の XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>WSDL メッセージ定義の要素部分に対するマッピングを持つ <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Web サービス メソッドからの情報を使用して、内部的な型対応付け情報を返します。またこのメソッドでは、XML 要素名、XML 名前空間、および他のオプションを指定できます。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="openModel">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Web サービス メソッドからの情報を使用して、内部型マッピングを生成します。</summary>
      <param name="elementName">Web サービス メソッドが作成する XML 要素の名前。</param>
      <param name="ns">Web サービス メソッドが作成する XML 要素の名前空間。</param>
      <param name="members">Web サービス メソッドに属する .NET Framework コード エンティティを含む <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> オブジェクトの配列。</param>
      <param name="hasWrapperElement">Web サービス記述言語 (WSDL) のメッセージ部分に対応する要素を、SOAP メッセージの追加ラッパー要素で囲む必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="rpc">メソッドがリモート プロシージャ コールの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="openModel">生成されるスキーマ型を <see langword="&lt;xs:anyAttribute&gt;" /> 要素でマークする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="access">
        <see cref="T:System.Xml.Serialization.XmlMappingAccess" /> 値のいずれか 1 つ。 既定値は、<see langword="None" /> です。</param>
      <returns>マッピングを格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>指定した .NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <returns>.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>指定した型と名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="defaultNamespace">使用する既定の XML 名前空間。</param>
      <returns>.NET Framework 型と XML スキーマ要素の内部的な対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>指定した型と属性を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="root">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</param>
      <returns>.NET Framework 型と XML スキーマ要素の対応付けを表す <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>指定した型、属性、および名前空間を使用して、.NET Framework 型と対応する XML スキーマ要素の対応付け情報を生成します。</summary>
      <param name="type">.NET Framework 型。この型の対応付け情報が生成されます。</param>
      <param name="root">型に適用する <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> 属性。</param>
      <param name="defaultNamespace">使用する既定の XML 名前空間。</param>
      <returns>.NET Framework 型と XML スキーマ要素の内部的な対応付けを格納した <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>後でインポート メソッドを呼び出すときに使用する型のマッピングを格納します。</summary>
      <param name="type">型の対応付け情報を保存する .NET Framework 型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>後でインポート メソッドを呼び出すときに使用する派生型のマッピングを格納します。</summary>
      <param name="provider">
        <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" /> 属性から派生したカスタム属性を格納する <see cref="T:System.Reflection.ICustomAttributeProvider" /> クラスのインスタンス。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>.NET Framework Web サービス メソッドのコード エンティティと、SOAP Web サービスに対して定義されている Web サービス記述言語 (WSDL: Web Services Description Language) メッセージの内容との対応付けを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>出力パラメーターと対照をなす Web サービス メソッドの戻り値を、<see cref="T:System.Xml.Serialization.XmlReflectionMember" /> が表すかどうか示す値を取得または設定します。</summary>
      <returns>メンバーが Web サービスの戻り値を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>このマッピングが示す Web サービス メソッド メンバーの名前を取得または設定します。</summary>
      <returns>Web サービス メソッドの名前。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>このマッピングが表す Web サービス メソッド メンバーのコード エンティティの型を取得または設定します。</summary>
      <returns>このマッピングが表す Web サービス メソッド メンバーのコード エンティティの <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>対応する XML 要素定義の <c>isNullable</c> 属性の値が <see langword="false" /> かどうかを示す値を取得または設定します。</summary>
      <returns>
        <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> プロパティがオーバーライドされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>メンバーのコード エンティティに適用された SOAP 関連の属性のコレクションを持つ <see cref="T:System.Xml.Serialization.SoapAttributes" /> を取得または設定します。</summary>
      <returns>メンバーに適用された SOAP 属性を表すオブジェクトを格納した <see cref="T:System.Xml.Serialization.SoapAttributes" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>メンバーのコード エンティティに適用された <see cref="T:System.Xml.Serialization.XmlAttributes" /> 関連の属性のコレクションを持つ <see cref="T:System.Xml.Serialization.XmlSerializer" /> を取得または設定します。</summary>
      <returns>メンバー コードに適用された XML 属性を表す <see cref="T:System.Xml.Serialization.XmlAttributes" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクションに対する反復処理に使用します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="list">反復対象の <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>コレクション内の現在の要素を取得します。</summary>
      <returns>コレクション内の現在の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" /> によって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>列挙子をコレクション内の次の項目に進めます。</summary>
      <returns>移動が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション内の現在の要素を取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション内の現在の要素。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>列挙子を初期位置、つまり <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクションの最初の要素の前に設定します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに、型マップ オブジェクト内にある XML スキーマ要素宣言を設定します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas">型マップから取得した要素宣言の追加先となる <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>指定した名前空間によって識別される <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに &lt;any&gt; 要素をエクスポートします。</summary>
      <param name="ns">&lt;any&gt; 要素を追加する XML スキーマ ドキュメントの名前空間。</param>
      <returns>&lt;any&gt; 要素の宣言に割り当てる任意の名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>オブジェクトまたは型の要素宣言を、SOAP メッセージまたは <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="members">エクスポートするマップを含む <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</param>
      <returns>文字列 "any" と 1 つの整数。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>リテラル SOAP メッセージ定義の各要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> に追加します。</summary>
      <param name="xmlMembersMapping">Web サービス記述言語 (WSDL: Web Services Description Language) のメッセージ定義の要素部分に対応する内部 .NET Framework 型の割り当て。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>リテラル SOAP メッセージ定義の各要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> に追加します。そしてスキーマを囲む要素を含めるかどうか指定します。</summary>
      <param name="xmlMembersMapping">.NET Framework 型と XML スキーマ要素の間の内部マップ。</param>
      <param name="exportEnclosingType">スキーマを囲むスキーマ要素を含める場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>リテラル SOAP メッセージ定義の 1 つの要素部分の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="xmlMembersMapping">Web サービス記述言語 (WSDL) のメッセージ定義の要素部分に対応する内部 .NET Framework 型の割り当て。</param>
      <returns>エクスポートする要素宣言の修飾 XML 名を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>.NET Framework 型の要素宣言を、適用可能な <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトに追加します。</summary>
      <param name="xmlTypeMapping">.NET Framework 型と XML スキーマ要素の間の内部マップ。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>WSDL ドキュメントのリテラル XSD メッセージ部分などの XML スキーマ要素宣言に対応する、.NET Framework 型の内部対応付け情報を生成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>XML スキーマを表す <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> オブジェクトのコレクションを受け取って、<see cref="T:System.Xml.Schema.XmlSchema" /> クラスの新しいインスタンスを初期化します。この XML スキーマは、WSDL ドキュメントで定義されている SOAP リテラル メッセージによって使用されます。</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトのコレクション。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>SOAP リテラル メッセージによって使用される XML スキーマを表す <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> オブジェクトのコレクションと、Web サービス記述言語 (WSDL) ドキュメントで定義されているバインディング用に生成されるクラスを受け取って、<see cref="T:System.Xml.Schema.XmlSchema" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
      <param name="typeIdentifiers">WSDL ドキュメントで定義されているバインディング用に生成されるクラスのコレクションを指定する <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>WSDL ドキュメントで定義されている単一の (SOAP) リテラル要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName">要素の型の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。この要素の型に対応する .NET Framework 型が生成されます。</param>
      <param name="elementName">WSDL ドキュメントの部分要素の名前。</param>
      <returns>WSDL メッセージ定義の単一の要素部分に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType">XSD 要素の型に対応するよう生成される .NET Framework 型の基本型。</param>
      <returns>XML スキーマ要素に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>XML スキーマ ドキュメントで定義されている要素、または WSDL ドキュメントの部分要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType">XSD 要素の型に対応するよう生成される .NET Framework 型の基本型。</param>
      <param name="baseTypeCanBeIndirect">XSD 要素に対応する型が基本型を間接的に継承できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>XML スキーマ要素に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name">対応付け情報を生成する要素の名前。</param>
      <param name="ns">対応付け情報を生成する要素の名前空間。</param>
      <param name="members">対応付け情報を生成する要素のメンバーを指定する <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> インスタンスの配列。</param>
      <returns>型の対応付け情報を格納する <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの単一要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>単一の要素部分を含む WSDL メッセージ定義に対応する、.NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="names">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" /> 型の配列。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する .NET Framework 型の対応付け情報を表す <see cref="T:System.Xml.Serialization.XmlMembersMapping" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>WSDL ドキュメントで定義されている、リテラル使用の SOAP メッセージの要素部分についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="names">メッセージ部分の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" /> 型の配列。</param>
      <param name="baseType">メッセージ部分に対応するように生成されるすべての .NET Framework 型の基本型。</param>
      <param name="baseTypeCanBeIndirect">メッセージ部分に対応する型が基本型を間接的に継承できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>WSDL メッセージ定義の要素部分に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType">基本型を指定する <see cref="T:System.Type" /> オブジェクト。</param>
      <returns>型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="typeName">XML 要素を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="baseType">基本型を指定する <see cref="T:System.Type" /> オブジェクト。</param>
      <param name="baseTypeCanBeIndirect">生成される型が <paramref name="baseType" /> を間接的に継承できるようにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</param>
      <returns>型の対応付け情報を示す <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>XML スキーマ ドキュメントで定義されている要素についての、内部的な型の対応付け情報を生成します。</summary>
      <param name="name">XML スキーマ ドキュメントで定義されている要素の名前を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>XML スキーマ要素に対応する .NET Framework 型の対応付け情報。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>XML スキーマのコレクションを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>コレクションの末尾にオブジェクトを追加します。</summary>
      <param name="schema">オブジェクトのコレクションに追加する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> が追加される位置のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>アセンブリの参照を表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトをコレクションに追加します。</summary>
      <param name="schema">追加する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <param name="baseUri">スキーマ オブジェクトの <see cref="T:System.Uri" />。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchema" /> が追加される位置のインデックス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>コレクションの末尾に <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスのインスタンスを追加します。</summary>
      <param name="schemas">コレクションの末尾に追加する <see cref="T:System.Xml.Serialization.XmlSchemas" /> オブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>アセンブリの参照を表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトをコレクションに追加します。</summary>
      <param name="schema">追加する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>XML スキーマ内の要素名と属性名を処理します。オプションで、XML スキーマを検証することもできます。</summary>
      <param name="handler">fullCompile パラメーターが <see langword="true" /> に設定されている場合、XML スキーマの検証中にエラーおよび警告を処理するコールバック メソッドを指定する <see cref="T:System.Xml.Schema.ValidationEventHandler" />。</param>
      <param name="fullCompile">
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> クラスの <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> メソッドを使用してコレクション内の XML スキーマを検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>指定した名前空間に属する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトがコレクションに格納されているかどうかを示す値を返します。</summary>
      <param name="targetNamespace">チェックする項目の名前空間。</param>
      <returns>項目が見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> に特定のスキーマが格納されているかどうかを判断します。</summary>
      <param name="schema">検索する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
      <returns>指定した項目がコレクションに格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックス位置から始まります。</summary>
      <param name="array">
        <see cref="T:System.Array" /> のスキーマのコピー先である 1 次元の <see cref="T:System.Xml.Serialization.XmlSchemas" />。 <see cref="T:System.Array" /> には、0 から始まるインデックス番号が必要です。</param>
      <param name="index">コピーを開始する配列のインデックス位置を表す 32 ビット整数。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>いずれかの XML スキーマで、指定した名前と型の <see cref="T:System.Xml.Schema.XmlSchemaObject" /> を検索します。</summary>
      <param name="name">コレクション内の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトの検索に使用する名前空間と共に、完全修飾名を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="type">検索するオブジェクトの <see cref="T:System.Type" />。 使用できる型としては、<see cref="T:System.Xml.Schema.XmlSchemaGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />、<see cref="T:System.Xml.Schema.XmlSchemaElement" />、<see cref="T:System.Xml.Schema.XmlSchemaAttribute" />、および <see cref="T:System.Xml.Schema.XmlSchemaNotation" /> があります。</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> や <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> などの <see cref="T:System.Xml.Schema.XmlSchemaObject" /> インスタンス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>同じ名前空間に属するスキーマのコレクションを取得します。</summary>
      <param name="ns">取得対象のスキーマの名前空間。</param>
      <returns>スキーマを格納する <see cref="T:System.Collections.IList" /> 実装。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>指定したスキーマを検索し、<see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体内で最初に見つかった位置の 0 から始まるインデックスを返します。</summary>
      <param name="schema">検索する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 全体内で値が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号。それ以外の場合は -1。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 内の指定したインデックス位置に、スキーマを挿入します。</summary>
      <param name="index">
        <paramref name="schema" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="schema">挿入先の <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>スキーマがコンパイルされているかどうかを示す値を取得します。</summary>
      <returns>スキーマがコンパイルされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>指定した XML スキーマに、<see langword="IsDataSet" /> またはそれと等価な値が設定された <see langword="true" /> カスタム属性があるかどうかを判断する静的メソッドです。</summary>
      <param name="schema">
        <see langword="IsDataSet" /> 属性の <see langword="true" /> 値をチェックする XML スキーマ。</param>
      <returns>指定したスキーマが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>指定したインデックスの位置にある <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトを取得または設定します。</summary>
      <param name="index">取得する項目のインデックス。</param>
      <returns>指定された <see cref="T:System.Xml.Schema.XmlSchema" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>指定した名前空間に関連付けられている XML スキーマを表す <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトを指定して取得します。</summary>
      <param name="ns">指定したオブジェクトの名前空間。</param>
      <returns>指定した <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスの内容を消去しているときに、追加のカスタム プロセスを実行します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスに新しい要素を挿入する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" /> を挿入する位置の、0 から始まるインデックス。</param>
      <param name="value">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスから要素を削除するときに、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="value" /> が存在する位置の、0 から始まるインデックス番号。</param>
      <param name="value">
        <paramref name="index" /> から削除する要素の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> インスタンスに値を設定する前に、追加のカスタム プロセスを実行します。</summary>
      <param name="index">
        <paramref name="oldValue" /> が存在する位置の、0 から始まるインデックス番号。</param>
      <param name="oldValue">
        <paramref name="newValue" /> で置換する値。</param>
      <param name="newValue">
        <paramref name="index" /> にある要素の新しい値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSchemas" /> 内で最初に見つかった特定のスキーマを削除します。</summary>
      <param name="schema">削除する <see cref="T:System.Xml.Schema.XmlSchema" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>XML スキーマのコレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>コレクションまたは列挙値に対応付けられる SOAP エンコード済みの XML データ型を逆シリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲートを示します。</summary>
      <param name="collection">コレクション項目の配列のコピー先となるコレクション。</param>
      <param name="collectionItems">
        <c>object collection</c> にコピーされる項目の配列。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>SOAP でエンコードされた XML データを逆シリアル化するために <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲート。</summary>
      <param name="fixup">元の状態に戻すオブジェクト、および入力する項目の文字列識別子の配列を含む <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスのインスタンス。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> および <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> の基本クラスであり、その両方の型に共通のメソッドを含む抽象クラス。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>SOAP エンコード済みでルート以外の XML データの型を逆シリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲート。</summary>
      <returns>コールバックによって返されるオブジェクト。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによる逆シリアル化を制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>コールバック メソッドを含むオブジェクトを格納します。このコールバック メソッドは、SOAP エンコード済み配列または SOAP エンコード済みの多重参照要素に対応付けられている .NET Framework コレクションまたは列挙値を補完するために必要に応じて呼び出されます。</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートおよびコールバック メソッドの入力データ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>SOAP エンコード済み配列内のオブジェクトを補完するために必要に応じて呼び出されるコールバック メソッド インスタンスを含むオブジェクトを格納します。</summary>
      <param name="fixup">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートおよびコールバック メソッドの入力データ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>後に呼び出す <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> デリゲートの実装およびその入力データを格納します。</summary>
      <param name="name">逆シリアル化する .NET Framework 型の名前。</param>
      <param name="ns">逆シリアル化する .NET Framework 型の名前空間。</param>
      <param name="type">逆シリアル化する <see cref="T:System.Type" />。</param>
      <param name="read">
        <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> デリゲート。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクトを格納します。格納の目的は、後に <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" /> メソッドを介してアクセスするためです。</summary>
      <param name="id">要素を識別する、<see langword="id" /> 要素の <see langword="multiRef" /> 属性の値。</param>
      <param name="o">XML 要素から逆シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>デシリアライザーが進められたかどうかをチェックします。</summary>
      <param name="whileIterations">while ループにおける現在の <see langword="count" />。</param>
      <param name="readerCount">現在の <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> です。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> は進められていません。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>指定した文字列の先頭と末尾で、空白文字が 1 つ以上連続している場合、それらの空白文字をすべて削除します。</summary>
      <param name="value">空白を削除する対象文字列。</param>
      <returns>トリムした後の文字列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲート インスタンス、およびメソッドの入力を保持します。またメソッドのパラメーターを提供します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>コールバック メソッドのパラメーターを使用して <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="collection">コールバック メソッドがコレクション項目の配列をコピーする先のコレクション。</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="collectionItems">コールバック メソッドがコレクションをコピーする先の配列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲートをインスタンス化するコールバック メソッドを取得します。</summary>
      <returns>コールバック メソッドをポイントする <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> デリゲート。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>コールバック メソッドの <paramref name="object collection" /> 値を取得します。</summary>
      <returns>フィックスアップに使用されるコレクション。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>コールバック メソッドがコレクションをコピーする先の配列を取得します。</summary>
      <returns>コールバック メソッドがコレクションをコピーする先の配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>逆シリアル化対象のオブジェクトが抽象型でなければならないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name">抽象型の名前。</param>
      <param name="ns">抽象型の .NET Framework 名前空間。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>内部要素を読み取るオプションを使用して、<see cref="T:System.Xml.XmlReader" /> の現在の位置にある XML 表現からオブジェクトを設定します。</summary>
      <param name="xsdDerived">派生 XML スキーマ データ型のローカル名。</param>
      <param name="nsDerived">派生 XML スキーマ データ型の名前空間。</param>
      <param name="xsdBase">基本 XML スキーマ データ型のローカル名。</param>
      <param name="nsBase">基本 XML スキーマ データ型の名前空間。</param>
      <param name="clrDerived">派生 .NET Framework 型の名前空間。</param>
      <param name="clrBase">基本 .NET Framework 型の名前。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>コンストラクターによるセキュリティ例外のスローが原因で逆シリアル化対象のオブジェクトをインスタンス化できない、ということを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="typeName">型の名前。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>利用できるコンストラクターが存在しないために、逆シリアル化対象のオブジェクトをインスタンス化できない、ということを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="typeName">型の名前。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>明示的な参照の変換が失敗したことを示す <see cref="T:System.InvalidCastException" /> を作成します。</summary>
      <param name="type">オブジェクトのキャスト先としての使用を許可されない <see cref="T:System.Type" />。 この型は例外メッセージに組み込まれます。</param>
      <param name="value">キャストが許可されないオブジェクト。 このオブジェクトは例外メッセージに組み込まれます。</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>明示的な参照の変換が失敗したことを示す <see cref="T:System.InvalidCastException" /> を作成します。</summary>
      <param name="type">オブジェクトのキャスト先としての使用を許可されない <see cref="T:System.Type" />。 この型は例外メッセージに組み込まれます。</param>
      <param name="value">キャストが許可されないオブジェクト。 このオブジェクトは例外メッセージに組み込まれます。</param>
      <param name="id">文字列識別子。</param>
      <returns>
        <see cref="T:System.InvalidCastException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>XML スキーマ データ型にマップされている派生型が見つからないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name">使用できない派生型に対応付けられている XML スキーマ データ型のローカル名。</param>
      <param name="ns">使用できない派生型に対応付けられている XML スキーマ データ型の名前空間。</param>
      <param name="clrType">検出できない派生型の派生元である .NET Framework 基本型の完全名。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>SOAP エンコード済みコレクション型を変更できず、その値を設定できないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name">対応付けられている .NET Framework 型の完全修飾名。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>列挙値が無効なことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value">無効な列挙値。</param>
      <param name="enumType">列挙型。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>
        <see cref="T:System.InvalidOperationException" /> の現在の位置が不明な XML ノードであることを示す <see cref="T:System.Xml.XmlReader" /> を作成します。</summary>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>型が不明なことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type">不明な型の名前を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>
        <see cref="T:System.InvalidOperationException" /> 例外。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>XML 文字列が有効な .NET Framework 型の名前に変換されるかどうか判定する値を取得または設定します。</summary>
      <returns>XML 文字列が有効な .NET Framework 型名にデコードされたかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>XML ドキュメントの逆シリアル化先の XML ドキュメント オブジェクトを取得します。</summary>
      <returns>逆シリアル化された <see cref="T:System.Xml.XmlDocument" /> データを表す <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>指定された配列またはコピーが、指定したインデックスを格納できるだけの大きさを持つことを保証します。</summary>
      <param name="a">チェック対象の <see cref="T:System.Array" />。</param>
      <param name="index">必要なインデックス。</param>
      <param name="elementType">配列の要素の <see cref="T:System.Type" />。</param>
      <returns>既存の <see cref="T:System.Array" /> に十分な大きさが既にある場合はその配列。それ以外の場合は、元の配列の要素を格納する、以前よりも大きい新しい配列。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲート インスタンスとメソッドの入力を保持します。また、メソッドのパラメーターとして機能します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o">コールバック実装によって値が設定される他のオブジェクトを含むオブジェクト。</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="count">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> プロパティから取得される文字列配列のサイズ。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="o">コールバック実装によって値が設定される他のオブジェクトを含むオブジェクト。</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートをインスタンス化するメソッド。</param>
      <param name="ids">
        <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" /> プロパティから取得される文字列配列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートのインスタンスを作成するコールバック メソッドを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> デリゲートのインスタンスを作成するコールバック メソッド。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>コールバック実装によって値が設定される <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> プロパティに属するオブジェクトのキーの配列を取得または設定します。</summary>
      <returns>キーの配列。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>コールバック実装によって値が設定される他のオブジェクトを含むオブジェクトを取得または設定します。</summary>
      <returns>オブジェクトおよび挿入する値が格納されたソース。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>.NET Framework 参照型に対応付けられているデータ型を持つ SOAP エンコード済み配列の値を補完します。</summary>
      <param name="fixup">補完する値を持つ配列を格納しているオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> が現在配置されている、SOAP エンコード済み配列の長さを取得します。</summary>
      <param name="name">配列のローカル名。</param>
      <param name="ns">配列の名前空間。</param>
      <returns>SOAP 配列の長さ。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> の現在の位置である XML 要素に、<see langword="true" /> 値に設定された null 属性があるかどうかを判断します。</summary>
      <returns>
        <see langword="true" /> の現在の位置が、<see cref="T:System.Xml.XmlReader" /> 値が設定された null 属性である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクトで、<see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" /> が以前に保存したオブジェクトを取得します。</summary>
      <param name="id">要素を識別する、<see langword="id" /> 要素の <see langword="multiRef" /> 属性の値。</param>
      <returns>SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化されるオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>
        <see langword="xsi:type" /> の現在の位置にある XML 要素の <see cref="T:System.Xml.XmlReader" /> 属性の値を取得します。</summary>
      <returns>XML 要素のデータ型を示す XML 修飾名。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>SOAP エンコード済みの XML データにマップされているオブジェクトを設定するコールバック メソッドを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>
        <see cref="T:System.Xml.NameTable" /> オブジェクトに要素名および属性名を格納します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>SOAP 1.1 戻り値に対して <see langword="true" /> であることが必要な値を取得または設定します。</summary>
      <returns>値が戻り値の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>XML 属性名が XML 名前空間を示しているかどうかを判断します。</summary>
      <param name="name">XML 属性の名前。</param>
      <returns>XML 属性名が XML 名前空間を示している場合は <see langword="true" />。それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>XML 属性の値が、Web サービス記述言語 (WSDL: Web Services Description Language) 名前空間の <see langword="arrayType" /> 型の場合、その値を設定します。</summary>
      <param name="attr">
        <see cref="T:System.Xml.XmlAttribute" /> 型である可能性のある <see langword="wsdl:array" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> が現在の位置の要素の完全修飾名を読み取るようにします。</summary>
      <returns>現在の XML 要素の完全修飾名。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> が XML 終了タグを読み取るようにします。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> が使用している <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> オブジェクトを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationReader" />によって使用されている <see cref="T:System.Xml.XmlReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>
        <see cref="T:System.Xml.XmlReader" />現在のカウントを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.XmlReader" />の現在の数。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>現在の XML 要素が true 値の null 属性を持つ場合、その現在の XML 要素を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <returns>要素に <see langword="true" />null="true"属性値があり、その要素が読み取られた場合は。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>現在配置されている要素の完全修飾名を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <returns>現在の XML 要素の完全修飾名を表す <see cref="T:System.Xml.XmlQualifiedName" />。現在の XML 要素に <see langword="null" />null="true"属性値がある場合は。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> が許容されている、単純なテキストのみの XML 要素を読み込むように <see langword="null" /> に指示します。</summary>
      <returns>文字列値。それ以外の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>SOAP エンコード済みの XML 要素の参照に使用される <see langword="href" /> 属性 (SOAP 1.2 の場合は<see langword="ref" />) の値を読み込みます。</summary>
      <param name="fixupReference">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns>値が読み込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>SOAP エンコード済みの <see langword="multiRef" /> XML 要素からオブジェクトを逆シリアル化します。</summary>
      <returns>ドキュメント内の参照要素の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>SOAP エンコード済みの <see langword="multiRef" /> XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns">要素の XML スキーマ データ型の名前空間。</param>
      <returns>ドキュメント内の参照要素の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>SOAP メッセージの SOAP エンコード済み <see langword="multiRef" /> 要素からオブジェクトを逆シリアル化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns">要素の XML スキーマ データ型の名前空間。</param>
      <param name="elementCanBeType">要素名も XML スキーマ データ型名の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="fixupReference">
        <see langword="href" />属性値の読み込み先となる出力文字列。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="name">要素の XML スキーマ データ型のローカル名。</param>
      <param name="ns">要素の XML スキーマ データ型の名前空間。</param>
      <param name="fixupReference">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>
        <see langword="multiRef" /> 要素への参照を含む、SOAP メッセージの XML 要素からオブジェクトを逆シリアル化します。</summary>
      <param name="fixupReference">
        <see langword="href" /> 属性値の読み込み先となる出力文字列。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> の現在の位置の XML 表現からオブジェクトを設定します。</summary>
      <param name="serializable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> の現在の位置に対応する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> の現在の位置から設定されたメンバーを持つ、<see cref="T:System.Xml.XmlReader" /> インターフェイスを実装したオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</summary>
      <param name="serializable">XMLReader の現在の位置に対応する IXmlSerializable オブジェクト。</param>
      <param name="wrappedAny">シリアル化可能なオブジェクトをラップするかどうかを指定します。</param>
      <returns>XmlReader の現在の場所から読み込まれたメンバーを所有する、IXmlSerializable インターフェイスを実装したオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>
        <see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果を入力値に追加して作成します。</summary>
      <param name="value">
        <see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果の前に追加する文字列。</param>
      <returns>入力値が追加された、<see cref="M:System.Xml.XmlReader.ReadString" /> メソッドの呼び出し結果。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>入力値に、<see cref="M:System.Xml.XmlReader.ReadString" /> クラスの <see cref="T:System.Xml.XmlReader" /> メソッドの呼び出し結果を追加したものを返します (必要に応じて空白を削除できます)。</summary>
      <param name="value">追加する文字列。</param>
      <param name="trim">読み取り操作の結果から空白を削除する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>入力値に読み取り操作の結果が追加された値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>null 値が許容される (<see langword="xsi:nil = 'true'" />) XML 要素を読み取り、ジェネリック <see cref="T:System.Nullable`1" /> 値を返します。</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> の現在位置に関する単純データ型を表す <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>XML の null 値を表すジェネリック <see cref="T:System.Nullable`1" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> の現在の位置の XML ノードの値を取得します。</summary>
      <param name="type">
        <see cref="T:System.Xml.XmlQualifiedName" /> の現在位置に関する単純データ型を表す <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>値が単純な XML スキーマ データ型の場合、.NET Framework 値型としてのノードの値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>現在の位置にある、XML ドキュメントのルート要素を読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="wrapped">要素の開始要素を読み込んだ後にのみ内容を読み込むようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>読み込んだルート要素を格納する <see cref="T:System.Xml.XmlDocument" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>現在の位置にある XML ノードを読み込むよう <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="wrapped">要素の開始要素を読み込んだ後にのみコンテンツを読み込むようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>読み込んだ XML ノードを表す <see cref="T:System.Xml.XmlNode" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>SOAP エンコード済みの <see langword="multiRef" /> 要素から逆シリアル化するオブジェクトを格納します。</summary>
      <param name="o">逆シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>動的に生成されるアセンブリを名前で取得します。</summary>
      <param name="assemblyFullName">アセンブリの完全名。</param>
      <returns>動的に生成された <see cref="T:System.Reflection.Assembly" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>指定した配列またはコピーが、指定した長さ未満であることを保証します。</summary>
      <param name="a">チェック対象の配列。</param>
      <param name="length">配列の最大長。</param>
      <param name="elementType">配列の要素の <see cref="T:System.Type" />。</param>
      <param name="isNullable">入力配列に <see langword="true" /> が存在する場合に、その配列に返すことができるようにする場合は <see langword="null" />。それ以外の場合は、よりサイズの小さな新しい配列。</param>
      <returns>既存の <see cref="T:System.Array" /> が、指定した長さ未満の場合はその配列。それ以外の場合は、元の配列の要素を格納した、サイズが <paramref name="length" /> 未満の新しい配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>現在の位置にある文字列値を読み取り、それを Base-64 のバイト配列として返すように <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="isNull">
        <see langword="true" /> を返すようにする場合は <see langword="null" />。Base-64 のバイト配列を返すようにする場合は <see langword="false" />。</param>
      <returns>Base-64 のバイト配列。<see langword="null" /> パラメーターの値が <paramref name="isNull" /> の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>入力文字列から Base-64 のバイト配列を作成します。</summary>
      <param name="value">Base-64 のバイト配列に変換する文字列。</param>
      <returns>Base-64 のバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>現在の位置にある文字列値を読み取り、16 進のバイト配列として返すように <see cref="T:System.Xml.XmlReader" /> に指示します。</summary>
      <param name="isNull">
        <see langword="true" /> を返すようにする場合は <see langword="null" />。16 進のバイト配列を返すようにする場合は<see langword="false" />。</param>
      <returns>16 進数のバイト配列。<see langword="null" /> パラメーターの値が <paramref name="isNull" /> の場合は <see langword="true" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>入力文字列から 16 進数のバイト配列を生成します。</summary>
      <param name="value">16 進数のバイト配列に変換する文字列。</param>
      <returns>16 進数のバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>入力文字列から <see cref="T:System.Char" /> オブジェクトを作成します。</summary>
      <param name="value">
        <see cref="T:System.Char" /> オブジェクトに変換する文字列。</param>
      <returns>
        <see cref="T:System.Char" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>入力文字列から <see cref="T:System.DateTime" /> オブジェクトを作成します。</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> クラス オブジェクトに変換する文字列。</param>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>入力文字列から <see cref="T:System.DateTime" /> オブジェクトを作成します。</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> オブジェクトに変換する文字列。</param>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>列挙子リストの定数を表す、区切り文字で区切られた識別子で構成される文字列から、数値型の列挙値を作成します。</summary>
      <param name="value">区切り記号で区切られた識別子で構成される文字列。各識別子は設定されている列挙子リストの定数を表します。</param>
      <param name="h">キーの役割を持つ識別子と整数型の定数で構成される <see cref="T:System.Collections.Hashtable" />。</param>
      <param name="typeName">列挙型の名前。</param>
      <returns>一連のビット単位の <see langword="OR" /> 操作が行われた列挙値で構成される long 型の値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>時刻を表す文字列から <see cref="T:System.DateTime" />作成します。</summary>
      <param name="value">
        <see cref="T:System.DateTime" /> オブジェクトに変換する文字列。</param>
      <returns>
        <see cref="T:System.DateTime" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>XML 名をデコードします。</summary>
      <param name="value">デコードする XML 名。</param>
      <returns>デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>XML 名をデコードします。</summary>
      <param name="value">デコードする XML 名。</param>
      <returns>デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>XML 名をデコードします。</summary>
      <param name="value">デコードする XML 名。</param>
      <returns>デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>XML 名をデコードします。</summary>
      <param name="value">デコードする XML 名。</param>
      <returns>デコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>プレフィックスを含む可能性のある名前から <see cref="T:System.Xml.XmlQualifiedName" /> を取得します。</summary>
      <param name="value">プレフィックスを含む可能性のある名前。</param>
      <returns>名前空間で修飾された XML 名を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="attr">対象となる属性を表す <see cref="T:System.Xml.XmlAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="attr">対象となる属性を表す <see cref="T:System.Xml.XmlAttribute" />。</param>
      <param name="qnames">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">逆シリアル化の対象となる <see cref="T:System.Object" />。</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" />。この要素に対応するイベントが発生させられます。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" /> プロパティを介してアクセスできます。</param>
      <param name="elem">
        <see cref="T:System.Xml.XmlElement" />。この要素に対応するイベントが発生させられます。</param>
      <param name="qnames">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">逆シリアル化の対象となるオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="o">逆シリアル化されているオブジェクト。</param>
      <param name="qnames">XML 修飾名をコンマで区切ったリスト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>
        <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> の現在の位置に対して <see cref="T:System.Xml.XmlReader" /> イベントを発生させます。</summary>
      <param name="id">未参照のオブジェクトの識別に使用される一意の文字列。この文字列には、その後、<see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" /> プロパティを介してアクセスできます。</param>
      <param name="o">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> による逆シリアル化の対象となるオブジェクト。このオブジェクトには、その後、<see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" /> プロパティを介してアクセスできます。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>SOAP エンコード済みでルート以外の XML データの型をシリアル化するために、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスが使用するデリゲートを示します。</summary>
      <param name="o">シリアル化するオブジェクト。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスによるシリアル化を制御するために使用する抽象クラスを表します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートの実装、およびデリゲートを適用する型を、後で呼び出すために保管します。</summary>
      <param name="type">シリアル化するオブジェクトの <see cref="T:System.Type" />。</param>
      <param name="typeName">シリアル化するオブジェクトの型の名前。</param>
      <param name="typeNs">シリアル化するオブジェクトの型の名前空間。</param>
      <param name="callback">
        <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートのインスタンス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>XML スキーマの <see langword="choice" /> 要素宣言に準拠する要素に、想定外の名前が使用されたことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value">無効な名前。</param>
      <param name="identifier">名前が属する <see langword="choice" /> 要素宣言。</param>
      <param name="name">要素の想定内のローカル名。</param>
      <param name="ns">要素の想定内の名前空間。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>
        <see cref="T:System.InvalidOperationException" /> が無効なメンバーに適用されたこと (<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 型のメンバー、または <see cref="T:System.Xml.XmlNode" /> から派生したメンバーのみ有効であること) を示す <see cref="T:System.Xml.XmlNode" /> を作成します。</summary>
      <param name="o">無効なメンバーを表すオブジェクト。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>
        <see cref="T:System.InvalidOperationException" /> が無効なメンバーに適用されたこと (<see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> 型のメンバー、または <see cref="T:System.Xml.XmlNode" /> から派生したメンバーのみ有効であること) を示す <see cref="T:System.Xml.XmlNode" /> を作成します。</summary>
      <param name="type">無効な <see cref="T:System.Type" />。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>XML スキーマの <see langword="choice" /> 要素宣言が適用される配列の書き込み中にエラーが発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type">シリアル化されている型。</param>
      <param name="identifier">
        <see langword="choice" /> 要素宣言の名前。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>無効な列挙値を示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value">無効な列挙値を表すオブジェクト。</param>
      <param name="typeName">XML 型名。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>XML 要素の値が列挙型に一致しないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="value">有効でない値。</param>
      <param name="elementName">無効な値を持つ XML 要素の名前。</param>
      <param name="enumValue">有効な値。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>XML スキーマの <see langword="any" /> 要素宣言に準拠させる必要のある XML 要素を処理できないことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="name">処理できない XML 要素。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>シリアル化対象の型を有効な方法で扱えないこと、またはシリアル化対象の型に想定外の状況が発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="o">シリアル化できない型を持つオブジェクト。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>シリアル化対象の型を有効な方法で扱えないこと、またはシリアル化対象の型に想定外の状況が発生したことを示す <see cref="T:System.InvalidOperationException" /> を作成します。</summary>
      <param name="type">シリアル化できない型。</param>
      <returns>新しく作成された例外。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>有効な XML を書き込むために <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> メソッドが使用されるかどうか示す値を取得または設定します。</summary>
      <returns>
        <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> メソッドがエンコード済みの名前を返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Base 64 バイト配列を処理します。</summary>
      <param name="value">ベース 64 の <see cref="T:System.Byte" /> 配列。</param>
      <returns>引数として渡した配列と同じバイト配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>入力された 16 進バイト配列から文字列を作成します。</summary>
      <param name="value">文字列に変換する 16 進のバイト配列。</param>
      <returns>文字列に変換されたバイト配列値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>入力された <see cref="T:System.Char" /> から文字列を作成します。</summary>
      <param name="value">文字列に変換する <see cref="T:System.Char" />。</param>
      <returns>文字列に変換された <see cref="T:System.Char" /> 値。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> オブジェクトから文字列を作成します。</summary>
      <param name="value">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns>日付を示す <see cref="T:System.DateTime" /> の文字列表現 (時刻は含まれません)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>入力された <see cref="T:System.DateTime" /> から文字列を作成します。</summary>
      <param name="value">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns>日付および時刻を示す <see cref="T:System.DateTime" /> の文字列表現。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>設定されている列挙型のメンバーを表す識別子で構成された文字列を作成します。各識別子は区切り記号で区切られます。</summary>
      <param name="value">ビット単位の一連の <see langword="OR" /> 演算の対象となる列挙値。</param>
      <param name="values">列挙型の名前値。</param>
      <param name="ids">列挙型の定数値。</param>
      <returns>区切り記号で区切られた識別子で構成される文字列。各文字列が、設定されている列挙型リストのメンバーを表します。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>列挙型リストから数値型の列挙値、名前、および定数を受け取り、設定されている列挙値メンバーを表す識別子で構成された文字列を返します。識別子は区切り記号で区切られます。</summary>
      <param name="value">ビット単位の一連の <see langword="OR" /> 演算の対象となる列挙値。</param>
      <param name="values">列挙型の値。</param>
      <param name="ids">列挙型の定数。</param>
      <param name="typeName">型の名前。</param>
      <returns>区切り記号で区切られた識別子で構成される文字列。各項目は、ビット単位演算で設定された値の 1 つになります。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>
        <see cref="T:System.DateTime" /> オブジェクトから文字列を作成します。</summary>
      <param name="value">文字列に変換する <see cref="T:System.DateTime" />。</param>
      <returns>時刻を示す <see cref="T:System.DateTime" /> オブジェクトの文字列表現 (日付は含まれません)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>無効な文字をエスケープ シーケンスに置き換えることで、有効な XML 名をエンコードします。</summary>
      <param name="name">XML 名として使用する文字列。</param>
      <returns>エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>無効な文字をエスケープ シーケンスに置き換えることで、有効な XML ローカル名をエンコードします。</summary>
      <param name="ncName">(修飾なしの) ローカル XML 名として使用する文字列。</param>
      <returns>エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>XML 名をエンコードします。</summary>
      <param name="nmToken">エンコードする XML 名。</param>
      <returns>エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>空白で区切られた一連の XML 名を、単一の XML 名にエンコードします。</summary>
      <param name="nmTokens">エンコードの対象となる、空白で区切られた一連の XML 名。</param>
      <returns>エンコードされた文字列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>XML 修飾名を返します (無効な文字はエスケープ シーケンスに置き換えられます)。</summary>
      <param name="xmlQualifiedName">書き込み対象の XML を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <returns>XML 修飾名 (無効な文字はエスケープ シーケンスに置き換えられています)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>XML 修飾名として書き込むことができる文字列を作成します。無効な文字はエスケープ シーケンスに置き換えられます。</summary>
      <param name="xmlQualifiedName">書き込み対象の XML を表す <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <param name="ignoreEmpty">文字列内の空白を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <returns>XML 修飾名 (無効な文字はエスケープ シーケンスに置き換えられています)。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>SOAP エンコード済み XML データをシリアル化する、<see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> デリゲートのインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>XML ドキュメントに修飾名を作成するために使用する名前空間とプレフィックスを含む XML 修飾名オブジェクトのリストを取得または設定します。</summary>
      <returns>名前空間とプレフィックスのペアを含む <see cref="T:System.Collections.ArrayList" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>動的に生成されるアセンブリを名前で取得します。</summary>
      <param name="assemblyFullName">アセンブリの完全名。</param>
      <returns>動的に生成されたアセンブリ。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>SOAP エンコード済みの SOAP メッセージをシリアル化する場合に限り、オブジェクト参照を初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> オブジェクトに、名前に対して名前空間が指定されていない XML 属性を書き込むように指示します。</summary>
      <param name="localName">XML 属性のローカル名。</param>
      <param name="value">バイト配列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> に、名前に対して名前空間が指定されていない XML 属性を書き込むよう指示します。</summary>
      <param name="localName">XML 属性のローカル名。</param>
      <param name="value">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> オブジェクトに、XML 属性を書き込むよう指示します。</summary>
      <param name="localName">XML 属性のローカル名。</param>
      <param name="ns">XML 属性の名前空間。</param>
      <param name="value">バイト配列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>XML 属性を書き込みます。</summary>
      <param name="localName">XML 属性のローカル名。</param>
      <param name="ns">XML 属性の名前空間。</param>
      <param name="value">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>手動で提供された名前空間プレフィックスを使用して XML 属性を書き込みます。</summary>
      <param name="prefix">書き込む名前空間プレフィックス。</param>
      <param name="localName">XML 属性のローカル名。</param>
      <param name="ns">プレフィックスによって表される名前空間。</param>
      <param name="value">文字列としての XML 属性の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>名前付き XML 要素の本体内に XML ノード オブジェクトを書き込みます。</summary>
      <param name="node">書き込む XML ノード、または子 XML 要素。</param>
      <param name="name">書き込む親 XML 要素のローカル名。</param>
      <param name="ns">書き込む親 XML 要素の名前空間。</param>
      <param name="isNullable">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <param name="any">ノードまたは XML 要素が XML スキーマの <see langword="true" /> 要素宣言に準拠することを示す場合は <see langword="any" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>名前付き XML 要素の本体内に <see cref="T:System.Xml.XmlWriter" /> オブジェクトを書き込むよう <see cref="T:System.Xml.XmlNode" /> オブジェクトに指示します。</summary>
      <param name="node">書き込む XML ノード、または子 XML 要素。</param>
      <param name="name">書き込む親 XML 要素のローカル名。</param>
      <param name="ns">書き込む親 XML 要素の名前空間。</param>
      <param name="isNullable">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
      <param name="any">ノードまたは XML 要素が XML スキーマの <see langword="true" /> 要素宣言に準拠することを示す場合は <see langword="any" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の修飾名を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">要素テキストに書き込む名前 (名前空間で修飾する場合はプレフィックスを使用)。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">書き込む XML 要素のローカル名 (名前空間による修飾なし)。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="ns">XML 要素の名前空間。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に指定の値を持つ XML 要素を書き込みます。</summary>
      <param name="localName">XML 要素のローカル名。</param>
      <param name="value">XML 要素のテキスト値。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>本体が空の XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>本体が空の XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>
        <see langword="&lt;closing&gt;" /> 要素タグを書き込みます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>
        <see langword="&lt;closing&gt;" /> 要素タグを書き込みます。</summary>
      <param name="o">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>SOAP エンコード済みの <see langword="id" /> 要素内に出現する <see langword="multiRef" /> 属性を書き込みます。</summary>
      <param name="o">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>名前空間宣言属性を書き込みます。</summary>
      <param name="xmlns">宣言する XML 名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>本体内に有効な XML 修飾名を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む XML 修飾名。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体内に有効な XML 修飾名を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む XML 修飾名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む文字列。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>XML 要素の本体としてバイト配列を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込むバイト配列。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む文字列。</param>
      <param name="xsiType">
        <see langword="xsi:type" /> 属性に書き込む XML スキーマ データ型の名前。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む文字列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>XML 要素の本体としてバイト配列を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込むバイト配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>本体として文字列を含む XML 要素を書き込みます。 文字列値が <see langword="xsi:nil='true'" /> の場合、<see cref="T:System.Xml.XmlWriter" /> は <see langword="null" /> 属性を挿入します。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="value">XML 要素の本体に書き込む文字列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>
        <see langword="xsi:nil='true'" /> 属性を持つ XML 要素を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>指定したオブジェクトに対応する <see langword="&lt;multiRef&gt;" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
      <param name="suppressReference">データを含む要素を他の要素が参照するのではなく、オブジェクトを直接 XML 要素にシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>指定したオブジェクトに対応する <see langword="multiRef" /> XML 要素への参照を格納できる、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">現在の XML 要素、または現在の要素が参照する <see langword="multiRef" /> 要素にシリアル化するオブジェクト。</param>
      <param name="ambientType">オブジェクトの型の対応付けで格納される型 (<see langword="typeof" /> 演算で直接検出されるオブジェクトの型と対照をなす型)。</param>
      <param name="suppressReference">データを含む要素を他の要素が参照するのではなく、オブジェクトを直接 XML 要素にシリアル化する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <param name="isNullable">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> によって使用されている <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> を取得または設定します。</summary>
      <returns>このクラスのインスタンスが使用する <see cref="T:System.Xml.XmlWriter" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>SOAP メッセージ内の SOAP エンコード済み <see langword="multiRef" /> XML 要素にオブジェクトをシリアル化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>指定したオブジェクトに対応する <see langword="multiRef" /> 要素への参照を格納する、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む参照元要素のローカル名。</param>
      <param name="ns">書き込む参照元要素の名前空間。</param>
      <param name="o">シリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>指定したオブジェクトに対応する <see langword="multiRef" /> 要素への参照を格納する、SOAP メッセージの XML 要素を書き込みます。</summary>
      <param name="n">書き込む参照元要素のローカル名。</param>
      <param name="ns">書き込む参照元要素の名前空間。</param>
      <param name="o">シリアル化するオブジェクト。</param>
      <param name="isNullable">シリアル化するオブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>本体に指定の修飾名を持つ SOAP 1.2 RPC 結果要素を書き込みます。</summary>
      <param name="name">結果本体のローカル名。</param>
      <param name="ns">結果本体の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>カスタム XML フォーマットを使用するオブジェクトを XML 要素として書き込みます。</summary>
      <param name="serializable">カスタム XML フォーマットを使用する <see cref="T:System.Xml.Serialization.IXmlSerializable" /> インターフェイスを実装したオブジェクト。</param>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="isNullable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> クラス オブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>カスタム XML フォーマットを使用するオブジェクトを XML 要素として書き込むよう <see cref="T:System.Xml.XmlNode" /> に指示します。</summary>
      <param name="serializable">カスタム XML フォーマットを使用する <see cref="T:System.Xml.Serialization.IXmlSerializable" /> インターフェイスを実装したオブジェクト。</param>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="isNullable">
        <see cref="T:System.Xml.Serialization.IXmlSerializable" /> オブジェクトが <see langword="true" /> の場合に <see langword="xsi:nil='true'" /> 属性を書き込む場合は <see langword="null" />、それ以外の場合は <see langword="false" />。</param>
      <param name="wrapped">開始要素タグの書き込みを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>ライターが XML ドキュメントの開始位置に到達した際に、XML 宣言を書き込みます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="writePrefixed">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">XML 要素としてシリアル化するオブジェクト。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">XML 要素としてシリアル化するオブジェクト。</param>
      <param name="writePrefixed">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>開始要素タグおよび属性を書き込みます。</summary>
      <param name="name">書き込む XML 要素のローカル名。</param>
      <param name="ns">書き込む XML 要素の名前空間。</param>
      <param name="o">XML 要素としてシリアル化するオブジェクト。</param>
      <param name="writePrefixed">指定した名前空間が使用できない場合にプレフィックス付きの要素名を書き込む場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="xmlns">生成された XML で使用されるプレフィックスおよび名前空間のペアを保持する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> クラスのインスタンス。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>テキスト本体内に単純な XML スキーマ データ型の値を持つ XML 要素を書き込みます。</summary>
      <param name="name">書き込む要素のローカル名。</param>
      <param name="ns">書き込む要素の名前空間。</param>
      <param name="o">要素本体にシリアル化されるオブジェクト。</param>
      <param name="xsiType">XML 要素で、<see langword="true" /> 属性を使用して、テキスト値の型を明示的に指定する場合は <see langword="xsi:type" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Base 64 のバイト配列を書き込みます。</summary>
      <param name="value">書き込むバイト配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>指定した文字列値を書き込みます。</summary>
      <param name="value">書き込む文字列の値。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>指定した <see cref="T:System.Xml.XmlNode" /> を XML 属性として書き込みます。</summary>
      <param name="node">書き込む XML ノード。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>指定した <see cref="T:System.Xml.XmlNode" /> オブジェクトを XML 属性として書き込みます。</summary>
      <param name="node">書き込む XML ノード。</param>
      <param name="container">Web サービス記述言語 (WSDL: Web Services Description Language) 名前空間 ("http://schemas.xmlsoap.org/wsdl/") から <see langword="arrayType" /> 属性の修飾名値を生成するために使用する <see cref="T:System.Xml.Schema.XmlSchemaObject" /> オブジェクト (または <see langword="null" />)。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>ドキュメントにシリアル化される XML 要素の <see langword="xsi:type" /> 属性を書き込みます。</summary>
      <param name="name">XML スキーマ データ型のローカル名。</param>
      <param name="ns">XML スキーマ データ型の名前空間。</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>オブジェクトから XML ドキュメントへのシリアル化および XML ドキュメントからオブジェクトへの逆シリアル化を行います。 <see cref="T:System.Xml.Serialization.XmlSerializer" /> により、オブジェクトを XML にエンコードする方法を制御できます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 すべての XML 要素の既定の名前空間を指定します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="defaultNamespace">すべての XML 要素で使用する既定の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 プロパティまたはフィールドが配列を返す場合、<paramref name="extraTypes" /> パラメーターには、その配列に挿入できるオブジェクトを指定します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</summary>
      <param name="type">シリアル化するオブジェクトの型。</param>
      <param name="overrides">
        <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>
        <see cref="T:System.Object" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="overrides">
        <paramref name="type" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>
        <see cref="T:System.Object" /> 型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを <see cref="T:System.Object" /> 型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="overrides">
        <paramref name="type" /> パラメーターで指定されたクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <param name="location">型の位置。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの新しいインスタンスを初期化します。 また、XML ルート要素として使用するクラスを指定します。</summary>
      <param name="type">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がシリアル化できるオブジェクトの型。</param>
      <param name="root">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>ある型を別の型にマップするオブジェクトを指定して、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを初期化します。</summary>
      <param name="xmlTypeMapping">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> が、指定された XML ドキュメントを逆シリアル化できるかどうかを示す値を取得します。</summary>
      <param name="xmlReader">逆シリアル化するドキュメントを指す <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlReader" /> が指すオブジェクトを <see cref="T:System.Xml.Serialization.XmlSerializer" /> が逆シリアル化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>シリアル化される XML ドキュメントを読み取るために使用されるオブジェクトを返します。</summary>
      <returns>XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
      <exception cref="T:System.NotImplementedException">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>派生クラスでオーバーライドされた場合、オブジェクトのシリアル化に使用されるライターを返します。</summary>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> クラスを実装するインスタンス。</returns>
      <exception cref="T:System.NotImplementedException">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>指定した <see cref="T:System.IO.Stream" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="stream">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.Stream" />。</param>
      <returns>逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>指定した <see cref="T:System.IO.TextReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="textReader">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.IO.TextReader" />。</param>
      <returns>逆シリアル化される <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>指定した <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="reader">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
      <exception cref="T:System.NotImplementedException">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。</summary>
      <param name="xmlReader">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>逆シリアル化される <see cref="T:System.Object" />。</returns>
      <exception cref="T:System.InvalidOperationException">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを、指定したエンコード スタイルを使用して逆シリアル化します。</summary>
      <param name="xmlReader">逆シリアル化する XML ドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="encodingStyle">シリアル化された XML のエンコード スタイル。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
      <exception cref="T:System.InvalidOperationException">逆シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> に格納されているデータを使用してオブジェクトを逆シリアル化します。</summary>
      <param name="xmlReader">ドキュメントの読み取りに使用される <see cref="T:System.Xml.XmlReader" /> クラスのインスタンス。</param>
      <param name="encodingStyle">使用されるエンコーディング。</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</param>
      <returns>逆シリアル化されているオブジェクト。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>指定した <see cref="T:System.Xml.XmlReader" /> に格納されている XML ドキュメントを逆シリアル化します。また、逆シリアル化で発生するイベントのオーバーライドを可能にします。</summary>
      <param name="xmlReader">逆シリアル化するドキュメントを格納している <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="events">
        <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" /> クラスのインスタンス。</param>
      <returns>逆シリアル化される <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> オブジェクトの配列から作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列を返します。</summary>
      <param name="mappings">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> の配列。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>指定したマッピングから <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンスを返します。</summary>
      <param name="mappings">
        <see cref="T:System.Xml.Serialization.XmlMapping" /> オブジェクトの配列。</param>
      <param name="type">逆シリアル化されるオブジェクトの <see cref="T:System.Type" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスのインスタンス。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>型の配列から作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列を返します。</summary>
      <param name="types">
        <see cref="T:System.Type" /> オブジェクトの配列。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> オブジェクトの配列。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>指定した型のシリアル化または逆シリアル化のために特に作成された、1 つ以上のバージョンの <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前を返します。</summary>
      <param name="type">逆シリアル化している <see cref="T:System.Type" />。</param>
      <returns>型の <see cref="T:System.Xml.Serialization.XmlSerializer" /> を格納しているアセンブリの名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>指定した名前空間にある指定した型のシリアライザーを格納しているアセンブリの名前を返します。</summary>
      <param name="type">コレクション内に存在するかどうかを確認する対象の <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace">型の名前空間。</param>
      <returns>特別に作成されたシリアライザーを格納しているアセンブリの名前。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.Stream" /> を使用してファイルに書き込みます。</summary>
      <param name="stream">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.Stream" /> を使用して、指定した名前空間を参照し、生成された XML ドキュメントをファイルに書き込みます。</summary>
      <param name="stream">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.IO.TextWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="textWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.IO.TextWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</summary>
      <param name="textWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.IO.TextWriter" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces">生成された XML ドキュメントで使用する名前空間を格納している <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="writer">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</param>
      <exception cref="T:System.NotImplementedException">メソッドが派生クラスでオーバーライドされない場合は、そのメソッドへのアクセスが行われます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、生成された XML ドキュメントを、指定した <see cref="T:System.Xml.XmlWriter" /> を使用してファイルに書き込みます。</summary>
      <param name="xmlWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して XML ドキュメントをファイルに書き込み、指定した名前空間を参照します。</summary>
      <param name="xmlWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">シリアル化する <see cref="T:System.Object" />。</param>
      <param name="namespaces">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>指定したオブジェクトをシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、指定した名前空間とエンコード スタイルを参照し、生成された XML ドキュメントをファイルに書き込みます。</summary>
      <param name="xmlWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">シリアル化するオブジェクト。</param>
      <param name="namespaces">オブジェクトが参照する <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />。</param>
      <param name="encodingStyle">シリアル化された XML のエンコード スタイル。</param>
      <exception cref="T:System.InvalidOperationException">シリアル化中にエラーが発生しました。 元の例外には、<see cref="P:System.Exception.InnerException" /> プロパティを使用してアクセスできます。</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>指定した <see cref="T:System.Object" /> をシリアル化し、指定した <see cref="T:System.Xml.XmlWriter" />、XML 名前空間、およびエンコーディングを使用して、XML ドキュメントをファイルに書き込みます。</summary>
      <param name="xmlWriter">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="o">シリアル化するオブジェクト。</param>
      <param name="namespaces">使用する名前空間とプレフィックスを格納している <see langword="XmlSerializerNamespaces" /> のインスタンス。</param>
      <param name="encodingStyle">ドキュメントで使用するエンコーディング。</param>
      <param name="id">SOAP エンコード済みメッセージの場合に、id 属性の生成に使用される基本文字列。</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 属性を認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML 要素を認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>逆シリアル化時に <see cref="T:System.Xml.Serialization.XmlSerializer" /> が不明な型の XML ノードを認識した場合に発生します。</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>SOAP エンコード済み XML ストリームの逆シリアル化時に、<see cref="T:System.Xml.Serialization.XmlSerializer" /> が、未使用の型または参照されていない型を認識した場合に発生します。</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>Web サービス クライアント プロキシに適用すると、カスタム メイドのシリアライザーを含むアセンブリを指定できます。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>指定されたアセンブリ名を使用して <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyName">アセンブリの暗号化されていない簡易名。</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>指定されたアセンブリ名とアセンブリの場所を使用して、<see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="assemblyName">アセンブリの暗号化されていない簡易名。</param>
      <param name="codeBase">アセンブリの URL の場所を表す文字列。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>特定の型セットのシリアライザーを格納するアセンブリの名前を取得または設定します。</summary>
      <returns>アセンブリの暗号化されていない簡易名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>シリアライザーを格納するアセンブリの場所を取得または設定します。</summary>
      <returns>アセンブリの場所を示すパス、または URI。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>より効率的なシリアル化を行うことができる <see cref="T:System.Xml.Serialization.XmlSerializer" /> の型指定されたバージョンを作成します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerFactory" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>指定した型のシリアル化に使用する <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <returns>指定した型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>指定した型および名前空間のシリアル化に使用する、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="defaultNamespace">すべての XML 要素で使用する既定の名前空間。</param>
      <returns>指定した型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>指定した型のシリアル化に使用する <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 プロパティまたはフィールドが配列を返す場合、<paramref name="extraTypes" /> パラメーターには、その配列に挿入できるオブジェクトを指定します。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="overrides">既定のシリアル化動作をオーバーライドするフィールドを含む <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="overrides">既定のシリアル化動作をオーバーライドするフィールドを含む <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>指定した型のオブジェクトを XML ドキュメント インスタンスにシリアル化したり、XML ドキュメント インスタンスを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 シリアル化される各オブジェクトはそれ自体がクラスのインスタンスを含むことができ、それをこのオーバーロードによって他のクラスでオーバーライドします。 このオーバーロードでは、すべての XML 要素の既定の名前空間、および XML ルート要素として使用するクラスも指定します。</summary>
      <param name="type">
        <see cref="T:System.Type" /> がシリアル化できるオブジェクトの <see cref="T:System.Xml.Serialization.XmlSerializer" />。</param>
      <param name="overrides">型パラメーターで指定したクラスの動作を拡張またはオーバーライドする <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />。</param>
      <param name="extraTypes">シリアル化する追加のオブジェクト型の <see cref="T:System.Type" /> 配列。</param>
      <param name="root">XML ルート要素プロパティを定義する <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <param name="defaultNamespace">XML ドキュメント内のすべての XML 要素の既定の名前空間。</param>
      <param name="location">型の位置を示すパス。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>指定した型のオブジェクトを XML ドキュメントにシリアル化したり、XML ドキュメントを指定した型のオブジェクトに逆シリアル化したりできる、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。 XML ルート要素を表すオブジェクトを指定します。</summary>
      <param name="type">シリアル化する <see cref="T:System.Type" />。</param>
      <param name="root">XML ルート要素を表す <see cref="T:System.Xml.Serialization.XmlRootAttribute" />。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> の派生。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>ある型を別の型に対応付けるオブジェクトを使用して、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生を返します。</summary>
      <param name="xmlTypeMapping">1 つの型から別の型への割り当てを行う <see cref="T:System.Xml.Serialization.XmlTypeMapping" />。</param>
      <returns>対応付け対象の型をシリアル化するために特別に作成された、<see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスの派生。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>型指定された生成前のシリアライザーのリーダー、ライター、およびメソッドを定義します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>型をシリアル化できるかどうか示す値を取得します。</summary>
      <param name="type">シリアル化対象の型。</param>
      <returns>型をシリアル化できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>指定した型のシリアライザーを返します。</summary>
      <param name="type">シリアル化対象の型。</param>
      <returns>
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> クラスから派生した型のインスタンス。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>シリアライザーが使用する XML リーダー オブジェクトを取得します。</summary>
      <returns>XML ドキュメントまたはデータ ストリームの読み取りに使用される <see cref="T:System.Xml.Serialization.XmlSerializationReader" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>データ ストリームの読み取りに使用されるメソッドのコレクションを取得します。</summary>
      <returns>メソッドが格納されている <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>アセンブリ内にある型指定されたシリアライザーのコレクションを取得します。</summary>
      <returns>型指定されたシリアライザーを格納している <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>データ ストリームへの書き込みに使用されるメソッドのコレクションを取得します。</summary>
      <returns>メソッドが格納されている <see cref="T:System.Collections.Hashtable" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>シリアライザーの XML ライター オブジェクトを取得します。</summary>
      <returns>XML データ ストリームまたはドキュメントへの書き込みに使用される <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>この属性はアセンブリに適用され、シリアル化インフラストラクチャによりコードが生成されたこと、およびパフォーマンスを向上させるためにそれを再利用できることを示します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>型を指定して、<see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">シリアル化する型。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>アセンブリの共通言語ランタイム (CLR: Common Language Runtime) の名前空間を取得または設定します。</summary>
      <returns>アセンブリの共通言語ランタイム (CLR: Common Language Runtime) の名前空間を保持する <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>親アセンブリの ID を取得または設定します。</summary>
      <returns>親アセンブリのバージョン。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>シリアライザーの操作対象の型を取得または設定します。</summary>
      <returns>シリアル化対象の <see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>アセンブリのバージョン番号を取得または設定します。</summary>
      <returns>アセンブリのバージョン。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>この属性が適用された対象が <see cref="T:System.Xml.Serialization.XmlSerializer" /> によってシリアル化されるときに生成される XML スキーマを制御します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> クラスの新しいインスタンスを初期化し、XML 型の名前を指定します。</summary>
      <param name="typeName">
        <see cref="T:System.Xml.Serialization.XmlSerializer" /> がクラス インスタンスをシリアル化する場合に生成する (およびクラス インスタンスを逆シリアル化する場合に認識する) XML 型の名前。</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>結果のスキーマ型が XSD 匿名型であるかどうかを判断する値を取得または設定します。</summary>
      <returns>結果のスキーマ型が XSD 匿名型である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>XML スキーマ ドキュメントに型を含めるかどうかを示す値を取得または設定します。</summary>
      <returns>XML スキーマ ドキュメントに型を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>XML 型の名前空間を取得または設定します。</summary>
      <returns>XML 型の名前空間。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>XML 型の名前を取得または設定します。</summary>
      <returns>XML 型の名前。</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>1 つの型から別の型へのマッピングを格納します。</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>名前空間および型を含む完全修飾型名を取得します。</summary>
      <returns>完全修飾型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>マップされたオブジェクトの型名を取得します。</summary>
      <returns>マップされたオブジェクトの型名。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>マップされたオブジェクトの XML 要素名を取得します。</summary>
      <returns>マップされたオブジェクトの XML 要素名。 既定値は、オブジェクトのクラス名です。</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>マップされたオブジェクトの XML 名前空間を取得します。</summary>
      <returns>マップされたオブジェクトの XML 名前空間。 既定値は、空の文字列 ("") です。</returns>
    </member>
  </members>
</doc>