<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.Tracing</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Tracing.DiagnosticCounter">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.DiagnosticCounter" /> はさまざまな Counter* クラス (具体的には、<see cref="T:System.Diagnostics.Tracing.EventCounter" />、<see cref="T:System.Diagnostics.Tracing.PollingCounter" />、<see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" />、<see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" />) の親クラスとしてサービスを提供する抽象クラスです。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.AddMetadata(System.String,System.String)">
      <summary>ペイロードの一部として含まれるカウンターにキー値メタデータを追加します。</summary>
      <param name="key">メタデータ キー。</param>
      <param name="value">メタデータ値。</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayName">
      <summary>カウンターの表示名を取得または設定します。</summary>
      <returns>カウンターの表示名。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.DisplayUnits">
      <summary>カウンターの表示単位を取得または設定します。</summary>
      <returns>カウンターの表示単位。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.DiagnosticCounter.Dispose">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> が報告されるセットからカウンターを削除します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.EventSource">
      <summary>このカウンターがアタッチされている EventSource を取得します。</summary>
      <returns>このカウンターがアタッチされている EventSource。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.DiagnosticCounter.Name">
      <summary>このカウンターの名前を取得します。</summary>
      <returns>このカウンターの名前。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventActivityOptions">
      <summary>アクティビティの開始イベントおよび停止イベントの追跡を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Detachable">
      <summary>アクティビティの重複を許可します。 既定では、アクティビティの開始と停止は、入れ子の関係である必要があります。 つまり、開始 A、開始 B、停止 A、停止 B というシーケンスは許可されず、A と同時に B が停止します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Disable">
      <summary>開始と停止の追跡をオフにします。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.None">
      <summary>開始と停止の追跡に既定の動作を使用します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventActivityOptions.Recursive">
      <summary>アクティビティを再帰的に開始できるようにします。 既定では、アクティビティを再帰的に実行できません。 つまり、開始 A、開始 A、停止 A、停止 A というシーケンスは許可されません。 アプリを実行し、アクティビティの開始を呼び出すまでに、先に実行したアクティビティが停止しない場合に、意図しないで再帰的になることがあります。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventAttribute">
      <summary>イベントに追加イベントのスキーマ情報を指定します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)">
      <summary>指定したイベント識別子を使用して、<see cref="T:System.Diagnostics.Tracing.EventAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="eventId">イベントのイベント識別子。</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.ActivityOptions">
      <summary>アクティビティの開始および停止イベントの動作を指定します。 アクティビティは、アプリの開始から停止までの時間の範囲です。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Channel">
      <summary>イベントの書き込み先となる追加のイベント ログを取得または設定します。</summary>
      <returns>イベントの書き込み先となる追加のイベント ログ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.EventId">
      <summary>イベントの識別子を取得または設定します。</summary>
      <returns>イベント識別子。 有効値の範囲は 0 ～ 65535 です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Keywords">
      <summary>イベントのキーワードを取得または設定します。</summary>
      <returns>列挙値のビットごとの組み合わせ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Level">
      <summary>イベントのレベルを取得または設定します。</summary>
      <returns>イベントのレベルを指定する列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Message">
      <summary>イベントのメッセージを取得または設定します。</summary>
      <returns>イベントに関するメッセージ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Opcode">
      <summary>イベントのオペレーション コードを取得または設定します。</summary>
      <returns>操作コードを指定する列挙値の 1 つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Tags">
      <summary>この <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> オブジェクトの <see cref="T:System.Diagnostics.Tracing.EventTags" /> 値を取得または設定します。 イベント タグは、イベントがログされたときに渡されるユーザー定義の値です。</summary>
      <returns>この <see cref="T:System.Diagnostics.Tracing.EventAttribute" /> オブジェクトの <see cref="T:System.Diagnostics.Tracing.EventTags" /> 値。 イベント タグは、イベントがログされたときに渡されるユーザー定義の値です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Task">
      <summary>イベントのタスクを取得または設定します。</summary>
      <returns>イベントのタスク。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventAttribute.Version">
      <summary>イベントのバージョンを取得または設定します。</summary>
      <returns>イベントのバージョン。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventChannel">
      <summary>イベントのイベント ログ チャネルを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Admin">
      <summary>管理者ログ チャネル。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Analytic">
      <summary>分析チャネル。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Debug">
      <summary>デバッグ チャネル。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.None">
      <summary>チャネル指定なし。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventChannel.Operational">
      <summary>オペレーション チャネル。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommand">
      <summary>
        <see cref="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command" /> コールバックに渡されるコマンド (<see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" /> プロパティ) を表します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Disable">
      <summary>イベントを無効にします。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Enable">
      <summary>イベントを有効にします。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.SendManifest">
      <summary>マニフェストを送信します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventCommand.Update">
      <summary>イベントを更新します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCommandEventArgs">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" /> のコールバックの引数を提供します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments">
      <summary>コールバックの引数の配列を取得します。</summary>
      <returns>コールバック引数の配列。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command">
      <summary>コールバック用のコマンドを取得します。</summary>
      <returns>コールバック コマンド。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)">
      <summary>指定した識別子を持つイベントを無効にします。</summary>
      <param name="eventId">無効にするイベントの識別子。</param>
      <returns>
        <paramref name="eventId" /> が範囲内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)">
      <summary>指定した識別子を持つイベントを有効にします。</summary>
      <param name="eventId">有効にするイベントの識別子。</param>
      <returns>
        <paramref name="eventId" /> が範囲内にある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventCounter">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスを通じて、非常に頻度の高いイベントの統計情報を収集する機能を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">イベント カウンターの名前。</param>
      <param name="eventSource">イベント ソース。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> は <see langword="null" /> です。
または
<paramref name="eventSource" /> は <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.ToString">
      <summary>現在のイベント カウンター インスタンスの文字列表現を返します。</summary>
      <returns>現在のイベント カウンターの名前、数および平均。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Double)">
      <summary>パフォーマンス カウンターがオンの場合は、メトリックを書き込みます。</summary>
      <param name="value">書き込む値。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventCounter.WriteMetric(System.Single)">
      <summary>パフォーマンス カウンターがオンの場合は、メトリックを書き込みます。</summary>
      <param name="value">書き込む値。</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventDataAttribute">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" /> メソッドに渡される型を指定します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventDataAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventDataAttribute.Name">
      <summary>イベント型またはプロパティに明示的に名前が付けられていない場合、イベントに適用する名前を取得または設定します。</summary>
      <returns>イベントまたはプロパティに適用する名前。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldAttribute">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> ペイロードとして渡されるユーザー定義型のフィールドには、<see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" /> が配置されます。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventFieldAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Format">
      <summary>ユーザー定義型の値の書式を指定する値を取得または設定します。</summary>
      <returns>ユーザー定義型の値を書式設定する方法を指定する値。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventFieldAttribute.Tags">
      <summary>サポートされる型のいずれにも該当しないデータを含むフィールドに必要な、ユーザー定義型の <see cref="T:System.Diagnostics.Tracing.EventFieldTags" /> 値を取得または設定します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventFieldTags" /> を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldFormat">
      <summary>ユーザー定義型の値の書式を設定する方法を指定し、フィールドの既定の書式のオーバーライドに使用できます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Boolean">
      <summary>ブール型。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Default">
      <summary>既定モード。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Hexadecimal">
      <summary>16 進数。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.HResult">
      <summary>HResult。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Json">
      <summary>JSON。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.String">
      <summary>文字列。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldFormat.Xml">
      <summary>XML。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventFieldTags">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventFieldAttribute" /> を介して <see cref="T:System.Diagnostics.Tracing.EventSource" /> ペイロードとして渡されるユーザー定義型のフィールドに配置されるユーザー定義タグを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventFieldTags.None">
      <summary>タグがないこと、そして 0 に等しいことを指定します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventIgnoreAttribute">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)" /> メソッドを使用してイベント型を書き込む場合にプロパティを無視することを指定します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventIgnoreAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventIgnoreAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventKeywords">
      <summary>イベントに適用される標準キーワードを定義します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.All">
      <summary>すべてのビットは 1 に設定されます。これは、考えられるすべてのイベント グループを表します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditFailure">
      <summary>失敗したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにのみ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.AuditSuccess">
      <summary>成功したすべてのセキュリティ監査イベントにアタッチされます。 このキーワードは、セキュリティ ログ内のイベントにのみ使用してください。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.CorrelationHint">
      <summary>関連アクティビティ ID (相関 ID) が算出された値で、一意であるとは限らない (実際の GUID ではない) 転送イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.EventLogClassic">
      <summary>
        <see langword="RaiseEvent" /> 関数を使用して発生するイベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.MicrosoftTelemetry">
      <summary>すべての Microsoft テレメトリ イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.None">
      <summary>イベントの発行時にキーワードに関するフィルター処理が行われません。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.Sqm">
      <summary>すべての SQM (Service Quality Mechanism) イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiContext">
      <summary>すべての Windows 診断インフラストラクチャ (WDI) コンテキスト イベントにアタッチされます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventKeywords.WdiDiagnostic">
      <summary>すべての Windows 診断インフラストラクチャ (WDI) 診断イベントにアタッチされます。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventLevel">
      <summary>イベントのレベルを識別します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Critical">
      <summary>このレベルは重大なエラーに相当します。これは主要なエラーを発生させる深刻なエラーです。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Error">
      <summary>このレベルは、問題を示す標準のエラーを追加します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Informational">
      <summary>このレベルは、エラーではない情報イベントまたは情報メッセージを追加します。 これらのイベントは、アプリケーションの進行状況や状態を追跡するのに役立ちます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.LogAlways">
      <summary>イベントに対してレベルのフィルター処理は行われません。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Verbose">
      <summary>このレベルは詳細なイベントまたはメッセージを追加します。 これにより、すべてのイベントがログに記録されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventLevel.Warning">
      <summary>このレベルは警告イベント (たとえば、ディスクの空き容量がほとんどないために発行されるイベント) を追加します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventListener">
      <summary>イベント ソースからのイベントを有効または無効にするメソッドを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventListener" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)">
      <summary>指定したイベント ソースのすべてのイベントを無効にします。</summary>
      <param name="eventSource">イベントを無効にするイベント ソース。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.Dispose">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventListener" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)">
      <summary>指定した詳細レベル以下の指定したイベント ソースのイベントを有効にします。</summary>
      <param name="eventSource">イベントを有効にするイベント ソース。</param>
      <param name="level">有効にするイベントのレベル。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>指定した詳細レベル以下で、キーワード フラグが一致している指定したイベント ソースのイベントを有効にします。</summary>
      <param name="eventSource">イベントを有効にするイベント ソース。</param>
      <param name="level">有効にするイベントのレベル。</param>
      <param name="matchAnyKeyword">イベントを有効にするために必要なキーワード フラグ。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>指定した詳細レベル以下で、イベント キーワード フラグが一致し、引数が一致している指定したイベント ソースのイベントを有効にします。</summary>
      <param name="eventSource">イベントを有効にするイベント ソース。</param>
      <param name="level">有効にするイベントのレベル。</param>
      <param name="matchAnyKeyword">イベントを有効にするために必要なキーワード フラグ。</param>
      <param name="arguments">イベントを有効にするために一致させる引数。</param>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated">
      <summary>イベント ソース (<see cref="T:System.Diagnostics.Tracing.EventSource" /> オブジェクト) がディスパッチャーにアタッチされている場合に発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)">
      <summary>指定されたイベント ソースを表す負でない小さい数値を取得します。</summary>
      <param name="eventSource">インデックスを検索するイベント ソース。</param>
      <returns>指定されたイベント ソースを表す負でない小さい数値。</returns>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventListener.EventWritten">
      <summary>イベント リスナーがイベントを有効にしたイベント ソース (<see cref="T:System.Diagnostics.Tracing.EventSource" /> オブジェクト) によってイベントが記述されたときに発生します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
      <summary>イベント リスナーが作成される場合や、新しいイベント ソースがリスナーにアタッチされる場合に、既存のすべてのイベント ソースに対して呼び出されます。</summary>
      <param name="eventSource">イベント ソース。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
      <summary>イベント リスナーがイベントを有効にしたイベント ソースによってイベントが記述されたときに呼び出されます。</summary>
      <param name="eventData">イベントを表すイベント引数。</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventManifestOptions">
      <summary>イベント ソースの ETW マニフェストの生成方法を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllCultures">
      <summary>提供されるすべてのサテライト アセンブリに対して、ローカリゼーション フォルダーの下にリソース ノードを生成します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.AllowEventSourceOverride">
      <summary>現在の <see cref="T:System.Diagnostics.Tracing.EventSource" /> が、書き込みメソッドに渡されるユーザー定義型の基本クラスでなければならないという、既定の動作をオーバーライドします。 これにより、.NET イベント ソースの検証が可能になります。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.None">
      <summary>オプションは指定されていません。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.OnlyIfNeededForRegistration">
      <summary>マニフェストは、イベント ソースがホスト コンピューターに登録される必要がある場合にのみ生成されます。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventManifestOptions.Strict">
      <summary>マニフェスト ファイルの書き込み時に何らかの不一致が起こった場合、例外が発生します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventOpcode">
      <summary>イベント ソースがイベントにアタッチする標準オペレーション コードを定義します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStart">
      <summary>トレース コレクション開始イベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.DataCollectionStop">
      <summary>トレース コレクション停止イベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Extension">
      <summary>拡張イベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Info">
      <summary>情報イベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Receive">
      <summary>アプリケーション内のアクティビティがデータを受信したときに発行されるイベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Reply">
      <summary>アプリケーション内のアクティビティがイベントに応答した後で発行されるイベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Resume">
      <summary>アプリケーション内のアクティビティが中断状態から再開した後に発行されるイベント。 イベントは <see cref="F:System.Diagnostics.Tracing.EventOpcode.Suspend" /> オペレーション コードがあるイベントに続く必要があります。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Send">
      <summary>アプリケーション内のアクティビティがデータまたはシステム リソースを別のアクティビティに転送したときに発行されるイベント。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Start">
      <summary>アプリケーションが新しいトランザクションまたはアクティビティを開始したときに発行されるイベント。 <see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" /> コードがあるイベントが、<see cref="F:System.Diagnostics.Tracing.EventOpcode.Stop" /> コードのあるイベントを間にはさまずに複数個連続している場合は、このオペレーション コードが別のトランザクションまたはアクティビティに埋め込まれている可能性があります。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Stop">
      <summary>アプリケーション内のアクティビティまたはトランザクションが終了したときに発行されるイベント。 このイベントは、<see cref="F:System.Diagnostics.Tracing.EventOpcode.Start" /> オペレーション コードがあり、対になっていない直前のイベントに対応しています。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventOpcode.Suspend">
      <summary>アプリケーション内のアクティビティが中断されたときに発行されるイベント。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource">
      <summary>Windows イベント トレーシング (ETW: Event Tracing for Windows) のイベントを作成できます。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成し、基になる Windows コードでエラーが発生した場合に例外をスローするかどうかを指定します。</summary>
      <param name="throwOnEventWriteErrors">エラーが基になる Windows コードで発生した場合に例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>指定した構成設定を使用して <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="settings">イベント ソースに適用する構成設定を指定する列挙値のビットごとの組み合わせ。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>指定した設定と特徴が含まれるコントラクト以外のイベントで使用される <see cref="T:System.Diagnostics.Tracing.EventSource" /> の新しいインスタンスを初期化します。</summary>
      <param name="settings">イベント ソースに適用する構成設定を指定する列挙値のビットごとの組み合わせ。</param>
      <param name="traits">イベント ソースの特徴を指定するキー/値のペア。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> はキーと値のペアで指定されていません。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String)">
      <summary>指定した名前を使用して、<see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="eventSourceName">イベント ソースに適用する名前。 <see langword="null" /> にすることはできません。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings)">
      <summary>指定した名前と設定を使用して、<see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="eventSourceName">イベント ソースに適用する名前。 <see langword="null" /> にすることはできません。</param>
      <param name="config">イベント ソースに適用する構成設定を指定する列挙値のビットごとの組み合わせ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.#ctor(System.String,System.Diagnostics.Tracing.EventSourceSettings,System.String[])">
      <summary>指定した構成設定を使用して <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの新しいインスタンスを作成します。</summary>
      <param name="eventSourceName">イベント ソースに適用する名前。 <see langword="null" /> にすることはできません。</param>
      <param name="config">イベント ソースに適用する構成設定を指定する列挙値のビットごとの組み合わせ。</param>
      <param name="traits">イベント ソースの特徴を指定するキー/値のペア。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSourceName" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="traits" /> はキーと値のペアで指定されていません。</exception>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.ConstructionException">
      <summary>イベント ソースの作成中にスローされた例外を取得します。</summary>
      <returns>イベント ソースの作成中にスローされた例外、または例外がスローされなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId">
      <summary>現在のスレッドのアクティビティ ID を取得します。</summary>
      <returns>現在のスレッドのアクティビティ ID。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> クラスによって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
      <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
    </member>
    <member name="E:System.Diagnostics.Tracing.EventSource.EventCommandExecuted">
      <summary>コマンドのソースがイベント リスナーのときに発生します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSource.EventData">
      <summary>
        <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> のメソッドを使用して <see cref="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)" /> の高速なオーバーロードを作成するようにイベント データを提供します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.DataPointer">
      <summary>新しい <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> オーバーロードのデータへのポインターを取得または設定します。</summary>
      <returns>データへのポインター。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.EventData.Size">
      <summary>新しい <see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> オーバーロードのペイロード項目の数を取得または設定します。</summary>
      <returns>新しいオーバーロードのペイロードの項目数。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Finalize">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> オブジェクトがガベージ コレクションによって収集される前に、そのオブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String)">
      <summary>現在のイベント ソースに関連付けられている XML マニフェストの文字列を返します。</summary>
      <param name="eventSourceType">イベント ソースの型。</param>
      <param name="assemblyPathToIncludeInManifest">マニフェストのプロバイダー要素に格納するアセンブリ ファイル (.dll) のパス。</param>
      <returns>XML データ文字列。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GenerateManifest(System.Type,System.String,System.Diagnostics.Tracing.EventManifestOptions)">
      <summary>現在のイベント ソースに関連付けられている XML マニフェストの文字列を返します。</summary>
      <param name="eventSourceType">イベント ソースの型。</param>
      <param name="assemblyPathToIncludeInManifest">マニフェストのプロバイダー要素に格納するアセンブリ ファイル (.dll) のパス。</param>
      <param name="flags">マニフェストの生成方法を示す列挙値のビットごとの組み合わせ。</param>
      <returns>XML データ文字列または <see langword="null" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetGuid(System.Type)">
      <summary>イベント ソースのこの実装の一意の識別子を取得します。</summary>
      <param name="eventSourceType">イベント ソースの型。</param>
      <returns>このイベント ソース型の一意の識別子。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetName(System.Type)">
      <summary>イベント ソースのフレンドリ名を取得します。</summary>
      <param name="eventSourceType">イベント ソースの型。</param>
      <returns>イベント ソースの表示名。 既定値は、クラスの単純名です。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetSources">
      <summary>アプリケーション ドメインのすべてのイベント ソースのスナップショットを取得します。</summary>
      <returns>アプリケーション ドメインのすべてのイベント ソースの列挙。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.GetTrait(System.String)">
      <summary>指定したキーに関連付けられている特徴値を取得します。</summary>
      <param name="key">取得する特徴のキー。</param>
      <returns>指定のキーと関連付けられている特徴値。 キーが見つからないと、<see langword="null" /> が戻ります。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Guid">
      <summary>イベント ソースの一意の識別子。</summary>
      <returns>イベント ソースの一意の識別子。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled">
      <summary>現在のイベント ソースが有効かどうかを判断します。</summary>
      <returns>現在のイベント ソースが有効になっている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)">
      <summary>指定したレベルとキーワードを持つ現在のイベント ソースが有効かどうかを判断します。</summary>
      <param name="level">イベント ソースのレベル。</param>
      <param name="keywords">イベント ソースのキーワード。</param>
      <returns>イベント ソースが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.IsEnabled(System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Diagnostics.Tracing.EventChannel)">
      <summary>現在のイベント ソースが、指定したレベル、キーワード、およびチャネルを持つイベントに対して有効かどうかを判断します。</summary>
      <param name="level">チェックするイベント レベル。 イベント ソースは、そのレベルが <paramref name="level" /> 以上の場合に有効とみなされます。</param>
      <param name="keywords">チェックするイベント キーワード。</param>
      <param name="channel">チェックするイベント チャネル。</param>
      <returns>指定されたイベント レベル、キーワード、チャネルでイベント ソースが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。
このメソッドの結果は、特定のイベントがアクティブかどうかの近似にすぎません。  これを使用して、ログ記録が無効になっている場合の、ログ記録の高負荷な計算を回避します。 イベント ソースは、アクティビティを決定する追加のフィルター処理を持っている場合があります。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Name">
      <summary>イベント ソースから派生するクラスの表示名。</summary>
      <returns>派生クラスの表示名。  既定値は、クラスの単純名です。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)">
      <summary>現在のイベント ソースがコントローラーによって更新されるときに呼び出されます。</summary>
      <param name="command">イベントの引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>指定されたイベント ソースにコマンドを送信します。</summary>
      <param name="eventSource">コマンドを送信する先のイベント ソース。</param>
      <param name="command">送信するイベント コマンド。</param>
      <param name="commandArguments">イベント コマンドの引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid)">
      <summary>現在のスレッドのアクティビティ ID を設定します。</summary>
      <param name="activityId">現在のスレッドの新しいアクティビティ ID、または現在のスレッドの作業が任意のアクティビティに関連付けられていないことを示す <see cref="F:System.Guid.Empty" />。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId(System.Guid,System.Guid@)">
      <summary>現在のスレッドでは、アクティビティ ID を設定し、前のアクティビティの ID を返します。</summary>
      <param name="activityId">現在のスレッドの新しいアクティビティ ID、または現在のスレッドの作業が任意のアクティビティに関連付けられていないことを示す <see cref="F:System.Guid.Empty" />。</param>
      <param name="oldActivityThatWillContinue">このメソッドが返されるとき、現在のスレッドの前のアクティビティの ID を含みます。</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSource.Settings">
      <summary>このイベント ソースに適用される設定を取得します。</summary>
      <returns>このイベント ソースに適用される設定。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.ToString">
      <summary>現在のイベント ソース インスタンスを文字列で表現したものを取得します。</summary>
      <returns>現在のイベント ソースを識別する、名前と一意の識別子。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String)">
      <summary>フィールドを除いてイベントを書き込みます。ただし、指定した名前および既定のオプションを含みます。</summary>
      <param name="eventName">書き込むイベントの名前。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> は <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)">
      <summary>フィールドを除いてイベントを書き込みます。ただし、指定した名前およびオプションを含みます。</summary>
      <param name="eventName">書き込むイベントの名前。</param>
      <param name="options">イベントのレベル、キーワード、およびオペレーション コードなどのオプション。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventName" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,``0)">
      <summary>指定した名前とデータを使用してイベントを書き込みます。</summary>
      <param name="eventName">イベントの名前です。</param>
      <param name="data">イベントのデータ。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 属性のマークが付いている必要があります。</param>
      <typeparam name="T">イベントとそれに関連するデータを定義する型。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 属性のマークが付いている必要があります。</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)">
      <summary>指定した名前、イベント データ、およびオプションを使用してイベントを書き込みます。</summary>
      <param name="eventName">イベントの名前です。</param>
      <param name="options">イベント オプション。</param>
      <param name="data">イベントのデータ。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 属性のマークが付いている必要があります。</param>
      <typeparam name="T">イベントとそれに関連するデータを定義する型。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 属性のマークが付いている必要があります。</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,``0@)">
      <summary>指定した名前、オプション、およびイベント データを使用してイベントを書き込みます。</summary>
      <param name="eventName">イベントの名前です。</param>
      <param name="options">イベント オプション。</param>
      <param name="data">イベントのデータ。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 属性のマークが付いている必要があります。</param>
      <typeparam name="T">イベントとそれに関連するデータを定義する型。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 属性のマークが付いている必要があります。</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions@,System.Guid@,System.Guid@,``0@)">
      <summary>指定した名前、オプション、関連するアクティビティ、およびイベント データを使用してイベントを書き込みます。</summary>
      <param name="eventName">イベントの名前です。</param>
      <param name="options">イベント オプション。</param>
      <param name="activityId">イベントに関連付けられたアクティビティの ID。</param>
      <param name="relatedActivityId">関連付けられたアクティビティの ID。関連付けられたアクティビティがない場合は <see cref="F:System.Guid.Empty" />。</param>
      <param name="data">イベントのデータ。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventDataAttribute" /> 属性のマークが付いている必要があります。</param>
      <typeparam name="T">イベントとそれに関連するデータを定義する型。 この型は匿名型であるか、<see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> 属性のマークが付いている必要があります。</typeparam>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32)">
      <summary>指定されたイベント識別子を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。 有効値の範囲は 0 ～ 65535 です。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Byte[])">
      <summary>指定されたイベント識別子とバイト配列引数を使用してイベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">バイト配列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32)">
      <summary>指定されたイベント識別子と 32 ビット整数引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32)">
      <summary>指定されたイベント識別子と 32 ビット整数引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">整数引数。</param>
      <param name="arg2">整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指定されたイベント識別子と 32 ビット整数引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">整数引数。</param>
      <param name="arg2">整数引数。</param>
      <param name="arg3">整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int32,System.String)">
      <summary>指定されたイベント識別子と 32 ビット整数および文字列引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。 有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">32 ビット整数引数。</param>
      <param name="arg2">文字列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64)">
      <summary>指定されたイベント識別子と 64 ビット整数引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">64 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Byte[])">
      <summary>指定した識別子と 64 ビット整数およびバイト配列引数を使用して、イベント データを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">64 ビット整数引数。</param>
      <param name="arg2">バイト配列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64)">
      <summary>指定されたイベント識別子と 64 ビットの引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">64 ビット整数引数。</param>
      <param name="arg2">64 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.Int64,System.Int64)">
      <summary>指定されたイベント識別子と 64 ビットの引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">64 ビット整数引数。</param>
      <param name="arg2">64 ビット整数引数。</param>
      <param name="arg3">64 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Int64,System.String)">
      <summary>指定されたイベント識別子と 64 ビット整数および文字列引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">64 ビット整数引数。</param>
      <param name="arg2">文字列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.Object[])">
      <summary>指定されたイベント識別子と引数の配列を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="args">オブジェクトの配列。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String)">
      <summary>指定されたイベント識別子と文字列引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32)">
      <summary>指定されたイベント識別子と引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
      <param name="arg2">32 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int32,System.Int32)">
      <summary>指定されたイベント識別子と引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
      <param name="arg2">32 ビット整数引数。</param>
      <param name="arg3">32 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.Int64)">
      <summary>指定されたイベント識別子と引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
      <param name="arg2">64 ビット整数引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String)">
      <summary>指定されたイベント識別子と文字列引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
      <param name="arg2">文字列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEvent(System.Int32,System.String,System.String,System.String)">
      <summary>指定されたイベント識別子と文字列引数を使用して、イベントを書き込みます。</summary>
      <param name="eventId">イベント識別子。  有効値の範囲は 0 ～ 65535 です。</param>
      <param name="arg1">文字列引数。</param>
      <param name="arg2">文字列引数。</param>
      <param name="arg3">文字列引数。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventCore(System.Int32,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>指定したイベント識別子およびイベント データを使用して、<see cref="Overload:System.Diagnostics.Tracing.EventSource.WriteEvent" /> の新しいオーバーロードを作成します。</summary>
      <param name="eventId">イベント識別子。</param>
      <param name="eventDataCount">イベント データ項目数。</param>
      <param name="data">イベント データを格納している構造体。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId(System.Int32,System.Guid,System.Object[])">
      <summary>現在のアクティビティが別のアクティビティに関連していることを示すイベントを書き込みます。</summary>
      <param name="eventId">
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> のこのイベントを一意に識別する識別子。</param>
      <param name="relatedActivityId">関連するアクティビティ識別子。</param>
      <param name="args">イベント データを格納するオブジェクトの配列。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore(System.Int32,System.Guid*,System.Int32,System.Diagnostics.Tracing.EventSource.EventData*)">
      <summary>現在のアクティビティが別のアクティビティに関連していることを示すイベントを書き込みます。</summary>
      <param name="eventId">
        <see cref="T:System.Diagnostics.Tracing.EventSource" /> のこのイベントを一意に識別する識別子。</param>
      <param name="relatedActivityId">関連するアクティビティ ID の GUID へのポインター。</param>
      <param name="eventDataCount">
        <paramref name="data" /> フィールド内の項目の数。</param>
      <param name="data">イベント データ フィールドの最初の項目へのポインター。</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceAttribute">
      <summary>Windows イベント トレーシング (ETW) の名前をイベント ソース クラスの名前と別に定義できるようにします。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSourceAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Guid">
      <summary>イベント ソース識別子を取得または設定します。</summary>
      <returns>イベントのソース識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.LocalizationResources">
      <summary>ローカリゼーション リソース ファイルの名前を取得または設定します。</summary>
      <returns>ローカリゼーション リソース ファイル名。ローカリゼーション リソース ファイルが見つからない場合は、<see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceAttribute.Name">
      <summary>イベント ソースの名前を取得または設定します。</summary>
      <returns>イベント ソースの名前。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs">
      <summary>
        <see cref="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" /> イベントのデータを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSourceCreatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceCreatedEventArgs.EventSource">
      <summary>リスナーにアタッチするイベント ソースを取得します。</summary>
      <returns>リスナーにアタッチするイベント ソース。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceException">
      <summary>Windows イベント トレーシング (ETW) 中にエラーが発生するとスローされる例外。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventSourceException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Diagnostics.Tracing.EventSourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String)">
      <summary>指定したエラー メッセージを使用して、<see cref="T:System.Diagnostics.Tracing.EventSourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">エラーを説明するメッセージ。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.EventSourceException.#ctor(System.String,System.Exception)">
      <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Diagnostics.Tracing.EventSourceException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="innerException">現在の例外の原因である例外。または、内部例外を指定しない場合は <see langword="null" />。</param>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceOptions">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventSource.Write``1(System.String,System.Diagnostics.Tracing.EventSourceOptions,``0)" /> メソッドが呼び出される際のログ レベル、キーワード、オペレーション コードといった既定のイベント設定のオーバーライドを指定します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.ActivityOptions">
      <summary>このイベント ソースに定義されているアクティビティ オプション。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventActivityOptions" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Keywords">
      <summary>イベントに適用されるキーワードを取得または設定します。 このプロパティが設定されていない場合、イベントのキーワードは <see langword="None" /> になります。</summary>
      <returns>イベントに適用されるキーワード。キーワードが設定されていない場合は <see langword="None" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Level">
      <summary>イベントに適用されるイベント レベルを取得または設定します。</summary>
      <returns>イベントのイベント レベル。 設定しない場合、既定値は Verbose (5) です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Opcode">
      <summary>指定したイベントで使用するオペレーション コードを取得または設定します。</summary>
      <returns>指定したイベントで使用するオペレーション コード。 設定しない場合、既定値は <see langword="Info" /> (0) です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventSourceOptions.Tags">
      <summary>このイベント ソースに対して定義されているイベント タグ。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventTags" /> を返します。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventSourceSettings">
      <summary>イベント ソースの構成オプションを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.Default">
      <summary>有効になっている特別な構成オプションはありません。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwManifestEventFormat">
      <summary>ETW リスナーはイベント発生時にマニフェストに基づく形式を使用する必要があります。 このオプションの設定は、ETW リスナーがイベント発生時にマニフェストに基づく形式を使用する必要があることのディレクティブです。 これは、保護された <see cref="T:System.Diagnostics.Tracing.EventSource" /> コンストラクターのいずれかを使用して、<see cref="T:System.Diagnostics.Tracing.EventSource" /> から派生した型を定義する際の既定のオプションです。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.EtwSelfDescribingEventFormat">
      <summary>ETW リスナーは自己記述型のイベント形式を使用する必要があります。 これは、パブリックの <see cref="T:System.Diagnostics.Tracing.EventSource" /> コンストラクターのいずれかを使用して、<see cref="T:System.Diagnostics.Tracing.EventSource" /> の新しいインスタンスを作成する際の既定のオプションです。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventSourceSettings.ThrowOnEventWriteErrors">
      <summary>エラーが発生すると、イベント ソースは例外をスローします。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTags">
      <summary>アクティビティの開始イベントおよび停止イベントの追跡を指定します。 使用するのは下位 24 ビットのみでなければなりません。 詳細については、次のトピックを参照してください。 <see cref="T:System.Diagnostics.Tracing.EventSourceOptions" /> および <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" /></summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTags.None">
      <summary>タグがないこと、そして 0 に等しいことを指定します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventTask">
      <summary>イベントに適用されるタスクを定義します。</summary>
    </member>
    <member name="F:System.Diagnostics.Tracing.EventTask.None">
      <summary>未定義タスク。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.EventWrittenEventArgs">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" /> コールバックのデータを提供します。</summary>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.ActivityId">
      <summary>イベントが書き込まれたスレッドのアクティビティ ID を取得します。</summary>
      <returns>イベントが書き込まれたスレッドのアクティビティ ID。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Channel">
      <summary>イベントのチャネルを取得します。</summary>
      <returns>イベントのチャネル。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventId">
      <summary>イベント識別子を取得します。</summary>
      <returns>イベント識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventName">
      <summary>イベントの名前を取得します。</summary>
      <returns>イベントの名前です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.EventSource">
      <summary>イベント ソース オブジェクトを取得します。</summary>
      <returns>イベント ソース オブジェクト。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Keywords">
      <summary>イベントのキーワードを取得します。</summary>
      <returns>イベントのキーワード。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Level">
      <summary>イベントのレベルを取得します。</summary>
      <returns>イベントのレベル。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Message">
      <summary>イベントに関するメッセージを取得します。</summary>
      <returns>イベントに関するメッセージ。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Opcode">
      <summary>イベントのオペレーション コードを取得します。</summary>
      <returns>イベントのオペレーション コード。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.OSThreadId">
      <summary>イベントを記述した OS スレッドのスレッド ID を取得します。 (.NET Core 2.2 と以降のみ。)</summary>
      <returns>イベントを記述した OS スレッドのスレッドの識別子です。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Payload">
      <summary>イベントのペイロードを取得します。</summary>
      <returns>イベントのペイロード。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.PayloadNames">
      <summary>イベントのプロパティ名を表す文字列の一覧を返します。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.RelatedActivityId">
      <summary>現在のインスタンスによって表されるアクティビティに関連付けられているアクティビティの ID を取得します。</summary>
      <returns>関連するアクティビティの識別子。または、関連するアクティビティがない場合は <see cref="F:System.Guid.Empty" />。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Tags">
      <summary>
        <see cref="M:System.Diagnostics.Tracing.EventSource.Write(System.String,System.Diagnostics.Tracing.EventSourceOptions)" /> メソッドへの呼び出しで指定されたタグを返します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.Tracing.EventTags" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Task">
      <summary>イベントのタスクを取得します。</summary>
      <returns>イベントのタスク。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.TimeStamp">
      <summary>元は <see cref="T:System.DateTime" /> タイムスタンプとして生成されたイベントの時刻を取得します。 (.NET Core 2.2 と以降のみ。)</summary>
      <returns>日付と時刻、イベントが記録された日時。 システムは、できるだけ高い精度を試みます。</returns>
    </member>
    <member name="P:System.Diagnostics.Tracing.EventWrittenEventArgs.Version">
      <summary>イベントのバージョンを取得します。</summary>
      <returns>イベントのバージョン。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingEventCounter">
      <summary>ランタイムの例外数など、増え続ける変数に対して <see cref="T:System.Diagnostics.Tracing.EventCounter" /> のバリアントを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource)">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">この <see cref="T:System.Diagnostics.Tracing.IncrementingEventCounter" /> インスタンスの名前。</param>
      <param name="eventSource">イベント ソース。</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingEventCounter.DisplayRateTimeScale">
      <summary>このメトリックを表示する頻度を取得します。値の設定も可能です。</summary>
      <returns>このメトリックを表示する速度を取得します。値の設定も可能です。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.Increment(System.Double)">
      <summary>次のタイマー間隔でカウンターにより公開される累計に値を追加します。</summary>
      <param name="increment">累計をインクリメントする値。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingEventCounter.ToString">
      <summary>インクリメントされる現在のイベント カウンター インスタンスの文字列形式を返します。</summary>
      <returns>インクリメントされる現在のイベント カウンターの名前および増分値。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.IncrementingPollingCounter">
      <summary>ランタイムの例外数など、増え続ける変数に対して <see cref="T:System.Diagnostics.Tracing.EventCounter" /> のバリアントを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">この <see cref="T:System.Diagnostics.Tracing.IncrementingPollingCounter" /> インスタンスの名前。</param>
      <param name="eventSource">このインスタンスがその一部であるイベント ソース。</param>
      <param name="totalValueProvider">値のポーリングに使用するメソッド。</param>
    </member>
    <member name="P:System.Diagnostics.Tracing.IncrementingPollingCounter.DisplayRateTimeScale">
      <summary>このメトリックを表示する頻度を取得します。値の設定も可能です。</summary>
      <returns>このメトリックを表示する頻度。</returns>
    </member>
    <member name="M:System.Diagnostics.Tracing.IncrementingPollingCounter.ToString">
      <summary>インクリメントされる現在のポーリング カウンター インスタンスの文字列形式を返します。</summary>
      <returns>インクリメントされる現在のポーリング カウンターの名前と増分値。</returns>
    </member>
    <member name="T:System.Diagnostics.Tracing.NonEventAttribute">
      <summary>イベントを生成していないメソッドを識別します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.NonEventAttribute.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.NonEventAttribute" /> クラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="T:System.Diagnostics.Tracing.PollingCounter">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.EventCounter" /> と同様の統計を収集し、計算する <see cref="T:System.Diagnostics.Tracing.EventCounter" /> のバリアントを提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.#ctor(System.String,System.Diagnostics.Tracing.EventSource,System.Func{System.Double})">
      <summary>
        <see cref="T:System.Diagnostics.Tracing.PollingCounter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="name">この <see cref="T:System.Diagnostics.Tracing.PollingCounter" /> インスタンスの名前。</param>
      <param name="eventSource">イベント ソース。</param>
      <param name="metricProvider">値のポーリングに使用するメソッド。</param>
    </member>
    <member name="M:System.Diagnostics.Tracing.PollingCounter.ToString">
      <summary>現在のポーリング カウンター インスタンスの文字列形式を返します。</summary>
      <returns>現在のポーリング カウンターの名前と平均値。</returns>
    </member>
  </members>
</doc>