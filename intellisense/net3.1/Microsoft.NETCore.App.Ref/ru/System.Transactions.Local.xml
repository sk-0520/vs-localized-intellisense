<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Transactions.Local</name>
  </assembly>
  <members>
    <member name="T:System.Transactions.CommittableTransaction">
      <summary>Описывает фиксируемую транзакцию.</summary>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" /> заданным значением <paramref name="timeout" />.</summary>
      <param name="timeout">Максимальное время, в течение которого может существовать транзакция до ее прерывания.</param>
      <exception cref="T:System.PlatformNotSupportedException">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.CommittableTransaction" /> с заданными параметрами транзакции.</summary>
      <param name="options">Структура <see cref="T:System.Transactions.TransactionOptions" /> с описанием параметров, которые должны использоваться для новой транзакции.</param>
      <exception cref="T:System.PlatformNotSupportedException">Попытка создать транзакцию в системе Windows 98, Windows 98 Second Edition или Windows Millennium Edition.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> недопустим.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)">
      <summary>Начинает попытку зафиксировать транзакцию асинхронно.</summary>
      <param name="asyncCallback">Делегат <see cref="T:System.AsyncCallback" />, который вызывается при завершении транзакции. Этот параметр может иметь значение <see langword="null" />. В этом случае приложение не уведомляется о завершении транзакции и должно использовать интерфейс <see cref="T:System.IAsyncResult" /> для проверки завершения и, соответственно, ждать или вызвать метод <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> для ожидания завершения.</param>
      <param name="asyncState">Объект, который может содержать произвольную информацию о состоянии, связанную с асинхронной фиксацией. Этот объект передается обратному вызову и не интерпретируется инфраструктурой <see cref="N:System.Transactions" />. Допускается пустая ссылка.</param>
      <returns>Интерфейс <see cref="T:System.IAsyncResult" />, который может использоваться вызывающей стороной для проверки состояния асинхронной операции или ожидания завершения операции.</returns>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.Commit">
      <summary>Пытается зафиксировать транзакцию.</summary>
      <exception cref="T:System.Transactions.TransactionInDoubtException">В транзакции вызывается метод <see cref="M:System.Transactions.CommittableTransaction.Commit" />, и транзакция переходит в состояние <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</exception>
      <exception cref="T:System.Transactions.TransactionAbortedException">Вызывается метод <see cref="M:System.Transactions.CommittableTransaction.Commit" />, и выполняется первоначальный откат транзакции.</exception>
    </member>
    <member name="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)">
      <summary>Завершает попытку зафиксировать транзакцию асинхронно.</summary>
      <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />, связанный с асинхронной фиксацией.</param>
      <exception cref="T:System.Transactions.TransactionAbortedException">Вызывается метод <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />, и выполняется первоначальный откат транзакции.</exception>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState">
      <summary>Получает объект, предоставленный в качестве последнего параметра вызова метода <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</summary>
      <returns>Объект, предоставленный в качестве последнего параметра вызова метода <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" />.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle">
      <summary>Возвращает дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</summary>
      <returns>Дескриптор <see cref="T:System.Threading.WaitHandle" />, используемый для ожидания завершения асинхронной операции.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously">
      <summary>Возвращает указатель, позволяющий определить, синхронно ли выполнена асинхронная операция фиксации.</summary>
      <returns>
        <see langword="true" />, если асинхронная операция фиксации выполнена синхронно; в противном случае — <see langword="false" />. Это свойство всегда возвращает значение <see langword="false" />, даже если операция выполнена синхронно.</returns>
    </member>
    <member name="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted">
      <summary>Получает указатель, позволяющий определить, выполнена ли асинхронная операция фиксации.</summary>
      <returns>Значение <see langword="true" />, если операция выполнена; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.Transactions.DependentCloneOption">
      <summary>Определяет тип зависимой транзакции, которую требуется создать.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.BlockCommitUntilComplete">
      <summary>Зависимая транзакция блокирует процесс фиксации транзакции, пока не истечет тайм-аут родительской транзакции, или не будет вызван метод <see cref="M:System.Transactions.DependentTransaction.Complete" />. В этом случае могут быть выполнены дополнительные операции по транзакции и созданы новые зачисления.</summary>
    </member>
    <member name="F:System.Transactions.DependentCloneOption.RollbackIfNotComplete">
      <summary>Зависимая транзакция автоматически прерывает транзакцию, если для родительской транзакции до вызова метода <see cref="M:System.Transactions.DependentTransaction.Complete" /> вызывается метод Commit.</summary>
    </member>
    <member name="T:System.Transactions.DependentTransaction">
      <summary>Описывает клон транзакции, гарантирующий невозможность фиксации транзакции до тех пор, пока приложение не дойдет до выполнения последних действий, связанных с операциями по транзакции. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Transactions.DependentTransaction.Complete">
      <summary>Пытается завершить зависимую транзакцию.</summary>
      <exception cref="T:System.Transactions.TransactionException">Любая попытка выполнения дополнительных операций по транзакции после вызова этого метода. К ним относится вызов методов, таких как <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" />, или какие-либо операции сериализации по транзакции.</exception>
    </member>
    <member name="T:System.Transactions.Enlistment">
      <summary>Облегчает взаимодействие между включенным в список участником транзакции и диспетчером транзакций на завершающем этапе транзакции.</summary>
    </member>
    <member name="M:System.Transactions.Enlistment.Done">
      <summary>Указывает, что участник транзакции завершил свою работу.</summary>
    </member>
    <member name="T:System.Transactions.EnlistmentOptions">
      <summary>Определяет, должен ли объект быть присоединен в ходе подготовительной фазы.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired">
      <summary>Объект должен осуществить присоединение в ходе начальной фазы процесса фиксации.</summary>
    </member>
    <member name="F:System.Transactions.EnlistmentOptions.None">
      <summary>Объекту не требуется присоединение в ходе начальной фазы процесса фиксации.</summary>
    </member>
    <member name="T:System.Transactions.EnterpriseServicesInteropOption">
      <summary>Указывает способ взаимодействия распределенных транзакций с транзакциями COM+.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Automatic">
      <summary>Поиск существующего контекста COM+ и синхронизация с этим контекстом, если он существует.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.Full">
      <summary>Контекст <see cref="N:System.EnterpriseServices" /> (который можно найти, вызвав статический метод <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> класса <see cref="T:System.EnterpriseServices.ContextUtil" />) и внешняя транзакция <see cref="N:System.Transactions" /> (которую можно найти, вызвав статический метод <see cref="P:System.Transactions.Transaction.Current" /> класса <see cref="T:System.Transactions.Transaction" />) всегда синхронизируются. Это приводит к снижению производительности, поскольку может потребоваться создание новых контекстов <see cref="N:System.EnterpriseServices" />.</summary>
    </member>
    <member name="F:System.Transactions.EnterpriseServicesInteropOption.None">
      <summary>Между объектами <see cref="P:System.EnterpriseServices.ContextUtil.Transaction" /> и <see cref="P:System.Transactions.Transaction.Current" /> синхронизация отсутствует.</summary>
    </member>
    <member name="T:System.Transactions.HostCurrentTransactionCallback">
      <summary>Предоставляет механизм для обеспечения средой внешнего размещения собственного представления по умолчанию для свойства <see cref="P:System.Transactions.Transaction.Current" />.</summary>
      <returns>Объект <see cref="T:System.Transactions.Transaction" />.</returns>
    </member>
    <member name="T:System.Transactions.IDtcTransaction">
      <summary>Описывает транзакцию DTC.</summary>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Abort(System.IntPtr,System.Int32,System.Int32)">
      <summary>Прерывает транзакцию.</summary>
      <param name="reason">Дополнительный объект <see cref="T:System.EnterpriseServices.BOID" />, указывающий причину отмены транзакции. Этот параметр может иметь значение <see langword="null" />, что говорит об отсутствии причин для прерывания.</param>
      <param name="retaining">Это значение должно быть равно <see langword="false" />.</param>
      <param name="async">Если параметр <paramref name="async" /> имеет значение <see langword="true" />, выполняется асинхронная отмена и для изучения результата транзакции вызывающий объект должен использовать <see langword="ITransactionOutcomeEvents" />.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.Commit(System.Int32,System.Int32,System.Int32)">
      <summary>Фиксирует транзакцию.</summary>
      <param name="retaining">Это значение должно быть равно <see langword="false" />.</param>
      <param name="commitType">Значение, взятое из перечисления OLE DB <see langword="XACTTC" />.</param>
      <param name="reserved">Это значение должно быть равно нулю.</param>
    </member>
    <member name="M:System.Transactions.IDtcTransaction.GetTransactionInfo(System.IntPtr)">
      <summary>Извлекает сведения о транзакции.</summary>
      <param name="transactionInformation">Указатель на структуру <see cref="T:System.EnterpriseServices.XACTTRANSINFO" />, отведенную для вызывающего объекта, которая будет получать сведения о транзакции. Это значение не должно быть равно <see langword="null" />.</param>
    </member>
    <member name="T:System.Transactions.IEnlistmentNotification">
      <summary>Описывает интерфейс, который должен реализовать диспетчер ресурсов, чтобы предоставить обратные вызовы уведомлений о двухфазной фиксации диспетчеру транзакций при внесении в список для участия.</summary>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)">
      <summary>Уведомляет включенный в список объект о том, что транзакция фиксируется.</summary>
      <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)">
      <summary>Уведомляет включенный в список объект о сомнительном состоянии транзакции.</summary>
      <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)">
      <summary>Уведомляет включенный в список объект о том, что транзакция подготавливается для фиксации.</summary>
      <param name="preparingEnlistment">Объект <see cref="T:System.Transactions.PreparingEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)">
      <summary>Уведомляет включенный в список объект о том, что выполняется откат транзакции (ее прерывание).</summary>
      <param name="enlistment">Объект <see cref="T:System.Transactions.Enlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="T:System.Transactions.IPromotableSinglePhaseNotification">
      <summary>Описывает объект, действующий в качестве делегата фиксации для нераспределенной транзакции, которая является внутренней для диспетчера ресурсов.</summary>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize">
      <summary>Уведомляет участника транзакции об успешном выполнении зачисления.</summary>
      <exception cref="T:System.Transactions.TransactionException">Попытка включения в список или сериализации транзакции.</exception>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)">
      <summary>Уведомляет включенный в список объект о выполняемом откате транзакции.</summary>
      <param name="singlePhaseEnlistment">Объект <see cref="T:System.Transactions.SinglePhaseEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Уведомляет включенный в список объект о выполняемой фиксации транзакции.</summary>
      <param name="singlePhaseEnlistment">Интерфейс <see cref="T:System.Transactions.SinglePhaseEnlistment" />, используемый для передачи ответа диспетчеру транзакций.</param>
    </member>
    <member name="T:System.Transactions.ISimpleTransactionSuperior">
      <summary>Представляет транзакцию, которая не является корневой, но может быть расширена, чтобы находиться под управлением MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ISimpleTransactionSuperior.Rollback">
      <summary>Уведомляет включенный в список объект о выполняемом откате транзакции.</summary>
    </member>
    <member name="T:System.Transactions.ISinglePhaseNotification">
      <summary>Описывает объект ресурса, который поддерживает оптимизацию однофазной фиксации для участия в транзакции.</summary>
    </member>
    <member name="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)">
      <summary>Представляет реализацию диспетчером ресурсов функции обратного вызова для оптимизации однофазной фиксации.</summary>
      <param name="singlePhaseEnlistment">Объект <see cref="T:System.Transactions.SinglePhaseEnlistment" />, используемый для передачи отклика диспетчеру транзакций.</param>
    </member>
    <member name="T:System.Transactions.IsolationLevel">
      <summary>Указывает уровень изоляции транзакции.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Chaos">
      <summary>Ожидающие изменения более изолированных транзакций не могут быть перезаписаны.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadCommitted">
      <summary>Во время обработки транзакции переменные данные не могут считываться, но могут изменяться.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.ReadUncommitted">
      <summary>Во время обработки транзакции переменные данные могут считываться и изменяться.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.RepeatableRead">
      <summary>Во время обработки транзакции переменные данные могут считываться, но не могут изменяться. В ходе транзакции возможно добавление новых данных.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Serializable">
      <summary>Во время обработки транзакции переменные данные могут считываться, но не могут изменяться. Добавление новых данных невозможно.</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Snapshot">
      <summary>Переменные данные могут считываться. Перед тем, как транзакция изменяет данные, она проверяет, не изменены ли данные другой транзакцией после их первоначального считывания. Если данные обновлены, возникает ошибка. Это позволяет транзакции получить значение данных, зафиксированное ранее.
При попытке повысить уровень транзакции, созданной с помощью уровня изоляции <see langword="Snapshot" />, возникает исключение <see cref="T:System.InvalidOperationException" /> с сообщением об ошибке: "Для транзакций с моментальным снимком IsolationLevel нельзя повысить уровень".</summary>
    </member>
    <member name="F:System.Transactions.IsolationLevel.Unspecified">
      <summary>Используется уровень изоляции, отличный от указанного, однако этот уровень не может быть определен. При задании этого значения вызывается исключение.</summary>
    </member>
    <member name="T:System.Transactions.ITransactionPromoter">
      <summary>Описывает делегированную транзакцию для существующей транзакции, которая может быть расширена, чтобы при необходимости находиться под управлением MSDTC.</summary>
    </member>
    <member name="M:System.Transactions.ITransactionPromoter.Promote">
      <summary>Уведомляет включенный в список объект о затребованной эскалации делегированной транзакции.</summary>
      <returns>Токен распространения передатчика или приемника, который маршалирует распределенную транзакцию. Для получения дополнительной информации см. <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />.</returns>
    </member>
    <member name="T:System.Transactions.PreparingEnlistment">
      <summary>Упрощает взаимодействие между присоединенным участником транзакции и диспетчером транзакций в ходе подготовительной фазы транзакции.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback">
      <summary>Указывает на необходимость отката транзакции.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.ForceRollback(System.Exception)">
      <summary>Указывает на необходимость отката транзакции.</summary>
      <param name="e">Объяснение, почему запускается откат.</param>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.Prepared">
      <summary>Указывает, что транзакция может быть зафиксирована.</summary>
    </member>
    <member name="M:System.Transactions.PreparingEnlistment.RecoveryInformation">
      <summary>Получает сведения для восстановлении перечисления.</summary>
      <returns>Сведения для восстановлении присоединения.</returns>
      <exception cref="T:System.InvalidOperationException">Попытка получить сведения для восстановлении внутри переменного перечисления, для которого не генерируется никакой информации для восстановления.</exception>
    </member>
    <member name="T:System.Transactions.SinglePhaseEnlistment">
      <summary>Предоставляет набор обратных вызовов, которые облегчают взаимодействие между участником, присоединенным к однофазной фиксации, и диспетчером транзакций при получении уведомления <see cref="M:System.Transactions.ISinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted">
      <summary>Представляет функцию обратного вызова, используемую для передачи диспетчеру транзакций указания откатить транзакцию.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Aborted(System.Exception)">
      <summary>Представляет функцию обратного вызова, используемую для передачи диспетчеру транзакций указания откатить транзакцию, а также предоставляет объяснение.</summary>
      <param name="e">Объяснение, почему был инициирован откат.</param>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.Committed">
      <summary>Представляет функцию обратного вызова, используемую для передачи диспетчеру транзакций уведомления о том, что однофазная фиксация была успешно завершена.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt">
      <summary>Представляет функцию обратного вызова, используемую для передачи диспетчеру транзакций уведомления о том, что состояние транзакции — сомнительное.</summary>
    </member>
    <member name="M:System.Transactions.SinglePhaseEnlistment.InDoubt(System.Exception)">
      <summary>Представляет функцию обратного вызова, используемую для передачи диспетчеру транзакций уведомления о том, что состояние транзакции — сомнительное, а также предоставляет объяснение.</summary>
      <param name="e">Объяснение, почему транзакция сомнительна.</param>
    </member>
    <member name="T:System.Transactions.SubordinateTransaction">
      <summary>Представляет некорневую транзакцию, которая может быть делегирована. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.SubordinateTransaction" />.</summary>
      <param name="isoLevel">Уровень изоляции транзакции.</param>
      <param name="superior">
        <see cref="T:System.Transactions.ISimpleTransactionSuperior" />
      </param>
    </member>
    <member name="T:System.Transactions.Transaction">
      <summary>Представляет транзакцию.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Clone">
      <summary>Создает копию транзакции.</summary>
      <returns>Объект <see cref="T:System.Transactions.Transaction" />, являющийся копией текущего объекта транзакции.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.Current">
      <summary>Возвращает или задает внешнюю транзакцию.</summary>
      <returns>Элемент <see cref="T:System.Transactions.Transaction" />, описывающий текущую транзакцию.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)">
      <summary>Создает зависимую копию транзакции.</summary>
      <param name="cloneOption">Значение <see cref="T:System.Transactions.DependentCloneOption" />, определяющее тип создаваемой зависимой транзакции.</param>
      <returns>Объект <see cref="T:System.Transactions.DependentTransaction" />, представляющий зависимую копию.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Dispose">
      <summary>Освобождает ресурсы, удерживаемые объектом.</summary>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Присоединяет диспетчер долгосрочных ресурсов, поддерживающий двухфазную фиксацию, для участия в транзакции.</summary>
      <param name="resourceManagerIdentifier">Уникальный идентификатор диспетчера ресурсов, который должен оставаться неизменным при сбое в работе диспетчера ресурсов или при перезагрузке.</param>
      <param name="enlistmentNotification">Объект, реализующий интерфейс <see cref="T:System.Transactions.IEnlistmentNotification" /> для получения уведомлений о двухфазной фиксации.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, если диспетчер ресурсов будет выполнять дополнительные действия на этапе подготовки.</param>
      <returns>Объект <see cref="T:System.Transactions.Enlistment" />, который описывает перечисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Присоединяет диспетчер долгосрочных ресурсов, поддерживающий однофазную оптимизацию фиксации, для участия в транзакции.</summary>
      <param name="resourceManagerIdentifier">Уникальный идентификатор диспетчера ресурсов, который должен оставаться неизменным при сбое в работе диспетчера ресурсов или при перезагрузке.</param>
      <param name="singlePhaseNotification">Объект, реализующий интерфейс <see cref="T:System.Transactions.ISinglePhaseNotification" />, который должен быть способен получать уведомления об однофазной и двухфазной фиксации.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, если диспетчер ресурсов будет выполнять дополнительные действия на этапе подготовки.</param>
      <returns>Объект <see cref="T:System.Transactions.Enlistment" />, который описывает перечисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)">
      <summary>Присоединяет диспетчер ресурсов, имеющий внутреннюю транзакцию, с помощью повышаемого однофазного зачисления (PSPE).</summary>
      <param name="promotableSinglePhaseNotification">Интерфейс <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" />, реализованный участником.</param>
      <returns>Реализация интерфейса <see cref="T:System.Transactions.SinglePhaseEnlistment" />, описывающая зачисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Присоединяет диспетчер ресурсов, имеющий внутреннюю транзакцию, с помощью повышаемого однофазного зачисления (PSPE).</summary>
      <param name="promotableSinglePhaseNotification">Интерфейс <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" /> , реализованный участником.</param>
      <param name="promoterType">Тип обработчика распределенных транзакций.</param>
      <returns>Реализация интерфейса <see cref="T:System.Transactions.SinglePhaseEnlistment" />, описывающая зачисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)">
      <summary>Включает диспетчер быстро изменяющихся ресурсов с поддержкой двухфазной фиксации для участия в транзакции.</summary>
      <param name="enlistmentNotification">Объект, который реализует интерфейс <see cref="T:System.Transactions.IEnlistmentNotification" /> для получения уведомлений о двухфазной фиксации.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, если диспетчер ресурсов будет выполнять дополнительные действия на этапе подготовки.</param>
      <returns>Объект <see cref="T:System.Transactions.Enlistment" />, который описывает перечисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Присоединяет диспетчер переменных ресурсов, поддерживающий однофазную оптимизацию фиксации, для участия в транзакции.</summary>
      <param name="singlePhaseNotification">Объект, реализующий интерфейс <see cref="T:System.Transactions.ISinglePhaseNotification" />, который должен быть способен получать уведомления об однофазной и двухфазной фиксации.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, если диспетчер ресурсов будет выполнять дополнительные действия на этапе подготовки.</param>
      <returns>Объект <see cref="T:System.Transactions.Enlistment" />, который описывает перечисление.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Equals(System.Object)">
      <summary>Определяет, равны ли данная транзакция и указанный объект.</summary>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
      <returns>
        <see langword="true" />, если параметр <paramref name="obj" /> и данная транзакция идентичны, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.GetPromotedToken">
      <summary>Получает массив <c>byte[]</c>, возвращенный методом <c>Promote</c> при повышении уровня транзакции.</summary>
      <returns>Массив <c>byte[]</c>, возвращенный методом <c>Promote</c> при повышении уровня транзакции.</returns>
    </member>
    <member name="P:System.Transactions.Transaction.IsolationLevel">
      <summary>Получает уровень изоляции транзакции.</summary>
      <returns>Одно из значений <see cref="T:System.Transactions.IsolationLevel" />, указывающее уровень изоляции транзакции.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Проверяет, эквивалентны ли два указанные экземпляра <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="x">Экземпляр <see cref="T:System.Transactions.Transaction" />, который находится слева от оператора равенства.</param>
      <param name="y">Экземпляр класса <see cref="T:System.Transactions.Transaction" />, который находится справа от оператора равенства.</param>
      <returns>Значение <see langword="true" />, если <paramref name="x" /> и <paramref name="y" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="x">Экземпляр <see cref="T:System.Transactions.Transaction" />, который находится слева от оператора неравенства.</param>
      <param name="y">Экземпляр класса <see cref="T:System.Transactions.Transaction" />, который находится справа от оператора неравенства.</param>
      <returns>Значение <see langword="true" />, если <paramref name="x" /> и <paramref name="y" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)">
      <summary>Продвигает и присоединяет диспетчер долгосрочных ресурсов, поддерживающий двухфазную фиксацию, для участия в транзакции.</summary>
      <param name="resourceManagerIdentifier">Уникальный идентификатор диспетчера ресурсов, который должен оставаться неизменным при сбое в работе диспетчера ресурсов или при перезагрузке.</param>
      <param name="promotableNotification">Объект, действующий в качестве делегата фиксации для нераспределенной транзакции, которая является внутренней для диспетчера ресурсов.</param>
      <param name="enlistmentNotification">Объект, реализующий интерфейс <see cref="T:System.Transactions.IEnlistmentNotification" /> для получения уведомлений о двухфазной фиксации.</param>
      <param name="enlistmentOptions">
        <see cref="F:System.Transactions.EnlistmentOptions.EnlistDuringPrepareRequired" />, если диспетчер ресурсов будет выполнять дополнительные действия на этапе подготовки.</param>
    </member>
    <member name="P:System.Transactions.Transaction.PromoterType">
      <summary>Однозначно определяет формат массива <c>byte[]</c>, возвращенного методом Promote при повышении уровня транзакции.</summary>
      <returns>Идентификатор GUID, который однозначно определяет формат <c>байта []</c> , возвращаемого методом Promote при повышении уровня транзакции.</returns>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback">
      <summary>Выполняет откат транзакции (прерывает ее).</summary>
    </member>
    <member name="M:System.Transactions.Transaction.Rollback(System.Exception)">
      <summary>Выполняет откат транзакции (прерывает ее).</summary>
      <param name="e">Объяснение, почему произошел откат.</param>
    </member>
    <member name="M:System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)">
      <summary>Задает идентификатор распределенной транзакции, созданный отличным от MSDTC активатором.</summary>
      <param name="promotableNotification">Интерфейс <see cref="T:System.Transactions.IPromotableSinglePhaseNotification" />, реализованный участником.</param>
      <param name="distributedTransactionIdentifier">Идентификатор транзакции, используемой диспетчером распределенных транзакций.</param>
    </member>
    <member name="M:System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Получает <see cref="T:System.Runtime.Serialization.SerializationInfo" /> вместе с данными, необходимыми для сериализации данной транзакции.</summary>
      <param name="serializationInfo">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
      <param name="context">Конечный объект (см. <see cref="T:System.Runtime.Serialization.StreamingContext" />) для этой сериализации.</param>
    </member>
    <member name="E:System.Transactions.Transaction.TransactionCompleted">
      <summary>Указывает, что транзакция завершена.</summary>
      <exception cref="T:System.ObjectDisposedException">Попытка подписаться на данное событие для транзакции, которая была удалена.</exception>
    </member>
    <member name="P:System.Transactions.Transaction.TransactionInformation">
      <summary>Извлекает дополнительные сведения о транзакции.</summary>
      <returns>Объект <see cref="T:System.Transactions.TransactionInformation" />, содержащий дополнительные сведения о транзакции.</returns>
    </member>
    <member name="T:System.Transactions.TransactionAbortedException">
      <summary>Исключение, которое вызывается в двух случаях: а) при попытке выполнить операцию по транзакции, для которой уже был выполнен откат; б) когда делается попытка зафиксировать транзакцию, и транзакция прерывается.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionAbortedException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionAbortedException" /> указанными сведениями о сериализации и потоковым контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием неуспешной сериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием контекста неуспешной сериализации.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionAbortedException" /> указанным сообщением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
    </member>
    <member name="M:System.Transactions.TransactionAbortedException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionAbortedException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
      <param name="innerException">Получает экземпляр исключения, который вызывает текущее исключение. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionCompletedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Transactions.Transaction.TransactionCompleted" /> класса <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">Объект <see cref="T:System.Transactions.TransactionEventArgs" />, содержащий данные события.</param>
    </member>
    <member name="T:System.Transactions.TransactionEventArgs">
      <summary>Предоставляет данные для следующих событий, связанных с транзакцией: <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />, <see cref="E:System.Transactions.Transaction.TransactionCompleted" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionEventArgs.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionEventArgs" />.</summary>
    </member>
    <member name="P:System.Transactions.TransactionEventArgs.Transaction">
      <summary>Получает транзакцию, для которой предоставляется состояние события.</summary>
      <returns>Объект <see cref="T:System.Transactions.Transaction" />, для которого предоставляется состояние события.</returns>
    </member>
    <member name="T:System.Transactions.TransactionException">
      <summary>Исключение, вызываемое при попытке выполнить операцию по транзакции, которая не может допустить новую операцию.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionException" /> указанными сведениями о сериализации и потоковым контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием неуспешной сериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием контекста неуспешной сериализации.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionException" /> указанным сообщением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
    </member>
    <member name="M:System.Transactions.TransactionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
      <param name="innerException">Получает экземпляр исключения, который вызывает текущее исключение. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInDoubtException">
      <summary>Исключение, которое вызывается в двух случаях: а) при попытке выполнить операцию по транзакции, которая находится в состоянии InDoubt; б) когда делается попытка зафиксировать транзакцию, и транзакция переходит в состояние InDoubt.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionInDoubtException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionInDoubtException" /> указанными сведениями о сериализации и потоковым контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием неуспешной сериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием контекста неуспешной сериализации.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionInDoubtException" /> указанным сообщением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
    </member>
    <member name="M:System.Transactions.TransactionInDoubtException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionInDoubtException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
      <param name="innerException">Получает экземпляр исключения, который вызывает текущее исключение. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionInformation">
      <summary>Предоставляет дополнительные сведения, касающиеся транзакции.</summary>
    </member>
    <member name="P:System.Transactions.TransactionInformation.CreationTime">
      <summary>Получает время создания транзакции.</summary>
      <returns>Объект <see cref="T:System.DateTime" />, содержащий данные о времени создания транзакции.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.DistributedIdentifier">
      <summary>Получает уникальный идентификатор расширенной транзакции.</summary>
      <returns>Объект <see cref="T:System.Guid" />, содержащий уникальный идентификатор расширенной транзакции.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.LocalIdentifier">
      <summary>Получает уникальный идентификатор транзакции.</summary>
      <returns>Уникальный идентификатор транзакции.</returns>
    </member>
    <member name="P:System.Transactions.TransactionInformation.Status">
      <summary>Получает статус данной транзакции.</summary>
      <returns>Объект <see cref="T:System.Transactions.TransactionStatus" />, содержащий данные о состоянии транзакции.</returns>
    </member>
    <member name="T:System.Transactions.TransactionInterop">
      <summary>Облегчает взаимодействие между <see cref="N:System.Transactions" /> и компонентами, которые были разработаны ранее для взаимодействия с MSDTC, COM+ или <see cref="N:System.EnterpriseServices" />. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)">
      <summary>Получает экземпляр <see cref="T:System.Transactions.IDtcTransaction" />, который представляет <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction">Экземпляр <see cref="T:System.Transactions.Transaction" />, который необходимо маршалировать.</param>
      <returns>Экземпляр <see cref="T:System.Transactions.IDtcTransaction" />, который представляет <see cref="T:System.Transactions.Transaction" />.  Экземпляр <see cref="T:System.Transactions.IDtcTransaction" /> совместим с неуправляемой формой ITransaction, используемой MSDTC, и с управляемой формой <see cref="T:System.EnterpriseServices.ITransaction" />, используемой <see cref="N:System.EnterpriseServices" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])">
      <summary>Преобразует объект транзакции в файл cookie транзакции экспорта.</summary>
      <param name="transaction">Объект <see cref="T:System.Transactions.Transaction" />, который необходимо маршалировать.</param>
      <param name="whereabouts">Адрес, описывающий расположение целевого диспетчера транзакций. Это позволяет двум диспетчерам транзакций взаимодействовать друг с другом и тем самым распространять транзакцию из одной системы в другую.</param>
      <returns>Файл cookie транзакции экспорта, представляющий указанный объект <see cref="T:System.Transactions.Transaction" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)">
      <summary>Создает объект <see cref="T:System.Transactions.Transaction" /> из указанного объекта <see cref="T:System.Transactions.IDtcTransaction" />.</summary>
      <param name="transactionNative">Объект <see cref="T:System.Transactions.IDtcTransaction" />, который необходимо маршалировать.</param>
      <returns>Экземпляр <see cref="T:System.Transactions.Transaction" />, который представляет заданный объект <see cref="T:System.Transactions.IDtcTransaction" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])">
      <summary>Создает <see cref="T:System.Transactions.Transaction" /> из заданного файла cookie экспорта.</summary>
      <param name="cookie">Маршалируемая форма объекта транзакции.</param>
      <returns>
        <see cref="T:System.Transactions.Transaction" /> из заданного файла cookie экспорта.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])">
      <summary>Создает экземпляр <see cref="T:System.Transactions.Transaction" /> из токена распространения указанного передатчика.</summary>
      <param name="propagationToken">Токен распространения, представляющий транзакцию.</param>
      <returns>
        <see cref="T:System.Transactions.Transaction" /> из токена распространения указанного передатчика.</returns>
      <exception cref="T:System.Transactions.TransactionManagerCommunicationException">Сбой при десериализации транзакции вследствие невозможности установить соединение с диспетчером транзакций. Он может быть вызван настройками брандмауэра или настройками безопасности.</exception>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)">
      <summary>Создает токен распространения для указанного <see cref="T:System.Transactions.Transaction" />.</summary>
      <param name="transaction">Транзакция, которую следует маршалировать в токен распространения.</param>
      <returns>Этот метод совместно с методом <see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> предоставляет средства для распространения транзакции по модели «передатчик/приемник», в соответствии с которой транзакция «извлекается» из удаленного компьютера при вызове второго метода для демаршалирования транзакции.
Подробнее о различных моделях распространения см. в описании класса <see cref="T:System.Transactions.TransactionInterop" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionInterop.GetWhereabouts">
      <summary>Получает сведения о расположении диспетчера распределенных транзакций, который используется методом <see cref="N:System.Transactions" />.</summary>
      <returns>Сведения о расположении диспетчера распределенных транзакций, который используется методом <see cref="N:System.Transactions" />.</returns>
    </member>
    <member name="F:System.Transactions.TransactionInterop.PromoterTypeDtc">
      <summary>Тип обработчика распределенных транзакций.</summary>
    </member>
    <member name="T:System.Transactions.TransactionManager">
      <summary>Содержит методы, используемые для управления транзакциями. Этот класс не наследуется.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.DefaultTimeout">
      <summary>Получает тайм-аут по умолчанию для новых транзакций.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее тайм-аут для новых транзакций.</returns>
    </member>
    <member name="E:System.Transactions.TransactionManager.DistributedTransactionStarted">
      <summary>Указывает, что запущена распределенная транзакция.</summary>
    </member>
    <member name="P:System.Transactions.TransactionManager.HostCurrentCallback">
      <summary>Получает или задает пользовательскую фабрику транзакций.</summary>
      <returns>Объект <see cref="T:System.Transactions.HostCurrentTransactionCallback" />, содержащий пользовательское производство транзакций.</returns>
    </member>
    <member name="P:System.Transactions.TransactionManager.MaximumTimeout">
      <summary>Получает максимальный тайм-аут по умолчанию для новых транзакций.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, указывающее максимальный тайм-аут, допустимый при создании новых транзакций.</returns>
    </member>
    <member name="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)">
      <summary>Уведомляет диспетчер транзакций о том, что диспетчер ресурсов, восстанавливающийся после сбоя, завершил повторное зачисление всех неразрешенных транзакций.</summary>
      <param name="resourceManagerIdentifier">Объект <see cref="T:System.Guid" />, однозначно определяющий ресурс, подлежащий восстановлению.</param>
      <exception cref="T:System.ArgumentNullException">Параметр <paramref name="resourceManagerIdentifier" /> имеет значение <see langword="null" />.</exception>
    </member>
    <member name="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)">
      <summary>Повторно включает долговременного участника в список транзакции.</summary>
      <param name="resourceManagerIdentifier">Объект <see cref="T:System.Guid" />, однозначно определяющий диспетчер ресурсов.</param>
      <param name="recoveryInformation">Содержит дополнительные сведения о восстановлении.</param>
      <param name="enlistmentNotification">Объект ресурса, реализующий интерфейс <see cref="T:System.Transactions.IEnlistmentNotification" /> для приема уведомлений.</param>
      <returns>Объект <see cref="T:System.Transactions.Enlistment" />, описывающий зачисление.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="recoveryInformation" /> недопустим.

или -
Сведения о диспетчере транзакций в параметре <paramref name="recoveryInformation" /> не соответствуют настроенному диспетчеру транзакций.

или -
Параметр <paramref name="RecoveryInformation" /> не распознается инфраструктурой <see cref="N:System.Transactions" />.</exception>
      <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> уже вызван для указанного идентификатора <paramref name="resourceManagerIdentifier" />. Повторное зачисление отклонено.</exception>
      <exception cref="T:System.Transactions.TransactionException">Идентификатор <paramref name="resourceManagerIdentifier" /> не соответствует сведениям о восстановлении, указанным в параметре <paramref name="recoveryInformation" />.</exception>
    </member>
    <member name="T:System.Transactions.TransactionManagerCommunicationException">
      <summary>Исключение возникает, если диспетчер ресурсов не может взаимодействовать с диспетчером транзакций.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionManagerCommunicationException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> указанными сведениями о сериализации и потоковым контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием неуспешной сериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием контекста неуспешной сериализации.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> указанным сообщением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
    </member>
    <member name="M:System.Transactions.TransactionManagerCommunicationException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionManagerCommunicationException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
      <param name="innerException">Получает экземпляр исключения, который вызывает текущее исключение. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionOptions">
      <summary>Содержит дополнительную информацию, которая задает поведение транзакции.</summary>
    </member>
    <member name="M:System.Transactions.TransactionOptions.Equals(System.Object)">
      <summary>Определяет равенство данного экземпляра <see cref="T:System.Transactions.TransactionOptions" /> и указанного объекта.</summary>
      <param name="obj">Объект, сравниваемый с данным экземпляром.</param>
      <returns>
        <see langword="true" /> если <paramref name="obj" /> и данный экземпляр <see cref="T:System.Transactions.TransactionOptions" /> идентичны, в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.IsolationLevel">
      <summary>Получает или задает уровень изоляции для транзакции.</summary>
      <returns>Значение перечисления <see cref="T:System.Transactions.IsolationLevel" />, задающее уровень изоляции транзакции.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Equality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Проверяет, эквивалентны ли два указанные экземпляра <see cref="T:System.Transactions.TransactionOptions" />.</summary>
      <param name="x">Экземпляр <see cref="T:System.Transactions.TransactionOptions" />, который находится слева от оператора равенства.</param>
      <param name="y">Экземпляр класса <see cref="T:System.Transactions.TransactionOptions" />, который находится справа от оператора равенства.</param>
      <returns>Значение <see langword="true" />, если <paramref name="x" /> и <paramref name="y" /> равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.Transactions.TransactionOptions.op_Inequality(System.Transactions.TransactionOptions,System.Transactions.TransactionOptions)">
      <summary>Возвращает значение, указывающее, равны ли два экземпляра <see cref="T:System.Transactions.TransactionOptions" />.</summary>
      <param name="x">Экземпляр <see cref="T:System.Transactions.TransactionOptions" />, который находится слева от оператора равенства.</param>
      <param name="y">Экземпляр класса <see cref="T:System.Transactions.TransactionOptions" />, который находится справа от оператора равенства.</param>
      <returns>Значение <see langword="true" />, если <paramref name="x" /> и <paramref name="y" /> не равны друг другу; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.Transactions.TransactionOptions.Timeout">
      <summary>Получает или задает период ожидания для данной транзакции.</summary>
      <returns>Значение <see cref="T:System.TimeSpan" />, задающее период ожидания для транзакции.</returns>
    </member>
    <member name="T:System.Transactions.TransactionPromotionException">
      <summary>Исключение возникает при сбое преобразования.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionPromotionException" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionPromotionException" /> указанными сведениями о сериализации и потоковым контекстом.</summary>
      <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием неуспешной сериализации.</param>
      <param name="context">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> с описанием контекста неуспешной сериализации.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionPromotionException" /> указанным сообщением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
    </member>
    <member name="M:System.Transactions.TransactionPromotionException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionPromotionException" /> указанным сообщением и внутренним исключением.</summary>
      <param name="message">Объект типа <see cref="T:System.String" />, содержащий сообщение с указанием причины исключения.</param>
      <param name="innerException">Получает экземпляр исключения, который вызывает текущее исключение. Дополнительные сведения см. в описании свойства <see cref="P:System.Exception.InnerException" />.</param>
    </member>
    <member name="T:System.Transactions.TransactionScope">
      <summary>Делает блок кода транзакционным. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" />.</summary>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</summary>
      <param name="transactionToUse">Транзакция, которая должна быть определена как внешняя транзакция, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданным значением тайм-аута и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</summary>
      <param name="transactionToUse">Транзакция, которая должна быть определена как внешняя транзакция, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</param>
      <param name="scopeTimeout">Интервал времени <see cref="T:System.TimeSpan" />, по истечении которого время ожидания области транзакции завершается, и область транзакции прерывает транзакцию.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданными значением тайм-аута и требованиями к взаимодействию с COM+ и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</summary>
      <param name="transactionToUse">Транзакция, которая должна быть определена как внешняя транзакция, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</param>
      <param name="scopeTimeout">Интервал времени <see cref="T:System.TimeSpan" />, по истечении которого время ожидания области транзакции завершается, и область транзакции прерывает транзакцию.</param>
      <param name="interopOption">Экземпляр перечисления <see cref="T:System.Transactions.EnterpriseServicesInteropOption" />, описывающий взаимодействие связанной транзакции с транзакциями COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданным значением тайм-аута и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</summary>
      <param name="transactionToUse">Транзакция, которая должна быть определена как внешняя транзакция, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</param>
      <param name="scopeTimeout">Интервал времени <see cref="T:System.TimeSpan" />, по истечении которого время ожидания области транзакции завершается, и область транзакции прерывает транзакцию.</param>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> и определяет указанную транзакцию как внешнюю транзакцию, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</summary>
      <param name="transactionToUse">Транзакция, которая должна быть определена как внешняя транзакция, чтобы транзакционные операции, выполняемые в области, использовали эту транзакцию.</param>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданным асинхронным параметром потока.</summary>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с указанными требованиями.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с указанными значением тайм-аута и требованиями.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="scopeTimeout">Интервал времени <see cref="T:System.TimeSpan" />, по истечении которого время ожидания области транзакции завершается, и область транзакции прерывает транзакцию.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданным значением времени ожидания, требованиями и асинхронным параметром потока.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="scopeTimeout">Интервал времени <see cref="T:System.TimeSpan" />, по истечении которого время ожидания области транзакции завершается, и область транзакции прерывает транзакцию.</param>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с указанными требованиями.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="transactionOptions">Структура <see cref="T:System.Transactions.TransactionOptions" />, описывающая параметры транзакции, которые должны использоваться в случае создания новой транзакции. Если используется существующая транзакция, значение тайм-аута в данном параметре применяется для области транзакции. Если этот тайм-аут истекает до удаления области, транзакция прерывается.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданными областью, требованиями к взаимодействию с COM+ и параметрами транзакции.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="transactionOptions">Структура <see cref="T:System.Transactions.TransactionOptions" />, описывающая параметры транзакции, которые должны использоваться в случае создания новой транзакции. Если используется существующая транзакция, значение тайм-аута в данном параметре применяется для области транзакции. Если этот тайм-аут истекает до удаления области, транзакция прерывается.</param>
      <param name="interopOption">Экземпляр перечисления <see cref="T:System.Transactions.EnterpriseServicesInteropOption" />, описывающий взаимодействие связанной транзакции с транзакциями COM+.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>[Поддерживается в .NET Framework 4.5.1 и более поздних версиях.]
Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданными требованиями и асинхронным параметром потока.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="transactionOptions">Структура <see cref="T:System.Transactions.TransactionOptions" />, описывающая параметры транзакции, которые должны использоваться в случае создания новой транзакции. Если используется существующая транзакция, значение тайм-аута в данном параметре применяется для области транзакции. Если этот тайм-аут истекает до удаления области, транзакция прерывается.</param>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.Transactions.TransactionScope" /> с заданными требованиями и асинхронным параметром потока.</summary>
      <param name="scopeOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeOption" />, описывающий требования к транзакции, связанные с данной областью транзакции.</param>
      <param name="asyncFlowOption">Экземпляр перечисления <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" />, описывающий, будет ли внешняя транзакция, связанная с областью транзакции, проходить через продолжения потока при использовании объекта Task или асинхронных шаблонов программирования .NET с операторами async и await.</param>
    </member>
    <member name="M:System.Transactions.TransactionScope.Complete">
      <summary>Указывает, что все операции в области успешно завершены.</summary>
      <exception cref="T:System.InvalidOperationException">Этот метод уже единожды вызван.</exception>
    </member>
    <member name="M:System.Transactions.TransactionScope.Dispose">
      <summary>Завершает область транзакции.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeAsyncFlowOption">
      <summary>Указывает, включен ли для <see cref="T:System.Transactions.TransactionScope" /> поток транзакций через продолжения потоков.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Enabled">
      <summary>Задает, что поток транзакций через продолжения потоков включен.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeAsyncFlowOption.Suppress">
      <summary>Задает, что поток транзакций через продолжения потоков отключен. Это параметр по умолчанию, если <see langword="TransactionScopeAsyncFlowOption" /> не указывается в конструкторе <see cref="Overload:System.Transactions.TransactionScope.#ctor" />.</summary>
    </member>
    <member name="T:System.Transactions.TransactionScopeOption">
      <summary>Предоставляет дополнительные параметры для создания области транзакций.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Required">
      <summary>Транзакция запрашивается областью. Она использует внешнюю транзакцию, если таковая уже существует. В противном случае до ввода области создается новая транзакция. Это значение по умолчанию.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.RequiresNew">
      <summary>Для области всегда создается новая транзакция.</summary>
    </member>
    <member name="F:System.Transactions.TransactionScopeOption.Suppress">
      <summary>При создании области контекст внешней транзакции подавляется. Все операции в рамках области выполняются без контекста внешней транзакции.</summary>
    </member>
    <member name="T:System.Transactions.TransactionStartedEventHandler">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Transactions.TransactionManager.DistributedTransactionStarted" /> класса <see cref="T:System.Transactions.TransactionManager" />.</summary>
      <param name="sender">Источник события.</param>
      <param name="e">
        <see cref="T:System.Transactions.TransactionEventArgs" />, содержащий транзакцию, из которого могут быть извлечены сведения о транзакции.</param>
    </member>
    <member name="T:System.Transactions.TransactionStatus">
      <summary>Описывает текущее состояние распределенной транзакции.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Aborted">
      <summary>Выполнен откат транзакции.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Active">
      <summary>Состояние транзакции неизвестно, поскольку еще должно быть опрошено несколько участников.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.Committed">
      <summary>Транзакция зафиксирована.</summary>
    </member>
    <member name="F:System.Transactions.TransactionStatus.InDoubt">
      <summary>Состояние транзакции неизвестно.</summary>
    </member>
  </members>
</doc>