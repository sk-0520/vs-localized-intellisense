<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>Указывает, следует ли отображать свойство или событие в окне "Свойства".</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable">Значение <see langword="true" />, если свойство или событие можно изменять во время разработки; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</param>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>Возвращает значение, показывающее, будет ли объект отображаться в окне свойств.</summary>
      <returns>Значение <see langword="true" />, если объект отображается в окне свойств; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>Задает значение по умолчанию для атрибута <see cref="T:System.ComponentModel.BrowsableAttribute" />, равное <see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>Указывает, равен ли этот экземпляр заданному объекту.</summary>
      <param name="obj">Другой объект, подлежащий сравнению.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>Указывает, что свойство или событие нельзя изменять во время разработки. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>Указывает, что свойство или событие можно изменять во время разработки. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>Задает имя категории, в которой при отображении в элементе управления <see cref="T:System.Windows.Forms.PropertyGrid" /> для группировки свойств или событий установлен режим "По категориям".</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> с использованием имени категории "По умолчанию".</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>Выполняет инициализацию нового экземпляра класса <see cref="T:System.ComponentModel.CategoryAttribute" />, используя заданное имя категории.</summary>
      <param name="category">Имя категории.</param>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Действие".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Действие".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Внешний вид".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Внешний вид".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Асинхронная".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Асинхронная".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Поведение".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Поведение".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>Возвращает имя категории для свойства или события, к которым применяется этот атрибут.</summary>
      <returns>Имя категории для свойства или события, к которым применяется этот атрибут.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Данные".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Данные".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "По умолчанию".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "По умолчанию".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Конструктор".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Конструктор".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Перетаскивание".</summary>
      <returns>Объект <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Перетаскивание".</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
      <param name="obj">Объект, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Получает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Фокус".</summary>
      <returns>Атрибут <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Фокус".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Формат".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Формат".</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>Возвращает хэш-код для данного атрибута.</summary>
      <returns>Хэш-код в виде 32-битовым целым числом со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>Выполняет поиск локализованной версии имени заданной категории.</summary>
      <param name="value">Идентификатор искомой категории.</param>
      <returns>Локализованное имя категории или значение <see langword="null" />, если локализованное имя не существует.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Получает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Клавиша".</summary>
      <returns>Атрибут <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Клавиша".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Структура".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Структура".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Мышь".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Мышь".</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>Возвращает атрибут <see cref="T:System.ComponentModel.CategoryAttribute" />, представляющий категорию "Стиль окна".</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.CategoryAttribute" /> для категории "Стиль окна".</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary>Предоставляет базовую реализацию интерфейса <see cref="T:System.ComponentModel.IComponent" /> и делает возможным совместное использование объектов разными приложениями.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary>Возвращает значение, показывающее, может ли компонент вызывать событие.</summary>
      <returns>Значение <see langword="true" />, если компонент может вызывать события, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary>Возвращает контейнер <see cref="T:System.ComponentModel.IContainer" />, содержащий компонент <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>Контейнер <see cref="T:System.ComponentModel.IContainer" />, содержащий компонент <see cref="T:System.ComponentModel.Component" />, если таковой присутствует, или значение <see langword="null" />, если компонент <see cref="T:System.ComponentModel.Component" /> не инкапсулирован в контейнер <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary>Возвращает значение, указывающее, находится ли данный компонент <see cref="T:System.ComponentModel.Component" /> в режиме конструктора в настоящее время.</summary>
      <returns>Значение <see langword="true" />, если компонент <see cref="T:System.ComponentModel.Component" /> находится в режиме конструктора, в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary>Освобождает все ресурсы, занятые модулем <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Component" />, а при необходимости освобождает также управляемые ресурсы.</summary>
      <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary>Происходит при удалении компонента вызовом метода <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary>Возвращает список обработчиков событий, которые прикреплены к этому объекту <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>Экземпляр класса <see cref="T:System.ComponentModel.EventHandlerList" />, предоставляющий делегаты для этого компонента.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary>Освобождает неуправляемые ресурсы и выполняет другие операции очистки, перед тем как объект <see cref="T:System.ComponentModel.Component" /> будет удален при сборке мусора.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary>Возвращает объект, представляющий службу, обеспечиваемую компонентом <see cref="T:System.ComponentModel.Component" /> или его контейнером <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service">Служба, предоставляемая компонентом <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий службу, обеспечиваемую компонентом <see cref="T:System.ComponentModel.Component" />, или <see langword="null" />, если компонент <see cref="T:System.ComponentModel.Component" /> не предоставляет заданную службу.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary>Возвращает или задает <see cref="T:System.ComponentModel.ISite" /> объекта <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>узел <see cref="T:System.ComponentModel.ISite" />, связанный с компонентом <see cref="T:System.ComponentModel.Component" />, или <see langword="null" />, если компонент <see cref="T:System.ComponentModel.Component" /> не инкапсулирован в контейнер <see cref="T:System.ComponentModel.IContainer" />, с компонентом <see cref="T:System.ComponentModel.Component" /> не связан узел <see cref="T:System.ComponentModel.ISite" />, или компонент <see cref="T:System.ComponentModel.Component" /> удален из своего контейнера <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary>Возвращает объект <see cref="T:System.String" />, содержащий имя <see cref="T:System.ComponentModel.Component" />, если оно есть. Этот метод не следует переопределять.</summary>
      <returns>Объект <see cref="T:System.String" />, содержащий имя <see cref="T:System.ComponentModel.Component" />, если оно есть, или <see langword="null" />, если <see cref="T:System.ComponentModel.Component" /> не имеет имени.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>Предоставляет для коллекции объектов <see cref="T:System.ComponentModel.IComponent" /> контейнер только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ComponentCollection" />, используя указанный массив компонентов.</summary>
      <param name="components">Массив объектов <see cref="T:System.ComponentModel.IComponent" />, используемых для инициализации коллекции.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary>Копирует всю коллекцию в массив, начиная запись с заданного индекса массива.</summary>
      <param name="array">Массив объектов <see cref="T:System.ComponentModel.IComponent" /> для копирования в коллекцию.</param>
      <param name="index">Индекс массива <paramref name="array" />, с которого должно начинаться копирование.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary>Возвращает из коллекции объект <see cref="T:System.ComponentModel.Component" /> по указанному индексу.</summary>
      <param name="index">Индекс возвращаемого элемента <see cref="T:System.ComponentModel.Component" /> коллекции.</param>
      <returns>Параметр <see cref="T:System.ComponentModel.IComponent" /> по указанному индексу.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Если заданный индекс выходит за пределы диапазона индексов коллекции.</exception>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary>Возвращает любой компонент коллекции, соответствующий заданному имени.</summary>
      <param name="name">Имя получаемого объекта <see cref="T:System.ComponentModel.IComponent" />.</param>
      <returns>Компонент, имя которого соответствует имени, заданному параметром <paramref name="name" />, или <see langword="null" />, если названный компонент не удалось найти в коллекции.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>Задает описание для свойства или события.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DescriptionAttribute" /> без параметров.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DescriptionAttribute" /> с указанным описанием.</summary>
      <param name="description">Текст описания.</param>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>Определяет значение по умолчанию для атрибута <see cref="T:System.ComponentModel.DescriptionAttribute" />, являющееся пустой строкой (""). Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>Возвращает описание, хранящееся в данном атрибуте.</summary>
      <returns>Описание, хранящееся в данном атрибуте.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>Получает или задает строку, хранящуюся в качестве описания.</summary>
      <returns>Строка, хранящаяся как описание. Значением по умолчанию является пустая строка ("").</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
      <param name="obj">Объект, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary>Возвращает значение, показывающее, является ли этот атрибут <see cref="T:System.ComponentModel.DescriptionAttribute" /> экземпляром по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если это атрибут по умолчанию <see cref="T:System.ComponentModel.DescriptionAttribute" /> по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary>Указывает, что конструктор для класса относится к определенной категории.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DesignerCategoryAttribute" />, используя пустую строку ("").</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DesignerCategoryAttribute" />, используя данное имя категории.</summary>
      <param name="category">Имя категории.</param>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary>Возвращает имя категории.</summary>
      <returns>Имя категории.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary>Указывает, что компонент, отмеченный этой категорией, использует конструктор компонентов. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary>Определяет, что компонент, отмеченный этой категорией, не может использовать визуальный конструктор. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="obj">Объект, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary>Указывает, что компонент, отмеченный этой категорией, использует конструктор форм. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary>Указывает, что компонент, отмеченный этой категорией, использует универсальный конструктор. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary>Возвращает уникальный идентификатор для этого атрибута.</summary>
      <returns>Объект <see cref="T:System.Object" />, являющийся уникальным идентификатором атрибута.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary>Задает видимость свойства для преобразователя этапа разработки.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary>Генератор кода создает код для содержимого объекта, а не для самого объекта.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary>Генератор кода не создает код для объекта.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary>Генератор кода создает код для объекта.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary>Задает тип сохранения, используемый при сериализации свойства компонента во время разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />, используя указанное значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</summary>
      <param name="visibility">Одно из значений <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary>Определяет, что средство сериализации должно сериализовать содержимое данного свойства, а не само свойство. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary>Задает значение по умолчанию, равное <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, то есть в режиме визуального конструктора для создания значения свойства используются правила по умолчанию. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary>Указывает, равен ли этот экземпляр заданному объекту.</summary>
      <param name="obj">Другой объект, подлежащий сравнению.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary>Определяет, что средство сериализации не должно сериализировать значение свойства. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary>Возвращает значение, показывающее, является ли текущее значение атрибута его значением по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут установлен равным значению по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary>Возвращает значение, показывающее базовый режим сериализации, который должен использоваться средством сериализации при определении необходимости и способа сохранения значения свойства.</summary>
      <returns>Одно из значений перечисления <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. Значение по умолчанию — <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary>Определяет, что средству сериализации должно быть разрешено сериализировать значение свойства. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary>Указывает на возможность задания свойства только во время разработки.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly">Значение <see langword="true" />, если свойство может быть задано только во время разработки; значение <see langword="false" />, если свойство может быть задано во время разработки и во время выполнения.</param>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary>Задает значение по умолчанию для атрибута <see cref="T:System.ComponentModel.DesignOnlyAttribute" />, равное <see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="obj">Объект, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary>Возвращает значение, показывающее возможность задания свойства только во время разработки.</summary>
      <returns>Значение <see langword="true" />, если свойство может быть задано только во время разработки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary>Определяет, что свойство может быть задано во время разработки или во время выполнения. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary>Определяет, что свойство может быть установлено только во время разработки. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary>Задает отображаемое имя свойства, события или открытого метода типа void, не принимающего аргументов.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.DisplayNameAttribute" />, используя отображаемое имя.</summary>
      <param name="displayName">Отображаемое имя.</param>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary>Определяет значение по умолчанию для атрибута <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Это поле доступно только для чтения.</summary>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary>Возвращает отображаемое имя для свойства, события или открытого метода типа void, не принимающего аргументов, хранящихся в этом атрибуте.</summary>
      <returns>Отображаемое имя.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary>Получает или задает отображаемое имя.</summary>
      <returns>Отображаемое имя.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary>Определяет, равны ли два экземпляра <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
      <param name="obj">Атрибут <see cref="T:System.ComponentModel.DisplayNameAttribute" />, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего объекта; в противном случае — значение <see langword="false" />, если нет.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary>Предоставляет простой список делегатов. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary>Добавляет делегата в список.</summary>
      <param name="key">Объект, являющийся владельцем события.</param>
      <param name="value">Делегат, добавляемый в список.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary>Добавляет список делегатов в текущий список.</summary>
      <param name="listToAddFrom">Добавляемый список.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary>Удаляет список делегатов.</summary>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary>Получает или задает делегат для заданного объекта.</summary>
      <param name="key">Объект для поиска в списке.</param>
      <returns>Делегат для заданного ключа или значение <see langword="null" />, если делегат не существует.</returns>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary>Удаляет делегат из списка.</summary>
      <param name="key">Объект, являющийся владельцем события.</param>
      <param name="value">Делегат, удаляемый из списка.</param>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>Предоставляет функции, необходимые для всех компонентов.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>Представляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.IComponent.Disposed" /> компонента.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>Возвращает или задает объект <see cref="T:System.ComponentModel.ISite" />, связанный с объектом <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.ISite" />, связанный с компонентом; или <see langword="null" />, если у компонента нет узла.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>Предоставляет функциональные возможности для контейнеров. Контейнеры являются объектами, логически включающими ноль и более компонентов.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>Добавляет указанный компонент <see cref="T:System.ComponentModel.IComponent" /> в конец списка контейнера <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component">Добавляемый объект <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Добавляет указанный компонент <see cref="T:System.ComponentModel.IComponent" /> в конец списка в объект <see cref="T:System.ComponentModel.IContainer" /> и назначает компоненту имя.</summary>
      <param name="component">Добавляемый объект <see cref="T:System.ComponentModel.IComponent" />.</param>
      <param name="name">Назначаемое компоненту уникальное имя, в котором не учитывается регистр.

или -
Значение <see langword="null" />, при котором компонент остается безымянным.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>Получает все компоненты в контейнере <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns>Коллекция объектов <see cref="T:System.ComponentModel.IComponent" />, представляющая все компоненты в контейнере <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>Удаляет компонент из контейнера <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для удаления.</param>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary>Указывает на то, что у объекта нет редактируемых вложенных свойств. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable">Значение <see langword="true" />, если объект является неизменным; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary>Представляет значение по умолчанию для объекта <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary>Возвращает значение, указывающее, равен ли этот экземпляр указанному объекту.</summary>
      <param name="obj">Объект <see cref="T:System.Object" /> для сравнения с этим экземпляром или пустая ссылка (<see langword="Nothing" /> в Visual Basic).</param>
      <returns>
        <see langword="true" />, если объект <paramref name="obj" /> типу и значению данного экземпляра; в противном случае — <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary>Возвращает хэш-код для данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary>Возвращает значение, показывающее, является ли объект неизменным.</summary>
      <returns>Значение <see langword="true" />, если объект является неизменным; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary>Показывает, является ли значение этого экземпляра значением по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если данный экземпляр является атрибутом по умолчанию для класса; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary>Определяет, что у объекта есть, по крайней мере, одно редактируемое вложенное свойство. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary>Определяет, что у объекта нет редактируемых вложенных свойств. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary>Определяет событие, возникающее при инициализации. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName">Имя события инициализации.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary>Возвращает имя события инициализации.</summary>
      <returns>Имя события инициализации.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary>Вызывается, когда поток, в котором должна выполняться операция, больше не существует или в нем отсутствует цикл обработки сообщений.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> с заданными объектами <see cref="T:System.Runtime.Serialization.SerializationInfo" /> и <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Метод <see cref="T:System.Runtime.Serialization.SerializationInfo" />, используемый для десериализации.</param>
      <param name="context">Объект назначения, используемый для десериализации.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />, используя заданное подробное описание.</summary>
      <param name="message">Подробное описание ошибки.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> с указанным подробным описанием и указанным исключением.</summary>
      <param name="message">Подробное описание ошибки.</param>
      <param name="innerException">Ссылка на внутреннее исключение, которое является причиной этого исключения.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary>Исключение, вызываемое при использовании недопустимых аргументов, являющихся перечислителями.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> без сообщения.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidEnumArgumentException" />, используя заданные данные сериализации и контекст.</summary>
      <param name="info">Метод <see cref="T:System.Runtime.Serialization.SerializationInfo" />, используемый для десериализации.</param>
      <param name="context">Объект назначения, используемый для десериализации.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> указанным сообщением.</summary>
      <param name="message">Сообщение, отображаемое для этого исключения.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> с указанным подробным описанием и указанным исключением.</summary>
      <param name="message">Подробное описание ошибки.</param>
      <param name="innerException">Ссылка на внутреннее исключение, которое является причиной этого исключения.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.InvalidEnumArgumentException" />, используя сообщение, созданное с использованием аргумента, недопустимого значения и класса перечисления.</summary>
      <param name="argumentName">Имя аргумента, вызвавшего исключение.</param>
      <param name="invalidValue">Значение аргумента, вызвавшего сбой.</param>
      <param name="enumClass">Объект <see cref="T:System.Type" />, представляющий класс перечисления с допустимыми значениями.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>Предоставляет функциональные возможности, необходимые для узлов.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>Возвращает компонент, связанный с объектом интерфейсом <see cref="T:System.ComponentModel.ISite" /> при реализации классом.</summary>
      <returns>Экземпляр <see cref="T:System.ComponentModel.IComponent" />, связанный с объектом <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>Возвращает интерфейс <see cref="T:System.ComponentModel.IContainer" />, при реализации классом связанный с интерфейсом <see cref="T:System.ComponentModel.ISite" />.</summary>
      <returns>Экземпляр <see cref="T:System.ComponentModel.IContainer" />, связанный с объектом <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>Определяет, находится ли компонент в режиме разработки при реализации классом.</summary>
      <returns>Значение <see langword="true" />, если компонент находится в режиме разработки; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>При реализации классом возвращает или задает имя компонента, связанного с интерфейсом <see cref="T:System.ComponentModel.ISite" />.</summary>
      <returns>Имя компонента, связанного с интерфейсом <see cref="T:System.ComponentModel.ISite" />; или значение <see langword="null" />, если компоненту не присвоено имя.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary>Определяет, что этот объект поддерживает для пакетной инициализации простое уведомление с транзакциями.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary>Подает сигнал объекту о начале инициализации.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary>Подает объекту сигнал о завершении инициализации.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary>Обеспечивает возможность синхронного или асинхронного выполнения делегата.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Асинхронно выполняет делегата для потока, создавшего этот объект.</summary>
      <param name="method">Делегат <see cref="T:System.Delegate" /> для метода, принимающего параметры в том же количестве и того же типа, что и содержащиеся в <paramref name="args" />.</param>
      <param name="args">Массив типа <see cref="T:System.Object" /> для передачи аргументов в заданный метод. Это может быть значение <see langword="null" />, если аргументы не требуются.</param>
      <returns>Интерфейс <see cref="T:System.IAsyncResult" />, который представляет асинхронную операцию, запущенную вызовом этого метода.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary>Ожидает завершения процесса, запущенного вызовом метода <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />, а затем возвращает значение, созданное процессом.</summary>
      <param name="result">Интерфейс <see cref="T:System.IAsyncResult" />, представляющий асинхронную операцию, запущенную вызовом метода <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий возвращаемое значение, сформированное асинхронной операцией.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary>Синхронно выполняет делегат в потоке, создавшем этот объект, а затем выполняет маршалинг вызова в текущий поток.</summary>
      <param name="method">Объект <see cref="T:System.Delegate" />, который содержит вызываемый метод, используемый в контексте потока для управления.</param>
      <param name="args">Массив типа <see cref="T:System.Object" />, представляющий аргументы для передачи в заданный метод. Это может быть значение <see langword="null" />, если аргументы не требуются.</param>
      <returns>Объект <see cref="T:System.Object" />, представляющий возвращаемое из вызванного делегата значение, или значение <see langword="null" />, если делегат не возвращает значение.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary>Возвращает значение, показывающее, должен ли вызывающий объект вызвать метод <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> при вызове объекта, реализующего этот интерфейс.</summary>
      <returns>Значение <see langword="true" />, если вызывающий объект должен вызвать метод <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary>Указывает, должно ли быть локализовано свойство. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable">Значение <see langword="true" />, если свойство должно быть локализовано; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary>Определяет значение по умолчанию, которое равно атрибуту <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, равно ли значение данного объекта текущему атрибуту <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="obj">Объект, проверяемый на равенство.</param>
      <returns>Значение <see langword="true" />, если значение данного объекта равно значению текущего; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.ComponentModel.LocalizableAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary>Возвращает значение, показывающее, должно ли быть локализовано свойство.</summary>
      <returns>Значение <see langword="true" />, если свойство должно быть локализовано; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary>Определяет, что свойство не должно быть локализовано. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary>Определяет, что свойство должно быть локализовано. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary>Указывает, что это свойство может быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge">Значение <see langword="true" />, если свойство может быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary>Получает значение, указывающее, может ли это свойство быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам.</summary>
      <returns>Значение <see langword="true" />, если свойство может быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary>Задает значение по умолчанию, равное <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />, то есть свойство может объединяться со свойствами других объектов в окне "Свойства". Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary>Указывает, равен ли этот экземпляр заданному объекту.</summary>
      <param name="obj">Другой объект, подлежащий сравнению.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="obj" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary>Указывает, что это свойство не может быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary>Указывает, что свойство может быть объединено в окне "Свойства" со свойствами, принадлежащими другим объектам. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary>Показывает, что родительское свойство получает уведомление при изменении значения свойства, к которому применяется данный атрибут. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" />, используя заданное значение, чтобы определить, уведомляется ли родительское свойство об изменениях значения свойства.</summary>
      <param name="notifyParent">Значение <see langword="true" />, если родительское свойство должно быть уведомлено об изменениях; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary>Показывает состояние атрибута по умолчанию — свойство не должно уведомлять родительское свойство об изменениях своего значения. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary>Возвращает значение, показывающее, совпадает ли заданный объект с текущим.</summary>
      <param name="obj">Объект для проверки на равенство.</param>
      <returns>Значение <see langword="true" />, если заданный объект совпадает с текущим; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary>Получает хэш-код для этого объекта.</summary>
      <returns>Хэш-код для объекта, которому принадлежит данный атрибут.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary>Возвращает значение, показывающее, является ли текущее значение атрибута его значением по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если текущим значением атрибута является значение атрибута по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary>Показывает, что родительское свойство не уведомляется об изменениях значения свойства. Это поле доступно только для чтения.</summary>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary>Возвращает или задает значение, показывающее, должно ли родительское свойство уведомляться об изменениях значения свойства.</summary>
      <returns>Значение <see langword="true" />, если родительское свойство должно быть уведомлено об изменениях; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary>Показывает, что родительское свойство уведомляется об изменениях значения свойства. Это поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary>Показывает, отображается ли имя связанного свойства в окне "Свойства" в скобках. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />, используя значение, указывающее, что имя связанного свойства не должно отображаться в скобках.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />, используя заданное значение, чтобы указать, отображать ли атрибут в скобках.</summary>
      <param name="needParenthesis">Значение <see langword="true" />, если имя должно быть заключено в скобки; в противном случае — значение <see langword="false" />.</param>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" />, используя значение по умолчанию, указывающее, что имя связанного свойства не должно отображаться в скобках. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary>Сравнивает заданный объект с этим объектом, проверяя их равенство.</summary>
      <param name="o">Сравниваемый объект.</param>
      <returns>Значение <see langword="true" />, если объекты равны; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary>Получает хэш-код для этого объекта.</summary>
      <returns>Хэш-код для объекта, которому принадлежит данный атрибут.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary>Возвращает значение, показывающее, является ли текущее значение атрибута его значением по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если текущим значением атрибута является значение атрибута по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary>Возвращает значение, показывающее, отображается ли имя свойства в окне "Свойства" в скобках.</summary>
      <returns>Значение <see langword="true" />, если имя свойства отображается в скобках; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>Указывает, доступно ли свойство, с которым связан данный атрибут, только для чтения или для чтения и записи. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly">Значение <see langword="true" />, чтобы показать, что свойство, с которым связан этот атрибут, доступно только для чтения, или значение <see langword="false" />, показывающее, что это свойство доступно для чтения и записи.</param>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary>Определяет значение по умолчанию для атрибута <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, равное <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (то есть свойство, с которым связан этот атрибут, доступно для чтения и записи). Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>Указывает, равен ли этот экземпляр заданному объекту.</summary>
      <param name="value">Другой объект, подлежащий сравнению.</param>
      <returns>Значение <see langword="true" />, если значение параметра <paramref name="value" /> равно данному экземпляру; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>Возвращает хэш-код данного экземпляра.</summary>
      <returns>Хэш-код для текущего объекта <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary>Определяет, является ли этот атрибут используемым по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если атрибут является значением по умолчанию для данного класса атрибутов; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>Возвращает значение, показывающее, доступно ли свойство, с которым связан этот атрибут, только для чтения.</summary>
      <returns>Значение <see langword="true" />, если свойство, с которым связан этот атрибут, доступно только для чтения, или значение <see langword="false" />, если это свойство доступно и для чтения, и для записи.</returns>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary>Определяет, что свойство, с которым связан данный атрибут, доступно и для чтения, и для записи и может быть изменено. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary>Определяет, что свойство, с которым связан данный атрибут, доступно только для чтения и не может быть изменено в обозревателе серверов. Это статическое (<see langword="static" />) поле доступно только для чтения.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary>Определяет идентификаторы, которые указывают тип обновления окна "Свойства".</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary>Следует опросить свойства и обновить представление.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary>Обновление не требуется.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary>Представление следует обновить.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary>Указывает, что таблица свойств должна обновляться при изменении значения связанного свойства. Этот класс не наследуется.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary>Инициализирует новый экземпляр класса <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh">Значение <see cref="T:System.ComponentModel.RefreshProperties" />, показывающее природу обновления.</param>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary>Показывает, что при изменении значения свойства все свойства будут опрошены и обновлены повторно. Это поле доступно только для чтения.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary>Показывает, что при изменении значения свойства другие свойства обновлять не нужно. Это поле доступно только для чтения.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary>Переопределяет метод <see cref="Overload:System.Object.Equals" /> объекта.</summary>
      <param name="value">Объект для проверки на равенство.</param>
      <returns>Значение <see langword="true" />, если указанные объекты совпадают; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary>Возвращает хэш-код для этого объекта.</summary>
      <returns>Хэш-код для объекта, которому принадлежит данный атрибут.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary>Возвращает значение, показывающее, является ли текущее значение атрибута его значением по умолчанию.</summary>
      <returns>Значение <see langword="true" />, если текущим значением атрибута является значение по умолчанию; в противном случае — значение <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary>Возвращает или устанавливает свойства обновления для элемента.</summary>
      <returns>Объект <see cref="T:System.ComponentModel.RefreshProperties" />, показывающий текущие свойства обновления для элемента.</returns>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary>Показывает, что при изменении значения свойства будет обновлено представление всех свойств. Это поле доступно только для чтения.</summary>
    </member>
  </members>
</doc>