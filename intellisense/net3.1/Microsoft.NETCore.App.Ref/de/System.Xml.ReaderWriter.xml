<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Gibt den Umfang der Eingabe- oder Ausgabeüberprüfung an, die von dem <see cref="T:System.Xml.XmlReader" />-Objekt und dem <see cref="T:System.Xml.XmlWriter" />-Objekt ausgeführt wird.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>Das <see cref="T:System.Xml.XmlReader" />-Objekt oder das <see cref="T:System.Xml.XmlWriter" />-Objekt erkennen automatisch, ob eine Dokumentebenen- oder Fragmentebenenprüfung ausgeführt werden soll, und nehmen die entsprechende Prüfung vor. Wenn Sie ein weiteres <see cref="T:System.Xml.XmlReader" />- oder <see cref="T:System.Xml.XmlWriter" />-Objekt umschließen, wird für das äußere Objekt keine zusätzliche Übereinstimmungsprüfung vorgenommen. Die Übereinstimmungsprüfung wird dem zugrunde liegenden Objekt überlassen.
Weitere Details dahingehend, wie die Übereinstimmungsprüfung festgelegt wird, finden Sie unter den <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" />- und den <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" />-Eigenschaften.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Die XML-Daten entsprechen den Regeln für ein wohlgeformtes XML 1.0-Dokument gemäß W3C-Definition. Diese Ebene der Überprüfung sorgt dafür, dass alle Prozessoren den gelesenen oder geschriebenen Stream als XML 1.0-Dokument verwenden können.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Die XML-Daten entsprechen den Regeln für ein wohlgeformtes XML-Fragment gemäß W3C-Definition.  Dieser Konformitätsgrad steht für ein XML-Dokument, das möglicherweise kein Stammelement aufweist, aber ansonsten wohlgeformt ist. Diese Ebene der Überprüfung sorgt dafür, dass alle Prozessoren den gelesenen oder geschriebenen Stream als extern analysierte XML 1.0-Entität verwenden können.</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Gibt die Optionen für die DTD-Verarbeitung an. Die <see cref="T:System.Xml.DtdProcessing" />-Enumeration wird von der <see cref="T:System.Xml.XmlReaderSettings" />-Klasse verwendet.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Führt dazu, dass das DOCTYPE-Element ignoriert wird. Es wird keine DTD-Verarbeitung durchgeführt, und DTD/DOCTYPE geht bei der Ausgabe verloren.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Wird zum Analysieren von DTDs verwendet.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Gibt an, dass beim Auftreten einer DTD eine <see cref="T:System.Xml.XmlException" /> mit der Meldung ausgelöst wird, dass DTDs nicht zulässig sind. Dies ist das Standardverhalten.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Gibt an, wie der <see cref="T:System.Xml.XmlTextReader" /> oder <see cref="T:System.Xml.XmlValidatingReader" /> Entitäten behandelt.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Erweitert Zeichenentitäten und gibt allgemeine Entitäten als <see cref="F:System.Xml.XmlNodeType.EntityReference" />-Knoten zurück.
Sie müssen <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> aufrufen, um die Erweiterung der allgemeinen Entitäten anzuzeigen. So können Sie die Entitätsverarbeitung optimieren, indem Sie die Entität einfach bei ihrer ersten Verwendung erweitern.
Bei Festlegung auf <see langword="ExpandCharEntities" /> werden durch den Aufruf der <see cref="Overload:System.Xml.XmlReader.GetAttribute" />-Methode in einem Reader alle Entitäten erweitert (sowohl allgemeine als auch Zeichenentitäten).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Erweitert alle Entitäten und gibt die erweiterten Knoten zurück.
<see cref="F:System.Xml.XmlNodeType.EntityReference" />-Knoten werden nicht zurückgegeben. Der Entitätstext wird anstelle der Entitätsverweise erweitert.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Gibt Formatierungsoptionen für den <see cref="T:System.Xml.XmlTextWriter" /> an.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Veranlasst, dass untergeordnete Elemente entsprechend den Einstellungen von <see cref="P:System.Xml.XmlTextWriter.Indentation" /> und <see cref="P:System.Xml.XmlTextWriter.IndentChar" /> eingerückt werden.
Diese Option rückt nur Elementinhalte ein; gemischte Inhalte sind nicht betroffen. XML 1.0-Definitionen dieser Begriffe finden Sie in der W3C-Dokumentation (World Wide Web Consortium) zu Elementinhalten und zu gemischten Inhalten.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>Es wird keine besondere Foramtierung angewendet. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary>Stellt einen Anwendungsressourcen-Streamresolver dar.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary>Gibt einen Anwendungsressourcenstram aus der angegebenen URL zurück.</summary>
      <param name="relativeUri">Die relative URI.</param>
      <returns>Eine Anwendungsressourcenstream.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Ermöglicht einer Klasse die Rückgabe eines <see cref="T:System.Xml.XmlNode" /> aus dem aktuellen Kontext oder der aktuellen Position.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Gibt den <see cref="T:System.Xml.XmlNode" /> für die aktuelle Position zurück.</summary>
      <returns>Der <see langword="XmlNode" /> für die aktuelle Position.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Stellt eine Schnittstelle bereit, über die eine Klasse Zeilen- und Positionsinformationen zurückgeben kann.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Ruft einen Wert ab, der angibt, ob die Klasse Zeileninformationen zurückgeben kann.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> und <see cref="P:System.Xml.IXmlLineInfo.LinePosition" /> angegeben werden können, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Ruft die aktuelle Zeilennummer ab.</summary>
      <returns>Die aktuelle Zeilennummer oder 0, wenn keine Zeileninformationen vorliegen (z. B. gibt <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /><see langword="false" /> zurück).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Ruft die aktuelle Zeilenposition ab.</summary>
      <returns>Die aktuelle Zeilenposition oder 0, wenn keine Zeileninformationen vorliegen (z. B. gibt <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /><see langword="false" /> zurück).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Stellt den schreibgeschützten Zugriff auf eine Gruppe von Präfix- und Namespacezuordnungen bereit.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Ruft eine Auflistung von definierten Präfix-Namespace-Zuordnungen ab, die sich derzeit im Gültigkeitsbereich befinden.</summary>
      <param name="scope">Ein <see cref="T:System.Xml.XmlNamespaceScope" />-Wert, der den Typ der Namespaceknoten angibt, die zurückgegeben werden sollen.</param>
      <returns>Ein <see cref="T:System.Collections.IDictionary" />, das die derzeit im Gültigkeitsbereich enthaltenen Namespaces enthält.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Ruft den dem angegebenen Präfix zugeordneten Namespace-URI ab.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI gesucht werden soll.</param>
      <returns>Der Namespace-URI, der dem Präfix zugeordnet ist. <see langword="null" />, wenn das Präfix keinem Namespace-URI zugeordnet ist.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Ruft das Präfix ab, das dem angegebenen Namespace-URI zugeordnet ist.</summary>
      <param name="namespaceName">Der Namespace-URI, dessen Präfix gesucht werden soll.</param>
      <returns>Das Präfix, das dem Namespace-URI zugeordnet ist; <see langword="null" />, wenn der Namespace-URI keinem Präfix zugeordnet ist.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Gibt an, ob doppelte Namespacedeklarationen im <see cref="T:System.Xml.XmlWriter" /> entfernt werden sollen.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Gibt an, dass doppelte Namespacedeklarationen nicht entfernt werden.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Gibt an, dass doppelte Namespacedeklarationen entfernt werden. Voraussetzung für das Entfernen des doppelten Namespace ist, dass Präfix und Namespace übereinstimmen.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implementiert eine Singlethread-<see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Initialisiert eine neue Instanz der <see langword="NameTable" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomisiert die angegebene Zeichenfolge und fügt diese der <see langword="NameTable" /> hinzu.</summary>
      <param name="key">Das Zeichenarray mit der hinzuzufügenden Zeichenfolge.</param>
      <param name="start">Der nullbasierte Index im Array, der das erste Zeichen der Zeichenfolge angibt.</param>
      <param name="len">Die Anzahl der Zeichen in der Zeichenfolge.</param>
      <returns>Die atomisierte Zeichenfolge bzw. die vorhandene, sofern bereits eine Zeichenfolge in der <see langword="NameTable" /> vorhanden ist. Wenn <paramref name="len" /> 0 ist, wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />
- oder -
<paramref name="start" /> &gt;= <paramref name="key" />.Length
- oder -
<paramref name="len" /> &gt;= <paramref name="key" />.Length
Die oben genannten Bedingungen führen nicht zum Auslösen einer Ausnahme, wenn <paramref name="len" /> = 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Atomisiert die angegebene Zeichenfolge und fügt diese der <see langword="NameTable" /> hinzu.</summary>
      <param name="key">Die hinzuzufügende Zeichenfolge.</param>
      <returns>Die atomisierte Zeichenfolge bzw. die vorhandene, sofern bereits eine Zeichenfolge in der <see langword="NameTable" /> vorhanden ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Ruft die atomisierte Zeichenfolge ab, die dieselben Zeichen wie der angegebene Zeichenbereich im angegebenen Array enthält.</summary>
      <param name="key">Das Zeichenarray mit dem gesuchten Namen.</param>
      <param name="start">Der nullbasierte Index im Array, der das erste Zeichen des Namens angibt.</param>
      <param name="len">Die Anzahl der Zeichen im Namen.</param>
      <returns>Die atomisierte Zeichenfolge oder <see langword="null" />, wenn die Zeichenfolge noch nicht atomisiert wurde. Wenn <paramref name="len" /> 0 ist, wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />
- oder -
<paramref name="start" /> &gt;= <paramref name="key" />.Length
- oder -
<paramref name="len" /> &gt;= <paramref name="key" />.Length
Die oben genannten Bedingungen führen nicht zum Auslösen einer Ausnahme, wenn <paramref name="len" /> = 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Ruft die atomisierte Zeichenfolge mit dem angegebenen Wert ab.</summary>
      <param name="value">Der gesuchte Name.</param>
      <returns>Das atomisierte Zeichenfolgenobjekt oder <see langword="null" />, wenn die Zeichenfolge noch nicht atomisiert wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Gibt an, wie Zeilenumbrüche behandelt werden.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Zeilenumbruchzeichen werden durch Entitätenzeichen ersetzt. Mit dieser Einstellung werden alle Zeichen beibehalten, wenn die Ausgabe von einem normalisierenden <see cref="T:System.Xml.XmlReader" /> gelesen wird.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Die Zeilenumbruchzeichen sind unverändert. Die Ausgabe ist gleich der Eingabe.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Zeilenumbruchzeichen werden ersetzt, damit sie mit dem in der <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />-Eigenschaft angegebenen Zeichen übereinstimmen.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Gibt den Zustand des Readers an.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Die <see cref="M:System.Xml.XmlReader.Close" />-Methode wurde aufgerufen.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>Das Ende der Datei wurde mit Erfolg erreicht.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Es ist ein Fehler aufgetreten, der verhindert, dass der Lesevorgang fortgeführt werden kann.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>Die <see langword="Read" />-Methode wurde nicht aufgerufen.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Die <see langword="Read" />-Methode wurde aufgerufen. Für den Reader können zusätzliche Methoden aufgerufen werden.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>Die <see cref="T:System.Xml.Resolvers.XmlKnownDtds" />-Enumeration wird vom <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> verwendet und definiert, welche bekannten DTDs der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> erkennt.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Gibt an, dass der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> alle gerade unterstützten DTDs erkennt. Dies ist das Standardverhalten.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Gibt an, dass der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> keine der vordefinierten DTDs erkennt.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Gibt an, dass <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> alle DTDs und Entitäten erkennt, die in RSS 0.91 definiert sind.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Gibt an, dass <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> alle DTDs und Entitäten erkennt, die in XHTML 1.0 definiert sind.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Stellt eine Klasse dar, die zum Vorauffüllen des Cache mit DTDs oder XML-Streams verwendet wird.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> -Klasse mit den angegebenen vorab geladenen bekannten DTDs.</summary>
      <param name="preloadedDtds">Die bekannten DTDs, die vorab in den Cache gefüllt werden sollten.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Klasse mit dem angegebenen Fallback-Resolver.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> oder Ihr eigener Resolver.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Klasse mit dem angegebenen Fallback-Resolver und den vorab geladenen bekannten DTDs.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> oder Ihr eigener Resolver.</param>
      <param name="preloadedDtds">Die bekannten DTDs, die vorab in den Cache gefüllt werden sollten.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Klasse mit dem angegebenen Fallback-Resolver, den vorab geladenen bekannten DTDs und dem URI-Gleichheitsvergleich.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> oder Ihr eigener Resolver.</param>
      <param name="preloadedDtds">Die bekannten DTDs, die vorab in den Cache gefüllt werden sollten.</param>
      <param name="uriComparer">Die Implementierung der generischen <see cref="T:System.Collections.Generic.IEqualityComparer`1" />-Schnittstelle, die beim Vergleichen von URIs verwendet werden soll.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Fügt dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher ein Bytearray hinzu und ordnet es zu einem URI zu. Wenn im Speicher bereits ein Mapping für denselben URI enthalten ist, wird das bestehende Mapping überschrieben.</summary>
      <param name="uri">Der URI der Daten, die dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher hinzugefügt werden.</param>
      <param name="value">Ein Bytearray mit den Daten, die dem bereitgestellten URI entsprechen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Fügt dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher ein Bytearray hinzu und ordnet es zu einem URI zu. Wenn im Speicher bereits ein Mapping für denselben URI enthalten ist, wird das bestehende Mapping überschrieben.</summary>
      <param name="uri">Der URI der Daten, die dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher hinzugefügt werden.</param>
      <param name="value">Ein Bytearray mit den Daten, die dem bereitgestellten URI entsprechen.</param>
      <param name="offset">Der Offset im bereitgestellten Bytearray, in dem die Daten beginnen.</param>
      <param name="count">Die Anzahl der ab dem bereitgestellten Offset aus dem Bytearray zu lesenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> oder <paramref name="count" /> ist kleiner als 0 (null).

oder -
Die Länge der Differenz von <paramref name="value" /> und <paramref name="offset" /> ist kleiner als <paramref name="count." /></exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Fügt einen <see cref="T:System.IO.Stream" /> dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> Speicher hinzu und ordnet es zu einem URI zu. Wenn im Speicher bereits ein Mapping für denselben URI enthalten ist, wird das bestehende Mapping überschrieben.</summary>
      <param name="uri">Der URI der Daten, die dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher hinzugefügt werden.</param>
      <param name="value">Ein <see cref="T:System.IO.Stream" /> mit den Daten, die dem bereitgestellten URI entsprechen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Fügt dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher einen Stream mit vorab geladenen Daten hinzu und nimmt eine Zuordnung zu einem URI vor. Wenn im Speicher bereits ein Mapping für denselben URI enthalten ist, wird das bestehende Mapping überschrieben.</summary>
      <param name="uri">Der URI der Daten, die dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher hinzugefügt werden.</param>
      <param name="value">Ein <see langword="String" /> mit den Daten, die dem bereitgestellten URI entsprechen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> oder <paramref name="value" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Legt die Anmeldeinformationen fest, mit denen der zugrunde liegende <see cref="T:System.Net.WebRequest" /> authentifiziert wird.</summary>
      <returns>Die Anmeldeinformationen, mit denen die zugrunde liegende Webanforderung authentifiziert wird.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">In der aktuellen Version von .NET Framework für Silverlight wird dieser Parameter beim Auflösen von URIs nicht verwendet. Dieser Parameter wird für die spätere Erweiterbarkeit bereitgestellt. Dieser Parameter kann z. B. xlink:role zugeordnet und als implementierungsspezifisches Argument in anderen Szenarios verwendet werden.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> unterstützt <see cref="T:System.IO.Stream" />-Objekte und <see cref="T:System.IO.TextReader" />-Objekte für URIs, die als <see langword="String" /> hinzugefügt wurden. Wenn der angeforderte Typ nicht vom Resolver unterstützt wird, wird eine Ausnahme ausgelöst. Verwenden Sie die <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />-Methode, um zu ermitteln, ob ein bestimmter <see langword="Type" /> von diesem Resolver unterstützt wird.</param>
      <returns>Ein <see cref="T:System.IO.Stream" /> oder ein <see cref="T:System.IO.TextReader" />-Objekt, das der tatsächlichen Quelle entspricht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">In <paramref name="absoluteUri" /> übergebener URI kann nicht aufgelöst werden.
- oder -
<paramref name="ofObjectToReturn" /> ist kein unterstützter Typ.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">In der aktuellen Version von .NET Framework für Silverlight wird dieser Parameter beim Auflösen von URIs nicht verwendet. Dieser Parameter wird für die spätere Erweiterbarkeit bereitgestellt. Dieser Parameter kann z. B. xlink:role zugeordnet und als implementierungsspezifisches Argument in anderen Szenarios verwendet werden.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Der <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> unterstützt <see cref="T:System.IO.Stream" />-Objekte und <see cref="T:System.IO.TextReader" />-Objekte für URIs, die als <see langword="String" /> hinzugefügt wurden. Wenn der angeforderte Typ nicht vom Resolver unterstützt wird, wird eine Ausnahme ausgelöst. Verwenden Sie die <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" />-Methode, um zu ermitteln, ob ein bestimmter <see langword="Type" /> von diesem Resolver unterstützt wird.</param>
      <returns>Ein <see cref="T:System.IO.Stream" /> oder ein <see cref="T:System.IO.TextReader" />-Objekt, das der tatsächlichen Quelle entspricht.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Ruft eine Auflistung der vorab geladenen URIs ab.</summary>
      <returns>Die Auflistung der vorab geladenen URIs.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Entfernt die Daten, die dem URI entsprechen, aus dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri">Der URI der Daten, die aus dem <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />-Speicher entfernt werden sollen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Löst den absoluten URI ausgehend von der Basis und relativen URIs auf.</summary>
      <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
      <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
      <returns>Ein <see cref="T:System.Uri" />, der den absoluten URI darstellt, oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Bestimmt, ob der Resolver andere <see cref="T:System.Type" /> als nur <see cref="T:System.IO.Stream" /> unterstützt.</summary>
      <param name="absoluteUri">Der absolute zu überprüfende URI.</param>
      <param name="type">Die zurückzugebende <see cref="T:System.Type" />.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Type" /> unterstützt wird, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Definiert das Post-Schema-Validation-Infoset eines validierten XML-Knotens.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob dieser überprüfte XML-Knoten infolge eines Standardwerts festgelegt wurde, der bei einer Validierung eines XSD-Sprachschemas (XML Schema Definition) angewendet wurde.</summary>
      <returns>
        <see langword="true" />, wenn dieser validierte XML-Knoten als Ergebnis eines während der Schemavalidierung angewendeten Standardwerts festgelegt wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Ruft einen Wert ab, der angibt, ob der Wert für diesen überprüften XML-Knoten NULL ist.</summary>
      <returns>
        <see langword="true" />, wenn der Wert für diesen validierten XML-Knoten NULL ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Ruft den dynamischen Schematyp für diesen überprüften XML-Knoten ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekt, das den dynamischen Schematyp für diesen überprüften XML-Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Ruft das kompilierte <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ab, das diesem validierten XML-Knoten entspricht.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />, das diesem überprüften XML-Knoten entspricht.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Ruft das kompilierte <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ab, das diesem validierten XML-Knoten entspricht.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaElement" />, das diesem überprüften XML-Knoten entspricht.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Ruft den statischen Typ des XSD-Schemas (XML Schema Definition) dieses überprüften XML-Knotens ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaType" /> dieses überprüften XML-Knotens.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaValidity" />-Wert dieses überprüften XML-Knotens ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaValidity" />-Wert dieses überprüften XML-Knotens.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Gibt ausführliche Informationen über den <see langword="ValidationEventHandler" /> zurück.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Ruft die dem Validierungsereignis zugeordnete <see cref="T:System.Xml.Schema.XmlSchemaException" /> ab.</summary>
      <returns>Die dem Validierungsereignis zugeordnete <see langword="XmlSchemaException" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Ruft die Textbeschreibung ab, die dem Validierungsereignis entspricht.</summary>
      <returns>Die Textbeschreibung.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Ruft den Schweregrad des Validierungsereignisses ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSeverityType" />-Wert, der den Schweregrad des Validierungsereignisses darstellt.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Stellt die Rückrufmethode dar, mit der Ereignisse der XML-Schemavalidierung und die <see cref="T:System.Xml.Schema.ValidationEventArgs" /> behandelt werden.</summary>
      <param name="sender">Die Quelle des Ereignisses.
Hinweis: Bestimmen Sie den Typ eines Absenders, bevor Sie ihn im Code verwenden. Sie können nicht davon ausgehen, dass der Absender eine Instanz eines bestimmten Typs ist. Es ist auch nicht gewährleistet, dass der Absender NULL ist. Umschließen Sie Umwandlungen immer mit einem Code für die Fehlerbehandlung.</param>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Stellt den typisierten Wert eines überprüften XML-Elements bzw. XML-Attributs dar. Die <see cref="T:System.Xml.Schema.XmlAtomicValue" />-Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Gibt eine Kopie dieses <see cref="T:System.Xml.Schema.XmlAtomicValue" />-Objekts zurück.</summary>
      <returns>Eine Kopie des <see cref="T:System.Xml.Schema.XmlAtomicValue" />-Objekts dieses <see cref="T:System.Xml.Schema.XmlAtomicValue" />-Objekts.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Ruft einen Wert ab, der angibt, ob das überprüfte XML-Element bzw. XML-Attribut ein XPath-Knoten oder ein atomarer Wert ist.</summary>
      <returns>
        <see langword="true" />, wenn das überprüfte XML-Element bzw. XML-Attribut ein XPath-Knoten ist, und <see langword="false" />, wenn das überprüfte XML-Element bzw. XML-Attribut ein atomarer Wert ist.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Eine Kopie dieses <see cref="T:System.Xml.Schema.XmlAtomicValue" />-Objekts.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Ruft den <see langword="string" />-Wert des überprüften XML-Elements bzw. XML-Attributs ab.</summary>
      <returns>Der <see langword="string" />-Wert des überprüften XML-Elements bzw. XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Ruft das aktuell überprüfte XML-Element bzw. XML-Attribut als geschachteltes Objekt des geeignetsten Microsoft .NET Framework-Typs gemäß seines Schematyps ab.</summary>
      <returns>Das derzeit überprüfte XML-Element bzw. XML-Attribut als geschachteltes Objekt des geeignetsten Microsoft .NET Framework-Typs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Ruft den <see langword="string" />-Wert des überprüften XML-Elements bzw. XML-Attributs ab.</summary>
      <returns>Der <see langword="string" />-Wert des überprüften XML-Elements bzw. XML-Attributs.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Gibt das überprüfte XML-Element oder den Wert des XML-Attributs als Typ zurück, der mithilfe des <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekts angegeben wurde, das zum Auflösen von Namespacepräfixen angegeben wurde.</summary>
      <param name="type">Der Typ, als der das überprüfte XML-Element oder der Wert des XML-Attributs zurückgegeben wird.</param>
      <param name="nsResolver">Das zum Auflösen von Namespacepräfixen verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
      <returns>Der Wert des überprüften XML-Elements bzw. XML-Attributs als angeforderter Typ.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den Zieltyp auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Ruft das überprüfte XML-Element oder den Wert des XML-Attributs als <see cref="T:System.Boolean" /> ab.</summary>
      <returns>Das überprüfte XML-Element oder der Wert des XML-Attributs als <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den <see cref="T:System.Boolean" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Boolean" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Ruft das überprüfte XML-Element oder den Wert des XML-Attributs als <see cref="T:System.DateTime" /> ab.</summary>
      <returns>Das überprüfte XML-Element oder der Wert des XML-Attributs als <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den <see cref="T:System.DateTime" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.DateTime" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Ruft das überprüfte XML-Element oder den Wert des XML-Attributs als <see cref="T:System.Double" /> ab.</summary>
      <returns>Das überprüfte XML-Element oder der Wert des XML-Attributs als <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den <see cref="T:System.Double" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Double" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Ruft das überprüfte XML-Element oder den Wert des XML-Attributs als <see cref="T:System.Int32" /> ab.</summary>
      <returns>Das überprüfte XML-Element oder der Wert des XML-Attributs als <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den <see cref="T:System.Int32" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int32" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Ruft das überprüfte XML-Element oder den Wert des XML-Attributs als <see cref="T:System.Int64" /> ab.</summary>
      <returns>Das überprüfte XML-Element oder der Wert des XML-Attributs als <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Das überprüfte XML-Element oder der Wert des XML-Attributs weist nicht das richtige Format für den <see cref="T:System.Int64" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int64" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Ruft den Microsoft .NET Framework-Typ des überprüften XML-Elements bzw. XML-Attributs ab.</summary>
      <returns>Der .NET Framework-Typ des überprüften XML-Elements bzw. XML-Attributs. Der Standardwert ist <see cref="T:System.String" />sein.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaType" /> für das überprüfte XML-Element bzw. XML-Attribut ab.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaType" /> für das überprüfte XML-Element bzw. XML-Attribut.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Eine speicherinterne Darstellung eines XML Schemas. Dies wird unter World Wide Web Consortium (W3C) in den Artikeln XML Schema Part 1: Structures (XML-Schema, Teil 1: Strukturen) und XML Schema Part 2: Datatypes (XML-Schema, Teil 2: Datentypen) erläutert.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchema" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Ruft die Form der Attribute ab, die im Zielnamespace des Schemas deklariert sind, oder legt dieses fest.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Wert, der angibt, ob Attribute aus dem Zielnamespace mit dem Namespacepräfix gekennzeichnet sein müssen. Die Standardeinstellung ist <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Ruft den Wert nach der Schemakompilierung aller globalen Attributgruppen im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />-Auflistung aller globalen Attributgruppen im Schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Ruft den Wert nach der Schemakompilierung für alle Attribute im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />-Auflistung aller Attribute im Schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Ruft das <see langword="blockDefault" />-Attribut ab, das den Standardwert des <see langword="block" />-Attributs für Elementtypen und komplexe Typen im <see langword="targetNamespace" /> des Schemas festlegt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />-Wert, der die anderen Methoden zum Verhindern von Ableitungen darstellt. Der Standardwert ist <see langword="XmlSchemaDerivationMethod.None" />sein.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Kompiliert das XML-Schema-Objektmodell (SOM) für die Validierung in Schemainformationen. Wird zur Validierung der syntaktischen und semantischen Struktur des programmgesteuert erstellten SOM verwendet. Semantische Validierung wird während der Kompilierung durchgeführt.</summary>
      <param name="validationEventHandler">Der Ereignishandler für die Validierung, der Informationen über Fehler bei der XML-Schema-Validierung empfängt.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Kompiliert das XML-Schema-Objektmodell (SOM) für die Validierung in Schemainformationen. Wird zur Validierung der syntaktischen und semantischen Struktur des programmgesteuert erstellten SOM verwendet. Semantische Validierung wird während der Kompilierung durchgeführt.</summary>
      <param name="validationEventHandler">Der Ereignishandler für die Validierung, der Informationen über Fehler bei der XML-Schema-Validierung empfängt.</param>
      <param name="resolver">Der <see langword="XmlResolver" />, der zum Auflösen von Namespaces verwendet wird, auf die im <see langword="include" />-Element und <see langword="import" />-Element verwiesen wird.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Ruft die Form der Elemente ab, die im Zielnamespace des Schemas deklariert sind, oder legt dieses fest.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Wert, der angibt, ob Elemente aus dem Zielnamespace mit dem Namespacepräfix gekennzeichnet sein müssen. Die Standardeinstellung ist <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Ruft den Wert nach der Schemakompilierung für alle Elemente im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />-Auflistung aller Elemente im Schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Ruft das <see langword="finalDefault" />-Attribut ab, das den Standardwert des <see langword="final" />-Attributs für Elemente und komplexe Typen im Zielnamespace des Schemas festlegt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />-Wert, der die anderen Methoden zum Verhindern von Ableitungen darstellt. Der Standardwert ist <see langword="XmlSchemaDerivationMethod.None" />sein.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Ruft den Wert nach der Schemakompilierung für alle Gruppen im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />-Auflistung aller Gruppen im Schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Ruft die Zeichenfolgen-ID ab oder legt diese fest.</summary>
      <returns>Die ID der Zeichenfolge. Der Standardwert ist <see langword="String.Empty" />sein.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Ruft die Auflistung von enthaltenen und importierten Schemas ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> von enthaltenen und importierten Schemas.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>Der Namespace der XML Schema-Instanz. Dieses Feld ist konstant.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Gibt an, ob das Schema kompiliert wurde.</summary>
      <returns>
        <see langword="true" />, wenn das Schema kompiliert wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Ruft die Auflistung von Schemaelementen im Schema ab und wird verwendet, um auf <see langword="schema" />-Elementebene neue Elementtypen hinzuzufügen.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> von Schemaelementen im Schema.</returns>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>Der XML Schema-Namespace. Dieses Feld ist konstant.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Ruft den Wert nach der Schemakompilierung für alle Notationen im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />-Auflistung aller Notationen im Schema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Liest ein XML-Schema aus dem bereitgestellten Stream.</summary>
      <param name="stream">Der bereitgestellte Datenstream.</param>
      <param name="validationEventHandler">Der Ereignishandler für die Validierung, der Informationen über Fehler der XML-Schema-Syntax empfängt.</param>
      <returns>Das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das das XML-Schema darstellt.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> wird ausgelöst, wenn kein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Liest ein XML-Schema aus dem bereitgestellten <see cref="T:System.IO.TextReader" />.</summary>
      <param name="reader">Der <see langword="TextReader" />, der das zu lesende XML-Schema enthält.</param>
      <param name="validationEventHandler">Der Ereignishandler für die Validierung, der Informationen über Fehler der XML-Schema-Syntax empfängt.</param>
      <returns>Das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das das XML-Schema darstellt.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> wird ausgelöst, wenn kein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Liest ein XML-Schema aus dem bereitgestellten <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der <see langword="XmlReader" />, der das zu lesende XML-Schema enthält.</param>
      <param name="validationEventHandler">Der Ereignishandler für die Validierung, der Informationen über Fehler der XML-Schema-Syntax empfängt.</param>
      <returns>Das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das das XML-Schema darstellt.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> wird ausgelöst, wenn kein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Ruft den Wert nach der Schemakompilierung für alle Schematypen im Schema ab.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> aller Schematypen im Schema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Ruft den URI (Uniform Resource Identifier) des Zielnamespaces des Schemas ab oder legt diesen fest.</summary>
      <returns>Der Zielnamespace des Schemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Ruft die qualifizierten Attribute ab, die nicht zum Zielnamespace des Schemas gehören, oder legt diese fest.</summary>
      <returns>Ein Array von qualifizierten <see cref="T:System.Xml.XmlAttribute" />-Objekten, die nicht zum Zielnamespace des Schemas gehören.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Ruft die Version des Schemas ab oder legt diese fest.</summary>
      <returns>Die Version des Schemas. Der Standardwert ist <see langword="String.Empty" />sein.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Schreibt das XML-Schema in den bereitgestellten Datenstream.</summary>
      <param name="stream">Der bereitgestellte Datenstream.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Schreibt das XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.Stream" /> in den angegebenen <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="stream">Der bereitgestellte Datenstream.</param>
      <param name="namespaceManager">Die <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Schreibt das XML-Schema in den angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.IO.TextWriter" />, in den geschrieben werden soll.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Schreibt das XML-Schema in den angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.IO.TextWriter" />, in den geschrieben werden soll.</param>
      <param name="namespaceManager">Die <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Schreibt das XML-Schema in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, in den geschrieben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="writer" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Schreibt das XML-Schema in den angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />, in den geschrieben werden soll.</param>
      <param name="namespaceManager">Die <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Stellt das W3C-<see langword="all" />-Element (World Wide Web Consortium) dar (Compositor).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAll" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Ruft die Auflistung von <see langword="XmlSchemaElement" />-Elementen ab, die im <see langword="all" />-Compositor enthalten sind.</summary>
      <returns>Die Auflistung der in <see langword="XmlSchemaAll" /> enthaltenen Elemente.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>Die Basisklasse für alle Elemente, die Anmerkungselemente enthalten können.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Ruft die <see langword="annotation" />-Eigenschaft ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, die die <see langword="annotation" />-Eigenschaft darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Ruft die Zeichenfolgen-ID ab oder legt diese fest.</summary>
      <returns>Die Zeichen folgen-ID. Der Standardwert <see langword="String.Empty" />ist. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Ruft die qualifizierten Attribute ab, die nicht zum Zielnamespace des aktuellen Schemas gehören, oder legt diese fest.</summary>
      <returns>Ein Array von qualifizierten <see cref="T:System.Xml.XmlAttribute" />-Objekten, die nicht zum Zielnamespace des Schemas gehören.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Stellt das W3C-<see langword="annotation" />-Element (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Ruft die Zeichenfolgen-ID ab oder legt diese fest.</summary>
      <returns>Die Zeichen folgen-ID. Der Standardwert <see langword="String.Empty" />ist. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Ruft die <see langword="Items" />-Auflistung ab, die zum Speichern der untergeordneten <see langword="appinfo" />-Elementen und <see langword="documentation" />-Elementen verwendet wird.</summary>
      <returns>Eine <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> von untergeordneten <see langword="appinfo" />- und <see langword="documentation" />-Elementen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Ruft die qualifizierten Attribute ab, die nicht zum Zielnamespace des Schemas gehören, oder legt diese fest.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.XmlAttribute" />-Objekten, die nicht zum Zielnamespace des Schemas gehören.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Stellt das W3C-<see langword="any" />-Element (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAny" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Ruft die Namespaces ab, die Elemente enthalten, die verwendet werden können, oder legt diese fest.</summary>
      <returns>Namespaces für Elemente, die verfügbar sind. Die Standardeinstellung ist <see langword="##any" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Ruft Informationen über die Behandlung der Validierung von XML-Dokumenten für die im <see langword="any" />-Element angegebenen Elemente durch eine Anwendung oder einen XML-Prozessor ab oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />-Werte. Wenn kein <see langword="processContents" />-Attribut angegeben ist, wird standardmäßig <see langword="Strict" /> verwendet.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Stellt das W3C-<see langword="anyAttribute" />-Element (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Ruft die Namespaces ab, die Attribute enthalten, die verwendet werden können, oder legt diese fest.</summary>
      <returns>Namespaces für Attribute, die verfügbar sind. Die Standardeinstellung ist <see langword="##any" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Ruft Informationen über die Behandlung der Validierung von XML-Dokumenten für die im <see langword="anyAttribute" />-Element angegebenen Attribute durch eine Anwendung oder einen XML-Prozessor ab oder legt diese fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />-Werte. Wenn kein <see langword="processContents" />-Attribut angegeben ist, wird standardmäßig <see langword="Strict" /> verwendet.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Stellt das W3C-<see langword="appinfo" />-Element (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Ruft ein Array von <see cref="T:System.Xml.XmlNode" />-Objekten ab, das die untergeordneten <see langword="appinfo" />-Knoten darstellt, oder legt dieses fest.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.XmlNode" />-Objekten, das die untergeordneten <see langword="appinfo" />-Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Ruft die Quelle der Anwendungsinformationen ab oder legt diese fest.</summary>
      <returns>Ein URI-Verweis (Uniform Resource Identifier). Die Standardeinstellung ist <see langword="String.Empty" />. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Stellt das <see langword="attribute" />-Element aus dem XML-Schema dar, wie vom World Wide Web Consortium (W3C) festgelegt. Attribute enthalten zusätzliche Informationen zu anderen Dokumentelementen. Das Attributtag ist in den Tags eines Dokumentelements für das Schema geschachtelt. Im XML-Dokument werden die Attribute als benannte Elemente im öffnenden Tag eines Elements angezeigt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Ruft ein <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekt ab, das den Typ des Attributs auf Grundlage des <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" />-Werts oder des <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" />-Werts des Attributs darstellt.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Ruft das CLR-Objekt (Common Language Runtime) auf Grundlage des <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> oder des <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> des Attributs ab, das den Wert der <see langword="AttributeType" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Das CLR-Objekt (Common Runtime Library), das den Wert der <see langword="AttributeType" />-Eigenschaft nach der Kompilierung enthält.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Ruft den Standardwert für das Attribut ab oder legt diesen fest.</summary>
      <returns>Der Standardwert für das Attribut. Der Standardwert ist ein NULL-Verweis. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Ruft den festen Wert für das Attribut ab oder legt diesen fest.</summary>
      <returns>Der feste Wert für das Attribut. Der Standardwert ist NULL. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Ruft die Form für das Attribut ab oder legt dieses fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Der Standardwert ist der Wert von <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> des Schemaelements, das das Attribut enthält. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Ruft den Namen des Attributs ab oder legt diesen fest.</summary>
      <returns>Der Name des Attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Ruft den qualifizierten Namen des Attributs ab.</summary>
      <returns>Der Wert der <see langword="QualifiedName" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Ruft den Namen eines in diesem Schema (oder einem anderen durch den angegebenen Namespace bezeichneten Schema) deklarierten Attributs ab.</summary>
      <returns>Der Name des deklarierten Attributs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Ruft den Attributtyp für einen einfachen Typ ab oder legt diesen fest.</summary>
      <returns>Der in diesem Schema definierte einfache Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Ruft den Namen des in diesem Schema (oder einem anderen durch den angegebenen Namespace bezeichneten Schemas) definierten einfachen Typs ab oder legt diesen fest.</summary>
      <returns>Der Name des einfachen Typs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Ruft Informationen über die Verwendung des Attributs ab oder legt diese fest.</summary>
      <returns>Einer der Werte None, Prohibited, Optional oder Required. Der Standardwert ist Optional. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Stellt das <see langword="attributeGroup" />-Element aus dem XML-Schema dar, wie vom World Wide Web Consortium (W3C) festgelegt. AttributesGroups stellt einen Mechanismus zum Gruppieren einer Reihe von Attributdeklarationen bereit, sodass diese als Gruppe in komplexe Typdefinitionen integriert werden können.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente der Attributgruppe ab oder legt diese fest.</summary>
      <returns>Das W3C-<see langword="anyAttribute" />-Element (World Wide Web Consortium).</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Ruft die Auflistung von Attributen für die Attributgruppe ab. Enthält <see langword="XmlSchemaAttribute" />-Elemente und <see langword="XmlSchemaAttributeGroupRef" />-Elemente.</summary>
      <returns>Die Auflistung von Attributen für die Attributgruppe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Ruft den Namen der Attributgruppe ab oder legt diesen fest.</summary>
      <returns>Der Name der Attributgruppe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Ruft den qualifizierten Namen der Attributgruppe ab.</summary>
      <returns>Der qualifizierte Namen der Attributgruppe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Ruft die neu definierte Attributgruppeneigenschaft aus dem XML-Schema ab.</summary>
      <returns>Die neu definierte Attributgruppeneigenschaft.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Stellt das <see langword="attributeGroup" />-Element mit dem <see langword="ref" />-Attribut aus dem XML Schema dar, wie vom World Wide Web Consortium (W3C) festgelegt. AttributesGroupRef ist der Verweis auf eine attributeGroup. Die name-Eigenschaft enthält die Attributgruppe, auf die verwiesen wird.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Ruft den Namen des <see langword="attributeGroup" />-Elements ab, auf das verwiesen wird, oder legt diesen fest.</summary>
      <returns>Der Name der Attributgruppe, auf die verwiesen wird. Der Wert muss ein QName sein.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Stellt das <see langword="choice" />-Element (Compositor) aus dem XML-Schema laut Spezifikation des World Wide Web Consortium (W3C) dar. <see langword="choice" /> erlaubt es nur einem der untergeordneten Elemente, in einer Instanz angezeigt zu werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaChoice" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Ruft die Auflistung von Elementen ab, die im Compositor (<see langword="choice" />) enthalten sind: <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> oder <see langword="XmlSchemaAny" />.</summary>
      <returns>Die Auflistung der in <see langword="XmlSchemaChoice" /> enthaltenen Elemente.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Enthält einen Cache mit XSD-Schemas (XML Schema Definition) und XDR-Schemas (XML-Data Reduced). Die Klasse <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> ist veraltet. Verwenden Sie stattdessen <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlSchemaCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlSchemaCollection" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />. Die <see langword="XmlNameTable" /> wird beim Laden von Schemas verwendet.</summary>
      <param name="nametable">Der zu verwendende <see langword="XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Fügt das durch die angegebene URL angegebene Schema der Schemaauflistung hinzu.</summary>
      <param name="ns">Der Namespace-URI, der dem Schema zugeordnet ist. Bei XML-Schemas ist dies i. d. R. der <see langword="targetNamespace" />.</param>
      <param name="uri">Die URL, die das zu ladende Schema angibt.</param>
      <returns>Das der Schemaauflistung hinzugefügte <see cref="T:System.Xml.Schema.XmlSchema" />. <see langword="null" />, wenn das hinzugefügte Schema ein XDR-Schema ist oder das Schema Kompilierungsfehler aufweist.</returns>
      <exception cref="T:System.Xml.XmlException">Das Schema ist kein gültiges Schema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Fügt der Schemaauflistung das im <see cref="T:System.Xml.XmlReader" /> enthaltene Schema hinzu.</summary>
      <param name="ns">Der Namespace-URI, der dem Schema zugeordnet ist. Bei XML-Schemas ist dies i. d. R. der <see langword="targetNamespace" />.</param>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, der das hinzuzufügende Schema enthält.</param>
      <returns>Das der Schemaauflistung hinzugefügte <see cref="T:System.Xml.Schema.XmlSchema" />. <see langword="null" />, wenn das hinzugefügte Schema ein XDR-Schema ist oder das Schema Kompilierungsfehler aufweist.</returns>
      <exception cref="T:System.Xml.XmlException">Das Schema ist kein gültiges Schema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Fügt der Schemaauflistung das im <see cref="T:System.Xml.XmlReader" /> enthaltene Schema hinzu. Der angegebene <see cref="T:System.Xml.XmlResolver" /> wird zum Auflösen externer Ressourcen verwendet.</summary>
      <param name="ns">Der Namespace-URI, der dem Schema zugeordnet ist. Bei XML-Schemas ist dies i. d. R. der <see langword="targetNamespace" />.</param>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, der das hinzuzufügende Schema enthält.</param>
      <param name="resolver">Der <see cref="T:System.Xml.XmlResolver" />, der zum Auflösen von Namespaces verwendet wird, auf die im <see langword="include" />-Element und im <see langword="import" />-Element oder im <see langword="x-schema" />-Attribut (XDR-Schemas) verwiesen wird. Bei <see langword="null" /> werden externe Verweise nicht aufgelöst.</param>
      <returns>Das der Schemaauflistung hinzugefügte <see cref="T:System.Xml.Schema.XmlSchema" />. <see langword="null" />, wenn das hinzugefügte Schema ein XDR-Schema ist oder das Schema Kompilierungsfehler aufweist.</returns>
      <exception cref="T:System.Xml.XmlException">Das Schema ist kein gültiges Schema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Fügt der Auflistung das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzu.</summary>
      <param name="schema">Der der Auflistung hinzuzufügende <see langword="XmlSchema" />.</param>
      <returns>Das <see langword="XmlSchema" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Fügt der Auflistung das <see cref="T:System.Xml.Schema.XmlSchema" /> hinzu. Der angegebene <see cref="T:System.Xml.XmlResolver" /> wird zum Auflösen externer Verweise verwendet.</summary>
      <param name="schema">Der der Auflistung hinzuzufügende <see langword="XmlSchema" />.</param>
      <param name="resolver">Der <see cref="T:System.Xml.XmlResolver" />, der zum Auflösen von Namespaces verwendet wird, auf die im <see langword="include" />-Element und <see langword="import" />-Element verwiesen wird. Bei <see langword="null" /> werden externe Verweise nicht aufgelöst.</param>
      <returns>Das der Schemaauflistung hinzugefügte <see langword="XmlSchema" />.</returns>
      <exception cref="T:System.Xml.XmlException">Das Schema ist kein gültiges Schema.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Fügt dieser Auflistung alle in der angegebenen Auflistung definierten Namespaces (einschließlich der zugeordneten Schemas) hinzu.</summary>
      <param name="schema">Die <see langword="XmlSchemaCollection" />, die dieser Auflistung hinzugefügt werden soll.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob in der Auflistung ein Schema mit dem angegebenen Namespace vorhanden ist.</summary>
      <param name="ns">Der Namespace-URI, der dem Schema zugeordnet ist. Bei XML-Schemas ist dies i. d. R. der Zielnamespace.</param>
      <returns>
        <see langword="true" />, wenn in der Auflistung ein Schema mit dem angegeben Namespace vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Ruft einen Wert ab, der angibt, ob der <see langword="targetNamespace" /> des angegebenen <see cref="T:System.Xml.Schema.XmlSchema" /> in der Auflistung vorhanden ist.</summary>
      <param name="schema">Das <see langword="XmlSchema" />-Objekt.</param>
      <returns>
        <see langword="true" />, wenn in der Auflistung ein Schema mit dem gleichen <see langword="targetNamespace" /> vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Kopiert alle <see langword="XmlSchema" />-Objekte ab dem angegebenen Index aus der Auflistung in das angegebene Array.</summary>
      <param name="array">Das Array, in das die Objekte kopiert werden sollen.</param>
      <param name="index">Der Index im <paramref name="array" />, bei dem mit dem Kopieren begonnen wird.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Ruft die Anzahl der in dieser Auflistung definierten Namespaces ab.</summary>
      <returns>Die Anzahl der in dieser Auflistung definierten Namespaces.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>Stellt Unterstützung für "for each"-Iterationen in der Auflistung von Schemas bereit.</summary>
      <returns>Ein Enumerator zum Durchlaufen aller Schemas in der aktuellen Auflistung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Ruft das dem angegebenen Namespace-URI zugeordnete <see cref="T:System.Xml.Schema.XmlSchema" /> ab.</summary>
      <param name="ns">Der Namespace-URI, der dem zurückzugebenden Schema zugeordnet ist. Dies ist normalerweise der <see langword="targetNamespace" /> des Schemas.</param>
      <returns>Das dem Namespace-URI zugeordnete <see langword="XmlSchema" />. <see langword="null" />, wenn dem angegebenen Namespace kein geladenes Schema zugeordnet ist oder der Namespace einem XDR-Schema zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Ruft die von der <see langword="XmlNameTable" /> beim Laden neuer Schemas verwendete Standard-<see langword="XmlSchemaCollection" /> ab.</summary>
      <returns>Eine <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">Das Array, in das die Objekte kopiert werden sollen.</param>
      <param name="index">Der Index im <paramref name="array" />, bei dem mit dem Kopieren begonnen wird.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung synchronisiert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>Ein <see cref="P:System.Collections.ICollection.SyncRoot" />-Objekt, das zum Synchronisieren des Zugriffs auf die Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>Der <see cref="T:System.Collections.IEnumerator" /> für die Auflistung.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Legt einen Ereignishandler zum Empfangen von Informationen über die XDR- und XML-Schema-Validierungsfehler.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Unterstützt eine einfache Iteration durch eine Auflistung. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Ruft das aktuelle <see cref="T:System.Xml.Schema.XmlSchema" /> in der Auflistung ab.</summary>
      <returns>Das aktuelle <see langword="XmlSchema" /> in der Auflistung.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Setzt den Enumerator auf das nächste Schema in der Auflistung.</summary>
      <returns>
        <see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, <see langword="false" />, wenn der Enumerator das Ende der Auflistung überschritten hat.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>Der aktuelle Knoten.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>Der nächste Knoten.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Stellt Schemakompilierungsoptionen für die <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Klasse bereit. Diese Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Xml.Schema.XmlSchemaSet" /> eine Überprüfung auf Verletzungen der UPA (Unique Particle Attribution) ausführen soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Xml.Schema.XmlSchemaSet" /> eine Überprüfung auf Verletzungen der UPA (Unique Particle Attribution) ausführen soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Stellt das <see langword="complexContent" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse stellt das Modell für komplexen Inhalt für komplexe Typen dar. Sie enthält Erweiterungen oder Einschränkungen für einen komplexen Typ, der nur Elemente oder gemischten Inhalt enthält.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Ruft den Inhalt ab oder legt diesen fest.</summary>
      <returns>Entweder die <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />-Klasse oder die <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />-Klasse.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Ruft Informationen ab, die bestimmen, ob der Typ über ein Modell für gemischten Inhalt verfügt, oder legt diese fest.</summary>
      <returns>Wenn diese Eigenschaft <see langword="true" /> ist, wird es Zeichendaten ermöglicht, zwischen den untergeordneten Elementen des komplexen Typs angezeigt zu werden (Modell für gemischten Inhalt). Die Standardeinstellung ist <see langword="false" />. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Stellt das <see langword="extension" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse ist für komplexe Typen mit einem Modell für komplexen Inhalt vorgesehen, die durch Erweiterung abgeleitet werden. Sie erweitert den komplexen Typ durch Hinzufügen von Attributen oder Elementen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des Modells für komplexen Inhalt ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des Modells für komplexen Inhalt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Ruft die Auflistung von Attributen für den komplexen Inhalt ab. Enthält <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Elemente und <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />-Elemente.</summary>
      <returns>Die Auflistung von Attributen für den komplexen Inhalt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Ruft den Namen des komplexen Typs ab, von dem dieser Typ durch Erweiterung abgeleitet ist, oder legt diesen fest.</summary>
      <returns>Der Name des komplexen Typs, von dem dieser Typ durch Erweiterung abgeleitet ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Ruft eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ab oder legt diese fest.</summary>
      <returns>Eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Stellt das <see langword="restriction" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse ist für komplexe Typen mit einem Modell für komplexen Inhalt vorgesehen, die durch Einschränkung abgeleitet werden. Sie schränkt die Inhalte des komplexen Typs auf eine Teilmenge des vererbten komplexen Typs ein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des Modells für komplexen Inhalt ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des Modells für komplexen Inhalt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Ruft die Auflistung von Attributen für den komplexen Typ ab. Enthält die <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Elemente und <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />-Elemente.</summary>
      <returns>Die Auflistung von Attributen für den komplexen Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Ruft den Namen eines komplexen Typs ab, von dem dieser Typ durch Einschränkung abgeleitet ist, oder legt diesen fest.</summary>
      <returns>Der Name des komplexen Typs, von dem dieser Typ durch Einschränkung abgeleitet ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Ruft eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ab oder legt diese fest.</summary>
      <returns>Eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Stellt das <see langword="complexType" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse definiert einen komplexen Typ, der die Gruppe der Attribute und den Inhalt eines Elements bestimmt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Ruft den Wert für die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des komplexen Typs ab oder legt diesen fest.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />-Komponente des komplexen Typs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Ruft die Auflistung von Attributen für den komplexen Typ ab.</summary>
      <returns>Enthält <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Klassen und <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />-Klassen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Ruft die Auflistung aller kompilierten Attribute dieses komplexen Typs und von dessen Basistypen ab.</summary>
      <returns>Die Auflistung aller Attribute aus diesem komplexen Typ und dessen Basistypen. Der Wert der <see langword="AttributeUses" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Ruft den Wert nach der Kompilierung von <see langword="anyAttribute" /> für diesen komplexen Typ und dessen Basistypen ab.</summary>
      <returns>Der Wert des <see langword="anyAttribute" />-Elements nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Ruft das <see langword="block" />-Attribut ab oder legt dieses fest.</summary>
      <returns>Das <see langword="block" />-Attribut verhindert, dass ein komplexer Typ in dem angegebenen Ableitungstyp verwendet wird. Die Standardeinstellung ist <see langword="XmlSchemaDerivationMethod.None" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Ruft den Wert ab, nachdem der Typ in den Informationensatz (infoset) für die Post-Schema-Validierung kompiliert wurde. Dieser Wert gibt an, wie ein Typ erzwungen wird, wenn <see langword="xsi:type" /> im Instanzdokument verwendet wird.</summary>
      <returns>Der Wert des Post-Schema-Validierungs-Infoset. Der Standardwert ist der <see langword="BlockDefault" />-Wert für das <see langword="schema" />-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Ruft das <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> nach der Kompilierung dieses komplexen Typs ab oder legt dieses fest.</summary>
      <returns>Der Typ des Inhaltsmodells ist entweder die <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />-Klasse oder die <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />-Klasse.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Ruft das Inhaltsmodell des komplexen Typs ab, der den Wert nach der Kompilierung enthält.</summary>
      <returns>Der Wert nach der Kompilierung des Inhaltsmodells für den komplexen Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Ruft das Partikel ab, das den Wert des <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />-Partikels nach der Kompilierung enthält.</summary>
      <returns>Das Partikel für den Inhaltstyp. Der Wert des <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />-Partikels nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Ruft Informationen ab, die bestimmen, ob das <see langword="complexType" />-Element im Instanzdokument verwendet werden kann, oder legt diese fest.</summary>
      <returns>Wenn <see langword="true" />, kann ein Element das <see langword="complexType" />-Element nicht direkt verwenden und muss einen vom <see langword="complexType" />-Element abgeleiteten komplexen Typ verwenden. Die Standardeinstellung ist <see langword="false" />. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Ruft Informationen ab, die bestimmen, ob der komplexe Typ über ein Modell für gemischten Inhalt (Markup im Inhalt) verfügt, oder legt diese fest.</summary>
      <returns>
        <see langword="true" />, wenn sich zwischen untergeordneten Elementen dieses komplexen Typs Zeichendaten befinden können, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Ruft den Compositortyp als eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ab oder legt diesen fest.</summary>
      <returns>Der Compositortyp.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Eine abstrakte Klasse für Schemainhalt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaContent" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Gibt die Reihenfolge und Struktur der untergeordneten Elemente eines Typs an.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Ruft den Inhalt des Typs ab oder legt diesen fest.</summary>
      <returns>Stellt den Inhalt des Typs bereit.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Stellt Informationen über den Validierungsmodus von Ersetzungen für <see langword="any" />-Elemente und <see langword="anyAttribute" />-Elemente bereit.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>Wenn das zugeordnete Schema gefunden wird, werden die Dokumentelemente validiert. Andernfalls werden keine Fehler ausgelöst.
Wenn das Element nicht validiert wird, versucht der XML-Prozessor, den Client durch einen Ereignishandler für die Validierung mit <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> zu benachrichtigen. Wenn kein Ereignishandler für die Validierung eingerichtet wurde, werden beim Generieren der Warnung keine Informationen zurückgegeben.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Dokumentelemente werden nicht überprüft.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Dokumentelemente müssen aus wohlgeformtem XML-Code bestehen und werden nicht gegen das Schema überprüft.
Der XML-Prozessor versucht, den Client über einen Ereignishandler für die Validierung mit <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> darüber zu benachrichtigen, dass für das angegebene Element keine Validierung stattgefunden hat. Wenn kein Ereignishandler für die Validierung eingerichtet wurde, werden beim Generieren der Warnung keine Informationen zurückgegeben.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>Der Schemaprozessor muss ein Schema finden, das dem angegebenen Namespace zugeordnet ist, um die Dokumentelemente zu validieren.
Wenn der Prozessor kein Schema findet oder wenn die Elemente ungültig sind, versucht der XML-Prozessor, den Client durch einen Ereignishandler für die Validierung mit <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> zu benachrichtigen. Wenn ein Validierungsfehler auftritt und kein Ereignishandler für die Validierung angegeben wurde, wird eine Ausnahme ausgelöst.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Enumerationen für das Inhaltsmodell des komplexen Typs. Dies stellt den Inhalt im Informationensatz (infoset) für die Post-Schema-Validierung dar.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Nur-Element-Inhalt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Leerer Inhalt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Gemischter Inhalt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Nur-Text-Inhalt.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>Die <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />-Klasse ist eine abstrakte Klasse für die Zuordnung von XSD-Typen (XML Schema Definition Language) zu CLR-Typen (Common Language Runtime).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Konvertiert den angegebenen Wert, dessen Typ eine der gültigen CLR-Entsprechungen (Common Language Runtime) des durch den <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> dargestellten XML-Schematyps ist, in den angegebenen CLR-Typ.</summary>
      <param name="value">Der Eingabewert, der in den angegebenen Typ konvertiert werden soll.</param>
      <param name="targetType">Der Zieltyp, in den der Eingabewert konvertiert werden soll.</param>
      <returns>Der konvertierte Eingabewert.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Object" />-Parameter oder der <see cref="T:System.Type" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Eine Konvertierung von einem Typ des angegebenen Werts in den angegebenen Typ wird nicht von dem durch den <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> dargestellten Typ unterstützt.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Konvertiert den angegebenen Wert, dessen Typ eine der gültigen CLR-Entsprechungen (Common Language Runtime) des durch den <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> dargestellten XML-Schematyps ist, mithilfe des <see cref="T:System.Xml.IXmlNamespaceResolver" /> in den angegebenen CLR-Typ, wenn der <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> den xs:QName-Typ oder einen davon abgeleiteten Typ darstellt.</summary>
      <param name="value">Der Eingabewert, der in den angegebenen Typ konvertiert werden soll.</param>
      <param name="targetType">Der Zieltyp, in den der Eingabewert konvertiert werden soll.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />, der für das Auflösen von Namespacepräfixen verwendet wird. Dies ist nur sinnvoll, wenn der <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> den xs:QName-Typ oder einen davon abgeleiteten Typ darstellt.</param>
      <returns>Der konvertierte Eingabewert.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Object" />-Parameter oder der <see cref="T:System.Type" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Eine Konvertierung von einem Typ des angegebenen Werts in den angegebenen Typ wird nicht von dem durch den <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> dargestellten Typ unterstützt.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>Die <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" />-Methode gibt immer <see langword="false" /> zurück.</summary>
      <param name="datatype">Die <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
      <returns>Gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>Überprüft beim Überschreiben in einer abgeleiteten Klasse den <see langword="string" />, der anhand eines integrierten oder benutzerdefinierten einfachen Typs angegeben wurde.</summary>
      <param name="s">Der <see langword="string" />, der anhand des einfachen Typs überprüft werden soll.</param>
      <param name="nameTable">Die <see cref="T:System.Xml.XmlNameTable" />, die bei der Analyse des <see langword="string" /> für die Atomisierung verwendet werden soll, wenn dieses <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />-Objekt den xs:NCName-Typ darstellt.</param>
      <param name="nsmgr">Das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das bei der Analyse des <see langword="string" /> verwendet werden soll, wenn dieses <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />-Objekt den xs:QName-Typ darstellt.</param>
      <returns>Ein <see cref="T:System.Object" />, das auf sichere Weise in den von der <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />-Eigenschaft zurückgegebenen Typ umgewandelt werden kann.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Eingabewert ist keine gültige Instanz dieses W3C-XML-Schematyps.</exception>
      <exception cref="T:System.ArgumentNullException">Der zu analysierende Wert darf nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ für den <see langword="string" /> entsprechend der Spezifikation XML 1.0 des W3C (World Wide Web Consortium) ab.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlTokenizedType" />-Wert für den <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlTypeCode" />-Wert für den einfachen Typ ab.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlTypeCode" />-Wert für den einfachen Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den CLR (Common Language Runtime)-Typ des Elements ab.</summary>
      <returns>Der CLR-Typ (Common Language Runtime) des Elements.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />-Wert für den einfachen Typ ab.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" />-Wert für den einfachen Typ.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Gibt für den Typ die Auswahl an Datentypen für W3C-XML-Schemas an.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>W3C-XML-Schema: atomarischer Typ</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>W3C-XML-Schema: Listentyp</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>W3C-XML-Schema: Union-Typ</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Stellt verschiedene Methoden für die Verhinderung von Ableitungen bereit.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <see langword="#all" />. Bezieht sich auf alle Ableitungsmethoden.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Überschreibt die Standardableitungsmethode, um alle Ableitungen zuzulassen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Bezieht sich auf Ableitungen durch <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Bezieht sich auf Ableitungen durch <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Akzeptiert die Standardableitungsmethode.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Bezieht sich auf Ableitungen durch <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Bezieht sich auf Ableitungen durch <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Bezieht sich auf Ableitungen durch <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Stellt das <see langword="documentation" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse gibt Informationen an, die von Benutzern in einer <see langword="annotation" /> gelesen oder verwendet werden können.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Ruft das <see langword="xml:lang" />-Attribut ab oder legt dieses fest. Dieses fungiert als Indikator der für den Inhalt verwendeten Sprache.</summary>
      <returns>Das <see langword="xml:lang" />-Attribut. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Ruft ein Array von <see langword="XmlNodes" /> ab, das die untergeordneten Dokumentationsknoten darstellt, oder legt dieses fest.</summary>
      <returns>Das Array, das die untergeordneten Dokumentationsknoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Ruft die URI-Quelle (Uniform Resource Identifier) der Informationen ab oder legt diese fest.</summary>
      <returns>Ein URI-Verweis. Die Standardeinstellung ist <see langword="String.Empty" />. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Stellt das <see langword="element" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse ist die Basisklasse für alle Partikeltypen und wird zum Beschreiben eines Elements in einem XML-Dokument verwendet.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaElement" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Ruft eine <see langword="Block" />-Ableitung ab oder legt diese fest.</summary>
      <returns>Das zum Blockieren eines Typrückschlusses verwendete Attribut. Der Standardwert lautet <see langword="XmlSchemaDerivationMethod.None" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Ruft den Wert der <see langword="Block" />-Eigenschaft nach der Kompilierung ab.</summary>
      <returns>Der Wert der <see langword="Block" />-Eigenschaft nach der Kompilierung. Der Standardwert ist der <see langword="BlockDefault" />-Wert für das <see langword="schema" />-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Ruft die Auflistung der Einschränkungen für das Element ab.</summary>
      <returns>Die Auflistung der Einschränkungen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Ruft den Standardwert des Elements ab oder legt diesen fest, wenn es sich beim Inhalt um einen einfachen Typ handelt oder der Inhalt des Elements <see langword="textOnly" /> ist.</summary>
      <returns>Der Standardwert für das Element. Der Standardwert ist ein NULL-Verweis. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Ruft ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Objekt ab, das den Typ des Elements auf Grundlage des <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" />-Werts oder des <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" />-Werts des Elements darstellt.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Ruft ein CLR-Objekt (Common Language Runtime) auf Grundlage des <see cref="T:System.Xml.Schema.XmlSchemaElement" /> oder des <see cref="T:System.Xml.Schema.XmlSchemaElement" /> des Elements ab, das den Wert der <see langword="ElementType" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Das Common Language Runtime-Objekt. Der Wert der <see langword="ElementType" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Ruft die <see langword="Final" />-Eigenschaft ab oder legt diese fest, um anzugeben, dass keine weiteren Ableitungen zulässig sind.</summary>
      <returns>Die <see langword="Final" />-Eigenschaft Die Standardeinstellung ist <see langword="XmlSchemaDerivationMethod.None" />. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Ruft den Wert der <see langword="Final" />-Eigenschaft nach der Kompilierung ab.</summary>
      <returns>Der Wert der <see langword="Final" />-Eigenschaft nach der Kompilierung. Der Standardwert ist der <see langword="FinalDefault" />-Wert für das <see langword="schema" />-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Ruft den festen Wert ab oder legt diesen fest.</summary>
      <returns>Der feste Wert, der vordefiniert und unveränderbar ist. Der Standardwert ist ein NULL-Verweis. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Ruft die Form für das Element ab oder legt diese fest.</summary>
      <returns>Die Form für das Element. Der Standardwert ist der <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />-Wert. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Ruft Informationen ab oder legt diese fest, um anzugeben, ob das Element in einem Instanzdokument verwendet werden kann.</summary>
      <returns>Bei <see langword="true" /> kann das Element nicht im Instanzdokument enthalten sein. Die Standardeinstellung ist <see langword="false" />. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Ruft Informationen ab, die angeben, ob <see langword="xsi:nil" /> in den Instanzdaten enthalten sein kann, oder legt diese fest. Gibt an, ob dem Element ein expliziter NULL-Wert zugewiesen werden kann.</summary>
      <returns>Wenn nillable <see langword="true" /> ist, kann das <see langword="nil" />-Attribut einer Instanz des Elements auf <see langword="true" /> festgelegt sein. Das <see langword="nil" />-Attribut ist als Teil des XML-Schemanamespaces für Instanzen definiert. Die Standardeinstellung ist <see langword="false" />. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Ruft den Namen des Elements ab oder legt diesen fest.</summary>
      <returns>Der Name des Elements. Die Standardeinstellung ist <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Ruft den tatsächlichen gekennzeichneten Namen des angegebenen Elements ab.</summary>
      <returns>Der qualifizierte Name des Elements. Der Wert der <see langword="QualifiedName" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Ruft den Verweisnamen eines in diesem Schema (oder einem anderen durch den angegebenen Namespace bezeichneten Schema) deklarierten Elements ab oder legt diesen fest.</summary>
      <returns>Der Verweisname des Elements.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Ruft den Typ des Elements ab oder legt diesen fest. Dabei kann es sich entweder um einen komplexen oder einen einfachen Typ handeln.</summary>
      <returns>Der Typ des Elements.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Ruft den Namen eines integrierten Datentyps ab, der in diesem Schema oder einem anderen durch den angegebenen Namespace bezeichneten Schema definiert ist, oder legt diesen fest.</summary>
      <returns>Der Name des integrierten Datentyps.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Ruft den Namen eines Elements ab, das von diesem Element ersetzt wird, oder legt diesen fest.</summary>
      <returns>Der gekennzeichnete Name eines Elements, das durch dieses Element ersetzt wird. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Stellt das <see langword="enumeration" />-Facet des XML-Schemas wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse gibt eine Liste der gültigen Werte für ein simpleType-Element an. Die Deklaration ist in einer <see langword="restriction" />-Deklaration enthalten.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Gibt ausführliche Informationen über die Schemaausnahme zurück.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Erstellt ein neues <see langword="XmlSchemaException" />-Objekt mit der angegebenen <see langword="SerializationInfo" /> und den <see langword="StreamingContext" />-Informationen, die alle Eigenschaften von <see langword="XmlSchemaException" /> enthalten.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaException" />-Klasse mit der angegebenen Ausnahmemeldung.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaException" />-Klasse mit der angegebenen Ausnahmemeldung und dem ursprünglichen <see cref="T:System.Exception" />-Objekt, das diese Ausnahme verursacht hat.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Das ursprüngliche T:System.Exception-Objekt, das diese Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaException" />-Klasse mit der angegebenen Ausnahmemeldung und dem ursprünglichen <see cref="T:System.Exception" />-Objekt, der ursprünglichen Zeilennummer sowie der ursprünglichen Position der Zeile des XML-Dokuments, die die angegebene Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Das ursprüngliche T:System.Exception-Objekt, das diese Ausnahme ausgelöst hat.</param>
      <param name="lineNumber">Die Zeilennummer der XML, die diese Ausnahme ausgelöst hat.</param>
      <param name="linePosition">Die Zeilenposition der XML, die diese Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überträgt alle <see langword="XmlSchemaException" />-Eigenschaften für den angegebenen <see langword="SerializationInfo" /> in die <see langword="StreamingContext" />-Klasse.</summary>
      <param name="info">Die <see langword="SerializationInfo" />.</param>
      <param name="context">Die <see langword="StreamingContext" />-Informationen.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Ruft die Nummer der Zeile ab, in der der Fehler aufgetreten ist.</summary>
      <returns>Die Nummer der Zeile, in der der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Ruft die Position der Zeile ab, an der der Fehler aufgetreten ist.</summary>
      <returns>Die Position der Zeile, an der der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Ruft die Beschreibung des Fehlerzustands dieser Ausnahme ab.</summary>
      <returns>Die Beschreibung des Fehlerzustands dieser Ausnahme.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>Ein <see langword="XmlSchemaObject" />, das die <see langword="XmlSchemaException" /> erstellt hat.</summary>
      <returns>Eine gültige Objektinstanz stellt einen strukturellen Validierungsfehler im XML-SOM (Schema Object Model) dar.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Ruft den URI (Uniform Resource Identifier)-Speicherort des Schemas ab, das die Ausnahme verursacht hat.</summary>
      <returns>Der URI-Speicherort des Schemas, das die Ausnahme verursacht hat.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Eine abstrakte Klasse. Stellt Informationen über das enthaltene Schema bereit.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaExternal" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Ruft die Zeichenfolgen-ID ab oder legt diese fest.</summary>
      <returns>Die Zeichen folgen-ID. Der Standardwert <see langword="String.Empty" />ist. Optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Ruft das <see langword="XmlSchema" /> für das Schema ab, auf das verwiesen wird, oder legt dieses fest.</summary>
      <returns>Das <see langword="XmlSchema" /> für das Schema, auf das verwiesen wird.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Ruft die URI-Position (Uniform Resource Identifier) für das Schema ab, die dem Schemaprozessor den physikalischen Speicherort des Schemas mitteilt, oder legt diese fest.</summary>
      <returns>Die URI-Position für das Schema. Optional für importierte Schemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Ruft die qualifizierten Attribute ab, die nicht zum Zielnamespace des Schemas gehören, oder legt diese fest.</summary>
      <returns>Gekennzeichnete Attribute, die zu einem anderen Zielnamespace gehören.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Abstrakte Klasse für alle Facets, die verwendet werden, wenn einfache Typen durch Einschränkung abgeleitet werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaFacet" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Ruft Informationen ab, die angeben, dass das Facet festgelegt ist, oder legt diese fest.</summary>
      <returns>
        <see langword="true" />, wenn der Wert festgelegt ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Ruft das <see langword="value" />-Attribut des Facets ab oder legt dieses fest.</summary>
      <returns>Das Wertattribut.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Gibt an, ob Attribute oder Elemente mit einem Namespacepräfix qualifiziert werden müssen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>Element- und Attributform werden im nicht Schema angegeben.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Elemente und Attribute müssen mit einem Namespacepräfix qualifiziert werden.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Elemente und Attribute müssen nicht mit einem Namespacepräfix qualifiziert werden.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Gibt eine Einschränkung für die Anzahl der Ziffern an, die für die Nachkommastellen eines simpleType-Elements eingegeben werden können. Der Wert von fractionDigits muss eine positive ganze Zahl sein. Stellt das W3C-<see langword="fractionDigits" />-Facet (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Stellt das <see langword="group" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse definiert Gruppen auf <see langword="schema" />-Ebene, auf die die komplexen Typen verweisen. Sie gruppiert eine Reihe von Elementdeklarationen, sodass diese als Gruppe in komplexe Typdefinitionen integriert werden können.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaGroup" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Ruft den Namen der Schemagruppe ab oder legt diesen fest.</summary>
      <returns>Der Name der Schemagruppe.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Ruft eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ab oder legt diese fest.</summary>
      <returns>Eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Ruft den qualifizierten Namen der Schemagruppe ab.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlQualifiedName" />-Objekt, das den qualifizierten Namen der Schemagruppe darstellt.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Eine abstrakte Klasse für <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Diese Auflistung wird verwendet, um dem Compositor neue Elemente hinzuzufügen.</summary>
      <returns>Eine <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Stellt das <see langword="group" />-Element mit dem <see langword="ref" />-Attribut aus dem XML-Schema dar, wie vom World Wide Web Consortium (W3C) festgelegt. Diese Klasse wird in komplexen Typen verwendet, die auf eine auf <see langword="group" />-Ebene definierte <see langword="schema" /> verweisen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Ruft eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ab, die den Wert der <see langword="Particle" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Der Wert der <see langword="Particle" />-Eigenschaft nach der Kompilierung, der eine der Klassen <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> ist.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Ruft den Namen einer in diesem Schema (oder einem anderen durch den angegebenen Namespace bezeichneten Schema) definierten Gruppe ab oder legt diesen fest.</summary>
      <returns>Der Name einer in diesem Schema definierten Gruppe.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Klasse für die Identitätseinschränkungen: <see langword="key" />-Elemente, <see langword="keyref" />-Elemente und <see langword="unique" />-Elemente.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Ruft die Auflistung der Felder ab, die als untergeordnete Elemente für den XPath-Ausdrucksselektor (XML Path Language) übernommen werden.</summary>
      <returns>Die Auflistung von Feldern.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Ruft den Namen der Identitätseinschränkung ab oder legt diesen fest.</summary>
      <returns>Der Name der Identitätseinschränkung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Ruft den gekennzeichneten Namen der Identitätseinschränkung ab, die den Wert der <see langword="QualifiedName" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Der Wert der <see langword="QualifiedName" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Ruft den XPath-Ausdruck des <see langword="selector" />-Elements ab oder legt diesen fest.</summary>
      <returns>Der XPath-Ausdruck des <see langword="selector" />-Elements.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Stellt das <see langword="import" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse wird verwendet, um Schemakomponenten aus anderen Schemas zu importieren.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaImport" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Ruft die <see langword="annotation" />-Eigenschaft ab oder legt diese fest.</summary>
      <returns>Die Anmerkung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Ruft den Zielnamespace für das importierte Schema als URI-Verweis (Uniform Resource Identifier) ab oder legt diesen fest.</summary>
      <returns>Der Zielnamespace für das importierte Schema als URI-Verweis. Dies ist optional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Stellt das <see langword="include" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse wird zum Einschließen von Deklarationen und Definitionen aus einem externen Schema verwendet. Die eingeschlossenen Deklarationen und Definitionen stehen dann für die Verarbeitung im enthaltenden Schema zur Verfügung.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInclude" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Ruft die <see langword="annotation" />-Eigenschaft ab oder legt diese fest.</summary>
      <returns>Die Anmerkung.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Leitet ein XSD-Schema (XML Schema Definition) von einem XML-Dokument ab. Die <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>Beeinflusst die von der <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse für Elemente und Attribute in einem XML-Dokument abgeleiteten Informationen zu Vorkommen und Typ.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Gibt an, dass eine weniger restriktive Schemadeklaration für ein bestimmtes Element oder Attribut abgeleitet werden soll.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Gibt an, dass eine restriktivere Schemadeklaration für ein bestimmtes Element oder Attribut abgeleitet werden soll.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist.</summary>
      <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
      <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Leitet ein XSD-Schema (XML Schema Definition) von dem XML-Dokument ab, das im angegebenen <see cref="T:System.Xml.XmlReader" />-Objekt enthalten ist, und passt das abgeleitete Schema mithilfe eines im <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt vorhandenen Schemas an, das mit demselben Zielnamespace angegeben ist.</summary>
      <param name="instanceDocument">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XML-Dokument enthält, von dem ein Schema abgeleitet werden soll.</param>
      <param name="schemas">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das ein vorhandenes Schema enthält, das zum Anpassen des abgeleiteten Schemas verwendet wurde.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die abgeleiteten Schemas enthält.</returns>
      <exception cref="T:System.Xml.XmlException">Das XML-Dokument ist nicht wohlgeformt.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">Das <see cref="T:System.Xml.XmlReader" />-Objekt ist nicht auf dem Stammknoten oder auf einem Element positioniert. Während des Schemarückschlussprozesses tritt ein Fehler auf.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf die vom XML-Dokument abgeleiteten Deklarationen von Schemavorkommen auswirkt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Wert ab, der sich auf vom XML-Dokument abgeleitete Typen auswirkt, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />-Objekt.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Gibt Informationen über Fehler zurück, auf die die <see cref="T:System.Xml.Schema.XmlSchemaInference" />-Klasse beim Ableiten eines Schemas von einem XML-Dokument stößt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Klasse mit dem angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt und dem angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, die alle Eigenschaften der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> enthalten.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Eine Beschreibung des Fehlers.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Klasse mit der angegebenen Fehlermeldung und der ursprünglichen <see cref="T:System.Exception" />, die die angegebene <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat.</summary>
      <param name="message">Eine Beschreibung des Fehlers.</param>
      <param name="innerException">Ein <see cref="T:System.Exception" />-Objekt, das die ursprüngliche Ausnahme enthält, die die <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Klasse mit der angegebenen Fehlermeldung, der ursprünglichen <see cref="T:System.Exception" />, die die angegebene <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat, sowie der Zeilennummer und -position des Fehlers im angegebenen XML-Dokument.</summary>
      <param name="message">Eine Beschreibung des Fehlers.</param>
      <param name="innerException">Ein <see cref="T:System.Exception" />-Objekt, das die ursprüngliche Ausnahme enthält, die die <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat.</param>
      <param name="lineNumber">Die Zeilennummer im XML-Dokument, die die <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat.</param>
      <param name="linePosition">Die Zeilenposition im XML-Dokument, die die <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überträgt alle <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />-Objekteigenschaften in das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das für das angegebene <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt angegeben ist.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Stellt das Post-Schema-Validation-Infoset eines validierten XML-Knotens dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Ruft das <see cref="T:System.Xml.Schema.XmlSchemaContentType" />-Objekt ab, das dem Inhaltstyp des überprüften XML-Knotens entspricht, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaContentType" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob dieser überprüfte XML-Knoten infolge eines Standardwerts festgelegt wurde, der bei einer Validierung eines XSD-Sprachschemas (XML Schema Definition) angewendet wurde, oder legt diesen fest.</summary>
      <returns>Ein <see langword="bool" />-Wert.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Ruft einen Wert ab, der angibt, ob der Wert für diesen überprüften XML-Knoten NULL ist, oder legt diesen fest.</summary>
      <returns>Ein <see langword="bool" />-Wert.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Ruft den dynamischen Schematyp für diesen überprüften XML-Knoten ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Ruft das kompilierte <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Objekt ab, das diesem überprüften XML-Knoten entspricht, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Ruft das kompilierte <see cref="T:System.Xml.Schema.XmlSchemaElement" />-Objekt ab, das diesem überprüften XML-Knoten entspricht, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaElement" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Ruft den statischen Typ des XSD-Schemas (XML Schema Definition) dieses überprüften XML-Knotens ab oder legt diesen fest</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaValidity" />-Wert dieses überprüften XML-Knotens ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaValidity" />-Wert.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Diese Klasse stellt das <see langword="key" />-Element aus XMLSchema dar, wie vom World Wide Web Consortium (W3C) festgelegt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaKey" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Diese Klasse stellt das <see langword="keyref" />-Element aus XMLSchema dar, wie vom World Wide Web Consortium (W3C) festgelegt.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Ruft den Namen des Schlüssels ab, auf den diese Einschränkung in einem anderen einfachen oder komplexen Typ verweist, oder legt diesen fest.</summary>
      <returns>Der QName des Schlüssels, auf den diese Einschränkung verweist.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Stellt das <see langword="length" />-Facet des XML-Schemas wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf die Länge eines <see langword="simpleType" />-Elements für den Datentyp anzugeben.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Stellt das <see langword="maxExclusive" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf den maximalen Wert eines <see langword="simpleType" />-Elements anzugeben. Der Elementwert muss kleiner als der Wert des <see langword="maxExclusive" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Stellt das <see langword="maxInclusive" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf den maximalen Wert eines <see langword="simpleType" />-Elements anzugeben. Der Elementwert muss kleiner oder gleich dem Wert des <see langword="maxInclusive" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Stellt das <see langword="maxLength" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf die maximale Länge des Datenwerts eines <see langword="simpleType" />-Elements anzugeben. Die Länge muss kleiner als der Wert des <see langword="maxLength" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Stellt das <see langword="minExclusive" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf den minimalen Wert eines <see langword="simpleType" />-Elements anzugeben. Der Elementwert muss größer als der Wert des <see langword="minExclusive" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Stellt das <see langword="minInclusive" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf den minimalen Wert eines simpleType-Elements anzugeben. Der Elementwert muss größer oder gleich dem Wert des <see langword="minInclusive" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Stellt das <see langword="minLength" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf die minimale Länge des Datenwerts eines <see langword="simpleType" />-Elements anzugeben. Die Länge muss größer als der Wert des <see langword="minLength" />-Elements sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Stellt das <see langword="notation" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Eine XML-Schema-<see langword="notation" />-Deklaration ist eine Rekonstruktion von <see langword="XML 1.0 NOTATION" />-Deklarationen. Der Zweck von Notationen ist die Beschreibung des Formats von Nicht-XML-Daten in einem XML-Dokument.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaNotation" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Ruft den Namen der Notation ab oder legt diesen fest.</summary>
      <returns>Der Name der Notation.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Ruft den <see langword="public" />-Bezeichner ab oder legt diesen fest.</summary>
      <returns>Der <see langword="public" />-Bezeichner. Der Wert muss ein gültiger URI (Uniform Resource Identifier) sein.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Ruft den <see langword="system" />-Bezeichner ab oder legt diesen fest.</summary>
      <returns>Der <see langword="system" />-Bezeichner. Der Wert muss ein gültiger URI sein.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Abstrakte Klasse zum Definieren von <see langword="numeric" />-Facets. Diese Klasse ist die Basisklasse für numerische Facetklassen, z. B. <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Stellt die Stammklasse für die Hierarchie des XML Schema-Objektmodells dar und fungiert als Basisklasse für Klassen wie die <see cref="T:System.Xml.Schema.XmlSchema" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Ruft die Zeilennummer in der Datei ab, auf die das <see langword="schema" />-Element verweist, oder legt diese fest.</summary>
      <returns>Die Zeilennummer.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Ruft die Zeilenposition in der Datei ab, auf die das <see langword="schema" />-Element verweist, oder legt diese fest.</summary>
      <returns>Die Zeilenposition.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Ruft die mit diesem Schemaobjekt zu verwendenden <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Eigenschaft für das Schemaobjekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Ruft das übergeordnete Objekt dieses <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ab oder legt dieses fest.</summary>
      <returns>Das übergeordnete <see cref="T:System.Xml.Schema.XmlSchemaObject" /> dieses <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Ruft die Quellposition für die Datei ab, die das Schema geladen hat, oder legt diese fest.</summary>
      <returns>Die Quellposition (URI) für die Datei.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Eine Auflistung von <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlSchemaObjectCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlSchemaObjectCollection" />-Klasse, die ein <see cref="T:System.Xml.Schema.XmlSchemaObject" /> akzeptiert.</summary>
      <param name="parent">Die <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Fügt dem <see cref="T:System.Xml.Schema.XmlSchemaObject" /> eine <see langword="XmlSchemaObjectCollection" /> hinzu.</summary>
      <param name="item">Die <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Der Index, an dem das Element hinzugefügt wurde.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.
- oder -
<paramref name="index" /> ist größer als <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException">Der angegebene <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Parameter besitzt nicht den Typ <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> oder einen der von diesem abgeleiteten Typen <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> und <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Gibt an, ob sich die angegebene <see cref="T:System.Xml.Schema.XmlSchemaObject" /> in der <see langword="XmlSchemaObjectCollection" /> befindet.</summary>
      <param name="item">Die <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>
        <see langword="true" />, wenn der angegebene gekennzeichnete Name in der Auflistung vorhanden ist, andernfalls <see langword="false" />. Wenn NULL angegeben wird, wird <see langword="false" /> zurückgegeben, da kein gekennzeichneter Name mit einem NULL-Namen vorhanden ist.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Kopiert alle <see cref="T:System.Xml.Schema.XmlSchemaObject" /> ab dem angegebenen Index aus der Auflistung in das angegebene Array.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus <see langword="XmlSchemaObjectCollection" /> kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="index">Der nullbasierte Index im Array, ab dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.

oder -
Der <paramref name="index" /> ist größer oder gleich der Länge von <paramref name="array" />.

oder -
Die Anzahl der Elemente im Quell-<see cref="T:System.Xml.Schema.XmlSchemaObject" /> ist größer als der verfügbare Platz vom Index bis zum Ende des Zielarrays.</exception>
      <exception cref="T:System.InvalidCastException">Der Typ des Quell-<see cref="T:System.Xml.Schema.XmlSchemaObject" /> kann nicht automatisch in den Typ des Zielarrays umgewandelt werden.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zum Durchlaufen der in der <see langword="XmlSchemaObjects" /> enthaltenen <see langword="XmlSchemaObjectCollection" /> zurück.</summary>
      <returns>Der Iterator gibt <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Ruft den Auflistungsindex ab, der dem angegebenen <see cref="T:System.Xml.Schema.XmlSchemaObject" /> entspricht.</summary>
      <param name="item">Das <see cref="T:System.Xml.Schema.XmlSchemaObject" />, dessen Index zurückgegeben werden soll.</param>
      <returns>Der Index, der dem angegebenen <see cref="T:System.Xml.Schema.XmlSchemaObject" /> entspricht.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Fügt ein <see cref="T:System.Xml.Schema.XmlSchemaObject" /> in die <see langword="XmlSchemaObjectCollection" /> ein.</summary>
      <param name="index">Der nullbasierte Index, an dem ein Element eingefügt werden soll.</param>
      <param name="item">Der einzufügende <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als Null.
- oder -
<paramref name="index" /> ist größer als <see langword="Count" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaObject" /> am angegebenen Index ab.</summary>
      <param name="index">Der Index des <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaObject" /> am angegebenen Index.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
        <see langword="OnClear" /> wird vor dem <see langword="Clear" />-Standardverhalten aufgerufen. Weitere Informationen finden Sie unter OnClear-Methode für <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see langword="OnInsert" /> wird vor dem <see langword="Insert" />-Standardverhalten aufgerufen. Weitere Informationen finden Sie unter <see langword="OnInsert" />-Methode für <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Der Index von <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Das Element.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see langword="OnRemove" /> wird vor dem <see langword="Remove" />-Standardverhalten aufgerufen. Weitere Informationen finden Sie unter der <see langword="OnRemove" />-Methode für <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Der Index von <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">Das Element.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see langword="OnSet" /> wird vor dem <see langword="Set" />-Standardverhalten aufgerufen. Weitere Informationen finden Sie unter der OnSet-Methode für <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Der Index von <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue">Der alte Wert.</param>
      <param name="newValue">Der neue Wert.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Entfernt ein <see cref="T:System.Xml.Schema.XmlSchemaObject" /> aus der <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">Das zu entfernende <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Element.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Stellt den Enumerator für die <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> dar.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Ruft das aktuelle <see cref="T:System.Xml.Schema.XmlSchemaObject" /> in der Auflistung ab.</summary>
      <returns>Der aktuelle <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Wechselt zum nächsten Element in der Auflistung.</summary>
      <returns>
        <see langword="false" /> am Ende der Auflistung.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Setzt den Enumerator auf den Anfang der Auflistung zurück.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>Der aktuelle <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>Der nächste <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Stellt die Auflistungen für enthaltene Elemente in der <see cref="T:System.Xml.Schema.XmlSchema" />-Klasse bereit (z. B. Attribute, Attributgruppen, Elemente usw.).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Ermittelt, ob der angegebene qualifizierte Name in der Auflistung vorhanden ist.</summary>
      <param name="name">Die <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" />, wenn der angegebene qualifizierte Name in der Auflistung vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Ruft die Anzahl der Elemente in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> ab.</summary>
      <returns>Die Anzahl der Elemente in der <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> durchlaufen kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IDictionaryEnumerator" />, der <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> durchlaufen kann.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Gibt das im qualifizierten Namen angegebene Element aus <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> zurück.</summary>
      <param name="name">Der <see cref="T:System.Xml.XmlQualifiedName" /> des zurückzugebenden Elements.</param>
      <returns>Das <see cref="T:System.Xml.Schema.XmlSchemaObject" /> des Elements in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />, das im qualifizierten Namen angegeben wurde.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Gibt eine Auflistung aller benannten Elemente in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> zurück.</summary>
      <returns>Eine Auflistung aller benannten Elemente in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Gibt eine Auflistung aller Werte aus allen Elementen in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> zurück.</summary>
      <returns>Eine Auflistung aller Werte aus allen Elementen in <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>Die abstrakte Klasse, die die Basisklasse für alle Partikeltypen (z.B. <see cref="T:System.Xml.Schema.XmlSchemaAny" />) ist.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaParticle" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Ruft die höchste Anzahl der Vorkommen für den Partikel ab oder legt diese fest.</summary>
      <returns>Die höchste Anzahl der Vorkommen des Partikels. Der Standard ist 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Ruft die Anzahl als Zeichenfolgenwert ab oder legt diese fest. Die höchste Anzahl der Vorkommen des Partikels.</summary>
      <returns>Die Anzahl als Zeichenfolgenwert. <see langword="String.Empty" /> gibt an, dass <see langword="MaxOccurs" /> dem Standardwert entspricht. Der Standardwert ist ein NULL-Verweis.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Ruft die Mindestanzahl der Vorkommen für den Partikel ab oder legt diese fest.</summary>
      <returns>Die Mindestanzahl der Vorkommen des Partikels. Der Standard ist 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Ruft die Anzahl als Zeichenfolgenwert ab oder legt diese fest. Die Mindestanzahl der Vorkommen des Partikels.</summary>
      <returns>Die Anzahl als Zeichenfolgenwert. <see langword="String.Empty" /> gibt an, dass <see langword="MinOccurs" /> dem Standardwert entspricht. Der Standardwert ist ein NULL-Verweis.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Stellt das <see langword="pattern" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung auf den eingegebenen Wert eines <see langword="simpleType" />-Elements anzugeben.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Stellt das <see langword="redefine" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um die erneute Definition einfacher und komplexer Typen, Gruppen und Attributgruppen aus externen Schemadateien im aktuellen Schema zuzulassen. Diese Klasse kann außerdem verwendet werden, um eine Versionsverwaltung für die Schemaelemente bereitzustellen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Ruft für alle Attribute im Schema die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> ab, die den Wert der <see langword="AttributeGroups" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> für alle Attribute im Schema. Der Wert der <see langword="AttributeGroups" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Ruft für alle Gruppen im Schema die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> ab, die den Wert der <see langword="Groups" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> für alle Gruppen im Schema. Der Wert der <see langword="Groups" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Ruft die Auflistung der folgenden Klassen ab: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />-Klasse, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />-Klasse, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />-Klasse, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Klasse und <see cref="T:System.Xml.Schema.XmlSchemaGroup" />-Klasse.</summary>
      <returns>Die Elemente im neu definierten Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Ruft für alle einfachen und komplexen Typen im Schema die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> ab, die den Wert der <see langword="SchemaTypes" />-Eigenschaft nach der Kompilierung enthält.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> für alle Schematypen im Schema. Der Wert der <see langword="SchemaTypes" />-Eigenschaft nach der Kompilierung.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Stellt das <see langword="sequence" />-Element (Compositor) aus dem XML-Schema laut Spezifikation des World Wide Web Consortium (W3C) dar. Die <see langword="sequence" /> erfordert, dass die Elemente in der Gruppe im enthaltenden Element in der angegebenen Reihenfolge aufgeführt werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSequence" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Die Elemente im Compositor. Auflistung von <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> oder <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Die Elemente im Compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Enthält einen Cache von XSD-Schemas (XML-Schema Definition Language).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Das zu verwendende <see cref="T:System.Xml.XmlNameTable" />-Objekt.</param>
      <exception cref="T:System.ArgumentNullException">Das als Parameter übergebene <see cref="T:System.Xml.XmlNameTable" />-Objekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Fügt das XSD-Schema (XML Schema Definition Language) bei der für den <see cref="T:System.Xml.Schema.XmlSchemaSet" /> angegebenen URL hinzu.</summary>
      <param name="targetNamespace">Die Schema-<paramref name="targetNamespace" />-Eigenschaft oder <see langword="null" />, um den im Schema angegebenen <paramref name="targetNamespace" /> zu verwenden.</param>
      <param name="schemaUri">Die URL, die das zu ladende Schema angibt.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, wenn das Schema gültig ist. Wenn das Schema nicht gültig ist und ein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist, wird <see langword="null" /> zurückgegeben und das entsprechende Validierungsereignis ausgelöst. Andernfalls wird eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> ausgelöst.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Das Schema ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Die URL, die als Parameter übergeben wurde, entspricht <see langword="null" /> oder <see cref="F:System.String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Fügt das im <see cref="T:System.Xml.XmlReader" /> enthaltene XSD-Schema (XML Schema Definition Language) <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzu.</summary>
      <param name="targetNamespace">Die Schema-<paramref name="targetNamespace" />-Eigenschaft oder <see langword="null" />, um den im Schema angegebenen <paramref name="targetNamespace" /> zu verwenden.</param>
      <param name="schemaDocument">Das <see cref="T:System.Xml.XmlReader" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, wenn das Schema gültig ist. Wenn das Schema nicht gültig ist und ein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist, wird <see langword="null" /> zurückgegeben und das entsprechende Validierungsereignis ausgelöst. Andernfalls wird eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> ausgelöst.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Das Schema ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Das als Parameter übergebene <see cref="T:System.Xml.XmlReader" />-Objekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Fügt dem <see cref="T:System.Xml.Schema.XmlSchema" /> das angegebene <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzu.</summary>
      <param name="schema">Das dem <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt hinzuzufügende <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, wenn das Schema gültig ist. Wenn das Schema nicht gültig ist und ein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist, wird <see langword="null" /> zurückgegeben und das entsprechende Validierungsereignis ausgelöst. Andernfalls wird eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> ausgelöst.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Das Schema ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Das als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Fügt dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> alle XSD-Schemas (XML Schema Definition Language) im vorhandenen <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzu.</summary>
      <param name="schemas">Das <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Ein Schema im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Das als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> für den <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab oder legt diese fest.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> für den <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Der Standardwert ist eine <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />-Instanz, deren <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Kompiliert die dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzugefügten XSD-Schemas (XML Schema Definition Language) in ein logisches Schema.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Beim Überprüfen und Kompilieren der Schemas ist ein Fehler im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Gibt an, ob ein XSD-Schema (XML Schema Definition Language) mit dem angegebenen Zielnamespace-URI im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vorhanden ist.</summary>
      <param name="targetNamespace">Die Schema-<paramref name="targetNamespace" />-Eigenschaft.</param>
      <returns>
        <see langword="true" />, wenn ein Schema mit dem angegebenen Zielnamespace-URI im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vorhanden ist; andernfalls wird <see langword="false" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Gibt an, ob das angegebene XSD-Schema-(XML Schema Definition Language)-<see cref="T:System.Xml.Schema.XmlSchema" />-Objekt im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vorhanden ist.</summary>
      <param name="schema">Das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> enthalten ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchemaSet" /> entspricht <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Kopiert alle <see cref="T:System.Xml.Schema.XmlSchema" />-Objekte aus dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab dem angegebenen Index in das angegebene Array.</summary>
      <param name="schemas">Das Array, in das die Objekte kopiert werden sollen.</param>
      <param name="index">Der Index im Array, bei dem der Kopiervorgang beginnt.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Ruft die Anzahl logischer XSD-Schemas (XML Schema Definition Language) im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab.</summary>
      <returns>Die Anzahl der logischen Schemas im <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Ruft alle globalen Attribute in allen XSD-Schemas (XML Schema Definition Language) im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab.</summary>
      <returns>Die Auflistung globaler Attributen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Ruft alle globalen Elemente in allen XSD-Schemas (XML Schema Definition Language) im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab.</summary>
      <returns>Die Auflistung von globalen Elementen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Ruft alle globalen einfachen und komplexen Typen in allen XSD-Schemas (XML Schema Definition Language) im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab.</summary>
      <returns>Die Auflistung globaler einfacher und komplexer Typen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Ruft einen Wert ab, der angibt, ob die XSD-Schemas (XML Schema Definition Language) im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> kompiliert wurden.</summary>
      <returns>
        <see langword="true" />, wenn die Schemas im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> seit dem letzten Hinzufügen oder Entfernen eines Schemas aus dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> kompiliert wurden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Ruft die Standard-<see cref="T:System.Xml.XmlNameTable" /> ab, die vom <see cref="T:System.Xml.Schema.XmlSchemaSet" /> beim Laden neuer XSD-Schemas (XML Schema Definition Language) verwendet wird.</summary>
      <returns>Eine Tabelle atomisierter Zeichenfolgenobjekte.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Entfernt das angegebene XSD-Schema (XML Schema Definition Language) aus dem <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Das aus der <see cref="T:System.Xml.Schema.XmlSchema" /> zu entfernende <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt.</param>
      <returns>Das aus dem <see cref="T:System.Xml.Schema.XmlSchema" /> entfernte <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt oder <see langword="null" />, wenn das Schema nicht im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> gefunden wurde.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Das Schema ist kein gültiges Schema.</exception>
      <exception cref="T:System.ArgumentNullException">Der als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchema" /> entspricht <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Entfernt das angegebene XSD-Schema (XML Schema Definition Language) und alle Schemas, die aus dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> importiert werden.</summary>
      <param name="schemaToRemove">Das aus der <see cref="T:System.Xml.Schema.XmlSchema" /> zu entfernende <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt.</param>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt und alle zugehörigen Importe erfolgreich entfernt wurden, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchema" /> entspricht <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Verarbeitet erneut ein XSD-Schema (XML Schema Definition Language), das bereits im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vorhanden ist.</summary>
      <param name="schema">Das erneut zu verarbeitende Schema.</param>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, wenn das Schema ein gültiges Schema ist. Wenn das Schema nicht gültig ist und ein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> angegeben ist, wird <see langword="null" /> zurückgegeben und das entsprechende Validierungsereignis ausgelöst. Andernfalls wird eine <see cref="T:System.Xml.Schema.XmlSchemaException" /> ausgelöst.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Das Schema ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Das als Parameter übergebene <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das als Parameter übergeben wurde, ist im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> noch nicht vorhanden.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Gibt im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> eine Auflistung aller XSD-Schemas (XML Schema Definition Language) zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das alle Schemas enthält, die dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzugefügt worden sind. Wenn dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> keine Schemas hinzugefügt wurden, wird ein leeres <see cref="T:System.Collections.ICollection" />-Objekt zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Gibt im <see cref="T:System.Xml.Schema.XmlSchemaSet" /> eine Auflistung aller XSD-Schemas (XML Schema Definition Language) zurück, die zum entsprechenden Namespace gehören.</summary>
      <param name="targetNamespace">Die Schema-<paramref name="targetNamespace" />-Eigenschaft.</param>
      <returns>Ein <see cref="T:System.Collections.ICollection" />-Objekt, das alle Schemas enthält, die dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> hinzugefügt wurden, die zum entsprechenden Namespace gehören. Wenn dem <see cref="T:System.Xml.Schema.XmlSchemaSet" /> keine Schemas hinzugefügt wurden, wird ein leeres <see cref="T:System.Collections.ICollection" />-Objekt zurückgegeben.</returns>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Gibt einen Ereignishandler an, um Informationen über XSD-Schemavalidierungsfehler (XML Schema Definition Language) zu erhalten.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Legt den <see cref="T:System.Xml.XmlResolver" /> fest, der verwendet wird, um Namespaces oder Speicherorte aufzulösen, auf die in Include- und Importelementen eines Schemas verwiesen wird.</summary>
      <returns>Der <see cref="T:System.Xml.XmlResolver" />, der verwendet wird, um Namespaces oder Speicherorte aufzulösen, auf die in Include- und Importelementen eines Schemas verwiesen wird.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Stellt das <see langword="simpleContent" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse wird für einfache und komplexe Typen mit einfachem Inhaltsmodell verwendet.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Ruft entweder <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" /> ab.</summary>
      <returns>Der Inhalt in der <see langword="XmlSchemaSimpleContentRestriction" />-Klasse oder in der <see langword="XmlSchemaSimpleContentExtension" />-Klasse.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Stellt das <see langword="extension" />-Element für einfachen Inhalt aus dem XML-Schema laut Spezifikation des World Wide Web Consortium (W3C) dar. Diese Klasse kann verwendet werden, um einfache Typen durch Erweiterung abzuleiten. Solche Ableitungen werden verwendet, um den Inhalt einfacher Typen des Elements durch das Hinzufügen von Attributen zu erweitern.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Ruft das für den Attributwert zu verwendende <see langword="XmlSchemaAnyAttribute" /> ab oder legt dieses fest.</summary>
      <returns>Die <see langword="XmlSchemaAnyAttribute" />. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Ruft die Auflistung von <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> und <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> ab.</summary>
      <returns>Die Auflistung von Attributen für das <see langword="simpleType" />-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Ruft den Namen eines eingebauten Datentyps oder eines einfachen Typs ab, dessen Erweiterung dieser Typ darstellt, oder legt diesen fest.</summary>
      <returns>Der Name des Basistyps.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Stellt das <see langword="restriction" />-Element für einfachen Inhalt aus dem XML-Schema laut Spezifikation des World Wide Web Consortium (W3C) dar. Diese Klasse kann verwendet werden, um einfache Typen durch Beschränkung abzuleiten. Solche Ableitungen können verwendet werden, um den Wertebereich für das Element auf eine Teilmenge der im vererbten einfachen Typ angegebenen Werte zu beschränken.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Ruft ein für den Attributwert zu verwendendes <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> ab oder legt dieses fest.</summary>
      <returns>Das <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> für den Attributwert. Dies ist optional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />- und <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />-Sammlung von Attributen für den einfachen Typ ab.</summary>
      <returns>Die Auflistung von Attributen für einen einfachen Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Ruft den Basiswert des einfachen Typs ab oder legt diesen fest.</summary>
      <returns>Der Basiswert des einfachen Typs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Ruft den Namen des eingebauten Datentyps oder des einfachen Typs ab, von dem dieser Typ abgeleitet ist, oder legt diesen fest.</summary>
      <returns>Der Name des Basistyps.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Ruft ein XML Schema-Facet ab oder legt dieses fest.</summary>
      <returns>Eine der folgenden Facetklassen:
<see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Stellt das <see langword="simpleType" />-Element für einfachen Inhalt aus dem XML-Schema laut Spezifikation des World Wide Web Consortium (W3C) dar. Diese Klasse definiert einen einfachen Typ. Einfache Typen können Informationen und Einschränkungen für den Wert von Attributen oder Elementen mit Textinhalt angeben.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Ruft entweder <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> oder <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" /> ab oder legt diese fest.</summary>
      <returns>Entweder <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> oder <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Abstrakte Klasse für Inhaltsklassen einfacher Typen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Stellt das <see langword="list" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann zum Definieren eines <see langword="simpleType" />-Elements als Liste von Werten eines angegebenen Datentyps verwendet werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> ab, der den Typ des <see langword="simpleType" />-Elements auf Grundlage des <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" />-Werts und des <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" />-Werts des einfachen Typs darstellt, oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, der den Typ des <see langword="simpleType" />-Elements darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Ruft das <see langword="simpleType" />-Element ab, das von dem durch den Basiswert angegebenen Typ abgeleitet ist, oder legt dieses fest.</summary>
      <returns>Der Elementtyp für das simpleType-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>Ruft den Namen eines eingebauten Datentyps oder in diesem Schema (bzw. in einem anderen, durch den angegebenen Namespace bestimmten Schema) definierten <see langword="simpleType" />-Elements ab oder legt diesen fest.</summary>
      <returns>Der Typname der Liste mit einfachen Typen.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Stellt das <see langword="restriction" />-Element für einfache Typen aus dem XML-Schema laut Spezifikation des World Wide Web Consortiums (W3C) dar. Diese Klasse kann zum Einschränken eines <see langword="simpleType" />-Elements verwendet werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Ruft Informationen über den Basistyp ab oder legt diese fest.</summary>
      <returns>Das Basistyp für das <see langword="simpleType" />-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Ruft den Namen des gekennzeichneten Basistyps ab oder legt diesen fest.</summary>
      <returns>Der gekennzeichnete Name des Basistyps für die Einschränkung von einfachen Typen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Ruft ein XML Schema-Facet ab oder legt dieses fest.</summary>
      <returns>Eine der folgenden Facetklassen:
<see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Stellt das <see langword="union" />-Element für einfache Typen aus dem XML-Schema laut Spezifikation des World Wide Web Consortiums (W3C) dar. Ein <see langword="union" />-Datentyp kann verwendet werden, um den Inhalt eines <see langword="simpleType" /> anzugeben. Der Wert des <see langword="simpleType" />-Elements muss einer aus einer Gruppe alternativer Datentypen sein, die in der Union angegeben sind. Unionstypen sind immer abgeleitete Typen und müssen mindestens zwei alternative Datentypen umfassen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Ruft ein Array von <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekten ab, das den Typ des <see langword="simpleType" />-Elements auf Grundlage des <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" />-Werts und des <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" />-Werts des einfachen Typs darstellt.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />-Objekten, die den Typ des <see langword="simpleType" />-Elements darstellen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Ruft die Auflistung von Basistypen ab.</summary>
      <returns>Die Auflistung von Basiswerten einfacher Typen.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Ruft das Array von qualifizierten Membernamen der eingebauten Datentypen oder <see langword="simpleType" />-Elemente ab, die in diesem Schema (oder einem anderen durch den angegebenen Namespace bezeichneten Schema) definiert sind, oder legt es fest.</summary>
      <returns>Ein Array, das aus einer Liste von Membern eingebauter Datentypen oder einfacher Typen besteht.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Stellt das <see langword="totalDigits" />-Facet des XML-Schemas wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um eine Beschränkung der Anzahl von Ziffern anzugeben, die für den Wert eines <see langword="simpleType" />-Elements eingegeben werden können. Der Wert von <see langword="totalDigits" /> muss eine positive ganze Zahl sein.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>Die Basisklasse für alle einfachen und komplexen Typen.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaType" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Ruft den Objekttyp nach der Kompilierung oder den integrierten XSD (XML Schema Definition)-Datentyp, das simpleType-Element oder das complexType-Element ab. Dies ist eine PSCI-Eigenschaft (Post-Schema-Compilation Infoset).</summary>
      <returns>Der integrierte XSD-Datentyp, das simpleType-Element oder das complexType-Element.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Ruft den Wert nach der Kompilierung für den Basistyp dieses Schematyps ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Objekt, das den Basistyp dieses Schematyps darstellt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Ruft den Wert nach der Kompilierung für den Datentyp des komplexen Typs ab.</summary>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />-Wert nach der Kompilierung des Schemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Ruft die Informationen nach der Kompilierung darüber ab, wie dieses Element von seinem Basistyp abgeleitet wurde.</summary>
      <returns>Einer der gültigen <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />-Werte.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Ruft das abschließende Attribut der Typableitung ab, das angibt, ob weitere Ableitungen zulässig sind, oder legt dieses fest.</summary>
      <returns>Einer der gültigen <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />-Werte. Die Standardeinstellung ist <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Ruft den Wert der <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />-Eigenschaft nach der Kompilierung ab.</summary>
      <returns>Der Wert der <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />-Eigenschaft nach der Kompilierung. Der Standardwert ist der <see langword="finalDefault" />-Attributwert des <see langword="schema" />-Elements.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Gibt einen <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> zurück, der den integrierten komplexen Typ des angegebenen komplexen Typs darstellt.</summary>
      <param name="typeCode">Einer der <see cref="T:System.Xml.Schema.XmlTypeCode" />-Werte, der den komplexen Typ darstellt.</param>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, der den integrierten komplexen Typ darstellt.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Gibt einen <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> zurück, der den integrierten komplexen Typ des durch einen qualifizierten Namen angegebenen komplexen Typs darstellt.</summary>
      <param name="qualifiedName">Der <see cref="T:System.Xml.XmlQualifiedName" /> des komplexen Typs.</param>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, der den integrierten komplexen Typ darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlQualifiedName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Gibt einen <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> zurück, der den integrierten einfachen Typ des angegebenen einfachen Typs darstellt.</summary>
      <param name="typeCode">Einer der <see cref="T:System.Xml.Schema.XmlTypeCode" />-Werte, der den einfachen Typ darstellt.</param>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, der den integrierten einfachen Typ darstellt.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Gibt einen <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> zurück, der den integrierten einfachen Typ des durch einen qualifizierten Namen angegebenen einfachen Typs darstellt.</summary>
      <param name="qualifiedName">Der <see cref="T:System.Xml.XmlQualifiedName" /> des einfachen Typs.</param>
      <returns>Der <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />, der den integrierten einfachen Typ darstellt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlQualifiedName" />-Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Gibt einen Wert zurück, der angibt, ob der angegebene abgeleitete Schematyp vom angegebenen Basisschematyp angeleitet wurde.</summary>
      <param name="derivedType">Der abgeleitete <see cref="T:System.Xml.Schema.XmlSchemaType" />, der überprüft werden soll.</param>
      <param name="baseType">Der Basis-<see cref="T:System.Xml.Schema.XmlSchemaType" />, anhand dessen der abgeleitete <see cref="T:System.Xml.Schema.XmlSchemaType" /> überprüft werden soll.</param>
      <param name="except">Einer der <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" />-Werte, der eine Typableitungsmethode für den Ausschluss von der Überprüfung darstellt.</param>
      <returns>
        <see langword="true" />, wenn der abgeleitete Typ vom Basistyp abgeleitet wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Typ über ein Modell mit gemischten Inhalten verfügt, oder legt diesen fest. Diese Eigenschaft ist nur in einem komplexen Typ gültig.</summary>
      <returns>
        <see langword="true" />, wenn der Typ über ein Modell mit gemischten Inhalten verfügt, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Ruft den Namen des Typs ab oder legt diesen fest.</summary>
      <returns>Der Name des Typs.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Ruft den gekennzeichneten Namen für den Typ ab, der aus dem <see langword="Name" />-Attribut dieses Typs erstellt wurde. Dies ist eine Eigenschaft nach der Kompilierung des Schemas.</summary>
      <returns>Der <see cref="T:System.Xml.XmlQualifiedName" /> für den aus dem <see langword="Name" />-Attribut dieses Typs erstellten Typ.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Ruft den <see cref="T:System.Xml.Schema.XmlTypeCode" /> des Typs ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlTypeCode" />-Werte.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Stellt das <see langword="unique" />-Element von XML-Schema wie vom World Wide Web Consortium (W3C) angegeben dar. Diese Klasse kann verwendet werden, um in einer Gruppe von Elementen eine eindeutige Einschränkung zu identifizieren.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaUnique" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Indikator für die Verwendung des Attributs.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>Die Verwendung des Attributs ist nicht angegeben.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>Das Attribut ist optional.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>Das Attribut kann nicht verwendet werden.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>Das Attribut muss einmal aufgeführt werden.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Stellt die Ausnahme dar, die ausgelöst wird, wenn während der Validierung eines XML-Dokuments Fehler und Warnungen bezüglich des XSD-Schemas (XML Schmema Definition) gefunden werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Klasse mit dem angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt und dem angegebenen <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</summary>
      <param name="info">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</param>
      <param name="context">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Klasse mit der angegebenen Ausnahmemeldung.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Klasse mit der angegebenen Ausnahmemeldung und dem ursprünglichen <see cref="T:System.Exception" />-Objekt, das diese Ausnahme verursacht hat.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Das ursprüngliche <see cref="T:System.Exception" />-Objekt, das diese Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Klasse mit der angegebenen Ausnahmemeldung und dem ursprünglichen <see cref="T:System.Exception" />-Objekt, der ursprünglichen Zeilennummer sowie der ursprünglichen Position der Zeile des XML-Dokuments, die die angegebene Ausnahme ausgelöst hat.</summary>
      <param name="message">Eine <see langword="string" />-Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Das ursprüngliche <see cref="T:System.Exception" />-Objekt, das diese Ausnahme ausgelöst hat.</param>
      <param name="lineNumber">Die Zeilennummer der XML, die diese Ausnahme ausgelöst hat.</param>
      <param name="linePosition">Die Zeilenposition der XML, die diese Ausnahme ausgelöst hat.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Erstellt ein neues <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />-Objekt mit der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und den <see cref="T:System.Runtime.Serialization.StreamingContext" />-Informationen, die alle Eigenschaften von <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> enthalten.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Legt den XML-Knoten fest, der den Fehler verursacht.</summary>
      <param name="sourceObject">Das Quellobjekt.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Ruft den XML-Knoten ab, der diese <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> ausgelöst hat.</summary>
      <returns>Der XML-Knoten, der diese <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> ausgelöst hat.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Gibt die von der <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Klasse und der <see cref="T:System.Xml.XmlReader" />-Klasse verwendeten Schemavalidierungsoptionen an.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Lassen Sie xml:*-Attribute zu, auch wenn sie im Schema nicht definiert sind. Die Attribute werden auf Grundlage ihres Datentyps validiert.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>Kein Verarbeiten von Identitätseinschränkungen, Inlineschemas, Schemaspeicherorthinweisen, und kein Übermitteln von Schemavalidierungswarnungen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Prozessidentitätsconstraints (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>), die während der Validierung aufgetreten sind.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Verarbeiten der während der Validierung vorgefundenen Inlineschemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Prozess-Schemaspeicherorthinweise (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>), die während der Validierung aufgetreten sind.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Übermitteln der während der Validierung aufgetretenen Schemavalidierungswarnungen.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Stellt eine XSD-Schema-Validierungs-Engine (XML Schema Definition Language) dar. Die <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Klasse kann nicht geerbt werden.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Klasse.</summary>
      <param name="nameTable">Ein <see cref="T:System.Xml.XmlNameTable" />-Objekt, das Element- und Attributnamen als atomisierte Zeichenfolgen enthält.</param>
      <param name="schemas">Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die für die Validierung verwendeten XSD-Schemas (XML Schema Definition Language) enthält.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt mit dem Namespaces aufgelöst werden, die während der Validierung gefunden werden.</param>
      <param name="validationFlags">Ein <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />-Wert, der Schemavalidierungsoptionen angibt.</param>
      <exception cref="T:System.ArgumentNullException">Mindestens einer der angegebenen Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Während des Kompilierens von Schemas im <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Parameter ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Fügt den für die Validierung verwendeten Schemas ein XSD-Schema (XML Schema Definition Language) hinzu.</summary>
      <param name="schema">Ein <see cref="T:System.Xml.Schema.XmlSchema" />-Objekt, das den für die Validierung verwendeten Schemas hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der angegebene <see cref="T:System.Xml.Schema.XmlSchema" />-Parameter ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Zielnamespace des <see cref="T:System.Xml.Schema.XmlSchema" />-Parameters stimmt mit dem aller Elemente oder Attribute überein, die vom <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekt bereits gefunden wurden.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Der <see cref="T:System.Xml.Schema.XmlSchema" />-Parameter ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Beendet die Validierung und überprüft die Identitätseinschränkungen für das gesamte XML-Dokument.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ein Identitätseinschränkungsfehler wurde im XML-Dokument gefunden.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Gibt die erwarteten Attribute für den Kontext des aktuellen Elements zurück.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Objekten oder ein leeres Array, wenn keine erwarteten Attribute vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Gibt die erwarteten Partikel im Kontext des aktuellen Elements zurück.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.Schema.XmlSchemaParticle" />-Objekten oder ein leeres Array, wenn keine erwarteten Partikel vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Validiert Identitätseinschränkungen bei den Standardattributen und füllt die <see cref="T:System.Collections.ArrayList" />, die mit <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Objekten für Attribute mit Standardwerten angegeben ist, die noch nicht mithilfe der <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />-Methode im Elementkontext validiert wurden.</summary>
      <param name="defaultAttributes">Eine <see cref="T:System.Collections.ArrayList" />, die mit <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />-Objekten für die Attribute gefüllt werden soll, die während der Validierung im Elementkontext noch nicht gefunden wurden.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Initialisiert den Zustand des <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekts.</summary>
      <exception cref="T:System.InvalidOperationException">Das Aufrufen der <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" />-Methode ist nur sofort nach dem Erstellen eines <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekts oder nach einem Aufruf von <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> gültig.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Initialisiert den Zustand des <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekts mit dem für die teilweise Validierung angegebenen <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="partialValidationType">Ein Objekt vom Typ <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> oder <see cref="T:System.Xml.Schema.XmlSchemaType" />, mit dessen Hilfe der Validierungskontext des <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekts für die teilweise Validierung initialisiert wird.</param>
      <exception cref="T:System.InvalidOperationException">Das Aufrufen der <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" />-Methode ist nur sofort nach dem Erstellen eines <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekts oder nach einem Aufruf von <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" /> gültig.</exception>
      <exception cref="T:System.ArgumentException">Der <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Parameter ist kein Objekt vom Typ <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> oder <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.Schema.XmlSchemaObject" />-Parameter darf nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Ruft die Zeilennummerninformationen für den derzeit validierten XML-Knoten ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Xml.IXmlLineInfo" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Überspringt die Validierung des aktuellen Elementinhalts und bereitet das <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekt zum Validieren des Inhalts im Kontext des übergeordneten Elements vor.</summary>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften festgelegt werden, wenn der Inhalt des aktuellen Elements erfolgreich übersprungen wird. Dieser Parameter kann <see langword="null" /> sein.</param>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> wird nach <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Ruft den Quell-URI für den derzeit validierten XML-Knoten ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Uri" />-Objekt, das den Quell-URI für den derzeit validierten XML-Knoten darstellt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Überprüft den Attributnamen, den Namespace-URI und den Wert im aktuellen Kontext des aktuellen Elements.</summary>
      <param name="localName">Der lokale Name des zu validierenden Attributs.</param>
      <param name="namespaceUri">Der Namespace-URI des zu validierenden Attributs.</param>
      <param name="attributeValue">Der Wert des zu validierenden Attributs.</param>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach der erfolgreichen Validierung des Attributs festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Der Wert des validierten Attributs.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Das Attribut ist im Kontext des aktuellen Elements nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> wird nach <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens einer der angegebenen Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Überprüft den Attributnamen, den Namespace-URI und den Wert im aktuellen Kontext des aktuellen Elements.</summary>
      <param name="localName">Der lokale Name des zu validierenden Attributs.</param>
      <param name="namespaceUri">Der Namespace-URI des zu validierenden Attributs.</param>
      <param name="attributeValue">Ein <see cref="T:System.Xml.Schema.XmlValueGetter" />-<see langword="delegate" />, mit dem der Attributwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ (XML Schema Definition Language) des Attributs kompatibel ist.</param>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach der erfolgreichen Validierung des Attributs festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Der Wert des validierten Attributs.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Das Attribut ist im Kontext des aktuellen Elements nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> wird nach <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens einer der angegebenen Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Validiert das Element im aktuellen Kontext.</summary>
      <param name="localName">Der lokale Name des zu validierenden Elements.</param>
      <param name="namespaceUri">Der Namespace-URI des zu validierenden Elements.</param>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elementnamens festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Name des Elements ist im aktuellen Kontext nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />-Methode wird nach dem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Validiert das Element im aktuellen Kontext mit den angegebenen Attributwerten <c>xsi: Type</c>, <c>xsi: Nil</c>, <c>xsi: SchemaLocation</c>, und <c>xsi: NoNamespaceSchemaLocation</c>.</summary>
      <param name="localName">Der lokale Name des zu validierenden Elements.</param>
      <param name="namespaceUri">Der Namespace-URI des zu validierenden Elements.</param>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elementnamens festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="xsiType">Der <c>xsi:Type</c>-Attributwert des Elements. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="xsiNil">Der <c>xsi:Nil</c>-Attributwert des Elements. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="xsiSchemaLocation">Der <c>xsi:SchemaLocation</c>-Attributwert des Elements. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="xsiNoNamespaceSchemaLocation">Der <c>xsi:NoNamespaceSchemaLocation</c>-Attributwert des Elements. Dieser Parameter kann <see langword="null" /> sein.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Name des Elements ist im aktuellen Kontext nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" />-Methode wird nach dem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Überprüft, ob der Textinhalt des Elements gemäß seinem Datentyp für Elemente mit einfachem Inhalt gültig ist, und überprüft darüber hinaus, ob der Inhalt des aktuellen Elements für Elemente mit komplexem Inhalt vollständig ist.</summary>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Elements festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <returns>Der analysierte, typisierte Textwert des Elements, wenn das Element über einfachen Inhalt verfügt.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Inhalt des Elements ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />-Methode wird nach einem Aufruf von <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Überprüft, ob der Textinhalt des angegebenen Elements gemäß seinem Datentyp gültig ist.</summary>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach erfolgreicher Validierung des Textinhalts des Elements festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <param name="typedValue">Der typisierte Textinhalt des Elements.</param>
      <returns>Der analysierte, typisierte einfache Inhalt des Elements.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der Textinhalt des Elements ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen (die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" />-Methode wurde z. B. vor <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen), Aufrufe der <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />-Methode wurden bereits ausgeführt, oder das Element weist einen komplexen Inhalt auf.</exception>
      <exception cref="T:System.ArgumentNullException">Der typisierte Textinhaltsparameter kann nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Überprüft, ob alle erforderlichen Attribute im Elementkontext vorhanden sind, und bereitet das <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekt auf das Validieren des untergeordneten Inhalts des Elements vor.</summary>
      <param name="schemaInfo">Ein <see cref="T:System.Xml.Schema.XmlSchemaInfo" />-Objekt, dessen Eigenschaften nach erfolgreicher Überprüfung auf das Vorhandensein aller erforderlichen Attribute im Elementkontext festgelegt werden. Dieser Parameter kann <see langword="null" /> sein.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Mindestens ein erforderliches Attribut im aktuellen Elementkontext wurde nicht gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> wird nach <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">Mindestens einer der angegebenen Parameter ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Überprüft, ob der angegebene Text-<see langword="string" /> im aktuellen Elementkontext zulässig ist und sammelt den Text für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</summary>
      <param name="elementValue">Ein im aktuellen Elementkontext zu überprüfender Text-<see langword="string" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der angegebene Text-<see langword="string" /> ist im aktuellen Elementkontext nicht zulässig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />-Methode wird nach dem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">Der Text-<see langword="string" />-Parameter darf nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Überprüft, ob der vom angegebenen <see cref="T:System.Xml.Schema.XmlValueGetter" />-Objekt zurückgegebene Text im aktuellen Elementkontext zulässig ist und sammelt den Text für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</summary>
      <param name="elementValue">Ein <see cref="T:System.Xml.Schema.XmlValueGetter" />-<see langword="delegate" />, mit dem der Textwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ des Attributs kompatibel ist.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Der angegebene Text-<see langword="string" /> ist im aktuellen Elementkontext nicht zulässig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" />-Methode wird nach dem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
      <exception cref="T:System.ArgumentNullException">Der Text-<see langword="string" />-Parameter darf nicht <see langword="null" /> sein.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Überprüft, ob der im <see langword="string" /> angegebene Leerraum im aktuellen Elementkontext zulässig ist und sammelt den Leerraum für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</summary>
      <param name="elementValue">Ein im aktuellen Elementkontext zu überprüfender Leerraum-<see langword="string" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Leerraum ist im aktuellen Elementkontext nicht zulässig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />-Methode wird nach einem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Überprüft, ob der vom angegebenen <see cref="T:System.Xml.Schema.XmlValueGetter" />-Objekt zurückgegebene Leerraum im aktuellen Elementkontext zulässig ist und sammelt den Leerraum für die Validierung, wenn das aktuelle Element einen einfachen Inhalt aufweist.</summary>
      <param name="elementValue">Ein <see cref="T:System.Xml.Schema.XmlValueGetter" />-<see langword="delegate" />, mit dem der Leerraumwert als CLR-Typ (Common Language Runtime) übergeben wird, der mit dem XSD-Typ des Attributs kompatibel ist.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Leerraum ist im aktuellen Elementkontext nicht zulässig.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />-Methode wurde nicht in der richtigen Reihenfolge aufgerufen. Beispiel: Die <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" />-Methode wird nach einem Aufruf von <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> aufgerufen.</exception>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>Der <see cref="T:System.Xml.Schema.ValidationEventHandler" />, der Schemavalidierungswarnungen und Fehler empfängt, die während der Schemavalidierung auftreten.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Ruft das als das Absenderobjekt eines Validierungsereignisses gesendete Objekt ab oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Object" />. Der Standardwert ist dieses <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Legt das <see cref="T:System.Xml.XmlResolver" />Objekt zum Auflösen von <c>xs: import</c>- und <c>xs: include</c>-Elementen fest, sowie <c>xsi: schemaLocation</c>- und <c>xsi: noNamespaceSchemaLocation</c>-Attributn.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlResolver" />-Objekt. Der Standardwert ist ein <see cref="T:System.Xml.XmlUrlResolver" />-Objekt.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Stellt die Gültigkeit eines von der <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Klasse überprüften XML-Elements dar.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>Das XML-Element ist ungültig.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>Die Gültigkeit des XML-Elements ist nicht bekannt.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>Das XML-Element ist gültig.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Stellt das W3C-<see langword="whiteSpace" />-Facet (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Stellt das W3C-<see langword="selector" />-Element (World Wide Web Consortium) dar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Schema.XmlSchemaXPath" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Ruft das Attribut für den XPath-Ausdruck ab oder legt dieses fest.</summary>
      <returns>Der Zeichenfolgenwert des Attributs für den XPath-Ausdruck.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Stellt den Schweregrad des Validierungsereignisses dar.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Gibt einen Validierungsfehler an, der beim Überprüfen des Instanzendokuments aufgetreten ist. Dies gilt für DTDs (Document Type Definitions, Dokumenttypdefinitionen) und XSD-Schemas (XML Schema Definition). Fehler gelten entsprechend den Gültigkeitseinschränkungen des W3C (World Wide Web Consortium). Wenn kein Ereignishandler für die Validierung erstellt wurde, lösen Fehler eine Ausnahme aus.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Gibt an, dass ein Validierungsereignis aufgetreten ist, das keinen Fehler darstellt. Eine Warnung wird i. d. R. ausgegeben, wenn keine DTD bzw. kein XML-Schema vorhanden ist, anhand derer ein bestimmtes Attribut oder Element validiert werden kann. Im Gegensatz zu Fehlern lösen Warnungen keine Ausnahmen aus, wenn kein Ereignishandler für die Validierung vorhanden ist.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Stellt die XSD (XML Schema Definition Language)-Schematypen des W3C dar.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Ein beliebiger atomarer Wert einer Union.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Ein <see langword="xs:anyURI" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Ein <see langword="xs:base64Binary" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Ein <see langword="xs:boolean" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Ein <see langword="xs:byte" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Ein <see langword="xs:date" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Ein <see langword="xs:dateTime" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Ein <see langword="xs:decimal" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Ein <see langword="xs:double" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Ein <see langword="xs:Duration" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Ein <see langword="xs:ENTITY" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Ein <see langword="xs:float" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Ein <see langword="xs:gDay" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Ein <see langword="xs:gMonth" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Ein <see langword="xs:gMonthDay" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Ein <see langword="xs:gYear" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Ein <see langword="xs:gYearMonth" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Ein <see langword="xs:hexBinary" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Ein <see langword="xs:ID" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Ein <see langword="xs:IDREF" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Ein <see langword="xs:int" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Ein <see langword="xs:integer" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Ein Element, z. B. ein Knoten oder ein atomarer Wert.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Ein <see langword="xs:language" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Ein <see langword="xs:long" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Ein <see langword="xs:Name" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Ein <see langword="xs:NCName" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Ein <see langword="xs:negativeInteger" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Ein <see langword="xs:NMTOKEN" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Keine Typinformationen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Ein <see langword="xs:nonNegativeInteger" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Ein <see langword="xs:nonPositiveInteger" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Ein <see langword="xs:normalizedString" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Ein <see langword="xs:NOTATION" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Ein <see langword="xs:positiveInteger" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Ein <see langword="xs:QName" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Ein <see langword="xs:short" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Ein <see langword="xs:string" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Ein <see langword="xs:time" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Ein <see langword="xs:token" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Ein <see langword="xs:unsignedByte" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Ein <see langword="xs:unsignedInt" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Ein <see langword="xs:unsignedLong" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Ein <see langword="xs:unsignedShort" />-Typ des W3C-XML-Schemas.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Ein nicht typisierter atomarer Wert.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Dieser Wert unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>Ein <see langword="delegate" />, der von der <see cref="T:System.Xml.Schema.XmlSchemaValidator" />-Klasse zum Übergeben von Attribut-, Text- und Leerraumwerten als CLR-Typ (Common Language Runtime) verwendet wird, die kompatibel sind mit dem XSD-Typ (XML Schema Definition Language) des Attributs, Texts oder Leerraums.</summary>
      <returns>Ein Objekt, das den Attribut-, Text- oder Leerraumwert enthält. Das Objekt ist ein CLR-Typ, der dem XSD-Typ des Attribut-, Text- oder Leerraumwerts entspricht.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Stellt benutzerdefinierte Formatierungen für die XML-Serialisierung und -Deserialisierung bereit.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Diese Methode ist reserviert und sollte nicht verwendet werden. Wenn Sie die <see langword="IXmlSerializable" />-Schnittstelle implementieren, sollten Sie <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) von der Methode zurückgeben und stattdessen das <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> auf die Klasse anwenden, wenn ein benutzerdefiniertes Schema erforderlich ist.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Generiert ein Objekt aus seiner XML-Darstellung.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />-Stream, aus dem das Objekt deserialisiert wird.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Konvertiert ein Objekt in seine XML-Darstellung.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlWriter" />-Stream, in den das Objekt serialisiert wird.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Gibt an, dass der Member (ein Feld, das ein Array von <see cref="T:System.Xml.XmlAttribute" />-Objekten zurückgibt) XML-Attribute enthalten kann.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Gibt an, dass der Member (ein Feld, das ein Array von <see cref="T:System.Xml.XmlElement" />-Objekten oder <see cref="T:System.Xml.XmlNode" />-Objekten zurückgibt) Objekte enthält, die XML-Elemente darstellen, die keine entsprechenden Member in dem zu serialisierenden oder zu deserialisierenden Objekt aufweisen.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Klasse und gibt den im XML-Dokument generierten XML-Elementnamen an.</summary>
      <param name="name">Der Name des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />-Klasse und gibt den im XML-Dokument und dessen XML-Namespace generierten XML-Elementnamen an.</summary>
      <param name="name">Der Name des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements.</param>
      <param name="ns">Der XML-Namespace des XML-Elements.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Ruft den XML-Elementnamen ab oder legt diesen fest.</summary>
      <returns>Der Name des XML-Elements.</returns>
      <exception cref="T:System.InvalidOperationException">Der Elementname eines Arraymembers stimmt nicht mit dem Elementnamen überein, der durch die <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />-Eigenschaft angegeben wird.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Ruft den im XML-Dokument generierten XML-Namespace ab oder legt diesen fest.</summary>
      <returns>Ein XML-Namespace.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Ruft die explizite Reihenfolge ab, in der die Elemente serialisiert oder deserialisiert werden, oder legt diese fest.</summary>
      <returns>Die Reihenfolge der Codegenerierung.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Gibt an, dass <see cref="T:System.Xml.Serialization.XmlSerializer" /> den Klassenmember als XML-Attribut serialisieren muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />-Klasse und gibt den Namen des generierten XML-Attributs an.</summary>
      <param name="attributeName">Der Name des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Attributs.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />-Klasse.</summary>
      <param name="attributeName">Der Name des generierten XML-Attributs.</param>
      <param name="type">Der zum Speichern des Attributs verwendete <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />-Klasse.</summary>
      <param name="type">Der zum Speichern des Attributs verwendete <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Ruft den Namen des XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Der Name des XML-Attributs. Der Standardwert ist der Membername.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Ruft den XSD-Datentyp des vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Ein XSD-Datentyp (XML-Schema Dokument).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Ruft einen Wert ab, der angibt, ob der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierte XML-Attributname gekennzeichnet ist, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Die Standardeinstellung ist <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Ruft den XML-Namespace des XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Der XML-Namespace des XML-Attributs.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Ruft den komplexen Typ des XML-Attributs ab oder legt diesen fest.</summary>
      <returns>Der Typ des XML-Attributs.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Gibt an, dass ein öffentliches Feld oder eine öffentliche Eigenschaft beim Serialisieren bzw. Deserialisieren des Objekts, in dem diese enthalten sind, durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> ein XML-Element darstellt.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse und gibt den Namen des XML-Elements an.</summary>
      <param name="elementName">Der XML-Elementname des serialisierten Members.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Initialisiert eine neue Instanz von <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, und gibt den Namen des XML-Elements und einen abgeleiteten Typ für den Member an, auf den das <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> angewendet wird. Dieser Membertyp wird verwendet, wenn der <see cref="T:System.Xml.Serialization.XmlSerializer" /> das Objekt serialisiert, in dem es enthalten ist.</summary>
      <param name="elementName">Der XML-Elementname des serialisierten Members.</param>
      <param name="type">Der <see cref="T:System.Type" /> eines Objekts, das vom Typ des Members abgeleitet ist.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neues Instanz der <see cref="T:System.Xml.Serialization.XmlElementAttribute" />-Klasse und gibt einen Typ für den Member an, auf den das <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> angewendet wird. Dieser Typ wird vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> verwendet, wenn das Objekt serialisiert oder deserialisiert wird, in dem es enthalten ist.</summary>
      <param name="type">Der <see cref="T:System.Type" /> eines Objekts, das vom Typ des Members abgeleitet ist.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Ruft den XSD (XML Schema Definition)-Datentyp des vom <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Ein XML-Schema Datentyp.</returns>
      <exception cref="T:System.Exception">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Ruft den Namen des generierten XML-Elements ab oder legt diesen fest.</summary>
      <returns>Der Name des generierten XML-Elements. Der Standardwert ist der Memberbezeichner.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Ruft einen Wert ab, der angibt, ob das Element qualifiziert ist.</summary>
      <returns>Einer der <see cref="T:System.Xml.Schema.XmlSchemaForm" />-Werte. Die Standardeinstellung ist <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Member, der auf <see langword="null" /> festgelegt ist, als leeres Tag, dessen <see langword="xsi:nil" />-Attribut auf <see langword="true" /> festgelegt ist, serialisieren muss, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Ruft den Namespace ab, der dem XML-Element zugeordnet ist, das aus dem Serialisieren der Klasse resultiert, oder legt diesen fest.</summary>
      <returns>Der Namespace des XML-Elements.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Ruft die explizite Reihenfolge ab, in der die Elemente serialisiert oder deserialisiert werden, oder legt diese fest.</summary>
      <returns>Die Reihenfolge der Codegenerierung.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Ruft den Objekttyp ab, mit dem das XML-Element dargestellt wird, oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Members.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Steuert die Art, in der <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen Enumerationsmember serialisiert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />-Klasse, und gibt den XML-Wert an, der von <see cref="T:System.Xml.Serialization.XmlSerializer" /> beim Serialisieren der Enumeration generiert bzw. beim Deserialisieren erkannt wird.</summary>
      <param name="name">Der überschreibende Name des Enumerationsmember.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Ruft den Wert ab, der bei der Serialisierung einer Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einer XML-Dokumentinstanz generiert wurde bzw. bei der Deserialisierung eines Enumerationsmembers erkannt wurde, oder legt diesen fest.</summary>
      <returns>Der Wert, der bei der Serialisierung einer Enumeration durch <see cref="T:System.Xml.Serialization.XmlSerializer" /> in einer XML-Dokumentinstanz generiert bzw. bei der Deserialisierung eines Enumerationsmembers erkannt wurde.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Weist die <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />-Methode von <see cref="T:System.Xml.Serialization.XmlSerializer" /> an, den Eigenschaftswert des öffentlichen Felds oder des öffentlichen Lese-/Schreibzugriffs nicht zu serialisieren.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Gibt an, dass die Zieleigenschaft, der Parameter, der Rückgabewert oder der Member Präfixe enthält, die Namespaces zugeordnet sind, welche innerhalb eines XML-Dokuments verwendet werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Steuert die XML-Serialisierung des Attributziels als XML-Stammelement.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlRootAttribute" />-Klasse und gibt den Namen des XML-Stammelements an.</summary>
      <param name="elementName">Der Name des XML-Stammelements.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Ruft den XSD-Datentyp des XML-Stammelements ab oder legt diesen fest.</summary>
      <returns>Ein XSD-Datentyp (XML-Schema Dokument).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Ruft den Namen des von der <see cref="T:System.Xml.Serialization.XmlSerializer" />-Methode bzw. der <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />-Methode der <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />-Klasse generierten bzw. erkannten XML-Elements ab, oder legt diesen fest.</summary>
      <returns>Der Name des für eine XML-Dokumentinstanz generierten und erkannten XML-Stammelements. Der Standardwert ist der Name der serialisierten Klasse.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.Serialization.XmlSerializer" /> einen auf <see langword="null" /> festgelegten Member in das auf <see langword="xsi:nil" /> festgelegte <see langword="true" />-Attribut serialisieren muss, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="T:System.Xml.Serialization.XmlSerializer" /> das <see langword="xsi:nil" />-Attribut generiert, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Ruft den Namespace des XML-Stammelements ab oder legt diesen fest.</summary>
      <returns>Der Namespace des XML-Elements.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>Speichert bei Anwendung auf einen Typ den Namen einer statischen Methode des Typs, der ein XML-Schema und ein <see cref="T:System.Xml.XmlQualifiedName" />-Element (oder bei anonymen Typen ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Element) zurückgibt, das die Serialisierung des Typs steuert.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />-Klasse, wobei der Name der statischen Methode verwendet wird, die das XML-Schema des Typs bereitstellt.</summary>
      <param name="methodName">Der Name der statischen Methode, die implementiert werden muss.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Dient zum Abrufen oder Festlegen eines Werts, der bestimmt, ob die Zielklasse ein Platzhalter ist oder das Schema für die Klasse nur ein <see langword="xs:any" />-Element enthält.</summary>
      <returns>
        <see langword="true" />, wenn die Klasse ein Platzhalter ist oder das Schema nur das <see langword="xs:any" />-Element enthält, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Ruft den Namen der statischen Methode ab, die das XML-Schema des Typs und den Namen seines XML-Schemadatentyps bereitstellt.</summary>
      <returns>Der Name der Methode, die von der XML-Infrastruktur aufgerufen wird, um ein XML-Schema zurückzugegeben.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Enthält die XML-Namespaces und Präfixe, die von <see cref="T:System.Xml.Serialization.XmlSerializer" /> zum Generieren vollständiger Namen in einer XML-Dokumentinstanz verwendet werden.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Klasse unter Verwendung der angegebenen Instanz von <see langword="XmlSerializerNamespaces" /> mit einer Auflistung von Paaren aus Präfix und Namespace.</summary>
      <param name="namespaces">Eine Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, die die Paare aus Namespace und Präfix enthält.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Klasse.</summary>
      <param name="namespaces">Ein Array von <see cref="T:System.Xml.XmlQualifiedName" />-Objekten.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Fügt einem <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Objekt ein Paar aus Präfix und Namespace hinzu.</summary>
      <param name="prefix">Das einem XML-Namespace zugeordnete Präfix.</param>
      <param name="ns">Ein XML-Namespace.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Ruft die Anzahl der Paare aus Präfix und Namespace in der Auflistung ab.</summary>
      <returns>Die Anzahl der Paare aus Präfix und Namespace in der Auflistung.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Ruft das Array von Paaren aus Präfix und Namespace von einem <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />-Objekt ab.</summary>
      <returns>Ein Array von <see cref="T:System.Xml.XmlQualifiedName" />-Objekten, die als gekennzeichneter Name in einem XML-Dokument verwendet werden.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Gibt dem <see cref="T:System.Xml.Serialization.XmlSerializer" /> an, dass der Member beim Serialisieren oder Deserialisieren der Klasse, in der er enthalten ist, als XML-Text behandelt werden muss.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTextAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Serialization.XmlTextAttribute" />-Klasse.</summary>
      <param name="type">Der <see cref="T:System.Type" /> des zu serialisierenden Members.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Ruft den XSD (XML Schema Definition)-Datentyp des von <see cref="T:System.Xml.Serialization.XmlSerializer" /> generierten Textes ab oder legt diesen fest.</summary>
      <returns>Ein XML-Schema Datentyp (XSD).</returns>
      <exception cref="T:System.Exception">Der angegebene XML-Schemadatentyp kann dem .NET-Datentyp nicht zugeordnet werden.</exception>
      <exception cref="T:System.InvalidOperationException">Der angegebene XML-Schemadatentyp ist für die Eigenschaft nicht zulässig und kann nicht in den Membertyp konvertiert werden.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Ruft den Typ des Members ab oder legt diesen fest.</summary>
      <returns>Der <see cref="T:System.Type" /> des Members.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Gibt die Art der durchzuführenden Validierung an.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Überprüft, ob DTD- oder Schemainformationen vorliegen.
Ab .NET Framework 2.0 gilt dieses Feld als veraltet. Es wird nur auf die veraltete <see cref="T:System.Xml.XmlValidatingReader" />-Klasse angewendet.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Führt eine Überprüfung entsprechend der DTD durch.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>Es wird keine Validierung ausgeführt, und es werden keine Validierungsfehler ausgelöst. Bei dieser Einstellung wird ein mit XML 1.0 kompatibler Parser erstellt, der keine Validierung durchführt.
Durch Aufrufe von <see cref="M:System.Xml.XmlReader.ResolveEntity" /> werden Standardattribute gemeldet und allgemeine Entitäten aufgelöst. Der DOCTYPE wird nicht zu Validierungszwecken verwendet.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Validiert anhand von XSD (XML Schema Definition Language)-Schemas, einschließlich Inline-XML-Schemas. XML-Schemas werden Namespace-URIs entweder mit dem <see langword="schemaLocation" />-Attribut oder mit der angegebenen <see langword="Schemas" />-Eigenschaft zugeordnet.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Validiert anhand von XDR (XML-Data Reduced)-Schemas, einschließlich Inline-XDR-Schemas. XDR-Schemas werden mit dem <see langword="x-schema" />-Namespacepräfix oder der <see cref="P:System.Xml.XmlValidatingReader.Schemas" />-Eigenschaft erkannt.
Ab .NET Framework 2.0 gilt dieses Feld als veraltet. Es wird nur auf die veraltete <see cref="T:System.Xml.XmlValidatingReader" />-Klasse angewendet.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Gibt an, wie Leerraum behandelt wird.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Gibt <see langword="Whitespace" />-Knoten und <see langword="SignificantWhitespace" />-Knoten zurück. Dies ist die Standardeinstellung.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>Gibt keine <see langword="Whitespace" />-Knoten und <see langword="SignificantWhitespace" />-Knoten zurück.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Gibt ausschließlich <see langword="SignificantWhitespace" />-Knoten zurück.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Gibt den Zustand des <see cref="T:System.Xml.XmlWriter" /> an.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Gibt an, dass ein Attributwert geschrieben wird.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Gibt an, dass die <see cref="M:System.Xml.XmlWriter.Close" />-Methode aufgerufen wurde.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Gibt an, dass Elementinhalt geschrieben wird.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Gibt an, dass ein Elementstarttag geschrieben wird.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Eine Ausnahme wurde ausgelöst, die den <see cref="T:System.Xml.XmlWriter" /> in einem ungültigen Zustand versetzt hat. Sie können die <see cref="M:System.Xml.XmlWriter.Close" />-Methode aufrufen, um den <see cref="T:System.Xml.XmlWriter" /> in den <see cref="F:System.Xml.WriteState.Closed" />-Zustand zu versetzen. Alle anderen <see cref="T:System.Xml.XmlWriter" />-Methodenaufrufe führen zu einer <see cref="T:System.InvalidOperationException" />.
Dieses Feld wurde in .NET Framework 2.0 hinzugefügt.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Gibt an, dass der Prolog geschrieben wird.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Gibt an, dass eine Write-Methode noch nicht aufgerufen wurde.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Stellt ein Attribut dar. Gültige Werte und Standardwerte für das Attribut werden in einer Dokumenttypdefinition (DTD) oder ein Schema definiert.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlAttribute" />-Klasse.</summary>
      <param name="prefix">Das Namespacepräfix.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der URI (Uniform Resource Identifier) des Namespaces.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten am Ende der Liste der untergeordneten Knoten dieses Knotens hinzu.</summary>
      <param name="newChild">Das hinzuzufügende <see cref="T:System.Xml.XmlNode" />.</param>
      <returns>Der hinzugefügte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Ruft den Basis-URI (Uniform Resource Identifier) des Knotens ab.</summary>
      <returns>Die Position, aus der der Knoten geladen wurde oder String.Empty, wenn der Knoten über keinen Basis-URI verfügt. Attributknoten haben die gleiche Basis-URI wie das Besitzerelement. Wenn ein Attributknoten kein Besitzerelement aufweist, gibt <see langword="BaseURI" /> String.Empty zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Das Knotenduplikat.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Legt die verketteten Werte des Knotens und aller diesem untergeordneten Elemente fest.</summary>
      <returns>Die verketteten Werte des Knotens und aller diesem untergeordneten Elemente. Bei Attributknoten verfügt diese Eigenschaft über dieselben Funktionen wie die <see cref="P:System.Xml.XmlAttribute.Value" />-Eigenschaft.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Legt den Wert des Attributs fest.</summary>
      <returns>Der Attributwert.</returns>
      <exception cref="T:System.Xml.XmlException">Der beim Festlegen dieser Eigenschaft angegebene XML-Code ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten unmittelbar hinter dem angegebenen Verweisknoten ein.</summary>
      <param name="newChild">Der einzufügende <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="refChild">Der <see cref="T:System.Xml.XmlNode" />, der der Verweisknoten ist. <paramref name="newChild" /> wird hinter <paramref name="refChild" /> platziert.</param>
      <returns>Der eingefügte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
<paramref name="refChild" /> ist kein untergeordnetes Element dieses Knotens.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten direkt vor dem angegebenen Verweisknoten ein.</summary>
      <param name="newChild">Die einzufügende <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="refChild">Der <see cref="T:System.Xml.XmlNode" />, der der Verweisknoten ist. <paramref name="newChild" /> wird vor diesem Knoten platziert.</param>
      <returns>Der eingefügte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ des aktuellen Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
<paramref name="refChild" /> ist kein untergeordnetes Element dieses Knotens.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Der Name des Attributknotens ohne das Präfix. Im folgenden Beispiel &lt;Book BK: Genre = ' Roman '&gt;ist die <see langword="LocalName" /> des Attributs <see langword="genre" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des Attributknotens.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Ruft den Namespace-URI dieses Knotens ab.</summary>
      <returns>Der Namespace-URI dieses Knotens. Wenn für dieses Attribut nicht explizit ein Namespace angegeben wird, gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Der Knotentyp für <see langword="XmlAttribute" />-Knoten ist XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Ruft das <see cref="T:System.Xml.XmlDocument" /> ab, zu dem dieser Knoten gehört.</summary>
      <returns>Ein XML-Dokument, zu dem dieser Knoten gehört.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Ruft das <see cref="T:System.Xml.XmlElement" /> ab, zu dem das Attribut gehört.</summary>
      <returns>Das <see langword="XmlElement" />, zu dem das Attribut gehört, oder <see langword="null" />, wenn dieses Attribut nicht Teil eines <see langword="XmlElement" /> ist.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab. Für <see langword="XmlAttribute" />-Knoten gibt diese Eigenschaft immer <see langword="null" /> zurück.</summary>
      <returns>Für <see langword="XmlAttribute" />-Knoten gibt diese Eigenschaft immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Ruft das Namespacepräfix dieses Knotens ab oder legt dieses fest.</summary>
      <returns>Das Namespacepräfix dieses Knotens. Wenn kein Präfix vorhanden ist, gibt diese Eigenschaft String.Empty zurück.</returns>
      <exception cref="T:System.ArgumentException">Dieser Knoten ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">Das angegebene Präfix enthält ein ungültiges Zeichen.
Das angegebene Präfix ist falsch formatiert.
Der namespaceURI dieses Knotens ist <see langword="null" />.
Das angegebene Präfix ist „xml“, und der namespaceURI dieses Knotens unterscheidet sich von „http://www.w3.org/XML/1998/namespace“.
Dieser Knoten ist ein Attribut, das angegebene Präfix ist „xmlns“ und der namespaceURI dieses Knotens unterscheidet sich von „http://www.w3.org/2000/xmlns/“.
Dieser Knoten ist ein Attribut, und qualifiedName dieses Knotens lautet "xmlns" [Namespaces].</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten am Anfang der Liste der untergeordneten Knoten dieses Knotens hinzu.</summary>
      <param name="newChild">Das hinzuzufügende <see cref="T:System.Xml.XmlNode" />. Wenn dieser ein <see cref="T:System.Xml.XmlDocumentFragment" /> ist, wird der gesamte Inhalt des Dokumentfragments in die Liste der untergeordneten Elemente dieses Knotens verschoben.</param>
      <returns>Der hinzugefügte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Entfernt den angegebenen untergeordneten Knoten.</summary>
      <param name="oldChild">Das zu entfernende <see cref="T:System.Xml.XmlNode" />-Element.</param>
      <returns>Der entfernte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> ist kein untergeordnetes Element dieses Knotens. Oder dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Ersetzt den angegebenen untergeordneten Knoten durch den angegebenen neuen Knoten.</summary>
      <param name="newChild">Der neue untergeordnete <see cref="T:System.Xml.XmlNode" />.</param>
      <param name="oldChild">Der zu ersetzende <see cref="T:System.Xml.XmlNode" />.</param>
      <returns>Der ersetzte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.
<paramref name="oldChild" /> ist kein untergeordnetes Element dieses Knotens.</exception>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Ruft das Post-Schema-Validation-Infoset ab, das diesem Knoten als Ergebnis der Schemavalidierung zugewiesen wurde.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das das Post-Schema-Validation-Infoset dieses Knotens enthält.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Ruft einen Wert ab, der angibt, ob der Attributwert explizit festgelegt wurde.</summary>
      <returns>
        <see langword="true" />, wenn für dieses Attribut im ursprünglichen Instanzendokument ein Wert angegeben wurde, andernfalls <see langword="false" />. Der Wert <see langword="false" /> gibt an, dass der Wert des Attributs aus der DTD stammt.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab. Bei <see langword="XmlAttribute" />-Knoten ist diese Eigenschaft der Wert des Attributs.</returns>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt, und ein Set-Vorgang wird aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Stellt eine Auflistung von Attributen dar, auf die nach Name oder Index zugegriffen werden kann.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Fügt das angegebene Attribut als letzten Knoten in die Auflistung ein.</summary>
      <param name="node">Das einzufügende Attribut.</param>
      <returns>Der an die Auflistung anzufügende <see langword="XmlAttribute" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> wurde aus einem anderen Dokument als dem erstellt, das diese Auflistung erstellt hat.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Kopiert alle <see cref="T:System.Xml.XmlAttribute" />-Objekte aus dieser Auflistung in das angegebene Array.</summary>
      <param name="array">Das Array, das als Ziel für die aus dieser Auflistung kopierten Objekte verwendet wird.</param>
      <param name="index">Der Index im Array, bei dem mit dem Kopieren begonnen wird.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Fügt das angegebene Attribut direkt nach dem angegebenen Verweisattribut ein.</summary>
      <param name="newNode">Das einzufügende Attribut.</param>
      <param name="refNode">Das Verweisattribut. <paramref name="newNode" /> wird hinter <paramref name="refNode" /> platziert.</param>
      <returns>Die in die Auflistung einzufügende <see langword="XmlAttribute" />-Klasse.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> wurde aus einem anderen Dokument als dem erstellt, das diese Auflistung erstellt hat. Oder <paramref name="refNode" /> ist kein Member dieser Auflistung.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Fügt das angegebene Attribut direkt vor dem angegebenen Verweisattribut ein.</summary>
      <param name="newNode">Das einzufügende Attribut.</param>
      <param name="refNode">Das Verweisattribut. <paramref name="newNode" /> wird vor <paramref name="refNode" /> platziert.</param>
      <returns>Die in die Auflistung einzufügende <see langword="XmlAttribute" />-Klasse.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newNode" /> wurde aus einem anderen Dokument als dem erstellt, das diese Auflistung erstellt hat. Oder <paramref name="refNode" /> ist kein Member dieser Auflistung.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Ruft das Attribut mit dem angegebenen Index ab.</summary>
      <param name="i">Der Index des Attributs.</param>
      <returns>Das Attribut am angegebenen Index.</returns>
      <exception cref="T:System.IndexOutOfRangeException">Der übergebene Index liegt außerhalb des Bereichs.</exception>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Ruft das Attribut mit dem angegebenen Namen ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Das Attribut mit dem angegebenen Namen. Wenn das Attribut nicht vorhanden ist, gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Ruft das Attribut mit dem angegebenen lokalen Namen und Namespace-URI (Uniform Resource Identifier) ab.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Das Attribut mit dem angegebenen lokalen Namen und dem angegebenen Namespace-URI. Wenn das Attribut nicht vorhanden ist, gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Fügt das angegebene Attribut als ersten Knoten in die Auflistung ein.</summary>
      <param name="node">Das einzufügende Attribut.</param>
      <returns>Das der Auflistung hinzugefügte <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Entfernt das angegebene Attribut aus der Auflistung.</summary>
      <param name="node">Das zu entfernende Attribut.</param>
      <returns>Der entfernte Knoten oder <see langword="null" />, wenn er nicht in der Auflistung gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Entfernt alle Attribute aus der Auflistung.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Entfernt das Attribut aus der Auflistung, das dem angegebenen Index entspricht.</summary>
      <param name="i">Der Index des zu entfernenden Knotens. Der erste Knoten hat den Index 0.</param>
      <returns>Gibt <see langword="null" /> zurück, wenn sich am angegebenen Index kein Attribut befindet.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Fügt einen <see cref="T:System.Xml.XmlNode" /> unter Verwendung der entsprechenden <see cref="P:System.Xml.XmlNode.Name" />-Eigenschaft hinzu.</summary>
      <param name="node">Ein in dieser Auflistung zu speichernder Attributknoten. Auf den Knoten kann später mit dem Namen des Knotens zugegriffen werden. Wenn ein Knoten mit diesem Namen bereits in der Auflistung enthalten ist, wird er durch den neuen ersetzt, andernfalls wird der Knoten am Ende der Auflistung angehängt.</param>
      <returns>Wenn der <paramref name="node" /> einen vorhandenen Knoten mit demselben Namen ersetzt, wird der alte Knoten zurückgegeben, andernfalls wird hinzugefügte Knoten zurückgegeben.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> wurde aus einem anderen <see cref="T:System.Xml.XmlDocument" /> als dem erstellt, das diese Auflistung erstellt hat.
Diese <see langword="XmlAttributeCollection" /> ist schreibgeschützt.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> ist ein <see cref="T:System.Xml.XmlAttribute" />, das bereits ein Attribut eines anderen <see cref="T:System.Xml.XmlElement" />-Objekts ist. Wenn Attribute in anderen Elementen wiederverwendet werden sollen, müssen Sie die wiederzuverwendenden <see langword="XmlAttribute" />-Objekte klonen.</exception>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">Das Array, das als Ziel für die aus dieser Auflistung kopierten Objekte verwendet wird.</param>
      <param name="index">Der Index im Array, bei dem mit dem Kopieren begonnen wird.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns>Eine <see langword="int" />, die die Anzahl der Attribute enthält.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" />, wenn die Auflistung synchronisiert ist.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>Der <see cref="T:System.Object" />, der der Stamm der Auflistung ist.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Stellt einen CDATA-Abschnitt dar.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlCDataSection" />-Klasse.</summary>
      <param name="data">Ein <see cref="T:System.String" />, der Zeichendaten enthält.</param>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" />-Objekt</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Da CDATA-Knoten, unabhängig von der Parametereinstellung, keine untergeordneten Elemente aufweisen, enthält der geklonte Knoten immer den Dateninhalt.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für CDATA-Knoten lautet der lokale Name <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für CDATA-Knoten lautet der Name <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Der Knotentyp. Für CDATA-Knoten ist der Wert XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab (bei Knoten, die über übergeordnete Elemente verfügen können).</summary>
      <returns>Der <see langword="XmlNode" />, der das übergeordnete Element des aktuellen Knotens ist. Wenn ein Knoten gerade erstellt, jedoch noch nicht der Struktur hinzugefügt oder aus dieser entfernt wurde, ist das übergeordnete Element <see langword="null" />. Für alle anderen Knoten hängt der zurückgegebene Wert vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab. In der folgenden Tabelle werden die möglichen Rückgabewerte für die <see langword="ParentNode" />-Eigenschaft beschrieben.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary>Ruft den Textknoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Gibt <see cref="T:System.Xml.XmlNode" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert die untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Stellt Methoden für die Textbearbeitung bereit, die von mehreren Klassen verwendet werden.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlCharacterData" />-Klasse.</summary>
      <param name="data">Die Zeichenfolge mit den Zeichendaten, die dem Dokument hinzugefügt werden sollen.</param>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> für Zeichendaten.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Fügt die angegebene Zeichenfolge an das Ende der Zeichendaten des Knotens an.</summary>
      <param name="strData">Die Zeichenfolge, die in die vorhandene Zeichenfolge eingefügt werden soll.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Enthält die Daten des Knotens.</summary>
      <returns>Die Daten des Knotens.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Entfernt einen Bereich von Zeichen aus dem Knoten.</summary>
      <param name="offset">Die Position in der Zeichenfolge, an der der Löschvorgang begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu löschenden Zeichen.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Ruft die verketteten Werte des Knotens und aller dem Knoten untergeordneten Elemente ab oder legt diese fest.</summary>
      <returns>Die verketteten Werte des Knotens und aller dem Knoten untergeordneten Elemente.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Fügen Sie die angegebene Zeichenfolge am angegebenen Zeichenoffset ein.</summary>
      <param name="offset">Die Position in der Zeichenfolge, an der die übergebenen Zeichenfolgendaten eingefügt werden sollen.</param>
      <param name="strData">Die Zeichenfolgendaten, die in die vorhandene Zeichenfolge eingefügt werden sollen.</param>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Ruft die Länge der Daten in Zeichen ab.</summary>
      <returns>Die Länge der Zeichenfolge in der <see cref="P:System.Xml.XmlCharacterData.Data" />-Eigenschaft in Zeichen. Die Länge kann den Wert 0 haben. CharacterData-Knoten können somit leer sein.</returns>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Ersetzt die angegebene Anzahl von Zeichen ab dem angegebenen Offset mit der angegebenen Zeichenfolge.</summary>
      <param name="offset">Die Position in der Zeichenfolge, an der der Ersetzungsvorgang begonnen werden soll.</param>
      <param name="count">Die Anzahl der zu ersetzenden Zeichen.</param>
      <param name="strData">Die neuen Daten, die die alten Zeichenfolgendaten ersetzen.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Ruft eine Teilzeichenfolge der vollständigen Zeichenfolge aus dem angegebenen Bereich ab.</summary>
      <param name="offset">Die Position in der Zeichenfolge, an der der Abruf begonnen werden soll. Ein Offset von 0 gibt an, dass der Anfangspunkt am Anfang der Daten liegt.</param>
      <param name="count">Die Anzahl der abzurufenden Zeichen.</param>
      <returns>Die dem angegebenen Bereich entsprechende Teilzeichenfolge.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der Wert des Knotens.</returns>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Stellt den Inhalt eines XML-Kommentars dar.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlComment" />-Klasse.</summary>
      <param name="comment">Der Inhalt des Kommentarelements.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Da Kommentarknoten, unabhängig von der Parametereinstellung, keine untergeordneten Elemente aufweisen, enthält der geklonte Knoten immer den Textinhalt.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für Kommentarknoten ist der Wert <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für Kommentarknoten ist der Wert <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für Kommentarknoten ist der Wert XmlNodeType.Comment.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Da Kommentarknoten nicht über untergeordnete Elemente verfügen, hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Codiert und decodiert XML-Namen und stellt Methoden für das Konvertieren zwischen Typen der Common Language Runtime und XSD-Typen (XML Schema Definition) bereit. Bei der Konvertierung von Datentypen sind die zurückgegebenen Werte vom Gebietsschema unabhängig.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlConvert" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Decodiert einen Namen. Diese Methode ist die Umkehrung der <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />-Methode und der <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />-Methode.</summary>
      <param name="name">Der umzuwandelnde Name.</param>
      <returns>Der decodierte Name.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Konvertiert den Namen in einen gültigen lokalen XML-Namen.</summary>
      <param name="name">Der zu codierende Name.</param>
      <returns>Der codierte Name.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Konvertiert den Namen in einen gültigen XML-Namen.</summary>
      <param name="name">Ein zu übersetzender Name.</param>
      <returns>Der Name, in dem eventuelle ungültige Zeichen durch eine Escapezeichenfolge ersetzt wurden.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Überprüft, ob der Name entsprechend der XML-Spezifikation gültig ist.</summary>
      <param name="name">Der zu codierende Name.</param>
      <returns>Der codierte Name.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Überprüft, ob das übergebene Zeichen ein gültiger Nicht-Doppelpunkt-Zeichentyp ist.</summary>
      <param name="ch">Das Zeichen, das als Nicht-Doppelpunkt-Zeichen überprüft werden soll.</param>
      <returns>
        <see langword="true" />, wenn ein Zeichen ein gültiger Nicht-Doppelpunkt-Zeichentyp ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Gibt die übergebene Zeicheninstanz zurück, wenn das Zeichen im Argument ein gültiges Zeichen für eine öffentliche ID ist, andernfalls <see langword="null" />.</summary>
      <param name="ch">Das zu überprüfende <see cref="T:System.Char" />-Objekt.</param>
      <returns>Das übergebene Zeichen, wenn das Zeichen ein gültiges Zeichen für eine öffentliche ID ist, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Überprüft, ob das übergebene Zeichen ein gültiger Startnamenszeichen-Typ ist.</summary>
      <param name="ch">Das Zeichen, das validiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn das Zeichen ein gültiger Startnamenszeichen-Typ ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Überprüft, ob das übergebene Zeichen ein gültiges XML-Leerraumzeichen ist.</summary>
      <param name="ch">Das Zeichen, das validiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn das übergebene Zeichen ein gültiges XML-Leerraumzeichen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Überprüft, ob das übergebene Zeichen ein gültiges XML-Zeichen ist.</summary>
      <param name="ch">Das Zeichen, das validiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn das übergebene Zeichen ein gültiges XML-Zeichen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Überprüft, ob das übergebene Ersatzzeichenpaar ein gültiges XML-Zeichen ist.</summary>
      <param name="lowChar">Das zu validierende Ersatzzeichen.</param>
      <param name="highChar">Das zu validierende Ersatzzeichen.</param>
      <returns>
        <see langword="true" />, wenn das übergebene Ersatzzeichenpaar ein gültiges XML-Zeichen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Boolean" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Boolean" />-Wert, d. h. <see langword="true" /> oder <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> stellt keinen <see langword="Boolean" />-Wert dar.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Byte" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Byte" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Char" />-Äquivalent.</summary>
      <param name="s">Die Zeichenfolge, die ein einzelnes zu konvertierendes Zeichen enthält.</param>
      <returns>Ein <see langword="Char" />, das für das einzelne Zeichen steht.</returns>
      <exception cref="T:System.ArgumentNullException">Der Wert des <paramref name="s" />-Parameters ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">Der <paramref name="s" />-Parameter enthält mehr als ein Zeichen.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ist eine leere Zeichenfolge oder hat nicht das richtige Format.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <param name="format">Die auf das konvertierte <see langword="DateTime" /> anzuwendende Formatstruktur. Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen. Es wird validiert, ob die Zeichenfolge dieses Format aufweist.</param>
      <returns>Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> oder <paramref name="format" /> ist String.Empty.
- oder -
<paramref name="s" /> enthält kein Datum und keine Uhrzeit, die <paramref name="format" /> entsprechen.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <param name="formats">Ein Array, das die Formatstrukturen enthält, die auf das konvertierte <see langword="DateTime" /> angewendet werden sollen. Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen.</param>
      <returns>Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> oder ein Element von <paramref name="formats" /> ist String.Empty.
- oder -
<paramref name="s" /> enthält kein Datum und keine Uhrzeit, die einem der Elemente von <paramref name="formats" /> entsprechen.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Konvertiert die <see cref="T:System.String" />-Struktur mithilfe von <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> in eine <see cref="T:System.DateTime" />.</summary>
      <param name="s">Der zu konvertierende <see cref="T:System.String" />-Wert.</param>
      <param name="dateTimeOption">Einer der Enumerationswerte, die angeben, ob das Datum in die Ortszeit konvertiert oder als UTC-Zeit (Coordinated Universal Time) beibehalten werden soll, falls es sich um ein UTC-Datum handelt.</param>
      <returns>Ein <see cref="T:System.DateTime" />-Äquivalent von <see cref="T:System.String" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateTimeOption" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> ist eine leere Zeichenfolge oder weist kein gültiges Format auf.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.
Hinweis Die Zeichenfolge muss einer Teilmenge der W3C-Empfehlung für den XML-dateTime-Typ entsprechen. Weitere Informationen finden Sie im dateTime-Abschnitt der XML-Schemaspezifikation.</param>
      <returns>Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Das an diese Methode übergebene Argument liegt außerhalb des Bereichs zulässiger Werte. Informationen über zulässige Werte finden Sie unter <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">Das an diese Methode übergebene Argument entspricht einer der Teilmengen der W3C-Empfehlung für den XML-DateTime-Typ nicht. Weitere Informationen finden Sie im dateTime-Abschnitt der XML-Schemaspezifikation.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <param name="format">Das Format, aus dem <paramref name="s" /> konvertiert wird. Der Formatparameter kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-DateTime-Typ sein. (Weitere Informationen finden Sie im dateTime-Abschnitt der XML-Schemaspezifikation.) Es wird validiert, ob die Zeichenfolge <paramref name="s" /> dieses Format aufweist.</param>
      <returns>Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> oder <paramref name="format" /> ist eine leere Zeichenfolge oder hat nicht das angegebene Format.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <param name="formats">Ein Array von Formaten, aus denen <paramref name="s" /> konvertiert werden kann. Jedes Format in <paramref name="formats" /> kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-DateTime-Typ sein. (Weitere Informationen finden Sie im dateTime-Abschnitt der XML-Schemaspezifikation.) Es wird validiert, ob die Zeichenfolge <paramref name="s" /> eines dieser Formate aufweist.</param>
      <returns>Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Decimal" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Decimal" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Double" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Double" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Guid" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Guid" />-Äquivalent der Zeichenfolge.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int16" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Int16" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int32" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Int32" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int64" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Int64" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.SByte" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="SByte" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Single" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="Single" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Konvertiert das <see cref="T:System.Boolean" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung von <see langword="Boolean" />, d. h. „true“ oder „false“.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Konvertiert das <see cref="T:System.Byte" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Konvertiert das <see cref="T:System.Char" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Konvertiert das <see cref="T:System.DateTime" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung von <see langword="DateTime" /> im Format „yyyy-MM-ddTHH:mm:ss , wobei „T“ ein konstantes Literal ist.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Konvertiert das <see cref="T:System.DateTime" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <param name="format">Die Formatstruktur, die die Anzeige der konvertierten Zeichenfolge definiert. Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen.</param>
      <returns>Eine Zeichenfolgendarstellung von <see langword="DateTime" /> im angegebenen Format.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Konvertiert die <see cref="T:System.DateTime" />-Struktur mithilfe von <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende <see cref="T:System.DateTime" />-Wert.</param>
      <param name="dateTimeOption">Einer der <see cref="T:System.Xml.XmlDateTimeSerializationMode" />-Werte, die angeben, wie der <see cref="T:System.DateTime" />-Wert behandelt wird.</param>
      <returns>Ein <see cref="T:System.String" />-Äquivalent von <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="dateTimeOption" />-Wert ist nicht zulässig.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Wert oder der <paramref name="dateTimeOption" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Konvertiert den angegebenen <see cref="T:System.DateTimeOffset" /> in einen <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende <see cref="T:System.DateTimeOffset" />.</param>
      <returns>Eine <see cref="T:System.String" />-Darstellung des angegebenen <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Konvertiert den angegebenen <see cref="T:System.DateTimeOffset" /> in einen <see cref="T:System.String" /> im angegebenen Format.</summary>
      <param name="value">Der zu konvertierende <see cref="T:System.DateTimeOffset" />.</param>
      <param name="format">Das Format, in das <paramref name="s" /> konvertiert wird. Der Formatparameter kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-DateTime-Typ sein. (Weitere Informationen finden Sie im dateTime-Abschnitt der XML-Schemaspezifikation.)</param>
      <returns>Eine <see cref="T:System.String" />-Darstellung im angegebenen Format des bereitgestellten <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Konvertiert das <see cref="T:System.Decimal" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Konvertiert das <see cref="T:System.Double" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Konvertiert das <see cref="T:System.Guid" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Konvertiert das <see cref="T:System.Int16" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Konvertiert das <see cref="T:System.Int32" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Konvertiert das <see cref="T:System.Int64" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Konvertiert das <see cref="T:System.SByte" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Konvertiert das <see cref="T:System.Single" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Konvertiert das <see cref="T:System.TimeSpan" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Konvertiert das <see cref="T:System.UInt16" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Konvertiert das <see cref="T:System.UInt32" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Konvertiert das <see cref="T:System.UInt64" />-Element in eine <see cref="T:System.String" />.</summary>
      <param name="value">Der zu konvertierende Wert.</param>
      <returns>Eine Zeichenfolgendarstellung des <see langword="UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.TimeSpan" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge. Das Format der Zeichenfolge muss dem W3C XML-Schema Teil 2 entsprechen: „Datentypempfehlungen für Dauer“.</param>
      <returns>Ein <see langword="TimeSpan" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> hat nicht das richtige Format zum Darstellen eines <see langword="TimeSpan" />-Werts.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt16" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="UInt16" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt32" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="UInt32" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt64" />-Äquivalent.</summary>
      <param name="s">Die zu konvertierende Zeichenfolge.</param>
      <returns>Ein <see langword="UInt64" />-Äquivalent der Zeichenfolge.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> weist nicht das richtige Format auf.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Überprüft, ob der Name ein gültiger Name gemäß der W3C-Empfehlung für XML (Extended Markup Language) ist.</summary>
      <param name="name">Der zu überprüfende Name.</param>
      <returns>Der Name, wenn dieser ein gültiger XML-Name ist.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> ist kein gültiger XML-Name.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" /> oder String.Empty.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Überprüft, ob der Name ein gültiger <see langword="NCName" /> gemäß der W3C-Empfehlung für XML (Extended Markup Language) ist. Ein <see langword="NCName" /> darf keinen Doppelpunkt enthalten.</summary>
      <param name="name">Der zu überprüfende Name.</param>
      <returns>Der Name, wenn dieser ein gültiger NCName ist.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" /> oder <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> ist kein gültiger Nicht-Doppelpunkt-Name.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Überprüft, ob die Zeichenfolge ein gültiges NMTOKEN gemäß der Empfehlung in W3C XML Schema, Teil 2: „Datentypempfehlung“ ist.</summary>
      <param name="name">Die Zeichenfolge, die überprüft werden soll.</param>
      <returns>Das Namenstoken, wenn es sich um ein gültiges NMTOKEN handelt.</returns>
      <exception cref="T:System.Xml.XmlException">Die Zeichenfolge ist kein gültiges Namenstoken.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Gibt die übergebene Zeichenfolgeninstanz zurück, wenn alle Zeichen im Zeichenfolgenargument gültige Zeichen für eine öffentliche ID sind.</summary>
      <param name="publicId">
        <see cref="T:System.String" />, der die zu überprüfende ID enthält.</param>
      <returns>Die übergebene Zeichenfolge, wenn alle Zeichen im Argument gültige Zeichen für eine öffentliche ID sind.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Überprüft, ob die Zeichenfolge ein gültiges Token gemäß der Empfehlung in W3C XML Schema, Teil 2: „Datentypempfehlung“ ist.</summary>
      <param name="token">Der Zeichenfolgenwert, der überprüft werden soll.</param>
      <returns>Das Token, wenn es sich um ein gültiges Token handelt.</returns>
      <exception cref="T:System.Xml.XmlException">Der Zeichenfolgenwert ist kein gültiges Token.</exception>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Gibt die übergebene Zeichenfolgeninstanz zurück, wenn alle Zeichen im Zeichenfolgenargument gültige Leerraumzeichen sind.</summary>
      <param name="content">Der zu überprüfende <see cref="T:System.String" />.</param>
      <returns>Die übergebene Zeichenfolgeninstanz, wenn alle Zeichen im Zeichenfolgenargument gültige Leerraumzeichen sind, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Gibt die übergebene Zeichenfolge zurück, wenn alle Zeichen und Ersatzzeichenpaare im Zeichenfolgenargument gültige XML-Zeichen sind, andernfalls wird eine <see langword="XmlException" /> mit Informationen zum ersten ungültigen Zeichen ausgelöst.</summary>
      <param name="content">Der <see cref="T:System.String" /> mit den zu überprüfenden Zeichen.</param>
      <returns>Die übergebene Zeichenfolge, wenn alle Zeichen und Ersatzzeichenpaare im Zeichenfolgenargument gültige XML-Zeichen sind, andernfalls wird eine <see langword="XmlException" /> mit Informationen zum ersten ungültigen Zeichen ausgelöst.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Gibt an, wie der Wert für die Uhrzeit beim Konvertieren zwischen einer Zeichenfolge und <see cref="T:System.DateTime" /> behandelt werden soll.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Als lokale Zeit behandeln. Wenn das <see cref="T:System.DateTime" />-Objekt eine UTC (Coordinated Universal Time, koordinierte Weltzeit) darstellt, wird es in die lokale Zeit konvertiert.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>Zeitzoneninformationen sollten bei der Konvertierung beibehalten werden.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Als lokale Zeit behandeln, wenn eine <see cref="T:System.DateTime" />-Struktur in eine Zeichenfolge konvertiert wird. Bei der Konvertierung einer Zeichenfolge in <see cref="T:System.DateTime" /> erfolgt die Konvertierung in eine lokale Zeit, wenn eine Zeitzone angegeben wurde.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Als UTC behandeln. Wenn das <see cref="T:System.DateTime" />-Objekt eine lokale Zeit darstellt, wird es in die koordinierte Weltzeit konvertiert.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Stellt den Knoten für die XML-Deklaration &lt;?xml version='1.0'...?&gt; dar.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDeclaration" />-Klasse.</summary>
      <param name="version">Die XML-Version. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDeclaration.Version" />-Eigenschaft.</param>
      <param name="encoding">Das Codierungsschema. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDeclaration.Encoding" />-Eigenschaft.</param>
      <param name="standalone">Gibt an, ob das XML-Dokument von einer externen DTD abhängt. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDeclaration.Standalone" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Da <see langword="XmlDeclaration" />-Knoten, unabhängig von der Parametereinstellung, keine untergeordneten Elemente aufweisen, enthält der geklonte Knoten immer den Datenwert.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Ruft die Codierungsebene des XML-Dokuments ab oder legt diese fest.</summary>
      <returns>Der gültige Name der Zeichencodierung. Im Folgenden werden die am häufigsten unterstützten Namen für die Zeichencodierung in XML aufgeführt:
  Kategorie  
  
  Codierungsnamen  
  
  Unicode  
  
  UTF-8, UTF-16  
  
  ISO 10646  
  
  ISO-10646-UCS-2, ISO-10646-UCS-4  
  
  ISO 8859  
  
  ISO-8859-n (wobei "n" eine Ziffer von 1 bis 9 ist)  
  
  JIS X-0208-1997  
  
  ISO-2022-JP, Shift_JIS, EUC-JP  
  
   
Dieser Wert ist optional. Wenn kein Wert festgelegt ist, gibt diese Eigenschaft String.Empty zurück.
Wenn kein Codierungsattribut angegeben ist, wird beim Schreiben oder Speichern des Dokuments die UTF-8-Codierung zugrunde gelegt.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Ruft die verketteten Werte der <see langword="XmlDeclaration" /> ab oder legt diese fest.</summary>
      <returns>Die verketteten Werte <see langword="XmlDeclaration" /> der (d. h. alles zwischen <c>&lt;"? XML</c> " und " <c>?&gt;</c>").</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDeclaration" />-Knoten lautet der lokale Name <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDeclaration" />-Knoten lautet der Name <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für <see langword="XmlDeclaration" />-Knoten ist dieser Wert XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Ruft den Wert für das eigenständige Attribut ab oder legt diesen fest.</summary>
      <returns>Gültige Werte sind <see langword="yes" />,wenn alle vom XML-Dokument geforderten Entitätsdeklarationen im Dokument enthalten sind, oder <see langword="no" />, wenn eine externe DTD (Document Type Definition) benötigt wird. Wenn die XML-Deklaration kein eigenständiges Attribut aufweist, gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Ruft den Wert von <see langword="XmlDeclaration" /> ab oder legt diesen fest.</summary>
      <returns>Der Inhalt von <see langword="XmlDeclaration" /> (d. h. alles zwischen <c>&lt;"? XML</c> " und " <c>?&gt;</c>").</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Ruft die XML-Version des Dokuments ab.</summary>
      <returns>Der Wert ist immer <see langword="1.0" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert die untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Da <see langword="XmlDeclaration" />-Knoten keine untergeordneten Elemente besitzen, hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Stellt ein XML-Dokument dar. Sie können diese Klasse zum Laden, Überprüfen, Bearbeiten, Hinzufügen und Positionieren von XML in einem Dokument verwenden.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDocument" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlDocument" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlImplementation" />.</summary>
      <param name="imp">Der zu verwendende <see langword="XmlImplementation" />.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlDocument" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Ruft den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Speicherort, von dem aus der Knoten geladen wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Der geklonte <see langword="XmlDocument" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Erstellt ein <see cref="T:System.Xml.XmlAttribute" /> mit dem angegebenen <see cref="P:System.Xml.XmlDocument.Name" />.</summary>
      <param name="name">Der qualifizierte Name des Attributs. Wenn der Name einen Doppelpunkt enthält, gibt die <see cref="P:System.Xml.XmlNode.Prefix" />-Eigenschaft den vor dem Doppelpunkt stehenden Teil des Namens und die <see cref="P:System.Xml.XmlDocument.LocalName" />-Eigenschaft den hinter dem Doppelpunkt stehenden Teil wieder. Der <see cref="P:System.Xml.XmlNode.NamespaceURI" /> bleibt leer, sofern das Präfix kein erkanntes integriertes Präfix, z. B. „xmlns“ ist. In diesem Fall hat <see langword="NamespaceURI" /> den Wert <c>http://www.w3.org/2000/xmlns/</c>.</param>
      <returns>Die neue <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Erstellt ein <see cref="T:System.Xml.XmlAttribute" /> mit dem angegebenen qualifizierten Namen und dem angegebenen <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Der qualifizierte Name des Attributs. Wenn der Name einen Doppelpunkt enthält, gibt die <see cref="P:System.Xml.XmlNode.Prefix" />-Eigenschaft den vor dem Doppelpunkt stehenden Teil des Namens und die <see cref="P:System.Xml.XmlDocument.LocalName" />-Eigenschaft den hinter dem Doppelpunkt stehenden Teil wieder.</param>
      <param name="namespaceURI">Der namespaceURI des Attributs. Wenn der qualifizierte Name das Präfix „xmlns“ enthält, muss dieser Parameter „<c>http://www.w3.org/2000/xmlns/</c>“ lauten.</param>
      <returns>Die neue <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlAttribute" /> mit dem angegebenen <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Das Präfix des Attributs (sofern vorhanden). „String.Empty“ und <see langword="null" /> sind äquivalent.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des Attributs (sofern vorhanden). „String.Empty“ und <see langword="null" /> sind äquivalent. Wenn <paramref name="prefix" /> „xmlns“ ist, muss dieser Parameter „<c>http://www.w3.org/2000/xmlns/</c>“ lauten. Andernfalls wird eine Ausnahme ausgelöst.</param>
      <returns>Die neue <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlCDataSection" />, der die angegebenen Daten enthält.</summary>
      <param name="data">Der Inhalt des neuen <see langword="XmlCDataSection" />.</param>
      <returns>Die neue <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlComment" />, der die angegebenen Daten enthält.</summary>
      <param name="data">Der Inhalt des neuen <see langword="XmlComment" />.</param>
      <returns>Die neue <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Erstellt ein Standardattribut mit dem angegebenen Präfix, lokalen Namen und Namespace-URI.</summary>
      <param name="prefix">Das Präfix des Attributs (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des Attributs (sofern vorhanden).</param>
      <returns>Die neue <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Erstellt ein <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>Die neue <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Gibt ein neues <see cref="T:System.Xml.XmlDocumentType" />-Objekt zurück.</summary>
      <param name="name">Der Name des Dokumenttyps.</param>
      <param name="publicId">Der öffentliche Bezeichner des Dokumenttyps oder <see langword="null" />. Sie können einen öffentlichen URI ebenso wie einen Systembezeichner angeben, um den Speicherort der externen DTD-Teilmenge zu identifizieren.</param>
      <param name="systemId">Der Systembezeichner des Dokumenttyps oder <see langword="null" />. Gibt die URL des Dateispeicherorts für die externe DTD-Teilmenge an.</param>
      <param name="internalSubset">Die interne DTD-Teilmenge für den Dokumenttyp oder <see langword="null" />.</param>
      <returns>Die neue <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Erstellt ein Element mit dem angegebenen Namen.</summary>
      <param name="name">Der qualifizierte Name des Elements. Wenn der Name einen Doppelpunkt enthält, gibt die <see cref="P:System.Xml.XmlNode.Prefix" />-Eigenschaft den vor dem Doppelpunkt stehenden Teil des Namens und die <see cref="P:System.Xml.XmlDocument.LocalName" />-Eigenschaft den hinter dem Doppelpunkt stehenden Teil wieder. Der qualifizierte Name darf nicht das Präfix "xmlns" enthalten.</param>
      <returns>Die neue <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Erstellt ein <see cref="T:System.Xml.XmlElement" /> mit dem qualifizierten Namen und dem <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Der qualifizierte Name des Elements. Wenn der Name einen Doppelpunkt enthält, gibt die <see cref="P:System.Xml.XmlNode.Prefix" />-Eigenschaft den vor dem Doppelpunkt stehenden Teil des Namens und die <see cref="P:System.Xml.XmlDocument.LocalName" />-Eigenschaft den hinter dem Doppelpunkt stehenden Teil wieder. Der qualifizierte Name darf nicht das Präfix "xmlns" enthalten.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Die neue <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Erstellt ein Element mit dem angegebenen <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> und der <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="prefix">Das Präfix des neuen Elements (sofern vorhanden). „String.Empty“ und <see langword="null" /> sind äquivalent.</param>
      <param name="localName">Der lokale Name des neuen Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des neuen Elements (sofern vorhanden). „String.Empty“ und <see langword="null" /> sind äquivalent.</param>
      <returns>Die neue <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Erstellt eine <see cref="T:System.Xml.XmlEntityReference" /> mit dem angegebenen Namen.</summary>
      <param name="name">Der Name des Entitätsverweises.</param>
      <returns>Die neue <see langword="XmlEntityReference" />.</returns>
      <exception cref="T:System.ArgumentException">Der Name ist ungültig (z. B. sind Namen ungültig, die mit "#" beginnen.)</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Erstellt ein neues <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt zum Navigieren in diesem Dokument.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Erstellt ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt zum Navigieren in diesem Dokument, das auf dem angegebenen <see cref="T:System.Xml.XmlNode" /> positioniert ist.</summary>
      <param name="node">Der <see cref="T:System.Xml.XmlNode" />, auf dem Sie den Navigator zunächst positionieren möchten.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlNode" /> mit dem angegebenen Knotentyp, <see cref="P:System.Xml.XmlDocument.Name" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="nodeTypeString">Zeichenfolgenversion des <see cref="T:System.Xml.XmlNodeType" /> für den neuen Knoten. Dieser Parameter muss einer der in der folgenden Tabelle aufgelisteten Werte sein.</param>
      <param name="name">Der qualifizierte Name des neuen Knotens. Wenn der Name einen Doppelpunkt enthält, wird er in eine <see cref="P:System.Xml.XmlNode.Prefix" />-Komponente und eine <see cref="P:System.Xml.XmlDocument.LocalName" />-Komponente aufgelöst.</param>
      <param name="namespaceURI">Der Namespace-URI des neuen Knotens.</param>
      <returns>Die neue <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Der Name wurde nicht bereitgestellt und <see langword="XmlNodeType" /> erfordert einen Namen, oder <paramref name="nodeTypeString" /> zählt nicht zu den unten aufgeführten Zeichenfolgen.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlNode" /> mit dem angegebenen <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="type">Der <see langword="XmlNodeType" /> des neuen Knotens.</param>
      <param name="name">Der qualifizierte Name des neuen Knotens. Wenn der Name einen Doppelpunkt enthält, wird er in eine <see cref="P:System.Xml.XmlNode.Prefix" />-Komponente und eine <see cref="P:System.Xml.XmlDocument.LocalName" />-Komponente aufgelöst.</param>
      <param name="namespaceURI">Der Namespace-URI des neuen Knotens.</param>
      <returns>Die neue <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Der Name wurde nicht bereitgestellt, und <see langword="XmlNodeType" /> erfordert einen Namen.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlNode" /> mit dem angegebenen <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="type">Der <see langword="XmlNodeType" /> des neuen Knotens.</param>
      <param name="prefix">Das Präfix des neuen Knotens.</param>
      <param name="name">Der lokale Name des neuen Knotens.</param>
      <param name="namespaceURI">Der Namespace-URI des neuen Knotens.</param>
      <returns>Die neue <see langword="XmlNode" />.</returns>
      <exception cref="T:System.ArgumentException">Der Name wurde nicht bereitgestellt, und <see langword="XmlNodeType" /> erfordert einen Namen.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Erstellt eine <see cref="T:System.Xml.XmlProcessingInstruction" /> mit dem angegebenen Namen und den angegebenen Daten.</summary>
      <param name="target">Der Name der Verarbeitungsanweisung.</param>
      <param name="data">Die Daten für die Verarbeitungsanweisung.</param>
      <returns>Die neue <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlSignificantWhitespace" />-Knoten.</summary>
      <param name="text">Die Zeichenfolge darf nur die Zeichen &amp;#20;, &amp;#10;, &amp;#13; und &amp;#9; enthalten.</param>
      <returns>Ein neuer <see langword="XmlSignificantWhitespace" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlText" /> mit dem angegebenen Text.</summary>
      <param name="text">Der Text für den Text-Knoten.</param>
      <returns>Der neue <see langword="XmlText" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlWhitespace" />-Knoten.</summary>
      <param name="text">Die Zeichenfolge darf nur die Zeichen &amp;#20;, &amp;#10;, &amp;#13; und &amp;#9; enthalten.</param>
      <returns>Ein neuer <see langword="XmlWhitespace" />-Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDeclaration" />-Knoten mit den angegebenen Werten.</summary>
      <param name="version">Die Version muss "1.0" sein.</param>
      <param name="encoding">Der Wert des Codierungsattributs. Dies ist die Codierung, die für das Speichern des <see cref="T:System.Xml.XmlDocument" /> in einer Datei oder einem Stream verwendet wird. Daher muss das Codierungsattribut auf eine von der <see cref="T:System.Text.Encoding" />-Klasse unterstützte Zeichenfolge festgelegt werden. Andernfalls schlägt <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> fehl. Wenn der Wert <see langword="null" /> oder „String.Empty“ ist, schreibt die <see langword="Save" />-Methode kein Codierungsattribut für die XML-Deklaration, und es wird daher die Standardcodierung UTF-8 verwendet.
Hinweis: Wenn das <see langword="XmlDocument" /> in einem <see cref="T:System.IO.TextWriter" /> oder einem <see cref="T:System.Xml.XmlTextWriter" /> gespeichert wird, wird dieser Codierungswert verworfen. Stattdessen wird die Codierung des <see langword="TextWriter" /> oder <see langword="XmlTextWriter" /> verwendet. Dadurch ist gewährleistet, dass die geschriebenen XML-Daten mit der richtigen Codierung eingelesen werden können.</param>
      <param name="standalone">Der Wert muss entweder yes oder no sein. Wenn der Wert <see langword="null" /> oder String.Empty ist, schreibt die <see langword="Save" />-Methode kein eigenständiges Attribut für die XML-Deklaration.</param>
      <returns>Der neue <see langword="XmlDeclaration" />-Knoten.</returns>
      <exception cref="T:System.ArgumentException">Die Werte von <paramref name="version" /> oder <paramref name="standalone" /> unterscheiden sich von den oben angegebenen Werten.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Ruft das Stamm-<see cref="T:System.Xml.XmlElement" /> für das Dokument ab.</summary>
      <returns>Das <see langword="XmlElement" />, das den Stamm der XML-Dokumentstruktur darstellt. Wenn kein Stamm vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Ruft den Knoten ab, der die DOCTYPE-Deklaration enthält.</summary>
      <returns>Der <see cref="T:System.Xml.XmlNode" />, der DocumentType (DOCTYPE-Deklaration) enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Ruft das <see cref="T:System.Xml.XmlElement" /> mit der angegebenen ID ab.</summary>
      <param name="elementId">Die Attribut-ID, mit der eine Übereinstimmung gefunden werden soll.</param>
      <returns>Das <see langword="XmlElement" /> mit der passenden ID oder <see langword="null" />, wenn kein übereinstimmendes Element gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlDocument.Name" /> übereinstimmen.</summary>
      <param name="name">Der qualifizierte Name, mit dem eine Übereinstimmung gefunden werden soll. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen. Der spezielle Wert „*“ entspricht allen Tags.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten. Wenn mit <paramref name="name" /> keine Knoten übereinstimmen, ist die zurückgegebene Auflistung leer.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlDocument.LocalName" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" /> übereinstimmen.</summary>
      <param name="localName">Der LocalName, mit dem eine Übereinstimmung gefunden werden soll. Der spezielle Wert „*“ entspricht allen Tags.</param>
      <param name="namespaceURI">Der NamespaceURI, mit dem eine Übereinstimmung gefunden werden soll.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten. Wenn keine mit dem angegebenen <paramref name="localName" /> und dem <paramref name="namespaceURI" /> kein Knoten übereinstimmt, ist die zurückgegebene Auflistung leer.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Ruft das <see cref="T:System.Xml.XmlImplementation" />-Objekt für das aktuelle Dokument ab.</summary>
      <returns>Das <see langword="XmlImplementation" />-Objekt für das aktuelle Dokument.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Importiert einen Knoten aus einem anderen Dokument in das aktuelle Dokument.</summary>
      <param name="node">Der Knoten, der importiert wird.</param>
      <param name="deep">
        <see langword="true" /> für das Erstellen eines tiefen Klons, andernfalls <see langword="false" />.</param>
      <returns>Der importierte <see cref="T:System.Xml.XmlNode" />.</returns>
      <exception cref="T:System.InvalidOperationException">Aufrufen dieser Methode für einen Knotentyp, der nicht importiert werden kann.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Löst in allen Fällen eine <see cref="T:System.InvalidOperationException" /> aus.</summary>
      <returns>Die Werte des Knotens und aller diesem untergeordneten Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">In allen Fällen.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Ruft das Markup ab, das die untergeordneten Elemente des aktuellen Knotens darstellt, oder legt dieses fest.</summary>
      <returns>Das Markup der untergeordneten Elemente des aktuellen Knotens.</returns>
      <exception cref="T:System.Xml.XmlException">Der beim Festlegen dieser Eigenschaft angegebene XML-Code ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten schreibgeschützt ist, andernfalls <see langword="false" />. <see langword="XmlDocument" />-Knoten geben immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Lädt das XML-Dokument aus dem angegebenen Stream.</summary>
      <param name="inStream">Der Stream, der das zu ladende XML-Dokument enthält.</param>
      <exception cref="T:System.Xml.XmlException">Die XML weist einen Lade- oder Analysefehler auf. In diesem Fall wird eine <see cref="T:System.IO.FileNotFoundException" /> ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Lädt das XML-Dokument aus dem angegebenen <see cref="T:System.IO.TextReader" />.</summary>
      <param name="txtReader">Der zum Übertragen von XML-Daten in das Dokument verwendete <see langword="TextReader" />.</param>
      <exception cref="T:System.Xml.XmlException">Die XML weist einen Lade- oder Analysefehler auf. In diesem Fall bleibt das Dokument leer.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Lädt das XML-Dokument aus der angegebenen URL.</summary>
      <param name="filename">Die URL für die Datei, die das zu ladende XML-Dokument enthält. Die URL kann eine lokale Datei oder eine HTTP-URL (eine Webadresse) sein.</param>
      <exception cref="T:System.Xml.XmlException">Die XML weist einen Lade- oder Analysefehler auf. In diesem Fall wird eine <see cref="T:System.IO.FileNotFoundException" /> ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition von <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Der angegebene Pfad und/oder Dateiname überschreiten die vom System definierte maximale Länge.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der angegebene Pfad ist ungültig (er befindet sich z. B. auf einem nicht zugeordneten Laufwerk).</exception>
      <exception cref="T:System.IO.IOException">Beim Öffnen der Datei ist ein E/A-Fehler aufgetreten.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="filename" /> hat eine schreibgeschützte Datei angegeben.

oder -
Dieser Vorgang wird von der aktuellen Plattform nicht unterstützt.

oder -
<paramref name="filename" /> hat ein Verzeichnis angegeben.

oder -
Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die in <paramref name="filename" /> angegebene Datei wurde nicht gefunden.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="filename" /> weist ein ungültiges Format auf.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Lädt das XML-Dokument aus dem angegebenen <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der zum Übertragen von XML-Daten in das Dokument verwendete <see langword="XmlReader" />.</param>
      <exception cref="T:System.Xml.XmlException">Die XML weist einen Lade- oder Analysefehler auf. In diesem Fall bleibt das Dokument leer.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Lädt das XML-Dokument aus der angegebenen Zeichenfolge.</summary>
      <param name="xml">Zeichenfolge, die das zu ladende XML-Dokument enthält.</param>
      <exception cref="T:System.Xml.XmlException">Die XML weist einen Lade- oder Analysefehler auf. In diesem Fall bleibt das Dokument leer.</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDocument" />-Knoten lautet der lokale Name „#document“.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDocument" />-Knoten lautet der Name „#document“.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Ruft die <see cref="T:System.Xml.XmlNameTable" /> ab, die dieser Implementierung zugeordnet ist.</summary>
      <returns>Eine <see langword="XmlNameTable" />, die das Abrufen der atomisierten Version einer Zeichenfolge im Dokument ermöglicht.</returns>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Tritt ein, wenn der <see cref="P:System.Xml.XmlNode.Value" /> eines zu diesem Dokument gehörenden Knotens geändert wurde.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Tritt ein, wenn der <see cref="P:System.Xml.XmlNode.Value" /> eines zu diesem Dokument gehörenden Knotens gerade geändert wird.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Tritt ein, wenn ein zu diesem Dokument gehörender Knoten in einen anderen Knoten eingefügt wurde.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Tritt ein, wenn ein zu diesem Dokument gehörender Knoten gerade in einen anderen Knoten eingefügt wird.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Tritt ein, wenn ein zu diesem Dokument gehörender Knoten aus dem übergeordneten Element entfernt wurde.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Tritt ein, wenn ein zu diesem Dokument gehörender Knoten gerade aus dem Dokument entfernt wird.</summary>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Der Knotentyp. Für <see langword="XmlDocument" />-Knoten ist dieser Wert „XmlNodeType.Document“.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Ruft das <see cref="T:System.Xml.XmlDocument" /> ab, zu dem der aktuelle Knoten gehört.</summary>
      <returns>Für <see langword="XmlDocument" />-Knoten (<see cref="P:System.Xml.XmlDocument.NodeType" /> entspricht „XmlNodeType.Document“) gibt diese Eigenschaft immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Ruft den übergeordneten Knoten dieses Knotens ab (bei Knoten, die über übergeordnete Knoten verfügen können).</summary>
      <returns>Gibt immer <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Ruft einen Wert ab, der angibt, ob der Leerraum im Elementinhalt beibehalten wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um Leerraum beizubehalten, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Erstellt anhand der Informationen im <see cref="T:System.Xml.XmlReader" /> ein <see cref="T:System.Xml.XmlNode" />-Objekt. Der Reader muss auf einem Knoten oder Attribut positioniert sein.</summary>
      <param name="reader">Die XML-Quelle</param>
      <returns>Der neue <see langword="XmlNode" /> oder <see langword="null" />, wenn keine weiteren Knoten vorhanden sind.</returns>
      <exception cref="T:System.NullReferenceException">Der Reader ist auf einem Knotentyp positioniert, der nicht in einen gültigen DOM-Knoten übersetzt wird (z. B. EndElement oder EndEntity).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Speichert das XML-Dokument im angegebenen Stream.</summary>
      <param name="outStream">Der Stream, in dem gespeichert werden soll.</param>
      <exception cref="T:System.Xml.XmlException">Der Vorgang führt nicht zu einem wohlgeformten XML-Dokument (z. B. zu keinem Dokumentelement oder zu doppelten XML-Deklarationen).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Speichert das XML-Dokument im angegebenen <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">Der <see langword="TextWriter" />, in dem gespeichert werden soll.</param>
      <exception cref="T:System.Xml.XmlException">Der Vorgang führt nicht zu einem wohlgeformten XML-Dokument (z. B. zu keinem Dokumentelement oder zu doppelten XML-Deklarationen).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Speichert das XML-Dokument in der angegebenen Datei. Die angegebene Datei existiert, diese Methode überschreibt sie.</summary>
      <param name="filename">Der Speicherort der Datei, in der Sie das Dokument speichern möchten.</param>
      <exception cref="T:System.Xml.XmlException">Der Vorgang führt nicht zu einem wohlgeformten XML-Dokument (z. B. zu keinem Dokumentelement oder zu doppelten XML-Deklarationen).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Speichert das XML-Dokument im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
      <exception cref="T:System.Xml.XmlException">Der Vorgang führt nicht zu einem wohlgeformten XML-Dokument (z. B. zu keinem Dokumentelement oder zu doppelten XML-Deklarationen).</exception>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Gibt das PSVI (Post-Schema-Validation Infoset) des Knotens zurück.</summary>
      <returns>Das <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das das PSVI des Knotens darstellt.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Ruft das <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt ab, das diesem <see cref="T:System.Xml.XmlDocument" /> zugeordnet ist, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt, das die diesem <see cref="T:System.Xml.XmlDocument" /> zugeordneten XSD-Schemas (XML Schema Definition) enthält, andernfalls ein leeres <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Validiert das <see cref="T:System.Xml.XmlDocument" /> anhand der in der <see cref="P:System.Xml.XmlDocument.Schemas" />-Eigenschaft enthaltenen XSD-Schemas (XML Schema Definition).</summary>
      <param name="validationEventHandler">Das <see cref="T:System.Xml.Schema.ValidationEventHandler" />-Objekt, das Informationen zu Warnungen und Fehlern der Schemavalidierung empfängt.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ein Schemavalidierungsereignis ist aufgetreten, und es wurde kein <see cref="T:System.Xml.Schema.ValidationEventHandler" />-Objekt angegeben.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Validiert das angegebene <see cref="T:System.Xml.XmlNode" />-Objekt anhand der in der <see cref="P:System.Xml.XmlDocument.Schemas" />-Eigenschaft enthaltenen XSD-Schemas (XML Schema Definition).</summary>
      <param name="validationEventHandler">Das <see cref="T:System.Xml.Schema.ValidationEventHandler" />-Objekt, das Informationen zu Warnungen und Fehlern der Schemavalidierung empfängt.</param>
      <param name="nodeToValidate">Das <see cref="T:System.Xml.XmlNode" />-Objekt, das aus einem zu validierenden <see cref="T:System.Xml.XmlDocument" /> erstellt wurde.</param>
      <exception cref="T:System.ArgumentException">Der <see cref="T:System.Xml.XmlNode" />-Objektparameter wurde nicht aus einem <see cref="T:System.Xml.XmlDocument" /> erstellt.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlNode" />-Objektparameter ist kein Element, Attribut, Dokumentfragment oder der Stammknoten.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ein Schemavalidierungsereignis ist aufgetreten, und es wurde kein <see cref="T:System.Xml.Schema.ValidationEventHandler" />-Objekt angegeben.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des <see langword="XmlDocument" />-Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="xw">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den <see langword="XmlDocument" />-Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Legt den für die Auflösung externer Ressourcen zu verwendenden <see cref="T:System.Xml.XmlResolver" /> fest.</summary>
      <returns>Der zu verwendende <see langword="XmlResolver" />.
In .NET Framework, Version 1.1, kann nur ein vollständig vertrauenswürdiger Aufrufer einen <see langword="XmlResolver" /> festlegen.</returns>
      <exception cref="T:System.Xml.XmlException">Diese Eigenschaft ist auf <see langword="null" /> festgelegt, und es wird eine externe DTD oder Entität gefunden.</exception>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Stellt ein kompaktes Objekt dar, das für das Einfügen in Strukturen nützlich ist.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDocumentFragment" />-Klasse.</summary>
      <param name="ownerDocument">Das XML-Dokument, das die Quelle des Fragments darstellt.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Ruft das Markup ab, das die untergeordneten Elemente dieses Knotens darstellt, oder legt dieses fest.</summary>
      <returns>Das Markup der untergeordneten Elemente dieses Knotens.</returns>
      <exception cref="T:System.Xml.XmlException">Der beim Festlegen dieser Eigenschaft angegebene XML-Code ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDocumentFragment" />-Knoten lautet der lokale Name <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlDocumentFragment" /> lautet der Name <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für <see langword="XmlDocumentFragment" />-Knoten ist dieser Wert XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Ruft das <see cref="T:System.Xml.XmlDocument" /> ab, zu dem dieser Knoten gehört.</summary>
      <returns>Das <see langword="XmlDocument" />, zu dem dieser Knoten gehört.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab (bei Knoten, die über übergeordnete Elemente verfügen können).</summary>
      <returns>Das übergeordnete Element dieses Knotens.
Für <see langword="XmlDocumentFragment" />-Knoten ist diese Eigenschaft immer <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Stellt die Dokumenttypdeklaration dar.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlDocumentType" />-Klasse.</summary>
      <param name="name">Der gekennzeichnete Name. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDocumentType.Name" />-Eigenschaft.</param>
      <param name="publicId">Der öffentliche Bezeichner. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDocumentType.PublicId" />-Eigenschaft.</param>
      <param name="systemId">Der Systembezeichner. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDocumentType.SystemId" />-Eigenschaft.</param>
      <param name="internalSubset">Die interne DTD-Teilmenge. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Bei Dokumenttypknoten enthält der geklonte Knoten unabhängig von der Parametereinstellung stets die Teilstruktur.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Ruft die Auflistung der in der Dokumenttypdeklaration deklarierten <see cref="T:System.Xml.XmlEntity" />-Knoten ab.</summary>
      <returns>Eine <see cref="T:System.Xml.XmlNamedNodeMap" />, die die <see langword="XmlEntity" />-Knoten enthält. Die zurückgegebene <see langword="XmlNamedNodeMap" /> ist schreibgeschützt.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Ruft den Wert der Teilmenge der internen DTD (Document Type Definition) für die DOCTYPE-Deklaration ab.</summary>
      <returns>Die Teilmenge der internen DTD für DOCTYPE. Wenn keine Teilmenge der internen DTD vorliegt, wird String.Empty zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten schreibgeschützt ist. <see langword="false" />andernfalls.
Da DocumentType-Knoten schreibgeschützt sind, gibt diese Eigenschaft immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für DocumentType-Knoten gibt diese Eigenschaft den Namen des Dokumenttyps zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für DocumentType-Knoten gibt diese Eigenschaft den Namen des Dokumenttyps zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für DocumentType-Knoten ist dieser Wert XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Ruft die Auflistung der in der Dokumenttypdeklaration vorhandenen <see cref="T:System.Xml.XmlNotation" />-Knoten ab.</summary>
      <returns>Eine <see cref="T:System.Xml.XmlNamedNodeMap" />, die die <see langword="XmlNotation" />-Knoten enthält. Die zurückgegebene <see langword="XmlNamedNodeMap" /> ist schreibgeschützt.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Ruft den Wert des öffentlichen Bezeichners für die DOCTYPE-Deklaration ab.</summary>
      <returns>Der öffentliche Bezeichner für DOCTYPE. Wenn kein öffentlicher Bezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Ruft den Wert des Systembezeichners für die DOCTYPE-Deklaration ab.</summary>
      <returns>Der Systembezeichner für DOCTYPE. Wenn kein Systembezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Für <see langword="XmlDocumentType" />-Knoten hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Stellt ein Element dar.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlElement" />-Klasse.</summary>
      <param name="prefix">Das Namespacepräfix. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlElement.Prefix" />-Eigenschaft.</param>
      <param name="localName">Der lokale Name. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlElement.LocalName" />-Eigenschaft.</param>
      <param name="namespaceURI">Der Namespace-URI. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlElement.NamespaceURI" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Ruft eine <see cref="T:System.Xml.XmlAttributeCollection" /> ab, die die Liste der Attribute für diesen Knoten enthält.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttributeCollection" />, die die Liste der Attribute für diesen Knoten enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst (und bei einem <see langword="XmlElement" />-Knoten auch dessen Attribute) geklont werden soll(en).</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Gibt den Wert des Attributs mit dem angegebenen Namen zurück</summary>
      <param name="name">Der Name des abzurufenden Attributs. Dies ist ein gekennzeichneter Name. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn kein übereinstimmendes Attribut gefunden wurde oder das Attribut keinen angegebenen Wert oder Standardwert hat, wird eine leere Zeichenfolge zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Gibt den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI zurück.</summary>
      <param name="localName">Der lokale Name des abzurufenden Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des abzurufenden Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn kein übereinstimmendes Attribut gefunden wurde oder das Attribut keinen angegebenen Wert oder Standardwert hat, wird eine leere Zeichenfolge zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Gibt das <see langword="XmlAttribute" /> mit dem angegebenen Namen zurück.</summary>
      <param name="name">Der Name des abzurufenden Attributs. Dies ist ein gekennzeichneter Name. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <returns>Das angegebene <see langword="XmlAttribute" /> oder <see langword="null" />, wenn kein übereinstimmendes Attribut gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Gibt das <see cref="T:System.Xml.XmlAttribute" /> mit dem angegebenen lokalen Namen und Namespace-URI zurück.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Das angegebene <see langword="XmlAttribute" /> oder <see langword="null" />, wenn kein übereinstimmendes Attribut gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlElement.Name" /> übereinstimmen.</summary>
      <param name="name">Der Namenstag, mit dem eine Übereinstimmung gefunden werden soll. Dies ist ein gekennzeichneter Name. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen. Das Sternchen (*) ist ein spezieller Wert, der allen Tags entspricht.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten. Die Liste ist leer, wenn keine übereinstimmenden Knoten vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Gibt eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller untergeordneten Elemente zurück, die mit dem angegebenen <see cref="P:System.Xml.XmlElement.LocalName" /> und <see cref="P:System.Xml.XmlElement.NamespaceURI" /> übereinstimmen.</summary>
      <param name="localName">Der lokale Name, mit dem eine Übereinstimmung gefunden werden soll. Das Sternchen (*) ist ein spezieller Wert, der allen Tags entspricht.</param>
      <param name="namespaceURI">Der Namespace-URI, mit dem Übereinstimmungen gefunden werden sollen.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Liste aller übereinstimmenden Knoten. Die Liste ist leer, wenn keine übereinstimmenden Knoten vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Ermittelt, ob der aktuelle Knoten über ein Attribut mit dem angegebenen Namen verfügt.</summary>
      <param name="name">Der Name des zu suchenden Attributs. Dies ist ein gekennzeichneter Name. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über das angegebene Attribut verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Ermittelt, ob der aktuelle Knoten über ein Attribut mit dem angegebenen lokalen Namen und Namespace-URI verfügt.</summary>
      <param name="localName">Der lokale Name des zu suchenden Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des zu suchenden Attributs.</param>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über das angegebene Attribut verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Ruft einen <see langword="boolean" />-Wert ab, der angibt, ob der aktuelle Knoten über Attribute verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über Attribute verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Ruft die verketteten Werte des Knotens und sämtlicher diesem untergeordneten Elemente ab oder legt diese fest.</summary>
      <returns>Die verketteten Werte des Knotens und aller diesem untergeordneten Elemente.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Ruft das Markup ab, das nur die untergeordneten Elemente dieses Knotens darstellt, oder legt dieses fest.</summary>
      <returns>Das Markup der untergeordneten Elemente dieses Knotens.</returns>
      <exception cref="T:System.Xml.XmlException">Der beim Festlegen dieser Eigenschaft angegebene XML-Code ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Ruft das Tagformat des Elements ab oder legt dieses fest.</summary>
      <returns>
        <see langword="true" />, wenn das Element im kurztagformat "&lt;Item/&gt;" serialisiert werden soll. &lt;&gt;für das lange Format "Item &lt; /Item &gt; ". <see langword="false" />
Wenn diese Eigenschaft auf <see langword="true" /> festgelegt ist, werden die dem Element untergeordneten Elemente entfernt, und das Element wird im kurzen Tagformat serialisiert. Wenn die Eigenschaft auf <see langword="false" /> festgelegt ist, ändert sich der Wert der Eigenschaft (unabhängig davon, ob das Element leer ist oder nicht). Wenn das Element leer ist, wird es im langen Format serialisiert.
Diese Eigenschaft ist eine Microsoft-Erweiterung des Dokumentobjektmodells (DOM).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Ruft den lokalen Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name des aktuellen Knotens ohne das Präfix. Beispielsweise <see langword="LocalName" /> ist Book für das-Element &lt;BK: Book&gt;.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des Knotens. Für <see langword="XmlElement" />-Knoten ist dies der Tagname des Elements.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Ruft den Namespace-URI dieses Knotens ab.</summary>
      <returns>Der Namespace-URI dieses Knotens. Wenn kein Namespace-URI vorhanden ist, gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Ruft den <see cref="T:System.Xml.XmlNode" /> ab, der diesem Element unmittelbar folgt.</summary>
      <returns>Der <see langword="XmlNode" />, der diesem Element unmittelbar folgt.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Der Knotentyp. Für <see langword="XmlElement" />-Knoten ist dieser Wert XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Ruft das <see cref="T:System.Xml.XmlDocument" /> ab, zu dem dieser Knoten gehört.</summary>
      <returns>Das <see langword="XmlDocument" />, zu dem dieses Element gehört.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab (bei Knoten, die über übergeordnete Elemente verfügen können).</summary>
      <returns>Der <see langword="XmlNode" />, der das übergeordnete Element des aktuellen Knotens ist. Wenn ein Knoten gerade erstellt, jedoch noch nicht der Struktur hinzugefügt oder aus dieser entfernt wurde, ist das übergeordnete Element <see langword="null" />. Für alle anderen Knoten hängt der zurückgegebene Wert vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab. In der folgenden Tabelle werden die möglichen Rückgabewerte für die <see langword="ParentNode" />-Eigenschaft beschrieben.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Ruft das Namespacepräfix dieses Knotens ab oder legt dieses fest.</summary>
      <returns>Das Namespacepräfix dieses Knotens. Wenn kein Präfix vorhanden ist, gibt diese Eigenschaft String.Empty zurück.</returns>
      <exception cref="T:System.ArgumentException">Dieser Knoten ist schreibgeschützt</exception>
      <exception cref="T:System.Xml.XmlException">Das angegebene Präfix enthält ein ungültiges Zeichen.
Das angegebene Präfix ist falsch formatiert.
Der namespaceURI dieses Knotens ist <see langword="null" />.
Das angegebene Präfix ist „xml“, und der NamespaceURI dieses Knotens unterscheidet sich von „http://www.w3.org/XML/1998/namespace“.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Entfernt alle angegebenen Attribute und untergeordneten Elemente des aktuellen Knotens. Standardattribute werden nicht entfernt.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Entfernt alle angegebenen Attribute des Elements. Standardattribute werden nicht entfernt.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Entfernt ein Attribut über den Namen.</summary>
      <param name="name">Der Name des zu entfernenden Attributs. Dies ist ein gekennzeichneter Name. Er wird mit der <see langword="Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Entfernt ein Attribut mit dem angegebenen lokalen Namen und Namespace-URI. (Wenn das entfernte Attribut über einen Standardwert verfügt, wird es sofort ersetzt.)</summary>
      <param name="localName">Der lokale Name des zu entfernenden Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des zu entfernenden Attributs.</param>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Entfernt den Attributknoten mit dem angegebenen Index aus dem Element. (Wenn das entfernte Attribut über einen Standardwert verfügt, wird es sofort ersetzt.)</summary>
      <param name="i">Der Index des zu entfernenden Knotens. Der erste Knoten hat den Index 0.</param>
      <returns>Der entfernte Attributknoten oder <see langword="null" />, wenn am angegebenen Index kein Knoten vorhanden ist.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Entfernt das mit dem lokalen Namen und Namespace-URI angegebene <see cref="T:System.Xml.XmlAttribute" />. (Wenn das entfernte Attribut über einen Standardwert verfügt, wird es sofort ersetzt.)</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Das entfernte <see langword="XmlAttribute" /> oder <see langword="null" />, wenn das <see langword="XmlElement" /> über keinen übereinstimmenden Attributknoten verfügt.</returns>
      <exception cref="T:System.ArgumentException">Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Entfernt den angegebenen <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="oldAttr">Der zu entfernende <see langword="XmlAttribute" />-Knoten. Wenn das entfernte Attribut über einen Standardwert verfügt, wird es sofort ersetzt.</param>
      <returns>Das entfernte <see langword="XmlAttribute" /> oder <see langword="null" />, wenn <paramref name="oldAttr" /> kein Attributknoten des <see langword="XmlElement" /> ist.</returns>
      <exception cref="T:System.ArgumentException">Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Ruft das Post-Schema-Validation-Infoset ab, das diesem Knoten als Ergebnis der Schemavalidierung zugewiesen wurde.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das das Post-Schema-Validation-Infoset dieses Knotens enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Legt den Wert des Attributs mit dem angegebenen Namen fest.</summary>
      <param name="name">Der Name des Attributs, das erstellt oder geändert werden soll. Dies ist ein gekennzeichneter Name. Wenn der Name einen Doppelpunkt enthält, wird er in eine Präfix- und eine lokale Namenskomponente aufgelöst.</param>
      <param name="value">Der für das Attribut festzulegende Wert.</param>
      <exception cref="T:System.Xml.XmlException">Der angegebene Name enthält ein ungültiges Zeichen.</exception>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Legt den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI fest.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <param name="value">Der für das Attribut festzulegende Wert.</param>
      <returns>Der Attributwert.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Fügt das angegebene <see cref="T:System.Xml.XmlAttribute" /> hinzu.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Das hinzuzufügende <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Fügt das angegebene <see cref="T:System.Xml.XmlAttribute" /> hinzu.</summary>
      <param name="newAttr">Der <see langword="XmlAttribute" />-Knoten, der der Attributauflistung dieses Elements hinzugefügt werden soll.</param>
      <returns>Wenn das Attribut ein vorhandenes Attribut mit demselben Namen ersetzt, wird das alte <see langword="XmlAttribute" /> zurückgegeben, andernfalls wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="newAttr" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde. Oder dieser Knoten ist schreibgeschützt.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="newAttr" /> ist bereits ein Attribut eines anderen <see langword="XmlElement" />-Objekts. Sie müssen <see langword="XmlAttribute" />-Knoten explizit klonen, um sie in anderen <see langword="XmlElement" />-Objekten erneut verwenden zu können.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den aktuellen Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Stellt eine Entitätsdeklaration dar, z.B. &lt;!ENTITY...&gt; .</summary>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Ruft den Basis-URI (Uniform Resource Identifier) des aktuellen Knotens ab.</summary>
      <returns>Der Speicherort, von dem aus der Knoten geladen wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens. Entitätsknoten können nicht geklont werden. Das Aufrufen dieser Methode für ein <see cref="T:System.Xml.XmlEntity" />-Objekt löst eine Ausnahme aus.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Eine Kopie des <see cref="T:System.Xml.XmlNode" />, von dem die Methode aufgerufen wird.</returns>
      <exception cref="T:System.InvalidOperationException">Entitätsknoten können nicht geklont werden. Das Aufrufen dieser Methode für ein <see cref="T:System.Xml.XmlEntity" />-Objekt löst eine Ausnahme aus.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Ruft die verketteten Werte des Entitätsknotens und aller untergeordneten Elemente ab.</summary>
      <returns>Die verketteten Werte des Knotens und aller diesem untergeordneten Elemente.</returns>
      <exception cref="T:System.InvalidOperationException">Es wird versucht, diese Eigenschaft festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Ruft das Markup ab, das die untergeordneten Elemente dieses Knotens darstellt.</summary>
      <returns>Für <see langword="XmlEntity" />-Knoten wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Es wird versucht, diese Eigenschaft festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten schreibgeschützt ist. <see langword="false" />andernfalls.
Da <see langword="XmlEntity" />-Knoten schreibgeschützt sind, gibt diese Eigenschaft immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Ruft den Namen des Knotens ohne das Namespacepräfix ab.</summary>
      <returns>Für <see langword="XmlEntity" />-Knoten gibt diese Eigenschaft den Namen der Entität zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Ruft den Namen des Knotens ab.</summary>
      <returns>Der Name der Entität.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Ruft den Typ des Knotens ab.</summary>
      <returns>Der Knotentyp. Für <see langword="XmlEntity" />-Knoten ist der Wert XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Ruft den Namen des optionalen NDATA-Attributs in der Entitätsdeklaration ab.</summary>
      <returns>Der Name des NDATA-Attributs. Wenn kein NDATA-Attribut vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Ruft das Markup ab, das diesen Knoten und alle untergeordneten Elemente darstellt.</summary>
      <returns>Für <see langword="XmlEntity" />-Knoten wird String.Empty zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Ruft den Wert des öffentlichen Bezeichners für die Entitätsdeklaration ab.</summary>
      <returns>Der öffentliche Bezeichner für die Entität. Wenn kein öffentlicher Bezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Ruft den Wert des Systembezeichners für die Entitätsdeklaration ab.</summary>
      <returns>Der Systembezeichner für die Entität. Wenn kein Systembezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Für <see langword="XmlEntity" />-Knoten hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />. Für <see langword="XmlEntity" />-Knoten hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Stellt einen Entitätsverweisknoten dar.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlEntityReference" />-Klasse.</summary>
      <param name="name">Der Name des Entitätsverweises. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlEntityReference.Name" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Ruft den Basis-URI (Uniform Resource Identifier) des aktuellen Knotens ab.</summary>
      <returns>Der Speicherort, von dem aus der Knoten geladen wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Für <see langword="XmlEntityReference" />-Knoten gibt diese Methode immer einen Entitätsverweisknoten ohne untergeordnete Elemente zurück. Der Ersetzungstext wird festgelegt, wenn der Knoten in ein übergeordnetes Element eingefügt wird.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten schreibgeschützt ist, andernfalls <see langword="false" />.
Da <see langword="XmlEntityReference" />-Knoten schreibgeschützt sind, gibt diese Eigenschaft immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlEntityReference" />-Knoten gibt diese Eigenschaft den Namen der Entität, auf die verwiesen wird, zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Ruft den Namen des Knotens ab.</summary>
      <returns>Der Name der Entität, auf die verwiesen wird.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Ruft den Typ des Knotens ab.</summary>
      <returns>Der Knotentyp. Für <see langword="XmlEntityReference" />-Knoten ist der Wert XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der Wert des Knotens. Für <see langword="XmlEntityReference" />-Knoten gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
      <exception cref="T:System.InvalidOperationException">Festlegen der Eigenschaft.</exception>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Gibt ausführliche Informationen über die letzte Ausnahme zurück.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlException" />-Klasse unter Verwendung der Informationen im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt und im <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt, das alle Eigenschaften einer <see langword="XmlException" /> enthält.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt, das die Kontextinformationen enthält.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Fehlerbeschreibung.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlException" />-Klasse.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die <see cref="T:System.Exception" />, die die <see langword="XmlException" /> ausgelöst hat (falls eine Ausnahme ausgelöst wurde). Dieser Wert kann <see langword="null" /> sein.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlException" />-Klasse mit der angegebenen Meldung, inneren Ausnahme, Zeilennummer und Zeilenposition.</summary>
      <param name="message">Die Fehlerbeschreibung.</param>
      <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="lineNumber">Die Nummer der Zeile, in der der Fehler aufgetreten ist.</param>
      <param name="linePosition">Die Position der Zeile, an der der Fehler aufgetreten ist.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überträgt alle <see langword="XmlException" />-Eigenschaften für den angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> in die <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Ruft die Nummer der Zeile ab, in der der Fehler aufgetreten ist.</summary>
      <returns>Die Nummer der Zeile, in der der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Ruft die Position der Zeile ab, an der der Fehler aufgetreten ist.</summary>
      <returns>Die Position der Zeile, an der der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Ruft eine Meldung ab, die die aktuelle Ausnahme beschreibt.</summary>
      <returns>Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Ruft den Speicherort der XML-Datei ab.</summary>
      <returns>Der Quell-URI für die XML-Daten. Wenn kein Quell-URI vorhanden ist, gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Definiert den Kontext für eine Gruppe von <see cref="T:System.Xml.XmlDocument" />-Objekten</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlImplementation" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlImplementation" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Ein <see cref="T:System.Xml.XmlNameTable" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Erstellt einen neuen <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Das neue <see langword="XmlDocument" /> -Objekt.</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Überprüft, ob die DOM-Implementierung (Document Object Model) ein bestimmtes Feature implementiert.</summary>
      <param name="strFeature">Der Paketname des zu testenden Features. Bei diesem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</param>
      <param name="strVersion">Dies ist die Versionsnummer des zu testenden Paketnamens. Wenn die Version nicht angegeben ist (<see langword="null" />) und eine beliebige Version des Features unterstützt wird, gibt die Methode den Wert <see langword="true" /> zurück.</param>
      <returns>
        <see langword="true" />, wenn das Feature in der angegebenen Version implementiert ist, andernfalls <see langword="false" />.
In der folgenden Tabelle werden die Kombinationen aufgeführt, bei den <see langword="HasFeature" /> den Wert <see langword="true" /> zurückgibt.
 strFeature 
 strVersion 
 XML 
 1.0 
 XML 
 2.0</returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Ruft den Knoten ab, der diesem Knoten unmittelbar vorausgeht oder auf ihn folgt.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Ruft den Knoten ab, der diesem Knoten unmittelbar folgt.</summary>
      <returns>Der <see cref="T:System.Xml.XmlNode" />, der unmittelbar auf diesen Knoten folgt, oder <see langword="null" />, wenn kein solcher vorhanden ist.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Ruft den Knoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Der vorausgehende <see cref="T:System.Xml.XmlNode" /> oder <see langword="null" />, wenn kein solcher vorhanden ist.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Stellt eine Auflistung von Knoten dar, die über Name oder Index zugänglich sind.</summary>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Ruft die Anzahl der Knoten im <see langword="XmlNamedNodeMap" />-Objekt ab.</summary>
      <returns>Die Anzahl der Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Stellt Unterstützung für "foreach"-Iterationen in der Auflistung von Knoten in der <see langword="XmlNamedNodeMap" /> bereit.</summary>
      <returns>Ein Enumeratorobjekt.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Ruft einen durch den Namen angegebenen <see cref="T:System.Xml.XmlNode" /> ab.</summary>
      <param name="name">Der gekennzeichnete Name des abzurufenden Knotens. Er wird mit der <see cref="P:System.Xml.XmlNode.Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <returns>Ein <see langword="XmlNode" /> mit dem angegebenen Namen oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Ruft einen Knoten mit dem übereinstimmenden <see cref="P:System.Xml.XmlNode.LocalName" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" /> ab.</summary>
      <param name="localName">Der lokale Name des abzurufenden Knotens.</param>
      <param name="namespaceURI">Der abzurufende Namespace-URI (Uniform Resource Identifier) des Knotens.</param>
      <returns>Ein <see cref="T:System.Xml.XmlNode" /> mit dem übereinstimmenden lokalen Namen und Namespace-URI oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Ruft den Knoten am angegebenen Index in der <see langword="XmlNamedNodeMap" /> ab.</summary>
      <param name="index">Die Indexposition des aus der <see langword="XmlNamedNodeMap" /> abzurufenden Knotens. Der Index ist nullbasiert. Daher ist der Index des ersten Knotens 0 und der des letzten Knotens <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> -1.</param>
      <returns>Der <see cref="T:System.Xml.XmlNode" /> am angegebenen Index. Wenn <paramref name="index" /> kleiner als 0 oder größer oder gleich der <see cref="P:System.Xml.XmlNamedNodeMap.Count" />-Eigenschaft ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Entfernt den Knoten aus der <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name">Der gekennzeichnete Name des zu entfernenden Knotens. Der Name wird mit der <see cref="P:System.Xml.XmlNode.Name" />-Eigenschaft des übereinstimmenden Knotens verglichen.</param>
      <returns>Der aus dieser <see langword="XmlNode" /> entfernte <see langword="XmlNamedNodeMap" /> oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Entfernt einen Knoten mit dem übereinstimmenden <see cref="P:System.Xml.XmlNode.LocalName" /> und <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="localName">Der lokale Name des zu entfernenden Knotens.</param>
      <param name="namespaceURI">Der Namespace-URI des zu entfernenden Knotens.</param>
      <returns>Der entfernte <see cref="T:System.Xml.XmlNode" /> oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Fügt einen <see cref="T:System.Xml.XmlNode" /> unter Verwendung der entsprechenden <see cref="P:System.Xml.XmlNode.Name" />-Eigenschaft hinzu.</summary>
      <param name="node">Ein in der <see langword="XmlNode" /> zu speichernder <see langword="XmlNamedNodeMap" />. Wenn ein Knoten mit diesem Namen bereits in der Zuordnung enthalten ist, wird er durch den neuen ersetzt.</param>
      <returns>Wenn der <paramref name="node" /> einen vorhandenen Knoten mit demselben Namen ersetzt, wird der alte Knoten zurückgegeben, andernfalls wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="node" /> wurde aus einem anderen <see cref="T:System.Xml.XmlDocument" /> als dem erstellt, das die <see langword="XmlNamedNodeMap" /> erstellt hat; oder die <see langword="XmlNamedNodeMap" /> ist schreibgeschützt.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Löst Namespaces auf, fügt sie einer Auflistung hinzu bzw. entfernt sie daraus und ermöglicht die Verwaltung der Gültigkeitsbereiche dieser Namespaces.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlNamespaceManager" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nameTable">Der zu verwendende <see cref="T:System.Xml.XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">An den Konstruktor wird <see langword="null" /> übergeben.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Fügt der Auflistung den angegebenen Namespace hinzu.</summary>
      <param name="prefix">Das Präfix, das dem hinzugefügten Namespace zugeordnet werden soll. Verwenden Sie String.Empty, um einen Standardnamespace hinzuzufügen.
Hinweis Wenn der <see cref="T:System.Xml.XmlNamespaceManager" /> jedoch für das Auflösen von Namespaces in einem XML Path Language-Ausdruck (XPath) verwendet wird, muss ein Präfix angegeben werden. Wenn ein XPath-Ausdruck kein Präfix enthält, wird davon ausgegangen, dass der Namespace-URI (Uniform Resource Identifier) der leere Namespace ist. Weitere Informationen über XPath-Ausdrücke und den <see cref="T:System.Xml.XmlNamespaceManager" /> finden Sie in der <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />-Methode und der <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />-Methode.</param>
      <param name="uri">Der hinzuzufügende Namespace.</param>
      <exception cref="T:System.ArgumentException">Der Wert für <paramref name="prefix" /> ist "xml" oder "xmlns".</exception>
      <exception cref="T:System.ArgumentNullException">Der Wert für <paramref name="prefix" /> oder <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Ruft den Namespace-URI für den Standardnamespace ab.</summary>
      <returns>Der Namespace-URI für den Standard Namespace oder eine leere Zeichenfolge, wenn kein Standard Namespace vorhanden ist.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Gibt einen Enumerator für das Durchlaufen der Namespaces im <see cref="T:System.Xml.XmlNamespaceManager" /> zurück.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die vom <see cref="T:System.Xml.XmlNamespaceManager" /> gespeicherten Präfixe enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Ruft eine Auflistung von Namen sortiert nach Präfix ab, mit der die aktuell im Gültigkeitsbereich vorhanden Namespaces durchlaufen werden können.</summary>
      <param name="scope">Ein Enumerationswert, der den Typ der Namespaceknoten angibt, die zurückgegeben werden sollen.</param>
      <returns>Eine Auflistung der derzeit im Gültigkeitsbereich vorhandenen Paare aus Namespace und Präfix.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob für das angegebene Präfix ein Namespace für den aktuellen abgelegten Gültigkeitsbereich definiert ist.</summary>
      <param name="prefix">Das Präfix des zu suchenden Namespaces.</param>
      <returns>
        <see langword="true" />, wenn ein definierter Namespace vorhanden ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Ruft den Namespace-URI für das angegebene Präfix ab.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu suchen, übergeben Sie String.Empty.</param>
      <returns>Der Namespace-URI für <paramref name="prefix" /> oder <see langword="null" />, wenn kein zugeordneter Namespace vorhanden ist. Die zurückgegebene Zeichenfolge ist atomisiert.
Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter der <see cref="T:System.Xml.XmlNameTable" />-Klasse.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Sucht das für den angegebenen Namespace-URI deklarierte Präfix.</summary>
      <param name="uri">Der für das Präfix aufzulösende Namespace.</param>
      <returns>Das passende Präfix. Wenn es kein zugeordnetes Präfix gibt, gibt die Methode den Wert "String.Empty" zurück. Wenn ein Nullwert angegeben wird, dann wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Ruft die diesem Objekt zugeordnete <see cref="T:System.Xml.XmlNameTable" /> ab.</summary>
      <returns>Der von diesem Objekt verwendete <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Holt einen Namespacebereich vom Stapel.</summary>
      <returns>
        <see langword="true" />, wenn noch Namespacebereiche im Stapel vorhanden sind, <see langword="false" />, wenn keine Namespaces mehr geholt werden können.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Legt einen Namespacebereich auf den Stapel.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Entfernt den angegebenen Namespace für das angegebene Präfix.</summary>
      <param name="prefix">Das Präfix für den Namespace.</param>
      <param name="uri">Der für das angegebene Präfix zu entfernende Namespace. Der entfernte Namespace stammt aus dem aktuellen Namespacebereich. Namespaces außerhalb des aktuellen Gültigkeitsbereichs werden ignoriert.</param>
      <exception cref="T:System.ArgumentNullException">Der Wert für <paramref name="prefix" /> oder <paramref name="uri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Definiert den Namespacebereich.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Alle Namespaces, die im Gültigkeitsbereich des aktuellen Knotens definiert sind. Dies beinhaltet den xmlns:xml-Namespace, der immer implizit deklariert wird. Die Reihenfolge der zurückgegebenen Namespaces ist nicht definiert.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Alle Namespaces, die im Gültigkeitsbereich des aktuellen Knotens definiert sind. Davon ausgeschlossen ist der xmlns:xml-Namespace, der immer implizit deklariert ist. Die Reihenfolge der zurückgegebenen Namespaces ist nicht definiert.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Alle Namespaces, die am aktuellen Knoten lokal definiert sind.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Tabelle atomisierter Zeichenfolgenobjekte.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlNameTable" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Atomisiert beim Überschreiben in einer abgeleiteten Klasse die angegebene Zeichenfolge und fügt sie der <see langword="XmlNameTable" /> hinzu.</summary>
      <param name="array">Das Zeichenarray mit dem hinzuzufügenden Namen.</param>
      <param name="offset">Nullbasierter Index im Array, der das erste Zeichen des Namens angibt.</param>
      <param name="length">Die Anzahl der Zeichen im Namen.</param>
      <returns>Die neue atomisierte Zeichenfolge bzw. die vorhandene, sofern bereits vorhanden. Wenn die Länge 0 ist, wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />
- oder -
<paramref name="offset" /> &gt;= <paramref name="array" />.Length
- oder -
<paramref name="length" /> &gt; <paramref name="array" />.Length
Die oben genannten Bedingungen führen nicht zum Auslösen einer Ausnahme, wenn <paramref name="length" /> = 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>Atomisiert beim Überschreiben in einer abgeleiteten Klasse die angegebene Zeichenfolge und fügt sie der <see langword="XmlNameTable" /> hinzu.</summary>
      <param name="array">Der hinzuzufügende Name.</param>
      <returns>Die neue atomisierte Zeichenfolge bzw. die vorhandene, sofern bereits vorhanden.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die atomisierte Zeichenfolge ab, die dieselben Zeichen wie der angegebene Zeichenbereich im angegebenen Array enthält.</summary>
      <param name="array">Das Zeichenarray mit dem zu suchenden Namen.</param>
      <param name="offset">Der nullbasierte Index im Array, der das erste Zeichen des Namens angibt.</param>
      <param name="length">Die Anzahl der Zeichen im Namen.</param>
      <returns>Die atomisierte Zeichenfolge oder <see langword="null" />, wenn die Zeichenfolge noch nicht atomisiert wurde. Wenn <paramref name="length" /> 0 ist, wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />
- oder -
<paramref name="offset" /> &gt;= <paramref name="array" />.Length
- oder -
<paramref name="length" /> &gt; <paramref name="array" />.Length
Die oben genannten Bedingungen führen nicht zum Auslösen einer Ausnahme, wenn <paramref name="length" /> = 0 (null).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die atomisierte Zeichenfolge ab, die denselben Wert wie die angegebenen Zeichenfolge hat.</summary>
      <param name="array">Der zu suchende Name.</param>
      <returns>Die atomisierte Zeichenfolge oder <see langword="null" />, wenn die Zeichenfolge noch nicht atomisiert wurde.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Stellt einen einzelnen Knoten im XML-Dokument dar.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten am Ende der Liste der untergeordneten Knoten dieses Knotens hinzu.</summary>
      <param name="newChild">Der hinzuzufügende Knoten. Der gesamte Inhalt des hinzuzufügenden Knotens wird an den angegebenen Speicherort verschoben.</param>
      <returns>Der hinzugefügte Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Ruft eine <see cref="T:System.Xml.XmlAttributeCollection" /> ab, die die Attribute dieses Knotens enthält.</summary>
      <returns>Eine <see langword="XmlAttributeCollection" />, die die Attribute des Knotens enthält.
Wenn der Knoten vom Typ XmlNodeType.Element ist, werden die Attribute des Knotens zurückgegeben. Andernfalls gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Ruft den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Die Position, aus der der Knoten geladen wurde oder String.Empty, wenn der Knoten über keinen Basis-URI verfügt.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Ruft alle untergeordneten Knoten des Knotens ab.</summary>
      <returns>Ein Objekt, das sämtliche untergeordneten Knoten des Knotens enthält.
Wenn keine untergeordneten Knoten vorhanden sind, gibt diese Eigenschaft eine leere <see cref="T:System.Xml.XmlNodeList" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse ein Duplikat des Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Der geklonte Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Aufruf dieser Methode für einen Knotentyp, der nicht geklont werden kann.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Erstellt einen <see cref="T:System.Xml.XPath.XPathNavigator" /> zum Navigieren in diesem Objekt.</summary>
      <returns>Ein <see langword="XPathNavigator" />-Objekt zum Navigieren des Knotens. Der <see langword="XPathNavigator" /> ist auf dem Knoten positioniert, von dem die Methode aufgerufen wurde. Er ist nicht im Stamm des Dokuments positioniert.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Ruft das erste untergeordnete Element des Knotens ab.</summary>
      <returns>Das erste untergeordnete Element des Knotens. Wenn kein solcher Knoten vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die untergeordneten Knoten des aktuellen Knotens durchläuft.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, mit dem die untergeordneten Knoten im aktuellen Knoten durchlaufen werden können.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Sucht im Gültigkeitsbereich des aktuellen Knotens die nächstgelegene xmlns-Deklaration für das angegebene Präfix und gibt den Namespace-URI in der Deklaration zurück.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI gesucht werden soll.</param>
      <returns>Der Namespace-URI des angegebenen Präfixes.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Sucht im Gültigkeitsbereich des aktuellen Knotens die nächstgelegene xmlns-Deklaration für den angegebenen Namespace-URI und gibt das in dieser Deklaration definierte Präfix zurück.</summary>
      <param name="namespaceURI">Der Namespace-URI, dessen Präfix gesucht werden soll.</param>
      <returns>Das Präfix für den angegebenen Namespace-URI.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Knoten über untergeordnete Knoten verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten über untergeordnete Knoten verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Ruft die verketteten Werte des Knotens und sämtlicher diesem untergeordneten Knoten ab oder legt diese fest.</summary>
      <returns>Die verketteten Werte des Knotens und aller diesem untergeordneten Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Ruft das Markup ab, das nur die untergeordneten Knoten dieses Knotens darstellt, oder legt dieses fest.</summary>
      <returns>Das Markup der untergeordneten Knoten dieses Knotens.
<see langword="InnerXml" /> gibt keine Standardattribute zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Festlegen dieser Eigenschaft auf einem Knoten, der keine untergeordneten Knoten besitzen kann.</exception>
      <exception cref="T:System.Xml.XmlException">Der beim Festlegen dieser Eigenschaft angegebene XML-Code ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten unmittelbar hinter dem angegebenen Verweisknoten ein.</summary>
      <param name="newChild">Der einzufügende Knoten.</param>
      <param name="refChild">Der Verweisknoten. <paramref name="newChild" /> wird hinter <paramref name="refChild" /> platziert.</param>
      <returns>Der Knoten, der eingefügt wird.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
<paramref name="refChild" /> ist kein untergeordnetes Element dieses Knotens.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten direkt vor dem angegebenen Verweisknoten ein.</summary>
      <param name="newChild">Der einzufügende Knoten.</param>
      <param name="refChild">Der Verweisknoten. <paramref name="newChild" /> wird vor diesem Knoten platziert.</param>
      <returns>Der Knoten, der eingefügt wird.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ des aktuellen Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
<paramref name="refChild" /> ist kein untergeordnetes Element dieses Knotens.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten schreibgeschützt ist. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Ruft das erste untergeordnete Element mit dem angegebenen <see cref="P:System.Xml.XmlNode.Name" /> ab.</summary>
      <param name="name">Der gekennzeichnete Name des abzurufenden Elements.</param>
      <returns>Das erste <see cref="T:System.Xml.XmlElement" />, das mit dem angegebenen Namen übereinstimmt. Es wird ein NULL-Verweis zurückgegeben (<see langword="Nothing" /> in Visual Basic), wenn keine Übereinstimmung vorhanden ist.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Ruft das erste untergeordnete Element mit dem angegebenen <see cref="P:System.Xml.XmlNode.LocalName" /> und dem <see cref="P:System.Xml.XmlNode.NamespaceURI" /> ab.</summary>
      <param name="localname">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI des Elements.</param>
      <returns>Das erste <see cref="T:System.Xml.XmlElement" /> mit dem passenden <paramref name="localname" /> und <paramref name="ns" />. . Es wird ein NULL-Verweis zurückgegeben (<see langword="Nothing" /> in Visual Basic), wenn keine Übereinstimmung vorhanden ist.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Ruft das letzte untergeordnete Element des Knotens ab.</summary>
      <returns>Das letzte untergeordnete Element des Knotens. Wenn kein solcher Knoten vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab, wenn er in einer abgeleiteten Klasse überschrieben wird.</summary>
      <returns>Der Name des Knotens ohne dessen Präfix. <see langword="LocalName" /> ist z. b. Book für das-Element &lt;BK: Book&gt;.
Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab:
  Typ 
  name 
  Attribut 
  Der lokale Name des Attributs.  
  
  CDATA 
  #cdata-section 
  Kommentar 
  #comment 
  Dokument 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  Der Name des Dokumenttyps.  
  
  Element 
  Der lokale Name des Elements.  
  
  Entität 
  Der Name der Entität.  
  
  EntityReference 
  Der Name der Entität, auf die verwiesen wird.  
  
  Notation 
  Der Notationsname.  
  
  ProcessingInstruction 
  Das Ziel der Verarbeitungsanweisung.  
  
  Text 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab, wenn er in einer abgeleiteten Klasse überschrieben wurde.</summary>
      <returns>Der gekennzeichnete Name des Knotens. Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab:
  Typ 
  name 
  Attribut 
  Der qualifizierte Name des Attributs.  
  
  CDATA 
  #cdata-section 
  Kommentar 
  #comment 
  Dokument 
  #document 
  DocumentFragment 
  #document-fragment 
  DocumentType 
  Der Name des Dokumenttyps.  
  
  Element 
  Der qualifizierte Name des Elements.  
  
  Entität 
  Der Name der Entität.  
  
  EntityReference 
  Der Name der Entität, auf die verwiesen wird.  
  
  Notation 
  Der Notationsname.  
  
  ProcessingInstruction 
  Das Ziel der Verarbeitungsanweisung.  
  
  Text 
  #text 
  Whitespace 
  #whitespace 
  SignificantWhitespace 
  #significant-whitespace 
  XmlDeclaration 
  #xml-declaration</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Ruft den Namespace-URI dieses Knotens ab.</summary>
      <returns>Der Namespace-URI dieses Knotens. Wenn kein Namespace-URI vorhanden ist, gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Ruft den Knoten ab, der diesem Knoten unmittelbar folgt.</summary>
      <returns>Der nächste <see langword="XmlNode" />. Wenn kein nächster Knoten vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ des aktuellen Knotens ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlNodeType" />-Werte.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Weist allen XmlText-Knoten in der Teilstruktur unterhalb dieses XmlNode eine „normale“ Form zu. In dieser werden XmlText-Knoten nur durch Markup (d. h. Tags, Kommentare, Verarbeitungsanweisungen, CDATA-Abschnitte und Entitätsverweise) getrennt, und es sind somit keine direkt aufeinander folgenden XmlText-Knoten vorhanden.</summary>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Ruft das Markup ab, das diesen Knoten und alle ihm untergeordneten Knoten enthält.</summary>
      <returns>Das Markup, das diesen Knoten und alle ihm untergeordneten Knoten enthält.
<see langword="OuterXml" /> gibt keine Standardattribute zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Ruft das <see cref="T:System.Xml.XmlDocument" /> ab, zu dem dieser Knoten gehört.</summary>
      <returns>Das <see cref="T:System.Xml.XmlDocument" />, zu dem dieser Knoten gehört.
Wenn der Knoten ein <see cref="T:System.Xml.XmlDocument" /> ist (NodeType ist gleich XmlNodeType.Document), gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab (bei Knoten, die über übergeordnete Elemente verfügen können).</summary>
      <returns>Der <see langword="XmlNode" />, der das übergeordnete Element des aktuellen Knotens ist. Wenn ein Knoten gerade erstellt, jedoch noch nicht der Struktur hinzugefügt oder aus dieser entfernt wurde, ist das übergeordnete Element <see langword="null" />. Für alle anderen Knoten hängt der zurückgegebene Wert vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab. In der folgenden Tabelle werden die möglichen Rückgabewerte für die <see langword="ParentNode" />-Eigenschaft beschrieben.
  NodeType 
  Rückgabewert von ParentNode 
  Attribute, Document, DocumentFragment, Entity, Notation 
  Gibt <see langword="null" /> zurück. Diese Knoten verfügen über keine übergeordneten Elemente.  
  
  CDATA 
  Gibt das Element oder den Entitätsverweis mit dem CDATA-Abschnitt zurück.  
  
  Kommentar 
  Gibt das Element, den Entitätsverweis, den Dokumenttyp oder das Dokument mit dem Kommentar zurück.  
  
  DocumentType 
  Gibt den Dokumentknoten zurück.  
  
  Element 
  Gibt den übergeordneten Knoten des Elements zurück. Wenn das Element der Stammknoten der Struktur ist, ist das übergeordnete Element der Dokumentknoten.  
  
  EntityReference 
  Gibt das Element, das Attribut oder den Entitätsverweis mit dem Entitätsverweis zurück.  
  
  ProcessingInstruction 
  Gibt das Dokument, das Element, den Dokumenttyp oder den Entitätsverweis mit der Verarbeitungsanweisung zurück.  
  
  Text 
  Gibt das übergeordnete Element, das Attribut oder den Entitätsverweis mit dem Textknoten zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Ruft das Namespacepräfix dieses Knotens ab oder legt dieses fest.</summary>
      <returns>Das Namespacepräfix dieses Knotens. <see langword="Prefix" /> ist beispielsweise BK für das-Element &lt;BK: Book&gt;. Wenn kein Präfix vorhanden ist, gibt diese Eigenschaft String.Empty zurück.</returns>
      <exception cref="T:System.ArgumentException">Dieser Knoten ist schreibgeschützt.</exception>
      <exception cref="T:System.Xml.XmlException">Das angegebene Präfix enthält ein ungültiges Zeichen.
Das angegebene Präfix ist falsch formatiert.
Das angegebene Präfix ist „xml“, und der namespaceURI dieses Knotens unterscheidet sich von „http://www.w3.org/XML/1998/namespace“.
Dieser Knoten ist ein Attribut, das angegebene Präfix ist „xmlns“, und der namespaceURI dieses Knotens unterscheidet von „http://www.w3.org/2000/xmlns/“.
Dieser Knoten ist ein Attribut, und der qualifiedName dieses Knotens ist "xmlns".</exception>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Fügt den angegebenen Knoten am Anfang der Liste der untergeordneten Knoten dieses Knotens hinzu.</summary>
      <param name="newChild">Der hinzuzufügende Knoten. Der gesamte Inhalt des hinzuzufügenden Knotens wird an den angegebenen Speicherort verschoben.</param>
      <returns>Der hinzugefügte Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Ruft den Knoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Der vorausgehende <see langword="XmlNode" />. Wenn kein vorausgehender Knoten vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary>Ruft den Textknoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Gibt <see cref="T:System.Xml.XmlNode" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Entfernt alle untergeordneten Knoten bzw. Attribute des aktuellen Knotens.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Entfernt den angegebenen untergeordneten Knoten.</summary>
      <param name="oldChild">Der Knoten, der entfernt wird.</param>
      <returns>Der entfernte Knoten.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> ist kein untergeordnetes Element dieses Knotens. Oder dieser Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Ersetzt den untergeordneten <paramref name="oldChild" />-Knoten durch den <paramref name="newChild" />-Knoten.</summary>
      <param name="newChild">Der neue Knoten, der in die Liste der untergeordneten Elemente eingefügt werden soll.</param>
      <param name="oldChild">Der Knoten, der in der Liste ersetzt wird.</param>
      <returns>Der ersetzte Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Der Typ dieses Knotens lässt keine untergeordneten Knoten vom Typ des <paramref name="newChild" />-Knotens zu.
<paramref name="newChild" /> ist eine frühere Version dieses Knotens.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> wurde nicht aus dem Dokument erstellt, aus dem dieser Knoten erstellt wurde.
Dieser Knoten ist schreibgeschützt.
<paramref name="oldChild" /> ist kein untergeordnetes Element dieses Knotens.</exception>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Ruft das Post-Schema-Validation-Infoset ab, das diesem Knoten als Ergebnis der Schemavalidierung zugewiesen wurde.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das das Post-Schema-Validation-Infoset dieses Knotens enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Wählt eine Liste von Knoten aus, die mit dem XPath-Ausdruck übereinstimmen.</summary>
      <param name="xpath">Der XPath-Ausdruck.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Auflistung der Knoten, die mit der XPath-Abfrage übereinstimmen.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck enthält ein Präfix. Siehe XPath-Beispiele.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Wählt eine Liste von Knoten aus, die mit dem XPath-Ausdruck übereinstimmen. Sämtliche im XPath-Ausdruck vorhandenen Präfixe werden mit dem angegebenen <see cref="T:System.Xml.XmlNamespaceManager" /> aufgelöst.</summary>
      <param name="xpath">Der XPath-Ausdruck. Siehe XPath-Beispiele.</param>
      <param name="nsmgr">Ein <see cref="T:System.Xml.XmlNamespaceManager" /> zum Auflösen von Namespaces für Präfixe im XPath-Ausdruck.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNodeList" /> mit einer Auflistung der Knoten, die mit der XPath-Abfrage übereinstimmen.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck enthält ein Präfix, das im <see langword="XmlNamespaceManager" /> nicht definiert ist.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Wählt den ersten <see langword="XmlNode" /> aus, der mit dem XPath-Ausdruck übereinstimmt.</summary>
      <param name="xpath">Der XPath-Ausdruck. Siehe XPath-Beispiele.</param>
      <returns>Der erste <see langword="XmlNode" />, der mit der XPath-Abfrage übereinstimmt, oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck enthält ein Präfix.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Wählt den ersten <see langword="XmlNode" /> aus, der mit dem XPath-Ausdruck übereinstimmt. Sämtliche im XPath-Ausdruck vorhandenen Präfixe werden mit dem angegebenen <see cref="T:System.Xml.XmlNamespaceManager" /> aufgelöst.</summary>
      <param name="xpath">Der XPath-Ausdruck. Siehe XPath-Beispiele.</param>
      <param name="nsmgr">Ein <see cref="T:System.Xml.XmlNamespaceManager" /> zum Auflösen von Namespaces für Präfixe im XPath-Ausdruck.</param>
      <returns>Der erste <see langword="XmlNode" />, der mit der XPath-Abfrage übereinstimmt, oder <see langword="null" />, wenn kein übereinstimmender Knoten gefunden wurde.</returns>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck enthält ein Präfix, das im <see langword="XmlNamespaceManager" /> nicht definiert ist.</exception>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Überprüft, ob die DOM-Implementierung ein bestimmtes Funktion implementiert.</summary>
      <param name="feature">Der Paketname des zu testenden Features. Bei diesem Namen wird die Groß- und Kleinschreibung nicht berücksichtigt.</param>
      <param name="version">Die Versionsnummer des zu testenden Paketnamens. Wenn die Version nicht angegeben ist (NULL) und jede Version der Funktion unterstützt wird, gibt die Methode True zurück.</param>
      <returns>
        <see langword="true" />, wenn das Feature in der angegebenen Version implementiert ist, andernfalls <see langword="false" />. In der folgenden Tabelle werden die Kombinationen beschrieben, bei denen <see langword="true" /> zurückgegeben wird.
 Feature 
 Version 
 XML 
 1.0 
 XML 
 2.0</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Ein Enumerator für die Auflistung.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Eine Kopie des Knotens, von dem der Aufruf erfolgt ist.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab:
  Typ 
  Wert 
  Attribut 
  Der Wert des Attributs.  
  
  CDATASection 
  Der Inhalt des CDATA-Abschnitts.  
  
  Kommentar 
  Der Inhalt des Kommentars.  
  
  Dokument 
 <see langword="null" />.  
  
  DocumentFragment 
 <see langword="null" />.  
  
  DocumentType 
 <see langword="null" />.  
  
  Element 
 <see langword="null" />. Sie können mit der <see cref="P:System.Xml.XmlElement.InnerText" />-Eigenschaft oder der <see cref="P:System.Xml.XmlElement.InnerXml" />-Eigenschaft auf den Wert des Elementknotens zugreifen.  
  
  Entität 
 <see langword="null" />.  
  
  EntityReference 
 <see langword="null" />.  
  
  Notation 
 <see langword="null" />.  
  
  ProcessingInstruction 
  Der gesamte Inhalt mit Ausnahme des Ziels.  
  
  Text 
  Der Inhalt des Textknotens.  
  
  SignificantWhitespace 
  Die Leerraumzeichen. Leerraum kann aus einem oder mehreren Leerzeichen, Wagenrückläufen, Zeilenvorschüben und Tabstopps bestehen.  
  
  Whitespace 
  Die Leerraumzeichen. Leerraum kann aus einem oder mehreren Leerzeichen, Wagenrückläufen, Zeilenvorschüben und Tabstopps bestehen.  
  
  XmlDeclaration 
  Der Inhalt der Deklaration (d. h. alles zwischen &lt;? XML und?&gt;).</returns>
      <exception cref="T:System.ArgumentException">Festlegen des Werts eines schreibgeschützten Knotens.</exception>
      <exception cref="T:System.InvalidOperationException">Festlegen des Werts eines Knotens, der normalerweise keinen Wert besitzt (z. B. ein Elementknoten).</exception>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert beim Überschreiben in einer abgeleiteten Klasse sämtliche untergeordneten Knoten des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert beim Überschreiben in einer abgeleiteten Klasse den aktuellen Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Gibt den Typ der Knotenänderung an.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>Ein Knotenwert wird geändert.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>In die Struktur wird ein Knoten eingefügt.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>Aus der Struktur wird ein Knoten entfernt.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Xml.XmlDocument.NodeChanged" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeChanging" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeInserted" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeInserting" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeRemoved" />-Ereignis und das <see cref="E:System.Xml.XmlDocument.NodeRemoving" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlNodeChangedEventArgs" />-Klasse.</summary>
      <param name="node">Das <see cref="T:System.Xml.XmlNode" />, das das Ereignis generiert hat.</param>
      <param name="oldParent">Der alte übergeordnete <see cref="T:System.Xml.XmlNode" /> des <see cref="T:System.Xml.XmlNode" />, der das Ereignis generiert hat.</param>
      <param name="newParent">Der neue übergeordnete <see cref="T:System.Xml.XmlNode" /> des <see cref="T:System.Xml.XmlNode" />, der das Ereignis generiert hat.</param>
      <param name="oldValue">Der alte Wert des <see cref="T:System.Xml.XmlNode" />, der das Ereignis generiert hat.</param>
      <param name="newValue">Der neue Wert des <see cref="T:System.Xml.XmlNode" />, der das Ereignis generiert hat.</param>
      <param name="action">Die <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Ruft einen Wert ab, der angibt, welcher Typ von Knotenänderungsereignis eintritt.</summary>
      <returns>Einer der Enumerationswerte, der das Knoten Änderungs Ereignis beschreibt. Beim <see langword="Action" />-Wert wird der Zeitpunkt des Ereignisses (vor oder nach) nicht berücksichtigt. Um beide Instanzen zu behandeln, können Sie separate Ereignishandler erstellen.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Ruft nach Abschluss des Vorgangs den Wert des <see cref="P:System.Xml.XmlNode.ParentNode" /> ab.</summary>
      <returns>Der Wert des <see langword="ParentNode" /> nach Abschluss des Vorgangs. Wenn der Knoten entfernt wird, gibt diese Eigenschaft <see langword="null" /> zurück.

Für Attributknoten gibt diese Eigenschaft das <see cref="P:System.Xml.XmlAttribute.OwnerElement" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Ruft den neuen Wert des Knotens ab.</summary>
      <returns>Der neue Wert des Knotens. Diese Eigenschaft gibt <see langword="null" /> zurück, wenn der Knoten kein ein Attribut und kein Textknoten ist oder der Knoten entfernt wird.
Bei einem Aufruf im <see cref="E:System.Xml.XmlDocument.NodeChanging" />-Ereignis gibt <see langword="NewValue" /> den Wert des Knotens zurück, wenn die Änderung erfolgreich ist. Bei einem Aufruf im <see cref="E:System.Xml.XmlDocument.NodeChanged" />-Ereignis gibt <see langword="NewValue" /> den aktuellen Wert des Knotens zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Ruft den <see cref="T:System.Xml.XmlNode" /> ab, der hinzugefügt, entfernt oder geändert wird.</summary>
      <returns>Der <see langword="XmlNode" />, der hinzugefügt, entfernt oder geändert wird. Diese Eigenschaft gibt niemals <see langword="null" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Ruft den Wert des <see cref="P:System.Xml.XmlNode.ParentNode" /> vor Beginn des Vorgangs ab.</summary>
      <returns>Der Wert des <see langword="ParentNode" /> vor Beginn des Vorgangs. Wenn für den Knoten kein übergeordnetes Element vorhanden war, gibt diese Eigenschaft <see langword="null" /> zurück.

Für Attributknoten gibt diese Eigenschaft das <see cref="P:System.Xml.XmlAttribute.OwnerElement" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Ruft den ursprünglichen Wert des Knotens ab.</summary>
      <returns>Der ursprüngliche Wert des Knotens. Diese Eigenschaft gibt <see langword="null" /> zurück, wenn der Knoten kein ein Attribut und kein Textknoten ist oder der Knoten eingefügt wird.
Bei einem Aufruf im <see cref="E:System.Xml.XmlDocument.NodeChanging" />-Ereignis gibt <see langword="OldValue" /> den aktuellen Wert des Knotens zurück, der ersetzt wird, wenn die Änderung erfolgreich ist. Bei einem Aufruf im <see cref="E:System.Xml.XmlDocument.NodeChanged" />-Ereignis gibt <see langword="OldValue" /> den Wert des Knotens vor der Änderung zurück.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Stellt die Methode dar, die das <see cref="E:System.Xml.XmlDocument.NodeChanged" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeChanging" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeInserted" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeInserting" />-Ereignis, das <see cref="E:System.Xml.XmlDocument.NodeRemoved" />-Ereignis und das <see cref="E:System.Xml.XmlDocument.NodeRemoving" />-Ereignis behandelt.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Eine Instanz von <see cref="T:System.Xml.XmlNodeChangedEventArgs" />, die die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Stellt eine geordnete Auflistung von Knoten dar.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlNodeList" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Ruft die Anzahl der Knoten im <see langword="XmlNodeList" />-Objekt ab.</summary>
      <returns>Die Anzahl der Knoten im <see langword="XmlNodeList" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Ruft einen Enumerator ab, der die Knotenauflistung durchläuft.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Knotensammlung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Ruft einen Knoten am angegebenen Index ab.</summary>
      <param name="index">Nullbasierter Index für die Liste der Knoten.</param>
      <returns>Das <see cref="T:System.Xml.XmlNode" /> mit dem angegebenen Index in der Auflistung. Wenn <paramref name="index" /> größer oder gleich der Anzahl der Knoten in der Liste ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Ruft einen Knoten am angegebenen Index ab.</summary>
      <param name="i">Nullbasierter Index für die Liste der Knoten.</param>
      <returns>Das <see cref="T:System.Xml.XmlNode" /> mit dem angegebenen Index in der Auflistung. Wenn der Index größer oder gleich der Anzahl der Knoten in der Liste ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary>Gibt Ressourcen in der Knotenliste privat frei.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary>Gibt alle von der <see cref="T:System.Xml.XmlNodeList" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Beschreibt die Dokumentreihenfolge eines Knotens im Vergleich zu einem anderen Knoten.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>Der aktuelle Knoten dieses Navigators liegt hinter dem aktuellen Knoten des bereitgestellten Navigators.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>Der aktuelle Knoten dieses Navigators liegt vor dem aktuellen Knoten des bereitgestellten Navigators.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>Die beiden Navigatoren sind auf demselben Knoten positioniert.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>Die Positionen der Knoten können nicht in der Dokumentreihenfolge relativ zueinander bestimmt werden. Dieser Fall kann auftreten, wenn sich die beiden Knoten in unterschiedlichen Strukturen befinden.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Stellt einen Reader dar, der schnellen, nicht zwischengespeicherten Vorwärtszugriff auf XML-Daten in einem <see cref="T:System.Xml.XmlNode" /> bietet.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Erstellt mithilfe des angegebenen <see cref="T:System.Xml.XmlNode" /> eine Instanz der <see langword="XmlNodeReader" />-Klasse.</summary>
      <param name="node">Der zu lesende <see langword="XmlNode" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Ruft die Anzahl der Attribute im aktuellen Knoten ab.</summary>
      <returns>Die Anzahl der Attribute im aktuellen Knoten. Hierzu zählen auch Standardattribute.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Ruft den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Basis-URI des aktuellen Knotens.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlNodeReader" /> die Methoden für das Lesen von Inhalt im Binärformat implementiert.</summary>
      <returns>
        <see langword="true" />, wenn die Methoden für das Lesen von Inhalt im Binärformat implementiert werden, andernfalls <see langword="false" />. <see cref="T:System.Xml.XmlNodeReader" /> gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Reader Entitäten analysieren und auflösen kann.</summary>
      <returns>
        <see langword="true" />, wenn der Reader Entitäten analysieren und auflösen kann, andernfalls <see langword="false" />. <see langword="XmlNodeReader" /> gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Ändert den <see cref="P:System.Xml.XmlNodeReader.ReadState" /> in <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Ruft die Tiefe des aktuellen Knotens im XML-Dokument ab.</summary>
      <returns>Die Tiefe des aktuellen Knotens im XML-Dokument.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Ruft einen Wert ab, der angibt, ob sich der Reader am Ende des Streams befindet.</summary>
      <returns>
        <see langword="true" />, wenn der Reader am Ende des Streams positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Index ab.</summary>
      <param name="attributeIndex">Der Index des Attributs. Der Index ist nullbasiert. (Das erste Attribut hat den Index 0.)</param>
      <returns>Der Wert des angegebenen Attributs.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Namen ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI ab.</summary>
      <param name="name">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten über Attribute verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über Attribute verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten einen <see cref="P:System.Xml.XmlNodeReader.Value" /> aufweisen darf.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten, auf dem der Reader derzeit positioniert ist, einen <see langword="Value" /> aufweisen darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein Attribut ist, das aus dem in der DTD (Dokumenttypdefinition) oder im Schema definierten Standardwert generiert wurde.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Attribut ist, dessen Wert aus dem in der DTD oder dem Schema definierten Standardwert generiert wurde. <see langword="false" />, wenn der Attributwert explizit festgelegt wurde.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein leeres Element ist (z.B. <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />,<see cref="P:System.Xml.XmlNodeReader.NodeType" /><c>/ &gt;</c><see langword="XmlNodeType.Element" />wenn der aktuelle Knoten ein Element ist (ist gleich) und mit endet, andernfalls. <see langword="false" /></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Ruft den lokalen Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name des aktuellen Knotens ohne das Präfix. Beispielsweise <see langword="LocalName" /> ist <see langword="book" /> für das-Element <c>&lt;BK: Book&gt;</c>.
Bei unbenannten Knotentypen wie <see langword="Text" />, <see langword="Comment" /> usw. gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Löst ein Namespacepräfix im Gültigkeitsbereich des aktuellen Elements auf.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu erhalten, übergeben Sie eine leere Zeichenfolge. Diese Zeichenfolge muss nicht atomisiert werden.</param>
      <returns>Der Namespace-URI, dem das Präfix zugeordnet ist, oder <see langword="null" />, wenn kein entsprechendes Präfix gefunden wird.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Wechselt zum Attribut mit dem angegebenen Index.</summary>
      <param name="attributeIndex">Der Index des Attributs.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Wechselt zum Attribut mit dem angegebenen Namen.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Wechselt zu dem Attribut mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="name">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Wechselt zu dem Element, das den aktuellen Attributknoten enthält.</summary>
      <returns>
        <see langword="true" />, wenn der Reader auf einem Attribut positioniert ist (der Reader wechselt zu dem Element, das das Attribut besitzt); <see langword="false" />, wenn der Reader nicht auf einem Attribut positioniert ist (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Wechselt zum ersten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein Attribut vorhanden ist (der Reader wechselt zum ersten Attribut), andernfalls <see langword="false" /> (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Wechselt zum nächsten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein nächstes Attribut vorhanden ist; <see langword="false" />, wenn keine weiteren Attribute vorhanden sind.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Ruft den gekennzeichneten Namen des aktuellen Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des aktuellen Knotens. Beispielsweise <see langword="Name" /> ist <see langword="bk:book" /> für das-Element <c>&lt;BK: Book&gt;</c>.
Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlNodeReader.NodeType" /> des Knotens ab. Die folgenden Knotentypen geben die jeweils aufgeführten Werte zurück. Alle anderen Knotentypen geben eine leere Zeichenfolge zurück.
  Knotentyp 
  name 
 <see langword="Attribute" /> Der Name des Attributs.  
  
 <see langword="DocumentType" /> Der Name des Dokumenttyps.  
  
 <see langword="Element" /> Der Tagname.  
  
 <see langword="EntityReference" /> Der Name der Entität, auf die verwiesen wird.  
  
 <see langword="ProcessingInstruction" /> Das Ziel der Verarbeitungsanweisung.  
  
 <see langword="XmlDeclaration" /> Das <see langword="xml" />-Zeichenfolgenliteral.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Ruft den Namespace-URI (entsprechend der Definition in der Namespacespezifikation des W3C) des Knotens ab, auf dem der Reader positioniert ist.</summary>
      <returns>Der Namespace-URI des aktuellen Knotens, andernfalls eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Ruft die <see cref="T:System.Xml.XmlNameTable" /> ab, die dieser Implementierung zugeordnet ist.</summary>
      <returns>Die <see langword="XmlNameTable" />, die das Abrufen der atomisierten Version einer Zeichenfolge innerhalb des Knotens erlaubt.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlNodeType" />-Werte, der den Typ des aktuellen Knotens darstellt.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Ruft das dem aktuellen Knoten zugeordnete Namespacepräfix ab.</summary>
      <returns>Das dem aktuellen Knoten zugeordnete Namespacepräfix.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Liest den nächsten Knoten aus dem Stream.</summary>
      <returns>
        <see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, <see langword="false" />, wenn keine weiteren zu lesenden Knoten vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Löst den Attributwert in einen oder mehrere <see langword="Text" />-, <see langword="EntityReference" />- oder <see langword="EndEntity" />-Knoten auf.</summary>
      <returns>
        <see langword="true" />, wenn zurückzugebende Knoten vorhanden sind.
<see langword="false" />, wenn der Reader beim ersten Aufruf nicht auf einem Attributknoten positioniert ist oder alle Attributwerte gelesen wurden.
Ein leeres Attribut, z.B. <c>misc=""</c>, gibt <see langword="true" /> mit einem einzelnen Knoten mit dem Wert String.Empty zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die Base64-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die BinHex-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den Base64-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den BinHex-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Ruft den Zustand des Readers ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.ReadState" />-Werte.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Liest den Inhalt eines Element- oder Textknotens als Zeichenfolge.</summary>
      <returns>Der Inhalt des Elementknotens oder eines Knotens mit Text. Hierzu können CDATA-Knoten, Textknoten usw. gehören. Dies kann eine leere Zeichenfolge sein, wenn der Reader auf einem anderen Knotentyp als einem Element- oder Textknoten positioniert ist oder wenn im aktuellen Kontext kein weiterer Textinhalt zurückgegeben werden kann.
<see langword="Note:" /> Der Textknoten kann entweder ein Elementknoten oder ein Attributtextknoten sein.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Löst den Entitätsverweis für <see langword="EntityReference" />-Knoten auf.</summary>
      <exception cref="T:System.InvalidOperationException">Der Reader ist nicht auf einem <see langword="EntityReference" />-Knoten positioniert.</exception>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Ruft die Schemainformationen ab, die dem aktuellen Knoten zugewiesen wurden.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das die Schemainformationen für den aktuellen Knoten enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Überspringt die untergeordneten Elemente des aktuellen Knotens.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">
        <see cref="T:System.Xml.XmlNamespaceScope" />-Objekt</param>
      <returns>
        <see cref="T:System.Collections.IDictionary" />-Objekt, das die Namespaces innerhalb des Bereichs enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">
        <see cref="T:System.String" />, der das Namespacepräfix enthält.</param>
      <returns>
        <see cref="T:System.String" />, der den Namespacenamen enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Ein <see cref="T:System.String" />-Objekt, das den Namespace identifiziert.</param>
      <returns>Ein <see cref="T:System.String" />-Objekt, das das Namespacepräfix enthält.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Ruft den Textwert des aktuellen Knotens ab.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlNodeReader.NodeType" /> des Knotens ab. In der folgenden Tabelle sind Knotentypen aufgeführt, die einen zurückzugebenden Wert haben. Alle anderen Knotentypen geben String.Empty zurück.
  Knotentyp 
  Wert 
 <see langword="Attribute" /> Der Wert des Attributs.  
  
 <see langword="CDATA" /> Der Inhalt des CDATA-Abschnitts.  
  
 <see langword="Comment" /> Der Inhalt des Kommentars.  
  
 <see langword="DocumentType" /> Die interne Teilmenge.  
  
 <see langword="ProcessingInstruction" /> Der gesamte Inhalt mit Ausnahme des Ziels.  
  
 <see langword="SignificantWhitespace" /> Der Leerraum zwischen Markups bei einem Modell für gemischten Inhalt.  
  
 <see langword="Text" /> Der Inhalt des Textknotens.  
  
 <see langword="Whitespace" /> Der Leerraum zwischen Markups.  
  
 <see langword="XmlDeclaration" /> Der Inhalt der Deklaration.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Ruft den aktuellen <see langword="xml:space" />-Bereich ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlSpace" />-Werte. Wenn kein <see langword="xml:space" />-Bereich vorhanden ist, wird für diese Eigenschaft standardmäßig <see langword="XmlSpace.None" /> festgelegt.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Gibt den Typ des Knotens an.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Ein Attribut (z.B. <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Ein CDATA-Abschnitt (z.B. <c>&lt;![CDATA[mein geschützter Text]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Ein Kommentar (z.B. <c>&lt;!-- mein Kommentar --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Ein Dokumentobjekt, das als Stamm der Dokumentstruktur Zugriff auf das gesamte XML-Dokument gewährt.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Ein Dokumentfragment.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Die vom folgenden Tag angegebene Dokumenttypdeklaration (z.B. <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Ein Element (z.B. <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Ein Endelementtag (z.B. <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Wird zurückgegeben, wenn <see langword="XmlReader" /> aufgrund eines Aufrufs von <see cref="M:System.Xml.XmlReader.ResolveEntity" /> das Ende der Entitätsersetzung erreicht.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Eine Entitätsdeklaration (z.B. <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Ein Verweis auf eine Entität (z.B. <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>Dies wird vom <see cref="T:System.Xml.XmlReader" /> zurückgegeben, wenn keine <see langword="Read" />-Methode aufgerufen wurde.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Eine Notation in der Dokumenttypdeklaration (z.B. <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Eine Verarbeitungsanweisung (z.B. <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Leerraum zwischen Markup in einem Modell für gemischten Inhalt oder Leerraum im <c>xml:space="preserve"</c>-Bereich.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Der Textinhalt eines Knotens.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Leerraum zwischen Markup.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Die XML-Deklaration (z.B. <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Stellt eine Notationsdeklaration dar, z.B. &lt;!NOTATION... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens. Notationsknoten können nicht geklont werden. Das Aufrufen dieser Methode für ein <see cref="T:System.Xml.XmlNotation" />-Objekt löst eine Ausnahme aus.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Eine <see cref="T:System.Xml.XmlNode" />-Kopie des Knotens, von dem die Methode aufgerufen wird.</returns>
      <exception cref="T:System.InvalidOperationException">Notationsknoten können nicht geklont werden. Das Aufrufen dieser Methode für ein <see cref="T:System.Xml.XmlNotation" />-Objekt löst eine Ausnahme aus.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Ruft das Markup ab, das die untergeordneten Elemente dieses Knotens darstellt.</summary>
      <returns>Für <see langword="XmlNotation" />-Knoten wird String.Empty zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Es wird versucht, diese Eigenschaft festzulegen.</exception>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob der Knoten schreibgeschützt ist.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten schreibgeschützt ist. <see langword="false" />andernfalls.
Da <see langword="XmlNotation" />-Knoten schreibgeschützt sind, gibt diese Eigenschaft immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Ruft den Namen des aktuellen Knotens ohne das Namespacepräfix ab.</summary>
      <returns>Für <see langword="XmlNotation" />-Knoten gibt diese Eigenschaft den Namen der Notation zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Ruft den Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name der Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Der Knotentyp. Für <see langword="XmlNotation" />-Knoten ist der Wert XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Ruft das Markup ab, das diesen Knoten und alle untergeordneten Elemente darstellt.</summary>
      <returns>Für <see langword="XmlNotation" />-Knoten wird String.Empty zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Ruft den Wert des öffentlichen Bezeichners für die Notationsdeklaration ab.</summary>
      <returns>Der öffentliche Bezeichner für die Notation. Wenn kein öffentlicher Bezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Ruft den Wert des Systembezeichners für die Notationsdeklaration ab.</summary>
      <returns>Der Systembezeichner für die Notation. Wenn kein Systembezeichner vorhanden ist, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert die untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Für <see langword="XmlNotation" />-Knoten hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />. Für <see langword="XmlNotation" />-Knoten hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Gibt die Methode zum Serialisieren der <see cref="T:System.Xml.XmlWriter" />-Ausgabe an.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>Verwenden Sie die XSLT-Regeln, um zur Laufzeit die Auswahl zwischen der <see cref="F:System.Xml.XmlOutputMethod.Xml" />-Ausgabemethode und der <see cref="F:System.Xml.XmlOutputMethod.Html" />-Ausgabemethode zu treffen.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Serialisieren Sie gemäß den von XSLT angegebenen HTML-Regeln.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Serialisieren Sie nur Textblöcke.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Serialisieren Sie gemäß den XML 1.0-Regeln.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Stellt sämtliche Kontextinformationen bereit, die von <see cref="T:System.Xml.XmlReader" /> für das Analysieren eines XML-Fragments benötigt werden.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlParserContext" />-Klasse mit den angegebenen Werten für <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, Basis-URI, <see langword="xml:lang" />, <see langword="xml:space" /> und Dokumenttyp.</summary>
      <param name="nt">Die zum Atomisieren von Zeichenfolgen zu verwendende <see cref="T:System.Xml.XmlNameTable" />. Wenn diese <see langword="null" /> ist, wird stattdessen die Namenstabelle zum Erstellen von <paramref name="nsMgr" /> verwendet. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Der <see cref="T:System.Xml.XmlNamespaceManager" />, der für die Suche nach Namespaceinformationen verwendet werden soll, oder <see langword="null" />.</param>
      <param name="docTypeName">Der Name der Dokumenttypdeklaration.</param>
      <param name="pubId">Der öffentliche Bezeichner.</param>
      <param name="sysId">Der Systembezeichner.</param>
      <param name="internalSubset">Die Teilmenge der internen DTD. Die DTD-Teilmenge wird für die Entitätsauflösung verwendet, nicht für die Dokumentvalidierung.</param>
      <param name="baseURI">Der Basis-URI für das XML-Fragment (der Speicherort, aus dem das Fragment geladen wurde).</param>
      <param name="xmlLang">Der <see langword="xml:lang" />-Bereich.</param>
      <param name="xmlSpace">Ein <see cref="T:System.Xml.XmlSpace" />-Wert, der den <see langword="xml:space" />-Bereich angibt.</param>
      <exception cref="T:System.Xml.XmlException">Bei <paramref name="nt" /> handelt es sich nicht um die gleiche <see langword="XmlNameTable" />, die zum Erstellen von <paramref name="nsMgr" /> verwendet wird.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlParserContext" />-Klasse mit den angegebenen Werten für <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, Basis-URI, <see langword="xml:lang" />, <see langword="xml:space" />, Codierung und Dokumenttyp.</summary>
      <param name="nt">Die zum Atomisieren von Zeichenfolgen zu verwendende <see cref="T:System.Xml.XmlNameTable" />. Wenn diese <see langword="null" /> ist, wird stattdessen die Namenstabelle zum Erstellen von <paramref name="nsMgr" /> verwendet. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Der <see cref="T:System.Xml.XmlNamespaceManager" />, der für die Suche nach Namespaceinformationen verwendet werden soll, oder <see langword="null" />.</param>
      <param name="docTypeName">Der Name der Dokumenttypdeklaration.</param>
      <param name="pubId">Der öffentliche Bezeichner.</param>
      <param name="sysId">Der Systembezeichner.</param>
      <param name="internalSubset">Die Teilmenge der internen DTD. Die DTD wird für die Entitätsauflösung verwendet, nicht für die Dokumentvalidierung.</param>
      <param name="baseURI">Der Basis-URI für das XML-Fragment (der Speicherort, aus dem das Fragment geladen wurde).</param>
      <param name="xmlLang">Der <see langword="xml:lang" />-Bereich.</param>
      <param name="xmlSpace">Ein <see cref="T:System.Xml.XmlSpace" />-Wert, der den <see langword="xml:space" />-Bereich angibt.</param>
      <param name="enc">Ein <see cref="T:System.Text.Encoding" />-Objekt, das die Codierungseinstellung angibt.</param>
      <exception cref="T:System.Xml.XmlException">Bei <paramref name="nt" /> handelt es sich nicht um die gleiche <see langword="XmlNameTable" />, die zum Erstellen von <paramref name="nsMgr" /> verwendet wird.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlParserContext" />-Klasse mit den angegebenen Werten für <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> und <see langword="xml:space" />.</summary>
      <param name="nt">Die zum Atomisieren von Zeichenfolgen zu verwendende <see cref="T:System.Xml.XmlNameTable" />. Wenn diese <see langword="null" /> ist, wird stattdessen die Namenstabelle zum Erstellen von <paramref name="nsMgr" /> verwendet. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Der <see cref="T:System.Xml.XmlNamespaceManager" />, der für die Suche nach Namespaceinformationen verwendet werden soll, oder <see langword="null" />.</param>
      <param name="xmlLang">Der <see langword="xml:lang" />-Bereich.</param>
      <param name="xmlSpace">Ein <see cref="T:System.Xml.XmlSpace" />-Wert, der den <see langword="xml:space" />-Bereich angibt.</param>
      <exception cref="T:System.Xml.XmlException">Bei <paramref name="nt" /> handelt es sich nicht um die gleiche <see langword="XmlNameTable" />, die zum Erstellen von <paramref name="nsMgr" /> verwendet wird.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlParserContext" />-Klasse mit den angegebenen Werten für <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" />, <see langword="xml:space" /> sowie Codierung.</summary>
      <param name="nt">Die zum Atomisieren von Zeichenfolgen zu verwendende <see cref="T:System.Xml.XmlNameTable" />. Wenn diese <see langword="null" /> ist, wird stattdessen die Namenstabelle zum Erstellen von <paramref name="nsMgr" /> verwendet. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">Der <see cref="T:System.Xml.XmlNamespaceManager" />, der für die Suche nach Namespaceinformationen verwendet werden soll, oder <see langword="null" />.</param>
      <param name="xmlLang">Der <see langword="xml:lang" />-Bereich.</param>
      <param name="xmlSpace">Ein <see cref="T:System.Xml.XmlSpace" />-Wert, der den <see langword="xml:space" />-Bereich angibt.</param>
      <param name="enc">Ein <see cref="T:System.Text.Encoding" />-Objekt, das die Codierungseinstellung angibt.</param>
      <exception cref="T:System.Xml.XmlException">Bei <paramref name="nt" /> handelt es sich nicht um die gleiche <see langword="XmlNameTable" />, die zum Erstellen von <paramref name="nsMgr" /> verwendet wird.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Ruft den Basis-URI ab oder legt diesen fest.</summary>
      <returns>Der Basis-URI, der zum Auflösen der DTD-Datei verwendet werden soll.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Ruft den Namen der Dokumenttypdeklaration ab oder legt diesen fest.</summary>
      <returns>Der Name der Dokumenttypdeklaration.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Ruft den Codierungstyp ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Text.Encoding" />-Objekt, das den Codierungstyp angibt.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Ruft die Teilmenge der internen DTD ab oder legt diese fest.</summary>
      <returns>Die Teilmenge der internen DTD. Diese Eigenschaft gibt beispielsweise alles zwischen den eckigen Klammern <c>&lt;zurück. DOCTYPE doc [...] &gt;</c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Ruft den <see cref="T:System.Xml.XmlNamespaceManager" /> ab oder legt diesen fest.</summary>
      <returns>Die <see langword="XmlNamespaceManager" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Ruft die zum Atomisieren von Zeichenfolgen verwendete <see cref="T:System.Xml.XmlNameTable" /> ab. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>Die <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Ruft den öffentlichen Bezeichner ab oder legt diesen fest.</summary>
      <returns>Der öffentliche Bezeichner.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Ruft den Systembezeichner ab oder legt diesen fest.</summary>
      <returns>Der Systembezeichner.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Ruft den aktuellen <see langword="xml:lang" />-Bereich ab oder legt diesen fest.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich. Wenn <see langword="xml:lang" /> im Gültigkeitsbereich nicht vorhanden ist, wird <see langword="String.Empty" /> zurückgegeben.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Ruft den aktuellen <see langword="xml:space" />-Bereich ab oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlSpace" />-Wert, der den <see langword="xml:space" />-Bereich angibt.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Stellt eine Verarbeitungsanweisung dar, die in XML definiert wird, um prozessorspezifische Informationen im Text des Dokuments beizubehalten.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlProcessingInstruction" />-Klasse.</summary>
      <param name="target">Das Ziel der Verarbeitungsanweisung. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlProcessingInstruction.Target" />-Eigenschaft.</param>
      <param name="data">Der Inhalt der Anweisung. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlProcessingInstruction.Data" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Das Knotenduplikat.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Ruft den Inhalt der Verarbeitungsanweisung ohne das Ziel ab oder legt diesen fest.</summary>
      <returns>Der Inhalt der Verarbeitungsanweisung ohne das Ziel.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Ruft die verketteten Werte des Knotens und sämtlicher diesem untergeordneten Elemente ab oder legt diese fest.</summary>
      <returns>Die verketteten Werte des Knotens und aller diesem untergeordneten Elemente.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Bei Verarbeitungsanweisungsknoten gibt diese Eigenschaft das Ziel der Verarbeitungsanweisung zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Bei Verarbeitungsanweisungsknoten gibt diese Eigenschaft das Ziel der Verarbeitungsanweisung zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für <see langword="XmlProcessingInstruction" />-Knoten ist dieser Wert XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Ruft das Ziel der Verarbeitungsanweisung ab.</summary>
      <returns>Das Ziel der Verarbeitungsanweisung.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der gesamte Inhalt der Verarbeitungsanweisung ohne das Ziel.</returns>
      <exception cref="T:System.ArgumentException">Der Knoten ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Da ProcessingInstruction-Knoten über keine untergeordneten Elemente verfügen, hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Stellt einen XML-gekennzeichneten Namen dar.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlQualifiedName" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlQualifiedName" />-Klasse mit dem angegebenen Namen.</summary>
      <param name="name">Der als Name für das <see cref="T:System.Xml.XmlQualifiedName" />-Objekt zu verwendende lokale Name.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlQualifiedName" />-Klasse mit dem angegebenen Namen und Namespace.</summary>
      <param name="name">Der als Name für das <see cref="T:System.Xml.XmlQualifiedName" />-Objekt zu verwendende lokale Name.</param>
      <param name="ns">Der Namespace für das <see cref="T:System.Xml.XmlQualifiedName" />-Objekt.</param>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Stellt einen leeren <see cref="T:System.Xml.XmlQualifiedName" /> bereit.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Bestimmt, ob das angegebene <see cref="T:System.Xml.XmlQualifiedName" />-Objekt mit dem aktuellen <see cref="T:System.Xml.XmlQualifiedName" />-Objekt identisch ist.</summary>
      <param name="other">Der zu vergleichende <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" />, wenn beide dieselbe Objektinstanz sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Gibt den Hashcode für den <see cref="T:System.Xml.XmlQualifiedName" /> zurück.</summary>
      <returns>Ein Hashcode für dieses Objekt.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Ruft einen Wert ab, der angibt, ob <see cref="T:System.Xml.XmlQualifiedName" /> leer ist.</summary>
      <returns>
        <see langword="true" />, wenn Name und Namespace leere Zeichenfolgen sind, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Ruft eine Zeichenfolgendarstellung für den qualifizierten Namen des <see cref="T:System.Xml.XmlQualifiedName" /> ab.</summary>
      <returns>Eine Zeichenfolgendarstellung des gekennzeichneten Namens oder String.Empty, wenn kein Name für das Objekt definiert ist.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Ruft eine Zeichenfolgendarstellung für den Namespaces des <see cref="T:System.Xml.XmlQualifiedName" /> ab.</summary>
      <returns>Eine Zeichenfolgendarstellung für den Namespace oder String.Empty, wenn kein Namespace für das Objekt definiert ist.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Vergleicht zwei <see cref="T:System.Xml.XmlQualifiedName" />-Objekte.</summary>
      <param name="a">Ein zu vergleichender <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="b">Ein zu vergleichender <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" />, wenn beide Objekte dieselben Werte für Name und Namespace aufweisen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Vergleicht zwei <see cref="T:System.Xml.XmlQualifiedName" />-Objekte.</summary>
      <param name="a">Ein zu vergleichender <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="b">Ein zu vergleichender <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" />, wenn die beiden Objekte unterschiedliche Werte für Name und Namespace aufweisen, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Gibt den Zeichenfolgenwert von <see cref="T:System.Xml.XmlQualifiedName" /> zurück.</summary>
      <returns>Der Zeichenfolgenwert von <see cref="T:System.Xml.XmlQualifiedName" /> im Format <see langword="namespace:localname" />. Wenn für das Objekt kein Namespace definiert ist, gibt diese Methode nur den lokalen Namen zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Gibt den Zeichenfolgenwert von <see cref="T:System.Xml.XmlQualifiedName" /> zurück.</summary>
      <param name="name">Der Name des Objekts.</param>
      <param name="ns">Der Namespace des Objekts.</param>
      <returns>Der Zeichenfolgenwert von <see cref="T:System.Xml.XmlQualifiedName" /> im Format <see langword="namespace:localname" />. Wenn für das Objekt kein Namespace definiert ist, gibt diese Methode nur den lokalen Namen zurück.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Stellt einen Reader dar, der einen schnellen Zugriff auf XML-Daten bietet, ohne Zwischenspeicher und welcher nur vorwärts möglich ist.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlReader" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Anzahl der Attribute für den aktuellen Knoten ab.</summary>
      <returns>Die Anzahl der Attribute im aktuellen Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Basis-URI des aktuellen Knotens.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlReader" /> die Methoden für das Lesen von Inhalt im Binärformat implementiert.</summary>
      <returns>
        <see langword="true" />, wenn die Methoden für das Lesen von Inhalt im Binärformat implementiert werden, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlReader" /> die angegebene <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />-Methode implementiert.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XmlReader" /> die <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />-Methode implementiert, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Reader Entitäten analysieren und auflösen kann.</summary>
      <returns>
        <see langword="true" />, wenn der Reader Entitäten analysieren und auflösen kann, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>Ändert beim Überschreiben in einer abgeleiteten Klassen den <see cref="P:System.Xml.XmlReader.ReadState" /> in <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Erstellt mit dem angegebenen Stream mit den Standardeinstellungen eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Stream, der die XML-Daten enthält.
Der <see cref="T:System.Xml.XmlReader" /> überprüft die ersten Bytes des Streams und durchsucht sie nach einer Bytereihenfolgemarkierung oder einem anderen Codierungszeichen. Nachdem die Codierung bestimmt wurde, wird sie zum weiteren Lesen des Streams verwendet, und die Eingabe wird weiterhin als Stream von (Unicode-)Zeichen analysiert.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der <see cref="T:System.Xml.XmlReader" /> besitzt keine ausreichenden Berechtigungen für den Zugriff auf den Speicherort der XML-Daten.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlReader" />-Instanz mit dem angegebenen Stream und den angegebenen Einstellungen.</summary>
      <param name="input">Der Stream, der die XML-Daten enthält.
Der <see cref="T:System.Xml.XmlReader" /> überprüft die ersten Bytes des Streams und durchsucht sie nach einer Bytereihenfolgemarkierung oder einem anderen Codierungszeichen. Nachdem die Codierung bestimmt wurde, wird sie zum weiteren Lesen des Streams verwendet, und die Eingabe wird weiterhin als Stream von (Unicode-)Zeichen analysiert.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Erstellt mit dem angegebenen Stream, dem Basis-URI und den Einstellungen eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Stream, der die XML-Daten enthält.
Der <see cref="T:System.Xml.XmlReader" /> überprüft die ersten Bytes des Streams und durchsucht sie nach einer Bytereihenfolgemarkierung oder einem anderen Codierungszeichen. Nachdem die Codierung bestimmt wurde, wird sie zum weiteren Lesen des Streams verwendet, und die Eingabe wird weiterhin als Stream von (Unicode-)Zeichen analysiert.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="baseUri">Der Basis-URI der gelesenen Entität oder des gelesenen Dokuments. Dieser Wert kann <see langword="null" /> sein.
Sicherheitshinweis Der Basis-URI wird verwendet, um den relativen URI des XML-Dokuments aufzulösen. Verwenden Sie keinen Basis-URI von einer nicht vertrauenswürdigen Quelle.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Erstellt mit dem angegebenen Stream, den Einstellungen und den Kontextinformationen für Analysezwecke eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Stream, der die XML-Daten enthält.
Der <see cref="T:System.Xml.XmlReader" /> überprüft die ersten Bytes des Streams und durchsucht sie nach einer Bytereihenfolgemarkierung oder einem anderen Codierungszeichen. Nachdem die Codierung bestimmt wurde, wird sie zum weiteren Lesen des Streams verwendet, und die Eingabe wird weiterhin als Stream von (Unicode-)Zeichen analysiert.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="inputContext">Die Kontextinformationen, die zum Analysieren des XML-Fragments erforderlich sind. Die Kontextinformationen können die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, den Namespacebereich, den aktuellen <c>xml:lang</c>- und <c>xml:space</c>-Bereich, Basis-URI und Dokumenttypdefinition enthalten.
Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Erstellt mit dem angegebenen Text-Reader eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Text-Reader, aus dem die XML-Daten gelesen werden sollen. Ein Text-Reader gibt einen Stream von Unicode-Zeichen zurück, sodass die in der XML-Deklaration angegebene Codierung nicht vom XML-Reader zum Decodieren des Datenstreams verwendet wird.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Erstellt mit dem angegebenen Text-Reader und den angegebenen Einstellungen eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Text-Reader, aus dem die XML-Daten gelesen werden sollen. Ein Text-Reader gibt einen Stream von Unicode-Zeichen zurück, sodass die in der XML-Deklaration angegebene Codierung nicht vom XML-Reader zum Decodieren des Datenstreams verwendet wird.</param>
      <param name="settings">Die Einstellungen für den neuen <see cref="T:System.Xml.XmlReader" />. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Erstellt mit dem angegebenen Text-Reader, den angegebenen Einstellungen und dem angegebenen Basis-URI eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Text-Reader, aus dem die XML-Daten gelesen werden sollen. Ein Text-Reader gibt einen Stream von Unicode-Zeichen zurück, sodass die in der XML-Deklaration angegebene Codierung nicht vom <see cref="T:System.Xml.XmlReader" /> zum Decodieren des Datenstreams verwendet wird.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="baseUri">Der Basis-URI der gelesenen Entität oder des gelesenen Dokuments. Dieser Wert kann <see langword="null" /> sein.
Sicherheitshinweis Der Basis-URI wird verwendet, um den relativen URI des XML-Dokuments aufzulösen. Verwenden Sie keinen Basis-URI von einer nicht vertrauenswürdigen Quelle.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Erstellt mit dem angegebenen Text-Reader, den Einstellungen und den Kontextinformationen für Analysezwecke eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="input">Der Text-Reader, aus dem die XML-Daten gelesen werden sollen. Ein Text-Reader gibt einen Stream von Unicode-Zeichen zurück, sodass die in der XML-Deklaration angegebene Codierung nicht vom XML-Reader zum Decodieren des Datenstreams verwendet wird.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="inputContext">Die Kontextinformationen, die zum Analysieren des XML-Fragments erforderlich sind. Die Kontextinformationen können die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, den Namespacebereich, den aktuellen <c>xml:lang</c>- und <c>xml:space</c>-Bereich, Basis-URI und Dokumenttypdefinition enthalten.
Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> und die <see cref="P:System.Xml.XmlParserContext.NameTable" />-Eigenschaften enthalten Werte. (Nur eine dieser <see langword="NameTable" />-Eigenschaften kann festgelegt sein und verwendet werden.)</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlReader" />-Instanz mit angegebenem URI.</summary>
      <param name="inputUri">Der URI der Datei, die die XML-Daten enthält. Mit der <see cref="T:System.Xml.XmlUrlResolver" />-Klasse wird der Pfad in eine kanonische Datendarstellung konvertiert.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der <see cref="T:System.Xml.XmlReader" /> besitzt keine ausreichenden Berechtigungen für den Zugriff auf den Speicherort der XML-Daten.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch den URI bezeichnete Datei ist nicht vorhanden.</exception>
      <exception cref="T:System.UriFormatException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.  
  

            
  
 Das URI-Format ist falsch.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Erstellt mit dem angegebenen URI und den angegebenen Einstellungen eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="inputUri">Der URI der Datei, die die XML-Daten enthält. Das <see cref="T:System.Xml.XmlResolver" />-Objekt für das <see cref="T:System.Xml.XmlReaderSettings" />-Objekt wird zum Konvertieren des Pfads in eine kanonische Datendarstellung verwendet. Wenn <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /><see langword="null" /> ist, wird ein neues <see cref="T:System.Xml.XmlUrlResolver" />-Objekt verwendet.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch den URI angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.UriFormatException">Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.  
  

            
  
 Das URI-Format ist falsch.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Erstellt mit dem angegebenen URI, den Einstellungen und den Kontextinformationen für Analysezwecke eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="inputUri">Der URI der Datei, die die XML-Daten enthält. Das <see cref="T:System.Xml.XmlResolver" />-Objekt für das <see cref="T:System.Xml.XmlReaderSettings" />-Objekt wird zum Konvertieren des Pfads in eine kanonische Datendarstellung verwendet. Wenn <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /><see langword="null" /> ist, wird ein neues <see cref="T:System.Xml.XmlUrlResolver" />-Objekt verwendet.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="inputContext">Die Kontextinformationen, die zum Analysieren des XML-Fragments erforderlich sind. Die Kontextinformationen können die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, den Namespacebereich, den aktuellen <c>xml:lang</c>- und <c>xml:space</c>-Bereich, Basis-URI und Dokumenttypdefinition enthalten.
Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Ein Objekt, mit dem die im Stream enthaltenen XML-Daten gelesen werden.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see langword="inputUri" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der <see cref="T:System.Xml.XmlReader" /> besitzt keine ausreichenden Berechtigungen für den Zugriff auf den Speicherort der XML-Daten.</exception>
      <exception cref="T:System.ArgumentException">Die <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> und die <see cref="P:System.Xml.XmlParserContext.NameTable" />-Eigenschaften enthalten Werte. (Nur eine dieser <see langword="NameTable" />-Eigenschaften kann festgelegt sein und verwendet werden.)</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die durch den URI angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.UriFormatException">Das URI-Format ist falsch.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Erstellt mit dem angegebenen XML-Reader und den angegebenen Einstellungen eine neue <see cref="T:System.Xml.XmlReader" />-Instanz.</summary>
      <param name="reader">Das Objekt, dass Sie als zugrunde liegenden XML-Reader verwenden möchten.</param>
      <param name="settings">Die Einstellungen für die neue <see cref="T:System.Xml.XmlReader" />-Instanz.
Der Konformitätsgrad des <see cref="T:System.Xml.XmlReaderSettings" />-Objekts muss mit dem Konformitätsgrad des zugrunde liegenden Readers übereinstimmen oder auf <see cref="F:System.Xml.ConformanceLevel.Auto" /> festgelegt werden.</param>
      <returns>Ein Objekt, das das angegebene <see cref="T:System.Xml.XmlReader" />-Objekt umschließt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="reader" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Wenn das <see cref="T:System.Xml.XmlReaderSettings" />-Objekt einen Konformitätsgrad angibt, der mit dem Konformitätsgrad des zugrunde liegenden Readers nicht übereinstimmt.
- oder -
Der zugrunde liegende <see cref="T:System.Xml.XmlReader" /> befindet im Zustand <see cref="F:System.Xml.ReadState.Error" /> oder <see cref="F:System.Xml.ReadState.Closed" />.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Tiefe des aktuellen Knotens im XML-Dokument ab.</summary>
      <returns>Die Tiefe des aktuellen Knotens im XML-Dokument.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Xml.XmlReader" />-Klasse verwendeten Ressourcen frei.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Xml.XmlReader" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob sich der Reader am Ende des Streams befindet.</summary>
      <returns>
        <see langword="true" />, wenn der Reader am Ende des Streams positioniert ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen Index ab.</summary>
      <param name="i">Der Index des Attributs. Der Index ist nullbasiert. (Das erste Attribut hat den Index 0.)</param>
      <returns>Der Wert des angegebenen Attributs. Diese Methode verschiebt den Reader nicht.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> liegt außerhalb des Bereichs. Es darf nicht negativ sein und muss kleiner als die Größe der Attributauflistung sein.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen <see cref="P:System.Xml.XmlReader.Name" /> ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wird oder Wert <see langword="String.Empty" /> ist, wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen <see cref="P:System.Xml.XmlReader.LocalName" /> und <see cref="P:System.Xml.XmlReader.NamespaceURI" /> ab.</summary>
      <param name="name">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wird oder Wert <see langword="String.Empty" /> ist, wird <see langword="null" /> zurückgegeben. Diese Methode verschiebt den Reader nicht.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Ruft den Wert des aktuellen Knotens asynchron ab.</summary>
      <returns>Der Wert des aktuellen Knotens.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten über Attribute verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über Attribute verfügt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Knoten einen <see cref="P:System.Xml.XmlReader.Value" /> aufweisen kann.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten, auf dem der Reader derzeit positioniert ist, einen <see langword="Value" /> aufweisen darf, andernfalls <see langword="false" />. Wenn <see langword="false" />, weist der Knoten den Wert <see langword="String.Empty" /> auf.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Knoten ein Attribut ist, das aus dem in der DTD oder dem Schema definierten Standardwert generiert wurde.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Attribut ist, dessen Wert aus dem in der DTD oder dem Schema definierten Standardwert generiert wurde. <see langword="false" />, wenn der Attributwert explizit festgelegt wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Knoten ein leeres Element ist (z.B. <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Element ist (<see cref="P:System.Xml.XmlReader.NodeType" /> gleich <see langword="XmlNodeType.Element" />), das mit <c>/&gt;</c>endet. Andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob das Zeichenfolgenargument ein gültiger XML-Name ist.</summary>
      <param name="str">Der Name, dessen Gültigkeit validiert werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Name gültig ist, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="str" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob das Zeichenfolgenargument ein gültiges XML-Namenstoken ist.</summary>
      <param name="str">Das zu validierende Namenstoken.</param>
      <returns>
        <see langword="true" />, wenn es sich um ein gültiges Namenstoken handelt, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="str" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Ruft <see cref="M:System.Xml.XmlReader.MoveToContent" /> auf und überprüft, ob der aktuelle Inhaltsknoten ein Starttag oder ein leeres Elementtag ist.</summary>
      <returns>
        <see langword="true" />, wenn <see cref="M:System.Xml.XmlReader.MoveToContent" /> ein Starttag oder ein leeres Elementtag findet. <see langword="false" />, wenn ein anderer Knotentyp als <see langword="XmlNodeType.Element" /> gefunden wurde.</returns>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Ruft <see cref="M:System.Xml.XmlReader.MoveToContent" /> auf und überprüft, ob der aktuelle Inhaltsknoten ein Starttag oder ein leeres Elementtag ist und die <see cref="P:System.Xml.XmlReader.Name" />-Eigenschaft des gefundenen Elements mit dem angegebenen Argument übereinstimmt.</summary>
      <param name="name">Die mit der <see langword="Name" />-Eigenschaft des gefundenen Elements verglichene Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn der resultierende Knoten ein Element ist und die <see langword="Name" />-Eigenschaft mit der angegebenen Zeichenfolge übereinstimmt. <see langword="false" />, wenn ein anderer Knotentyp als <see langword="XmlNodeType.Element" /> gefunden wurde oder die <see langword="Name" />-Elementeigenschaft nicht mit der angegebenen Zeichenfolge übereinstimmt.</returns>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Ruft <see cref="M:System.Xml.XmlReader.MoveToContent" /> auf und überprüft, ob der aktuelle Inhaltsknoten ein Starttag oder ein leeres Elementtag ist und ob die <see cref="P:System.Xml.XmlReader.LocalName" />-Eigenschaft und die <see cref="P:System.Xml.XmlReader.NamespaceURI" />-Eigenschaft des gefundenen Elements mit den angegebenen Zeichenfolgen übereinstimmen.</summary>
      <param name="localname">Die mit der <see langword="LocalName" />-Eigenschaft des gefundenen Elements zu vergleichende Zeichenfolge.</param>
      <param name="ns">Die mit der <see langword="NamespaceURI" />-Eigenschaft des gefundenen Elements zu vergleichende Zeichenfolge.</param>
      <returns>
        <see langword="true" />, wenn der resultlierende Knoten ein Element ist. <see langword="false" />, wenn ein anderer Knotentyp als <see langword="XmlNodeType.Element" /> gefunden wurde oder die <see langword="LocalName" />-Eigenschaft und die <see langword="NamespaceURI" />-Eigenschaft des Elements nicht mit den angegebenen Zeichenfolgen übereinstimmen.</returns>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen Index ab.</summary>
      <param name="i">Der Index des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen <see cref="P:System.Xml.XmlReader.Name" /> ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Attributs mit dem angegebenen <see cref="P:System.Xml.XmlReader.LocalName" /> und <see cref="P:System.Xml.XmlReader.NamespaceURI" /> ab.</summary>
      <param name="name">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den lokalen Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name des aktuellen Knotens ohne das Präfix. Beispielsweise ist <see langword="LocalName" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="book" />.
Bei unbenannten Knotentypen wie <see langword="Text" />, <see langword="Comment" /> usw. gibt diese Eigenschaft <see langword="String.Empty" /> zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse ein Namespacepräfix im Gültigkeitsbereich des aktuellen Elements auf.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu erhalten, übergeben Sie eine leere Zeichenfolge.</param>
      <returns>Der Namespace-URI, dem das Präfix zugeordnet ist, oder <see langword="null" />, wenn kein entsprechendes Präfix gefunden wird.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zum Attribut mit dem angegebenen Index.</summary>
      <param name="i">Der Index des Attributs.</param>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Parameter hat einen negativen Wert.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zum Attribut mit dem angegebenen <see cref="P:System.Xml.XmlReader.Name" />.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der Parameter ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zum Attribut mit dem angegebenen <see cref="P:System.Xml.XmlReader.LocalName" /> und dem angegebenen <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</summary>
      <param name="name">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI dieses Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentNullException">Beide Parameterwerte sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Überprüft, ob der aktuelle Knoten ein Inhaltsknoten (Textknoten ohne Leerraum, <see langword="CDATA" />-, <see langword="Element" />-, <see langword="EndElement" />-, <see langword="EntityReference" />- oder <see langword="EndEntity" />-Knoten) ist. Wenn der Knoten kein Inhaltsknoten ist, springt der Reader zum nächsten Inhaltsknoten oder an das Ende der Datei. Knoten folgender Typen werden übersprungen: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> und <see langword="SignificantWhitespace" />.</summary>
      <returns>Der <see cref="P:System.Xml.XmlReader.NodeType" /> des von der Methode gefundenen aktuellen Knotens oder <see langword="XmlNodeType.None" />, wenn der Reader das Ende des Eingabestreams erreicht hat.</returns>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>Asynchrone Überprüfungen, ob der aktuelle Knoten ein Inhaltsknoten ist. Wenn der Knoten kein Inhaltsknoten ist, springt der Reader zum nächsten Inhaltsknoten oder an das Ende der Datei.</summary>
      <returns>Der <see cref="P:System.Xml.XmlReader.NodeType" /> des von der Methode gefundenen aktuellen Knotens oder <see langword="XmlNodeType.None" />, wenn der Reader das Ende des Eingabestreams erreicht hat.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zu dem Element, das den aktuellen Attributknoten enthält.</summary>
      <returns>
        <see langword="true" />, wenn der Reader auf einem Attribut positioniert ist (der Reader wechselt zu dem Element, das das Attribut besitzt); <see langword="false" />, wenn der Reader nicht auf einem Attribut positioniert ist (die Position des Readers bleibt unverändert).</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zum ersten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein Attribut vorhanden ist (der Reader wechselt zum ersten Attribut), andernfalls <see langword="false" /> (die Position des Readers bleibt unverändert).</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>Wechselt beim Überschreiben in einer abgeleiteten Klasse zum nächsten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein nächstes Attribut vorhanden ist; <see langword="false" />, wenn keine weiteren Attribute vorhanden sind.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den qualifizierten Namen des aktuellen Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des aktuellen Knotens. Beispielsweise ist <see langword="Name" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="bk:book" />.
Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlReader.NodeType" /> des Knotens ab. Die folgenden Knotentypen geben die jeweils aufgeführten Werte zurück. Alle anderen Knotentypen geben eine leere Zeichenfolge zurück.
  Knotentyp 
  name 
 <see langword="Attribute" /> Der Name des Attributs.  
  
 <see langword="DocumentType" /> Der Name des Dokumenttyps.  
  
 <see langword="Element" /> Der Tagname.  
  
 <see langword="EntityReference" /> Der Name der Entität, auf die verwiesen wird.  
  
 <see langword="ProcessingInstruction" /> Das Ziel der Verarbeitungsanweisung.  
  
 <see langword="XmlDeclaration" /> Das <see langword="xml" />-Zeichenfolgenliteral.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Namespace-URI (entsprechend der Definition in der Namespacespezifikation des W3C) des Knotens ab, auf dem der Reader positioniert ist.</summary>
      <returns>Der Namespace-URI des aktuellen Knotens, andernfalls eine leere Zeichenfolge.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Xml.XmlNameTable" /> ab, die dieser Implementierung zugeordnet ist.</summary>
      <returns>Die <see langword="XmlNameTable" />, die das Abrufen der atomisierten Version einer Zeichenfolge innerhalb des Knotens erlaubt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Typ des aktuellen Knotens ab.</summary>
      <returns>Einer der Enumerationswerte, die den Typ des aktuellen Knotens angeben.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das dem aktuellen Knoten zugeordnete Namespacepräfix ab.</summary>
      <returns>Das dem aktuellen Knoten zugeordnete Namespacepräfix.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Anführungszeichen ab, mit dem der Wert eines Attributknotens eingeschlossen wird.</summary>
      <returns>Das Anführungszeichen (" oder '), mit dem der Wert eines Attributknotens eingeschlossen ist.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse den nächsten Knoten aus dem Stream.</summary>
      <returns>
        <see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, andernfalls, <see langword="false" />.</returns>
      <exception cref="T:System.Xml.XmlException">Beim Analysieren des XML-Codes ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>Liest den nächsten Knoten aus dem Stream asynchron.</summary>
      <returns>
        <see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, <see langword="false" />, wenn keine weiteren zu lesenden Knoten vorhanden sind.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse den Attributwert in einen oder mehrere Knoten vom Typ <see langword="Text" />, <see langword="EntityReference" /> oder <see langword="EndEntity" /> auf.</summary>
      <returns>
        <see langword="true" />, wenn zurückzugebende Knoten vorhanden sind.
<see langword="false" />, wenn der Reader beim ersten Aufruf nicht auf einem Attributknoten positioniert ist oder alle Attributwerte gelesen wurden.
Ein leeres Attribut, z.B. <c>misc=""</c>, gibt <see langword="true" /> mit einem einzelnen Knoten mit dem Wert <see langword="String.Empty" /> zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Liest den Inhalt als Objekt vom angegebenen Typ.</summary>
      <param name="returnType">Der Typ des zurückzugebenden Werts.
Hinweis Seit der Veröffentlichung von .NET Framework 3.5 kann der Wert des <paramref name="returnType" />-Parameters nun auch auf den <see cref="T:System.DateTimeOffset" />-Typ festgelegt werden.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen. Dieses kann zum Beispiel beim Konvertieren eines <see cref="T:System.Xml.XmlQualifiedName" />-Objekts in einen <c>xs:string</c> verwendet werden.
Dieser Wert kann <see langword="null" /> sein.</param>
      <returns>Der verkettete Textinhalt oder Attributwert, der in den angeforderten Typ konvertiert wurde.</returns>
      <exception cref="T:System.FormatException">Der Inhalt weist nicht das richtige Format für den Zieltyp auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="returnType" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein unterstützter Knotentyp. Weitere Informationen finden Sie in der nachfolgenden Tabelle.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.OverflowException">Lesen von <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Liest den Inhalt asynchron als Objekt vom angegebenen Typ.</summary>
      <param name="returnType">Der Typ des zurückzugebenden Werts.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen.</param>
      <returns>Der verkettete Textinhalt oder Attributwert, der in den angeforderten Typ konvertiert wurde.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die Base64-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt asynchron und gibt die Base64-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die <see langword="BinHex" />-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt asynchron und gibt die <see langword="BinHex" />-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Liest den Textinhalt an der aktuellen Position als <see langword="Boolean" />.</summary>
      <returns>Der Textinhalt als <see cref="T:System.Boolean" />-Objekt.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Liest den Textinhalt an der aktuellen Position als <see cref="T:System.DateTime" />-Objekt.</summary>
      <returns>Der Textinhalt als <see cref="T:System.DateTime" />-Objekt.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Liest den Textinhalt an der aktuellen Position als <see cref="T:System.DateTimeOffset" />-Objekt.</summary>
      <returns>Der Textinhalt als <see cref="T:System.DateTimeOffset" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Liest den Textinhalt an der aktuellen Position als <see cref="T:System.Decimal" />-Objekt.</summary>
      <returns>Der Textinhalt an der aktuellen Position als <see cref="T:System.Decimal" />-Objekt.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Liest den Textinhalt an der aktuellen Position als Gleitkommazahl mit doppelter Genauigkeit.</summary>
      <returns>Der Textinhalt als Gleitkommazahl mit doppelter Genauigkeit.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Liest den Textinhalt an der aktuellen Position als Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <returns>Der Textinhalt an der aktuellen Position als Gleitkommazahl mit einfacher Genauigkeit.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Liest den Textinhalt an der aktuellen Position als 32-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der Textinhalt als 32-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Liest den Textinhalt an der aktuellen Position als 64-Bit-Ganzzahl mit Vorzeichen.</summary>
      <returns>Der Textinhalt als 64-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Liest den Textinhalt an der aktuellen Position als <see cref="T:System.Object" />.</summary>
      <returns>Der Textinhalt als geeignetstes CLR-Objekt (Common Language Runtime).</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Liest den Textinhalt asynchron an der aktuellen Position als ein <see cref="T:System.Object" />.</summary>
      <returns>Der Textinhalt als geeignetstes CLR-Objekt (Common Language Runtime).</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Liest den Textinhalt an der aktuellen Position als <see cref="T:System.String" />-Objekt.</summary>
      <returns>Der Textinhalt als <see cref="T:System.String" />-Objekt.</returns>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.FormatException">Das Zeichenfolgenformat ist nicht gültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Liest den Textinhalt asynchron an der aktuellen Position als <see cref="T:System.String" />-Objekt.</summary>
      <returns>Der Textinhalt als <see cref="T:System.String" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Liest den Elementinhalt als angeforderten Typ.</summary>
      <param name="returnType">Der Typ des zurückzugebenden Werts.
Hinweis Seit der Veröffentlichung von .NET Framework 3.5 kann der Wert des <paramref name="returnType" />-Parameters nun auch auf den <see cref="T:System.DateTimeOffset" />-Typ festgelegt werden.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen.</param>
      <returns>Der in das angeforderte typisierte Objekt konvertierte Elementinhalt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.OverflowException">Lesen von <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, und liest dann den Elementinhalt als angeforderten Typ.</summary>
      <param name="returnType">Der Typ des zurückzugebenden Werts.
Hinweis Seit der Veröffentlichung von .NET Framework 3.5 kann der Wert des <paramref name="returnType" />-Parameters nun auch auf den <see cref="T:System.DateTimeOffset" />-Typ festgelegt werden.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der in das angeforderte typisierte Objekt konvertierte Elementinhalt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
      <exception cref="T:System.OverflowException">Lesen von <see langword="Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Liest das Elementinhalt asynchron als angeforderten Typ.</summary>
      <param name="returnType">Der Typ des zurückzugebenden Werts.</param>
      <param name="namespaceResolver">Ein <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das für die Auflösung von Präfixen von Namespaces verwendet wird, die im Zusammenhang mit der Typkonvertierung stehen.</param>
      <returns>Der in das angeforderte typisierte Objekt konvertierte Elementinhalt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den <see langword="Base64" />-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element asynchron und decodiert den <see langword="Base64" />-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den <see langword="BinHex" />-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element asynchron und decodiert den <see langword="BinHex" />-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Liest das aktuelle Element und gibt den Inhalt als <see cref="T:System.Boolean" />-Objekt zurück.</summary>
      <returns>Der Elementinhalt als <see cref="T:System.Boolean" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in ein <see cref="T:System.Boolean" />-Objekt konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als <see cref="T:System.Boolean" />-Objekt zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als <see cref="T:System.Boolean" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Liest das aktuelle Element und gibt den Inhalt als <see cref="T:System.DateTime" />-Objekt zurück.</summary>
      <returns>Der Elementinhalt als <see cref="T:System.DateTime" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in ein <see cref="T:System.DateTime" />-Objekt konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als <see cref="T:System.DateTime" />-Objekt zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als <see cref="T:System.DateTime" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Liest das aktuelle Element und gibt den Inhalt als <see cref="T:System.Decimal" />-Objekt zurück.</summary>
      <returns>Der Elementinhalt als <see cref="T:System.Decimal" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in <see cref="T:System.Decimal" /> konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als <see cref="T:System.Decimal" />-Objekt zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als <see cref="T:System.Decimal" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in <see cref="T:System.Decimal" /> konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Liest das aktuelle Element und gibt den Inhalt als Gleitkommazahl mit doppelter Genauigkeit zurück.</summary>
      <returns>Der Elementinhalt als Gleitkommazahl mit doppelter Genauigkeit.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine Gleitkommazahl mit doppelter Genauigkeit konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als Gleitkommazahl mit doppelter Genauigkeit zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als Gleitkommazahl mit doppelter Genauigkeit.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Liest das aktuelle Element und gibt den Inhalt als Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <returns>Der Elementinhalt als Gleitkommazahl mit einfacher Genauigkeit.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine Gleitkommazahl mit einfacher Genauigkeit konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als Gleitkommazahl mit einfacher Genauigkeit zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als Gleitkommazahl mit einfacher Genauigkeit.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine Gleitkommazahl mit einfacher Genauigkeit konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Liest das aktuelle Element und gibt den Inhalt als 32-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <returns>Der Elementinhalt als 32-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine 32-Bit-Ganzzahl mit Vorzeichen konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als 32-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als 32-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine 32-Bit-Ganzzahl mit Vorzeichen konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Liest das aktuelle Element und gibt den Inhalt als 64-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <returns>Der Elementinhalt als 64-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine 64-Bit-Ganzzahl mit Vorzeichen konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als 64-Bit-Ganzzahl mit Vorzeichen zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als 64-Bit-Ganzzahl mit Vorzeichen.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in eine 64-Bit-Ganzzahl mit Vorzeichen konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Liest das aktuelle Element und gibt den Inhalt als <see cref="T:System.Object" /> zurück.</summary>
      <returns>Ein geschachteltes CLR-Objekt (Common Language Runtime) des geeignetsten Typs. Die <see cref="P:System.Xml.XmlReader.ValueType" />-Eigenschaft bestimmt den geeigneten CLR-Typ. Wenn der Inhalt als Listentyp typisiert ist, gibt diese Methode ein Array der geschachtelten Objekte des geeigneten Typs zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als <see cref="T:System.Object" /> zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Ein geschachteltes CLR-Objekt (Common Language Runtime) des geeignetsten Typs. Die <see cref="P:System.Xml.XmlReader.ValueType" />-Eigenschaft bestimmt den geeigneten CLR-Typ. Wenn der Inhalt als Listentyp typisiert ist, gibt diese Methode ein Array der geschachtelten Objekte des geeigneten Typs zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Liest das aktuelle Element asynchron und gibt den Inhalt als <see cref="T:System.Object" /> zurück.</summary>
      <returns>Ein geschachteltes CLR-Objekt (Common Language Runtime) des geeignetsten Typs. Die <see cref="P:System.Xml.XmlReader.ValueType" />-Eigenschaft bestimmt den geeigneten CLR-Typ. Wenn der Inhalt als Listentyp typisiert ist, gibt diese Methode ein Array der geschachtelten Objekte des geeigneten Typs zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Liest das aktuelle Element und gibt den Inhalt als <see cref="T:System.String" />-Objekt zurück.</summary>
      <returns>Der Elementinhalt als <see cref="T:System.String" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in ein <see cref="T:System.String" />-Objekt konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Überprüft, ob der angegebene lokale Name und der angegebene Namespace-URI mit denen des aktuellen Elements übereinstimmen, liest dann das aktuelle Element und gibt den Inhalt als <see cref="T:System.String" />-Objekt zurück.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>Der Elementinhalt als <see cref="T:System.String" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XmlReader" /> wird nicht auf einem Element positioniert.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Xml.XmlException">Das aktuelle Element enthält untergeordnete Elemente.
- oder -
Der Elementinhalt kann nicht in ein <see cref="T:System.String" />-Objekt konvertiert werden.</exception>
      <exception cref="T:System.ArgumentNullException">Die Methode wird mit <see langword="null" />-Argumenten aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">Der angegebene lokale Name und der Namespace-URI stimmen nicht mit dem Element überein, das gerade gelesen wird.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Liest das aktuelle Element asynchron und gibt den Inhalt als <see cref="T:System.String" />-Objekt zurück.</summary>
      <returns>Der Elementinhalt als <see cref="T:System.String" />-Objekt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Liest ein Nur-Text-Element. Sie sollten stattdessen allerdings die <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />-Methode verwenden, da sie eine einfachere Möglichkeit zum Verarbeiten dieses Vorgangs bietet.</summary>
      <returns>Der Text in dem gelesenen Element. Eine leere Zeichenfolge, wenn das Element leer ist.</returns>
      <exception cref="T:System.Xml.XmlException">Der nächste Inhaltsknoten ist kein Starttag, oder das gefundene Element enthält keinen Wert für einfachen Text.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Überprüft vor dem Lesen eines Nur-Text-Elements, ob die <see cref="P:System.Xml.XmlReader.Name" />-Eigenschaft des gefundenen Elements mit der angegebenen Zeichenfolge übereinstimmt. Sie sollten stattdessen allerdings die <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" />-Methode verwenden, da sie eine einfachere Möglichkeit zum Verarbeiten dieses Vorgangs bietet.</summary>
      <param name="name">Der zu überprüfende Name.</param>
      <returns>Der Text in dem gelesenen Element. Eine leere Zeichenfolge, wenn das Element leer ist.</returns>
      <exception cref="T:System.Xml.XmlException">Wenn der nächste Inhaltsknoten kein Starttag ist, wenn der Element <see langword="Name" /> mit dem angegebenen Argument nicht übereinstimmt oder wenn das gefundene Element keinen Wert für einfachen Text enthält.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Überprüft vor dem Lesen eines Nur-Text-Elements, ob die <see cref="P:System.Xml.XmlReader.LocalName" />-Eigenschaft und die <see cref="P:System.Xml.XmlReader.NamespaceURI" />-Eigenschaft des gefundenen Elements mit den angegebenen Zeichenfolgen übereinstimmen. Sie sollten stattdessen allerdings die <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />-Methode verwenden, da sie eine einfachere Möglichkeit zum Verarbeiten dieses Vorgangs bietet.</summary>
      <param name="localname">Der zu überprüfende lokale Name.</param>
      <param name="ns">Der zu überprüfende Namespace-URI.</param>
      <returns>Der Text in dem gelesenen Element. Eine leere Zeichenfolge, wenn das Element leer ist.</returns>
      <exception cref="T:System.Xml.XmlException">Wenn der nächste Inhaltsknoten kein Starttag ist, wenn der <see langword="LocalName" /> oder <see langword="NamespaceURI" /> des Elements nicht mit den angegebenen Argumenten übereinstimmen oder wenn das gefundene Element keinen Wert für einfachen Text enthält.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Überprüft, ob der aktuelle Inhaltsknoten ein Endtag ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <exception cref="T:System.Xml.XmlException">Der aktuelle Knoten ist kein Endtag, oder im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse den gesamten Inhalt, einschließlich Markup, als Zeichenfolge.</summary>
      <returns>Der gesamte XML-Inhalt (einschließlich Markup) im aktuellen Knoten. Wenn der aktuelle Knoten keine untergeordneten Elemente besitzt, wird eine leere Zeichenfolge zurückgegeben.
Wenn der aktuelle Knoten weder ein Element noch ein Attribut ist, wird eine leere Zeichenfolge zurückgegeben.</returns>
      <exception cref="T:System.Xml.XmlException">Das XML war nicht wohlgeformt, oder bei der XML-Analyse ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>Liest asynchron den gesamten Inhalt, einschließlich Markup als Zeichenfolge.</summary>
      <returns>Der gesamte XML-Inhalt (einschließlich Markup) im aktuellen Knoten. Wenn der aktuelle Knoten keine untergeordneten Elemente besitzt, wird eine leere Zeichenfolge zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Inhalt (einschließlich Markup) ab, der diesen Knoten und alle untergeordneten Elemente darstellt.</summary>
      <returns>Wenn der Reader auf einem Elementknoten oder einem Attributknoten positioniert ist, gibt diese Methode den gesamten XML-Inhalt (einschließlich Markup) des aktuellen Knotens sowie aller untergeordneten Elemente zurück. Andernfalls wird eine leere Zeichenfolge zurückgegeben.</returns>
      <exception cref="T:System.Xml.XmlException">Das XML war nicht wohlgeformt, oder bei der XML-Analyse ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>Liest den Inhalt, einschließlich Markup, das diesen Knoten und alle untergeordneten Elemente darstellt, asynchron.</summary>
      <returns>Wenn der Reader auf einem Elementknoten oder einem Attributknoten positioniert ist, gibt diese Methode den gesamten XML-Inhalt (einschließlich Markup) des aktuellen Knotens sowie aller untergeordneten Elemente zurück. Andernfalls wird eine leere Zeichenfolge zurückgegeben.</returns>
      <exception cref="T:System.InvalidOperationException">Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Überprüft, ob der aktuelle Knoten ein Element ist, und rückt den Reader zum nächsten Knoten vor.</summary>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Überprüft, ob der aktuelle Inhaltsknoten ein Element mit dem angegebenen <see cref="P:System.Xml.XmlReader.Name" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="name">Der qualifizierte Name des Elements.</param>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.
- oder -
Der <see cref="P:System.Xml.XmlReader.Name" /> des Elements entspricht nicht dem angegebenen <paramref name="name" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Überprüft, ob der aktuelle Inhaltsknoten ein Element mit dem angegebenen <see cref="P:System.Xml.XmlReader.LocalName" /> und dem angegebenen <see cref="P:System.Xml.XmlReader.NamespaceURI" /> ist, und verschiebt den Reader auf den nächsten Knoten.</summary>
      <param name="localname">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI des Elements.</param>
      <exception cref="T:System.Xml.XmlException">Im Eingabestream wurde unzulässiger XML-Code gefunden.
- oder -
Die Eigenschaften <see cref="P:System.Xml.XmlReader.LocalName" /> und <see cref="P:System.Xml.XmlReader.NamespaceURI" /> des gefundenen Elements stimmen nicht mit den angegebenen Argumenten überein.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Zustand des Readers ab.</summary>
      <returns>Einer der Enumerationswerte, der den Status des Readers angibt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>Liest beim Überschreiben in einer abgeleiteten Klasse den Inhalt eines Element- oder Textknotens als Zeichenfolge. Sie sollten stattdessen allerdings die <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" />-Methode verwenden, da sie eine einfachere Möglichkeit zum Verarbeiten dieses Vorgangs bietet.</summary>
      <returns>Der Inhalt des Elements oder eine leere Zeichenfolge.</returns>
      <exception cref="T:System.Xml.XmlException">Beim Analysieren des XML-Codes ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Gibt eine neue <see langword="XmlReader" />-Instanz zurück, die zum Lesen des aktuellen Knotens und aller Nachfolgerknoten verwendet werden kann.</summary>
      <returns>Eine neue auf <see cref="F:System.Xml.ReadState.Initial" /> festgelegte XML-Reader-Instanz. Durch den Aufruf der <see cref="M:System.Xml.XmlReader.Read" />-Methode wird der neue Reader auf dem Knoten positioniert, der vor dem Aufruf der <see cref="M:System.Xml.XmlReader.ReadSubtree" />-Methode aktuell war.</returns>
      <exception cref="T:System.InvalidOperationException">Der XML-Reader wird nicht in einem Element positioniert, wenn diese Methode aufgerufen wird.
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XmlReader" /> auf das nächste Nachfolgerelement mit dem angegebenen qualifizierten Namen.</summary>
      <param name="name">Der qualifizierte Name des Elements, zu dem Sie wechseln möchten.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes Nachfolgerelement gefunden wurde, andernfalls <see langword="false" />. Wenn kein übereinstimmendes untergeordnetes Element gefunden wurde, wird der <see cref="T:System.Xml.XmlReader" /> auf dem Endtag (<see cref="P:System.Xml.XmlReader.NodeType" /> ist <see langword="XmlNodeType.EndElement" />) des Elements positioniert.
Wenn der <see cref="T:System.Xml.XmlReader" /> beim Aufruf von <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> nicht in einem Element positioniert wird, gibt diese Methode <see langword="false" /> zurück, und die Position des <see cref="T:System.Xml.XmlReader" /> wird nicht geändert.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der Parameter ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XmlReader" /> auf das nächste Nachfolgerelement mit dem angegebenen lokalen Namen und dem angegebenen Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Elements, zu dem Sie wechseln möchten.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements, zu dem Sie wechseln möchten.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes Nachfolgerelement gefunden wurde, andernfalls <see langword="false" />. Wenn kein übereinstimmendes untergeordnetes Element gefunden wurde, wird der <see cref="T:System.Xml.XmlReader" /> auf dem Endtag (<see cref="P:System.Xml.XmlReader.NodeType" /> ist <see langword="XmlNodeType.EndElement" />) des Elements positioniert.
Wenn beim Aufruf von <see cref="T:System.Xml.XmlReader" /> der <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> nicht in einem Element positioniert wird, gibt diese Methode <see langword="false" /> zurück, und die Position des <see cref="T:System.Xml.XmlReader" /> wird nicht geändert.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentNullException">Beide Parameterwerte sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Liest, bis ein Element mit dem angegebenen qualifizierten Namen gefunden wird.</summary>
      <param name="name">Der qualifizierte Name des Elements.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes Element gefunden wird, andernfalls <see langword="false" />, und der <see cref="T:System.Xml.XmlReader" /> in einem Dateiendezustand.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der Parameter ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Liest, bis ein Element mit dem angegebenen lokalen Namen und dem angegebenen Namespace-URI gefunden wird.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes Element gefunden wird, andernfalls <see langword="false" />, und der <see cref="T:System.Xml.XmlReader" /> in einem Dateiendezustand.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentNullException">Beide Parameterwerte sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Verschiebt den <see langword="XmlReader" /> auf das nächste nebengeordnete Element mit dem angegebenen qualifizierten Namen.</summary>
      <param name="name">Der qualifizierte Name des nebengeordneten Elements, zu dem Sie wechseln möchten.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes nebengeordnetes Element gefunden wurde, andernfalls <see langword="false" />. Wenn kein übereinstimmendes nebengeordnetes Element gefunden wurde, wird der <see langword="XmlReader" /> auf dem Endtag (<see cref="P:System.Xml.XmlReader.NodeType" /> ist <see langword="XmlNodeType.EndElement" />) des übergeordneten Elements positioniert.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der Parameter ist eine leere Zeichenfolge.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Verschiebt den <see langword="XmlReader" /> auf das nächste nebengeordnete Element mit dem angegebenen lokalen Namen und dem angegebenen Namespace-URI.</summary>
      <param name="localName">Der lokale Name des nebengeordneten Elements, zu dem Sie wechseln möchten.</param>
      <param name="namespaceURI">Der Namespace-URI des nebengeordneten Elements, zu dem Sie wechseln möchten.</param>
      <returns>
        <see langword="true" />, wenn ein übereinstimmendes nebengeordnetes Element gefunden wurde, andernfalls <see langword="false" />. Wenn kein übereinstimmendes nebengeordnetes Element gefunden wurde, wird der <see langword="XmlReader" /> auf dem Endtag (<see cref="P:System.Xml.XmlReader.NodeType" /> ist <see langword="XmlNodeType.EndElement" />) des übergeordneten Elements positioniert.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentNullException">Beide Parameterwerte sind <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Liest umfangreiche Streams von Text, der in ein XML-Dokument eingebettet ist.</summary>
      <param name="buffer">Das Array von Zeichen, das als Puffer dient, in den der Textinhalt geschrieben wird. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, ab dem der <see cref="T:System.Xml.XmlReader" /> die Ergebnisse kopieren kann.</param>
      <param name="count">Die maximale Anzahl von Zeichen, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl der kopierten Zeichen zurück.</param>
      <returns>Die Anzahl der in den Puffer gelesenen Zeichen. Der Wert 0 (null) wird zurückgegeben, wenn kein weiterer Textinhalt vorhanden ist.</returns>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten verfügt über keinen Wert (<see cref="P:System.Xml.XmlReader.HasValue" /> ist <see langword="false" />).
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Die XML-Daten sind nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Liest asynchron umfangreiche Streams von Text, der in ein XML-Dokument eingebettet ist.</summary>
      <param name="buffer">Das Array von Zeichen, das als Puffer dient, in den der Textinhalt geschrieben wird. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, ab dem der <see cref="T:System.Xml.XmlReader" /> die Ergebnisse kopieren kann.</param>
      <param name="count">Die maximale Anzahl von Zeichen, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl der kopierten Zeichen zurück.</param>
      <returns>Die Anzahl der in den Puffer gelesenen Zeichen. Der Wert 0 (null) wird zurückgegeben, wenn kein weiterer Textinhalt vorhanden ist.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse den Entitätsverweis für <see langword="EntityReference" />-Knoten auf.</summary>
      <exception cref="T:System.InvalidOperationException">Der Reader ist nicht auf einem <see langword="EntityReference" />-Knoten positioniert. Diese Implementierung des Readers kann Entitäten nicht auflösen (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> gibt <see langword="false" /> zurück).
- oder -
Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Ruft die Schemainformationen ab, die dem aktuellen Knoten nach der Schemavalidierung zugewiesen wurden.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das die Schemainformationen für den aktuellen Knoten enthält. Schemainformationen können auf Elemente, Attribute oder Textknoten mit einem <see cref="P:System.Xml.XmlReader.ValueType" /> festgelegt werden, der nicht NULL (typisierte Werte) ist.
Wenn der aktuelle Knoten keinem der oben angegebenen Knotentypen angehört oder wenn die <see langword="XmlReader" />-Instanz keine Schemainformationen übermittelt, gibt diese Eigenschaft <see langword="null" /> zurück.
Wenn diese Eigenschaft von einem <see cref="T:System.Xml.XmlTextReader" />-Objekt oder einem <see cref="T:System.Xml.XmlValidatingReader" />-Objekt aufgerufen wird, gibt diese Eigenschaft stets <see langword="null" /> zurück. Die <see langword="XmlReader" />-Implementierungen machen über die <see langword="SchemaInfo" />-Eigenschaft keine Schemainformationen verfügbar.

Wenn Sie den Informationensatz für die Post-Schema-Validierung (PSVI) für ein Element abrufen müssen, positionieren Sie den Reader im Endtag des Elements und nicht im Starttag. Der PSVI wird über die <see langword="SchemaInfo" />-Eigenschaft eines Readers abgerufen. Der überprüfende Reader, der durch <see cref="Overload:System.Xml.XmlReader.Create" /> mit der <see cref="P:System.Xml.XmlReaderSettings.ValidationType" />-Eigenschaft erstellt wurde, welche auf <see cref="F:System.Xml.ValidationType.Schema" /> festgelegt ist, verfügt nur über den vollständigen PSVI für ein Element, wenn der Reader im Endtag eines Elements positioniert ist.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Ruft das zum Erstellen dieser <see cref="T:System.Xml.XmlReaderSettings" />-Instanz verwendete <see cref="T:System.Xml.XmlReader" />-Objekt ab.</summary>
      <returns>Das zum Erstellen dieser Reader-Instanz verwendete <see cref="T:System.Xml.XmlReaderSettings" />-Objekt. Wenn dieser Reader nicht mit der <see cref="Overload:System.Xml.XmlReader.Create" />-Methode erstellt wurde, gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Überspringt die untergeordneten Elemente des aktuellen Knotens.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Überspringt die untergeordneten Elemente des aktuellen Knotens asynchron.</summary>
      <returns>Der aktuelle Knoten.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlReaderSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Legen Sie 'XmlReaderSettings.Async' auf 'true' fest, wenn Sie asynchrone Methoden verwenden möchten.“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Textwert des aktuellen Knotens ab.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlReader.NodeType" /> des Knotens ab. In der folgenden Tabelle sind Knotentypen aufgeführt, die einen zurückzugebenden Wert haben. Alle anderen Knotentypen geben <see langword="String.Empty" /> zurück.
  Knotentyp 
  Wert 
 <see langword="Attribute" /> Der Wert des Attributs.  
  
 <see langword="CDATA" /> Der Inhalt des CDATA-Abschnitts.  
  
 <see langword="Comment" /> Der Inhalt des Kommentars.  
  
 <see langword="DocumentType" /> Die interne Teilmenge.  
  
 <see langword="ProcessingInstruction" /> Der gesamte Inhalt mit Ausnahme des Ziels.  
  
 <see langword="SignificantWhitespace" /> Der Leerraum zwischen Markups bei einem Modell für gemischten Inhalt.  
  
 <see langword="Text" /> Der Inhalt des Textknotens.  
  
 <see langword="Whitespace" /> Der Leerraum zwischen Markups.  
  
 <see langword="XmlDeclaration" /> Der Inhalt der Deklaration.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Ruft den CLR-Typ (Common Language Runtime) für den aktuellen Knoten ab.</summary>
      <returns>Der CLR-Typ, der dem typisierten Wert des Knotens entspricht. Die Standardeinstellung ist <see langword="System.String" />.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen <see langword="xml:space" />-Bereich ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlSpace" />-Werte. Wenn kein <see langword="xml:space" />-Bereich vorhanden ist, wird für diese Eigenschaft standardmäßig <see langword="XmlSpace.None" /> festgelegt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlReader" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Gibt eine Gruppe von Funktionen an, die für das <see cref="T:System.Xml.XmlReader" />-Objekt unterstützt werden sollen, das von der <see cref="Overload:System.Xml.XmlReader.Create" />-Methode erstellt wurde.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlReaderSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Ruft ab oder legt fest, ob asynchrone <see cref="T:System.Xml.XmlReader" />-Methoden für eine bestimmte <see cref="T:System.Xml.XmlReader" />-Instanz verwendet werden können.</summary>
      <returns>
        <see langword="true" />, wenn asynchrone Methoden verwendet werden können; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Ruft einen Wert ab, der angibt, ob Zeichen überprüft werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Zeichen überprüft werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.

Wenn der <see cref="T:System.Xml.XmlReader" /> Textdaten verarbeitet, überprüft er unabhängig von der Eigenschafteneinstellung stets, ob die XML-Namen und der Textinhalt gültig sind. Durch Festlegen von <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> auf <see langword="false" /> wird die Zeichenüberprüfung für Zeichenentitätsverweise deaktiviert.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Erstellt eine Kopie der <see cref="T:System.Xml.XmlReaderSettings" />-Instanz.</summary>
      <returns>Das geklonte <see cref="T:System.Xml.XmlReaderSettings" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Ruft einen Wert ab, der angibt, ob der zugrunde liegende Stream oder <see cref="T:System.IO.TextReader" /> geschlossen werden soll, nachdem der Reader geschlossen wurde, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, um den zugrunde liegenden Stream oder <see cref="T:System.IO.TextReader" /> zu schließen, nachdem der Reader geschlossen wurde, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Ruft den Konformitätsgrad ab, dem der <see cref="T:System.Xml.XmlReader" /> entspricht, oder legt diesen fest.</summary>
      <returns>Einer der Enumerationswerte, der das Übereinstimmungsniveau angibt, den der XML-Reader umsetzt. Die Standardeinstellung ist <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der die Verarbeitung von DTDs bestimmt.</summary>
      <returns>Einer der Enumerationswerte, der die Verarbeitung von DTDs bestimmt. Die Standardeinstellung ist <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Ruft einen Wert ab, der angibt, ob Kommentare ignoriert werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Kommentare ignoriert werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Ruft einen Wert ab, der angibt, ob Verarbeitungsanweisungen ignoriert werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Verarbeitungsanweisungen ignoriert werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Ruft einen Wert ab, der angibt, ob signifikanter Leerraum ignoriert werden soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, um Leerraum zu ignorieren, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Ruft das Zeilennummernoffset des <see cref="T:System.Xml.XmlReader" />-Objekts ab oder legt dieses fest.</summary>
      <returns>Das Zeilennummernoffset. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Ruft das Zeilenpositionsoffset des <see cref="T:System.Xml.XmlReader" />-Objekts ab oder legt dieses fest.</summary>
      <returns>Die Offset der Linienposition. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Ruft einen Wert ab, der die maximal zulässige Anzahl von Zeichen in einem Dokument angibt, die aus dem Erweitern von Entitäten resultieren, oder legt diesen fest.</summary>
      <returns>Die maximale zulässige Anzahl von Zeichen aus erweiterten Entitäten. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Ruft einen Wert ab, der die maximale zulässige Anzahl von Zeichen in einem XML-Dokument angibt, oder legt diesen fest. Der Wert 0 (null) gibt an, dass die Größe des XML-Dokuments nicht beschränkt ist. Ein Wert ungleich 0 (null) gibt die maximale Größe in Zeichen an.</summary>
      <returns>Die maximale zulässige Anzahl von Zeichen in einem XML-Dokument. Der Standard ist 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Ruft die für Vergleiche von atomisierten Zeichenfolgen verwendete<see cref="T:System.Xml.XmlNameTable" /> ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Xml.XmlNameTable" />, in der alle atomisierten Zeichenfolgen gespeichert werden, die von allen <see cref="T:System.Xml.XmlReader" />-Instanzen verwendet werden, die mit diesem <see cref="T:System.Xml.XmlReaderSettings" />-Objekt erstellt wurden.
Die Standardeinstellung ist <see langword="null" />. Die erstellte <see cref="T:System.Xml.XmlReader" /> -Instanz verwendet eine neue leere <see cref="T:System.Xml.NameTable" />, wenn dieser Wert <see langword="null" /> ist.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Ruft einen Wert ab, der angibt, ob eine DTD-Verarbeitung (Document Type Definition, Dokumenttypdefinition) verhindert werden soll, oder legt diesen fest. Diese Eigenschaft ist veraltet. Verwenden Sie stattdessen <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>
        <see langword="true" />, wenn die DTD-Verarbeitung verhindert werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Setzt die Member der settings-Klasse auf ihre Standardwerte zurück.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Ruft das <see cref="T:System.Xml.Schema.XmlSchemaSet" /> ab, das beim Ausführen einer Schemavalidierung verwendet werden soll, oder legt dieses fest.</summary>
      <returns>Der zu verwendende <see cref="T:System.Xml.Schema.XmlSchemaSet" />, wenn eine Schemavalidierung ausgeführt wird. Standardmäßig ist das <see cref="T:System.Xml.Schema.XmlSchemaSet" /> -Objekt leer.</returns>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Tritt ein, wenn der Reader Validierungsfehler feststellt.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Ruft einen Wert ab, der die Schemavalidierungseinstellungen angibt, oder legt diesen fest. Diese Einstellung gilt für <see cref="T:System.Xml.XmlReader" />-Objekte, die Schemata validieren (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> Eigenschaft auf <see langword="ValidationType.Schema" /> festgelegt).</summary>
      <returns>Eine bitweise Kombination von Enumerationswerten, die Validierungs Optionen angeben. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> und <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> sind standardmäßig aktiviert. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> und <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> sind standardmäßig deaktiviert.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Ruft einen Wert fest, der angibt, ob der <see cref="T:System.Xml.XmlReader" /> beim Lesen eine Validierung oder Typzuweisung ausführt, oder legt diesen Wert fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.ValidationType" />-Werte, der angibt, ob XmlReader die Validierung oder Typzuordnung beim Lesen ausführt. Die Standardeinstellung ist <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Legt den <see cref="T:System.Xml.XmlResolver" /> fest, der für den Zugriff auf externe Dokumente verwendet wird.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlResolver" />, der für den Zugriff auf externe Dokumente verwendet wird. Bei Festlegung auf<see langword="null" /> wird eine <see cref="T:System.Xml.XmlException" /> ausgelöst, wenn der <see cref="T:System.Xml.XmlReader" /> auf eine externe Ressource zugreift. Standard ist ein neuer <see cref="T:System.Xml.XmlUrlResolver" /> ohne Anmeldeinformationen.  Ab der .NET Framework-Version 4.5.2 hat diese Einstellung den Standardwert <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Löst externe XML-Ressourcen auf, die durch einen URI (Uniform Resource Identifier) benannt werden.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlResolver" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>Legt beim Überschreiben in einer abgeleiteten Klasse die zum Authentifizieren von Webanforderungen verwendeten Anmeldeinformationen fest.</summary>
      <returns>Die Anmeldeinformationen zum Authentifizieren von Webanforderungen. Wenn diese Eigenschaft nicht festgelegt ist, wird als Standardwert <see langword="null" /> verwendet, was bedeutet, dass <see langword="XmlResolver" /> über keine Benutzeranmeldeinformationen verfügt.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Weist beim Überschreiben in einer abgeleiteten Klasse einen URI einem Objekt zu, das die eigentliche Ressource enthält.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur System.IO.Stream-Objekte zurück.</param>
      <returns>Ein stream-Objekt oder <see langword="null" />, wenn ein anderer Typ als „stream“ angegeben ist.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> ist kein <see langword="Stream" />-Typ.</exception>
      <exception cref="T:System.UriFormatException">Der angegebene URI ist kein absoluter URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Es ist ein Laufzeitfehler aufgetreten (z. B. eine unterbrochene Serververbindung).</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
      <returns>Ein stream-Objekt oder <see langword="null" />, wenn ein anderer Typ als „stream“ angegeben ist.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse den absoluten URI der Basis sowie relative URIs auf.</summary>
      <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
      <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
      <returns>Der absolute URI oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Erlaubt dem Resolver, andere Typen als <see cref="T:System.IO.Stream" /> zurückzugeben.</summary>
      <param name="absoluteUri">Die URI.</param>
      <param name="type">Der Typ, der zurückgegeben wird.</param>
      <returns>
        <see langword="true" />, wenn der <paramref name="type" /> unterstützt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Schützt eine andere Implementierung von <see cref="T:System.Xml.XmlResolver" />, indem das <see cref="T:System.Xml.XmlResolver" />-Objekt umschlossen wird und der Zugriff auf die Ressourcen beschränkt wird, auf die der zugrunde liegende <see cref="T:System.Xml.XmlResolver" /> Zugriff hat.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSecureResolver" />-Klasse mit dem angegebenen <see cref="T:System.Xml.XmlResolver" /> und URL.</summary>
      <param name="resolver">Der XML-Resolver, der von <see cref="T:System.Xml.XmlSecureResolver" /> umschlossen ist.</param>
      <param name="securityUrl">Die URL zum Erstellen des <see cref="T:System.Security.PermissionSet" />, das auf den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> angewendet wird. Der <see cref="T:System.Xml.XmlSecureResolver" /> ruft <see cref="M:System.Security.PermissionSet.PermitOnly" /> für das erstellte <see cref="T:System.Security.PermissionSet" /> auf, bevor <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> aufgerufen wird.</param>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Legt Anmeldeinformationen zum Authentifizieren von Webanforderungen fest.</summary>
      <returns>Die Anmeldeinformationen zum Authentifizieren von Webanforderungen. Der <see cref="T:System.Xml.XmlSecureResolver" /> legt die angegebenen Anmeldeinformationen für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> fest. Wenn diese Eigenschaft nicht festgelegt ist, wird als Standardwert <see langword="null" /> verwendet, was bedeutet, dass <see cref="T:System.Xml.XmlSecureResolver" /> über keine Benutzeranmeldeinformationen verfügt.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, einen URI zu. Diese Methode legt temporär das im Konstruktor durch Aufruf von <see cref="T:System.Security.PermissionSet" /> erstellte <see cref="M:System.Security.PermissionSet.PermitOnly" /> fest, bevor <see langword="GetEntity" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> zum Öffnen der Ressource aufgerufen wird.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
      <returns>Der durch Aufruf von <see langword="GetEntity" /> für die zugrunde liegende <see cref="T:System.Xml.XmlResolver" />-Klasse zurückgegebene Datenstrom. Wenn ein anderer Typ als <see cref="T:System.IO.Stream" /> angegeben ist, gibt die Methode <see langword="null" /> zurück.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> ist weder <see langword="null" /> noch vom Typ <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException">Der angegebene URI ist kein absoluter URI.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Es ist ein Laufzeitfehler aufgetreten (z. B. eine unterbrochene Serververbindung).</exception>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
      <returns>Der durch Aufruf von <see langword="GetEntity" /> für die zugrunde liegende <see cref="T:System.Xml.XmlResolver" />-Klasse zurückgegebene Datenstrom. Wenn ein anderer Typ als <see cref="T:System.IO.Stream" /> angegeben ist, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Löst durch Aufruf von <see langword="ResolveUri" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> den absoluten URI der Basis sowie relative URIs auf.</summary>
      <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
      <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
      <returns>Der absolute URI oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann (zurückgegeben durch Aufruf von <see langword="ResolveUri" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" />).</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Stellt ein Leerzeichen zwischen Markup in einem Knoten mit gemischtem Inhalt oder ein Leerzeichen innerhalb eines xml:space= "preserve"-Bereichs dar. Dies wird auch als signifikantes Leerzeichen bezeichnet.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSignificantWhitespace" />-Klasse.</summary>
      <param name="strData">Die Leerzeichen im Knoten.</param>
      <param name="doc">Das <see cref="T:System.Xml.XmlDocument" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Bei signifikanten Leerzeichenknoten enthält der geklonte Knoten, unabhängig von der Parametereinstellung, immer den Datenwert.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlSignificantWhitespace" />-Knoten gibt diese Eigenschaft <see langword="#significant-whitespace" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlSignificantWhitespace" />-Knoten gibt diese Eigenschaft <see langword="#significant-whitespace" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für <see langword="XmlSignificantWhitespace" />-Knoten ist dieser Wert XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Ruft das übergeordnete Element des aktuellen Knotens ab.</summary>
      <returns>Der übergeordnete <see cref="T:System.Xml.XmlNode" />-Knoten des aktuellen Knotens.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary>Ruft den Textknoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Gibt <see cref="T:System.Xml.XmlNode" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Die im Knoten gefundenen Leerzeichen.</returns>
      <exception cref="T:System.ArgumentException">
        <see langword="Value" /> wird auf ungültige Leerraumzeichen festgelegt.</exception>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Gibt den aktuellen <see langword="xml:space" />-Bereich an.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>Der <see langword="xml:space" />-Bereich ist gleich <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Kein <see langword="xml:space" />-Bereich.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>Der <see langword="xml:space" />-Bereich ist gleich <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Stellt den Textinhalt eines Elements oder Attributs dar.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlText" />-Klasse.</summary>
      <param name="strData">Der Inhalt des Knotens. Weitere Informationen finden Sie unter der <see cref="P:System.Xml.XmlText.Value" />-Eigenschaft.</param>
      <param name="doc">Das übergeordnete XML-Dokument.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für Textknoten gibt diese Eigenschaft <see langword="#text" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für Textknoten gibt diese Eigenschaft <see langword="#text" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Für Textknoten ist dieser Wert XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>Ruft das übergeordnete Element dieses Knotens ab (bei Knoten, die über übergeordnete Elemente verfügen können).</summary>
      <returns>Der <see langword="XmlNode" />, der das übergeordnete Element des aktuellen Knotens ist. Wenn ein Knoten gerade erstellt, jedoch noch nicht der Struktur hinzugefügt oder aus dieser entfernt wurde, ist das übergeordnete Element <see langword="null" />. Für alle anderen Knoten hängt der zurückgegebene Wert vom <see cref="P:System.Xml.XmlNode.NodeType" /> des Knotens ab. In der folgenden Tabelle werden die möglichen Rückgabewerte für die <see langword="ParentNode" />-Eigenschaft beschrieben.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary>Ruft den Textknoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Gibt <see cref="T:System.Xml.XmlNode" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Teilt den Knoten am angegebenen Offset in zwei Knoten und behält beide Knoten in der Struktur als nebengeordnete Elemente bei.</summary>
      <param name="offset">Der Offset, an dem der Knoten geteilt werden soll.</param>
      <returns>Der neue Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Der Inhalt des Textknotens.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />. Da <see langword="XmlText" />-Knoten keine untergeordneten Elemente besitzen, hat diese Methode keine Auswirkungen.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see langword="XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Stellt einen Reader dar, der schnellen, nicht zwischengespeicherten Vorwärtszugriff auf XML-Daten bietet.
Ab .NET Framework 2.0 sollten Sie stattdessen die <see cref="T:System.Xml.XmlReader" />-Klasse verwenden.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Initialisiert eine neue Instanz des <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit dem angegebenen Stream.</summary>
      <param name="input">Der Stream, der die zu lesenden XML-Daten enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit dem angegebenen Stream und <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Der Stream, der die zu lesenden XML-Daten enthält.</param>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Der <paramref name="input" />-Wert oder der <paramref name="nt" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit dem angegebenen Stream, <see cref="T:System.Xml.XmlNodeType" /> und <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Der Stream, der das zu analysierende XML-Fragment enthält.</param>
      <param name="fragType">Der <see cref="T:System.Xml.XmlNodeType" /> des XML-Fragments. Damit wird auch der mögliche Inhalt des Fragments bestimmt. (Siehe Tabelle unten.)</param>
      <param name="context">Der <see cref="T:System.Xml.XmlParserContext" />, in dem das <paramref name="xmlFragment" /> analysiert werden soll. Dazu gehören die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, der Namespacebereich, der aktuelle <c>xml:lang</c>- und der <c>xml:space</c>-Bereich.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ist kein Element-, Attribut- oder Dokument-<see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen <see cref="T:System.IO.TextReader" />.</summary>
      <param name="input">Der <see langword="TextReader" />, der die zu lesenden XML-Daten enthält.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit den angegebenen <see cref="T:System.IO.TextReader" /> und dem angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Der <see langword="TextReader" />, der die zu lesenden XML-Daten enthält.</param>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Der <paramref name="nt" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen Datei.</summary>
      <param name="url">Der URL der Datei, die die XML-Daten enthält. Der <see cref="P:System.Xml.XmlTextReader.BaseURI" /> wird auf diesen Wert festgelegt.</param>
      <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des Dateinamens oder Verzeichnisses kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.Net.WebException">Der Remotedateiname kann nicht aufgelöst werden.
- oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> ist kein gültiger URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen URL und dem angegebenen Stream.</summary>
      <param name="url">Die für die Auflösung externer Ressourcen zu verwendende URL. Der <see cref="P:System.Xml.XmlTextReader.BaseURI" /> wird auf diesen Wert festgelegt.</param>
      <param name="input">Der Stream, der die zu lesenden XML-Daten enthält.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen URL, dem angegebenen Stream und der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">Die für die Auflösung externer Ressourcen zu verwendende URL. Der <see cref="P:System.Xml.XmlTextReader.BaseURI" /> wird auf diesen Wert festgelegt. Wenn<paramref name="url" /><see langword="null" /> ist, wird <see langword="BaseURI" /> auf <see langword="String.Empty" /> festgelegt.</param>
      <param name="input">Der Stream, der die zu lesenden XML-Daten enthält.</param>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Der <paramref name="input" />-Wert oder der <paramref name="nt" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen URL und <see cref="T:System.IO.TextReader" />.</summary>
      <param name="url">Die für die Auflösung externer Ressourcen zu verwendende URL. Der <see cref="P:System.Xml.XmlTextReader.BaseURI" /> wird auf diesen Wert festgelegt.</param>
      <param name="input">Der <see langword="TextReader" />, der die zu lesenden XML-Daten enthält.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen URL, dem <see cref="T:System.IO.TextReader" /> und der <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">Die für die Auflösung externer Ressourcen zu verwendende URL. Der <see cref="P:System.Xml.XmlTextReader.BaseURI" /> wird auf diesen Wert festgelegt. Wenn<paramref name="url" /><see langword="null" /> ist, wird <see langword="BaseURI" /> auf <see langword="String.Empty" /> festgelegt.</param>
      <param name="input">Der <see langword="TextReader" />, der die zu lesenden XML-Daten enthält.</param>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="nt" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen Datei und <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="url">Die URL der Datei, die die zu lesenden XML-Daten enthält.</param>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
      <exception cref="T:System.NullReferenceException">Der <paramref name="nt" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Die angegebene Datei kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Ein Teil des Dateinamens oder Verzeichnisses kann nicht gefunden werden.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> ist eine leere Zeichenfolge.</exception>
      <exception cref="T:System.Net.WebException">Der Remotedateiname kann nicht aufgelöst werden.
- oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> ist kein gültiger URI.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen Zeichenfolge, dem <see cref="T:System.Xml.XmlNodeType" /> und dem <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Die Zeichenfolge, die das zu analysierende XML-Fragment enthält.</param>
      <param name="fragType">Der <see cref="T:System.Xml.XmlNodeType" /> des XML-Fragments. Damit wird auch der mögliche Inhalt der Zeichenfolge mit dem Fragment bestimmt. (Siehe Tabelle unten.)</param>
      <param name="context">Der <see cref="T:System.Xml.XmlParserContext" />, in dem das <paramref name="xmlFragment" /> analysiert werden soll. Dazu gehören die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, der Namespacebereich, der aktuelle <c>xml:lang</c>- und der <c>xml:space</c>-Bereich.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ist kein <see langword="Element" />-, <see langword="Attribute" />- oder <see langword="Document" />-<see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlTextReader" />-Klasse mit der angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="nt">Der zu verwendende <see langword="XmlNameTable" />.</param>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Ruft die Anzahl der Attribute im aktuellen Knoten ab.</summary>
      <returns>Die Anzahl der Attribute im aktuellen Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Ruft den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Basis-URI des aktuellen Knotens.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlTextReader" /> die Methoden für das Lesen von Inhalt im Binärformat implementiert.</summary>
      <returns>
        <see langword="true" />, wenn die Methoden für das Lesen von Inhalt im Binärformat implementiert werden, andernfalls <see langword="false" />. <see cref="T:System.Xml.XmlTextReader" /> gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlTextReader" /> die angegebene <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />-Methode implementiert.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XmlTextReader" /> die <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />-Methode implementiert, andernfalls <see langword="false" />. <see cref="T:System.Xml.XmlTextReader" /> gibt immer <see langword="false" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Reader Entitäten analysieren und auflösen kann.</summary>
      <returns>
        <see langword="true" />, wenn der Reader Entitäten analysieren und auflösen kann, andernfalls <see langword="false" />. <see langword="XmlTextReader" /> gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Ändert den <see cref="P:System.Xml.XmlReader.ReadState" /> in <see langword="Closed" />.</summary>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Ruft die Tiefe des aktuellen Knotens im XML-Dokument ab.</summary>
      <returns>Die Tiefe des aktuellen Knotens im XML-Dokument.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Ruft die <see cref="T:System.Xml.DtdProcessing" />-Enumeration ab oder legt diese fest.</summary>
      <returns>Die <see cref="T:System.Xml.DtdProcessing" />-Enumeration.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Ruft die Codierung des Dokuments ab.</summary>
      <returns>Der Codierungswert. Wenn kein Codierungsattribut vorhanden ist und keine Bytereihenfolgenmarkierung gesetzt ist, wird dieser automatisch auf UTF-8 festgelegt.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Ruft einen Wert ab, der angibt, wie der Reader Entitäten behandelt, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.EntityHandling" />-Werte. Wenn <see langword="EntityHandling" /> nicht angegeben ist, wird als Standardwert <see langword="EntityHandling.ExpandCharEntities" /> verwendet.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Ruft einen Wert ab, der angibt, ob sich der Reader am Ende des Streams befindet.</summary>
      <returns>
        <see langword="true" />, wenn der Reader am Ende des Streams positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Index ab.</summary>
      <param name="i">Der Index des Attributs. Der Index ist nullbasiert. (Das erste Attribut hat den Index 0.)</param>
      <returns>Der Wert des angegebenen Attributs.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Namen ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI ab.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben. Diese Methode verschiebt den Reader nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Ruft eine Auflistung ab, die alle derzeit im Gültigkeitsbereich enthaltenen Namespaces enthält.</summary>
      <param name="scope">Ein <see cref="T:System.Xml.XmlNamespaceScope" />-Wert, der den Typ der Namespaceknoten angibt, die zurückgegeben werden sollen.</param>
      <returns>Ein <see cref="T:System.Collections.IDictionary" />-Objekt, das alle derzeit im Gültigkeitsbereich enthaltenen Namespaces enthält. Wenn der Reader nicht auf einem Element positioniert wird, wird ein leeres Wörterbuch (keine Namespaces) zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Ruft den Rest des gepufferten XML ab.</summary>
      <returns>Ein <see cref="T:System.IO.TextReader" />, der den Rest des gepufferten XML enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Ruft einen Wert ab, der angibt, ob die Klasse Zeileninformationen zurückgeben kann.</summary>
      <returns>
        <see langword="true" />, wenn die Klasse Zeileninformationen zurückgeben kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten einen anderen <see cref="P:System.Xml.XmlTextReader.Value" /> als <see langword="String.Empty" /> aufweisen darf.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten, auf dem der Reader derzeit positioniert ist, einen <see langword="Value" /> aufweisen darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein Attribut ist, das aus dem in der DTD oder dem Schema definierten Standardwert generiert wurde.</summary>
      <returns>Diese Eigenschaft gibt immer <see langword="false" /> zurück. (<see cref="T:System.Xml.XmlTextReader" /> erweitert die Standardattribute nicht.)</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein leeres Element ist (z.B. <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Element ist (<see cref="P:System.Xml.XmlTextReader.NodeType" /> gleich <see langword="XmlNodeType.Element" />), das mit <c>/&gt;</c>endet. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Ruft die aktuelle Zeilennummer ab.</summary>
      <returns>Die aktuelle Zeilennummer.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Ruft die aktuelle Zeilenposition ab.</summary>
      <returns>Die aktuelle Zeilenposition.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Ruft den lokalen Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name des aktuellen Knotens ohne das Präfix. Beispielsweise ist <see langword="LocalName" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="book" />.
Bei unbenannten Knotentypen wie <see langword="Text" />, <see langword="Comment" /> usw. gibt diese Eigenschaft <see langword="String.Empty" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Löst ein Namespacepräfix im Gültigkeitsbereich des aktuellen Elements auf.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu erhalten, übergeben Sie eine leere Zeichenfolge. Diese Zeichenfolge muss nicht atomisiert werden.</param>
      <returns>Der Namespace-URI, dem das Präfix zugeordnet ist, oder <see langword="null" />, wenn kein entsprechendes Präfix gefunden wird.</returns>
      <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Xml.XmlTextReader.Namespaces" />-Eigenschaft wird auf <see langword="true" /> festgelegt, und der <paramref name="prefix" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Wechselt zum Attribut mit dem angegebenen Index.</summary>
      <param name="i">Der Index des Attributs.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Wechselt zum Attribut mit dem angegebenen Namen.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Wechselt zu dem Attribut mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei einem Wert von <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Wechselt zu dem Element, das den aktuellen Attributknoten enthält.</summary>
      <returns>
        <see langword="true" />, wenn der Reader auf einem Attribut positioniert ist (der Reader wechselt zu dem Element, das das Attribut besitzt); <see langword="false" />, wenn der Reader nicht auf einem Attribut positioniert ist (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Wechselt zum ersten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein Attribut vorhanden ist (der Reader wechselt zum ersten Attribut), andernfalls <see langword="false" /> (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Wechselt zum nächsten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein nächstes Attribut vorhanden ist; <see langword="false" />, wenn keine weiteren Attribute vorhanden sind.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Ruft den gekennzeichneten Namen des aktuellen Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des aktuellen Knotens. Beispielsweise ist <see langword="Name" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="bk:book" />.
Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlTextReader.NodeType" /> des Knotens ab. Die folgenden Knotentypen geben die jeweils aufgeführten Werte zurück. Alle anderen Knotentypen geben eine leere Zeichenfolge zurück.
  Knotentyp 
  name 
 <see langword="Attribute" /> Der Name des Attributs.  
  
 <see langword="DocumentType" /> Der Name des Dokumenttyps.  
  
 <see langword="Element" /> Der Tagname.  
  
 <see langword="EntityReference" /> Der Name der Entität, auf die verwiesen wird.  
  
 <see langword="ProcessingInstruction" /> Das Ziel der Verarbeitungsanweisung.  
  
 <see langword="XmlDeclaration" /> Das <see langword="xml" />-Zeichenfolgenliteral.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Namespaces unterstützt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft wurde nach einem Lesevorgang festgelegt (<see cref="P:System.Xml.XmlTextReader.ReadState" /> ist nicht <see langword="ReadState.Initial" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Ruft den Namespace-URI (entsprechend der Definition in der Namespacespezifikation des W3C) des Knotens ab, auf dem der Reader positioniert ist.</summary>
      <returns>Der Namespace-URI des aktuellen Knotens, andernfalls eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Ruft die <see cref="T:System.Xml.XmlNameTable" /> ab, die dieser Implementierung zugeordnet ist.</summary>
      <returns>Die <see langword="XmlNameTable" />, die das Abrufen der atomisierten Version einer Zeichenfolge innerhalb des Knotens erlaubt.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlNodeType" />-Werte, der den Typ des aktuellen Knotens darstellt.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Ruft einen Wert ab, der angibt, ob Leerraum und Attributwerte normalisiert werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn normalisiert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
      <exception cref="T:System.InvalidOperationException">Festlegen dieser Eigenschaft, wenn der Reader geschlossen ist (<see cref="P:System.Xml.XmlTextReader.ReadState" /> ist <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Ruft das dem aktuellen Knoten zugeordnete Namespacepräfix ab.</summary>
      <returns>Das dem aktuellen Knoten zugeordnete Namespacepräfix.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Ruft einen Wert ab, der angibt, ob die DTD-Verarbeitung ermöglicht werden soll, oder legt diesen fest. Diese Eigenschaft ist veraltet. Verwenden Sie stattdessen <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
      <returns>
        <see langword="true" />, wenn die DTD-Verarbeitung nicht zugelassen werden soll; andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Ruft das Anführungszeichen ab, mit dem der Wert eines Attributknotens eingeschlossen wird.</summary>
      <returns>Das Anführungszeichen (" oder '), mit dem der Wert eines Attributknotens eingeschlossen ist.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Liest den nächsten Knoten aus dem Stream.</summary>
      <returns>
        <see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, <see langword="false" />, wenn keine weiteren zu lesenden Knoten vorhanden sind.</returns>
      <exception cref="T:System.Xml.XmlException">Beim Analysieren des XML-Codes ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Löst den Attributwert in einen oder mehrere <see langword="Text" />-, <see langword="EntityReference" />- oder <see langword="EndEntity" />-Knoten auf.</summary>
      <returns>
        <see langword="true" />, wenn zurückzugebende Knoten vorhanden sind.
<see langword="false" />, wenn der Reader beim ersten Aufruf nicht auf einem Attributknoten positioniert ist oder alle Attributwerte gelesen wurden.
Ein leeres Attribut, z.B. <c>misc=""</c>, gibt <see langword="true" /> mit einem einzelnen Knoten mit dem Wert <see langword="String.Empty" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Decodiert Base64 und gibt die decodierten Binärbytes zurück.</summary>
      <param name="array">Das Array von Zeichen, das als Puffer dient, in den der Textinhalt geschrieben wird.</param>
      <param name="offset">Der nullbasierte Index im Array, der angibt, an welcher Position die Methode mit dem Schreiben in den Puffer beginnen kann.</param>
      <param name="len">Die Anzahl der in den Puffer zu schreibenden Bytes.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.Xml.XmlException">Die Base64-Sequenz ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0, oder <paramref name="len" /> &lt; 0, oder <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Decodiert <see langword="BinHex" /> und gibt die decodierten Binärbytes zurück.</summary>
      <param name="array">Das Bytearray, das als Puffer dient, in den die decodierten binären Bytes geschrieben werden.</param>
      <param name="offset">Der nullbasierte Index im Array, der angibt, an welcher Position die Methode mit dem Schreiben in den Puffer beginnen kann.</param>
      <param name="len">Die Anzahl der in den Puffer zu schreibenden Bytes.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.Xml.XmlException">Die <see langword="BinHex" />-Sequenz ist ungültig.</exception>
      <exception cref="T:System.ArgumentNullException">Der Wert von <paramref name="array" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0, oder <paramref name="len" /> &lt; 0, oder <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Liest den Textinhalt eines Elements in einen Zeichenpuffer. Diese Methode ist dafür entworfen, umfangreiche Streams mit eingebettetem Text mithilfe aufeinander folgender Aufrufe zu lesen.</summary>
      <param name="buffer">Das Array von Zeichen, das als Puffer dient, in den der Textinhalt geschrieben wird.</param>
      <param name="index">Die Position innerhalb des <paramref name="buffer" />, an der die Methode mit dem Schreiben von Textinhalt beginnen kann.</param>
      <param name="count">Die Anzahl der in den <paramref name="buffer" /> zu schreibenden Zeichen.</param>
      <returns>Die Anzahl von gelesenen Zeichen. Diese kann <see langword="0" /> (null) sein, wenn der Reader nicht auf einem Element positioniert ist oder kein weiterer Textinhalt vorhanden ist, der im aktuellen Kontext zurückgegeben werden kann.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> ist größer als der in <paramref name="buffer" /> angegebene Bereich (Puffergröße – <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />
        <see langword="&lt; 0" /> oder <paramref name="count" /><see langword="&lt; 0" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die <see langword="Base64" />-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> wird vom aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die <see langword="BinHex" />-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlTextReader" />-Implementierung unterstützt diese Methode nicht.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den Base64-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlTextReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den <see langword="BinHex" />-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Ruft den Zustand des Readers ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.ReadState" />-Werte.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Liest den Inhalt eines Element- oder Textknotens als Zeichenfolge.</summary>
      <returns>Der Inhalt des Elementknotens oder Textknotens. Dies kann eine leere Zeichenfolge sein, wenn der Reader auf einem anderen Knotentyp als einem Element- oder Textknoten positioniert ist oder wenn im aktuellen Kontext kein weiterer Textinhalt zurückgegeben werden kann.
<see langword="Note:" /> Der Textknoten kann entweder ein Elementknoten oder ein Attributtextknoten sein.</returns>
      <exception cref="T:System.Xml.XmlException">Beim Analysieren des XML-Codes ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.InvalidOperationException">Es wurde versucht, eine ungültige Operation auszuführen.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Setzt den Zustand des Readers auf ReadState.Initial zurück.</summary>
      <exception cref="T:System.InvalidOperationException">Aufruf von <see langword="ResetState" />, wenn der Reader unter Verwendung von <see cref="T:System.Xml.XmlParserContext" /> erstellt wurde.</exception>
      <exception cref="T:System.Xml.XmlException">Dokumente in einem einzelnen Stream verwenden nicht dieselbe Codierung.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Löst den Entitätsverweis für <see langword="EntityReference" />-Knoten auf.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Überspringt die untergeordneten Elemente des aktuellen Knotens.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Ein <see cref="T:System.Xml.XmlNamespaceScope" />-Wert, der den Typ der Namespaceknoten angibt, die zurückgegeben werden sollen.</param>
      <returns>Ein <see cref="T:System.Collections.IDictionary" />, das die derzeit im Gültigkeitsbereich enthaltenen Namespaces enthält.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI gesucht werden soll.</param>
      <returns>Der Namespace-URI, der dem Präfix zugeordnet ist. <see langword="null" />, wenn das Präfix keinem Namespace-URI zugeordnet ist.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Der Namespace-URI, dessen Präfix gesucht werden soll.</param>
      <returns>Das Präfix, das dem Namespace-URI zugeordnet ist; <see langword="null" />, wenn der Namespace-URI keinem Präfix zugeordnet ist.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Ruft den Textwert des aktuellen Knotens ab.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlTextReader.NodeType" /> des Knotens ab. In der folgenden Tabelle sind Knotentypen aufgeführt, die einen zurückzugebenden Wert haben. Alle anderen Knotentypen geben <see langword="String.Empty" /> zurück.
  Knotentyp 
  Wert 
 <see langword="Attribute" /> Der Wert des Attributs.  
  
 <see langword="CDATA" /> Der Inhalt des CDATA-Abschnitts.  
  
 <see langword="Comment" /> Der Inhalt des Kommentars.  
  
 <see langword="DocumentType" /> Die interne Teilmenge.  
  
 <see langword="ProcessingInstruction" /> Der gesamte Inhalt mit Ausnahme des Ziels.  
  
 <see langword="SignificantWhitespace" /> Der Leerraum innerhalb eines <see langword="xml:space" />= 'preserve'-Bereichs.  
  
 <see langword="Text" /> Der Inhalt des Textknotens.  
  
 <see langword="Whitespace" /> Der Leerraum zwischen Markups.  
  
 <see langword="XmlDeclaration" /> Der Inhalt der Deklaration.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Ruft einen Wert ab, der angibt, wie Leerraum behandelt wird, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.WhitespaceHandling" />-Werte. Der Standardwert ist <see langword="WhitespaceHandling.All" /> (gibt <see langword="Whitespace" />-Knoten und <see langword="SignificantWhitespace" />-Knoten zurück).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Festlegen dieser Eigenschaft, wenn der Reader geschlossen ist (<see cref="P:System.Xml.XmlTextReader.ReadState" /> ist <see langword="ReadState.Closed" />).</exception>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Legt den <see cref="T:System.Xml.XmlResolver" /> fest, der zur Auflösung von DTD-Verweisen verwendet wird.</summary>
      <returns>Der zu verwendende <see langword="XmlResolver" />. Wenn er auf <see langword="null" /> festgelegt ist, werden externe Ressourcen nicht aufgelöst.
In Version 1.1 von .NET Framework muss der Aufrufer für die Angabe eines <see langword="XmlResolver" /> voll vertrauenswürdig sein.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Ruft den aktuellen <see langword="xml:space" />-Bereich ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlSpace" />-Werte. Wenn kein <see langword="xml:space" />-Bereich vorhanden ist, wird für diese Eigenschaft standardmäßig <see langword="XmlSpace.None" /> festgelegt.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Stellt einen Writer für die schnelle, nicht zwischengespeicherte Vorwärtsgenerierung von Streams oder Dateien dar, die XML-Daten gemäß den W3C-Empfehlungen zu XML (Extensible Markup Language), Version 1.0, und zu Namespaces in XML enthalten.
Ab .NET Framework 2.0 sollten Sie stattdessen die <see cref="T:System.Xml.XmlWriter" />-Klasse verwenden.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Erstellt mithilfe des angegebenen Streams und der angegebenen Codierung eine Instanz der <see langword="XmlTextWriter" />-Klasse.</summary>
      <param name="w">Der Stream, in den geschrieben werden soll.</param>
      <param name="encoding">Die zu generierende Codierung. Wenn die Codierung <see langword="null" /> ist, wird der Stream UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</param>
      <exception cref="T:System.ArgumentException">Die Codierung wird nicht unterstützt, oder es kann nicht in den Stream geschrieben werden.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="w" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Erstellt mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> eine Instanz der <see langword="XmlTextWriter" />-Klasse.</summary>
      <param name="w">Der <see langword="TextWriter" />, in den geschrieben werden soll. Hierbei wird vorausgesetzt, dass der <see langword="TextWriter" /> bereits auf die korrekte Codierung eingestellt ist.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Erstellt mithilfe der angegebenen Datei eine Instanz der <see cref="T:System.Xml.XmlTextWriter" />-Klasse.</summary>
      <param name="filename">Der Name der Datei, in die geschrieben werden soll. Wenn die Datei vorhanden ist, wird diese abgeschnitten und mit dem neuen Inhalt überschrieben.</param>
      <param name="encoding">Die zu generierende Codierung. Wenn die Codierung <see langword="null" /> ist, wird die Datei UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</param>
      <exception cref="T:System.ArgumentException">Die Codierung wird nicht unterstützt; der Dateiname ist leer oder enthält nur Leerraum bzw. ein oder mehrere ungültige(s) Zeichen.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Der Zugriff wird verweigert.</exception>
      <exception cref="T:System.ArgumentNullException">Der Dateiname ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis, in das geschrieben werden soll, wurde nicht gefunden.</exception>
      <exception cref="T:System.IO.IOException">Der Dateiname enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Ruft das zugrunde liegende Streamobjekt ab.</summary>
      <returns>Der Stream, in den der <see langword="XmlTextWriter" /> schreibt oder <see langword="null" />, wenn der <see langword="XmlTextWriter" /> mithilfe eines <see cref="T:System.IO.TextWriter" /> erstellt wurde, der nicht von der <see cref="T:System.IO.StreamWriter" />-Klasse vererbt wird.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Schließt diesen Stream und den zugrunde liegenden Stream.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Entleert den Pufferinhalt in die zugrunde liegenden Streams und entleert den zugrunde liegenden Stream ebenfalls.</summary>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Gibt die Formatierung der Ausgabe an.</summary>
      <returns>Einer der <see cref="T:System.Xml.Formatting" />-Werte. Der Standardwert ist <see langword="Formatting.None" /> (keine besondere Formatierung).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Ruft ab oder legt fest, wie viele IndentChars für jede Ebene der Hierarchie geschrieben werden sollen, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</summary>
      <returns>Anzahl von <see langword="IndentChars" /> für jede Ebene. Der Standardwert ist&amp;#160;2.</returns>
      <exception cref="T:System.ArgumentException">Diese Eigenschaft wird auf einen negativen Wert festgelegt.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Ruft ab oder legt fest, welches Zeichen für den Einzug verwendet werden soll, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</summary>
      <returns>Das für den Einzug zu verwendende Zeichen. Standardmäßig wird ein Leerzeichen verwendet.

Sie können diese Eigenschaft mit dem <see langword="XmlTextWriter" /> auf ein beliebiges Zeichen festlegen. Um die Gültigkeit des XML-Codes sicherzustellen, müssen Sie ein gültiges Leerraumzeichen wie 0x9, 0x10, 0x13 oder 0x20 angeben.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Gibt das nächstliegende Präfix zurück, das im aktuellen Namespacebereich für den Namespace-URI definiert ist.</summary>
      <param name="ns">Der Namespace-URI, dessen Präfix gesucht werden soll.</param>
      <returns>Das passende Präfix. Oder <see langword="null" />, wenn im aktuellen Gültigkeitsbereich kein übereinstimmender Namespace-URI gefunden wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um Namespaces zu unterstützen, andernfalls <see langword="false" />.
Die Standardeinstellung ist <see langword="true" />.</returns>
      <exception cref="T:System.InvalidOperationException">Diese Eigenschaft können Sie nur im Zustand <see langword="WriteState.Start" /> ändern.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Ruft ab oder legt fest, welches Zeichen als Anführungszeichen für Attributwerte verwendet werden soll.</summary>
      <returns>Das als Anführungszeichen für Attributwerte zu verwendende Zeichen. Dabei muss es sich um ein einzelnes&amp;Anführungszeichen (#39;) oder doppelte Anführungszeichen (&amp;#34;). Standardmäßig werden doppelte Anführungszeichen verwendet.</returns>
      <exception cref="T:System.ArgumentException">Diese Eigenschaft wird statt auf ein einfaches oder doppeltes Anführungszeichen auf einen anderen Wert festgelegt.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert die angegebenen binären Bytes als base64 und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert die angegebenen binären Bytes als Binhex und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Schreibt einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</summary>
      <param name="text">Text, der in den CDATA-Block eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Erzwingt das Generieren einer Zeichenentität für den angegebenen Unicode-Zeichenwert.</summary>
      <param name="ch">Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</param>
      <exception cref="T:System.ArgumentException">Das Zeichen liegt im Ersatzzeichenpaar-Bereich, <see langword="0xd800" /> - <see langword="0xdfff" />, oder aus dem Text würde ein wohlgeformtes XML-Dokument resultieren.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt Text in jeweils einen Puffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />. Der Aufruf führt zur Aufteilung eines Ersatzzeichenpaars oder zum Schreiben eines ungültigen Ersatzzeichenpaars.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Schreibt den Kommentar &lt;!--...--&gt; mit dem angegebenen Text.</summary>
      <param name="text">Text, der in den Kommentar eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Schreibt die DOCTYPE-Deklaration mit dem angegebenen Namen und optionalen Attributen.</summary>
      <param name="name">Der Name des DOCTYPE. Dieser darf nicht leer sein.</param>
      <param name="pubid">Bei einem Wert ungleich NULL wird auch PUBLIC "pubid" "sysid" geschrieben, wobei <paramref name="pubid" /> und <paramref name="sysid" /> durch die Werte der angegebenen Argumente ersetzt werden.</param>
      <param name="sysid">Wenn <paramref name="pubid" /> NULL und <paramref name="sysid" /> ungleich NULL ist, wird SYSTEM "sysid" geschrieben, wobei <paramref name="sysid" /> durch den Wert dieses Arguments ersetzt wird.</param>
      <param name="subset">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde außerhalb des Prologs (nach dem Stammelement) aufgerufen.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> oder <see langword="null" /> ist <see langword="String.Empty" />.

oder -
Der Wert für <paramref name="name" /> würde zu ungültigem XML-Code führen.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Schließt den vorherigen Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Schließt alle geöffneten Elemente oder Attribute und setzt den Writer in den Startzustand zurück.</summary>
      <exception cref="T:System.ArgumentException">Das XML-Dokument ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Schließt ein Element und löst den entsprechenden Namespacebereich auf.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>Schreibt einen Entitätsverweis als <see langword="&amp;name;" />.</summary>
      <param name="name">Name des Entitätsverweises.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument, oder <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Schließt ein Element und löst den entsprechenden Namespacebereich auf.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Schreibt den angegebenen Namen und prüft dessen Gültigkeit entsprechend der W3C-Empfehlung für XML, Version 1.0.</summary>
      <param name="name">Zu schreibender Name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist kein gültiger XML-Name, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Schreibt den angegebenen Namen und prüft, ob es ein gültiger <see langword="NmToken" /> ist, entsprechend der W3C-Empfehlung für XML, Version 1.0.</summary>
      <param name="name">Zu schreibender Name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist kein gültiges <see langword="NmToken" />; oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Schreibt eine Verarbeitungsanweisung mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</summary>
      <param name="name">Name der Verarbeitungsanweisung.</param>
      <param name="text">In die Verarbeitungsanweisung einzufügender Text.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.
<paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.
Diese Methode wird zum Erstellen einer XML-Deklaration nach einem Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> verwendet.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Schreibt den durch den Namespace angegebenen Namen. Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</summary>
      <param name="localName">Der zu schreibende lokale Name.</param>
      <param name="ns">Der Namespace-URI, der dem Namen zugeordnet werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.
<paramref name="localName" /> ist kein entsprechend der W3C-Spezifikation für Namespaces gültiger Name.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt unformatiertes Markup manuell aus einem Zeichenpuffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Schreibt unformatiertes Markup manuell aus einer Zeichenfolge.</summary>
      <param name="data">Zeichenfolge, die den zu schreibenden Text enthält.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Schreibt den Anfang eines Attributs.</summary>
      <param name="prefix">
        <see langword="Namespace" />-Präfix des Attributs.</param>
      <param name="localName">
        <see langword="LocalName" /> des Attributs.</param>
      <param name="ns">
        <see langword="NamespaceURI" /> des Attributs.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Schreibt die XML-Deklaration mit der Version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Schreibt die XML-Deklaration mit der Version "1.0" und dem eigenständigen Attribut.</summary>
      <param name="standalone">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</param>
      <exception cref="T:System.InvalidOperationException">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</summary>
      <param name="prefix">Das Namespacepräfix des Elements.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI, der dem Element zugeordnet werden soll. Wenn sich dieser Namespace bereits im Gültigkeitsbereich befindet und dem Namespace ein Präfix zugeordnet ist, schreibt der Writer automatisch auch das Präfix.</param>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Ruft den Zustand des Writers ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.WriteState" />-Werte.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Schreibt den angegebenen Textinhalt.</summary>
      <param name="text">Zu schreibender Text.</param>
      <exception cref="T:System.ArgumentException">Die Textzeichenfolge enthält ein ungültiges Ersatzzeichenpaar.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Generiert und schreibt die Ersatzzeichenentität für das Ersatzzeichenpaar.</summary>
      <param name="lowChar">Das niedrige Ersatzzeichen. Dabei muss es sich um einen Wert zwischen <see langword="0xDC00" /> und <see langword="0xDFFF" /> handeln.</param>
      <param name="highChar">Das hohe Ersatzzeichen. Dabei muss es sich um einen Wert zwischen <see langword="0xD800" /> und <see langword="0xDBFF" /> handeln.</param>
      <exception cref="T:System.Exception">Es wurde ein ungültiges Ersatzzeichenpaar übergeben.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Schreibt den angegebenen Leerraum.</summary>
      <param name="ws">Die Zeichenfolge von Leerraumzeichen.</param>
      <exception cref="T:System.ArgumentException">Die Zeichenfolge enthält Zeichen, die keine Leerraumzeichen sind.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" /> oder <see langword="null" />, wenn im aktuellen Bereich kein <see langword="xml:lang" /> vorhanden ist.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Ruft einen <see cref="T:System.Xml.XmlSpace" /> ab, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</summary>
      <returns>Ein <see langword="XmlSpace" />, der den aktuellen <see langword="xml:space" />-Bereich darstellt.
  Wert 
  Bedeutung 
  Keine 
  Dies ist der Standardwert, wenn kein <see langword="xml:space" />-Bereich vorhanden ist.  
  
  Standard 
  Der aktuelle Bereich ist <see langword="xml:space" />="default".  
  
  Preserve 
  Der aktuelle Bereich ist <see langword="xml:space" />="preserve".</returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Stellt den XML-Typ für die Zeichenfolge dar. Dies ermöglicht das Lesen der Zeichenfolge als bestimmten XML-Typ, z. B. als CDATA-Abschnittstyp.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>CDATA-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>ENTITIES-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>ENTITY-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>ENUMERATION-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>ID-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>IDREF-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>IDREFS-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>NCName-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>NMTOKEN-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>NMTOKENS-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Kein Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>NOTATION-Typ.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>QName-Typ.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Löst externe XML-Ressourcen auf, die durch einen URI (Uniform Resource Identifier) benannt werden.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlUrlResolver" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Ruft die Cacherichtlinie für das zugrunde liegende <see cref="T:System.Net.WebRequest" />-Objekt ab oder legt diese fest.</summary>
      <returns>Die Cacherichtlinie für die zugrunde liegende Webanforderung.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Legt Anmeldeinformationen zum Authentifizieren von Webanforderungen fest.</summary>
      <returns>Die Anmeldeinformationen zum Authentifizieren von Webanforderungen. Wenn diese Eigenschaft nicht festgelegt ist, wird als Standardwert <see langword="null" /> verwendet, was bedeutet, dass <see langword="XmlUrlResolver" /> über keine Benutzeranmeldeinformationen verfügt.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Implementierung gibt nur <see cref="T:System.IO.Stream" /> zurück.</param>
      <returns>Ein stream-Objekt oder <see langword="null" />, wenn ein anderer Typ als „stream“ angegeben ist.</returns>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> ist weder <see langword="null" /> noch vom Typ <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">Der angegebene URI ist kein absoluter URI.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Es ist ein Laufzeitfehler aufgetreten (z. B. eine unterbrochene Serververbindung).</exception>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
      <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
      <param name="role">Derzeit nicht verwendet.</param>
      <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Implementierung gibt nur <see cref="T:System.IO.Stream" /> zurück.</param>
      <returns>Ein stream-Objekt oder <see langword="null" />, wenn ein anderer Typ als „stream“ angegeben ist.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Ruft den Netzwerkproxy für das zugrunde liegende <see cref="T:System.Net.WebRequest" />-Objekt ab oder legt diesen fest.</summary>
      <returns>Der beim Zugriff auf die Internetressource zu verwendende <see cref="T:System.Net.IWebProxy" />.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Löst den absoluten URI ausgehend von der Basis und relativen URIs auf.</summary>
      <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
      <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
      <returns>Der absolute URI oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> ist <see langword="null" /> oder <paramref name="relativeUri" /> ist <see langword="null" />.</exception>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Stellt einen Reader dar, der die Schemavalidierung für DTD (Dokumenttypdefinition), XDR (XML-Data Reduced)-Schemas und XSD (XML Schema Definition Language)-Schemas bereitstellt.
Diese Klasse ist veraltet. Ausgehend von .NET Framework 2.0 wird empfohlen, die <see cref="T:System.Xml.XmlReaderSettings" />-Klasse und die <see cref="Overload:System.Xml.XmlReader.Create" />-Methode zum Erstellen eines überprüfenden XML-Readers zu verwenden.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlValidatingReader" />-Klasse mit den angegebenen Werten.</summary>
      <param name="xmlFragment">Der Stream, der das zu analysierende XML-Fragment enthält.</param>
      <param name="fragType">Der <see cref="T:System.Xml.XmlNodeType" /> des XML-Fragments. Damit wird der mögliche Inhalt des Fragments bestimmt (siehe Tabelle unten).</param>
      <param name="context">Der <see cref="T:System.Xml.XmlParserContext" />, in dem das XML-Fragment analysiert werden soll. Dazu gehören die zu verwendende <see cref="T:System.Xml.XmlNameTable" />, die Codierung, der Namespacebereich, der aktuelle <see langword="xml:lang" />-Bereich und der aktuelle <see langword="xml:space" />-Bereich.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ist keiner der in der folgenden Tabelle aufgeführten Knotentypen.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlValidatingReader" />-Klasse mit den angegebenen Werten.</summary>
      <param name="xmlFragment">Die Zeichenfolge, die das zu analysierende XML-Fragment enthält.</param>
      <param name="fragType">Der <see cref="T:System.Xml.XmlNodeType" /> des XML-Fragments. Damit wird auch der mögliche Inhalt der Fragmentzeichenfolge bestimmt (siehe Tabelle unten).</param>
      <param name="context">Der <see cref="T:System.Xml.XmlParserContext" />, in dem das XML-Fragment analysiert werden soll. Dazu gehören die zu verwendende <see cref="T:System.Xml.NameTable" />, die Codierung, der Namespacebereich, der aktuelle xml:lang-Bereich und der aktuelle xml:space-Bereich.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> ist keiner der in der folgenden Tabelle aufgeführten Knotentypen.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Initialisiert eine neue Instanz der <see langword="XmlValidatingReader" />-Klasse, die den vom angegebenen <see cref="T:System.Xml.XmlReader" /> zurückgegebenen Inhalt validiert.</summary>
      <param name="reader">Der <see langword="XmlReader" />, aus dem während der Überprüfung gelesen werden soll. Die aktuelle Implementierung unterstützt nur <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">Der angegebene Reader ist kein <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Ruft die Anzahl der Attribute im aktuellen Knoten ab.</summary>
      <returns>Die Anzahl der Attribute im aktuellen Knoten. Hierzu zählen auch Standardattribute.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Ruft den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Basis-URI des aktuellen Knotens.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlValidatingReader" /> die Methoden für das Lesen von Inhalt im Binärformat implementiert.</summary>
      <returns>
        <see langword="true" />, wenn die Methoden für das Lesen von Inhalt im Binärformat implementiert werden, andernfalls <see langword="false" />. Die <see cref="T:System.Xml.XmlValidatingReader" />-Klasse gibt <see langword="true" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Ruft einen Wert ab, der angibt, ob dieser Reader Entitäten analysieren und auflösen kann.</summary>
      <returns>
        <see langword="true" />, wenn der Reader Entitäten analysieren und auflösen kann, andernfalls <see langword="false" />. <see langword="XmlValidatingReader" /> gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Ändert den <see cref="P:System.Xml.XmlReader.ReadState" /> in "Closed".</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Ruft die Tiefe des aktuellen Knotens im XML-Dokument ab.</summary>
      <returns>Die Tiefe des aktuellen Knotens im XML-Dokument.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Ruft das Codierungsattribut für das Dokument ab.</summary>
      <returns>Der Codierungswert. Wenn kein Codierungsattribut vorhanden ist und keine Bytereihenfolgemarkierung vorliegt, wird dieser auf den Standardwert UTF-8 festgelegt.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Ruft einen Wert ab, der angibt, wie der Reader Entitäten behandelt, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.EntityHandling" />-Werte. Wenn kein <see langword="EntityHandling" /> angegeben ist, wird dieses auf den Standardwert EntityHandling.ExpandEntities festgelegt.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Es wurde ein ungültiger Wert angegeben.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Ruft einen Wert ab, der angibt, ob sich der Reader am Ende des Streams befindet.</summary>
      <returns>
        <see langword="true" />, wenn der Reader am Ende des Streams positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Index ab.</summary>
      <param name="i">Der Index des Attributs. Der Index ist nullbasiert. (Das erste Attribut hat den Index 0.)</param>
      <returns>Der Wert des angegebenen Attributs.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen Namen ab.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI (Uniform Resource Identifier) ab.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Der Wert des angegebenen Attributs. Wenn das Attribut nicht gefunden wurde, wird <see langword="null" /> zurückgegeben. Diese Methode verschiebt den Reader nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Ruft einen Wert ab, der angibt, ob die Klasse Zeileninformationen zurückgeben kann.</summary>
      <returns>
        <see langword="true" />, wenn die Klasse Zeileninformationen zurückgeben kann, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten einen anderen <see cref="P:System.Xml.XmlValidatingReader.Value" /> als String.Empty aufweisen darf.</summary>
      <returns>
        <see langword="true" />, wenn der Knoten, auf dem der Reader derzeit positioniert ist, einen <see langword="Value" /> aufweisen darf, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein Attribut ist, das aus dem in der DTD (Dokumenttypdefinition) oder im Schema definierten Standardwert generiert wurde.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Attribut ist, dessen Wert aus dem in der DTD oder dem Schema definierten Standardwert generiert wurde. <see langword="false" />, wenn der Attributwert explizit festgelegt wurde.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten ein leeres Element ist (z.B. <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein Element ist (<see cref="P:System.Xml.XmlValidatingReader.NodeType" /> gleich <see langword="XmlNodeType.Element" />), das mit <c>/&gt;</c>endet. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Ruft die aktuelle Zeilennummer ab.</summary>
      <returns>Die aktuelle Zeilennummer. Der Anfangswert für diese Eigenschaft ist 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Ruft die aktuelle Zeilenposition ab.</summary>
      <returns>Die aktuelle Zeilenposition. Der Anfangswert für diese Eigenschaft ist 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Ruft den lokalen Namen des aktuellen Knotens ab.</summary>
      <returns>Der Name des aktuellen Knotens ohne das Präfix. Beispielsweise ist <see langword="LocalName" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="book" />.
Bei unbenannten Knotentypen wie <see langword="Text" />, <see langword="Comment" /> usw. gibt diese Eigenschaft String.Empty zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Löst ein Namespacepräfix im Gültigkeitsbereich des aktuellen Elements auf.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI (Uniform Resource Identifier) aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu erhalten, übergeben Sie eine leere Zeichenfolge.</param>
      <returns>Der Namespace-URI, dem das Präfix zugeordnet ist, oder <see langword="null" />, wenn kein entsprechendes Präfix gefunden wird.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Wechselt zum Attribut mit dem angegebenen Index.</summary>
      <param name="i">Der Index des Attributs.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="i" />-Parameter ist kleiner als 0 (null) oder größer als oder gleich <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Wechselt zum Attribut mit dem angegebenen Namen.</summary>
      <param name="name">Der qualifizierte Name des Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Wechselt zu dem Attribut mit dem angegebenen lokalen Namen und Namespace-URI (Uniform Resource Identifier).</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>
        <see langword="true" />, wenn das Attribut gefunden wurde, andernfalls <see langword="false" />. Bei <see langword="false" /> ändert sich die Position des Readers nicht.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Wechselt zu dem Element, das den aktuellen Attributknoten enthält.</summary>
      <returns>
        <see langword="true" />, wenn der Reader auf einem Attribut positioniert ist (der Reader wechselt zu dem Element, das das Attribut besitzt); <see langword="false" />, wenn der Reader nicht auf einem Attribut positioniert ist (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Wechselt zum ersten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein Attribut vorhanden ist (der Reader wechselt zum ersten Attribut), andernfalls <see langword="false" /> (die Position des Readers bleibt unverändert).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Wechselt zum nächsten Attribut.</summary>
      <returns>
        <see langword="true" />, wenn ein nächstes Attribut vorhanden ist; <see langword="false" />, wenn keine weiteren Attribute vorhanden sind.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Ruft den gekennzeichneten Namen des aktuellen Knotens ab.</summary>
      <returns>Der gekennzeichnete Name des aktuellen Knotens. Beispielsweise ist <see langword="Name" /> für das-Element <c>&lt;BK: Book&gt;</c><see langword="bk:book" />.
Der zurückgegebene Name hängt vom <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> des Knotens ab. Die folgenden Knotentypen geben die jeweils aufgeführten Werte zurück. Alle anderen Knotentypen geben eine leere Zeichenfolge zurück.
  Knotentyp 
  name 
 <see langword="Attribute" /> Der Name des Attributs.  
  
 <see langword="DocumentType" /> Der Name des Dokumenttyps.  
  
 <see langword="Element" /> Der Tagname.  
  
 <see langword="EntityReference" /> Der Name der Entität, auf die verwiesen wird.  
  
 <see langword="ProcessingInstruction" /> Das Ziel der Verarbeitungsanweisung.  
  
 <see langword="XmlDeclaration" /> Das <see langword="xml" />-Zeichenfolgenliteral.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Namespaces unterstützt werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>Ruft den Namespace-URI (Uniform Resource Identifier, entsprechend der Definition in der Namespacespezifikation des W3C, World Wide Web Consortium) des Knotens ab, auf dem der Reader positioniert ist.</summary>
      <returns>Der Namespace-URI des aktuellen Knotens, andernfalls eine leere Zeichenfolge.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Ruft die <see cref="T:System.Xml.XmlNameTable" /> ab, die dieser Implementierung zugeordnet ist.</summary>
      <returns>
        <see langword="XmlNameTable" />, die das Abrufen der atomisierten Version einer Zeichenfolge innerhalb des Knotens erlaubt.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Ruft den Typ des aktuellen Knotens ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlNodeType" />-Werte, der den Typ des aktuellen Knotens darstellt.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Ruft das dem aktuellen Knoten zugeordnete Namespacepräfix ab.</summary>
      <returns>Das dem aktuellen Knoten zugeordnete Namespacepräfix.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Ruft das Anführungszeichen ab, mit dem der Wert eines Attributknotens eingeschlossen wird.</summary>
      <returns>Das Anführungszeichen (" oder '), mit dem der Wert eines Attributknotens eingeschlossen ist.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Liest den nächsten Knoten aus dem Stream.</summary>
      <returns>
        <see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, <see langword="false" />, wenn keine weiteren zu lesenden Knoten vorhanden sind.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Löst den Attributwert in einen oder mehrere <see langword="Text" />-, <see langword="EntityReference" />- oder <see langword="EndEntity" />-Knoten auf.</summary>
      <returns>
        <see langword="true" />, wenn zurückzugebende Knoten vorhanden sind.
<see langword="false" />, wenn der Reader beim ersten Aufruf nicht auf einem Attributknoten positioniert ist oder alle Attributwerte gelesen wurden.
Ein leeres Attribut, z.B. <c>misc=""</c>, gibt <see langword="true" /> mit einem einzelnen Knoten mit dem Wert String.Empty zurück.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die Base64-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest den Inhalt und gibt die BinHex-decodierten binären Bytes zurück.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> wird auf dem aktuellen Knoten nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlValidatingReader" />-Implementierung unterstützt diese Methode nicht.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den Base64-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlValidatingReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Liest das Element und decodiert den BinHex-Inhalt.</summary>
      <param name="buffer">Der Puffer, in den der resultierende Text kopiert werden soll. Dieser Wert darf nicht <see langword="null" /> sein.</param>
      <param name="index">Der Offset im Puffer, an dem mit dem Kopieren des Ergebnisses begonnen werden soll.</param>
      <param name="count">Die maximale Anzahl von Bytes, die in den Puffer kopiert werden sollen. Diese Methode gibt die tatsächliche Anzahl von kopierten Bytes zurück.</param>
      <returns>Die Anzahl der in den Puffer geschriebenen Bytes.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="buffer" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten ist kein Elementknoten.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Index im Puffer oder Index + Anzahl übersteigen die Größe des zugeordneten Puffers.</exception>
      <exception cref="T:System.NotSupportedException">Die <see cref="T:System.Xml.XmlValidatingReader" />-Implementierung unterstützt diese Methode nicht.</exception>
      <exception cref="T:System.Xml.XmlException">Das Element enthält gemischten Inhalt.</exception>
      <exception cref="T:System.FormatException">Der Inhalt kann nicht in den angeforderten Typ konvertiert werden.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Ruft den <see cref="T:System.Xml.XmlReader" /> ab, mit dem dieser <see langword="XmlValidatingReader" /> erstellt wird.</summary>
      <returns>Der im Konstruktor angegebene <see langword="XmlReader" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Ruft den Zustand des Readers ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.ReadState" />-Werte.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Liest den Inhalt eines Element- oder Textknotens als Zeichenfolge.</summary>
      <returns>Der Inhalt des Elementknotens oder Textknotens. Dies kann eine leere Zeichenfolge sein, wenn der Reader auf einem anderen Knotentyp als einem Element- oder Textknoten positioniert ist oder wenn im aktuellen Kontext kein weiterer Textinhalt zurückgegeben werden kann.

Der Textknoten kann entweder ein Elementknoten oder ein Attributtextknoten sein.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Ruft den Typ der Common Language Runtime für den angegebenen XSD-Typ (XML Schema Definition) ab.</summary>
      <returns>Der Typ der Common Language Runtime für den angegebenen XSD (XML Schema Definition)-Typ.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Löst den Entitätsverweis für <see langword="EntityReference" />-Knoten auf.</summary>
      <exception cref="T:System.InvalidOperationException">Der Reader ist nicht auf einem <see langword="EntityReference" />-Knoten positioniert.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Ruft eine für die Validierung zu verwendende <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> ab.</summary>
      <returns>Die für die Validierung zu verwendende <see langword="XmlSchemaCollection" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Ruft ein Objekt vom Typ Schema ab.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> oder <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, abhängig davon, ob der Knotenwert ein integrierter XSD-Typ (XML Schema Definition Language) oder ein benutzerdefinierter simpleType bzw. complexType ist. <see langword="null" />, wenn der aktuelle Knoten über keinen Schematyp verfügt.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Ein <see cref="T:System.Xml.XmlNamespaceScope" />-Objekt, das den Bereich des Readers identifiziert.</param>
      <returns>Ein T:System.Collections.IDictionary-Objekt, das die Namespaces im Bereich identifiziert.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Das Namespacepräfix.</param>
      <returns>Ein Zeichenfolgenwert mit dem Namespace-URI, der dem Präfix zugeordnet ist.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Der dem Präfix zugeordnete Namespace.</param>
      <returns>Ein Zeichenfolgenwert mit dem Namespacepräfix, der dem <paramref name="namespaceName" /> zugeordnet ist.</returns>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Legt einen Ereignishandler für den Empfang von Informationen über Validierungsfehler von DTDs (Dokumenttypdefinition), XDR (XML-Data Reduced)-Schemas und XSD (XML Schema Definition Language)-Schemas fest.</summary>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Ruft einen Wert ab, der den Typ der auszuführenden Validierung angibt, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.ValidationType" />-Werte. Wenn diese Eigenschaft nicht festgelegt ist, wird sie auf den Standardwert ValidationType.Auto festgelegt.</returns>
      <exception cref="T:System.InvalidOperationException">Festlegen der Eigenschaft nach Aufruf einer Read-Methode.</exception>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Ruft den Textwert des aktuellen Knotens ab.</summary>
      <returns>Der zurückgegebene Wert hängt vom <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> des Knotens ab. In der folgenden Tabelle sind Knotentypen aufgeführt, die einen zurückzugebenden Wert haben. Alle anderen Knotentypen geben String.Empty zurück.
  Knotentyp 
  Wert 
 <see langword="Attribute" /> Der Wert des Attributs.  
  
 <see langword="CDATA" /> Der Inhalt des CDATA-Abschnitts.  
  
 <see langword="Comment" /> Der Inhalt des Kommentars.  
  
 <see langword="DocumentType" /> Die interne Teilmenge.  
  
 <see langword="ProcessingInstruction" /> Der gesamte Inhalt mit Ausnahme des Ziels.  
  
 <see langword="SignificantWhitespace" /> Der Leerraum zwischen Markups bei einem Modell für gemischten Inhalt.  
  
 <see langword="Text" /> Der Inhalt des Textknotens.  
  
 <see langword="Whitespace" /> Der Leerraum zwischen Markups.  
  
 <see langword="XmlDeclaration" /> Der Inhalt der Deklaration.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Legt den <see cref="T:System.Xml.XmlResolver" /> fest, der zur Auflösung externer DTD- (Dokumenttypdefinitionen) und Schema-Positionsverweise verwendet wird. Der <see langword="XmlResolver" /> wird auch zum Behandeln von Import- oder Include-Elementen in XSD-Schemas (XML Schema Definition) verwendet.</summary>
      <returns>Der zu verwendende <see langword="XmlResolver" />. Wenn er auf <see langword="null" /> festgelegt ist, werden externe Ressourcen nicht aufgelöst.
In Version 1.1 von .NET Framework muss der Aufrufer für die Angabe eines <see langword="XmlResolver" /> voll vertrauenswürdig sein.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Ruft den aktuellen <see langword="xml:space" />-Bereich ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlSpace" />-Werte. Wenn kein <see langword="xml:space" />-Bereich vorhanden ist, wird für diese Eigenschaft standardmäßig <see langword="XmlSpace.None" /> festgelegt.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Stellt Leerzeichen im Elementinhalt dar.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlWhitespace" />-Klasse.</summary>
      <param name="strData">Die Leerzeichen im Knoten.</param>
      <param name="doc">Das <see cref="T:System.Xml.XmlDocument" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Erstellt ein Duplikat dieses Knotens.</summary>
      <param name="deep">
        <see langword="true" />, wenn die Teilstruktur unter dem angegebenen Knoten rekursiv geklont werden soll, <see langword="false" />, wenn nur der Knoten selbst geklont werden soll. Bei Leerzeichenknoten enthält der geklonte Knoten, unabhängig von der Parametereinstellung, immer den Datenwert.</param>
      <returns>Der geklonte Knoten.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Ruft den lokalen Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlWhitespace" />-Knoten gibt diese Eigenschaft <see langword="#whitespace" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Ruft den qualifizierten Namen des Knotens ab.</summary>
      <returns>Für <see langword="XmlWhitespace" />-Knoten gibt diese Eigenschaft <see langword="#whitespace" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Ruft den Typ des Knotens ab.</summary>
      <returns>Für <see langword="XmlWhitespace" />-Knoten ist der Wert <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Ruft das übergeordnete Element des aktuellen Knotens ab.</summary>
      <returns>Der übergeordnete <see cref="T:System.Xml.XmlNode" />-Knoten des aktuellen Knotens.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary>Ruft den Textknoten ab, der diesem Knoten unmittelbar vorausgeht.</summary>
      <returns>Gibt <see cref="T:System.Xml.XmlNode" /> zurück.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Ruft den Wert des Knotens ab oder legt diesen fest.</summary>
      <returns>Die im Knoten gefundenen Leerzeichen.</returns>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Xml.XmlWhitespace.Value" /> wird auf ungültige Leerraumzeichen festgelegt.</exception>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Speichert alle untergeordneten Elemente des Knotens im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see cref="T:System.Xml.XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Speichert den Knoten im angegebenen <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="w">Der <see cref="T:System.Xml.XmlWriter" />, in dem gespeichert werden soll.</param>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Stellt einen Writer für die schnelle, vorwärts gerichtete Generierung von Streams oder Dateien mit XML-Daten ohne Zwischenspeicherung dar.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlWriter" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse diesen Stream und den zugrunde liegenden Stream.</summary>
      <exception cref="T:System.InvalidOperationException">Nach dem Aufruf von <see langword="Close" /> ist ein weiterer Aufruf erfolgt, um mehr Ausgabedaten zu schreiben, oder das Ergebnis des Aufrufs ist ein ungültiges XML-Element.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlWriter" />-Instanz mit dem angegebenen Stream.</summary>
      <param name="output">Der Stream, in den geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> schreibt XML 1.0-Textsyntax und fügt diese an den angegebenen Stream an.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stream" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlWriter" />-Instanz mit dem Stream und dem <see cref="T:System.Xml.XmlWriterSettings" />-Objekt.</summary>
      <param name="output">Der Stream, in den geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> schreibt XML 1.0-Textsyntax und fügt diese an den angegebenen Stream an.</param>
      <param name="settings">Das <see cref="T:System.Xml.XmlWriterSettings" />-Objekt zum Konfigurieren der neuen <see cref="T:System.Xml.XmlWriter" />-Instanz. Wenn dies <see langword="null" /> ist, wird <see cref="T:System.Xml.XmlWriterSettings" /> mit Standardeinstellungen verwendet.
Wenn der <see cref="T:System.Xml.XmlWriter" /> mit der <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />-Methode verwendet wird, sollten Sie die <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft verwenden, um ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den korrekten Einstellungen abzurufen. Dieses Verfahren gewährleistet, dass das erstellte <see cref="T:System.Xml.XmlWriter" />-Objekt über die korrekten Ausgabeeinstellungen verfügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stream" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Erstellt mit dem angegebenen <see cref="T:System.Xml.XmlWriter" /> eine neue <see cref="T:System.IO.TextWriter" />-Instanz.</summary>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, in den geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> schreibt XML 1.0-Textsyntax und fügt diese an den angegebenen <see cref="T:System.IO.TextWriter" /> an.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="text" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Erstellt mit dem <see cref="T:System.Xml.XmlWriter" />-Objekt und dem <see cref="T:System.IO.TextWriter" />-Objekt eine neue <see cref="T:System.Xml.XmlWriterSettings" />-Instanz.</summary>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, in den geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> schreibt XML 1.0-Textsyntax und fügt diese an den angegebenen <see cref="T:System.IO.TextWriter" /> an.</param>
      <param name="settings">Das <see cref="T:System.Xml.XmlWriterSettings" />-Objekt zum Konfigurieren der neuen <see cref="T:System.Xml.XmlWriter" />-Instanz. Wenn dies <see langword="null" /> ist, wird <see cref="T:System.Xml.XmlWriterSettings" /> mit Standardeinstellungen verwendet.
Wenn der <see cref="T:System.Xml.XmlWriter" /> mit der <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />-Methode verwendet wird, sollten Sie die <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft verwenden, um ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den korrekten Einstellungen abzurufen. Dieses Verfahren gewährleistet, dass das erstellte <see cref="T:System.Xml.XmlWriter" />-Objekt über die korrekten Ausgabeeinstellungen verfügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="text" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlWriter" />-Instanz mit dem angegebenen Dateinamen.</summary>
      <param name="outputFileName">Die Datei, in die geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> erstellt eine Datei am dem angegebenen Pfad und schreibt darin in XML 1.0-Textsyntax. Der <paramref name="outputFileName" /> muss ein Dateisystempfad sein.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlWriter" />-Instanz mit dem Dateinamen und dem <see cref="T:System.Xml.XmlWriterSettings" />-Objekt.</summary>
      <param name="outputFileName">Die Datei, in die geschrieben werden soll. Der <see cref="T:System.Xml.XmlWriter" /> erstellt eine Datei am dem angegebenen Pfad und schreibt darin in XML 1.0-Textsyntax. Der <paramref name="outputFileName" /> muss ein Dateisystempfad sein.</param>
      <param name="settings">Das <see cref="T:System.Xml.XmlWriterSettings" />-Objekt zum Konfigurieren der neuen <see cref="T:System.Xml.XmlWriter" />-Instanz. Wenn dies <see langword="null" /> ist, wird <see cref="T:System.Xml.XmlWriterSettings" /> mit Standardeinstellungen verwendet.
Wenn der <see cref="T:System.Xml.XmlWriter" /> mit der <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />-Methode verwendet wird, sollten Sie die <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft verwenden, um ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den korrekten Einstellungen abzurufen. Dieses Verfahren gewährleistet, dass das erstellte <see cref="T:System.Xml.XmlWriter" />-Objekt über die korrekten Ausgabeeinstellungen verfügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Erstellt mit dem angegebenen <see cref="T:System.Xml.XmlWriter" /> eine neue <see cref="T:System.Text.StringBuilder" />-Instanz.</summary>
      <param name="output">Der <see cref="T:System.Text.StringBuilder" />, in den geschrieben werden soll. Vom <see cref="T:System.Xml.XmlWriter" /> geschriebener Inhalt wird an den <see cref="T:System.Text.StringBuilder" /> angefügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="builder" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Erstellt mit dem <see cref="T:System.Xml.XmlWriter" />-Objekt und dem <see cref="T:System.Text.StringBuilder" />-Objekt eine neue <see cref="T:System.Xml.XmlWriterSettings" />-Instanz.</summary>
      <param name="output">Der <see cref="T:System.Text.StringBuilder" />, in den geschrieben werden soll. Vom <see cref="T:System.Xml.XmlWriter" /> geschriebener Inhalt wird an den <see cref="T:System.Text.StringBuilder" /> angefügt.</param>
      <param name="settings">Das <see cref="T:System.Xml.XmlWriterSettings" />-Objekt zum Konfigurieren der neuen <see cref="T:System.Xml.XmlWriter" />-Instanz. Wenn dies <see langword="null" /> ist, wird <see cref="T:System.Xml.XmlWriterSettings" /> mit Standardeinstellungen verwendet.
Wenn der <see cref="T:System.Xml.XmlWriter" /> mit der <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />-Methode verwendet wird, sollten Sie die <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft verwenden, um ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den korrekten Einstellungen abzurufen. Dieses Verfahren gewährleistet, dass das erstellte <see cref="T:System.Xml.XmlWriter" />-Objekt über die korrekten Ausgabeeinstellungen verfügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="builder" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Erstellt eine neue <see cref="T:System.Xml.XmlWriter" />-Instanz mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />-Objekt.</summary>
      <param name="output">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, dass Sie als zugrunde liegenden Writer verwenden möchten.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das das angegebene <see cref="T:System.Xml.XmlWriter" />-Objekt umschließt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="writer" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Erstellt mit dem angegebenen <see cref="T:System.Xml.XmlWriter" />-Objekt und dem angegebenen <see cref="T:System.Xml.XmlWriter" />-Objekt eine neue <see cref="T:System.Xml.XmlWriterSettings" />-Instanz.</summary>
      <param name="output">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, dass Sie als zugrunde liegenden Writer verwenden möchten.</param>
      <param name="settings">Das <see cref="T:System.Xml.XmlWriterSettings" />-Objekt zum Konfigurieren der neuen <see cref="T:System.Xml.XmlWriter" />-Instanz. Wenn dies <see langword="null" /> ist, wird <see cref="T:System.Xml.XmlWriterSettings" /> mit Standardeinstellungen verwendet.
Wenn der <see cref="T:System.Xml.XmlWriter" /> mit der <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />-Methode verwendet wird, sollten Sie die <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft verwenden, um ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den korrekten Einstellungen abzurufen. Dieses Verfahren gewährleistet, dass das erstellte <see cref="T:System.Xml.XmlWriter" />-Objekt über die korrekten Ausgabeeinstellungen verfügt.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das das angegebene <see cref="T:System.Xml.XmlWriter" />-Objekt umschließt.</returns>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="writer" />-Wert ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Xml.XmlWriter" />-Klasse verwendeten Ressourcen frei.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Gibt die von <see cref="T:System.Xml.XmlWriter" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>Entleert beim Überschreiben in einer abgeleiteten Klasse den Inhalt des Puffers in die zugrunde liegenden Streams und leert den zugrunde liegenden Stream ebenfalls.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Entleert den Pufferinhalt asynchron in die zugrunde liegenden Streams und entleert den zugrunde liegenden Stream ebenfalls.</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="Flush" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das nächstliegende Präfix zurück, das im aktuellen Namespacebereich für den Namespace-URI definiert ist.</summary>
      <param name="ns">Der Namespace-URI, dessen Präfix gesucht werden soll.</param>
      <returns>Das passende Präfix oder <see langword="null" />, wenn im aktuellen Gültigkeitsbereich kein übereinstimmender Namespace-URI gefunden wird.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Ruft das zum Erstellen dieser <see cref="T:System.Xml.XmlWriterSettings" />-Instanz verwendete <see cref="T:System.Xml.XmlWriter" />-Objekt ab.</summary>
      <returns>Das zum Erstellen dieser Writer-Instanz verwendete <see cref="T:System.Xml.XmlWriterSettings" />-Objekt. Wenn dieser Writer nicht mit der <see cref="Overload:System.Xml.XmlWriter.Create" />-Methode erstellt wurde, gibt diese Eigenschaft <see langword="null" /> zurück.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse sämtliche an der aktuellen Position gefundenen Attribute in den <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">Der <see langword="XmlReader" />, aus dem die Attribute kopiert werden sollen.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute aus dem <see langword="XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">Der Reader ist nicht auf einem der Knoten <see langword="element" />, <see langword="attribute" /> oder <see langword="XmlDeclaration" /> positioniert.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Schreibt asynchron alle Attribute aus, die in der aktuellen Position in <see cref="T:System.Xml.XmlReader" /> gefunden werden.</summary>
      <param name="reader">Der <see langword="XmlReader" />, aus dem die Attribute kopiert werden sollen.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute aus dem <see langword="XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteAttributes" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse das Attribut mit dem angegebenen lokalen Namen und Wert.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="value">Der Wert des Attributs.</param>
      <exception cref="T:System.InvalidOperationException">Der Zustand des Writers ist nicht <see langword="WriteState.Element" />, oder der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der <see langword="xml:space" />-Attributwert oder der <see langword="xml:lang" />-Attributwert ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse ein Attribut mit dem angegebenen lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI, der dem Attribut zugeordnet werden soll.</param>
      <param name="value">Der Wert des Attributs.</param>
      <exception cref="T:System.InvalidOperationException">Der Zustand des Writers ist nicht <see langword="WriteState.Element" />, oder der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der <see langword="xml:space" />-Attributwert oder der <see langword="xml:lang" />-Attributwert ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse das Attribut mit dem angegebenen Präfix, lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="prefix">Das Namespacepräfix des Attributs.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI dieses Attributs.</param>
      <param name="value">Der Wert des Attributs.</param>
      <exception cref="T:System.InvalidOperationException">Der Zustand des Writers ist nicht <see langword="WriteState.Element" />, oder der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der <see langword="xml:space" />-Attributwert oder der <see langword="xml:lang" />-Attributwert ist ungültig.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="localName" /> oder <paramref name="ns" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Schreibt ein Attribut asynchron mit dem angegebenen Präfix, lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="prefix">Das Namespacepräfix des Attributs.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI dieses Attributs.</param>
      <param name="value">Der Wert des Attributs.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteAttributeString" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert beim Überschreiben in einer abgeleiteten Klasse die angegebenen binären Bytes als Base64 und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert die angegebenen binären Bytes asynchron als Base64 und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteBase64" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert beim Überschreiben in einer abgeleiteten Klasse die angegebenen binären Bytes als <see langword="BinHex" /> und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen oder befindet sich im Fehlerzustand.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Codiert die angegebenen binären Bytes asynchron als <see langword="BinHex" /> und schreibt den resultierenden Text.</summary>
      <param name="buffer">Zu codierendes Bytearray.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Bytes.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteBinHex" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</summary>
      <param name="text">Der Text, der in den CDATA-Block eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Schreibt asynchron einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</summary>
      <param name="text">Der Text, der in den CDATA-Block eingefügt werden soll.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteCData" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>Erzwingt beim Überschreiben in einer abgeleiteten Klasse die Generierung einer Zeichenentität für den angegebenen Wert eines Unicode-Zeichens.</summary>
      <param name="ch">Das Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</param>
      <exception cref="T:System.ArgumentException">Das Zeichen ist im Bereich der Ersatzzeichenpaare, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Erzwingt das Generieren einer Zeichenentität asynchron für den angegebenen Unicode-Zeichenwert.</summary>
      <param name="ch">Das Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteCharEntity" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse Text in jeweils einen Puffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />. Der Aufruf führt zur Aufteilung eines Ersatzzeichenpaars oder zum Schreiben eines ungültigen Ersatzzeichenpaars.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="buffer" />-Parameterwert ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt Text asynchron in jeweils einen Puffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteChars" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den Kommentar &lt;!--...--&gt; mit dem angegebenen Text.</summary>
      <param name="text">Text, der in den Kommentar eingefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>Schreibt asynchron einen Kommentar &lt;!--...--&gt;, der den angegebenen Text enthält.</summary>
      <param name="text">Text, der in den Kommentar eingefügt werden soll.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteComment" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse die DOCTYPE-Deklaration mit dem angegebenen Namen und optionalen Attributen.</summary>
      <param name="name">Der Name des DOCTYPE. Dieser darf nicht leer sein.</param>
      <param name="pubid">Bei einem Wert ungleich NULL wird auch PUBLIC "pubid" "sysid" geschrieben, wobei <paramref name="pubid" /> und <paramref name="sysid" /> durch die Werte der angegebenen Argumente ersetzt werden.</param>
      <param name="sysid">Wenn <paramref name="pubid" /> gleich <see langword="null" /> und <paramref name="sysid" /> ungleich NULL ist, wird SYSTEM "sysid" geschrieben, wobei <paramref name="sysid" /> durch den Wert dieses Arguments ersetzt wird.</param>
      <param name="subset">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</param>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde außerhalb des Prologs (nach dem Stammelement) aufgerufen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.ArgumentException">Der Wert für <paramref name="name" /> würde zu ungültigem XML-Code führen.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Schreibt die DOCTYPE-Deklaration asynchron mit dem angegebenen Namen und optionalen Attributen.</summary>
      <param name="name">Der Name des DOCTYPE. Dieser darf nicht leer sein.</param>
      <param name="pubid">Bei einem Wert ungleich NULL wird auch PUBLIC "pubid" "sysid" geschrieben, wobei <paramref name="pubid" /> und <paramref name="sysid" /> durch die Werte der angegebenen Argumente ersetzt werden.</param>
      <param name="sysid">Wenn <paramref name="pubid" /> gleich <see langword="null" /> und <paramref name="sysid" /> ungleich NULL ist, wird SYSTEM "sysid" geschrieben, wobei <paramref name="sysid" /> durch den Wert dieses Arguments ersetzt wird.</param>
      <param name="subset">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteDocType" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Schreibt ein Element mit dem angegebenen lokalen Namen und Wert.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="value">Der Wert des Elements.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="localName" />-Wert ist <see langword="null" /> oder eine leere Zeichenfolge.
- oder -
Die Parameterwerte sind nicht gültig.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Schreibt ein Element mit dem angegebenen lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI, der dem Element zugeordnet werden soll.</param>
      <param name="value">Der Wert des Elements.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="localName" />-Wert ist <see langword="null" /> oder eine leere Zeichenfolge.
- oder -
Die Parameterwerte sind nicht gültig.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Schreibt ein Element mit dem angegebenen Präfix, lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="prefix">Das Präfix des Elements.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI des Elements.</param>
      <param name="value">Der Wert des Elements.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="localName" />-Wert ist <see langword="null" /> oder eine leere Zeichenfolge.
- oder -
Die Parameterwerte sind nicht gültig.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Schreibt ein Element asynchron mit dem angegebenen Präfix, lokalen Namen, Namespace-URI und Wert.</summary>
      <param name="prefix">Das Präfix des Elements.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI des Elements.</param>
      <param name="value">Der Wert des Elements.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteElementString" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse den vorherigen <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />-Aufruf.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Schließt den asynchronen vorherigen <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />-Aufruf.</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteEndAttribute" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse alle geöffneten Elemente oder Attribute und setzt den Writer in den Anfangszustand zurück.</summary>
      <exception cref="T:System.ArgumentException">Das XML-Dokument ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Schließt alle geöffneten Elemente oder Attribute asynchron und setzt den Writer in den Startzustand zurück.</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteEndDocument" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse ein Element und löst den entsprechenden Namespacebereich auf.</summary>
      <exception cref="T:System.InvalidOperationException">Dies führt zu einem ungültigen XML-Dokument.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Schließt ein Element asynchron und löst den entsprechenden Namespacebereich auf.</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteEndElement" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse einen Entitätsverweis als <see langword="&amp;name;" />.</summary>
      <param name="name">Der Name des Entitätsverweises.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>Schreibt einen Entitätsverweis asynchron als <see langword="&amp;name;" /> aus.</summary>
      <param name="name">Der Name des Entitätsverweises.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteEntityRef" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>Schließt beim Überschreiben in einer abgeleiteten Klasse ein Element und löst den entsprechenden Namespacebereich auf.</summary>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Schließt ein Element asynchron und löst den entsprechenden Namespacebereich auf.</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteFullEndElement" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den angegebenen Namen und stellt sicher, dass dieser gemäß der W3C-Empfehlung zu XML, Version 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name), ein gültiger Name ist.</summary>
      <param name="name">Der zu schreibende Name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist kein gültiger XML-Name, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Schreibt den angegebenen Namen asynchron aus und prüft dessen Gültigkeit entsprechend der W3C-Empfehlung für XML, Version 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Der zu schreibende Name.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteName" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den angegebenen Namen und stellt sicher, dass dieser gemäß der W3C-Empfehlung zu XML, Version 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name), ein gültiges NmToken ist.</summary>
      <param name="name">Der zu schreibende Name.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> ist kein gültiges NmToken, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Schreibt den angegebenen Namen asynchron aus und stellt sicher, dass dieser gemäß der W3C-Empfehlung für XML, Version 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name), ein gültiges NmToken ist.</summary>
      <param name="name">Der zu schreibende Name.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteNmToken" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Kopiert beim Überschreiben in einer abgeleiteten Klasse den gesamten Inhalt des Readers in den Writer und verschiebt den Reader zum Anfang des nächsten nebengeordneten Elements.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute aus dem <see langword="XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> enthält ungültige Zeichen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Kopiert den gesamten Inhalt des <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekts in den Writer. Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> bleibt unverändert.</summary>
      <param name="navigator">Der <see cref="T:System.Xml.XPath.XPathNavigator" />, aus dem kopiert werden soll.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute zu kopieren, andernfalls <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Kopiert beim Überschreiben in einer abgeleiteten Klasse den gesamten Inhalt des Readers asynchron in den Writer und verschiebt den Reader zum Anfang des nächsten nebengeordneten Elements.</summary>
      <param name="reader">Der <see cref="T:System.Xml.XmlReader" />, aus dem gelesen werden soll.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute aus dem <see langword="XmlReader" /> zu kopieren, andernfalls <see langword="false" />.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteNode" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Kopiert asynchron den gesamten Inhalt des <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt in den Writer. Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> bleibt unverändert.</summary>
      <param name="navigator">Der <see cref="T:System.Xml.XPath.XPathNavigator" />, aus dem kopiert werden soll.</param>
      <param name="defattr">
        <see langword="true" />, um die Standardattribute zu kopieren, andernfalls <see langword="false" />.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteNode" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse eine Verarbeitungsanweisung mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</summary>
      <param name="name">Der Name der Verarbeitungsanweisung.</param>
      <param name="text">Der in die Verarbeitungsanweisung einzufügende Text.</param>
      <exception cref="T:System.ArgumentException">Der Text ergibt kein wohlgeformtes XML-Dokument.
<paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.
Diese Methode wird zum Erstellen einer XML-Deklaration nach einem Aufruf von <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> verwendet.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Schreibt eine Verarbeitungsanweisung asynchron mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</summary>
      <param name="name">Der Name der Verarbeitungsanweisung.</param>
      <param name="text">Der in die Verarbeitungsanweisung einzufügende Text.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteProcessingInstruction" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den durch den Namespace angegebenen Namen. Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</summary>
      <param name="localName">Der zu schreibende lokale Name.</param>
      <param name="ns">Der Namespace-URI für den Namen.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.
<paramref name="localName" /> ist kein gültiger Name.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Schreibt den durch Namespace gekennzeichneten Namen asynchron. Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</summary>
      <param name="localName">Der zu schreibende lokale Name.</param>
      <param name="ns">Der Namespace-URI für den Namen.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteQualifiedName" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse Rohdatenmarkup manuell aus einem Zeichenpuffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.
- oder -
Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse Rohdatenmarkup manuell aus einer Zeichenfolge.</summary>
      <param name="data">Zeichenfolge, die den zu schreibenden Text enthält.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Schreibt asynchron unformatiertes Markup manuell aus einem Zeichenpuffer.</summary>
      <param name="buffer">Zeichenarray, das den zu schreibenden Text enthält.</param>
      <param name="index">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</param>
      <param name="count">Die Anzahl der zu schreibenden Zeichen.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteRaw" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Schreibt asynchron unformatiertes Markup manuell aus einer Zeichenfolge.</summary>
      <param name="data">Zeichenfolge, die den zu schreibenden Text enthält.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteRaw" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Schreibt den Anfang eines Attributs mit dem angegebenen lokalen Namen.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Schreibt den Anfang eines Attributs mit dem angegebenen lokalen Namen und dem angegebenen Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI dieses Attributs.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den Anfang eines Attributs mit dem angegebenen Präfix, dem angegebenen lokalen Namen und dem angegebenen Namespace-URI.</summary>
      <param name="prefix">Das Namespacepräfix des Attributs.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI für das Attribut.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Schreibt den Anfang eines Attributs asynchron mit dem angegebenen Präfix, lokalen Namen und Namespace-URI.</summary>
      <param name="prefix">Das Namespacepräfix des Attributs.</param>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="ns">Der Namespace-URI für das Attribut.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteStartAttribute" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse die XML-Deklaration mit der Version "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse die XML-Deklaration mit der Version "1.0" und dem eigenständigen Attribut.</summary>
      <param name="standalone">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</param>
      <exception cref="T:System.InvalidOperationException">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Schreibt die XML-Deklaration asynchron mit der Version "1.0".</summary>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteStartDocument" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Schreibt die XML-Deklaration asynchron mit der Version "1.0" und dem eigenständigen Attribut.</summary>
      <param name="standalone">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteStartDocument" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse ein Starttag mit dem angegebenen lokalen Namen.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse das angegebene Starttag und ordnet dieses dem angegebenen Namespace zu.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI, der dem Element zugeordnet werden soll. Wenn sich dieser Namespace bereits im Gültigkeitsbereich befindet und dem Namespace ein Präfix zugeordnet ist, schreibt der Writer automatisch auch das Präfix.</param>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</summary>
      <param name="prefix">Das Namespacepräfix des Elements.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI, der dem Element zugeordnet werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Es gibt ein Zeichen im Puffer, das ein gültiges XML-Zeichen ist, aber nicht gültig für die Ausgabecodierung ist. Wenn die Ausgabecodierung z. B. ASCII ist, sollten Sie nur Zeichen im Bereich von 0 bis 127 für Element- und Attributnamen verwenden. Das ungültige Zeichen kann sich im Argument dieser Methode oder in einem Argument von vorherigen Methoden befinden, die in den Puffer geschrieben haben. Solche Zeichen werden wenn möglich von Zeichenentitätsverweisen maskiert (z. B., in Textknoten oder Attributwerten). Der Zeichenentitätsverweis ist jedoch nicht in Element- und Attributnamen, Kommentaren, Verarbeitungsanweisungen oder CDATA-Abschnitten zugelassen.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Schreibt das angegebene Starttag asynchron und ordnet dieses dem angegebenen Namespace und Präfix zu.</summary>
      <param name="prefix">Das Namespacepräfix des Elements.</param>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="ns">Der Namespace-URI, der dem Element zugeordnet werden soll.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteStartElement" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Zustand des Writers ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.WriteState" />-Werte.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den angegebenen Textinhalt.</summary>
      <param name="text">Der zu schreibende Text.</param>
      <exception cref="T:System.ArgumentException">Die Textzeichenfolge enthält ein ungültiges Ersatzzeichenpaar.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Schreibt den angegebenen Textinhalt asynchron.</summary>
      <param name="text">Der zu schreibende Text.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteString" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Generiert und schreibt beim Überschreiben in einer abgeleiteten Klasse die Ersatzzeichenentität für das Ersatzzeichenpaar.</summary>
      <param name="lowChar">Das niedrige Ersatzzeichen. Dieses muss ein Wert zwischen 0xDC00 und 0xDFFF sein.</param>
      <param name="highChar">Das hohe Ersatzzeichen. Dieses muss ein Wert zwischen 0xD800 und 0xDBFF sein.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiges Ersatzzeichenpaar übergeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Generiert und schreibt die Ersatzzeichenentität asynchron für das Ersatzzeichenpaar.</summary>
      <param name="lowChar">Das niedrige Ersatzzeichen. Dieses muss ein Wert zwischen 0xDC00 und 0xDFFF sein.</param>
      <param name="highChar">Das hohe Ersatzzeichen. Dieses muss ein Wert zwischen 0xD800 und 0xDBFF sein.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteSurrogateCharEntity" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Schreibt einen <see cref="T:System.Boolean" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.Boolean" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Schreibt einen <see cref="T:System.DateTime" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.DateTime" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Schreibt einen <see cref="T:System.DateTimeOffset" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.DateTimeOffset" />-Wert.</param>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Schreibt einen <see cref="T:System.Decimal" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.Decimal" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Schreibt einen <see cref="T:System.Double" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.Double" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Schreibt einen <see cref="T:System.Int32" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.Int32" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Schreibt einen <see cref="T:System.Int64" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.Int64" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Schreibt den Objektwert.</summary>
      <param name="value">Der zu schreibende Objektwert.
Hinweis Seit der Veröffentlichung von .NET Framework 3.5 akzeptiert diese Methode nun auch <see cref="T:System.DateTimeOffset" /> als Parameter.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der Writer ist geschlossen oder befindet sich im Fehlerzustand.
- oder -
Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Schreibt eine Gleitkommazahl mit einfacher Genauigkeit.</summary>
      <param name="value">Die zu schreibende Gleitkommazahl mit einfacher Genauigkeit.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Schreibt einen <see cref="T:System.String" />-Wert.</summary>
      <param name="value">Der zu schreibende <see cref="T:System.String" />-Wert.</param>
      <exception cref="T:System.ArgumentException">Es wurde ein ungültiger Wert angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>Schreibt beim Überschreiben in einer abgeleiteten Klasse den angegebenen Leerraum.</summary>
      <param name="ws">Die Zeichenfolge von Leerraumzeichen.</param>
      <exception cref="T:System.ArgumentException">Die Zeichenfolge enthält Zeichen, die keine Leerraumzeichen sind.</exception>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Schreibt den angegebenen Leerraum asynchron.</summary>
      <param name="ws">Die Zeichenfolge von Leerraumzeichen.</param>
      <returns>Die Aufgabe, die den asynchronen <see langword="WriteWhitespace" />-Vorgang darstellt.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.
- oder -
Eine asynchrone <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, ohne das <see cref="P:System.Xml.XmlWriterSettings.Async" />-Flag auf <see langword="true" /> festzulegen. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Nachricht „Legen Sie XmlWriterSettings.Async auf True fest, wenn Sie die Async-Methoden verwenden möchten“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den aktuellen <see langword="xml:lang" />-Bereich ab.</summary>
      <returns>Der aktuelle <see langword="xml:lang" />-Bereich.</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen <see cref="T:System.Xml.XmlSpace" /> ab, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</summary>
      <returns>Ein <see langword="XmlSpace" />, der den aktuellen <see langword="xml:space" />-Bereich darstellt.
  Wert 
  Bedeutung 
 <see langword="None" /> Dies ist der Standardwert, wenn kein <see langword="xml:space" />-Bereich vorhanden ist.  
  
 <see langword="Default" /> Der aktuelle Bereich ist <see langword="xml:space" />="default".  
  
 <see langword="Preserve" /> Der aktuelle Bereich ist <see langword="xml:space" />="preserve".</returns>
      <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Xml.XmlWriter" />-Methode wurde aufgerufen, bevor ein vorheriger asynchroner Vorgang abgeschlossen wurde. In diesem Fall wird <see cref="T:System.InvalidOperationException" /> mit der Meldung „Es wird bereits ein asynchroner Vorgang ausgeführt“ ausgelöst.</exception>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Gibt eine Gruppe von Funktionen an, die für das <see cref="T:System.Xml.XmlWriter" />-Objekt unterstützt werden sollen, das von der <see cref="Overload:System.Xml.XmlWriter.Create" />-Methode erstellt wurde.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlWriterSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob asynchrone <see cref="T:System.Xml.XmlWriter" />-Methoden für eine bestimmte <see cref="T:System.Xml.XmlWriter" />-Instanz verwendet werden können.</summary>
      <returns>
        <see langword="true" />, wenn asynchrone Methoden verwendet werden können; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Ruft einen Wert ab, der angibt, ob der XML-Writer prüfen soll, ob alle Zeichen im Dokument dem Abschnitt „2.2 Characters“ (Zeichen) der W3C Recommendation (W3C-Empfehlung) für XML 1.0 entsprechen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn Zeichen überprüft werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Erstellt eine Kopie der <see cref="T:System.Xml.XmlWriterSettings" />-Instanz.</summary>
      <returns>Das geklonte <see cref="T:System.Xml.XmlWriterSettings" />-Objekt.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlWriter" /> auch den zugrunde liegenden Stream oder <see cref="T:System.IO.TextWriter" /> schließen soll, wenn die <see cref="M:System.Xml.XmlWriter.Close" />-Methode aufgerufen wird, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn auch der zugrunde liegende Stream oder <see cref="T:System.IO.TextWriter" /> geschlossen werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Ruft das Übereinstimmungsniveau ab, auf den der XML-Writer die XML-Ausgabe überprüft, oder legt dieses fest.</summary>
      <returns>Einer der Enumerationswerte, der das Übereinstimmungsniveau angibt (Dokument, Fragment oder automatische Erkennung). Die Standardeinstellung ist <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob <see cref="T:System.Xml.XmlWriter" /> die URI-Attribute nicht mit Escapezeichen versehen soll.</summary>
      <returns>
        <see langword="true" />
        <see cref="T:System.Xml.XmlWriter" /> , <see langword="false" /> wenn das keine Escapezeichen für URI-Attribute verwendet, andernfalls. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Ruft den Typ der Textcodierung ab oder legt diesen fest.</summary>
      <returns>Die zu verwendende Textcodierung. Die Standardeinstellung ist <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Ruft einen Wert ab, der angibt, ob Elemente eingezogen werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn einzelne Elemente mit Einzug in neue Zeilen geschrieben werden sollen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Ruft die Zeichenfolge ab, die für den Einzug verwendet werden soll, oder legt diese fest. Diese Einstellung wird verwendet, wenn die <see cref="P:System.Xml.XmlWriterSettings.Indent" />-Eigenschaft auf <see langword="true" /> festgelegt ist.</summary>
      <returns>Die für den Einzug zu verwendende Zeichenfolge. Diese kann auf jeden Zeichenfolgenwert festgelegt werden. Wenn Sie die Gültigkeit des XML-Codes sicherstellen möchten, sollten Sie jedoch nur gültige Leerraumzeichen, z. B. Leerzeichen, Tabstoppzeichen, Wagenrückläufe oder Zeilenvorschübe angeben. Der Standard beträgt zwei Leerzeichen.</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> zugewiesene Wert ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlWriter" /> beim Schreiben von XML-Inhalt doppelte Namespacedeklarationen entfernen soll, oder legt diesen fest. Im Standardverhalten gibt der Writer alle Namespacedeklarationen aus, die in der Namespaceauflösung des Writers vorhanden sind.</summary>
      <returns>Die <see cref="T:System.Xml.NamespaceHandling" />-Enumeration, die verwendet wird, um anzugeben, ob doppelte Namespacedeklarationen im <see cref="T:System.Xml.XmlWriter" /> entfernt werden.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Ruft die Zeichenfolge ab, die für Zeilenumbrüche verwendet werden soll, oder legt diese fest.</summary>
      <returns>Die Zeichenfolge, die für Zeilenumbrüche verwendet werden soll. Diese kann auf jeden Zeichenfolgenwert festgelegt werden. Wenn Sie die Gültigkeit des XML-Codes sicherstellen möchten, sollten Sie jedoch nur gültige Leerraumzeichen, z. B. Leerzeichen, Tabstoppzeichen, Wagenrückläufe oder Zeilenvorschübe angeben. Der Standardwert ist <c>\r\n</c> (Wagen Rücklauf, neue Zeile).</returns>
      <exception cref="T:System.ArgumentNullException">Der <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> zugewiesene Wert ist <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Ruft einen Wert ab, der angibt, ob Zeilenumbrüche in der Ausgabe normalisiert werden sollen, oder legt diesen fest.</summary>
      <returns>Einer der <see cref="T:System.Xml.NewLineHandling" />-Werte. Die Standardeinstellung ist <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Ruft einen Wert ab, der angibt, ob Attribute in eine neue Zeile geschrieben werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um Attribute in einzelne Zeilen zu schreiben, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.

Diese Einstellung hat keinerlei Auswirkungen, wenn der <see cref="P:System.Xml.XmlWriterSettings.Indent" />-Eigenschaftswert <see langword="false" /> ist.
  
  
 Wenn <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> auf <see langword="true" /> festgelegt ist, wird jedem Attribut eine neue Zeile und eine zusätzliche Einzugsebene vorangestellt.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Ruft einen Wert ab, der angibt, ob eine XML-Deklaration auslassen werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um die XML-Deklaration auszulassen, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />. Es wird eine XML-Deklaration geschrieben.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Ruft die Methode zum Serialisieren der <see cref="T:System.Xml.XmlWriter" />-Ausgabe ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XmlOutputMethod" />-Werte. Die Standardeinstellung ist <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Setzt die Member der settings-Klasse auf ihre Standardwerte zurück.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob <see cref="T:System.Xml.XmlWriter" /> Endtags zu allen nicht geschlossenen Elementtags hinzufügt, wenn die <see cref="M:System.Xml.XmlWriter.Close" />-Methode aufgerufen wird.</summary>
      <returns>
        <see langword="true" />, wenn alle nicht geschlossenen Elementtags geschlossen werden; andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Stellt einen Accessor für die <see cref="T:System.Xml.XPath.XPathNavigator" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Gibt ein neues <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt zurück.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Gibt die Sortierreihenfolge für Groß- und Kleinbuchstaben an.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Kleinbuchstaben werden vor Großbuchstaben sortiert.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Ignorieren von Groß- und Kleinschreibung.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Großbuchstaben werden vor Kleinbuchstaben sortiert.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Gibt den Datentyp an, der zum Bestimmen der Sortierreihenfolge verwendet wird.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Werte werden numerisch sortiert.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Werte werden alphabetisch sortiert.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Gibt die Sortierreihenfolge an.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>Knoten werden in aufsteigender Reihenfolge sortiert. Wenn die Zahlen 1, 2, 3 und 4 beispielsweise aufsteigend sortiert werden, erscheinen sie folgendermaßen: 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>Knoten werden in absteigender Reihenfolge sortiert. Wenn die Zahlen 1, 2, 3 und 4 beispielsweise absteigend sortiert werden, erscheinen sie folgendermaßen: 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Stellt eine typisierte Klasse bereit, die einen kompilierten XPath-Ausdruck darstellt.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>Sortiert beim Überschreiben in einer abgeleiteten Klasse die vom XPath-Ausdruck ausgewählten Knoten anhand des angegebenen <see cref="T:System.Collections.IComparer" />-Objekts.</summary>
      <param name="expr">Ein Objekt, das den Sortierschlüssel darstellt. Hierbei kann es sich um den <see langword="string" />-Wert des Knotens oder um ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt mit einem kompilierten XPath-Ausdruck handeln.</param>
      <param name="comparer">Ein <see cref="T:System.Collections.IComparer" />-Objekt, das die spezifischen Datentypvergleiche für den Vergleich zweier Objekte auf Gleichwertigkeit bereitstellt.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Die <see cref="T:System.Xml.XPath.XPathExpression" /> oder der Sortierschlüssel beinhaltet ein Präfix. Entweder wird kein <see cref="T:System.Xml.XmlNamespaceManager" /> bereitgestellt, oder das Präfix kann im angegebenen <see cref="T:System.Xml.XmlNamespaceManager" /> nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>Sortiert beim Überschreiben in einer abgeleiteten Klasse die vom XPath-Ausdruck ausgewählten Knoten anhand der bereitgestellten Parameter.</summary>
      <param name="expr">Ein Objekt, das den Sortierschlüssel darstellt. Hierbei kann es sich um den <see langword="string" />-Wert des Knotens oder um ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt mit einem kompilierten XPath-Ausdruck handeln.</param>
      <param name="order">Ein <see cref="T:System.Xml.XPath.XmlSortOrder" />-Wert, der die Sortierreihenfolge angibt.</param>
      <param name="caseOrder">Ein <see cref="T:System.Xml.XPath.XmlCaseOrder" />-Wert, der angibt, wie Groß- und Kleinbuchstaben sortiert werden.</param>
      <param name="lang">Die für den Vergleich zu verwendende Sprache. Verwendet die <see cref="T:System.Globalization.CultureInfo" />-Klasse, die an die <see cref="Overload:System.String.Compare" />-Methode für die Sprachtypen übergeben werden kann, z.B. "us-en" für Englisch (USA). Wenn eine leere Zeichenfolge angegeben wird, wird die <see cref="T:System.Globalization.CultureInfo" /> anhand der Systemumgebung bestimmt.</param>
      <param name="dataType">Ein <see cref="T:System.Xml.XPath.XmlDataType" />-Wert, der die Sortierreihenfolge für den Datentyp angibt.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Die <see cref="T:System.Xml.XPath.XPathExpression" /> oder der Sortierschlüssel beinhaltet ein Präfix. Entweder wird kein <see cref="T:System.Xml.XmlNamespaceManager" /> bereitgestellt, oder das Präfix kann im angegebenen <see cref="T:System.Xml.XmlNamespaceManager" /> nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Klon dieser <see cref="T:System.Xml.XPath.XPathExpression" /> zurück.</summary>
      <returns>Ein neues <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Kompiliert den angegebenen XPath-Ausdruck und gibt ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt zurück, das den XPath-Ausdruck darstellt.</summary>
      <param name="xpath">Ein XPath-Ausdruck.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdrucksparameter ist kein gültiger XPath-Ausdruck.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Kompiliert den angegebenen XPath-Ausdruck, wobei das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt für die Namespaceauflösung angegeben ist, und gibt ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt zurück, das den XPath-Ausdruck darstellt.</summary>
      <param name="xpath">Ein XPath-Ausdruck.</param>
      <param name="nsResolver">Ein Objekt, das die <see cref="T:System.Xml.IXmlNamespaceResolver" />-Schnittstelle für die Namespaceauflösung implementiert.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdrucksparameter ist kein gültiger XPath-Ausdruck.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine <see langword="string" />-Darstellung von <see cref="T:System.Xml.XPath.XPathExpression" /> ab.</summary>
      <returns>Eine <see langword="string" />-Darstellung von <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Ergebnistyp des XPath-Ausdrucks ab.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathResultType" />-Wert, der den Ergebnistyp des XPath-Ausdrucks darstellt.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt an, das für die Namespaceauflösung verwendet werden soll.</summary>
      <param name="nsResolver">Ein Objekt, das die <see cref="T:System.Xml.IXmlNamespaceResolver" />-Schnittstelle für die Namespaceauflösung implementiert.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Der <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objektparameter ist nicht von <see cref="T:System.Xml.IXmlNamespaceResolver" /> abgeleitet.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das <see cref="T:System.Xml.XmlNamespaceManager" />-Objekt an, das für die Namespaceauflösung verwendet werden soll.</summary>
      <param name="nsManager">Ein für die Namespaceauflösung zu verwendendes <see cref="T:System.Xml.XmlNamespaceManager" />-Objekt.</param>
      <exception cref="T:System.Xml.XPath.XPathException">Der <see cref="T:System.Xml.XmlNamespaceManager" />-Objektparameter ist nicht von der <see cref="T:System.Xml.XmlNamespaceManager" />-Klasse abgeleitet.</exception>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Stellt ein Element im XQuery 1.0- und XPath 2.0-Datenmodell dar.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XPath.XPathItem" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob das Element einen XPath-Knoten oder einen atomaren Wert darstellt.</summary>
      <returns>
        <see langword="true" />, wenn das Element einen XPath-Knoten darstellt, <see langword="false" />, wenn das Element einen atomaren Wert darstellt.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das aktuelle Element als geschachteltes Objekt vom am besten geeigneten .NET Framework 2.0-Typ gemäß seines Schematyps ab.</summary>
      <returns>Das aktuelle Element als geschachteltes Objekt vom am besten geeigneten .NET Framework-Typ.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see langword="string" />-Wert des Elements ab.</summary>
      <returns>Der <see langword="string" />-Wert des Elements.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Gibt den Wert des Elements mit dem angegebenen Typ zurück.</summary>
      <param name="returnType">Der Typ, mit dem der Wert des Elements zurückgegeben werden soll.</param>
      <returns>Der Wert des Elements mit dem angeforderten Typ.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den Zieltyp auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements mit dem angegebenen Typ unter Verwendung des angegebenen <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekts zum Auflösen von Namespacepräfixen zurück.</summary>
      <param name="returnType">Der Typ, mit dem der Wert des Elements zurückgegeben werden soll.</param>
      <param name="nsResolver">Das zum Auflösen von Namespacepräfixen verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
      <returns>Der Wert des Elements mit dem angeforderten Typ.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den Zieltyp auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements als <see cref="T:System.Boolean" /> ab.</summary>
      <returns>Der Wert des Elements als <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den <see cref="T:System.Boolean" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Boolean" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements als <see cref="T:System.DateTime" /> ab.</summary>
      <returns>Der Wert des Elements als <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den <see cref="T:System.DateTime" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.DateTime" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements als <see cref="T:System.Double" /> ab.</summary>
      <returns>Der Wert des Elements als <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den <see cref="T:System.Double" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Double" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements als <see cref="T:System.Int32" /> ab.</summary>
      <returns>Der Wert des Elements als <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den <see cref="T:System.Int32" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int32" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Wert des Elements als <see cref="T:System.Int64" /> ab.</summary>
      <returns>Der Wert des Elements als <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des Elements weist nicht das richtige Format für den <see cref="T:System.Int64" />-Typ auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int64" /> ist ungültig.</exception>
      <exception cref="T:System.OverflowException">Der Typumwandlungsversuch führte zu einem Überlauf.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den .NET Framework 2.0-Typ des Elements ab.</summary>
      <returns>Der .NET Framework-Typ des Elements. Der Standardwert ist <see cref="T:System.String" />sein.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.Xml.Schema.XmlSchemaType" /> des Elements ab.</summary>
      <returns>Die <see cref="T:System.Xml.Schema.XmlSchemaType" /> für das Element.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Definiert den Namespacebereich.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Gibt alle Namespaces zurück, die im Gültigkeitsbereich des aktuellen Knotens definiert sind. Dies beinhaltet den <c>xmlns:xml</c>-Namespace, der immer implizit deklariert wird. Die Reihenfolge der zurückgegebenen Namespaces ist nicht definiert.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Gibt mit Ausnahme des <c>xmlns:xml</c>-Namespaces alle Namespaces zurück, die im Gültigkeitsbereich des aktuellen Knotens definiert sind. Der <c>xmlns:xml</c>-Namespace wird immer implizit deklariert. Die Reihenfolge der zurückgegebenen Namespaces ist nicht definiert.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Gibt alle Namespaces zurück, die am aktuellen Knoten lokal definiert sind.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Stellt ein Cursormodell für die Navigation und Bearbeitung von XML-Daten bereit.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XPath.XPathNavigator" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Gibt ein <see cref="T:System.Xml.XmlWriter" />-Objekt zurück, mit dem am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens ein oder mehrere neue untergeordnete Knoten erstellt werden können.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens neue untergeordnete Knoten erstellt werden können.</returns>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, ist weder der Stammknoten noch ein Elementknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Erstellt unter Verwendung der angegebenen XML-Datenzeichenfolge am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Die Zeichenfolge mit XML-Daten für den neuen untergeordneten Knoten.</param>
      <exception cref="T:System.ArgumentNullException">Der Parameter für die XML-Daten ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem der <see cref="T:System.Xml.XPath.XPathNavigator" /> positioniert ist, ist nicht der Stammknoten und kein Elementknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der Parameter für die XML-Zeichenfolge ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Erstellt unter Verwendung des XML-Inhalts des angegebenen <see cref="T:System.Xml.XmlReader" />-Objekts am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das auf den XML-Daten für den neuen untergeordneten Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.XmlReader" />-Objekt befindet sich in einem Fehlerzustand oder wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlReader" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, ist weder der Stammknoten noch ein Elementknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XmlReader" />-Objektparameters ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Erstellt unter Verwendung der Knoten im angegebenen <see cref="T:System.Xml.XPath.XPathNavigator" /> am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem Knoten positioniert ist, der als neuer untergeordneter Knoten hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, ist weder der Stammknoten noch ein Elementknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Erstellt am Ende der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Elementknoten mit dem angegebenen Wert. Dabei werden die angegebenen Werte für das Namespacepräfix, den lokalen Namen und den Namespace-URI verwendet.</summary>
      <param name="prefix">Das Namespacepräfix des neuen untergeordneten Elementknotens (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des neuen untergeordneten Elementknotens (sofern vorhanden).</param>
      <param name="namespaceURI">Der Namespace-URI des neuen untergeordneten Elementknotens (sofern vorhanden). <see cref="F:System.String.Empty" /> und <see langword="null" /> sind gleichwertig.</param>
      <param name="value">Der Wert des neuen untergeordneten Elementknotens. Beim Übergeben von <see cref="F:System.String.Empty" /> oder <see langword="null" /> wird ein leeres Element erstellt.</param>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, ist weder der Stammknoten noch ein Elementknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Basis-URI des aktuellen Knotens ab.</summary>
      <returns>Der Speicherort, von dem der Knoten geladen wurde, oder <see cref="F:System.String.Empty" />, wenn kein Wert vorhanden ist.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XPath.XPathNavigator" /> die zugrundeliegenden XML-Daten bearbeiten kann.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="T:System.Xml.XPath.XPathNavigator" /> die zugrunde liegenden XML-Daten bearbeiten kann. Andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Überprüft, ob die XML-Daten im <see cref="T:System.Xml.XPath.XPathNavigator" /> dem bereitgestellten XSD (XML Schema Definition Language)-Schema entsprechen.</summary>
      <param name="schemas">Das <see cref="T:System.Xml.Schema.XmlSchemaSet" />, das die Schemas enthält, die zur Überprüfung der im <see cref="T:System.Xml.XPath.XPathNavigator" /> enthaltenen XML-Daten verwendet werden.</param>
      <param name="validationEventHandler">Der <see cref="T:System.Xml.Schema.ValidationEventHandler" />, der Informationen über Warnungen und Fehler bei der Schemavalidierung empfängt.</param>
      <returns>
        <see langword="true" />, wenn keine Schemavalidierungsfehler auftraten, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Ein Schemavalidierungsfehler ist aufgetreten, und es wurde kein <see cref="T:System.Xml.Schema.ValidationEventHandler" /> für die Behandlung von Validierungsfehlern angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist auf einem Knoten positioniert, bei dem es sich nicht um ein Element, Attribut oder den Stammknoten handelt, oder es sind keine Typinformationen für die Validierung vorhanden.</exception>
      <exception cref="T:System.ArgumentException">Die <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />-Methode wurde mit einem <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Parameter aufgerufen, der <see cref="T:System.Xml.XPath.XPathNavigator" /> war jedoch nicht auf dem Stammknoten der XML-Daten positioniert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>Erstellt beim Überschreiben in einer abgeleiteten Klasse einen neuen <see cref="T:System.Xml.XPath.XPathNavigator" />, der auf demselben Knoten wie dieser <see cref="T:System.Xml.XPath.XPathNavigator" /> positioniert ist.</summary>
      <returns>Ein neuer <see cref="T:System.Xml.XPath.XPathNavigator" />, der auf demselben Knoten wie dieser <see cref="T:System.Xml.XPath.XPathNavigator" /> positioniert ist.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Vergleicht die Position des aktuellen <see cref="T:System.Xml.XPath.XPathNavigator" /> mit der Position des angegebenen <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="nav">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> für den Vergleich.</param>
      <returns>Ein <see cref="T:System.Xml.XmlNodeOrder" />-Wert, der die relative Position der beiden <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekte zueinander darstellt.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Kompiliert eine Zeichenfolge, die einen XPath-Ausdruck darstellt, und gibt ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt zurück.</summary>
      <param name="xpath">Eine Zeichenfolge, die einen XPath-Ausdruck darstellt.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt, das den XPath-Ausdruck darstellt.</returns>
      <exception cref="T:System.ArgumentException">Der <paramref name="xpath" />-Parameter enthält einen ungültigen XPath-Ausdruck.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Erstellt auf dem aktuellen Knoten einen Attributknoten mit dem angegebenen Wert. Dabei werden die angegebenen Werte für das Namespacepräfix, den lokalen Namen und den Namespace-URI verwendet.</summary>
      <param name="prefix">Das Namespacepräfix des neuen Attributknotens (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des neuen Attributknotens. Der Wert darf nicht <see cref="F:System.String.Empty" /> oder <see langword="null" /> sein.</param>
      <param name="namespaceURI">Der Namespace-URI des neuen Attributknotens (sofern vorhanden).</param>
      <param name="value">Der Wert des neuen Attributknotens. Beim Übergeben von <see cref="F:System.String.Empty" /> oder <see langword="null" /> wird ein leerer Attributknoten erstellt.</param>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Elementknoten positioniert.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Gibt ein <see cref="T:System.Xml.XmlWriter" />-Objekt zurück, mit dem neue Attribute für das aktuelle Element erstellt werden können.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem neue Attribute für das aktuelle Element erstellt werden können.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Elementknoten positioniert.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Gibt eine Kopie des <see cref="T:System.Xml.XPath.XPathNavigator" /> zurück.</summary>
      <returns>Eine <see cref="T:System.Xml.XPath.XPathNavigator" />-Kopie dieses <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Löscht einen Bereich von nebengeordneten Knoten, vom aktuellen Knoten bis zum angegebenen Knoten.</summary>
      <param name="lastSiblingToDelete">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der auf dem letzten zu löschenden nebengeordneten Knoten im Bereich positioniert ist.</param>
      <exception cref="T:System.ArgumentNullException">Das angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.InvalidOperationException">Der angegebene letzte zu löschende Knoten ist kein gültiger nebengeordneter Knoten des aktuellen Knotens.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Löscht den aktuellen Knoten und dessen untergeordnete Knoten.</summary>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> zeigt auf einen Knoten, der nicht gelöscht werden kann, z. B. den Stammknoten oder einen Namespaceknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Wertet den angegebenen XPath-Ausdruck aus und gibt das typisierte Ergebnis zurück.</summary>
      <param name="xpath">Eine Zeichenfolge, die einen XPath-Ausdruck darstellt, der ausgewertet werden kann.</param>
      <returns>Das Ergebnis des Ausdrucks (boolescher Wert, Zahl, Zeichenfolge oder Knotengruppe). Dieses wird einem <see cref="T:System.Boolean" />-, <see cref="T:System.Double" />-, <see cref="T:System.String" />- oder <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekt zugeordnet.</returns>
      <exception cref="T:System.ArgumentException">Der Rückgabetyp des XPath-Ausdrucks ist eine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Wertet den angegebenen XPath-Ausdruck aus und gibt das typisierte Ergebnis zurück. Dabei wird das angegebene <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt zum Auflösen von Namespacepräfixen im XPath-Ausdruck verwendet.</summary>
      <param name="xpath">Eine Zeichenfolge, die einen XPath-Ausdruck darstellt, der ausgewertet werden kann.</param>
      <param name="resolver">Das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das zum Auflösen von Namespacepräfixen im XPath-Ausdruck verwendet wird.</param>
      <returns>Das Ergebnis des Ausdrucks (boolescher Wert, Zahl, Zeichenfolge oder Knotengruppe). Dieses wird einem <see cref="T:System.Boolean" />-, <see cref="T:System.Double" />-, <see cref="T:System.String" />- oder <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekt zugeordnet.</returns>
      <exception cref="T:System.ArgumentException">Der Rückgabetyp des XPath-Ausdrucks ist eine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Wertet den <see cref="T:System.Xml.XPath.XPathExpression" /> aus und gibt das typisierte Ergebnis zurück.</summary>
      <param name="expr">Ein <see cref="T:System.Xml.XPath.XPathExpression" />, der ausgewertet werden kann.</param>
      <returns>Das Ergebnis des Ausdrucks (boolescher Wert, Zahl, Zeichenfolge oder Knotengruppe). Dieses wird einem <see cref="T:System.Boolean" />-, <see cref="T:System.Double" />-, <see cref="T:System.String" />- oder <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekt zugeordnet.</returns>
      <exception cref="T:System.ArgumentException">Der Rückgabetyp des XPath-Ausdrucks ist eine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Verwendet den angegebenen Kontext für die Auswertung des <see cref="T:System.Xml.XPath.XPathExpression" /> und gibt das typisierte Ergebnis zurück.</summary>
      <param name="expr">Ein <see cref="T:System.Xml.XPath.XPathExpression" />, der ausgewertet werden kann.</param>
      <param name="context">Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der auf die ausgewählte Knotengruppe zeigt, für die eine Auswertung vorgenommen werden soll.</param>
      <returns>Das Ergebnis des Ausdrucks (boolescher Wert, Zahl, Zeichenfolge oder Knotengruppe). Dieses wird einem <see cref="T:System.Boolean" />-, <see cref="T:System.Double" />-, <see cref="T:System.String" />- oder <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekt zugeordnet.</returns>
      <exception cref="T:System.ArgumentException">Der Rückgabetyp des XPath-Ausdrucks ist eine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Ruft den Wert des Attributs mit dem angegebenen lokalen Namen und Namespace-URI ab.</summary>
      <param name="localName">Der lokale Name des Attributs. Bei <paramref name="localName" /> muss die Groß- und Kleinschreibung beachtet werden.</param>
      <param name="namespaceURI">Der Namespace-URI dieses Attributs.</param>
      <returns>Ein <see cref="T:System.String" />, der den Wert des angegebenen Attributs enthält. <see cref="F:System.String.Empty" />, wenn kein entsprechendes Attribut gefunden wurde oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> nicht auf einem Elementknoten positioniert ist.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Gibt den Wert des Namespaceknotens zurück, der dem angegebenen lokalen Namen entspricht.</summary>
      <param name="name">Der lokale Name des Namespaceknotens.</param>
      <returns>Ein <see cref="T:System.String" />, der den Wert des Namespaceknotens enthält. <see cref="F:System.String.Empty" />, wenn kein entsprechender Namespaceknoten gefunden wurde oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> nicht auf einem Elementknoten positioniert ist.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Gibt die im Gültigkeitsbereich befindlichen Namespaces des aktuellen Knotens zurück.</summary>
      <param name="scope">Ein <see cref="T:System.Xml.XmlNamespaceScope" />-Wert, der die zurückzugebenden Namespaces angibt.</param>
      <returns>Eine <see cref="T:System.Collections.Generic.IDictionary`2" />-Auflistung von Namespacenamen sortiert nach Präfix.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten über Attribute verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über Attribute verfügt. gibt <see langword="false" /> zurück, wenn der aktuelle Knoten keine Attribute aufweist oder die <see cref="T:System.Xml.XPath.XPathNavigator" /> nicht auf einem Elementknoten positioniert ist.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten über untergeordnete Knoten verfügt.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten über untergeordnete Knoten verfügt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Ruft das Markup ab, das die untergeordneten Knoten des aktuellen Knotens darstellt, oder legt dieses fest.</summary>
      <returns>Ein <see cref="T:System.String" />, der das Markup der untergeordneten Knoten des aktuellen Knotens enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" />-Eigenschaft kann nicht festgelegt werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Gibt ein <see cref="T:System.Xml.XmlWriter" />-Objekt zurück, mit dem ein neuer nebengeordneter Knoten nach dem gegenwärtig ausgewählten Knoten erstellt werden kann.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem ein neuer nebengeordneter Knoten nach dem gegenwärtig ausgewählten Knoten erstellt wird.</returns>
      <exception cref="T:System.InvalidOperationException">An der gegenwärtigen Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> kann kein neuer nebengeordneter Knoten nach dem aktuellen Knoten eingefügt werden.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Erstellt unter Verwendung der angegebenen XML-Zeichenfolge einen neuen nebengeordneten Knoten nach dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Die Zeichenfolge mit XML-Daten für den neuen nebengeordneten Knoten.</param>
      <exception cref="T:System.ArgumentNullException">Der XML-Zeichenfolgenparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten hinter dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Zeichenfolgenparameter ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Erstellt mit dem XML-Inhalt des angegebenen <see cref="T:System.Xml.XmlReader" />-Objekts einen neuen nebengeordneten Knoten nach dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das auf den XML-Daten für den neuen nebengeordneten Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.XmlReader" />-Objekt befindet sich in einem Fehlerzustand oder wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlReader" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten hinter dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XmlReader" />-Objektparameters ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Erstellt mithilfe der Knoten im <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt einen neuen nebengeordneten Knoten nach dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem Knoten positioniert ist, der als neuer nebengeordneter Knoten hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten hinter dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Gibt ein <see cref="T:System.Xml.XmlWriter" />-Objekt zurück, mit dem ein neuer nebengeordneter Knoten vor dem gegenwärtig ausgewählten Knoten erstellt werden kann.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem ein neuer nebengeordneter Knoten vor dem gegenwärtig ausgewählten Knoten erstellt werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten vor dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Erstellt unter Verwendung der angegebenen XML-Zeichenfolge einen neuen nebengeordneten Knoten vor dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Die Zeichenfolge mit XML-Daten für den neuen nebengeordneten Knoten.</param>
      <exception cref="T:System.ArgumentNullException">Der XML-Zeichenfolgenparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten vor dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Zeichenfolgenparameter ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Erstellt mit dem XML-Inhalt des angegebenen <see cref="T:System.Xml.XmlReader" />-Objekts einen neuen nebengeordneten Knoten vor dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das auf den XML-Daten für den neuen nebengeordneten Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.XmlReader" />-Objekt befindet sich in einem Fehlerzustand oder wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlReader" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">An der aktuellen Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> kann kein neuer nebengeordneter Knoten vor dem aktuellen Knoten eingefügt werden.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XmlReader" />-Objektparameters ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Erstellt mithilfe der Knoten im <see cref="T:System.Xml.XPath.XPathNavigator" /> einen neuen nebengeordneten Knoten vor dem gegenwärtig ausgewählten Knoten.</summary>
      <param name="newSibling">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem Knoten positioniert ist, der als neuer nebengeordneter Knoten hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">An der aktuellen Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> kann kein neuer nebengeordneter Knoten vor dem aktuellen Knoten eingefügt werden.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Erstellt nach dem aktuellen Knoten ein neues nebengeordnetes Element mit dem angegebenen Wert. Dabei werden die angegebenen Werte für das Namespacepräfix, den lokalen Namen und den Namespace-URI verwendet.</summary>
      <param name="prefix">Das Namespacepräfix des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="namespaceURI">Der Namespace-URI des neuen untergeordneten Elements (sofern vorhanden). <see cref="F:System.String.Empty" /> und <see langword="null" /> sind äquivalent.</param>
      <param name="value">Der Wert des neuen untergeordneten Elements. Beim Übergeben von <see cref="F:System.String.Empty" /> oder <see langword="null" /> wird ein leeres Element erstellt.</param>
      <exception cref="T:System.InvalidOperationException">An der gegenwärtigen Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> kann kein neuer nebengeordneter Knoten nach dem aktuellen Knoten eingefügt werden.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Erstellt vor dem aktuellen Knoten ein neues nebengeordnetes Element mit dem angegebenen Wert. Dabei werden die angegebenen Werte für das Namespacepräfix, den lokalen Namen und den Namespace-URI verwendet.</summary>
      <param name="prefix">Das Namespacepräfix des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="namespaceURI">Der Namespace-URI des neuen untergeordneten Elements (sofern vorhanden). <see cref="F:System.String.Empty" /> und <see langword="null" /> sind äquivalent.</param>
      <param name="value">Der Wert des neuen untergeordneten Elements. Beim Übergeben von <see cref="F:System.String.Empty" /> oder <see langword="null" /> wird ein leeres Element erstellt.</param>
      <exception cref="T:System.InvalidOperationException">Die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> lässt nicht zu, dass ein neuer nebengeordneter Knoten vor dem aktuellen Knoten eingefügt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Bestimmt, ob der angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> ein Nachkomme des aktuellen <see cref="T:System.Xml.XPath.XPathNavigator" /> ist.</summary>
      <param name="nav">Der <see cref="T:System.Xml.XPath.XPathNavigator" />, der mit diesem <see cref="T:System.Xml.XPath.XPathNavigator" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn der angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> ein Nachkomme des aktuellen <see cref="T:System.Xml.XPath.XPathNavigator" /> ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob der aktuelle Knoten ein leeres Element ohne Endtag ist.</summary>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten ein leeres Element ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Ruft einen Wert ab, der angibt, ob der aktuelle Knoten einen XPath-Knoten darstellt.</summary>
      <returns>Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob sich der aktuelle <see cref="T:System.Xml.XPath.XPathNavigator" /> an der gleichen Position wie der angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet.</summary>
      <param name="other">Der <see cref="T:System.Xml.XPath.XPathNavigator" />, der mit diesem <see cref="T:System.Xml.XPath.XPathNavigator" /> verglichen werden soll.</param>
      <returns>
        <see langword="true" />, wenn sich beide <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekte an derselben Position befinden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> des aktuellen Knotens ohne Namespacepräfix ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der den lokalen Namen des aktuellen Knotens enthält, oder <see cref="F:System.String.Empty" />, wenn der aktuelle Knoten keinen Namen aufweist (z. B. bei Text- oder Kommentarknoten).</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Ruft den Namespace-URI für das angegebene Präfix ab.</summary>
      <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu erhalten, übergeben Sie <see cref="F:System.String.Empty" />.</param>
      <returns>Ein <see cref="T:System.String" />, der den Namespace-URI enthält, der dem angegebenen Namespacepräfix zugewiesen wurde. <see langword="null" />, wenn dem angegebenen Präfix kein Namespace-URI zugewiesen wurde. Der zurückgegebene <see cref="T:System.String" /> ist atomisiert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Ruft das für den angegebenen Namespace-URI deklarierte Präfix ab.</summary>
      <param name="namespaceURI">Der für das Präfix aufzulösende Namespace-URI.</param>
      <returns>Ein <see cref="T:System.String" />, der das Namespacepräfix enthält, das dem angegebenen Namespace-URI zugewiesen wurde. <see cref="F:System.String.Empty" />, wenn dem angegebenen Namespace-URI kein Präfix zugewiesen wurde. Der zurückgegebene <see cref="T:System.String" /> ist atomisiert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Bestimmt, ob der aktuelle Knoten dem angegebenen XPath-Ausdruck entspricht.</summary>
      <param name="xpath">Der XPath-Ausdruck.</param>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten dem angegebenen XPath-Ausdruck entspricht, andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdruck kann nicht ausgewertet werden.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Bestimmt, ob der aktuelle Knoten dem angegebenen <see cref="T:System.Xml.XPath.XPathExpression" /> entspricht.</summary>
      <param name="expr">Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt, das den kompilierten XPath-Ausdruck enthält.</param>
      <returns>
        <see langword="true" />, wenn der aktuelle Knoten dem <see cref="T:System.Xml.XPath.XPathExpression" /> entspricht; andernfalls <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdruck kann nicht ausgewertet werden.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>Verschiebt beim Überschrieben in einer abgeleiteten Klasse den <see cref="T:System.Xml.XPath.XPathNavigator" /> an die Position des angegebenen <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="other">Der <see cref="T:System.Xml.XPath.XPathNavigator" />, der auf dem Knoten positioniert ist, auf den Sie wechseln möchten.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> erfolgreich an die gleiche Position wie der angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte; andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> zu dem Attribut mit dem entsprechenden lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Attributs.</param>
      <param name="namespaceURI">Der Namespace-URI des Attributs bzw. <see langword="null" /> für einen leeren Namespace.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> erfolgreich auf das Attribut verschoben werden konnte; andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den untergeordneten Knoten mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des untergeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <param name="namespaceURI">Der Namespace-URI des untergeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> erfolgreich auf den untergeordneten Knoten verschoben werden konnte; andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den untergeordneten Knoten vom angegebenen <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> des untergeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> erfolgreich auf den untergeordneten Knoten verschoben werden konnte; andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Positioniert den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten dem aktuellen Knoten nebengeordneten Knoten.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten nebengeordneten Knoten des aktuellen Knotens verschoben werden konnte. <see langword="false" />, wenn kein erstes nebengeordnetes Element vorhanden ist oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attributknoten positioniert ist. Wenn <see cref="T:System.Xml.XPath.XPathNavigator" /> bereits auf dem ersten nebengeordneten Element positioniert ist, gibt <see cref="T:System.Xml.XPath.XPathNavigator" /> den Wert <see langword="true" /> zurück und ändert die Position nicht.
Wenn <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> den Wert <see langword="false" /> zurückgibt, weil kein nebengeordnetes Element vorhanden ist, oder wenn <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attribut positioniert ist, wird die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> nicht geändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf das erste Attribut des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf das erste Attribut des aktuellen Knotens verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den ersten untergeordneten Knoten des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten untergeordneten Knoten des aktuellen Knotens verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten Namespaceknoten des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten Namespaceknoten verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den ersten Namespaceknoten, der dem angegebenen <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> entspricht.</summary>
      <param name="namespaceScope">Ein <see cref="T:System.Xml.XPath.XPathNamespaceScope" />-Wert, der den Namespacebereich beschreibt.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den ersten Namespaceknoten verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> in Dokumentreihenfolge auf das Element mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> in Dokumentreihenfolge bis zur angegebenen Begrenzung auf das Element mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des Elements.</param>
      <param name="namespaceURI">Der Namespace-URI des Elements.</param>
      <param name="end">Das <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, positioniert auf der Elementbegrenzung, über die der aktuelle <see cref="T:System.Xml.XPath.XPathNavigator" /> bei der Suche nach dem folgenden Element nicht hinausgeht.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf das folgende Element vom angegebenen <see cref="T:System.Xml.XPath.XPathNodeType" /> in Dokumentreihenfolge.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> des Elements. Der <see cref="T:System.Xml.XPath.XPathNodeType" /> darf nicht <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> oder <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" /> sein.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> in Dokumentreihenfolge bis zur angegebenen Begrenzung zum folgenden Element vom angegebenen <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> des Elements. Der <see cref="T:System.Xml.XPath.XPathNodeType" /> darf nicht <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> oder <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" /> sein.</param>
      <param name="end">Das <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, positioniert auf der Elementbegrenzung, über die der aktuelle <see cref="T:System.Xml.XPath.XPathNavigator" /> bei der Suche nach dem folgenden Element nicht hinausgeht.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>Verschiebt die Position beim Überschreiben in einer abgeleiteten Datei auf den Knoten, der über ein Attribut vom Typ <c>ID</c> verfügt, dessen Wert dem angegebenen <see cref="T:System.String" /> entspricht.</summary>
      <param name="id">Eine <see cref="T:System.String" />, die den <c>ID</c>-Wert des Knotens darstellt, auf den die Position verschoben werden soll.</param>
      <returns>
        <see langword="true" />, wenn die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, ändert sich die Position des Navigators nicht.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den Namespaceknoten mit dem angegebenen Namespacepräfix.</summary>
      <param name="name">Das Namespacepräfix des Namespaceknotens.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den angegebenen Namespace verschoben werden konnte, <see langword="false" />, wenn kein entsprechender Namespaceknoten gefunden wurde oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> nicht auf einem Elementknoten positioniert ist. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den nächsten nebengeordneten Knoten des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten nebengeordneten Knoten verschoben werden konnte. <see langword="false" />, wenn keine weiteren nebengeordneten Knoten vorhanden sind oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attributknoten positioniert ist. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten nebengeordneten Knoten mit dem angegebenen lokalen Namen und Namespace-URI.</summary>
      <param name="localName">Der lokale Name des nächsten nebengeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <param name="namespaceURI">Der Namespace-URI des nächsten nebengeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten nebengeordneten Knoten verschoben werden konnte. <see langword="false" />, wenn keine weiteren nebengeordneten Knoten vorhanden sind oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attributknoten positioniert ist. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten nebengeordneten Knoten des aktuellen Knotens, der dem angegebenen <see cref="T:System.Xml.XPath.XPathNodeType" /> entspricht.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> des nebengeordneten Knotens, auf den die Position verschoben werden soll.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten nebengeordneten Knoten verschoben werden konnte. <see langword="false" />, wenn keine weiteren nebengeordneten Knoten vorhanden sind oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attributknoten positioniert ist. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>Verschiebt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf das nächste Attribut.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf das nächste Attribut verschoben werden konnte, <see langword="false" />, wenn keine weiteren Attribute vorhanden sind. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> zum nächsten Namespaceknoten.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten Namespaceknoten verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den nächsten Namespaceknoten, der dem angegebenen <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> entspricht.</summary>
      <param name="namespaceScope">Ein <see cref="T:System.Xml.XPath.XPathNamespaceScope" />-Wert, der den Namespacebereich beschreibt.</param>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den nächsten Namespaceknoten verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den übergeordneten Knoten des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den übergeordneten Knoten des aktuellen Knotens verschoben werden konnte, andernfalls <see langword="false" />. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>Verschiebt den <see cref="T:System.Xml.XPath.XPathNavigator" /> beim Überschreiben in einer abgeleiteten Klasse auf den vorhergehenden nebengeordneten Knoten des aktuellen Knotens.</summary>
      <returns>
        <see langword="true" />, wenn der <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den vorhergehenden nebengeordneten Knoten verschoben werden konnte. <see langword="false" />, wenn kein vorhergehender nebengeordneter Knoten vorhanden ist oder der <see cref="T:System.Xml.XPath.XPathNavigator" /> derzeit auf einem Attributknoten positioniert ist. Wenn <see langword="false" />, bleibt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> unverändert.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Verschiebt die Position des <see cref="T:System.Xml.XPath.XPathNavigator" /> auf den Stammknoten, zu dem der aktuelle Knoten gehört.</summary>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den qualifizierten Namen des aktuellen Knotens ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der den qualifizierten <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> des aktuellen Knotens enthält oder <see cref="F:System.String.Empty" />, wenn der aktuelle Knoten keinen Namen aufweist (z. B. bei Text- oder Kommentarknoten).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Namespace-URI des aktuellen Knotens ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der den Namespace-URI des aktuellen Knotens enthält, oder <see cref="F:System.String.Empty" />, wenn der aktuelle Knoten keinen Namespace-URI aufweist.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die <see cref="T:System.Xml.XmlNameTable" /> für den <see cref="T:System.Xml.XPath.XPathNavigator" /> ab.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlNameTable" />-Objekt, das das Abrufen der atomisierten Version eines <see cref="T:System.String" /> im XML-Dokument ermöglicht.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Ruft einen <see cref="T:System.Collections.IEqualityComparer" /> ab, der für Vergleiche von <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekten auf Gleichheit verwendet wird.</summary>
      <returns>Ein <see cref="T:System.Collections.IEqualityComparer" />, der für Vergleiche von <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekten auf Gleichheit verwendet wird.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den <see cref="T:System.Xml.XPath.XPathNodeType" /> des aktuellen Knotens ab.</summary>
      <returns>Einer der <see cref="T:System.Xml.XPath.XPathNodeType" />-Werte, der den aktuellen Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Ruft das Markup ab, das die Anfangs- und Endtags des aktuellen Knotens und dessen untergeordneter Knoten darstellt, oder legt dieses fest.</summary>
      <returns>Eine <see cref="T:System.String" />, die das Markup enthält, das die Anfangs- und Endtags des aktuellen Knotens und dessen untergeordneter Knoten darstellt.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das dem aktuellen Knoten zugeordnete Namespacepräfix ab.</summary>
      <returns>Eine <see cref="T:System.String" />, die das dem aktuellen Knoten zugeordnete Namespacepräfix enthält.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Gibt ein <see cref="T:System.Xml.XmlWriter" />-Objekt zurück, mit dem am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens ein neuer untergeordneter Knoten erstellt werden kann.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens ein neuer untergeordneter Knoten erstellt werden kann.</returns>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem der <see cref="T:System.Xml.XPath.XPathNavigator" /> positioniert wird, lässt das Voranstellen eines neuen untergeordneten Knotens nicht zu.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Erstellt unter Verwendung der angegebenen XML-Zeichenfolge am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Die Zeichenfolge mit XML-Daten für den neuen untergeordneten Knoten.</param>
      <exception cref="T:System.ArgumentNullException">Der XML-Zeichenfolgenparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, lässt nicht zu, dass ein untergeordneter Knoten vorangestellt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Zeichenfolgenparameter ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Erstellt unter Verwendung des XML-Inhalts des angegebenen <see cref="T:System.Xml.XmlReader" />-Objekts am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das auf den XML-Daten für den neuen untergeordneten Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.XmlReader" />-Objekt befindet sich in einem Fehlerzustand oder wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlReader" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, lässt nicht zu, dass ein untergeordneter Knoten vorangestellt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XmlReader" />-Objektparameters ist nicht wohlgeformt.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Erstellt unter Verwendung der Knoten im angegebenen <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens einen neuen untergeordneten Knoten.</summary>
      <param name="newChild">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem Knoten positioniert ist, der als neuer untergeordneter Knoten hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem sich der <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet, lässt nicht zu, dass ein untergeordneter Knoten vorangestellt wird.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Erstellt am Anfang der Liste mit untergeordneten Knoten des aktuellen Knotens einen neues untergeordnetes Element mit dem angegebenen Wert. Dabei werden die angegebenen Werte für das Namespacepräfix, den lokalen Namen und den Namespace-URI verwendet.</summary>
      <param name="prefix">Das Namespacepräfix des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="localName">Der lokale Name des neuen untergeordneten Elements (sofern vorhanden).</param>
      <param name="namespaceURI">Der Namespace-URI des neuen untergeordneten Elements (sofern vorhanden). <see cref="F:System.String.Empty" /> und <see langword="null" /> sind äquivalent.</param>
      <param name="value">Der Wert des neuen untergeordneten Elements. Beim Übergeben von <see cref="F:System.String.Empty" /> oder <see langword="null" /> wird ein leeres Element erstellt.</param>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Knoten, auf dem der <see cref="T:System.Xml.XPath.XPathNavigator" /> positioniert wird, lässt das Voranstellen eines neuen untergeordneten Knotens nicht zu.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Gibt ein <see cref="T:System.Xml.XmlReader" />-Objekt zurück, das den aktuellen Knoten und dessen untergeordnete Knoten enthält.</summary>
      <returns>Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das den aktuellen Knoten und dessen untergeordnete Knoten enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Elementknoten oder dem Stammknoten positioniert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Ersetzt einen Bereich von nebengeordneten Knoten, vom aktuellen Knoten bis zum angegebenen Knoten.</summary>
      <param name="lastSiblingToReplace">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der auf dem letzten zu ersetzenden nebengeordneten Knoten im Bereich positioniert ist.</param>
      <returns>Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, mit dem der Bereich für die Ersetzung angegeben wird.</returns>
      <exception cref="T:System.ArgumentNullException">Das angegebene <see cref="T:System.Xml.XPath.XPathNavigator" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.InvalidOperationException">Der angegebene letzte zu ersetzende Knoten ist kein gültiger nebengeordneter Knoten des aktuellen Knotens.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Ersetzt den aktuellen Knoten mit dem Inhalt der angegebenen Zeichenfolge.</summary>
      <param name="newNode">Die Zeichenfolge mit XML-Daten für den neuen Knoten.</param>
      <exception cref="T:System.ArgumentNullException">Der XML-Zeichenfolgenparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> befindet sich nicht auf einem Element, einem Text, einer Verarbeitungsanweisung oder einem Kommentarknoten.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Zeichenfolgenparameter ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Ersetzt den aktuellen Knoten durch den Inhalt des angegebenen <see cref="T:System.Xml.XmlReader" />-Objekts.</summary>
      <param name="newNode">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das auf den XML-Daten für den neuen Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentException">Das <see cref="T:System.Xml.XmlReader" />-Objekt befindet sich in einem Fehlerzustand oder wurde geschlossen.</exception>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XmlReader" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Elementknoten, Textknoten, Kommentarknoten oder Knoten für eine Verarbeitungsanweisung positioniert.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XmlReader" />-Objektparameters ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Ersetzt den aktuellen Knoten durch den Inhalt des angegebenen <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekts.</summary>
      <param name="newNode">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem neuen Knoten positioniert ist.</param>
      <exception cref="T:System.ArgumentNullException">Der <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameter ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Elementknoten, Textknoten, Kommentarknoten oder Knoten für eine Verarbeitungsanweisung positioniert.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
      <exception cref="T:System.Xml.XmlException">Der XML-Inhalt des <see cref="T:System.Xml.XPath.XPathNavigator" />-Objektparameters ist nicht ordnungsgemäß formatiert.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Ruft die Schemainformationen ab, die dem aktuellen Knoten nach der Schemavalidierung zugewiesen wurden.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.IXmlSchemaInfo" />-Objekt, das die Schemainformationen für den aktuellen Knoten enthält.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Wählt unter Verwendung des angegebenen XPath-Ausdrucks eine Knotengruppe aus.</summary>
      <param name="xpath">Eine <see cref="T:System.String" />, die einen XPath-Ausdruck darstellt.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der auf die ausgewählte Knotengruppe zeigt.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdruck enthält einen Fehler oder der Rückgabetyp ist keine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Wählt mit dem angegebenen XPath-Ausdruck eine Knotengruppe aus, wobei das angegebene <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt zum Auflösen von Namespacepräfixen verwendet wird.</summary>
      <param name="xpath">Eine <see cref="T:System.String" />, die einen XPath-Ausdruck darstellt.</param>
      <param name="resolver">Das zum Auflösen von Namespacepräfixen verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der auf die ausgewählte Knotengruppe zeigt.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdruck enthält einen Fehler oder der Rückgabetyp ist keine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Wählt unter Verwendung der angegebenen <see cref="T:System.Xml.XPath.XPathExpression" /> eine Knotengruppe aus.</summary>
      <param name="expr">Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt, das die kompilierte XPath-Abfrage enthält.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der auf die ausgewählte Knotengruppe zeigt.</returns>
      <exception cref="T:System.ArgumentException">Der XPath-Ausdruck enthält einen Fehler oder der Rückgabetyp ist keine Knotengruppe.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Der XPath-Ausdruck ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Wählt alle übergeordneten Knoten des aktuellen Knotens mit dem angegebenen lokalen Namen und Namespace-URI aus.</summary>
      <param name="name">Der lokale Name der früheren Knotenversionen.</param>
      <param name="namespaceURI">Der Namespace-URI der früheren Knotenversionen.</param>
      <param name="matchSelf">
        <see langword="true" />, um den Kontextknoten in die Auswahl einzuschließen, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält. Die zurückgegebenen Knoten liegen in umgekehrter Dokumentenreihenfolge vor.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> kann nicht als Parameter übergeben werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Wählt alle übergeordneten Knoten des aktuellen Knoten aus, die über einen übereinstimmenden <see cref="T:System.Xml.XPath.XPathNodeType" /> verfügen.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> der übergeordneten Knoten.</param>
      <param name="matchSelf">
        <see langword="true" />, um den Kontextknoten in die Auswahl einzuschließen, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält. Die zurückgegebenen Knoten liegen in umgekehrter Dokumentenreihenfolge vor.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Wählt alle direkt untergeordneten Knoten des aktuellen Knotens mit dem angegebenen lokalen Namen und Namespace-URI aus.</summary>
      <param name="name">Der lokale Name der untergeordneten Knoten.</param>
      <param name="namespaceURI">Der Namespace-URI der untergeordneten Knoten.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> kann nicht als Parameter übergeben werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Wählt alle direkt untergeordneten Knoten des aktuellen Knotens mit dem entsprechenden <see cref="T:System.Xml.XPath.XPathNodeType" /> aus.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> der direkt untergeordneten Knoten.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Wählt alle untergeordneten Knoten des aktuellen Knotens mit dem angegebenen lokalen Namen und Namespace-URI aus.</summary>
      <param name="name">Der lokale Name der Knotennachkommen.</param>
      <param name="namespaceURI">Der Namespace-URI der Knotennachkommen.</param>
      <param name="matchSelf">
        <see langword="true" />, wenn der Kontextknoten in die Auswahl eingeschlossen werden soll, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> kann nicht als Parameter übergeben werden.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Wählt alle untergeordneten Knoten des aktuellen Knoten aus, die über einen übereinstimmenden <see cref="T:System.Xml.XPath.XPathNodeType" /> verfügen.</summary>
      <param name="type">Der <see cref="T:System.Xml.XPath.XPathNodeType" /> der untergeordneten Knoten.</param>
      <param name="matchSelf">
        <see langword="true" />, wenn der Kontextknoten in die Auswahl eingeschlossen werden soll, andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNodeIterator" />, der die ausgewählten Knoten enthält.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Wählt im <see cref="T:System.Xml.XPath.XPathNavigator" /> mit der angegebenen XPath-Abfrage einen einzelnen Knoten aus.</summary>
      <param name="xpath">Eine <see cref="T:System.String" />, die einen XPath-Ausdruck darstellt.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das den ersten übereinstimmenden Knoten für die angegebene XPath-Abfrage enthält. <see langword="null" />, wenn keine Abfrageergebnisse vorhanden sind.</returns>
      <exception cref="T:System.ArgumentException">In der XPath-Abfrage wurde ein Fehler gefunden, oder der Rückgabetyp des XPath-Ausdrucks ist kein Knoten.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Die XPath-Abfrage ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Wählt mit der angegebenen XPath-Abfrage einen einzelnen Knoten im <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt aus. Dabei wird das angegebene <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt zum Auflösen von Namespacepräfixen verwendet.</summary>
      <param name="xpath">Ein <see cref="T:System.String" />, der einen XPath-Ausdruck darstellt.</param>
      <param name="resolver">Das <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt, das zum Auflösen von Namespacepräfixen in der XPath-Abfrage verwendet wird.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das den ersten übereinstimmenden Knoten für die angegebene XPath-Abfrage enthält. <see langword="null" />, wenn keine Abfrageergebnisse vorhanden sind.</returns>
      <exception cref="T:System.ArgumentException">In der XPath-Abfrage wurde ein Fehler gefunden, oder der Rückgabetyp des XPath-Ausdrucks ist kein Knoten.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Die XPath-Abfrage ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Wählt im <see cref="T:System.Xml.XPath.XPathNavigator" /> mit dem angegebenen <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt einen einzelnen Knoten aus.</summary>
      <param name="expression">Ein <see cref="T:System.Xml.XPath.XPathExpression" />-Objekt, das die kompilierte XPath-Abfrage enthält.</param>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das den ersten übereinstimmenden Knoten für die angegebene XPath-Abfrage enthält. <see langword="null" />, wenn keine Abfrageergebnisse vorhanden sind.</returns>
      <exception cref="T:System.ArgumentException">In der XPath-Abfrage wurde ein Fehler gefunden, oder der Rückgabetyp des XPath-Ausdrucks ist kein Knoten.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">Die XPath-Abfrage ist ungültig.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Legt den typisierten Wert des aktuellen Knotens fest.</summary>
      <param name="typedValue">Der neue typisierte Wert des Knotens.</param>
      <exception cref="T:System.ArgumentException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt den Typ des angegebenen Objekts nicht.</exception>
      <exception cref="T:System.ArgumentNullException">Der angegebene Wert darf nicht <see langword="null" /> sein.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist nicht auf einem Element- oder Attributknoten positioniert.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Legt den Wert des aktuellen Knotens fest.</summary>
      <param name="value">Der neue Wert des Knotens.</param>
      <exception cref="T:System.ArgumentNullException">Der Parameterwert ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> ist auf dem Stammknoten positioniert, einem Namespaceknoten, oder der angegebene Wert ist ungültig.</exception>
      <exception cref="T:System.NotSupportedException">Der <see cref="T:System.Xml.XPath.XPathNavigator" /> unterstützt keine Bearbeitung.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Erstellt eine neue Kopie des <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekts.</summary>
      <returns>Eine neue Kopie des <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekts.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Ruft den Textwert des aktuellen Knotens ab.</summary>
      <returns>Ein <see langword="string" />, der den Textwert des aktuellen Knotens enthält.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Ruft den aktuellen Knoten als ein geschachteltes Objekt vom geeignetsten .NET Framework-Typ ab.</summary>
      <returns>Der aktuelle Knoten als geschachteltes Objekt vom geeignetsten .NET Framework-Typ.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Wird von <see cref="T:System.Xml.XPath.XPathNavigator" />-Implementierungen verwendet, die eine "virtualisierte" XML-Ansicht für einen Speicher enthalten, um Zugriff auf zugrunde liegende Objekte zu ermöglichen.</summary>
      <returns>Die Standardeinstellung ist <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Ruft den Wert des aktuellen Knotens mit dem angegebenen <see cref="T:System.Type" /> ab. Dabei wird das angegebene <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt zum Auflösen von Namespacepräfixen verwendet.</summary>
      <param name="returnType">Der <see cref="T:System.Type" />, mit dem der Wert des aktuellen Knotens zurückgegeben werden soll.</param>
      <param name="nsResolver">Das zum Auflösen von Namespacepräfixen verwendete <see cref="T:System.Xml.IXmlNamespaceResolver" />-Objekt.</param>
      <returns>Der Wert des aktuellen Knotens mit dem angeforderten <see cref="T:System.Type" />.</returns>
      <exception cref="T:System.FormatException">Der Wert des aktuellen Knotens weist nicht das richtige Format für den Zieltyp auf.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Ruft den Wert des aktuellen Knotens als <see cref="T:System.Boolean" /> ab.</summary>
      <returns>Der Wert des aktuellen Knotens als <see cref="T:System.Boolean" />.</returns>
      <exception cref="T:System.FormatException">Der Zeichenfolgenwert des aktuellen Knotens kann nicht in einen <see cref="T:System.Boolean" /> konvertiert werden.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Boolean" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Ruft den Wert des aktuellen Knotens als <see cref="T:System.DateTime" /> ab.</summary>
      <returns>Der Wert des aktuellen Knotens als <see cref="T:System.DateTime" />.</returns>
      <exception cref="T:System.FormatException">Der Zeichenfolgenwert des aktuellen Knotens kann nicht in einen <see cref="T:System.DateTime" /> konvertiert werden.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.DateTime" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Ruft den Wert des aktuellen Knotens als <see cref="T:System.Double" /> ab.</summary>
      <returns>Der Wert des aktuellen Knotens als <see cref="T:System.Double" />.</returns>
      <exception cref="T:System.FormatException">Der Zeichenfolgenwert des aktuellen Knotens kann nicht in einen <see cref="T:System.Double" /> konvertiert werden.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Double" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Ruft den Wert des aktuellen Knotens als <see cref="T:System.Int32" /> ab.</summary>
      <returns>Der Wert des aktuellen Knotens als <see cref="T:System.Int32" />.</returns>
      <exception cref="T:System.FormatException">Der Zeichenfolgenwert des aktuellen Knotens kann nicht in einen <see cref="T:System.Int32" /> konvertiert werden.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int32" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Ruft den Wert des aktuellen Knotens als <see cref="T:System.Int64" /> ab.</summary>
      <returns>Der Wert des aktuellen Knotens als <see cref="T:System.Int64" />.</returns>
      <exception cref="T:System.FormatException">Der Zeichenfolgenwert des aktuellen Knotens kann nicht in einen <see cref="T:System.Int64" /> konvertiert werden.</exception>
      <exception cref="T:System.InvalidCastException">Die versuchte Typumwandlung in <see cref="T:System.Int64" /> ist ungültig.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Ruft den <see cref="T:System.Type" /> des aktuellen Knotens in .NET Framework ab.</summary>
      <returns>Der <see cref="T:System.Type" /> des aktuellen Knotens in .NET Framework. Der Standardwert ist <see cref="T:System.String" />sein.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Übergibt den aktuellen Knoten und dessen untergeordnete Knoten als Stream an das angegebene <see cref="T:System.Xml.XmlWriter" />-Objekt.</summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, an das die Daten übergeben werden sollen.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Ruft den <c>xml:lang</c>-Bereich für den aktuellen Knoten ab.</summary>
      <returns>Eine <see cref="T:System.String" />, die den Wert des <c>XML: lang</c> -Bereichs enthält, oder <see cref="F:System.String.Empty" />, wenn der aktuelle Knoten keinen <c>XML: lang</c> -Bereichs Wert enthält, der zurückgegeben werden soll.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Ruft die <see cref="T:System.Xml.Schema.XmlSchemaType" />-Informationen für den aktuellen Knoten ab.</summary>
      <returns>Ein <see cref="T:System.Xml.Schema.XmlSchemaType" />-Objekt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Stellt einen Iterator für eine ausgewählte Gruppe von Knoten bereit.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse einen Klon dieses <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekts zurück.</summary>
      <returns>Ein neuer <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objektklon dieses <see cref="T:System.Xml.XPath.XPathNodeIterator" />-Objekts.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Ruft den Index des letzten Knotens in der ausgewählten Gruppe von Knoten ab.</summary>
      <returns>Der -Index des letzten Knotens in der ausgewählten Gruppe von Knoten oder 0, wenn keine Knoten ausgewählt sind.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>Ruft beim Überscheiben in einer abgeleiteten Klasse das <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt für diesen <see cref="T:System.Xml.XPath.XPathNodeIterator" /> ab, der sich auf dem aktuellen Kontextknoten befindet.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das auf dem Kontextknoten positioniert ist, von dem die Gruppe von Knoten ausgewählt wurde. Die <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" />-Methode muss aufgerufen werden, um den <see cref="T:System.Xml.XPath.XPathNodeIterator" /> auf dem ersten Knoten in der ausgewählten Gruppe zu positionieren.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Index der aktuellen Position in der ausgewählten Gruppe von Knoten ab.</summary>
      <returns>Der -Index der aktuellen Position.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Gibt ein <see cref="T:System.Collections.IEnumerator" />-Objekt zurück, mit dem die Gruppe der ausgewählten Knoten durchlaufen werden kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt zum Durchlaufen der Gruppe der ausgewählten Knoten.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>Verschiebt beim Überschreiben in einer abgeleiteten Klasse das von der <see cref="T:System.Xml.XPath.XPathNavigator" />-Eigenschaft zurückgegebene <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" />-Objekt auf den nächsten Knoten in der Gruppe der ausgewählten Knoten.</summary>
      <returns>
        <see langword="true" />, wenn das <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt auf den nächsten Knoten verschoben wurde, <see langword="false" />, wenn keine weiteren Knoten ausgewählt sind.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Erstellt ein neues Objekt, das eine Kopie der aktuellen Instanz darstellt.</summary>
      <returns>Ein neues Objekt, das eine Kopie dieser Instanz ist.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Definiert die XPath-Knotentypen, die von der <see cref="T:System.Xml.XPath.XPathNavigator" />-Klasse zurückgegeben werden können.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Ein beliebiger <see cref="T:System.Xml.XPath.XPathNodeType" />-Knotentyp.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Ein Attribut, z.B. <c>id='123'</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Ein Kommentar, z.B. <c>&lt;!-- mein Kommentar--&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Ein Element, z.B. <c>&lt;element&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Ein Namespace, z.B. <c>xmlns="namespace"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Eine Verarbeitungsanweisung, z.B. <c>&lt;?pi test?&gt;</c>. Dies gilt nicht für XML-Deklarationen, die für die <see cref="T:System.Xml.XPath.XPathNavigator" />-Klasse nicht sichtbar sind.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>Der Stammknoten des XML-Dokuments oder der Knotenstruktur.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>Ein Knoten mit Leerraumzeichen, bei dem <c>xml:space</c> auf <c>preserve</c> festgelegt ist.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>Der Textinhalt eines Knotens. Entspricht den DOM (Document Object Model)-Knotentypen Text und CDATA. Enthält mindestens ein Zeichen.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>Ein Knoten, der nur Leerraumzeichen und keinen signifikanten Leerraum enthält. Als Leerraumzeichen zählen <c>#x20</c>, <c>#x9</c>, <c>#xD</c>, oder <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Gibt den Rückgabetyp des XPath-Ausdrucks an.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Ein beliebiger XPath-Knotentyp.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>Der <see cref="T:System.Boolean" />-Wert <see langword="true" /> oder <see langword="false" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>Der Ausdruck wird nicht als der richtige XPath-Typ ausgewertet.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Ein Strukturfragment.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Eine Knotenauflistung.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Ein numerischer Wert.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>Ein <see cref="T:System.String" />-Wert.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Stellt eine Schnittstelle für eine angegebene Funktion bereit, die bei der Ausführung zur Laufzeit im XSLT (Extensible Stylesheet Language for Transformations)-Stylesheet definiert wird.</summary>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Ruft die bereitgestellten XPath (XML Path Language)-Typen für die Argumentliste der Funktion ab. Diese Informationen können zum Ermitteln der Signatur der Funktion verwendet werden. Dadurch lassen sich überladene Funktionen unterscheiden.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathResultType" />-Array , der die Typen für die Argumentliste der Funktion darstellt.</returns>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Stellt die Methode bereit, mit der die Funktion im angegebenen Kontext mit den angegebenen Argumenten aufgerufen werden kann.</summary>
      <param name="xsltContext">Der XSLT-Kontext für den Funktionsaufruf.</param>
      <param name="args">Die Argumente des Funktionsaufrufs. Jedes Argument ist ein Element im Array.</param>
      <param name="docContext">Der Kontextknoten für den Funktionsaufruf.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Rückgabewert der Funktion darstellt.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Ruft die maximale Anzahl von Argumenten für die Funktion ab. Dadurch kann der Benutzer zwischen überladenen Funktionen unterscheiden.</summary>
      <returns>Die maximale Anzahl von Argumenten für die Funktion.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Ruft die minimale Anzahl von Argumenten für die Funktion ab. Dadurch kann der Benutzer zwischen überladenen Funktionen unterscheiden.</summary>
      <returns>Die minimale Anzahl von Argumenten für die Funktion.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Ruft den <see cref="T:System.Xml.XPath.XPathResultType" /> ab, der den von der Funktion zurückgegebenen XPath-Typ darstellt.</summary>
      <returns>Ein <see cref="T:System.Xml.XPath.XPathResultType" />, der den von der Funktion zurückgegebenen XPath-Typ darstellt.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Stellt eine Schnittstelle für eine angegebene Variable bereit, die bei der Ausführung zur Laufzeit im Stylesheet definiert wird.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Wertet die Variable zur Laufzeit aus und gibt ein Objekt zurück, das den Wert der Variablen darstellt.</summary>
      <param name="xsltContext">Ein <see cref="T:System.Xml.Xsl.XsltContext" />, der den Ausführungskontext der Variablen darstellt.</param>
      <returns>Ein <see cref="T:System.Object" />, das den Wert der Variablen darstellt. Mögliche Rückgabetypen sind u. a. Zahl, Zeichenfolge, Boolescher Wert, Dokumentfragment oder Knotengruppe.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Ruft einen Wert ab, der angibt, ob es sich um eine lokale Variable handelt.</summary>
      <returns>
        <see langword="true" />, wenn es sich bei der Variablen um eine lokale Variable im aktuellen Kontext handelt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Ruft einen Wert ab, der angibt, ob die Variable ein XSLT (Extensible Stylesheet Language Transformation)-Parameter ist. Dabei kann es sich um einen Parameter für ein Stylesheet oder eine Vorlage handeln.</summary>
      <returns>
        <see langword="true" />, wenn die Variable ein XSLT-Parameter ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Ruft den <see cref="T:System.Xml.XPath.XPathResultType" /> ab, der den XPath (XML Path Language)-Typ der Variablen darstellt.</summary>
      <returns>Der <see cref="T:System.Xml.XPath.XPathResultType" />, der den XPath-Typ der Variablen darstellt.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Transformiert XML-Daten mithilfe eines XSLT-Stylesheets.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XslCompiledTransform" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XslCompiledTransform" />-Klasse mit der angegebenen Debugeinstellung.</summary>
      <param name="enableDebug">
        <see langword="true" />, wenn Debuginformationen generiert werden sollen, andernfalls <see langword="false" />. Wenn dies auf <see langword="true" /> festgelegt ist, können Sie das Stylesheet mit dem Debugger von Microsoft Visual Studio debuggen.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Lädt eine Methode aus einem Stylesheet, das mit <see langword="XSLTC.exe" /> kompiliert wurde.</summary>
      <param name="executeMethod">Ein <see cref="T:System.Reflection.MethodInfo" />-Objekt, das die vom Compiler generierte <c>execute</c>-Methode des kompilierten Stylesheets darstellt.</param>
      <param name="queryData">Ein Bytearray mit serialisierten Datenstrukturen im <c>staticData</c>-Feld des kompilierten Stylesheets, wie es von der <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />-Methode generiert wurde.</param>
      <param name="earlyBoundTypes">Ein Array mit Typen, das im vom Compiler generierten <c>ebTypes</c>-Feld des kompilierten Stylesheets gespeichert ist.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Lädt und kompiliert das am angegebenen URI abgelegte Stylesheet.</summary>
      <param name="stylesheetUri">Der URI des Stylesheets.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheetUri" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Das Stylesheet kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="stylesheetUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="stylesheetUri" />-Wert kann nicht aufgelöst werden.
- oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Stylesheets ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Lädt und kompiliert das vom URI angegebene XSLT-Stylesheet. Der <see cref="T:System.Xml.XmlResolver" /> löst die vorhandenen <c>import</c>-XSLT-Elemente und <c>include</c>-XSLT-Elemente auf, und die XSLT-Einstellungen legen die Berechtigungen für das Stylesheet fest.</summary>
      <param name="stylesheetUri">Der URI des Stylesheets.</param>
      <param name="settings">Die auf das Stylesheet angewendeten <see cref="T:System.Xml.Xsl.XsltSettings" />. Bei einem Wert von <see langword="null" /> wird die <see cref="P:System.Xml.Xsl.XsltSettings.Default" />-Einstellung angewendet.</param>
      <param name="stylesheetResolver">Der <see cref="T:System.Xml.XmlResolver" />, mit dem der URI des Stylesheets aufgelöst wird, sowie Stylesheets, auf die von <c>import</c>-XSLT-Elementen und <c>include</c>-XSLT-Elementen verwiesen wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheetUri" />-Wert oder der <paramref name="stylesheetResolver" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Das Stylesheet kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="stylesheetUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="stylesheetUri" />-Wert kann nicht aufgelöst werden.

oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Stylesheets ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Lädt das kompilierte Stylesheet, das mit dem XSLT-Compiler (xsltc.exe) erstellt wurde.</summary>
      <param name="compiledStylesheet">Der Name der Klasse, die das kompilierte Stylesheet enthält.
Dies ist normalerweise der Name des Stylesheets. Wenn nicht anders angegeben, verwendet xsltc.exe den Namen des Stylesheets als Klassen- und als Assemblynamen.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Kompiliert das im <see cref="T:System.Xml.XmlReader" /> enthaltene Stylesheet.</summary>
      <param name="stylesheet">Ein <see cref="T:System.Xml.XmlReader" />, der das Stylesheet enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheet" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Kompiliert das im <see cref="T:System.Xml.XmlReader" /> enthaltene XSLT-Stylesheet. Der <see cref="T:System.Xml.XmlResolver" /> löst die vorhandenen <c>import</c>-XSLT-Elemente und <c>include</c>-XSLT-Elemente auf, und die XSLT-Einstellungen legen die Berechtigungen für das Stylesheet fest.</summary>
      <param name="stylesheet">Der <see cref="T:System.Xml.XmlReader" />, der das Stylesheet enthält.</param>
      <param name="settings">Die auf das Stylesheet angewendeten <see cref="T:System.Xml.Xsl.XsltSettings" />. Bei einem Wert von <see langword="null" /> wird die <see cref="P:System.Xml.Xsl.XsltSettings.Default" />-Einstellung angewendet.</param>
      <param name="stylesheetResolver">Der <see cref="T:System.Xml.XmlResolver" /> zum Auflösen vorhandener Stylesheets, auf die in <c>import</c>-XSLT-Elementen und <c>include</c>-XSLT-Elementen verwiesen wird. Bei <see langword="null" /> werden externe Ressourcen nicht aufgelöst.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheet" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Kompiliert das im <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt enthaltene Stylesheet.</summary>
      <param name="stylesheet">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. In .Microsoft NET Framework kann dies entweder ein <see cref="T:System.Xml.XmlNode" /> (normalerweise ein <see cref="T:System.Xml.XmlDocument" />) oder ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit dem Stylesheet sein.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheet" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Kompiliert das im <see cref="T:System.Xml.XPath.IXPathNavigable" /> enthaltene XSLT-Stylesheet. Der <see cref="T:System.Xml.XmlResolver" /> löst die vorhandenen <c>import</c>-XSLT-Elemente und <c>include</c>-XSLT-Elemente auf, und die XSLT-Einstellungen legen die Berechtigungen für das Stylesheet fest.</summary>
      <param name="stylesheet">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. In .Microsoft NET Framework kann dies entweder ein <see cref="T:System.Xml.XmlNode" /> (normalerweise ein <see cref="T:System.Xml.XmlDocument" />) oder ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit dem Stylesheet sein.</param>
      <param name="settings">Die auf das Stylesheet angewendeten <see cref="T:System.Xml.Xsl.XsltSettings" />. Bei einem Wert von <see langword="null" /> wird die <see cref="P:System.Xml.Xsl.XsltSettings.Default" />-Einstellung angewendet.</param>
      <param name="stylesheetResolver">Der <see cref="T:System.Xml.XmlResolver" /> zum Auflösen vorhandener Stylesheets, auf die in <c>import</c>-XSLT-Elementen und <c>include</c>-XSLT-Elementen verwiesen wird. Bei <see langword="null" /> werden externe Ressourcen nicht aufgelöst.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="stylesheet" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Das Stylesheet enthält einen Fehler.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Ruft ein <see cref="T:System.Xml.XmlWriterSettings" />-Objekt mit den Ausgabeinformationen ab, die vom <c>xsl:output</c>-Element des Stylesheets abgeleitet sind.</summary>
      <returns>Ein Schreib geschütztes- <see cref="T:System.Xml.XmlWriterSettings" /> Objekt, das die Ausgabeinformationen enthält, die vom <c>xsl: Output</c> -Element des Stylesheets abgeleitet wurden. Dieser Wert kann <see langword="null" /> sein.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Führt die Transformation anhand des vom URI angegebenen Eingabedokuments aus und gibt die Ergebnisse in eine Datei aus.</summary>
      <param name="inputUri">Der URI des Eingabedokuments.</param>
      <param name="resultsFile">Der URI der Ausgabedatei.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert oder der <paramref name="resultsFile" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Das Eingabedokument kann nicht gefunden werden.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="inputUri" />-Wert oder der <paramref name="resultsFile" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="inputUri" />-Wert oder der <paramref name="resultsFile" />-Wert kann nicht aufgelöst werden.
- oder -
Fehler bei der Verarbeitung der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> oder <paramref name="resultsFile" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Eingabedokuments ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom URI angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="inputUri">Der URI des Eingabedokuments.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="inputUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="inputUri" />-Wert kann nicht aufgelöst werden.
- oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Eingabedokuments ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Führt die Transformation anhand des vom URI angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen Stream aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="inputUri">Der URI des Eingabedokuments.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der Stream, in den ausgegeben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="inputUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="inputUri" />-Wert kann nicht aufgelöst werden.

oder -
Fehler bei der Verarbeitung der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Eingabedokuments ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Führt die Transformation anhand des vom URI angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.IO.TextWriter" /> aus.</summary>
      <param name="inputUri">Der URI des Eingabedokuments.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="inputUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="inputUri" />-Wert kann nicht aufgelöst werden.

oder -
Fehler bei der Verarbeitung der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Eingabedokuments ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom URI angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="inputUri">Der URI des Eingabedokuments.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="inputUri" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Der <paramref name="inputtUri" />-Wert enthält einen Dateinamen oder ein Verzeichnis, das nicht gefunden werden kann.</exception>
      <exception cref="T:System.Net.WebException">Der <paramref name="inputUri" />-Wert kann nicht aufgelöst werden.
- oder -
Fehler beim Verarbeiten der Anforderung.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> ist kein gültiger URI.</exception>
      <exception cref="T:System.Xml.XmlException">Beim Laden des Eingabedokuments ist ein Analysefehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XmlReader" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Der <see cref="T:System.Xml.XmlReader" />, der das Eingabedokument enthält.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XmlReader" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen Stream aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Der <see cref="T:System.Xml.XmlReader" />, der das Eingabedokument enthält.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der Stream, in den ausgegeben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XmlReader" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.IO.TextWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Der <see cref="T:System.Xml.XmlReader" />, der das Eingabedokument enthält.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XmlReader" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Der <see cref="T:System.Xml.XmlReader" />, der das Eingabedokument enthält.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XmlReader" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit, und der XmlResolver löst die <c>document()</c>-XSLT-Funktion auf.</summary>
      <param name="input">Der <see cref="T:System.Xml.XmlReader" />, der das Eingabedokument enthält.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <param name="documentResolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in Microsoft .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (i. d. R. ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen Stream aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in Microsoft .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (i. d. R. ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der Stream, in den ausgegeben werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.IO.TextWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in Microsoft .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (i. d. R. ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in Microsoft .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (i. d. R. ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="arguments">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" /> mit durch Namespaces gekennzeichneten Argumenten, die als Eingabe für die Transformation verwendet werden. Dieser Wert kann <see langword="null" /> sein.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <c>xsl:output</c>-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="input" />-Wert oder der <paramref name="results" />-Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Bei der Ausführung der XSLT-Transformation ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Führt die Transformation anhand des vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegebenen Eingabedokuments aus und gibt die Ergebnisse an einen <see cref="T:System.Xml.XmlWriter" /> aus. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> stellt zusätzliche Laufzeitargumente bereit, und der <see cref="T:System.Xml.XmlResolver" /> löst die XSLT-<see langword="document()" />-Funktion auf.</summary>
      <param name="input">Das zu transformierende Dokument, das vom <see cref="T:System.Xml.XPath.IXPathNavigable" />-Objekt angegeben wird.</param>
      <param name="arguments">Argumentliste als <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.
Wenn das Stylesheet ein <see langword="xsl:output" />-Element enthält, müssen Sie den <see cref="T:System.Xml.XmlWriter" /> mithilfe des <see cref="T:System.Xml.XmlWriterSettings" />-Objekts erstellen, das von der <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />-Eigenschaft zurückgegeben wird. Dieses Verfahren stellt sicher, dass <see cref="T:System.Xml.XmlWriter" /> die richtigen Ausgabeeinstellungen verwendet.</param>
      <param name="documentResolver">Der zum Auflösen der XSLT-<see langword="document()" />-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <see langword="document()" />-Funktion nicht aufgelöst.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Enthält eine variable Anzahl von Argumenten, die entweder XSLT-Parameter oder Erweiterungsobjekte sind.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Implementiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Fügt der <see cref="T:System.Xml.Xsl.XsltArgumentList" /> ein neues Objekt hinzu und ordnet es dem Namespace-URI zu.</summary>
      <param name="namespaceUri">Der Namespace-URI, der dem Objekt zugeordnet werden soll. Um den Standardnamespace verwenden zu können, geben Sie eine leere Zeichenfolge an.</param>
      <param name="extension">Das Objekt, das der Liste hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> ist entweder <see langword="null" /> oder http://www.w3.org/1999/XSL/Transform.
Dem <paramref name="namespaceUri" /> ist bereits ein Erweiterungsobjekt zugeordnet.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über ausreichende Berechtigungen zum Aufrufen dieser Methode.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Fügt der <see cref="T:System.Xml.Xsl.XsltArgumentList" /> einen Parameter hinzu und ordnet diesem den durch einen Namespace gekennzeichneten Namen zu.</summary>
      <param name="name">Der Name, der dem Parameter zugeordnet werden soll.</param>
      <param name="namespaceUri">Der Namespace-URI, der dem Parameter zugeordnet werden soll. Um den Standardnamespace verwenden zu können, geben Sie eine leere Zeichenfolge an.</param>
      <param name="parameter">Der Parameterwert oder das Objekt, der bzw. das der Liste hinzugefügt werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> ist entweder <see langword="null" /> oder http://www.w3.org/1999/XSL/Transform.
Der <paramref name="name" /> ist kein gültiger Name entsprechend der W3C-Spezifikation zu XML.
Dem <paramref name="namespaceUri" /> ist bereits ein Parameter zugeordnet.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Entfernt sämtliche Parameter und Erweiterungsobjekte aus der <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Ruft das dem angegebenen Namespace zugeordnete Objekt ab.</summary>
      <param name="namespaceUri">Der Namespace-URI des Objekts.</param>
      <returns>Das Namespace-URI-Objekt oder <see langword="null" />, wenn kein Namespace-URI-Objekt gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Ruft den Parameter ab, der dem durch Namespace gekennzeichneten Namen zugeordnet ist.</summary>
      <param name="name">Der Name des Parameters. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> überprüft nicht, ob der übergebene Name ein gültiger lokaler Name ist. Der Name darf jedoch nicht <see langword="null" /> sein.</param>
      <param name="namespaceUri">Der Namespace-URI, der dem Parameter zugeordnet ist.</param>
      <returns>Das Parameterobjekt oder <see langword="null" />, wenn kein Parameterobjekt gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Entfernt das Objekt mit dem Namespace-URI aus der <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri">Der Namespace-URI, der dem zu entfernenden Objekt zugeordnet ist.</param>
      <returns>Das Objekt mit dem Namespace-URI oder <see langword="null" />, wenn kein Objekt gefunden wurde.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Entfernt den Parameter aus der <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name">Der Name des zu entfernenden Parameters. Die <see cref="T:System.Xml.Xsl.XsltArgumentList" /> überprüft nicht, ob der übergebene Name ein gültiger lokaler Name ist. Der Name darf jedoch nicht <see langword="null" /> sein.</param>
      <param name="namespaceUri">Der Namespace-URI des zu entfernenden Parameters.</param>
      <returns>Das Parameterobjekt oder <see langword="null" />, wenn kein Parameterobjekt gefunden wurde.</returns>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Tritt ein, wenn das <c>xsl:message</c>-Element im Stylesheet eine Meldung angibt.</summary>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>Die Ausnahme, die von der Load-Methode ausgelöst wird, wenn ein Fehler im XSLT-Stylesheet gefunden wird.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltCompileException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see langword="XsltCompileException" />-Klasse.</summary>
      <param name="inner">Die von der <see langword="XsltCompileException" /> ausgelöste <see cref="T:System.Exception" />.</param>
      <param name="sourceUri">Der Pfad zum Speicherort des Stylesheets.</param>
      <param name="lineNumber">Die Nummer der Zeile, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</param>
      <param name="linePosition">Die Position der Zeile, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see langword="XsltCompileException" />-Klasse unter Verwendung der Informationen im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt und im <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt, das alle Eigenschaften einer <see langword="XsltCompileException" /> enthält.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt, das die Kontextinformationen enthält.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltCompileException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltCompileException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme verursacht hat.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
      <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder <see langword="null" />, wenn keine innere Ausnahme angegeben ist.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überträgt alle <see langword="XsltCompileException" />-Eigenschaften für den angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> in die <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Kapselt den aktuellen Ausführungskontext des XSLT (Extensible Stylesheet Language for Transformations)-Prozessor, wodurch es XPath (XML Path Language) ermöglicht wird, Funktionen, Parameter und Namespaces in XPath-Ausdrücken aufzulösen.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltContext" />-Klasse mit der angegebenen <see cref="T:System.Xml.NameTable" />.</summary>
      <param name="table">Der zu verwendende <see cref="T:System.Xml.NameTable" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>Vergleicht beim Überschreiben in einer abgeleiteten Klasse die Basis-URIs (Uniform Resource Identifiers) zweier Dokumente basierend auf der Reihenfolge, in der die Dokumente vom XSLT-Prozessor (d. h. der <see cref="T:System.Xml.Xsl.XslTransform" />-Klasse) geladen wurden.</summary>
      <param name="baseUri">Die Basis-URI des ersten zu vergleichenden Dokuments.</param>
      <param name="nextbaseUri">Die Basis-URI des zweiten zu vergleichenden Dokuments.</param>
      <returns>Ein Ganzzahlwert, der die relative Reihenfolge der beiden Basis-URIs beschreibt: –1, wenn <paramref name="baseUri" /> vor <paramref name="nextbaseUri" /> auftritt, 0 (null), wenn die beiden Basis-URIs identisch sind, und 1, wenn <paramref name="baseUri" /> nach <paramref name="nextbaseUri" /> auftritt.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Wertet beim Überschreiben in einer abgeleiteten Klasse aus, ob Leerraumknoten für den angegebenen Kontext beibehalten oder entfernt werden sollen.</summary>
      <param name="node">Der Leerraumknoten, der im aktuellen Kontext beibehalten oder entfernt werden soll.</param>
      <returns>
        <see langword="true" />, wenn der Leerraum beibehalten werden soll, oder <see langword="false" />, wenn der Leerraum entfernt werden soll.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse einen Funktionsverweis auf und gibt eine <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> zurück, die die Funktion darstellt. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> wird während der Ausführung verwendet, um den Rückgabewert der Funktion abzurufen.</summary>
      <param name="prefix">Das Präfix der Funktion, so wie es im XPath-Ausdruck auftritt.</param>
      <param name="name">Der Name der Funktion.</param>
      <param name="ArgTypes">Ein Array von Argumenttypen für die Funktion, die aufgelöst wird. Hierdurch wird es Ihnen ermöglicht, zwischen Methoden mit demselben Namen auszuwählen (z. B. überladene Methoden).</param>
      <returns>Eine <see cref="T:System.Xml.Xsl.IXsltContextFunction" />, die die Funktion darstellt.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>Löst beim Überschreiben in einer abgeleiteten Klasse einen Variablenverweis auf und gibt eine <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> zurück, die die Variable darstellt.</summary>
      <param name="prefix">Das Präfix der Variablen, so wie es im XPath-Ausdruck auftritt.</param>
      <param name="name">Der Name der Variablen.</param>
      <returns>Eine <see cref="T:System.Xml.Xsl.IXsltContextVariable" />, die die Variable zur Laufzeit darstellt.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse einen Wert ab, der angibt, ob Leerraumknoten in die Ausgabe miteinbezogen werden sollen.</summary>
      <returns>
        <see langword="true" />, um Leerraumknoten im Quelldokument für das Einbinden in die Ausgabe zu überprüfen, <see langword="false" />, um Leerraumknoten nicht zu überprüfen. Die Standardeinstellung ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn während der Verarbeitung einer XSLT-Transformation ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltException" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see langword="XsltException" />-Klasse unter Verwendung der Informationen im <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt und im <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt, das alle Eigenschaften einer <see langword="XsltException" /> enthält.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
      <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see langword="XsltException" />-Klasse.</summary>
      <param name="message">Die Beschreibung des Fehlerzustands.</param>
      <param name="innerException">Die von der <see langword="XsltException" /> ausgelöste <see cref="T:System.Exception" />, sofern vorhanden. Dieser Wert kann <see langword="null" /> sein.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Überträgt alle <see langword="XsltException" />-Eigenschaften für den angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" /> in die <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="info">Das <see langword="SerializationInfo" />-Objekt.</param>
      <param name="context">Das <see langword="StreamingContext" />-Objekt.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Ruft die Nummer der Zeile ab, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</summary>
      <returns>Die Nummer der Zeile, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Ruft die Position der Zeile ab, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</summary>
      <returns>Die Position der Zeile, die angibt, an welcher Stelle im Stylesheet der Fehler aufgetreten ist.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Ruft die formatierte Fehlermeldung ab, die die aktuelle Ausnahme beschreibt.</summary>
      <returns>Die formatierte Fehlermeldung, die die aktuelle Ausnahme beschreibt.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Ruft den Pfad zum Speicherort des Stylesheets ab.</summary>
      <returns>Der Pfad zum Speicherort des Stylesheets.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Stellt Daten für das <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />-Ereignis bereit.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />-Klasse.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Ruft die Inhalte des <c>xsl:message</c>-Elements ab.</summary>
      <returns>Der Inhalt des <c>xsl: Message</c> -Elements.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Stellt die Methode zur Behandlung des <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />-Ereignisses dar.</summary>
      <param name="sender">Die Quelle des Ereignisses.</param>
      <param name="e">Das <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />, das die Ereignisdaten enthält.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Transformiert XML-Daten unter Verwendung eines XSLT (Extensible Stylesheet Language for Transformations)-Stylesheets.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XslTransform" />-Klasse.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Lädt das durch eine URL angegebene XSLT-Stylesheet.</summary>
      <param name="url">Die URL, die das zu ladende XSLT-Stylesheet angibt.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Die geladene Ressource ist kein gültiges Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Lädt das durch eine URL angegebene XSLT-Stylesheet.</summary>
      <param name="url">Die URL, die das zu ladende XSLT-Stylesheet angibt.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> wird zum Laden des Stylesheets und ggf. zum Laden weiterer Stylesheets verwendet, auf die im <c>xsl:import</c>-Element und im <c>xsl:include</c>-Element verwiesen wird.
Bei <see langword="null" /> wird das Stylesheet mit einem Standard-<see cref="T:System.Xml.XmlUrlResolver" /> ohne Benutzeranmeldeinformationen geöffnet. Der Standard-<see cref="T:System.Xml.XmlUrlResolver" /> wird nicht zum Auflösen externer Ressourcen im Stylesheet verwendet. <c>xsl:import</c>-Elemente und <c>xsl:include</c>-Elemente werden daher nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Die geladene Ressource ist kein gültiges Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Lädt das im <see cref="T:System.Xml.XmlReader" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XSLT-Stylesheet enthält.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Der aktuelle Knoten entspricht keinem gültigen Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Lädt das im <see cref="T:System.Xml.XmlReader" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein <see cref="T:System.Xml.XmlReader" />-Objekt, das das XSLT-Stylesheet enthält.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> wird zum Laden von Stylesheets verwendet, auf die im <c>xsl:import</c>-Element und im <c>xsl:include</c>-Element verwiesen wird. Bei <see langword="null" /> werden externe Ressourcen nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Der aktuelle Knoten entspricht keinem gültigen Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Lädt das im <see cref="T:System.Xml.XPath.IXPathNavigable" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. In .NET Framework kann dies entweder ein <see cref="T:System.Xml.XmlNode" /> (normalerweise ein <see cref="T:System.Xml.XmlDocument" />) oder ein <see cref="T:System.Xml.XPath.XPathDocument" /> sein, das das XSLT-Stylesheet enthält.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Die geladene Ressource ist kein gültiges Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Lädt das im <see cref="T:System.Xml.XPath.IXPathNavigable" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. In .NET Framework kann dies entweder ein <see cref="T:System.Xml.XmlNode" /> (normalerweise ein <see cref="T:System.Xml.XmlDocument" />) oder ein <see cref="T:System.Xml.XPath.XPathDocument" /> sein, das das XSLT-Stylesheet enthält.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> wird zum Laden von Stylesheets verwendet, auf die im <c>xsl:import</c>-Element und im <c>xsl:include</c>-Element verwiesen wird. Bei <see langword="null" /> werden externe Ressourcen nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Die geladene Ressource ist kein gültiges Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Lädt das im <see cref="T:System.Xml.XPath.XPathNavigator" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das das XSLT-Stylesheet enthält.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Der aktuelle Knoten entspricht keinem gültigen Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Lädt das im <see cref="T:System.Xml.XPath.XPathNavigator" /> enthaltene XSLT-Stylesheet.</summary>
      <param name="stylesheet">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />-Objekt, das das XSLT-Stylesheet enthält.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> wird zum Laden von Stylesheets verwendet, auf die im <c>xsl:import</c>-Element und im <c>xsl:include</c>-Element verwiesen wird. Bei <see langword="null" /> werden externe Ressourcen nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">Der aktuelle Knoten entspricht keinem gültigen Stylesheet.</exception>
      <exception cref="T:System.Security.SecurityException">Das Stylesheet enthält eingebettete Skripts, und der Aufrufer verfügt nicht über die <see langword="UnmanagedCode" />-Berechtigung.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Transformiert die XML-Daten in der Eingabedatei und gibt das Ergebnis in eine Ausgabedatei aus.</summary>
      <param name="inputfile">Die URL des Quelldokuments, das transformiert werden soll.</param>
      <param name="outputfile">Die URL der Ausgabedatei.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in der Eingabedatei und gibt das Ergebnis in eine Ausgabedatei aus.</summary>
      <param name="inputfile">Die URL des Quelldokuments, das transformiert werden soll.</param>
      <param name="outputfile">Die URL der Ausgabedatei.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />-Methode nicht zwischengespeichert.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <returns>Ein <see cref="T:System.Xml.XmlReader" />, der die Ergebnisse der Transformation enthält.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.Stream" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der Stream, in den ausgegeben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.Stream" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der Stream, in den ausgegeben werden soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.TextWriter" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.TextWriter" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <returns>Ein <see cref="T:System.Xml.XmlReader" />, der die Ergebnisse der Transformation enthält.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.IXPathNavigable" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Ein Objekt, das die <see cref="T:System.Xml.XPath.IXPathNavigable" />-Schnittstelle implementiert. Dabei kann es sich in .NET Framework entweder um einen <see cref="T:System.Xml.XmlNode" /> (in der Regel ein <see cref="T:System.Xml.XmlDocument" />) oder um ein <see cref="T:System.Xml.XPath.XPathDocument" /> mit den zu transformierenden Daten handeln.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <returns>Ein <see cref="T:System.Xml.XmlReader" />, der die Ergebnisse der Transformation enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.Stream" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der Stream, in den ausgegeben werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.Stream" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der Stream, in den ausgegeben werden soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.TextWriter" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.IO.TextWriter" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.IO.TextWriter" />, an den die Ausgabe erfolgen soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten in <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen <paramref name="args" /> und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlReader" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <returns>Ein <see cref="T:System.Xml.XmlReader" />, der die Ergebnisse der Transformation enthält.</returns>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transformiert die XML-Daten im <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen args und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transformiert die XML-Daten im <see cref="T:System.Xml.XPath.XPathNavigator" /> unter Verwendung der angegebenen args und gibt das Ergebnis an einen <see cref="T:System.Xml.XmlWriter" /> aus.</summary>
      <param name="input">Ein <see cref="T:System.Xml.XPath.XPathNavigator" />, der die zu transformierenden Daten enthält.</param>
      <param name="args">Eine <see cref="T:System.Xml.Xsl.XsltArgumentList" />, die die mit dem Namespace gekennzeichneten Argumente enthält, die als Eingabe für die Transformation verwendet werden.</param>
      <param name="output">Der <see cref="T:System.Xml.XmlWriter" />, an den die Ausgabe erfolgen soll.</param>
      <param name="resolver">Der zum Auflösen der XSLT-<c>document()</c>-Funktion verwendete <see cref="T:System.Xml.XmlResolver" />. Wenn dies <see langword="null" /> ist, wird die <c>document()</c>-Funktion nicht aufgelöst.
Der <see cref="T:System.Xml.XmlResolver" /> wird nach Abschluss der <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />-Methode nicht zwischengespeichert.</param>
      <exception cref="T:System.InvalidOperationException">Beim Verarbeiten der XSLT-Transformation ist ein Fehler aufgetreten.
Hinweis: Dies ist eine Änderung im Verhalten gegenüber früheren Versionen. Eine <see cref="T:System.Xml.Xsl.XsltException" /> wird ausgelöst, wenn Sie Microsoft .NET Framework, Version 1.1 oder früher, verwenden.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Legt den <see cref="T:System.Xml.XmlResolver" /> fest, der zum Auflösen externer Ressourcen verwendet wird, wenn die <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />-Methode aufgerufen wird.</summary>
      <returns>Der bei der Transformation zu verwendende <see cref="T:System.Xml.XmlResolver" />. Wenn <see langword="null" />festgelegt ist, wird die XSLT- <c>Document ()</c> -Funktion nicht aufgelöst.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Gibt die XSLT-Features an, die während der Ausführung des XSLT-Stylesheets unterstützt werden sollen.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltSettings" />-Klasse mit Standardeinstellungen.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.Xsl.XsltSettings" />-Klasse mit den angegebenen Einstellungen.</summary>
      <param name="enableDocumentFunction">Der Wert wird auf <see langword="true" /> festgelegt, die Unterstützung der XSLT-Funktion <c>document()</c> zu aktivieren, andernfalls <see langword="false" />.</param>
      <param name="enableScript">
        <see langword="true" />, um die Unterstützung eingebetteter Skriptblöcke zu aktivieren, andernfalls <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Ruft ein <see cref="T:System.Xml.Xsl.XsltSettings" />-Objekt mit Standardeinstellungen ab. Die Unterstützung für die XSLT-Funktion <c>document()</c> und für eingebettete Skriptblöcke ist deaktiviert.</summary>
      <returns>Ein <see cref="T:System.Xml.Xsl.XsltSettings" />-Objekt, dessen <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" />-Eigenschaft und <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />-Eigenschaft auf <see langword="false" /> festgelegt sind.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Ruft einen Wert ab, der angibt, ob die Unterstützung der XSLT-Funktion <c>document()</c> aktiviert werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />So unterstützen Sie die XSLT- <c>Document ()</c> -Funktion <see langword="false" />andernfalls. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Ruft einen Wert ab, der angibt, ob die Unterstützung eingebetteter Skriptblöcke aktiviert werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um Skriptblöcke in XSLT-Stylesheets zu unterstützen, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Ruft ein <see cref="T:System.Xml.Xsl.XsltSettings" />-Objekt ab, das die Unterstützung der XSLT-Funktion <c>document()</c> und eingebetteter Skriptblöcke aktiviert.</summary>
      <returns>Ein <see cref="T:System.Xml.Xsl.XsltSettings" />-Objekt, dessen <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" />-Eigenschaft und <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" />-Eigenschaft auf <see langword="true" /> festgelegt sind.</returns>
    </member>
  </members>
</doc>