<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>Gibt Datum/Zeit-Formatoptionen an.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DateTimeFormat" />-Klasse unter Verwendung der Formatzeichenfolge.</summary>
      <param name="formatString">Die Formatzeichenfolge.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DateTimeFormat" />-Klasse unter Verwendung der Formatzeichenfolge und Formatanbieters.</summary>
      <param name="formatString">Die Formatzeichenfolge.</param>
      <param name="formatProvider">Der Formatanbieter.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>Ruft die Formatierungsoptionen ab bzw. legt diese fest, mit denen die Art der Analyse einer Zeichenfolge für eine Reihe von Datums- und Uhrzeit-Analysemethoden angepasst wird.</summary>
      <returns>Die Formatierungsoptionen, mit denen die Art der Analyse einer Zeichenfolge für eine Reihe von Datums- und Uhrzeit-Analysemethoden angepasst wird.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>Ruft ein Objekt zum Steuern der Formatierung ab.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>Ruft die Formatzeichenfolgen zur Festlegung des Formatierungsergebnisses ab, wenn ein Datums- oder Zeitwert als Zeichenfolge dargestellt werden soll.</summary>
      <returns>Die Formatzeichenfolgen zur Festlegung des Formatierungsergebnisses, wenn ein Datums- oder Zeitwert als Zeichenfolge dargestellt werden soll.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>Gibt an, wie oft Typinformationen ausgegeben werden.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>immer Typinformationen ausgeben.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>Bei Bedarf Typinformationen ausgeben.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>Typinformationen sollen niemals ausgeben werden.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serialisiert Objekte in die JavaScript Object Notation (JSON) und deserialisiert JSON-Daten zu Objekten. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="knownTypes">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs und Serialisierungsprogrammeinstellungen zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="settings">Die Serialisierungsprogrammeinstellungen für das JSON-Serialisierungsprogramm.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen Parameter angegebenen XML-Stammelements zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName">Der Name des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen Parameter angegebenen XML-Stammelements und mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName">Der Name des XML-Elements, das den zu serialisierenden bzw. zu deserialisierenden Inhalt enthält. Die Standardeinstellung ist "root".</param>
      <param name="knownTypes">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen <see cref="T:System.Xml.XmlDictionaryString" />-Parameter angegebenen XML-Stammelements zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Klasse, um ein Objekt des genannten Typs mithilfe des durch einen <see cref="T:System.Xml.XmlDictionaryString" />-Parameter angegebenen XML-Stammelements und mit einer Auflistung bekannter Typen, die ggf. im Objektdiagramm vorhanden sind, zu serialisieren bzw. zu deserialisieren.</summary>
      <param name="type">Der Typ der Instanzen, die serialisiert oder deserialisiert werden.</param>
      <param name="rootName">Ein <see cref="T:System.Xml.XmlDictionaryString" />-Objekt, das den Namen des Stammelements für den Inhalt enthält.</param>
      <param name="knownTypes">Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt des Typs <see cref="T:System.Type" />, das die in dem Objektdiagramm enthaltenen Typen angibt (falls vorhanden).</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>Ruft das Format der Elemente des Typs Datum/Zeit im Objektdiagramm ab.</summary>
      <returns>Das Format der Elemente des Typs Datum/Zeit im Objektdiagramm.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>Ruft die JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen ab oder legt diese fest.</summary>
      <returns>Die Einstellungen der JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Ruft einen Wert ab, der angibt, ob bei der Deserialisierung unbekannte Daten ignoriert werden und ob bei der Serialisierung die <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />-Schnittstelle ignoriert wird.</summary>
      <returns>
        <see langword="true" />, um unbekannte Daten und die <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />-Schnittstelle zu ignorieren, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Ruft einen Wert ab, der angibt, ob der <see cref="T:System.Xml.XmlDictionaryReader" /> auf einem XML-Element positioniert ist und ob es sich dabei um ein Objekt handelt, von dem aus das Serialisierungsprogramm deserialisieren kann.</summary>
      <param name="reader">Das <see cref="T:System.Xml.XmlDictionaryReader" />-Objekt, das zum Lesen des aus JSON zugeordneten XML-Streams verwendet wird.</param>
      <returns>
        <see langword="true" />, wenn der Reader korrekt positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Bestimmt, ob der <see cref="T:System.Xml.XmlReader" /> auf einem Objekt positioniert ist, das deserialisiert werden kann.</summary>
      <param name="reader">Das <see cref="T:System.Xml.XmlReader" />-Objekt, das zum Lesen des XML-Streams verwendet wird.</param>
      <returns>
        <see langword="true" />, wenn der Reader korrekt positioniert ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Ruft eine Auflistung der Typen in einem Objektdiagramm ab, die mithilfe einer Instanz des <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Objekts serialisiert werden.</summary>
      <returns>Ein <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Objekt, das die erwarteten Typen enthält, die als bekannte Typen an den <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Konstruktor übergeben werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab, die das Serialisierungsprogramm bei einem Lese- oder Schreibaufruf serialisieren oder deserialisieren kann.</summary>
      <returns>Die maximale Anzahl von Elementen, die serialisiert oder deserialisiert werden sollen.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Die Anzahl der Elemente ist größer als der Maximalwert.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Liest einen Dokumentstream im JSON-Format (JavaScript Object Notation) und gibt das deserialisierte Objekt zurück.</summary>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, das gelesen werden soll.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Liest das aus JSON (JavaScript Object Notation) zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Liest das aus JSON zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlDictionaryReader" /> und gibt das deserialisierte Objekt zurück. Sie können zudem angeben, ob das Serialisierungsprogramm vor der Deserialisierung überprüfen soll, ob der Reader auf einem geeigneten Element positioniert ist.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <param name="verifyObjectName">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem erwarteten Namen und Namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen. Die Standardeinstellung ist <see langword="true" />.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Liest das aus JSON (JavaScript Object Notation) zugeordnete XML-Dokument mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Liest ein aus JSON zugeordnetes XML-Dokument mit einem <see cref="T:System.Xml.XmlReader" /> und gibt das deserialisierte Objekt zurück. Sie können zudem angeben, ob das Serialisierungsprogramm vor der Deserialisierung überprüfen soll, ob der Reader auf einem geeigneten Element positioniert ist.</summary>
      <param name="reader">Ein <see cref="T:System.Xml.XmlReader" />, der zum Lesen des aus JSON zugeordneten XML-Dokuments verwendet wird.</param>
      <param name="verifyObjectName">
        <see langword="true" />, um zu überprüfen, ob der Name und der Namespace des einschließenden XML-Elements mit dem erwarteten Namen und Namespace übereinstimmen, andernfalls <see langword="false" />, um die Überprüfung zu überspringen. Die Standardeinstellung ist <see langword="true" />.</param>
      <returns>Das deserialisierte Objekt.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob schreibgeschützte Typen serialisiert werden sollen.</summary>
      <returns>
        <see langword="true" />, um schreibgeschützte Typen zu serialisieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>Ruft einen Wert ab, der angibt, ob ein einfaches Wörterbuchformat verwendet werden soll.</summary>
      <returns>
        <see langword="true" />, um ein einfaches Wörterbuchformat zu verwenden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Schreibt das abschließende XML-Element mithilfe eines <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekts in ein XML-Dokument, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Schreibt das abschließende XML-Element mithilfe eines <see cref="T:System.Xml.XmlWriter" />-Objekts in ein XML-Dokument, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serialisiert ein angegebenes Objekt in JSON-Daten (JavaScript Object Notation) und schreibt die resultierenden JSON-Daten in einen Stream.</summary>
      <param name="stream">Das <see cref="T:System.IO.Stream" />-Objekt, in das geschrieben wird.</param>
      <param name="graph">Das Objekt, das die in den Stream zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Serialisiert ein Objekt in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann. Schreibt alle Objektdaten, einschließlich des XML-Startelements, des Inhalts und des abschließenden Elements mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Dokuments oder XML-Streams verwendet wird, das/der JSON zugeordnet wird.</param>
      <param name="graph">Das Objekt, das die zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Serialisiert ein Objekt in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann. Schreibt alle Objektdaten, einschließlich des XML-Startelements, des Inhalts und des abschließenden Elements mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Ein <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Dokuments verwendet wird, das JSON zugeordnet wird.</param>
      <param name="graph">Das Objekt, das die zu schreibenden Daten enthält.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Schreibt den XML-Inhalt, der JSON (JavaScript Object Notation) zugeordnet werden kann, mit einem <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Der <see cref="T:System.Xml.XmlDictionaryWriter" />, in den geschrieben werden soll.</param>
      <param name="graph">Das zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Schreibt den XML-Inhalt, der JSON (JavaScript Object Notation) zugeordnet werden kann, mit einem <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben verwendet wird.</param>
      <param name="graph">Das zu schreibende Objekt.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">Der serialisierte Typ entspricht nicht den Datenvertragsregeln. Das <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut wurde z. B. nicht auf den Typ angewendet.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Es liegt ein Problem mit der Instanz vor, die geschrieben wird.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">Die maximale Anzahl von zu serialisierenden Objekten wurde überschritten. Überprüfen Sie die<see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />-Eigenschaft.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Schreibt mit einem <see cref="T:System.Xml.XmlDictionaryWriter" /> das öffnende XML-Element für die Serialisierung eines Objekts in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph">Das zu schreibende Objekt.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Schreibt mit einem <see cref="T:System.Xml.XmlWriter" /> das öffnende XML-Element für die Serialisierung eines Objekts in XML, das JSON (JavaScript Object Notation) zugeordnet werden kann.</summary>
      <param name="writer">Das <see cref="T:System.Xml.XmlWriter" />-Objekt, das zum Schreiben des XML-Startelements verwendet wird.</param>
      <param name="graph">Das zu schreibende Objekt.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>Gibt <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />-Einstellungen an.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />-Klasse.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>Ruft ein DateTimeFormat ab, das das für die Kultur spezifische Format zum Anzeigen von Datumsangaben und Uhrzeiten definiert, oder legt es fest.</summary>
      <returns>Das Datums- und Zeitformat, das für die Kultur spezifische Format zum Anzeigen von Datumsangaben und Uhrzeiten definiert, oder legt diese fest.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>Ruft die JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen ab oder legt diese fest.</summary>
      <returns>Die Einstellungen der JSON-Serialisierungseinstellungen für den Datenvertrag zum Ausgeben von Typinformationen.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>Ruft einen Wert ab bzw. legt diesen fest, der angibt, ob die Daten ignoriert werden sollen, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird.</summary>
      <returns>
        <see langword="true" />, um Daten zu ignorieren, die von einer Erweiterung dieser Klasse bereitgestellt werden, wenn die Klasse serialisiert oder deserialisiert wird; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>Ruft eine Auflistung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractJsonSerializerSettings serialisiert wurden, oder legt sie fest.</summary>
      <returns>Eine Sammlung der Typen im Objektdiagramm ab, die mithilfe dieser Instanz von DataContractJsonSerializerSettings serialisiert wurden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>Ruft die maximale Anzahl von Elementen in einem Objektdiagramm ab oder legt sie fest, die serialisiert oder deserialisiert werden.</summary>
      <returns>Die maximale Anzahl von Elementen in einem Objektdiagramm, die serialisiert oder deserialisiert werden.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>Übernimmt oder bestimmt den Stammnamen des ausgewählten Objekts.</summary>
      <returns>Der Stammname des ausgewählten Objekts.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob schreibgeschützte Typen serialisiert werden sollen.</summary>
      <returns>
        <see langword="true" />, um schreibgeschützte Typen zu serialisieren; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob ein einfaches Wörterbuchformat verwendet werden soll.</summary>
      <returns>
        <see langword="true" />, um ein einfaches Wörterbuchformat zu verwenden; andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Gibt die Schnittstelle für die Initialisierung eines JSON-Readers (JavaScript Object Notation) an, wenn dieser zum Lesen aus einem bestimmten Stream oder Puffer wiederverwendet wird.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitialisiert einen JSON-kompatiblen Reader (JavaScript Object Notation) für einen angegebenen Puffer, der JSON-codierte Daten enthält.</summary>
      <param name="buffer">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset">Die Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count">Die Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das von dem Reader verwendet wird.</param>
      <param name="quotas">Das anzuwendende <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinitialisiert einen JSON-kompatiblen Reader (JavaScript Object Notation) für einen angegebenen Stream, der JSON-codierte Daten enthält.</summary>
      <param name="stream">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das von dem Reader verwendet wird.</param>
      <param name="quotas">Die anzuwendenden<see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> .</param>
      <param name="onClose">Der aufzurufende Delegat, wenn der Reader geschlossen wird.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Gibt die Schnittstelle für die Initialisierung eines JSON-Writers (JavaScript Object Notation) an, wenn dieser zum Schreiben in einen bestimmten Ausgabestream wiederverwendet wird.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Initialisiert (oder reinitialisiert) einen JSON-Writer (JavaScript Object Notation) für einen bestimmten Ausgabestream mit der angegebenen Zeichencodierung.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" />, in den der Writer schreibt.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die Zeichencodierung des Ausgabestreams angibt.</param>
      <param name="ownsStream">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Erzeugt Instanzen von <see cref="T:System.Xml.XmlDictionaryReader" />, die mit JSON (JavaScript Object Notation) codierte Daten aus einem Stream oder Puffer lesen und diese einem XML-Infoset zuordnen können, sowie Instanzen von <see cref="T:System.Xml.XmlDictionaryWriter" />, die ein XML-Infoset zu JSON zuordnen und JSON-codierte Daten in einen Stream schreiben können.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe, einem festen Offset und einer spezifischen Zeichencodierung einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt. Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</param>
      <param name="quotas">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <param name="onClose">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> -Delegat, der beim Schließen des Readers aufgerufen wird. Der Standardwert ist <see langword="null" />sein.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="offset">Anfangsposition, von der in <paramref name="buffer" /> gelesen wird.</param>
      <param name="count">Byteanzahl, die von <paramref name="buffer" /> gelesen werden kann.</param>
      <param name="quotas">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Puffer einem XML-Infoset zuordnen kann.</summary>
      <param name="buffer">Das <see cref="T:System.Byte" />-Eingabepufferarray, aus dem gelesen wird.</param>
      <param name="quotas">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON-Daten (JavaScript Object Notation) verarbeiten kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams mit einer festen Größe und einem festen Offset einem XML-Infoset zuordnen kann.</summary>
      <param name="stream">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Reader verwendete Zeichencodierung angibt. Wenn als Wert <see langword="null" /> angegeben wird, versucht der Reader, die Codierung automatisch zu erkennen.</param>
      <param name="quotas">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <param name="onClose">Der <see cref="T:System.Xml.OnXmlDictionaryReaderClose" />-Delegat, der beim Schließen des Readers aufgerufen wird.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryReader" />, der mit JSON (JavaScript Object Notation) codierte Streams einem XML-Infoset zuordnen kann.</summary>
      <param name="stream">Der Eingabe-<see cref="T:System.IO.Stream" />, aus dem gelesen wird.</param>
      <param name="quotas">Das <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />-Objekt, das beim Lesen nicht vertrauenswürdiger Daten Denial-of-Service-Angriffe verhindert.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryReader" />, der JSON (JavaScript Object Notation) lesen kann.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten in einen Stream schreibt.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einer spezifischen Zeichencodierung in einen Stream schreibt.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <param name="indent">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>Erstellt einen <see cref="T:System.Xml.XmlDictionaryWriter" />, der mit JSON codierte Daten mit einem spezifischen Zeichen in einen Stream schreibt.</summary>
      <param name="stream">Der Ausgabe-<see cref="T:System.IO.Stream" /> für den JSON-Writer.</param>
      <param name="encoding">Das <see cref="T:System.Text.Encoding" />-Objekt, das die von dem Writer verwendete Zeichencodierung angibt. Die Standardcodierung ist UTF-8.</param>
      <param name="ownsStream">
        <see langword="true" />, wenn der Ausgabestream nach Abschluss des Vorgangs vom Writer geschlossen werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</param>
      <param name="indent">Wenn <see langword="true" />, wird für die Ausgabe das mehrzeilige Format verwendet, wobei jede Ebene korrekt eingezogen wird; andernfalls <see langword="false" />.</param>
      <param name="indentChars">Die Zeichenfolge, die für den Einzug jeder Ebene verwendet wird.</param>
      <returns>Ein <see cref="T:System.Xml.XmlDictionaryWriter" />-Objekt, das mit JSON codierte Daten basierend auf einem XML-Infoset in den Stream schreibt.</returns>
    </member>
  </members>
</doc>