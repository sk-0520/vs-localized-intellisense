<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Json</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DateTimeFormat">
      <summary>Especifica as opções de formato de data e hora.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando a cadeia de caracteres de formato.</summary>
      <param name="formatString">A cadeia de caracteres de formato.</param>
    </member>
    <member name="M:System.Runtime.Serialization.DateTimeFormat.#ctor(System.String,System.IFormatProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.DateTimeFormat" /> usando a cadeia de caracteres de formato e o provedor de formato.</summary>
      <param name="formatString">A cadeia de caracteres de formato.</param>
      <param name="formatProvider">O provedor de formato.</param>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.DateTimeStyles">
      <summary>Obtém ou define as opções de formatação que personalizam a análise para de cadeia de caracteres de alguns métodos de data e hora.</summary>
      <returns>As opções de formatação que personalizam a análise de cadeia de caracteres para alguns métodos de análise de data e hora.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatProvider">
      <summary>Obtém um objeto que controla a formatação.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DateTimeFormat.FormatString">
      <summary>Obtém as cadeias de caracteres de formato para controlar que a formatação produzida quando uma data ou hora é representada como uma cadeia de caracteres.</summary>
      <returns>As cadeias de caracteres de formato para controlar a formatação produzida quando uma data ou hora é representada como uma cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.EmitTypeInformation">
      <summary>Especifica a frequência de emissão das informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Always">
      <summary>Sempre para emitir informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.AsNeeded">
      <summary>Conforme necessário para emitir informações de tipo.</summary>
    </member>
    <member name="F:System.Runtime.Serialization.EmitTypeInformation.Never">
      <summary>Nunca para emitir informações de tipo.</summary>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
      <summary>Serializa objetos para o objeto JSON (JavaScript Object Notation) e desserializa os dados JSON em objetos. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo especificado.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo especifico, com uma coleção de tipos conhecidos que podem existir no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias serializadas ou desserializadas.</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto do tipo e das configurações do serializador especificadas.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="settings">As configurações de serializador para o serializador JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName">O nome do elemento XML que inclui o conteúdo para serializar ou desserializar. O padrão é "root".</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro do tipo <see cref="T:System.Xml.XmlDictionaryString" />.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> para serializar ou desserializar um objeto de um tipo especificado usando o elemento raiz XML especificado por um parâmetro de tipo <see cref="T:System.Xml.XmlDictionaryString" />, com uma coleção de tipos conhecidos que pode estar presente no grafo do objeto.</summary>
      <param name="type">O tipo das instâncias que é serializado ou desserializado.</param>
      <param name="rootName">Um <see cref="T:System.Xml.XmlDictionaryString" /> que contém o nome do elemento raiz do conteúdo.</param>
      <param name="knownTypes">Um <see cref="T:System.Collections.Generic.IEnumerable`1" /> de <see cref="T:System.Type" /> que contém os tipos que podem estar presentes no grafo do objeto.</param>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
      <summary>Obtém o formato dos itens do tipo data e hora no grafo do objeto.</summary>
      <returns>O formato dos itens do tipo data e hora no grafo do objeto.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
      <summary>Obtém ou define as configurações do serializador JSON do contrato de dados para emitir informações de tipo.</summary>
      <returns>As configurações do serializador JSON do contrato de dados para emitir informações de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
      <summary>Obtém um valor que especifica se os dados desconhecidos serão ignorados na desserialização e se a interface <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /> é ignorada na serialização.</summary>
      <returns>
        <see langword="true" /> para ignorar dados desconhecidos e <see cref="T:System.Runtime.Serialization.IExtensibleDataObject" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>Obtém um valor que especifica se o <see cref="T:System.Xml.XmlDictionaryReader" /> está posicionado sobre um elemento XML que representa um objeto do qual o serializador pode desserializar.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o fluxo XML mapeado para JSON.</param>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado corretamente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>Determina se o <see cref="T:System.Xml.XmlReader" /> está posicionado em um objeto que pode ser desserializado.</summary>
      <param name="reader">O <see cref="T:System.Xml.XmlReader" /> usado para ler o fluxo XML.</param>
      <returns>
        <see langword="true" /> se o leitor estiver posicionado corretamente, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
      <summary>Obtém uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância do <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
      <returns>Um <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contém os tipos esperados passados como tipos conhecidos para o construtor <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
      <summary>Obtém o número máximo de itens em um grafo de objeto que o serializador serializa ou desserializa em uma chamada de leitura ou gravação.</summary>
      <returns>O número máximo de itens a serem serializados ou desserializados.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de itens excede o valor máximo.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
      <summary>Lê um fluxo de documento no formato JSON (JavaScript Object Notation) e retorna o objeto desserializado.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> a ser lido.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>Lê o documento XML mapeado do JSON com um <see cref="T:System.Xml.XmlDictionaryReader" /> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlDictionaryReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <see langword="false" /> para ignorar a verificação. O padrão é <see langword="true" />.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>Lê o documento XML mapeado do JSON (JavaScript Object Notation) com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>Lê um documento XML mapeado do JSON com um <see cref="T:System.Xml.XmlReader" /> e retorna o objeto desserializado. Ele também permite que você especifique se o serializador deve verificar se ele está posicionado em um elemento apropriado antes de tentar desserializar.</summary>
      <param name="reader">Um <see cref="T:System.Xml.XmlReader" /> usado para ler o documento XML mapeado do JSON.</param>
      <param name="verifyObjectName">
        <see langword="true" /> para verificar se o nome e o namespace do elemento XML delimitador correspondem ao nome e namespace esperados, caso contrário, <see langword="false" />, que ignora a verificação. O padrão é <see langword="true" />.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
      <summary>Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns>
        <see langword="true" /> para serializar tipos somente leitura; caso contrário <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
      <summary>Obtém um valor que especifica se um formato de dicionário simples deve ser usado.</summary>
      <returns>
        <see langword="true" /> para usar um formato de dicionário simples; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>Grava o elemento XML de fechamento em um documento XML, usando um <see cref="T:System.Xml.XmlDictionaryWriter" />, que pode ser mapeado para o JSON (JavaScript Object Notation).</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML para mapear para o JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>Grava o elemento XML de fechamento em um documento XML, usando um <see cref="T:System.Xml.XmlWriter" />, que pode ser mapeado para o JSON (JavaScript Object Notation).</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML mapeado para JSON.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>Serializa um objeto especificado em dados JSON (JavaScript Object Notation) e grava o JSON resultante em um fluxo.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> para gravação.</param>
      <param name="graph">O objeto que contém os dados a serem gravados no fluxo.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation). Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">Um <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o documento XML ou fluxo para mapear para o JSON.</param>
      <param name="graph">O objeto que contém os dados a serem gravados.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>Serializa um objeto para XML que pode ser mapeado para o JSON (JavaScript Object Notation). Grava todos os dados de objeto, incluindo o elemento XML inicial, o conteúdo e o elemento de fechamento com um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML para mapear para o JSON.</param>
      <param name="graph">O objeto que contém os dados a serem gravados.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> no qual ocorrerá a gravação.</param>
      <param name="graph">O objeto a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o conteúdo XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar.</param>
      <param name="graph">O objeto a ser gravado.</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">O tipo sendo serializado não está em conformidade com as regras do contrato de dados. Por exemplo, o atributo <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> não foi aplicado ao tipo.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">Há um problema com a instância que está sendo gravada.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">O número máximo de objetos a serem serializados foi excedido. Verifique a propriedade <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" />.</exception>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlDictionaryWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>Grava o elemento XML de abertura para serializar um objeto para XML que pode ser mapeado para JSON (JavaScript Object Notation) usando um <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o elemento inicial do XML.</param>
      <param name="graph">O objeto a ser gravado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings">
      <summary>Especifica as configurações de <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" />.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings" />.</summary>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.DateTimeFormat">
      <summary>Obtém ou define um DateTimeFormat que define o formato culturalmente apropriado de exibição de datas e horas.</summary>
      <returns>O DateTimeFormat que define o formato culturalmente apropriado de exibição de datas e horas.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.EmitTypeInformation">
      <summary>Obtém ou define as configurações do serializador JSON do contrato de dados para emitir informações de tipo.</summary>
      <returns>As configurações do serializador JSON do contrato de dados para emitir informações de tipo.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.IgnoreExtensionDataObject">
      <summary>Obtém ou define um valor que especifica se deve ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada.</summary>
      <returns>
        <see langword="true" />para ignorar os dados fornecidos por uma extensão da classe quando a classe está sendo serializada ou desserializada; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.KnownTypes">
      <summary>Obtém ou define uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância, DataContractJsonSerializerSettings.</summary>
      <returns>Uma coleção de tipos que podem estar presentes no grafo de objeto serializado usando essa instância, DataContractJsonSerializerSettings.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.MaxItemsInObjectGraph">
      <summary>Obtém ou define o número máximo de itens em um grafo de objeto a serem serializados ou desserializados.</summary>
      <returns>O número máximo de itens em um grafo de objeto para serializar ou desserializar.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.RootName">
      <summary>Obtém ou define o nome raiz do objeto selecionado.</summary>
      <returns>O nome raiz do objeto selecionado.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.SerializeReadOnlyTypes">
      <summary>Obtém ou define um valor que especifica se deve serializar os tipos somente leitura.</summary>
      <returns>
        <see langword="true" />para serializar tipos somente leitura; caso <see langword="false" />contrário.</returns>
    </member>
    <member name="P:System.Runtime.Serialization.Json.DataContractJsonSerializerSettings.UseSimpleDictionaryFormat">
      <summary>Obtém ou define um valor que especifica se deve usar um formato de dicionário simples.</summary>
      <returns>
        <see langword="true" /> para usar um formato de dicionário simples; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer">
      <summary>Especifica a interface para inicializar um leitor de JSON (JavaScript Object Notation) ao reutilizá-la para ler de um fluxo ou buffer específico.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa um leitor habilitado para JSON (JavaScript Object Notation) para um buffer especificado que contém dados codificados em JSON.</summary>
      <param name="buffer">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset">A posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">O número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> usado pelo leitor.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Reinicializa um leitor habilitado para JSON (JavaScript Object Notation) para um fluxo especificado que contém dados codificados em JSON.</summary>
      <param name="stream">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> usado pelo leitor.</param>
      <param name="quotas">
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> a ser aplicado.</param>
      <param name="onClose">O delegado a chamar quando o leitor estiver fechado.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
      <summary>Especifica a interface para inicializar um gravador JSON (JavaScript Object Notation) ao reutilizá-los para gravar em um fluxo de saída específico.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa (ou reinicializa) um gravador JSON (JavaScript Object Notation) em um fluxo de saída especificado com a codificação de caractere especificada.</summary>
      <param name="stream">A saída <see cref="T:System.IO.Stream" /> na qual o gravador grava.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caractere do fluxo de saída.</param>
      <param name="ownsStream">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory">
      <summary>Produz instâncias de <see cref="T:System.Xml.XmlDictionaryReader" /> que podem ler dados codificados com JSON (JavaScript Object Notation) de um fluxo ou um buffer e faz o mapeamento em um XML Infoset e em instâncias de <see cref="T:System.Xml.XmlDictionaryWriter" /> que mapeiam um XML Infoset para JSON e grava dados codificados por JSON em um fluxo.</summary>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), com um tamanho, deslocamento e codificação de caracteres especificados, para um Infoset XML.</summary>
      <param name="buffer">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor. Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <param name="onClose">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado. O valor padrão é <see langword="null" />.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um XML Infoset.</summary>
      <param name="buffer">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="offset">Posição inicial da qual será feita a leitura no <paramref name="buffer" />.</param>
      <param name="count">Número de bytes que podem ser lidos de <paramref name="buffer" />.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear buffers codificados com JSON (JavaScript Object Notation) para um XML Infoset.</summary>
      <param name="buffer">A matriz do buffer <see cref="T:System.Byte" /> de entrada para leitura.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode processar dados JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryReader" />, que pode mapear fluxos codificados com JSON (JavaScript Object Notation), de um tamanho e deslocamento especificados, para um Infoset XML.</summary>
      <param name="stream">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo leitor. Se <see langword="null" /> for especificado como o valor, o leitor tentará detectar automaticamente a codificação.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <param name="onClose">O delegado do <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> a chamar quando o leitor estiver fechado.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode mapear fluxos codificados com JSON (JavaScript Object Notation) para um XML Infoset.</summary>
      <param name="stream">A entrada <see cref="T:System.IO.Stream" /> da qual ler.</param>
      <param name="quotas">O <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> usado para prevenir ataques de Negação de Serviço durante a leitura de dados não confiáveis.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryReader" /> que pode ler o objeto JSON (JavaScript Object Notation).</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com uma codificação de caracteres especificada.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <param name="indent">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
    <member name="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)">
      <summary>Cria um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON em um fluxo com um caractere especificado.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> de saída do gravador JSON.</param>
      <param name="encoding">O <see cref="T:System.Text.Encoding" /> que especifica a codificação de caracteres usada pelo gravador. A codificação padrão é UTF-8.</param>
      <param name="ownsStream">Se <see langword="true" />, o fluxo de saída será fechado pelo gravador ao terminar; caso contrário, <see langword="false" />. O valor padrão é <see langword="true" />.</param>
      <param name="indent">Se <see langword="true" />, a saída usará o formato de várias linhas, cada nível de recuo corretamente; caso contrário, <see langword="false" />.</param>
      <param name="indentChars">A cadeia de caracteres usada recuar cada nível.</param>
      <returns>Um <see cref="T:System.Xml.XmlDictionaryWriter" /> que grava dados codificados com JSON no fluxo com base em um Infoset XML.</returns>
    </member>
  </members>
</doc>