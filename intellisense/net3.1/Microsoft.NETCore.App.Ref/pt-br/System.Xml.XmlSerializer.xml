<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.XmlSerializer</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Serialization.CodeGenerationOptions">
      <summary>Especifica várias opções a serem usadas ao gerar tipos .NET para uso com um serviço Web XML.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <summary>Habilita a vinculação de dados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <summary>Cria eventos para a invocação assíncrona dos métodos Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <summary>Cria métodos de Início e Fim para a invocação assíncrona dos métodos Web.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <summary>Gera o código de serialização explicitamente ordenado conforme especificado por meio da propriedade <see langword="Order" /> dos atributos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />, <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <summary>Representa tipos primitivos por propriedades.</summary>
    </member>
    <member name="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <summary>Representa tipos primitivos por campos e tipos primitivos por tipos de namespace <see cref="N:System" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifier">
      <summary>Fornece métodos estáticos para converter o texto de entrada em nomes de entidades de código.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifier" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <summary>Produz uma cadeia de caracteres em minúsculas concatenadas de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns>Uma versão em minúsculas concatenadas da cadeia de caracteres de parâmetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <summary>Produz uma cadeia de caracteres em Pascal case de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns>Uma versão em Pascal case da cadeia de caracteres de parâmetro.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <summary>Gera um nome de entidade de código válido de uma cadeia de caracteres de entrada.</summary>
      <param name="identifier">O nome de uma entidade de código, como um parâmetro de método, normalmente obtido um nome de atributo ou elemento XML.</param>
      <returns>Uma cadeia de caracteres que pode ser usada como identificador de código, como o nome de um parâmetro de método.</returns>
    </member>
    <member name="T:System.Xml.Serialization.CodeIdentifiers">
      <summary>Mantém um grupo de nomes para entidades de código relacionadas ou mapeamentos de tipo gerados pela infraestrutura de serialização de XML do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e determina se os identificadores de código diferenciam maiúsculas de minúsculas.</summary>
      <param name="caseSensitive">
        <see langword="true" /> se os identificadores diferenciarem maiúsculas de minúsculas; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <summary>Adiciona uma entidade de código ou um mapeamento de tipos nomeado ao escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Um nome que é usado para indexar a entidade de código.</param>
      <param name="value">As informações de entidade de código ou mapeamento de tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <summary>Impede que um nome especificado seja usado dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Um nome que não estará disponível dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <summary>Adiciona uma entidade de código ou um mapeamento de tipos nomeado ao escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />, garantindo que o nome seja exclusivo dentro do escopo.</summary>
      <param name="identifier">Um nome de candidato que é usado para indexar a entidade de código.</param>
      <param name="value">As informações de entidade de código ou mapeamento de tipos.</param>
      <returns>O valor do parâmetro identificador ou uma cadeia de caracteres modificada se houver uma colisão de nomes.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <summary>Remove todas as entidades de código ou mapeamentos de tipos, incluindo seus nomes, do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <summary>Determina se um nome especificado já está sendo usado no escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">O nome a ser verificado para uso dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
      <returns>
        <see langword="true" /> se o nome já estiver sendo usado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <summary>Garante que a entrada tenha as maiúsculas e minúsculas corretas, modificando o nome de acordo com o valor da propriedade <see cref="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />.</summary>
      <param name="identifier">O nome que possivelmente será modificado.</param>
      <returns>Uma cadeia de caracteres que é igual ao o identificador de entrada ou tem a maiúscula ou minúscula da primeira letra modificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <summary>Determina se o nome de entrada está em conflito com outro nome dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> e, em caso afirmativo, gera uma cadeia de caracteres modificada.</summary>
      <param name="identifier">O nome a ser modificado se já não for exclusivo.</param>
      <returns>O valor do parâmetro identificador ou uma cadeia de caracteres modificada se houver uma colisão de nomes.</returns>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <summary>Remove do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> a entidade de código ou o mapeamento de tipos identificado pelo nome da entrada.</summary>
      <param name="identifier">O nome da entidade de código ou as informações de mapeamento de tipos a serem removidas.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <summary>Remove o nome da entrada dos nomes reservados da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="identifier">Um nome que será disponibilizado dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <summary>Retorna uma matriz das entidades de código ou mapeamentos de tipos dentro do escopo da instância <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</summary>
      <param name="type">O tipo de todas as entidades de código ou mapeamentos de tipos para a instância.</param>
      <returns>Uma matriz das entidades de código ou mapeamentos de tipos que é armazenada pelo objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <summary>Obtém ou define um valor que indica se a instância usa minúsculas concatenadas.</summary>
      <returns>
        <see langword="true" />para indicar que a instância usa camel case; <see langword="false" /> para indicar que a instância usa o caso do Pascal.</returns>
    </member>
    <member name="T:System.Xml.Serialization.ImportContext">
      <summary>Descreve o contexto em que um conjunto de esquemas é associado às entidades de código do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.ImportContext" /> para os identificadores de código fornecidos, com a opção de compartilhamento de tipo fornecida.</summary>
      <param name="identifiers">As entidades de código às quais o contexto se aplica.</param>
      <param name="shareTypes">Um valor <see cref="T:System.Boolean" /> que determina se tipos personalizados são compartilhados entre esquemas.</param>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <summary>Obtém um valor que determina se tipos personalizados são compartilhados.</summary>
      <returns>
        <see langword="true" />, se os tipos personalizados forem compartilhados entre o esquema; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <summary>Obtém um conjunto de entidades de código às quais o contexto se aplica.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica as entidades de código às quais o contexto se aplica.</returns>
    </member>
    <member name="P:System.Xml.Serialization.ImportContext.Warnings">
      <summary>Obtém uma coleção de avisos que são gerados durante a importação de descrições de entidade de código.</summary>
      <returns>Um <see cref="T:System.Collections.Specialized.StringCollection" /> que contém avisos que foram gerados ao importar as descrições de entidade de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlTextParser">
      <summary>Estabelece uma propriedade <see cref="P:System.Xml.Serialization.IXmlTextParser.Normalized" /> para uso pela infraestrutura do .NET Framework.</summary>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <summary>Obtém ou define se o espaço em branco e valores de atributo são normalizados.</summary>
      <returns>
        <see langword="true" />Se os valores de atributos de espaço em branco forem normalizados; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <summary>Obtém ou define como o espaço em branco é tratado durante a análise de XML.</summary>
      <returns>Um membro da <see cref="T:System.Xml.WhitespaceHandling" /> enumeração que descreve como o ritmo dos brancos é tratado durante a análise de XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SchemaImporter">
      <summary>Descreve um importador de esquema.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeAttribute">
      <summary>Especifica que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar o membro de classe como um atributo SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> usando o valor especificado como o nome do atributo XML.</summary>
      <param name="attributeName">O nome do atributo XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <summary>Obtém ou define o nome do atributo XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>O nome do atributo XML. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD (Linguagem de Definição de Esquema XML) do atributo SOAP gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Um tipo de dados de esquema XML.</returns>
      <exception cref="T:System.Exception">O tipo de dados de esquema XML que você especificou não pode ser mapeado para o tipo de dados .NET.</exception>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <summary>Obtém ou define o namespace de XML do atributo XML.</summary>
      <returns>O namespace de XML do atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributeOverrides">
      <summary>Permite substituir os atributos aplicados a propriedades, campos e classes quando se utiliza um <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar ou desserializar um objeto como codificado em SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <summary>Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" /> contidos pelo <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. O parâmetro <paramref name="type" /> especifica o objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="member" /> especifica o nome de um membro que é substituído.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser substituído.</param>
      <param name="member">O nome do membro a ser substituído.</param>
      <param name="attributes">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <summary>Adiciona um <see cref="T:System.Xml.Serialization.SoapAttributes" /> a uma coleção de objetos <see cref="T:System.Xml.Serialization.SoapAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído pelo <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto que será substituído.</param>
      <param name="attributes">Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <summary>Obtém o objeto associado ao tipo especificado (classe base).</summary>
      <param name="type">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja recuperar.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtém o objeto associado ao tipo especificado (classe base). O parâmetro <paramref name="member" /> especifica o membro da classe base que é substituído.</summary>
      <param name="type">A classe base <see cref="T:System.Type" /> associada com a coleção de atributos que você deseja substituir.</param>
      <param name="member">O nome do membro substituído que especifica o <see cref="T:System.Xml.Serialization.SoapAttributes" /> a ser retornado.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapAttributes">
      <summary>Representa uma coleção de objetos de atributos que controlam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa métodos SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapAttributes" /> usando o tipo personalizado especificado.</summary>
      <param name="provider">Qualquer objeto que implementa a interface <see cref="T:System.Reflection.ICustomAttributeProvider" />, como a classe <see cref="T:System.Type" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <summary>Obtém ou define a propriedade <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> a ser substituída.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.SoapAttributeAttribute" /> que substitui o comportamento <see cref="T:System.Xml.Serialization.XmlSerializer" /> do quando o membro é serializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <summary>Obtém ou define o valor padrão de um atributo ou elemento XML.</summary>
      <returns>Um objeto que representa o valor padrão de um elemento ou atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <summary>Obtém ou define um <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a ser substituído.</summary>
      <returns>O <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> a ser substituído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma enumeração SOAP.</summary>
      <returns>Um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou propriedade como XML SOAP codificado.</summary>
      <returns>
        <see langword="true" /> se o campo ou propriedade não for serializada por <see cref="T:System.Xml.Serialization.XmlSerializer" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <summary>Obtém ou define um objeto que instrui o <see cref="T:System.Xml.Serialization.XmlSerializer" /> sobre como serializar um tipo de objeto no XML de codificação SOAP.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> que substitui um <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> aplicado a uma declaração de classe ou é aplicado a uma declaração de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapElementAttribute">
      <summary>Especifica que o valor do membro público seja serializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> como um elemento XML SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapElementAttribute" /> e especifica o nome do elemento XML.</summary>
      <param name="elementName">O nome do elemento XML do membro serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XSD (Linguagem de Definição de Esquema XML) do elemento XML gerado.</summary>
      <returns>Um dos tipos de dados de Esquema XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <summary>Obtém ou define o nome do elemento XML gerado.</summary>
      <returns>O nome do elemento XML gerado. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro que tem o atributo <see langword="xsi:null" /> definido como "1".</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapEnumAttribute">
      <summary>Controla como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> usando o nome do elemento especificado.</summary>
      <param name="name">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <summary>Obtém ou define o valor gerado em um documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma enumeração ou o valor reconhecido quando ele desserializa o membro da enumeração.</summary>
      <returns>O valor gerado em um documento XML quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa a enumeração ou o valor reconhecido quando desserializa o membro de enumeração.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <summary>Instrui <see cref="T:System.Xml.Serialization.XmlSerializer" /> para não serializar o campo público ou o valor da propriedade pública de leitura/gravação.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.SoapIncludeAttribute">
      <summary>Permite que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconheça um tipo ao serializar ou desserializar um objeto como XML de SOAP codificado.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" /> usando o tipo especificado.</summary>
      <param name="type">O tipo de objeto a ser incluído.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <summary>Obtém ou define o tipo do objeto a ser usado ao serializar ou desserializar um objeto.</summary>
      <returns>O tipo de objeto a ser incluído.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapReflectionImporter">
      <summary>Gera mapeamentos para mensagens codificadas em SOAP das informações do método de serviço Web ou tipos do .NET Framework.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando um namespace de XML padrão para mapeamentos de tipo importado.</summary>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando substituições para a serialização de XML.</summary>
      <param name="attributeOverrides">Um objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que substitui a maneira como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos mapeados usando a codificação SOAP.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, especificando substituições de serialização de XML e um namespace de XML padrão.</summary>
      <param name="attributeOverrides">Um objeto <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> que substitui a maneira como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa tipos mapeados usando a codificação SOAP.</param>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <summary>Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <returns>Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <returns>Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <param name="validate">
        <see langword="true" /> para indicar que um desserializador gerado deve verificar o nome qualificado esperado do elemento wrapper; caso contrário, <see langword="false" />. O valor desse parâmetro é relevante apenas se o valor do parâmetro <paramref name="hasWrapperElement" /> é <see langword="true" />.</param>
      <returns>Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Gera mapeamentos de tipo internos para informações coletadas de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz das entidades de código do .NET Framework que pertence a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> para indicar que os elementos que correspondem às partes da mensagem WSDL devem ser incluídos em um elemento wrapper adicional em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="writeAccessors">
        <see langword="true" /> para indicar uma associação de serviço Web estilo RPC; <see langword="false" /> para indicar uma associação de serviço Web estilo documento ou um cabeçalho SOAP.</param>
      <param name="validate">
        <see langword="true" /> para indicar que um desserializador gerado deve verificar o nome qualificado esperado do elemento wrapper; caso contrário, <see langword="false" />. O valor desse parâmetro é relevante apenas se o valor do parâmetro <paramref name="hasWrapperElement" /> é <see langword="true" />.</param>
      <param name="access">Um dos valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
      <returns>Mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo do .NET Framework.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <returns>Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo do .NET Framework.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado.</param>
      <returns>Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <summary>Coloca os mapeamentos para um tipo no contexto da instância <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para uso posterior, quando os métodos de importação são invocados.</summary>
      <param name="type">O tipo do .NET Framework para o qual se salvam as informações de mapeamento de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Coloca os mapeamentos de tipos derivados no contexto da instância <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> para uso posterior, quando os métodos de importação são invocados.</summary>
      <param name="provider">Um objeto de reflexão <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contém atributos personalizados derivados do atributo <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.SoapSchemaMember">
      <summary>Representa determinados atributos de um elemento XSD &lt;<see langword="part" />&gt; em um documento WSDL para gerar classes do documento.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapSchemaMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <summary>Obtém ou define um valor que corresponde ao atributo de nome do elemento de parte WSDL.</summary>
      <returns>O nome do elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <summary>Obtém ou define um valor que corresponde ao atributo de tipo do elemento de parte WSDL.</summary>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> que corresponde ao tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.SoapTypeAttribute">
      <summary>Controla o esquema gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> quando uma instância da classe é serializada como XML codificado em SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e especifica o nome do tipo XML.</summary>
      <param name="typeName">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
    </member>
    <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> e especifica o nome e o namespace de XML do tipo.</summary>
      <param name="typeName">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
      <param name="ns">O namespace de XML do tipo.</param>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <summary>Obtém ou define um valor que indica se deve incluir o tipo nos documentos de esquema XML de codificação SOAP.</summary>
      <returns>
        <see langword="true" /> incluir o tipo em documentos de esquema XML codificados em SOAP; caso contrário, <see langword="false" />. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <summary>Obtém ou define o namespace do tipo XML.</summary>
      <returns>O namespace do tipo XML. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <summary>Obtém ou define o nome do tipo XML.</summary>
      <returns>O nome do tipo XML. O padrão é o nome da classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <summary>Fornece dados para o objeto conhecido, mas não referenciado, encontrado em um fluxo XML de SOAP codificado durante a desserialização.</summary>
    </member>
    <member name="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />.</summary>
      <param name="o">O objeto não referenciado.</param>
      <param name="id">Uma cadeia de caracteres exclusiva usada para identificar o objeto não referenciado.</param>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <summary>Obtém a ID do objeto.</summary>
      <returns>A ID do objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <summary>Obtém o objeto desserializado, mas não referenciado.</summary>
      <returns>O objeto desserializado, mas não referenciado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Xml.Serialization.UnreferencedObjectEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <summary>Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> .</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Adiciona um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> à coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser adicionado.</param>
      <returns>O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> recém-adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtém um valor que indica se o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado existe na coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> de seu interesse.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <summary>Copia toda a coleção para uma matriz unidimensional compatível de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />, iniciando no índice especificado da matriz de destino.</summary>
      <param name="array">A matriz unidimensional de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que é o destino dos elementos copiados da coleção. A matriz deve ter indexação com base em zero.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Obtém o índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> cujo índice você deseja.</param>
      <returns>O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Insere um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> na coleção no índice especificado.</summary>
      <param name="index">O índice em que o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> é inserido.</param>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <summary>Obtém ou define o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> no índice especificado.</summary>
      <param name="index">O índice do <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <summary>Remove o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> especificado da coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a ser removido.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayAttribute">
      <summary>Especifica que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro de classe específica como uma matriz de elementos XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> e especifica o nome do elemento XML gerado na instância de documento XML.</summary>
      <param name="elementName">O nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <summary>Obtém ou define o nome do elemento XML fornecido à matriz serializada.</summary>
      <returns>O nome do elemento XML da matriz serializada. O padrão é o nome do membro ao qual o <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> é atribuído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <summary>Obtém ou define um valor que indica se o nome do elemento XML gerado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> é qualificado ou não.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see langword="XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro como uma marca de XML vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <summary>Obtém ou define o namespace do elemento XML.</summary>
      <returns>O namespace do elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <summary>Obtém ou define a ordem explícita na qual os elementos são serializados ou desserializados.</summary>
      <returns>A ordem de geração de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <summary>Representa um atributo que especifica os tipos derivados que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode colocar em uma matriz serializada.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o nome do elemento XML gerado no documento XML.</summary>
      <param name="elementName">O nome do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o nome do elemento XML gerado no documento XML e o <see cref="T:System.Type" /> que pode ser inserido no documento XML gerado.</summary>
      <param name="elementName">O nome do elemento XML.</param>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> e especifica o <see cref="T:System.Type" /> que pode ser inserido na matriz serializada.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <summary>Obtém ou define o tipo de dados XML do elemento XML gerado.</summary>
      <returns>Um tipo de dados XSD (XML Schema Definition).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <summary>Obtém ou define o nome do elemento XML gerado.</summary>
      <returns>O nome do elemento XML gerado. O padrão é o identificador do membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <summary>Obtém ou define um valor que indica se o nome do elemento XML gerado é qualificado.</summary>
      <returns>Um dos valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. O padrão é <see langword="XmlSchemaForm.None" />.</returns>
      <exception cref="T:System.Exception">A propriedade <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> está definida como <see langword="XmlSchemaForm.Unqualified" /> e um valor <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> está especificado.</exception>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> deve serializar um membro como uma marca de XML vazia com o atributo <see langword="xsi:nil" /> definido como <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gerar o atributo <see langword="xsi:nil" />; caso contrário, <see langword="false" /> e nenhuma instância será gerada. O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <summary>Obtém ou define o namespace do elemento XML gerado.</summary>
      <returns>O namespace do elemento XML gerado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <summary>Obtém ou define o nível em uma hierarquia de elementos XML que o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> afeta.</summary>
      <returns>O índice de base zero de um conjunto de índices em uma matriz de matrizes.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <summary>Obtém ou define o tipo permitido em uma matriz.</summary>
      <returns>Um <see cref="T:System.Type" /> que é permitido na matriz.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <summary>Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> .</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Adiciona um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> à coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a adicionar à coleção.</param>
      <returns>O índice do item adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Determina se a coleção contém o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser verificado.</param>
      <returns>
        <see langword="true" /> se a coleção contiver o <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <summary>Copia uma matriz <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> para a coleção, começando em um índice de destino especificado.</summary>
      <param name="array">A matriz de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a serem copiados para a coleção.</param>
      <param name="index">O índice no qual os atributos copiados começam.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Retorna o índice de base zero da primeira ocorrência do <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> especificado na coleção ou -1 se o atributo não for encontrado na coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser localizado na coleção.</param>
      <returns>O primeiro índice do <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> na coleção ou -1 se o atributo não for encontrado na coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Insere um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> na coleção no índice especificado.</summary>
      <param name="index">O índice no qual o atributo é inserido.</param>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <summary>Obtém ou define o item no índice especificado.</summary>
      <param name="index">O índice de base zero do membro da coleção a ser obtido ou definido.</param>
      <returns>O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> no índice especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <summary>Remove um <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> da coleção, se existir.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> a ser removido.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <summary>Obtém um objeto que representa o atributo XML desconhecido.</summary>
      <returns>Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <summary>Obtém uma lista delimitada por vírgulas de nomes do atributo XML que deve estar em uma instância de documento XML.</summary>
      <returns>Uma lista delimitada por vírgulas de nomes de atributo XML. Cada nome está no seguinte formato: <paramref name="namespace" />:.<paramref name="name" /></returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <summary>Obtém o número de linha do atributo XML desconhecido.</summary>
      <returns>O número de linha do atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <summary>Obtém a posição na linha do atributo XML desconhecido.</summary>
      <returns>O número de posição do atributo XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <summary>Obtém o objeto que está sendo desserializado.</summary>
      <returns>O objeto que está sendo desserializado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <summary>Representa o método que manipula o <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /></summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Xml.Serialization.XmlAttributeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeOverrides">
      <summary>Permite a substituição de propriedade, campo e atributos de classe quando você usa o <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar ou desserializar um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <summary>Adiciona um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído. O parâmetro <paramref name="member" /> especifica o nome de um membro que é substituído.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser substituído.</param>
      <param name="member">O nome do membro a ser substituído.</param>
      <param name="attributes">Um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <summary>Adiciona um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> à coleção de objetos <see cref="T:System.Xml.Serialization.XmlAttributes" />. O parâmetro <paramref name="type" /> especifica um objeto a ser substituído pelo objeto <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto que será substituído.</param>
      <param name="attributes">Um objeto <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos de substituição.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <summary>Obtém o objeto associado ao tipo de classe base especificado.</summary>
      <param name="type">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja recuperar.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <summary>Obtém o objeto associado ao tipo especificado (classe base). O parâmetro de membro especifica o membro da classe base que é substituído.</summary>
      <param name="type">A classe base <see cref="T:System.Type" /> associada à coleção de atributos que você deseja.</param>
      <param name="member">O nome do membro substituído que especifica o <see cref="T:System.Xml.Serialization.XmlAttributes" /> a ser retornado.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa a coleção de atributos de substituição.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributes">
      <summary>Representa uma coleção de objetos de atributos que controlam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlAttributes" /> e personaliza a maneira como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa e desserializa um objeto.</summary>
      <param name="provider">Uma classe que pode fornecer implementações alternativas dos atributos que controlam a serialização de XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <summary>Obtém ou define a propriedade <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituída.</summary>
      <returns>O <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" /> a ser substituído.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <summary>Obtém a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> a serem substituídos.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Serialization.XmlAnyElementAttributes" /> que representa a coleção de objetos <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlArrayAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação que retorna uma matriz.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <summary>Obtém ou define uma coleção de objetos que especificam como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os itens inseridos em uma matriz retornada por um campo público ou uma propriedade de leitura/gravação.</summary>
      <returns>Um objeto <see cref="T:System.Xml.Serialization.XmlArrayItemAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação pública como um atributo XML.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> que controla a serialização de um campo público ou de uma propriedade de leitura/gravação como um atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <summary>Obtém ou define um objeto que permite distinguir entre um conjunto de opções.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" /> que pode ser aplicado a um membro de classe que é serializado como <see langword="xsi:choice" /> um elemento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <summary>Obtém ou define o valor padrão de um atributo ou elemento XML.</summary>
      <returns>Um <see cref="T:System.Object" /> que representa o valor padrão de um atributo ou elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <summary>Obtém uma coleção de objetos que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um campo público ou uma propriedade de leitura/gravação como um elemento XML.</summary>
      <returns>Uma <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> que contém uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa um membro de enumeração.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <summary>Obtém ou define um valor que especifica se o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa ou não um campo público ou uma propriedade de leitura/gravação pública.</summary>
      <returns>
        <see langword="true" /> se o campo ou propriedade não for serializada por <see cref="T:System.Xml.Serialization.XmlSerializer" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <summary>Obtém ou define um valor que especifica se é necessário manter todas as declarações de namespace quando um objeto que contém um membro que retorna um objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> é substituído.</summary>
      <returns>
        <see langword="true" /> se as declarações de namespace precisarem ser mantidas; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe como um elemento raiz XML.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que substitui uma classe atribuída como um elemento raiz XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <summary>Obtém ou define um objeto que instrui o <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serializar um campo público ou propriedade de leitura/gravação pública como texto XML.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlTextAttribute" /> que substitui a serialização padrão de uma propriedade pública ou campo.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <summary>Obtém ou define um objeto que especifica como o <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa uma classe à qual o <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> foi aplicado.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> que substitui um <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> aplicado a uma declaração de classe.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <summary>Especifica que o membro pode ser detectado ainda mais usando uma enumeração.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />.</summary>
      <param name="name">O nome do membro que retorna a enumeração usada para detectar uma opção.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <summary>Obtém ou define o nome do campo que retorna a enumeração a ser usada ao detectar tipos.</summary>
      <returns>O nome de um campo que retorna uma enumeração.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlDeserializationEvents">
      <summary>Contém campos que podem ser usados para passar eventos delegados para um método <see cref="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" /> thread-safe do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributeEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlElementEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlNodeEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject_p">
      <summary>Obtém ou define um objeto que representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.UnreferencedObjectEventHandler" /> que aponta para o manipulador de eventos.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttributes">
      <summary>Representa uma coleção de objetos <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> usada pelo <see cref="T:System.Xml.Serialization.XmlSerializer" /> para substituir a forma padrão que ele serializa uma classe.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Adiciona um <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser adicionado.</param>
      <returns>O índice de base zero do item recém-adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Determina se a coleção contém o objeto especificado.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser procurado.</param>
      <returns>
        <see langword="true" /> se o objeto existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <summary>Copia o <see cref="T:System.Xml.Serialization.XmlElementAttributes" />, ou parte dele, para uma matriz unidimensional.</summary>
      <param name="array">A matriz <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> que contém os elementos copiados.</param>
      <param name="index">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Obtém o índice do <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> especificado.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> cujo índice está sendo recuperado.</param>
      <returns>O índice de base zero do <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <summary>Insere um <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> na coleção.</summary>
      <param name="index">O índice de base zero no qual o membro é inserido.</param>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> não é um índice válido no <see cref="T:System.Xml.Serialization.XmlElementAttributes" />.</exception>
      <exception cref="T:System.NotSupportedException">A propriedade é definida e o <see cref="T:System.Xml.Serialization.XmlElementAttributes" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <summary>Remove o objeto especificado da coleção.</summary>
      <param name="attribute">O <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> a ser removido da coleção.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <summary>Obtém o objeto que representa o elemento XML desconhecido.</summary>
      <returns>O objeto que representa o elemento XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <summary>Obtém uma lista delimitada por vírgulas de nomes do elemento XML que deve estar em uma instância de documento XML.</summary>
      <returns>Uma lista delimitada por vírgulas de nomes de elementos XML. Cada nome está no seguinte formato: <paramref name="namespace" />:.<paramref name="name" /></returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <summary>Obtém o número de linha em que o elemento desconhecido foi encontrado se o leitor XML for um <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>O número de linha em que o elemento desconhecido foi encontrado se o leitor de <see cref="T:System.Xml.XmlTextReader" />XML for um; caso contrário,-1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <summary>Obtém o local na linha em que o elemento desconhecido ocorre se o leitor XML for um <see cref="T:System.Xml.XmlTextReader" />.</summary>
      <returns>O número na linha em que o elemento desconhecido ocorre se o leitor de XML for <see cref="T:System.Xml.XmlTextReader" />um; caso contrário,-1.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <summary>Obtém o objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está desserializando.</summary>
      <returns>O objeto que está sendo desserializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Xml.Serialization.XmlElementEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlIncludeAttribute">
      <summary>Permite que <see cref="T:System.Xml.Serialization.XmlSerializer" /> reconheça um tipo quando ele serializa ou desserializa um objeto.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser incluído.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <summary>Obtém ou define o tipo do objeto a ser incluído.</summary>
      <returns>O <see cref="T:System.Type" /> do objeto a ser incluído.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMapping">
      <summary>Dá suporte a mapeamentos entre tipos do .NET Framework e tipo de dados do Esquema XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
      <summary>Obtém o nome do elemento mapeado.</summary>
      <returns>O nome do elemento mapeado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.Namespace">
      <summary>Obtém o namespace do elemento mapeado.</summary>
      <returns>O namespace do elemento mapeado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <summary>Define a chave usada para pesquisar o mapeamento.</summary>
      <param name="key">A chave de pesquisa.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <summary>Obtém o nome do elemento XSD do mapeamento.</summary>
      <returns>O nome do elemento XSD.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMappingAccess">
      <summary>Especifica se um mapeamento é de leitura, gravação ou ambos.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.None">
      <summary>Métodos de leitura e de gravação são gerados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <summary>Métodos de leitura são gerados.</summary>
    </member>
    <member name="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <summary>Métodos de gravação são gerados.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlMemberMapping">
      <summary>Mapeia uma entidade de código em um método de serviço Web do .NET Framework para um elemento em uma mensagem de WSDL (linguagem WSDL).</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <summary>Obtém ou define um valor que indica se o tipo do .NET Framework é mapeado para um elemento ou atributo XML de qualquer tipo.</summary>
      <returns>
        <see langword="true" />, se o tipo for mapeado para um XML qualquer elemento ou atributo; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <summary>Obtém um valor que indica se o campo que acompanha o tipo do .NET Framework tem um valor especificado.</summary>
      <returns>
        <see langword="true" />, se o campo fornecido tiver um valor especificado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <summary>Obtém o nome não qualificado da declaração do elemento XML que se aplica a esse mapeamento.</summary>
      <returns>O nome não qualificado da declaração de elemento XML que se aplica a esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <summary>Obtém o nome do membro de método de serviço Web representado por esse mapeamento.</summary>
      <returns>O nome do membro do método de serviço Web representado por esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <summary>Obtém o namespace de XML que se aplica a esse mapeamento.</summary>
      <returns>O namespace XML que se aplica a esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <summary>Obtém o nome de tipo totalmente qualificado do tipo de .NET Framework para esse mapeamento.</summary>
      <returns>O nome do tipo totalmente qualificado do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <summary>Obtém o nome de tipo do .NET Framework para esse mapeamento.</summary>
      <returns>O nome do tipo do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <summary>Obtém o namespace do tipo do .NET Framework para esse mapeamento.</summary>
      <returns>O namespace do tipo de .NET Framework para esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <summary>Obtém o nome do elemento XML conforme ele aparece no documento de descrição de serviço.</summary>
      <returns>O nome do elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlMembersMapping">
      <summary>Fornece os mapeamentos entre os métodos do serviço Web do .NET Framework e as mensagens de WSDL (linguagem WSDL) que são definidas para os serviços Web SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <summary>Obtém o número de entidades de código do .NET Framework que pertencem a um método de serviço Web para o qual uma mensagem SOAP está sendo mapeada.</summary>
      <returns>O número de mapeamentos na coleção.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <summary>Obtém um item que contém informações de mapeamento do tipo interno para uma entidade de código do .NET Framework que pertence a um método do serviço Web que é mapeado para uma mensagem SOAP.</summary>
      <param name="index">O índice de mapeamento a ser retornado.</param>
      <returns>O <see cref="T:System.Xml.Serialization.XmlMemberMapping" /> solicitado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <summary>Obtém o nome do tipo do .NET Framework que está sendo mapeado para o tipo de dados de um elemento de esquema XML que representa uma mensagem SOAP.</summary>
      <returns>O nome do tipo de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <summary>Obtém o namespace do tipo do .NET Framework que está sendo mapeado para o tipo de dados de um elemento de esquema XML que representa uma mensagem SOAP.</summary>
      <returns>O namespace de .NET Framework do mapeamento.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> .</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <summary>Obtém o número de linha do nó XML desconhecido.</summary>
      <returns>O número de linha do nó XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <summary>Obtém a posição na linha do nó XML desconhecido.</summary>
      <returns>O número de posição do nó XML desconhecido.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <summary>Obtém o nome local de XML do nó XML que está sendo desserializado.</summary>
      <returns>O nome local XML do nó que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <summary>Obtém o nome do nó XML que está sendo desserializado.</summary>
      <returns>O nome do nó que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <summary>Obtém o URI de namespace associado ao nó XML que está sendo desserializado.</summary>
      <returns>O URI do namespace que está associado ao nó XML que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <summary>Obtém o tipo do nó XML que está sendo desserializado.</summary>
      <returns>O <see cref="T:System.Xml.XmlNodeType" /> que representa o nó XML que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <summary>Obtém o objeto que está sendo desserializado.</summary>
      <returns>O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <summary>Obtém o texto do nó XML que está sendo desserializado.</summary>
      <returns>O texto do nó XML que está sendo desserializado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlNodeEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> de um <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="e">Um <see cref="T:System.Xml.Serialization.XmlNodeEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionImporter">
      <summary>Gera mapeamentos de declarações de elemento de esquema XML, incluindo partes de mensagem de XSD (definição de esquema XML) literais em um documento de linguagem WSDL, para tipos do .NET Framework ou informações de método de serviço Web.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando o namespace de XML padrão especificado.</summary>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando a serialização de XML especificada.</summary>
      <param name="attributeOverrides">Um objeto que substitui como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os tipos mapeados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> usando as substituições de serialização de XML e o namespace de XML padrão especificados.</summary>
      <param name="attributeOverrides">Um objeto que substitui como a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa os tipos mapeados.</param>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado para mapeamentos de tipo importados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <summary>Gera mapeamentos de tipo interno para obter informações de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> com mapeamentos para as partes do elemento de um definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <summary>Retorna os mapeamentos de tipo interno usando as informações de um método de serviço Web e permite que você especifique um nome de elemento XML, namespace de XML e outras opções.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>Retorna os mapeamentos de tipo interno usando as informações de um método de serviço Web e permite que você especifique um nome de elemento XML, namespace de XML e outras opções.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> para especificar que o tipo de esquema gerado será marcado com o elemento <see langword="&lt;xs:anyAttribute&gt;" />; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <summary>Gera mapeamentos de tipo interno para obter informações de um método de serviço Web.</summary>
      <param name="elementName">Um nome do elemento XML produzido pelo método do serviço Web.</param>
      <param name="ns">Um namespace do elemento XML produzido pelo método do serviço Web.</param>
      <param name="members">Uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> que contém entidades de código .NET Framework que pertencem a um método de serviço Web.</param>
      <param name="hasWrapperElement">
        <see langword="true" /> se os elementos correspondentes às partes da mensagem de linguagem WSDL devem ser incluídos em um elemento de wrapper extra em uma mensagem SOAP; caso contrário, <see langword="false" />.</param>
      <param name="rpc">
        <see langword="true" /> se o método for uma chamada de procedimento remoto; caso contrário, <see langword="false" />.</param>
      <param name="openModel">
        <see langword="true" /> para especificar que o tipo de esquema gerado será marcado com o elemento <see langword="&lt;xs:anyAttribute&gt;" />; caso contrário, <see langword="false" />.</param>
      <param name="access">Um dos valores de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />. O padrão é <see langword="None" />.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém os mapeamentos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework especificado.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <returns>Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework, usando o namespace e o tipo especificados.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado.</param>
      <returns>Mapeamento interno do .NET Framework de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework usando o tipo e o atributo especificados.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="root">Um atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que é aplicado ao tipo.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa um mapeamento de um tipo .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Gera um mapeamento para um elemento de esquema XML para um tipo .NET Framework, usando o tipo, o atributo e o namespace especificados.</summary>
      <param name="type">O tipo do .NET Framework para o qual se gera um mapeamento de tipo.</param>
      <param name="root">Um atributo <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que é aplicado ao tipo.</param>
      <param name="defaultNamespace">O namespace de XML padrão a ser usado.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que contém o mapeamento do .NET Framework interno de um tipo para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <summary>Inclui mapeamentos de um tipo para uso posterior quando os métodos de importação são invocados.</summary>
      <param name="type">O tipo do .NET Framework para o qual se salvam as informações de mapeamento de tipo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Inclui mapeamentos de tipos derivados para uso posterior quando os métodos de importação são invocados.</summary>
      <param name="provider">Uma instância da classe <see cref="T:System.Reflection.ICustomAttributeProvider" /> que contém os atributos personalizados derivados do atributo <see cref="T:System.Xml.Serialization.XmlIncludeAttribute" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlReflectionMember">
      <summary>Fornece os mapeamentos entre as entidades de código nos métodos de serviço Web do .NET Framework e o conteúdo das mensagens de linguagem WSDL que são definidos para serviços Web SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlReflectionMember" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.Xml.Serialization.XmlReflectionMember" /> representa um valor retornado do método do serviço Web, em vez de um parâmetro de saída.</summary>
      <returns>
        <see langword="true" />, se o membro representa um valor de retorno de serviço Web; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <summary>Obtém ou define o nome do membro do método de serviço Web para esse mapeamento.</summary>
      <returns>O nome do método de serviço Web.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <summary>Obtém ou define o tipo da entidade de código de membro do método do serviço Web que é representado por esse mapeamento.</summary>
      <returns>O <see cref="T:System.Type" /> da entidade de código de membro do método de serviço Web que é representada por esse mapeamento.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <summary>Obtém ou define um valor que indica que o valor do atributo <c>isNullable</c> da definição do elemento XML correspondente é <see langword="false" />.</summary>
      <returns>
        <see langword="true" />para substituir a <see cref="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" /> Propriedade; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <summary>Obtém ou define um <see cref="T:System.Xml.Serialization.SoapAttributes" /> com a coleção de atributos de SOAP que foram aplicados à entidade de código de membro.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.SoapAttributes" /> que contém os objetos que representam os atributos SOAP aplicados ao membro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <summary>Obtém ou define um <see cref="T:System.Xml.Serialization.XmlAttributes" /> com a coleção de atributos de <see cref="T:System.Xml.Serialization.XmlSerializer" /> que foram aplicados à entidade de código de membro.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlAttributes" /> que representa os atributos XML que foram aplicados ao código de membro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <summary>Habilita iteração em uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
      <param name="list">O objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> que você deseja iterar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <summary>Obtém o elemento atual na coleção.</summary>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> atual na coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <summary>Libera todos os recursos usados pelo <see cref="T:System.Xml.Serialization.XmlSchemaEnumerator" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <summary>Avança o enumerador para o próximo item na coleção.</summary>
      <returns>
        <see langword="true" /> se a movimentação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtém o elemento atual na coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <returns>O elemento atual na coleção de <see cref="T:System.Xml.Schema.XmlSchema" /> objetos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Define o enumerador como sua posição inicial, que é antes do primeiro elemento na coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaExporter">
      <summary>Popula objetos <see cref="T:System.Xml.Schema.XmlSchema" /> com declarações de elemento de esquema XML que são encontradas em objetos de mapeamento de tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaExporter" />.</summary>
      <param name="schemas">Uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> à qual declarações do elemento obtidas dos mapeamentos de tipos são adicionadas.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <summary>Exporta um elemento &lt;any&gt; para o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que é identificado pelo namespace especificado.</summary>
      <param name="ns">O namespace do documento do esquema XML ao qual adicionar um elemento &lt;any&gt;.</param>
      <returns>Um nome arbitrário atribuído à declaração do elemento &lt;any&gt;.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Adiciona uma declaração do elemento de um objeto ou tipo a uma mensagem SOAP ou um objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
      <param name="members">Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém mapeamentos para exportação.</param>
      <returns>A cadeia de caracteres “any” com um inteiro anexado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Adiciona uma declaração do elemento ao <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma das partes do elemento de uma definição de mensagem SOAP literal.</summary>
      <param name="xmlMembersMapping">Os mapeamentos de tipo internos do .NET Framework para as partes do elemento de uma definição de mensagem de linguagem WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <summary>Adiciona uma declaração do elemento ao <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma das partes do elemento de uma definição de mensagem SOAP literal e especifica se os elementos circunscritos estão incluídos.</summary>
      <param name="xmlMembersMapping">O mapeamento interno entre um tipo .NET Framework e um elemento de esquema XML.</param>
      <param name="exportEnclosingType">
        <see langword="true" /> se os elementos do esquema que o circunscrevem devem ser incluídos; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <summary>Adiciona uma declaração do elemento ao objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável para cada uma única parte do elemento de uma definição de mensagem SOAP literal.</summary>
      <param name="xmlMembersMapping">Mapeamentos de tipos .NET Framework internos para as partes do elemento de uma definição de mensagem de linguagem WSDL.</param>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome XML qualificado da declaração do elemento exportado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Adiciona uma declaração do elemento para um tipo .NET Framework para o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> aplicável.</summary>
      <param name="xmlTypeMapping">O mapeamento interno entre um tipo .NET Framework e um elemento de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaImporter">
      <summary>Gera mapeamentos internos para os tipos de .NET Framework para declarações do elemento do esquema XML, incluindo partes de mensagens XSD literais em um documento WSDL.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, obtendo uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representam os esquemas XML usados por mensagens literais de SOAP definidas em um documento WSDL.</summary>
      <param name="schemas">Uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> .</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemaImporter" />, obtendo uma coleção de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que representa os esquemas XML usados por mensagens literais SOAP, além de classes que estão sendo geradas para associações definidas em um documento de linguagem WSDL.</summary>
      <param name="schemas">Um objeto <see cref="T:System.Xml.Serialization.XmlSchemas" />.</param>
      <param name="typeIdentifiers">Um objeto <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> que especifica uma coleção de classes que está sendo gerada para associações definidas em um documento WSDL.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <summary>Gera informações de mapeamento de tipo interno para uma única parte do elemento literal (SOAP) definido em um documento WSDL.</summary>
      <param name="typeName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome do tipo de um elemento para o qual um tipo .NET Framework é gerado.</param>
      <param name="elementName">O nome do elemento parte no documento WSDL.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa o mapeamento de tipo .NET Framework para uma única parte do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="name">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <param name="baseType">Um tipo base para o tipo .NET Framework que é gerado para corresponder ao tipo de um elemento XSD.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que representa as informações de mapeamento de tipo .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML ou como parte de um documento WSDL.</summary>
      <param name="name">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <param name="baseType">Um tipo base para o tipo .NET Framework que é gerado para corresponder ao tipo de um elemento XSD.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> para indicar que o tipo correspondente a um elemento XSD pode ser herdado indiretamente do tipo base; caso contrário, <see langword="false" />.</param>
      <returns>As informações de mapeamento de tipos .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <summary>Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="name">O nome do elemento para o qual um mapeamento é gerado.</param>
      <param name="ns">O namespace do elemento para o qual um mapeamento será gerado.</param>
      <param name="members">Uma matriz de instâncias <see cref="T:System.Xml.Serialization.SoapSchemaMember" /> que especifica os membros do elemento para o qual um mapeamento será gerado.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que contém informações de mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <summary>Gera informações de mapeamento de tipo interno para uma única parte do elemento de uma mensagem SOAP de uso do literal definida em um documento WSDL.</summary>
      <param name="name">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome da parte da mensagem.</param>
      <returns>O mapeamento de tipos .NET Framework para uma definição de mensagem WSDL que contém a parte de um único elemento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <summary>Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="names">Uma matriz do tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica os nomes das partes da mensagem.</param>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> que representa os mapeamentos de tipo .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <summary>Gera informações de mapeamento de tipo interno para as partes do elemento de uma mensagem SOAP de uso do literal definido em um documento WSDL.</summary>
      <param name="names">Uma matriz do tipo <see cref="T:System.Xml.XmlQualifiedName" /> que especifica os nomes das partes da mensagem.</param>
      <param name="baseType">Um tipo base para todos os tipos do .NET Framework que são gerados para corresponderem às partes da mensagem.</param>
      <param name="baseTypeCanBeIndirect">
        <see langword="true" /> para indicar que os tipos correspondentes às partes da mensagem podem ser herdados indiretamente do tipo base; caso contrário, <see langword="false" />.</param>
      <returns>Os mapeamentos de tipo do .NET Framework para as partes do elemento de uma definição de mensagem WSDL.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <returns>Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <param name="baseType">Um objeto <see cref="T:System.Type" /> que especifica um tipo base.</param>
      <returns>Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="typeName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um elemento XML.</param>
      <param name="baseType">Um objeto <see cref="T:System.Type" /> que especifica um tipo base.</param>
      <param name="baseTypeCanBeIndirect">Um valor <see cref="T:System.Boolean" /> que especifica se o tipo gerado pode herdar indiretamente o <paramref name="baseType" />.</param>
      <returns>Um objeto <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que descreve um mapeamento de tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <summary>Gera informações de mapeamento de tipo interno de um elemento definido em um documento de esquema XML.</summary>
      <param name="name">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica o nome de um elemento definido em um documento de esquema XML.</param>
      <returns>As informações de mapeamento de tipos .NET Framework para um elemento de esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemas">
      <summary>Representa a coleção de esquemas XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <summary>Adiciona um objeto ao fim da coleção.</summary>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado à coleção de objetos.</param>
      <returns>O índice no qual o <see cref="T:System.Xml.Schema.XmlSchema" /> é adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <summary>Adiciona um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa uma referência de assembly à coleção.</summary>
      <param name="schema">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado.</param>
      <param name="baseUri">O <see cref="T:System.Uri" /> do objeto do esquema.</param>
      <returns>O índice no qual o <see cref="T:System.Xml.Schema.XmlSchema" /> é adicionado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <summary>Adiciona uma instância da classe <see cref="T:System.Xml.Serialization.XmlSchemas" /> ao final da coleção.</summary>
      <param name="schemas">O objeto <see cref="T:System.Xml.Serialization.XmlSchemas" /> a ser adicionado ao final da coleção.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <summary>Adiciona um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa uma referência de assembly à coleção.</summary>
      <param name="schema">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser adicionado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <summary>Processa os nomes de elemento e de atributo nos esquemas XML e, opcionalmente, valida os esquemas XML.</summary>
      <param name="handler">Um <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que especifica o método de retorno de chamada que trata os erros e os avisos durante a validação do esquema XML, se o parâmetro strict estiver definido como <see langword="true" />.</param>
      <param name="fullCompile">
        <see langword="true" /> para validar os esquemas XML na coleção usando o método <see cref="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" /> da classe <see cref="T:System.Xml.Serialization.XmlSchemas" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <summary>Retorna um valor que indica se a coleção contém um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que pertence ao namespace especificado.</summary>
      <param name="targetNamespace">O namespace do item a ser verificado.</param>
      <returns>
        <see langword="true" /> se o item for encontrado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Determina se o <see cref="T:System.Xml.Serialization.XmlSchemas" /> contém um esquema específico.</summary>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser localizado.</param>
      <returns>
        <see langword="true" />, se a coleção contém o item especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia todo o <see cref="T:System.Xml.Serialization.XmlSchemas" /> para um <see cref="T:System.Array" /> unidimensional compatível, que inicia no índice especificado da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos esquemas copiados de <see cref="T:System.Xml.Serialization.XmlSchemas" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="index">Um inteiro de 32 bits que representa o índice na matriz na qual a cópia começa.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <summary>Localiza em um dos esquemas XML um <see cref="T:System.Xml.Schema.XmlSchemaObject" /> do nome e do tipo especificados.</summary>
      <param name="name">Um <see cref="T:System.Xml.XmlQualifiedName" /> que especifica um nome totalmente qualificado com um namespace usado para localizar um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> na coleção.</param>
      <param name="type">O <see cref="T:System.Type" /> do objeto a ser encontrado. Os tipos possíveis incluem: <see cref="T:System.Xml.Schema.XmlSchemaGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> e <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</param>
      <returns>Uma instância <see cref="T:System.Xml.Schema.XmlSchemaObject" />, como um <see cref="T:System.Xml.Schema.XmlSchemaElement" /> ou <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <summary>Obtém uma coleção de esquemas que pertencem ao mesmo namespace.</summary>
      <param name="ns">O namespace dos esquemas a serem recuperados.</param>
      <returns>Uma implementação <see cref="T:System.Collections.IList" /> que contém os esquemas.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <summary>Pesquisa o esquema especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser localizado.</param>
      <returns>O índice de base zero da primeira ocorrência do valor em todo o <see cref="T:System.Xml.Serialization.XmlSchemas" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <summary>Insere um esquema no <see cref="T:System.Xml.Serialization.XmlSchemas" /> no índice especificado.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="schema" /> deve ser inserido.</param>
      <param name="schema">O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> a ser inserido.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <summary>Obtém um valor que indica se os esquemas foram compilados.</summary>
      <returns>
        <see langword="true" />, se os esquemas tiverem sido compilados; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <summary>Método estático que determina se o esquema XML especificado contém um atributo <see langword="IsDataSet" /> personalizado definido como <see langword="true" /> ou equivalente.</summary>
      <param name="schema">O esquema XML no qual verificar se há um atributo <see langword="IsDataSet" /> com um valor <see langword="true" />.</param>
      <returns>
        <see langword="true" /> se o esquema especificado existir; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <summary>Obtém ou define o objeto <see cref="T:System.Xml.Schema.XmlSchema" /> no índice especificado.</summary>
      <param name="index">O índice do item a ser recuperado.</param>
      <returns>O <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <summary>Obtém um objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado que representa o esquema XML associado ao namespace indicado.</summary>
      <param name="ns">O namespace do objeto especificado.</param>
      <returns>O objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <summary>Executa processos personalizados adicionais ao limpar o conteúdo da instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <summary>Executa os processos personalizados adicionais antes de inserir um novo elemento na instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> será inserido.</param>
      <param name="value">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <summary>Executa processos personalizados adicionais ao remover um elemento da instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> pode ser encontrado.</param>
      <param name="value">O valor do elemento a ser removido em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Executa processos personalizados adicionais antes de definir um valor na instância <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="oldValue" /> pode ser encontrado.</param>
      <param name="oldValue">O valor a ser substituído por <paramref name="newValue" />.</param>
      <param name="newValue">O novo valor do elemento em <paramref name="index" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Remove a primeira ocorrência de um esquema específico do <see cref="T:System.Xml.Serialization.XmlSchemas" />.</summary>
      <param name="schema">O <see cref="T:System.Xml.Schema.XmlSchema" /> a ser removido.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <summary>Retorna um enumerador iterado por meio da coleção de esquemas XML.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <summary>Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de tipos de dados XML com codificação SOAP que são mapeados para coleções ou enumerações.</summary>
      <param name="collection">A coleção para a qual a matriz de itens da coleção é copiada.</param>
      <param name="collectionItems">Uma matriz de itens a serem copiados para a <c>coleção de objetos</c>.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <summary>Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de dados XML com codificação SOAP.</summary>
      <param name="fixup">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" /> que contém o objeto a ser corrigido e a matriz de identificadores de cadeia de caracteres que os itens preencherão.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <summary>Uma classe abstrata que é a classe base para <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> e <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />, e que contém os métodos comuns para ambos os tipos.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <summary>Inicializa uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <summary>Delegado usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para desserialização de tipos de dados XML não raiz com codificação SOAP.</summary>
      <returns>O objeto retornado pelo retorno de chamada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader">
      <summary>Controla a desserialização pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <summary>Armazena um objeto que contém um método de retorno de chamada que será chamado, conforme necessário, para preencher as coleções ou enumerações do .NET Framework que são mapeados para matrizes com codificação SOAP ou elementos com codificação SOAP e referências múltiplas.</summary>
      <param name="fixup">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> e os dados de entrada do método de retorno de chamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <summary>Armazena um objeto que contém uma instância de método de retorno de chamada que será chamada, conforme necessária, para preencher os objetos em uma matriz com codificação SOAP.</summary>
      <param name="fixup">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> e os dados de entrada do método de retorno de chamada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <summary>Armazena uma implementação do delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" /> e seus dados de entrada para uma invocação posterior.</summary>
      <param name="name">O nome do tipo .NET Framework que está sendo desserializado.</param>
      <param name="ns">O namespace do tipo .NET Framework que está sendo desserializado.</param>
      <param name="type">O <see cref="T:System.Type" /> a ser desserializado.</param>
      <param name="read">Um delegado <see cref="T:System.Xml.Serialization.XmlSerializationReadCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <summary>Armazena um objeto que está sendo desserializado de um elemento <see langword="multiRef" /> com codificação SOAP para acesso posterior por meio do método <see cref="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />.</summary>
      <param name="id">O valor do atributo <see langword="id" /> de um elemento <see langword="multiRef" /> que identifica o elemento.</param>
      <param name="o">O objeto que é desserializado do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <summary>Verifica se o desserializador avançou.</summary>
      <param name="whileIterations">O <see langword="count" /> atual está em um loop while.</param>
      <param name="readerCount">O <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> atual.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" /> não avançou.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <summary>Remove todas as ocorrências de caracteres de espaço em branco do início e fim da cadeia de caracteres especificada.</summary>
      <param name="value">A cadeia de caracteres que terá o espaço em branco filtrado.</param>
      <returns>A cadeia de caracteres filtrada.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <summary>Contém uma instância de delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> e as entradas do método, fornecendo também os parâmetro do método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" /> com parâmetros para um método de retorno de chamada.</summary>
      <param name="collection">Uma coleção na qual o método de retorno de chamada copia a matriz de itens da coleção.</param>
      <param name="callback">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</param>
      <param name="collectionItems">Uma matriz para a qual o método de retorno de chamada copia uma coleção.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <summary>Obtém o método de retorno de chamada que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />.</summary>
      <returns>O <see cref="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" /> delegado que aponta para o método de retorno de chamada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <summary>Obtém o <paramref name="object collection" /> para o método de retorno de chamada.</summary>
      <returns>A coleção usada para a correção.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <summary>Obtém a matriz para a qual o método de retorno de chamada copia uma coleção.</summary>
      <returns>A matriz na qual o método de retorno de chamada copia uma coleção.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado deve ser abstrato.</summary>
      <param name="name">O nome do tipo abstrato.</param>
      <param name="ns">O namespace do .NET Framework do tipo abstrato.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Popula um objeto da sua representação XML no local atual do <see cref="T:System.Xml.XmlReader" />, com uma opção de ler o elemento interno.</summary>
      <param name="xsdDerived">O nome local do tipo de dados derivado do esquema XML.</param>
      <param name="nsDerived">O namespace do tipo de dados derivado do esquema XML.</param>
      <param name="xsdBase">O nome local do tipo de dados do esquema XML base.</param>
      <param name="nsBase">O namespace do tipo de dados base do esquema XML.</param>
      <param name="clrDerived">O namespace do tipo derivado do .NET Framework.</param>
      <param name="clrBase">O nome do tipo base do .NET Framework.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado não pode ser instanciado porque o construtor gerará uma exceção de segurança.</summary>
      <param name="typeName">O nome do tipo.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um objeto que está sendo desserializado não pode ser instanciado porque não há nenhum construtor disponível.</summary>
      <param name="typeName">O nome do tipo.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <summary>Cria um <see cref="T:System.InvalidCastException" /> que indica que houve falha na conversão de uma referência explícita.</summary>
      <param name="type">O <see cref="T:System.Type" /> para o qual não é possível converter um objeto. Esse tipo é incorporado na mensagem de exceção.</param>
      <param name="value">Não é possível converter o objeto. Esse objeto é incorporado na mensagem de exceção.</param>
      <returns>Uma exceção <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <summary>Cria um <see cref="T:System.InvalidCastException" /> que indica que houve falha na conversão de uma referência explícita.</summary>
      <param name="type">O <see cref="T:System.Type" /> para o qual não é possível converter um objeto. Esse tipo é incorporado na mensagem de exceção.</param>
      <param name="value">Não é possível converter o objeto. Esse objeto é incorporado na mensagem de exceção.</param>
      <param name="id">Um identificador de cadeia de caracteres.</param>
      <returns>Uma exceção <see cref="T:System.InvalidCastException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que não é possível localizar um tipo derivado que é mapeado para um tipo de dados do esquema XML.</summary>
      <param name="name">O nome local do tipo de dados do esquema XML mapeado para o tipo derivado não disponível.</param>
      <param name="ns">O namespace do tipo de dados do esquema XML que é mapeado para o tipo derivado indisponível.</param>
      <param name="clrType">O nome completo do tipo base do .NET Framework para o qual não é possível localizar um tipo derivado.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que não é possível modificar um tipo de coleção com codificação SOAP e que seus valores não podem ser preenchidos.</summary>
      <param name="name">O nome totalmente qualificado do tipo .NET Framework para o qual há um mapeamento.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um valor de enumeração não é válido.</summary>
      <param name="value">O valor da enumeração não é válido.</param>
      <param name="enumType">O tipo de enumeração.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que a posição atual do <see cref="T:System.Xml.XmlReader" /> representa um nó XML desconhecido.</summary>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo é desconhecido.</summary>
      <param name="type">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome do tipo desconhecido.</param>
      <returns>Uma exceção <see cref="T:System.InvalidOperationException" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <summary>Obtém ou define um valor que determina se as cadeias de caracteres XML são convertidas em nomes de tipo .NET Framework válidos.</summary>
      <returns>
        <see langword="true" /> se as cadeias de caracteres XML são decodificadas em nomes de tipo de .NET Framework válidos; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <summary>Obtém o objeto do documento XML no qual o documento XML está sendo desserializado.</summary>
      <returns>Um <see cref="T:System.Xml.XmlDocument" /> que representa os dados de <see cref="T:System.Xml.XmlDocument" /> desserializados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <summary>Garante que uma determinada matriz ou uma cópia, seja grande o suficiente para conter um índice especificado.</summary>
      <param name="a">O <see cref="T:System.Array" /> que está sendo verificado.</param>
      <param name="index">O índice necessário.</param>
      <param name="elementType">O <see cref="T:System.Type" /> de elementos da matriz.</param>
      <returns>O <see cref="T:System.Array" /> existente, se ele já for grande o suficiente; caso contrário, uma nova matriz maior contendo os elementos da matriz original.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <summary>Contém uma instância de delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> e as entradas do método, servindo também como o parâmetro do método.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">O objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</param>
      <param name="callback">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="count">O tamanho da matriz de cadeia de caracteres obtida por meio da propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />.</summary>
      <param name="o">O objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</param>
      <param name="callback">Um método que instancia o delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</param>
      <param name="ids">A matriz de cadeia de caracteres obtida por meio da propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <summary>Obtém o método de retorno de chamada que cria uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" />.</summary>
      <returns>O método de retorno de chamada que cria uma <see cref="T:System.Xml.Serialization.XmlSerializationFixupCallback" /> instância do delegado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <summary>Obtém ou define uma matriz de chaves para os objetos que pertencem à propriedade <see cref="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" /> cujos valores são preenchidos pela implementação do retorno de chamada.</summary>
      <returns>A matriz de chaves.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <summary>Obtém ou define o objeto que contém outros objetos cujos valores são preenchidos pela implementação do retorno de chamada.</summary>
      <returns>A origem que contém objetos com valores a serem preenchidos.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <summary>Preenche os valores de uma matriz com codificação SOAP cujo tipo de dados é mapeado para um tipo de referência do .NET Framework.</summary>
      <param name="fixup">Um objeto que contém a matriz cujos valores são preenchidos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <summary>Obtém o comprimento da matriz de codificação SOAP em que o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento.</summary>
      <param name="name">O nome local que a matriz deve ter.</param>
      <param name="ns">O namespace que a matriz deve ter.</param>
      <returns>O tamanho da matriz de SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <summary>Determina se o elemento XML em que o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento tem um atributo nulo definido como o valor <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Xml.XmlReader" /> está posicionado sobre um atributo nulo com o valor <see langword="true" /> no momento; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <summary>Obtém um objeto que está sendo desserializado de um elemento <see langword="multiRef" /> com codificação SOAP e que foi armazenado anteriormente por <see cref="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />.</summary>
      <param name="id">O valor do atributo <see langword="id" /> de um elemento <see langword="multiRef" /> que identifica o elemento.</param>
      <returns>Um objeto a ser desserializado de um elemento <see langword="multiRef" /> com codificação SOAP.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <summary>Obtém o valor do atributo <see langword="xsi:type" /> do elemento XML no local atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Um nome qualificado XML que indica o tipo de dados de um elemento XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <summary>Inicializa os métodos de retorno de chamada que populam os objetos que são mapeados para dados XML com codificação SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <summary>Armazena os nomes de elementos e atributos em um objeto <see cref="T:System.Xml.NameTable" />.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <summary>Obtém ou define um valor que deve ser <see langword="true" /> valor retornado para um SOAP 1.1.</summary>
      <returns>
        <see langword="true" />, se o valor for um valor de retorno.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <summary>Determina se um nome de atributo XML indica um namespace de XML.</summary>
      <param name="name">O nome de um atributo XML.</param>
      <returns>
        <see langword="true" /> se o nome do atributo XML indicar um namespace de XML; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <summary>Define o valor do atributo XML se ele for do tipo <see langword="arrayType" /> do namespace de linguagem WSDL.</summary>
      <param name="attr">Um <see cref="T:System.Xml.XmlAttribute" /> que pode ter o tipo <see langword="wsdl:array" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <summary>Faz o <see cref="T:System.Xml.XmlReader" /> ler o nome totalmente qualificado do elemento na posição atual.</summary>
      <returns>O nome totalmente qualificado do elemento XML atual.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <summary>Faz o <see cref="T:System.Xml.XmlReader" /> ler uma marca de fim XML.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <summary>Obtém o objeto <see cref="T:System.Xml.XmlReader" /> que está sendo usado por <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</summary>
      <returns>O <see cref="T:System.Xml.XmlReader" /> que está sendo usado pelo <see cref="T:System.Xml.Serialization.XmlSerializationReader" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <summary>Obtém a contagem atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A contagem atual de um <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o elemento XML atual se o elemento tiver um atributo nulo com valor verdadeiro.</summary>
      <returns>
        <see langword="true" /> se o elemento tem um valor de atributo null="true" e foi lido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o nome totalmente qualificado do elemento em sua posição atual.</summary>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o nome totalmente qualificado do elemento XML atual; caso contrário, <see langword="null" /> se um valor de atributo nul="true" existir.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler um elemento XML simples, somente de texto que poderia ser <see langword="null" />.</summary>
      <returns>O valor da cadeia de caracteres; caso contrário, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <summary>Lê o valor do atributo <see langword="href" /> (atributo <see langword="ref" /> para SOAP 1.2) que é usado para se referir a um elemento XML na codificação SOAP.</summary>
      <param name="fixupReference">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns>
        <see langword="true" /> se o valor foi lido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <summary>Desserializa um objeto de um elemento XML <see langword="multiRef" /> com codificação SOAP.</summary>
      <returns>O valor do elemento referenciado no documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <summary>Desserializa um objeto de um elemento XML <see langword="multiRef" /> com codificação SOAP.</summary>
      <param name="name">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns">O namespace do tipo de dados do esquema XML do elemento.</param>
      <returns>O valor do elemento referenciado no documento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <summary>Desserializa objetos de elementos <see langword="multiRef" /> com codificação SOAP em uma mensagem SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <summary>Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="name">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns">O namespace do tipo de dados do esquema XML do elemento.</param>
      <param name="elementCanBeType">
        <see langword="true" /> se o nome do elemento também é o nome do tipo de dados do esquema XML; caso contrário, <see langword="false" />.</param>
      <param name="fixupReference">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <summary>Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="name">O nome local do tipo de dados do esquema XML do elemento.</param>
      <param name="ns">O namespace do tipo de dados do esquema XML do elemento.</param>
      <param name="fixupReference">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <summary>Desserializa um objeto de um elemento XML em uma mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" />.</summary>
      <param name="fixupReference">Uma cadeia de caracteres de saída na qual o valor do atributo <see langword="href" /> é lido.</param>
      <returns>O objeto desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <summary>Popula um objeto da sua representação XML no local atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="serializable">Um <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que corresponde à posição atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> com seus membros populados do local do <see cref="T:System.Xml.XmlReader" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <summary>Esse método oferece suporte a infraestrutura do .NET Framework e não se destina a ser usado diretamente do seu código.</summary>
      <param name="serializable">Um objeto IXmlSerializable que corresponde à posição atual do XMLReader.</param>
      <param name="wrappedAny">Especifica se o objeto serializável é encapsulado.</param>
      <returns>Um objeto que implementa a interface IXmlSerializable com seus membros populados do local do XmlReader.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <summary>Produz o resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> acrescentado ao valor de entrada.</summary>
      <param name="value">Uma cadeia de caracteres que será prefixada ao resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" />.</param>
      <returns>O resultado da chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> acrescentado ao valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <summary>Retorna o resultado de uma chamada para o método <see cref="M:System.Xml.XmlReader.ReadString" /> da classe <see cref="T:System.Xml.XmlReader" />, com os espaços em branco filtrados, se necessário, e acrescentado ao valor de entrada.</summary>
      <param name="value">Uma cadeia de caracteres que receberá o acréscimo.</param>
      <param name="trim">
        <see langword="true" /> se o resultado da operação de leitura deve ser filtrado; caso contrário, <see langword="false" />.</param>
      <returns>O resultado da operação de leitura acrescentada ao valor de entrada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <summary>Lê um elemento XML que permite valores nulos (<see langword="xsi:nil = 'true'" />) e retorna um valor <see cref="T:System.Nullable`1" /> genérico.</summary>
      <param name="type">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o tipo de dados simples para o local atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>Um <see cref="T:System.Nullable`1" /> genérico que representa um valor nulo de XML.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <summary>Obtém o valor do nó XML no qual o <see cref="T:System.Xml.XmlReader" /> está posicionado no momento.</summary>
      <param name="type">O <see cref="T:System.Xml.XmlQualifiedName" /> que representa o tipo de dados simples para o local atual do <see cref="T:System.Xml.XmlReader" />.</param>
      <returns>O valor do nó como um tipo de valor do .NET Framework, se o valor for um tipo de dados de esquema XML simples.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler um elemento raiz do documento XML na sua posição atual.</summary>
      <param name="wrapped">
        <see langword="true" /> se o método deve ler conteúdo somente depois de ler o início do elemento; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XmlDocument" /> que contém o elemento raiz que foi lido.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o nó XML na posição atual.</summary>
      <param name="wrapped">
        <see langword="true" /> para ler o conteúdo somente depois de ler o início do elemento; caso contrário, <see langword="false" />.</param>
      <returns>Um <see cref="T:System.Xml.XmlNode" /> que representa o nó XML que foi lido.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <summary>Armazena um objeto a ser desserializado de um elemento <see langword="multiRef" /> com codificação SOAP.</summary>
      <param name="o">O objeto a ser desserializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <summary>Obtém um assembly gerado dinamicamente pelo nome.</summary>
      <param name="assemblyFullName">O nome completo do assembly.</param>
      <returns>Um <see cref="T:System.Reflection.Assembly" /> gerado dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <summary>Garante que uma determinada matriz ou uma cópia, não seja maior que o tamanho especificado.</summary>
      <param name="a">A matriz que está sendo verificada.</param>
      <param name="length">O tamanho máximo da matriz.</param>
      <param name="elementType">O <see cref="T:System.Type" /> de elementos da matriz.</param>
      <param name="isNullable">
        <see langword="true" /> se <see langword="null" /> para a matriz, se existir para a matriz de entrada, pode ser retornado; caso contrário, uma nova matriz menor.</param>
      <returns>O <see cref="T:System.Array" /> existente, se ele já for pequeno o suficiente; caso contrário, uma nova matriz menor contendo os elementos da matriz original até o tamanho de <paramref name="length" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o valor de cadeia de caracteres na sua posição atual e retorná-lo como uma matriz de bytes de base 64.</summary>
      <param name="isNull">
        <see langword="true" /> para retornar <see langword="null" />; <see langword="false" /> para retornar uma matriz de bytes de base 64.</param>
      <returns>Uma matriz de bytes de base 64; caso contrário, <see langword="null" /> se o valor do parâmetro <paramref name="isNull" /> for <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <summary>Produz uma matriz de bytes de base 64 com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value">Uma cadeia de caracteres a ser convertida em uma matriz de bytes de base 64.</param>
      <returns>Uma matriz de bytes de base 64.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <summary>Instrui o <see cref="T:System.Xml.XmlReader" /> a ler o valor de cadeia de caracteres na sua posição atual e retorná-lo como uma matriz de bytes hexadecimais.</summary>
      <param name="isNull">
        <see langword="true" /> para retornar <see langword="null" />; <see langword="false" /> para retornar uma matriz de bytes hexadecimais.</param>
      <returns>Uma matriz de bytes hexadecimais; caso contrário, <see langword="null" /> se o valor do parâmetro <paramref name="isNull" /> for <see langword="true" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <summary>Produz uma matriz de bytes hexadecimais de uma cadeia de caracteres de entrada.</summary>
      <param name="value">Uma cadeia de caracteres para converter em uma matriz de bytes hexadecimais.</param>
      <returns>Uma matriz de bytes hexadecimais.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <summary>Produz um objeto <see cref="T:System.Char" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.Char" />.</param>
      <returns>Um objeto <see cref="T:System.Char" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <summary>Produz um objeto <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value">Uma cadeia de caracteres a ser convertida em um objeto de classe <see cref="T:System.DateTime" />.</param>
      <returns>Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <summary>Produz um objeto <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres de entrada.</summary>
      <param name="value">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.DateTime" />.</param>
      <returns>Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <summary>Produz um valor de enumeração numérico com base em uma cadeia de caracteres que consiste em identificadores delimitados que representam as constantes da lista de enumerador.</summary>
      <param name="value">Uma cadeia de caracteres que consiste em identificadores delimitados em que cada identificador representa uma constante da lista de enumeradores de conjunto.</param>
      <param name="h">Um <see cref="T:System.Collections.Hashtable" /> que consiste em identificadores como chaves e as constantes como números integrais.</param>
      <param name="typeName">O nome do tipo de enumeração.</param>
      <returns>Um valor longo que consiste no valor de enumeração como uma série de operações <see langword="OR" /> bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <summary>Produz um <see cref="T:System.DateTime" /> com base em uma cadeia de caracteres que representa o tempo.</summary>
      <param name="value">Uma cadeia de caracteres a ser convertida em um objeto <see cref="T:System.DateTime" />.</param>
      <returns>Um objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <summary>Decodifica um nome XML.</summary>
      <param name="value">Um nome XML a ser decodificado.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <summary>Decodifica um nome XML.</summary>
      <param name="value">Um nome XML a ser decodificado.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <summary>Decodifica um nome XML.</summary>
      <param name="value">Um nome XML a ser decodificado.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <summary>Decodifica um nome XML.</summary>
      <param name="value">Um nome XML a ser decodificado.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <summary>Obtém um <see cref="T:System.Xml.XmlQualifiedName" /> de um nome que pode conter um prefixo.</summary>
      <param name="value">Um nome que pode conter um prefixo.</param>
      <returns>Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa um nome XML qualificado pelo namespace.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo em questão.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="attr">Um <see cref="T:System.Xml.XmlAttribute" /> que representa o atributo em questão.</param>
      <param name="qnames">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">O <see cref="T:System.Object" /> que está sendo desserializado.</param>
      <param name="elem">O <see cref="T:System.Xml.XmlElement" /> para o qual um evento é acionado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownElement" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />.</param>
      <param name="elem">O <see cref="T:System.Xml.XmlElement" /> para o qual um evento é acionado.</param>
      <param name="qnames">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">O objeto que está sendo desserializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="o">O objeto que está sendo desserializado.</param>
      <param name="qnames">Uma lista delimitada por vírgulas de nomes qualificados XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <summary>Aciona um evento <see cref="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" /> para a posição atual do <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="id">Uma cadeia de caracteres exclusiva que é usada para identificar o objeto não referenciado, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />.</param>
      <param name="o">Um objeto que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> está tentando desserializar, acessível posteriormente por meio da propriedade <see cref="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <summary>Delegado que é usado pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> para serialização de tipos de dados XML não raiz com codificação SOAP.</summary>
      <param name="o">O objeto que está sendo serializado.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializationWriter">
      <summary>Representa uma classe abstrata usada para controlar a serialização pela classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <summary>Armazena uma implementação do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> e o tipo ao qual ele se aplica para uma invocação posterior.</summary>
      <param name="type">O <see cref="T:System.Type" /> de objetos que são serializados.</param>
      <param name="typeName">O nome do tipo de objetos que são serializados.</param>
      <param name="typeNs">O namespace do tipo de objetos que são serializados.</param>
      <param name="callback">Uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica um nome inesperado de um elemento que segue uma declaração do elemento <see langword="choice" /> do esquema XML.</summary>
      <param name="value">O nome que não é válido.</param>
      <param name="identifier">A declaração do elemento <see langword="choice" /> ao qual o nome pertence.</param>
      <param name="name">O nome local esperado de um elemento.</param>
      <param name="ns">O namespace esperado de um elemento.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que foi aplicado a um membro invalidamente; somente os membros que são do tipo <see cref="T:System.Xml.XmlNode" /> ou derivado de <see cref="T:System.Xml.XmlNode" />, são válidos.</summary>
      <param name="o">O objeto que representa o membro inválido.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica o <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> que foi aplicado a um membro invalidamente; somente os membros que são do tipo <see cref="T:System.Xml.XmlNode" /> ou derivado de <see cref="T:System.Xml.XmlNode" />, são válidos.</summary>
      <param name="type">O <see cref="T:System.Type" /> que é inválido.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica uma falha durante a gravação de uma matriz em que a declaração do elemento <see langword="choice" /> de um esquema XML é aplicada.</summary>
      <param name="type">O tipo que está sendo serializado.</param>
      <param name="identifier">Um nome para a declaração do elemento <see langword="choice" />.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> para um valor de enumeração inválido.</summary>
      <param name="value">Um objeto que representa a enumeração inválida.</param>
      <param name="typeName">O nome do tipo XML.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um valor para um elemento XML não corresponde a um tipo de enumeração.</summary>
      <param name="value">O valor que não é válido.</param>
      <param name="elementName">O nome do elemento XML com um valor inválido.</param>
      <param name="enumValue">O valor válido.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que não foi possível processar um elemento XML que deve estar de acordo com a declaração do elemento <see langword="any" /> do esquema XML.</summary>
      <param name="name">O elemento XML que não pode ser processado.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo que está sendo serializado não está sendo usado de maneira válida ou se for encontrado inesperadamente.</summary>
      <param name="o">O objeto cujo tipo não pode ser serializado.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <summary>Cria um <see cref="T:System.InvalidOperationException" /> que indica que um tipo que está sendo serializado não está sendo usado de maneira válida ou se for encontrado inesperadamente.</summary>
      <param name="type">O tipo que não pode ser serializado.</param>
      <returns>A exceção recém-criada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <summary>Obtém ou define um valor que indica se o método <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> é usado para gravar um XML válido.</summary>
      <returns>
        <see langword="true" />Se o <see cref="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" /> método retornar um nome codificado; caso contrário <see langword="false" />,.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <summary>Processa uma matriz de bytes de base 64.</summary>
      <param name="value">Uma matriz <see cref="T:System.Byte" /> de base 64.</param>
      <returns>A mesma matriz de bytes que foi passada como um argumento.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <summary>Produz uma cadeia de caracteres com base em uma matriz de bytes hexadecimais de entrada.</summary>
      <param name="value">Uma matriz de bytes hexadecimais a ser convertida em uma cadeia de caracteres.</param>
      <returns>O valor da matriz de bytes é convertido em uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <summary>Produz uma cadeia de caracteres com base em um <see cref="T:System.Char" /> de entrada.</summary>
      <param name="value">Um <see cref="T:System.Char" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns>O valor <see cref="T:System.Char" /> convertido em uma cadeia de caracteres.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <summary>Produz uma cadeia de caracteres com base em um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value">Um <see cref="T:System.DateTime" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns>Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> que mostra a data, mas não a hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <summary>Produz uma cadeia de caracteres com base em um <see cref="T:System.DateTime" /> de entrada.</summary>
      <param name="value">Um <see cref="T:System.DateTime" /> a ser convertido em uma cadeia de caracteres.</param>
      <returns>Uma representação de cadeia de caracteres do <see cref="T:System.DateTime" /> que mostra a data e a hora.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <summary>Produz uma cadeia de caracteres que consiste em identificadores delimitados que representam os membros de enumeração que foram definidos.</summary>
      <param name="value">O valor da enumeração como uma série de operações <see langword="OR" /> bit a bit.</param>
      <param name="values">Os valores de nome da enumeração.</param>
      <param name="ids">Os valores de constantes da enumeração.</param>
      <returns>Uma cadeia de caracteres que consiste em identificadores delimitados em que cada um representa um membro da lista de enumeradores de conjunto.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <summary>Usa um valor de enumeração numéricos e os nomes e as constantes da lista de enumeradores para enumeração e retorna uma cadeia de caracteres que consiste em identificadores delimitados que representam os membros de enumeração que foram definidos.</summary>
      <param name="value">O valor da enumeração como uma série de operações <see langword="OR" /> bit a bit.</param>
      <param name="values">Os valores da enumeração.</param>
      <param name="ids">As constantes da enumeração.</param>
      <param name="typeName">O nome do tipo</param>
      <returns>Uma cadeia de caracteres que consiste em identificadores delimitados, em que cada item é um dos valores definidos pela operação bit a bit.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <summary>Produz uma cadeia de caracteres com base em um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value">Um <see cref="T:System.DateTime" /> que é convertido em uma cadeia de caracteres.</param>
      <returns>Uma representação de cadeia de caracteres do objeto <see cref="T:System.DateTime" /> que mostra a hora, mas não a data.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <summary>Codifica um nome XML válido substituindo caracteres que não são válidos por sequências de escape.</summary>
      <param name="name">Uma cadeia de caracteres a ser usada como um nome XML.</param>
      <returns>Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <summary>Codifica um nome local de XML válido substituindo caracteres que não são válidos por sequências de escape.</summary>
      <param name="ncName">Uma cadeia de caracteres a ser usada como um nome local XML (não qualificado).</param>
      <returns>Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <summary>Codifica um nome XML.</summary>
      <param name="nmToken">Um nome XML a ser codificado.</param>
      <returns>Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <summary>Codifica uma sequência delimitada por espaço de nomes XML em um único nome XML.</summary>
      <param name="nmTokens">Uma sequência delimitada por espaço de nomes XML a serem decodificados.</param>
      <returns>Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <summary>Retorna um nome qualificado XML, com caracteres inválidos substituídos pelas sequências de escape.</summary>
      <param name="xmlQualifiedName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o XML a ser gravado.</param>
      <returns>Um nome qualificado XML com caracteres inválidos substituídos pelas sequências de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <summary>Produz uma cadeia de caracteres que pode ser gravada como um nome qualificado XML, com caracteres inválidos substituídos pelas sequências de escape.</summary>
      <param name="xmlQualifiedName">Um <see cref="T:System.Xml.XmlQualifiedName" /> que representa o XML a ser gravado.</param>
      <param name="ignoreEmpty">
        <see langword="true" /> para ignorar espaços vazios na cadeia de caracteres; caso contrário, <see langword="false" />.</param>
      <returns>Um nome qualificado XML com caracteres inválidos substituídos pelas sequências de escape.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <summary>Inicializa uma instância do delegado <see cref="T:System.Xml.Serialization.XmlSerializationWriteCallback" /> para serializar os dados XML com codificação SOAP.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <summary>Obtém ou define uma lista de objetos de nome XML qualificado que contêm os namespaces e prefixos usados para produzir nomes qualificados em documentos XML.</summary>
      <returns>Um <see cref="T:System.Collections.ArrayList" /> que contém os namespaces e os pares de prefixo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <summary>Obtém um assembly gerado dinamicamente pelo nome.</summary>
      <param name="assemblyFullName">O nome completo do assembly.</param>
      <returns>Um assembly gerado dinamicamente.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <summary>Inicializa as referências de objeto somente ao serializar uma mensagem SOAP com codificação SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <summary>Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML que não tem namespace especificado para o seu nome.</summary>
      <param name="localName">O nome local do atributo XML.</param>
      <param name="value">O valor do atributo XML como uma matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <summary>Instrui o <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML que não tem namespace especificado para o nome.</summary>
      <param name="localName">O nome local do atributo XML.</param>
      <param name="value">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <summary>Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um atributo XML.</summary>
      <param name="localName">O nome local do atributo XML.</param>
      <param name="ns">O namespace do atributo XML.</param>
      <param name="value">O valor do atributo XML como uma matriz de bytes.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <summary>Grava um atributo XML.</summary>
      <param name="localName">O nome local do atributo XML.</param>
      <param name="ns">O namespace do atributo XML.</param>
      <param name="value">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <summary>Grava um atributo XML em que o prefixo de namespace é fornecido manualmente.</summary>
      <param name="prefix">O prefixo do namespace a ser gravado.</param>
      <param name="localName">O nome local do atributo XML.</param>
      <param name="ns">O namespace representado pelo prefixo.</param>
      <param name="value">O valor do atributo XML como uma cadeia de caracteres.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Grava um objeto de nó XML dentro do corpo de um elemento XML nomeado.</summary>
      <param name="node">O nó XML a ser gravado, possivelmente um filho do elemento XML.</param>
      <param name="name">O nome local do elemento XML pai a ser gravado.</param>
      <param name="ns">O namespace do elemento XML pai a ser gravado.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> para indicar que o nó, se for um elemento XML, cumpre uma declaração do elemento <see langword="any" /> de um esquema XML; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Instrui um objeto <see cref="T:System.Xml.XmlWriter" /> a gravar um objeto <see cref="T:System.Xml.XmlNode" /> dentro do corpo de um elemento XML nomeado.</summary>
      <param name="node">O nó XML a ser gravado, possivelmente um filho do elemento XML.</param>
      <param name="name">O nome local do elemento XML pai a ser gravado.</param>
      <param name="ns">O namespace do elemento XML pai a ser gravado.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="any">
        <see langword="true" /> para indicar que o nó, se for um elemento XML, cumpre uma declaração do elemento <see langword="any" /> de um esquema XML; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um nome qualificado especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O nome a ser gravado, usando o prefixo se qualificado para namespace, no texto do elemento.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML a ser gravado sem qualificação de namespace.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="ns">O namespace do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML com um valor especificado no corpo.</summary>
      <param name="localName">O nome local do elemento XML.</param>
      <param name="value">O valor de texto do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <summary>Grava um elemento XML cujo corpo está vazio.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <summary>Grava um elemento XML cujo corpo está vazio.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <summary>Grava uma marca do elemento <see langword="&lt;closing&gt;" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <summary>Grava uma marca do elemento <see langword="&lt;closing&gt;" />.</summary>
      <param name="o">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <summary>Grava um atributo <see langword="id" /> que aparece em um elemento <see langword="multiRef" /> de codificação de SOAP.</summary>
      <param name="o">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Grava os atributos de declaração de namespace.</summary>
      <param name="xmlns">Os namespaces de XML a serem declarados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML cujo corpo contém um nome qualificado XML válido. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">O nome qualificado XML para gravar no corpo do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML cujo corpo contém um nome qualificado XML válido. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">O nome qualificado XML para gravar no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <summary>Grava uma matriz de bytes no corpo de um elemento XML. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A matriz de bytes a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <summary>Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
      <param name="xsiType">O nome do tipo de dados do esquema XML a ser gravado no atributo <see langword="xsi:type" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <summary>Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <summary>Grava uma matriz de bytes no corpo de um elemento XML. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A matriz de bytes a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <summary>Grava um elemento XML que contém uma cadeia de caracteres como o corpo. <see cref="T:System.Xml.XmlWriter" /> insere um atributo <see langword="xsi:nil='true'" /> se o valor da cadeia de caracteres é <see langword="null" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="value">A cadeia de caracteres a ser gravada no corpo do elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <summary>Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <summary>Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <summary>Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <summary>Grava um elemento XML com um atributo <see langword="xsi:nil='true'" />.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <summary>Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <summary>Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <summary>Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="&lt;multiRef&gt;" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> para serializar o objeto diretamente para o elemento XML em vez de fazer com que o elemento referencie outro que contenha os dados; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <summary>Grava um elemento XML de mensagem SOAP que pode conter uma referência a um elemento XML <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado no elemento XML atual ou um elemento <see langword="multiRef" /> que é referenciado pelo elemento atual.</param>
      <param name="ambientType">O tipo armazenado no mapeamento de tipos do objeto (em vez do tipo do objeto encontrado diretamente por meio da operação <see langword="typeof" />).</param>
      <param name="suppressReference">
        <see langword="true" /> para serializar o objeto diretamente para o elemento XML em vez de fazer com que o elemento referencie outro que contenha os dados; caso contrário, <see langword="false" />.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <summary>Obtém ou define o <see cref="T:System.Xml.XmlWriter" /> que está sendo usado pelo <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</summary>
      <returns>O <see cref="T:System.Xml.XmlWriter" /> usado pela instância de classe.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <summary>Serializa objetos em elementos XML <see langword="multiRef" /> com codificação SOAP em uma mensagem SOAP.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <summary>Grava um elemento XML de mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento de referência que está sendo gravado.</param>
      <param name="ns">O namespace do elemento de referência que está sendo gravado.</param>
      <param name="o">O objeto que está sendo serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Grava um elemento XML de mensagem SOAP que contém uma referência a um elemento <see langword="multiRef" /> para determinado objeto.</summary>
      <param name="n">O nome local do elemento de referência que está sendo gravado.</param>
      <param name="ns">O namespace do elemento de referência que está sendo gravado.</param>
      <param name="o">O objeto que está sendo serializado.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto a ser serializado for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <summary>Grava um elemento de resultado de SOAP 1.2 RPC com um nome qualificado especificado no corpo.</summary>
      <param name="name">O nome local do corpo do resultado.</param>
      <param name="ns">O namespace do corpo do resultado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <summary>Grava um objeto que usa a formatação XML personalizada como um elemento XML.</summary>
      <param name="serializable">Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que usa a formatação XML personalizada.</param>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto da classe <see cref="T:System.Xml.Serialization.IXmlSerializable" /> for <see langword="null" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Instrui o <see cref="T:System.Xml.XmlNode" /> a gravar um objeto que usa a formatação de XML personalizada como um elemento XML.</summary>
      <param name="serializable">Um objeto que implementa a interface <see cref="T:System.Xml.Serialization.IXmlSerializable" /> que usa a formatação XML personalizada.</param>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="isNullable">
        <see langword="true" /> para gravar um atributo <see langword="xsi:nil='true'" /> se o objeto <see cref="T:System.Xml.Serialization.IXmlSerializable" /> for <see langword="null" />; caso contrário, <see langword="false" />.</param>
      <param name="wrapped">
        <see langword="true" /> para ignorar a gravação da marca do elemento de abertura; caso contrário, <see langword="false" /> para gravar a marca do elemento de abertura.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <summary>Grava a declaração XML se o gravador estiver posicionado no início de um documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="writePrefixed">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado como um elemento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado como um elemento XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Grava uma marca de elemento de abertura, incluindo todos os atributos.</summary>
      <param name="name">O nome local do elemento XML de gravação.</param>
      <param name="ns">O namespace do elemento XML de gravação.</param>
      <param name="o">O objeto que está sendo serializado como um elemento XML.</param>
      <param name="writePrefixed">
        <see langword="true" /> para gravar o nome do elemento com um prefixo se nenhum estiver disponível para o namespace especificado; caso contrário, <see langword="false" />.</param>
      <param name="xmlns">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contém pares de prefixo e namespace que serão usados no XML gerado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <summary>Grava um elemento XML cujo corpo de texto é um valor de um tipo de dados de esquema XML simples.</summary>
      <param name="name">O nome local do elemento a ser gravado.</param>
      <param name="ns">O namespace do elemento a ser gravado.</param>
      <param name="o">O objeto a ser serializado no corpo do elemento.</param>
      <param name="xsiType">
        <see langword="true" /> se o elemento XML especifica explicitamente o tipo de valor do texto usando o atributo <see langword="xsi:type" />; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <summary>Grava uma matriz de bytes de base 64.</summary>
      <param name="value">A matriz de bytes para gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <summary>Grava um valor de cadeia de caracteres especificado.</summary>
      <param name="value">O valor da cadeia de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <summary>Grava o <see cref="T:System.Xml.XmlNode" /> especificado como um atributo XML.</summary>
      <param name="node">O nó XML para gravação.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <summary>Grava o objeto <see cref="T:System.Xml.XmlNode" /> especificado como um atributo XML.</summary>
      <param name="node">O nó XML para gravação.</param>
      <param name="container">Um objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> (ou <see langword="null" />) usado para gerar um valor de nome qualificado para um atributo <see langword="arrayType" /> do namespace WSDL (linguagem WSDL) ("http://schemas.xmlsoap.org/wsdl/").</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <summary>Grava um atributo <see langword="xsi:type" /> para um elemento XML que está sendo serializado em um documento.</summary>
      <param name="name">O nome local de um tipo de dados de esquema XML.</param>
      <param name="ns">O namespace de um tipo de dados de esquema XML.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializer">
      <summary>Serializa e desserializa objetos de e para documentos XML. O <see cref="T:System.Xml.Serialization.XmlSerializer" /> permite controlar como os objetos são codificados em XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado. Especifica o namespace padrão para todos os elementos XML.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="defaultNamespace">O namespace padrão a ser usado para todos os elementos XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em um objeto de um tipo especificado. Se uma propriedade ou um campo retornar uma matriz, o parâmetro <paramref name="extraTypes" /> especificará os objetos que podem ser inseridos na matriz.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar documentos XML em objetos de um tipo especificado. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes.</summary>
      <param name="type">O tipo do objeto a serializar.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo <see cref="T:System.Object" /> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <see cref="T:System.Object" />. Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro <paramref name="type" />.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace">O namespace padrão de todos os elementos XML no documento XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo <see cref="T:System.Object" /> em instâncias de documentos XML e desserializar instâncias de documentos XML em objetos do tipo <see cref="T:System.Object" />. Cada objeto a ser serializado pode conter instâncias de classes, que essa sobrecarga substitui por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro <paramref name="type" />.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace">O namespace padrão de todos os elementos XML no documento XML.</param>
      <param name="location">O local dos tipos.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e desserializar um documento XML no objeto do tipo especificado. Também especifica a classe a ser usado como o elemento raiz de XML.</summary>
      <param name="type">O tipo do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Inicializa uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> usando um objeto que mapeia um tipo para outro.</summary>
      <param name="xmlTypeMapping">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <summary>Obtém um valor que indica se este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode desserializar um documento XML especificado.</summary>
      <param name="xmlReader">Um <see cref="T:System.Xml.XmlReader" /> que aponta para o documento a ser desserializado.</param>
      <returns>
        <see langword="true" /> se este <see cref="T:System.Xml.Serialization.XmlSerializer" /> puder desserializar o objeto ao qual o <see cref="T:System.Xml.XmlReader" /> aponta, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <summary>Retorna um objeto usado para ler o documento XML a ser serializado.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> usado para ler o documento XML.</returns>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <summary>Quando substituído em uma classe derivada, retorna um gravador usado para serializar o objeto.</summary>
      <returns>Uma instância que implementa a classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <summary>Desserializa o documento XML contido pelo <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> que contém o documento XML a ser desserializado.</param>
      <returns>O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <summary>Desserializa o documento XML contido pelo <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="textReader">O <see cref="T:System.IO.TextReader" /> que contém o documento XML a ser desserializado.</param>
      <returns>O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <summary>Desserializa o documento XML contido pelo <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> especificado.</summary>
      <param name="reader">O <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que contém o documento XML a ser desserializado.</param>
      <returns>O objeto desserializado.</returns>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <summary>Desserializa o documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> que contém o documento XML a ser desserializado.</param>
      <returns>O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <summary>Desserializa o documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> e estilo de codificação especificados.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> que contém o documento XML a ser desserializado.</param>
      <param name="encodingStyle">O estilo de codificação do XML serializado.</param>
      <returns>O objeto desserializado.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a desserialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Desserializa o objeto usando os dados contidos pelo <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="xmlReader">Uma instância da classe <see cref="T:System.Xml.XmlReader" /> usada para ler o documento.</param>
      <param name="encodingStyle">A codificação usada.</param>
      <param name="events">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>O objeto que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <summary>Desserializa um documento XML contido pelo <see cref="T:System.Xml.XmlReader" /> especificado e permite a substituição de eventos que ocorrem durante a desserialização.</summary>
      <param name="xmlReader">O <see cref="T:System.Xml.XmlReader" /> que contém o documento a ser desserializado.</param>
      <param name="events">Uma instância da classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
      <returns>O <see cref="T:System.Object" /> que está sendo desserializado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <summary>Retorna uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> criados com base em uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
      <param name="mappings">Uma matriz de <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <summary>Retorna uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> de mapeamentos especificados.</summary>
      <param name="mappings">Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
      <param name="type">O <see cref="T:System.Type" /> do objeto desserializado.</param>
      <returns>Uma instância da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <summary>Retorna uma matriz de objetos <see cref="T:System.Xml.Serialization.XmlSerializer" /> criados com base em uma matriz de tipos.</summary>
      <param name="types">Uma matriz de objetos de <see cref="T:System.Type" />.</param>
      <returns>Uma matriz de objetos de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <summary>Retorna o nome do assembly que contém uma ou mais versões do <see cref="T:System.Xml.Serialization.XmlSerializer" /> criado especialmente para serializar ou desserializar o tipo especificado.</summary>
      <param name="type">O <see cref="T:System.Type" /> que está sendo desserializado.</param>
      <returns>O nome do assembly que contém um <see cref="T:System.Xml.Serialization.XmlSerializer" /> para o tipo.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <summary>Retorna o nome do assembly que contém o serializador para o tipo especificado no namespace fornecido.</summary>
      <param name="type">O <see cref="T:System.Type" /> de seu interesse.</param>
      <param name="defaultNamespace">O namespace do tipo.</param>
      <returns>O nome do assembly que contém os serializadores especialmente projetados.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.Stream" /> especificado.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.Stream" /> fornecido que faz referência aos namespaces indicados.</summary>
      <param name="stream">O <see cref="T:System.IO.Stream" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado, grava o documento XML em um arquivo usando o <see cref="T:System.IO.TextWriter" /> especificado e referencia os namespaces especificados.</summary>
      <param name="textWriter">O <see cref="T:System.IO.TextWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contém namespaces para o documento XML gerado.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> especificado.</summary>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="writer">O <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> usado para gravar o documento XML.</param>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado, grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado e referencia os namespaces especificados.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O <see cref="T:System.Object" /> a ser serializado.</param>
      <param name="namespaces">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <summary>Serializa o objeto especificado, grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" /> especificado e referencia os namespaces e o estilo de codificação especificados.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O objeto a ser serializado.</param>
      <param name="namespaces">O <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> referenciado pelo objeto.</param>
      <param name="encodingStyle">O estilo de codificação do XML serializado.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro durante a serialização. A exceção original está disponível com o uso da propriedade <see cref="P:System.Exception.InnerException" />.</exception>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <summary>Serializa o <see cref="T:System.Object" /> especificado e grava o documento XML em um arquivo usando o <see cref="T:System.Xml.XmlWriter" />, namespaces XML e a codificação especificados.</summary>
      <param name="xmlWriter">O <see cref="T:System.Xml.XmlWriter" /> usado para gravar o documento XML.</param>
      <param name="o">O objeto a ser serializado.</param>
      <param name="namespaces">Uma instância do <see langword="XmlSerializerNamespaces" /> que contém namespaces e prefixos a serem usados.</param>
      <param name="encodingStyle">A codificação usada no documento.</param>
      <param name="id">Para mensagens codificadas em SOAP, a base usada para gerar atributos de ID.</param>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <summary>Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um atributo XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <summary>Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um elemento XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <summary>Ocorre quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um nó XML de tipo desconhecido durante a desserialização.</summary>
    </member>
    <member name="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <summary>Ocorre durante a desserialização de um fluxo XML codificado em SOAP, quando o <see cref="T:System.Xml.Serialization.XmlSerializer" /> encontra um tipo reconhecido que não é usado ou não está referenciado.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <summary>Aplicado a um proxy do cliente de serviço Web, permite que você especifique um assembly que contém serializadores personalizados.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> com o nome do assembly especificado.</summary>
      <param name="assemblyName">O nome simples e não criptografado do assembly.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" /> com o nome e o local do assembly especificados.</summary>
      <param name="assemblyName">O nome simples e não criptografado do assembly.</param>
      <param name="codeBase">Uma cadeia de caracteres que é o local da URL do assembly.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <summary>Obtém ou define o nome do assembly que contém os serializadores para um conjunto específico de tipos.</summary>
      <returns>O nome simples e não criptografado do assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <summary>Obtém ou define o local do assembly que contém os serializadores.</summary>
      <returns>Um local, como um caminho ou URI, que aponta para o assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerFactory">
      <summary>Cria versões tipadas do <see cref="T:System.Xml.Serialization.XmlSerializer" /> para obter uma serialização mais eficiente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerFactory" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo especificado.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <returns>Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo e o namespace especificados.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="defaultNamespace">O namespace padrão a ser usado para todos os elementos XML.</param>
      <returns>Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo especificado.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é usada para serializar o tipo especificado. Se uma propriedade ou um campo retornar uma matriz, o parâmetro <paramref name="extraTypes" /> especificará os objetos que podem ser inseridos na matriz.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <returns>Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contém campos que substituem o comportamento de serialização padrão.</param>
      <returns>Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em instâncias de documento XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que contém campos que substituem o comportamento de serialização padrão.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
      <param name="defaultNamespace">O namespace padrão de todos os elementos XML no documento XML.</param>
      <returns>Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em instâncias de documento XML e vice-versa. Cada objeto a ser serializado pode, ele mesmo, conter instâncias de classes, que essa sobrecarga pode substituir por outras classes. Essa sobrecarga também especifica o namespace padrão para todos os elementos XML e a classe a ser usada como o elemento raiz XML.</summary>
      <param name="type">O <see cref="T:System.Type" /> do objeto que este <see cref="T:System.Xml.Serialization.XmlSerializer" /> pode serializar.</param>
      <param name="overrides">Um <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> que estende ou substitui o comportamento da classe especificada no parâmetro type.</param>
      <param name="extraTypes">Uma matriz <see cref="T:System.Type" /> de tipos de objeto adicionais a serem serializados.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que define as propriedades do elemento raiz XML.</param>
      <param name="defaultNamespace">O namespace padrão de todos os elementos XML no documento XML.</param>
      <param name="location">O caminho que especifica o local dos tipos.</param>
      <returns>Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>Retorna uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que pode serializar objetos do tipo especificado em documentos XML e vice-versa. Especifica o objeto que representa o elemento raiz XML.</summary>
      <param name="type">O <see cref="T:System.Type" /> a ser serializado.</param>
      <param name="root">Um <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> que representa o elemento raiz de XML.</param>
      <returns>Uma derivação do <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <summary>Retorna uma derivação a classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que usa um objeto que mapeia um tipo para outro.</summary>
      <param name="xmlTypeMapping">Um <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> que mapeia um tipo para outro.</param>
      <returns>Uma derivação da classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> que é criada especificamente para serializar o tipo mapeado.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerImplementation">
      <summary>Define o leitor, o gravador e os métodos para serializadores tipados gerados previamente.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <summary>Obtém um valor que determina se um tipo pode ser serializado.</summary>
      <param name="type">O tipo a ser serializado.</param>
      <returns>
        <see langword="true" /> se o tipo puder ser serializado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <summary>Retorna um serializador para o tipo especificado.</summary>
      <param name="type">O tipo a ser serializado.</param>
      <returns>Uma instância de um tipo derivado da classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <summary>Obtém o objeto do leitor XML que é usado pelo serializador.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> que é usado para ler um documento XML ou fluxo de dados.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <summary>Obtém a coleção de métodos que é usada para ler um fluxo de dados.</summary>
      <returns>Um <see cref="T:System.Collections.Hashtable" /> que contém os métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <summary>Obtém a coleção de serializadores tipados encontrada no assembly.</summary>
      <returns>Um <see cref="T:System.Collections.Hashtable" /> que contém os serializadores tipados.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <summary>Obtém a coleção de métodos usada para gravar em um fluxo de dados.</summary>
      <returns>Um <see cref="T:System.Collections.Hashtable" /> que contém os métodos.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <summary>Obtém o objeto do gravador XML para o serializador.</summary>
      <returns>Um <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> que é usado para gravar em um documento ou fluxo de dados XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <summary>Significa que o código foi gerado pela infraestrutura de serialização e pode ser reutilizado para melhorar o desempenho, quando esse atributo é aplicado a um assembly.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlSerializerVersionAttribute" /> para o tipo especificado.</summary>
      <param name="type">O tipo que está sendo serializado.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <summary>Obtém ou define o namespace CLR (Common Language Runtime) do assembly.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o namespace de Common Language Runtime (CLR) do assembly.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <summary>Obtém ou define a identidade do assembly pai.</summary>
      <returns>A versão do assembly pai.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <summary>Obtém ou define o tipo no qual o serializador opera.</summary>
      <returns>O <see cref="T:System.Type" /> a ser serializado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <summary>Obtém ou define o número de versão do assembly.</summary>
      <returns>A versão do assembly.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeAttribute">
      <summary>Controla o esquema XML que é gerado quando o atributo de destino é serializado pelo <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Xml.Serialization.XmlTypeAttribute" /> e especifica o nome do tipo XML.</summary>
      <param name="typeName">O nome do tipo XML que o <see cref="T:System.Xml.Serialization.XmlSerializer" /> gera quando ele serializa a instância da classe (e reconhece quando ele desserializa a instância da classe).</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <summary>Obtém ou define um valor que determina se o tipo de esquema resultante é um tipo anônimo XSD.</summary>
      <returns>
        <see langword="true" />, se o tipo de esquema resultante for um tipo anônimo XSD; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <summary>Obtém ou define um valor que indica se deve incluir o tipo nos XML Schema Documents.</summary>
      <returns>
        <see langword="true" /> para incluir o tipo nos XML Schema Documents, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <summary>Obtém ou define o namespace do tipo XML.</summary>
      <returns>O namespace do tipo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <summary>Obtém ou define o nome do tipo XML.</summary>
      <returns>O nome do tipo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTypeMapping">
      <summary>Contém um mapeamento de um tipo para outro.</summary>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <summary>O nome de tipo totalmente qualificado que inclui o namespace (ou namespaces) e o tipo.</summary>
      <returns>O nome de tipo totalmente qualificado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <summary>Obtém o nome do tipo do objeto mapeado.</summary>
      <returns>O nome do tipo do objeto mapeado.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <summary>Obtém o nome do elemento XML do objeto mapeado.</summary>
      <returns>O nome do elemento XML do objeto mapeado. O padrão é o nome da classe do objeto.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <summary>Obtém o namespace de XML do objeto mapeado.</summary>
      <returns>O namespace XML do objeto mapeado. O padrão é uma cadeia de caracteres vazia ("").</returns>
    </member>
  </members>
</doc>