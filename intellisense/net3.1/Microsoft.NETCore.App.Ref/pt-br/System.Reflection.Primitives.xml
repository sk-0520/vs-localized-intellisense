<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.Emit.FlowControl">
      <summary>Descreve como uma instrução altera o fluxo de controle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Branch">
      <summary>Instrução Branch.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Break">
      <summary>Instrução Break.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Call">
      <summary>Instrução Call.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Cond_Branch">
      <summary>Instrução de branch condicional.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Meta">
      <summary>Fornece informações sobre uma instrução subsequente. Por exemplo, a instrução <see langword="Unaligned" /> de <see langword="Reflection.Emit.Opcodes" /> tem <see langword="FlowControl.Meta" /> e especifica que a instrução de ponteiro subsequente pode não estar alinhada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Next">
      <summary>Fluxo normal de controle.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Phi">
      <summary>Esse valor do enumerador é reservado e não deve ser usado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Return">
      <summary>Instrução Return.</summary>
    </member>
    <member name="F:System.Reflection.Emit.FlowControl.Throw">
      <summary>Instrução de geração de exceção.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCode">
      <summary>Descreve uma instrução de IL (Linguagem Intermediária).</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Object)">
      <summary>Testa se o objeto especificado é igual a este <see langword="Opcode" />.</summary>
      <param name="obj">O objeto a ser comparado a este objeto.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> for uma instância de <see langword="Opcode" /> e for igual a este objeto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)">
      <summary>Indica se a instância atual é igual ao <see cref="T:System.Reflection.Emit.OpCode" /> especificado.</summary>
      <param name="obj">O <see cref="T:System.Reflection.Emit.OpCode" /> a ser comparado com a instância atual.</param>
      <returns>
        <see langword="true" /> se o valor de <paramref name="obj" /> for igual ao valor da instância atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.FlowControl">
      <summary>As características do controle de fluxo da instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O tipo de controle de fluxo.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.GetHashCode">
      <summary>Retorna o código hash gerado para este <see langword="Opcode" />.</summary>
      <returns>O código hash para essa instância.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Name">
      <summary>O nome da instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O nome da instrução IL.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indica se duas estruturas <see cref="T:System.Reflection.Emit.OpCode" /> são iguais.</summary>
      <param name="a">O <see cref="T:System.Reflection.Emit.OpCode" /> para comparar com <paramref name="b" />.</param>
      <param name="b">O <see cref="T:System.Reflection.Emit.OpCode" /> para comparar com <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)">
      <summary>Indica se duas estruturas <see cref="T:System.Reflection.Emit.OpCode" /> não são iguais.</summary>
      <param name="a">O <see cref="T:System.Reflection.Emit.OpCode" /> para comparar com <paramref name="b" />.</param>
      <param name="b">O <see cref="T:System.Reflection.Emit.OpCode" /> para comparar com <paramref name="a" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="a" /> não for igual a <paramref name="b" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OpCodeType">
      <summary>O tipo de instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O tipo de instrução de IL (linguagem intermediária).</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.OperandType">
      <summary>O tipo de operando de uma instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O tipo de operando de uma instrução IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Size">
      <summary>O tamanho da instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O tamanho da instrução IL.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPop">
      <summary>Como a instrução de IL (linguagem intermediária) exibe a pilha.</summary>
      <returns>Somente leitura. A maneira como a instrução IL exibe a pilha.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.StackBehaviourPush">
      <summary>Como a instrução de IL (linguagem intermediária) envia o operando para a pilha.</summary>
      <returns>Somente leitura. A maneira como a instrução IL envia o operando para a pilha.</returns>
    </member>
    <member name="M:System.Reflection.Emit.OpCode.ToString">
      <summary>Retorna este <see langword="Opcode" /> como um <see cref="T:System.String" />.</summary>
      <returns>Uma cadeia de caracteres que contém o nome desse <see langword="Opcode" />.</returns>
    </member>
    <member name="P:System.Reflection.Emit.OpCode.Value">
      <summary>Obtém o valor numérico da instrução de IL (linguagem intermediária).</summary>
      <returns>Somente leitura. O valor numérico da instrução IL.</returns>
    </member>
    <member name="T:System.Reflection.Emit.OpCodes">
      <summary>Fornece representações de campo das instruções da MSIL (Microsoft intermediate language) para emissão por membros da classe <see cref="T:System.Reflection.Emit.ILGenerator" /> (como <see cref="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add">
      <summary>Adiciona dois valores e envia o resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf">
      <summary>Adiciona dois números inteiros, executa uma verificação de estouro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Add_Ovf_Un">
      <summary>Adiciona dois valores de inteiro sem sinal, executa uma verificação de estouro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.And">
      <summary>Calcula o AND bit a bit de dois valores e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Arglist">
      <summary>Retorna um ponteiro não gerenciado para a lista de argumentos do método atual.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq">
      <summary>Transfere o controle para uma instrução de destino se dois valores são iguais.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Beq_S">
      <summary>Transferirá o controle para uma instrução de destino (forma abreviada) se dois valores forem iguais.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge">
      <summary>Transferirá controle para uma instrução de destino se o primeiro valor for maior ou igual ao segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_S">
      <summary>Transferirá controle para uma instrução de destino (forma abreviada) se o primeiro valor for maior ou igual ao segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un">
      <summary>Transferirá o controle para uma instrução de destino se o primeiro valor for maior que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bge_Un_S">
      <summary>Transferirá o controle para uma instrução de destino (forma abreviada) se o primeiro valor for maior que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt">
      <summary>Transferirá controle para uma instrução de destino se o primeiro valor for maior que o segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_S">
      <summary>Transferirá controle para uma instrução de destino (forma abreviada) se o primeiro valor for maior que o segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un">
      <summary>Transferirá o controle para uma instrução de destino se o primeiro valor for maior que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bgt_Un_S">
      <summary>Transferirá o controle para uma instrução de destino (forma abreviada) se o primeiro valor for maior que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble">
      <summary>Transferirá controle para uma instrução de destino se o primeiro valor for menor ou igual ao segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_S">
      <summary>Transferirá controle para uma instrução de destino (forma abreviada) se o primeiro valor for menor ou igual ao segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un">
      <summary>Transferirá o controle para uma instrução de destino se o primeiro valor for menor ou igual ao segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ble_Un_S">
      <summary>Transferirá o controle para uma instrução de destino (forma abreviada) se o primeiro valor for menor ou igual ao segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt">
      <summary>Transferirá controle para uma instrução de destino se o primeiro valor for menor que o segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_S">
      <summary>Transferirá controle para uma instrução de destino (forma abreviada) se o primeiro valor for menor que o segundo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un">
      <summary>Transferirá o controle para uma instrução de destino se o primeiro valor for menor que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Blt_Un_S">
      <summary>Transferirá o controle para uma instrução de destino (forma abreviada) se o primeiro valor for menor que o segundo valor ao comparar valores de inteiro sem sinal ou valores float não ordenados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un">
      <summary>Transfere o controle para uma instrução de destino quando dois valores de inteiro sem sinal ou valores de float não ordenados não são iguais.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Bne_Un_S">
      <summary>Transfere o controle para uma instrução de destino (forma abreviada) quando dois valores inteiros sem sinal ou valores de float não ordenados não são iguais.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Box">
      <summary>Converte um tipo de valor em uma referência de objeto (tipo <see langword="O" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br">
      <summary>Transfere o controle 	incondicionalmente para uma instrução de destino.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Br_S">
      <summary>Transfere o controle de forma incondicional para uma instrução de destino (forma abreviada).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Break">
      <summary>Sinaliza a CLI (Common Language Infrastructure) para informar o depurador de que um ponto de interrupção foi ultrapassado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse">
      <summary>Transferirá o controle para uma instrução de destino se <paramref name="value" /> for <see langword="false" />, uma referência nula (<see langword="Nothing" /> no Visual Basic) ou zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brfalse_S">
      <summary>Transferirá o controle para uma instrução de destino se <paramref name="value" /> for <see langword="false" />, uma referência nula ou zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue">
      <summary>Transfere o controle para uma instrução de destino se <paramref name="value" /> for <see langword="true" />, não nulo ou diferente de zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Brtrue_S">
      <summary>Transfere o controle para uma instrução de destino (forma abreviada) se <paramref name="value" /> for <see langword="true" />, não nulo ou diferente de zero.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Call">
      <summary>Chama o método indicado pelo descritor de método passado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Calli">
      <summary>Chama o método indicado na pilha de avaliação (como um ponteiro para um ponto de entrada) com argumentos descritos por uma convenção de chamada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Callvirt">
      <summary>Chama um método de associação tardia em um objeto, enviando o valor retornado por push para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Castclass">
      <summary>Tenta converter um objeto passado por referência à classe especificada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ceq">
      <summary>Compara dois valores. Se eles forem iguais, o valor inteiro 1 <see langword="(int32" />) será enviado para a pilha de avaliação; caso contrário, 0 (<see langword="int32" />) será enviado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt">
      <summary>Compara dois valores. Se o primeiro valor for maior que o segundo, o valor inteiro 1 <see langword="(int32" />) será enviado para a pilha de avaliação; caso contrário, 0 (<see langword="int32" />) será enviada para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cgt_Un">
      <summary>Compara dois sem sinal ou não ordenados. Se o primeiro valor for maior que o segundo, o valor inteiro 1 <see langword="(int32" />) será enviado para a pilha de avaliação; caso contrário, 0 (<see langword="int32" />) será enviada para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ckfinite">
      <summary>Gera <see cref="T:System.ArithmeticException" /> se o valor não for um número finito.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt">
      <summary>Compara dois valores. Se o primeiro valor for menor que o segundo, o valor inteiro 1 (<see langword="(int32" />) será enviado para a pilha de avaliação; caso contrário, 0 (<see langword="int32" />) será enviada para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Clt_Un">
      <summary>Compara os valores sem sinal ou não ordenados <paramref name="value1" /> e <paramref name="value2" />. Se <paramref name="value1" /> for menor que <paramref name="value2" />, o valor de inteiro 1 (<see langword="(int32" />) será enviado para a pilha de avaliação; caso contrário, 0 (<see langword="int32" />) será enviado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Constrained">
      <summary>Restringe o tipo no qual uma chamada de método virtual é feita.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I1">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="int8" /> e então estende-o (preenche) para <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I2">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="int16" /> e então estende-o (preenche) para <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I4">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_I8">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="native int" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="native int" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="int8" /> com sinal e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I1_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="int8" /> com sinal e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="int16" /> com sinal e estendendo-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I2_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="int16" /> com sinal e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="int32" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I4_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="int32" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="int64" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_I8_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="int64" /> com sinal, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="unsigned native int" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="unsigned native int" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="unsigned int8" /> e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U1_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="unsigned int8" /> e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="unsigned int16" /> e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U2_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="unsigned int16" /> e estende-o para <see langword="int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="unsigned int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U4_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="unsigned int32" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8">
      <summary>Converte o valor com sinal no topo da pilha de avaliação em <see langword="unsigned int64" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_Ovf_U8_Un">
      <summary>Converte o valor sem sinal no topo da pilha de avaliação em <see langword="unsigned int64" />, gerando <see cref="T:System.OverflowException" /> no estouro.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R_Un">
      <summary>Converte o valor de inteiro sem sinal na parte superior da pilha de avaliação em <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R4">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="float32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_R8">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="float64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="unsigned native int" /> e estende-o para <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U1">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="unsigned int8" /> e estende-o para <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U2">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="unsigned int16" /> e estende-o para <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U4">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="unsigned int32" /> e estende-o para <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Conv_U8">
      <summary>Converte o valor na parte superior da pilha de avaliação em <see langword="unsigned int64" /> e estende-o para <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpblk">
      <summary>Copia bytes de número especificados de um endereço de origem para um endereço de destino.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Cpobj">
      <summary>Copia o tipo de valor localizado no endereço de um objeto de (tipo <see langword="&amp;" />, <see langword="" /> ou <see langword="native int" />) para o endereço do objeto de destino (tipo <see langword="&amp;" />, <see langword="" /> ou <see langword="native int" />).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div">
      <summary>Divide dois valores e efetua o push do resultado como um ponto flutuante (tipo <see langword="F" />) ou quociente (tipo <see langword="int32" />) para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Div_Un">
      <summary>Divide dois valores de inteiro sem sinal e envia o resultado (<see langword="int32" />) para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Dup">
      <summary>Copia o valor atual mais alto na pilha de avaliação e, em seguida, envia a cópia para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfilter">
      <summary>Transfere o controle da cláusula <see langword="filter" /> de uma exceção para o manipulador de exceção da CLI (Common Language Infrastructure).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Endfinally">
      <summary>Transfere o controle da cláusula <see langword="fault" /> ou <see langword="finally" /> de um bloco de exceção de volta para o manipulador de exceção da CLI (Common Language Infrastructure).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initblk">
      <summary>Inicializa um bloco de memória especificado em um endereço específico e em um tamanho e valor inicial especificados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Initobj">
      <summary>Inicializa cada campo do tipo de valor em um endereço especificado como uma referência nula ou 0 do tipo primitivo apropriado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Isinst">
      <summary>Testa se uma referência de objeto (tipo <see langword="O" />) é uma instância de uma classe específica.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Jmp">
      <summary>Sai do método atual e vai para o método especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg">
      <summary>Carrega um argumento (referenciado por um valor de índice especificado) na pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_0">
      <summary>Carrega o argumento no índice 0 na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_1">
      <summary>Carrega o argumento no índice 1 na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_2">
      <summary>Carrega o argumento no índice 2 na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_3">
      <summary>Carrega o argumento no índice 3 na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarg_S">
      <summary>Carrega o argumento (referenciado por um índice de forma curta especificado) para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga">
      <summary>Carregar um endereço de argumento para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldarga_S">
      <summary>Carregar um endereço de argumento, na forma abreviada, para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4">
      <summary>Envia por push um valor do tipo <see langword="int32" /> fornecido para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_0">
      <summary>Envia o valor inteiro de 0 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_1">
      <summary>Envia o valor inteiro 1 por push para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_2">
      <summary>Efetua o push do valor inteiro de 2 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_3">
      <summary>Efetua o push do valor inteiro de 3 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_4">
      <summary>Efetua o push do valor inteiro de 4 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_5">
      <summary>Efetua o push do valor inteiro de 5 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_6">
      <summary>Efetua o push do valor inteiro de 6 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_7">
      <summary>Efetua o push do valor inteiro de 7 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_8">
      <summary>Efetua o push do valor inteiro de 8 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_M1">
      <summary>Efetua o push do valor de inteiro de -1 para a pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I4_S">
      <summary>Envia o valor de <see langword="int8" /> fornecido para a pilha de avaliação como um <see langword="int32" />, na forma abreviada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_I8">
      <summary>Envia por push um valor do tipo <see langword="int64" /> fornecido para a pilha de avaliação como um <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R4">
      <summary>Efetua o push de um valor fornecido do tipo <see langword="float32" /> para a pilha de avaliação como tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldc_R8">
      <summary>Efetua o push de um valor fornecido do tipo <see langword="float64" /> para a pilha de avaliação como tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem">
      <summary>Carrega o elemento a um índice de matriz especificado na parte superior da pilha de avaliação como o tipo especificado na instrução.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I">
      <summary>Carrega o elemento com o tipo <see langword="native int" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="native int" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I1">
      <summary>Carrega o elemento com o tipo <see langword="int8" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I2">
      <summary>Carrega o elemento com o tipo <see langword="int16" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I4">
      <summary>Carrega o elemento com o tipo <see langword="int32" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_I8">
      <summary>Carrega o elemento com o tipo <see langword="int64" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int64" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R4">
      <summary>Carrega o elemento com o tipo <see langword="float32" /> em um índice de matriz especificado para o topo da pilha de avaliação como um tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_R8">
      <summary>Carrega o elemento com o tipo <see langword="float64" /> em um índice de matriz especificado para o topo da pilha de avaliação como um tipo <see langword="F" /> (float).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_Ref">
      <summary>Carrega o elemento que contém uma referência de objeto em um índice de matriz especificado para o topo da pilha de avaliação como tipo <see langword="O" /> (referência de objeto).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U1">
      <summary>Carrega o elemento com o tipo <see langword="unsigned int8" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U2">
      <summary>Carrega o elemento com o tipo <see langword="unsigned int16" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelem_U4">
      <summary>Carrega o elemento com o tipo <see langword="unsigned int32" /> em um índice de matriz especificado para o topo da pilha de avaliação como um <see langword="int32" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldelema">
      <summary>Carrega o endereço do elemento da matriz em um índice de matriz especificado no topo da pilha de avaliação como o tipo <see langword="&amp;" /> (ponteiro gerenciado).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldfld">
      <summary>Localiza o valor de um campo no objeto cuja referência está na pilha de avaliação no momento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldflda">
      <summary>Localiza o endereço de um campo no objeto cuja referência está na pilha de avaliação no momento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldftn">
      <summary>Envia um ponteiro não gerenciado (tipo <see langword="native int" />) para o código nativo implementando um método específico na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I">
      <summary>Carrega um valor do tipo <see langword="native int" /> como um <see langword="native int" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I1">
      <summary>Carrega um valor do tipo <see langword="int8" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I2">
      <summary>Carrega um valor do tipo <see langword="int16" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I4">
      <summary>Carrega um valor do tipo <see langword="int32" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_I8">
      <summary>Carrega um valor do tipo <see langword="int64" /> como um <see langword="int64" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R4">
      <summary>Carrega um valor do tipo <see langword="float32" /> como um tipo <see langword="F" /> (float) para a pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_R8">
      <summary>Carrega um valor do tipo <see langword="float64" /> como um tipo <see langword="F" /> (float) para a pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_Ref">
      <summary>Carrega uma referência de objeto como um tipo <see langword="O" /> (referência de objeto) para a pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U1">
      <summary>Carrega um valor do tipo <see langword="unsigned int8" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U2">
      <summary>Carrega um valor do tipo <see langword="unsigned int16" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldind_U4">
      <summary>Carrega um valor do tipo <see langword="unsigned int32" /> como um <see langword="int32" /> na pilha de avaliação indiretamente.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldlen">
      <summary>Efetua o push do número de elementos de uma matriz unidimensional de base zero para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc">
      <summary>Carrega a variável local em um índice específico na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_0">
      <summary>Carrega a variável local no índice 0 na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_1">
      <summary>Carrega a variável local no índice 1 para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_2">
      <summary>Carrega a variável local no índice 2 para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_3">
      <summary>Carrega a variável local no índice 3 para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloc_S">
      <summary>Carrega a variável local em um índice específico na pilha de avaliação, de forma abreviada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca">
      <summary>Carrega o endereço da variável local em um índice específico para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldloca_S">
      <summary>Carrega o endereço da variável local em um índice específico para a pilha de avaliação, em forma abreviada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldnull">
      <summary>Envia uma referência nula (tipo <see langword="O" />) para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldobj">
      <summary>Copia o objeto de tipo de valor apontado por um endereço na parte superior da pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsfld">
      <summary>Envia por push o valor de um campo estático para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldsflda">
      <summary>Efetua o push do endereço de um campo estático para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldstr">
      <summary>Envia por push uma nova referência de objeto para uma literal de cadeia de caracteres armazenada nos metadados.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldtoken">
      <summary>Converte um token de metadados em sua representação de tempo de execução, enviando-o por push para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ldvirtftn">
      <summary>Efetua o push de um ponteiro não gerenciado (tipo <see langword="native int" />) para o código nativo implementando um método virtual específico associado ao objeto especificado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave">
      <summary>Sai de uma região protegida de código, transferindo o controle incondicionalmente para uma instrução de destino específica.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Leave_S">
      <summary>Sai de uma região protegida de código, transferindo o controle incondicionalmente para uma instrução de destino (forma abreviada).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Localloc">
      <summary>Aloca um determinado número de bytes do pool de memória dinâmica local e envia o endereço (um ponteiro transitório, tipo <see langword="*" />) do primeiro byte alocado à pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mkrefany">
      <summary>Envia uma referência tipada a uma instância de um tipo específico para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul">
      <summary>Multiplica dois valores e efetua o push do resultado na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf">
      <summary>Multiplica dois valores inteiros, executa uma verificação de estouro e envia por push o resultado na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Mul_Ovf_Un">
      <summary>Multiplica dois valores de inteiro sem sinal, executa uma verificação de estouro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Neg">
      <summary>Nega um valor e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newarr">
      <summary>Envia por push uma referência de objeto para uma nova matriz unidimensional baseada em zero, cujos elementos são de um tipo específico na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Newobj">
      <summary>Cria um novo objeto ou uma nova instância de um tipo de valor, enviando por push uma referência de objeto (tipo <see langword="O" />) para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Nop">
      <summary>Preencherá o espaço se os opcodes forem corrigidos. Nenhuma operação significativa será executada, embora um ciclo de processamento possa ser consumido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Not">
      <summary>Calcula o complemento bit a bit do valor de inteiro na parte superior da pilha e efetua o push o resultado para a pilha de avaliação como o mesmo tipo.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Or">
      <summary>Computa o complemento bit a bit dos dois valores de inteiro na parte superior da pilha e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Pop">
      <summary>Remove o valor atualmente no topo da pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix1">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix2">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix3">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix4">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix5">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix6">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefix7">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Prefixref">
      <summary>Esta é uma instrução reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Readonly">
      <summary>Especifica que a operação de endereço da matriz subsequente não executa nenhuma verificação de tipo no tempo de execução e que ela retorna um ponteiro gerenciado cuja mutabilidade é restrita.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanytype">
      <summary>Recupera o token de tipo inserido em uma referência tipada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Refanyval">
      <summary>Recupera o endereço (tipo <see langword="&amp;" />) inserido em uma referência tipada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem">
      <summary>Divide dois valores e efetua o push do restante para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rem_Un">
      <summary>Divide dois valores sem sinal e efetua o push do restante para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Ret">
      <summary>Retorna do método atual, enviando um valor retornado (se houver) da pilha de avaliação do computador chamado para a pilha de avaliação do chamador.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Rethrow">
      <summary>Gera novamente a exceção atual.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shl">
      <summary>Desloca um valor de inteiro para a esquerda (em zeros) por um número especificado de bits, efetuando o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr">
      <summary>Desloca um valor de inteiro (no logon) para a direita em um número especificado de bits, efetuando o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Shr_Un">
      <summary>Desloca um valor inteiro sem sinal (em zeros) para a direita em um número especificado de bits, efetuando o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sizeof">
      <summary>Envia o tamanho, em bytes, de um tipo de valor fornecido para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg">
      <summary>Armazena o valor localizado no topo da pilha de avaliação no slot de argumento em um índice especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Starg_S">
      <summary>Armazena o valor localizado no topo da pilha de avaliação no slot de argumento em um índice especificado, de forma abreviada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem">
      <summary>Substitui o elemento de matriz de um índice especificado pelo valor na pilha de avaliação, cujo tipo é especificado na instrução.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="native int" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I1">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="int8" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I2">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="int16" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I4">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="int32" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_I8">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="int64" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R4">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="float32" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_R8">
      <summary>Substitui o elemento de matriz em um determinado índice pelo valor <see langword="float64" /> na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stelem_Ref">
      <summary>Substitui o elemento da matriz de um determinado índice com o valor de referência de objeto (tipo <see langword="O" />) na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stfld">
      <summary>Substitui o valor armazenado no campo de uma referência de objeto ou de um ponteiro por um novo valor.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I">
      <summary>Armazena um valor do tipo <see langword="native int" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I1">
      <summary>Armazena um valor do tipo <see langword="int8" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I2">
      <summary>Armazena um valor do tipo <see langword="int16" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I4">
      <summary>Armazena um valor do tipo <see langword="int32" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_I8">
      <summary>Armazena um valor do tipo <see langword="int64" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R4">
      <summary>Armazena um valor do tipo <see langword="float32" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_R8">
      <summary>Armazena um valor do tipo <see langword="float64" /> em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stind_Ref">
      <summary>Armazena um valor de referência de objeto em um endereço fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e a armazena em uma lista de variáveis locais em um índice especificado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_0">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e armazena em uma lista de variáveis local no índice 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_1">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e armazena em uma lista de variáveis local no índice 1.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_2">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e armazena-o em uma lista de variáveis local no índice 2.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_3">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e armazena-o em uma lista de variáveis local no índice 3.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stloc_S">
      <summary>Exibe o valor atual da parte superior da pilha de avaliação e o armazena em uma lista de variáveis locais em <paramref name="index" /> (forma abreviada).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stobj">
      <summary>Copia um valor do tipo especificado da pilha de avaliação para um endereço de memória fornecido.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Stsfld">
      <summary>Substitui o valor de um campo estático por um valor da pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub">
      <summary>Subtrai um valor de outro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf">
      <summary>Subtrai um valor de inteiro de outro, executa uma verificação de estouro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Sub_Ovf_Un">
      <summary>Subtrai um valor de inteiro sem sinal de outro, executa uma verificação de estouro e efetua o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Switch">
      <summary>Implementa uma tabela de atalhos.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Tailcall">
      <summary>Executa uma instrução de chamada de método pós-fixada, de modo que o registro de ativação do método atual é removido antes da execução da instrução de chamada real.</summary>
    </member>
    <member name="M:System.Reflection.Emit.OpCodes.TakesSingleByteArgument(System.Reflection.Emit.OpCode)">
      <summary>Retornará true ou false se o código de operação fornecido tiver um argumento de byte único.</summary>
      <param name="inst">Uma instância de um objeto Opcode.</param>
      <returns>
        <see langword="true" /> ou <see langword="false" />.</returns>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Throw">
      <summary>Gera o objeto de exceção atualmente na pilha de avaliação.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unaligned">
      <summary>Indica que um endereço atualmente sobre a pilha de avaliação pode não estar alinhado ao tamanho natural da instrução imediatamente após <see langword="ldind" />, <see langword="stind" />, <see langword="ldfld" />, <see langword="stfld" />, <see langword="ldobj" />, <see langword="stobj" />, <see langword="initblk" /> ou <see langword="cpblk" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox">
      <summary>Converte a representação demarcada de um tipo de valor em sua forma não marcada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Unbox_Any">
      <summary>Converte a representação demarcada de um tipo especificado na instrução em sua forma não demarcada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Volatile">
      <summary>Especifica que um endereço atualmente sobre a pilha de avaliação pode ser volátil e os resultados da leitura daquele local não podem ser armazenados em cache ou não é possível suprimir vários repositórios para esse local.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodes.Xor">
      <summary>Calcula o XOR bit a bit dos dois valores superiores na pilha de avaliação, efetuando o push do resultado para a pilha de avaliação.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OpCodeType">
      <summary>Descreve os tipos das instruções da MSIL (Microsoft intermediate language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Annotation">
      <summary>Esse valor do enumerador é reservado e não deve ser usado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Macro">
      <summary>Essas são instruções MSIL (linguagem intermediária da Microsoft) que são usadas como um sinônimo para outras instruções MSIL. Por exemplo, <see langword="ldarg.0" /> representa a instrução <see langword="ldarg" /> com um argumento de 0.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Nternal">
      <summary>Descreve uma instrução MSIL (linguagem intermediária da Microsoft) reservada.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Objmodel">
      <summary>Descreve uma instrução MSIL (linguagem intermediária da Microsoft) que se aplica aos objetos.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Prefix">
      <summary>Descreve uma instrução de prefixo que modifica o comportamento da instrução seguinte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OpCodeType.Primitive">
      <summary>Descreve uma instrução interna.</summary>
    </member>
    <member name="T:System.Reflection.Emit.OperandType">
      <summary>Descreve o tipo de operando da instrução da MSIL (Microsoft intermediate language).</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineBrTarget">
      <summary>O operando é um destino de ramificação de inteiro de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineField">
      <summary>O operando é um token de metadados de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI">
      <summary>O operando é um inteiro de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineI8">
      <summary>O operando é um inteiro de 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineMethod">
      <summary>O operando é um token de metadados de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineNone">
      <summary>Nenhum operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlinePhi">
      <summary>O operando é reservado e não deve ser usado.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineR">
      <summary>O operando é um número de ponto flutuante IEEE de 64 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSig">
      <summary>O operando é um token de assinatura de metadados de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineString">
      <summary>O operando é um token de cadeia de caracteres de metadados de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineSwitch">
      <summary>O operando é o argumento de inteiro de 32 bits para uma instrução de mudar.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineTok">
      <summary>O operando é um token <see langword="FieldRef" />, <see langword="MethodRef" /> ou <see langword="TypeRef" />.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineType">
      <summary>O operando é um token de metadados de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.InlineVar">
      <summary>O operando é um inteiro de 16 bits que contém o ordinal de uma variável local ou um argumento.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineBrTarget">
      <summary>O operando é um destino de ramificação de inteiro de 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineI">
      <summary>O operando é um inteiro de 8 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineR">
      <summary>O operando é um número de ponto flutuante IEEE de 32 bits.</summary>
    </member>
    <member name="F:System.Reflection.Emit.OperandType.ShortInlineVar">
      <summary>O operando é um inteiro de 8 bits que contém o ordinal de uma variável local ou um argumento.</summary>
    </member>
    <member name="T:System.Reflection.Emit.PackingSize">
      <summary>Especifica um dos dois fatores que determinam o alinhamento de memória dos campos quando um tipo passa por marshaling.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size1">
      <summary>O tamanho do empacotamento é de 1 byte.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size128">
      <summary>O tamanho do empacotamento é de 128 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size16">
      <summary>O tamanho do empacotamento é de 16 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size2">
      <summary>O tamanho do empacotamento é de 2 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size32">
      <summary>O tamanho do empacotamento é de 32 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size4">
      <summary>O tamanho do empacotamento é de 4 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size64">
      <summary>O tamanho do empacotamento é de 64 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Size8">
      <summary>O tamanho do empacotamento é de 8 bytes.</summary>
    </member>
    <member name="F:System.Reflection.Emit.PackingSize.Unspecified">
      <summary>O tamanho de embalagem não está especificado.</summary>
    </member>
    <member name="T:System.Reflection.Emit.StackBehaviour">
      <summary>Descreve como os valores são enviados por push para uma pilha ou retirados de uma pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop0">
      <summary>Nenhum valor é retirado da pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1">
      <summary>Retira um valor da pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pop1_pop1">
      <summary>Retira um valor da pilha para o primeiro operando e um valor da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi">
      <summary>Retira um inteiro de 32 bits da pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_pop1">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando e um valor da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando e um inteiro de 32 bits da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi_popi">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando, um inteiro de 32 bits da pilha para o segundo operando e um inteiro de 32 bits da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popi8">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando e um inteiro de 64 bits da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr4">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando e um ponto flutuante de 32 bits da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popi_popr8">
      <summary>Retira um inteiro de 32 bits da pilha para o primeiro operando e um ponto flutuante de 64 bits da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref">
      <summary>Retira uma referência da pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_pop1">
      <summary>Retira uma referência da pilha para o primeiro operando e um valor da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi">
      <summary>Retira uma referência da pilha para o primeiro operando e um inteiro de 32 bits da pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_pop1">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e um inteiro de 32 bits da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e um valor da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popi8">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e um inteiro de 64 bits da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr4">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e um inteiro de 32 bits da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popr8">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e um ponto flutuante de 64 bits da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Popref_popi_popref">
      <summary>Retira uma referência da pilha para o primeiro operando, um valor da pilha para o segundo operando e uma referência da pilha para o terceiro operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push0">
      <summary>Nenhum valor é enviado por push para a pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1">
      <summary>Envia um valor por push à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Push1_push1">
      <summary>Envia um valor por push à pilha para o primeiro operando e um valor para a pilha para o segundo operando.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi">
      <summary>Envia por push um inteiro de 32 bits à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushi8">
      <summary>Envia por push um inteiro de 64 bits à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr4">
      <summary>Envia por push um ponto flutuante de 32 bits à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushr8">
      <summary>Envia por push um ponto flutuante de 64 bits à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Pushref">
      <summary>Envia por push uma referência à pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpop">
      <summary>Retira uma variável da pilha.</summary>
    </member>
    <member name="F:System.Reflection.Emit.StackBehaviour.Varpush">
      <summary>Envia por push uma variável à pilha.</summary>
    </member>
  </members>
</doc>