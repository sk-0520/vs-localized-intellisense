<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Extensions</name>
  </assembly>
  <members>
    <member name="T:System.AppDomain">
      <summary>Representa um domínio de aplicativo, que é um ambiente isolado em que os aplicativos são executados. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.AppDomain.AppendPrivatePath(System.String)">
      <summary>Anexa o nome do diretório especificado à lista de caminhos privado.</summary>
      <param name="path">O nome do diretório a ser anexo ao caminho privado.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.ApplyPolicy(System.String)">
      <summary>Retorna o nome de exibição do assembly depois de a política ser aplicada.</summary>
      <param name="assemblyName">O nome de exibição do assembly no formato fornecido pela propriedade <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>Uma cadeia de caracteres que contém o nome de exibição do assembly depois de a política ser aplicada.</returns>
    </member>
    <member name="E:System.AppDomain.AssemblyLoad">
      <summary>Ocorre quando um assembly é carregado.</summary>
    </member>
    <member name="E:System.AppDomain.AssemblyResolve">
      <summary>Ocorre quando a resolução de um assembly falha.</summary>
    </member>
    <member name="P:System.AppDomain.BaseDirectory">
      <summary>Obtém o diretório base usado pelo resolvedor de assembly para investigar assemblies.</summary>
      <returns>O diretório base usado pelo resolvedor de assembly para investigar assemblies.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.ClearPrivatePath">
      <summary>Redefine o caminho que especifica o local dos assemblies privados para a cadeia de caracteres vazia ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.ClearShadowCopyPath">
      <summary>Redefine a lista de diretórios que contêm assemblies de cópia de sombra para a cadeia de caracteres vazia ("").</summary>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.CreateDomain(System.String)">
      <summary>Cria um novo domínio de aplicativo com o nome especificado.</summary>
      <param name="friendlyName">O nome amigável do domínio.</param>
      <returns>O domínio de aplicativo recém-criado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="friendlyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">O método não é compatível com o .NET Core.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String)">
      <summary>Cria uma nova instância do tipo especificado definido no assembly especificado.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <returns>Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado definido no assembly especificado. Os parâmetros especificam um associador, sinalizadores de associação, argumentos de construtor, informações específicas da cultura usadas para interpretar argumentos e atributos de ativação opcionais.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</param>
      <param name="bindingAttr">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa do construtor <paramref name="typeName" />. Caso <paramref name="bindingAttr" /> seja zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos é realizada.</param>
      <param name="binder">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> usando reflexão. Caso <paramref name="binder" /> seja nulo, o associador padrão é usado.</param>
      <param name="args">Os argumentos a serem passados para o construtor. Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado. Caso haja preferência pelo construtor sem parâmetros, <paramref name="args" /> precisará ser uma matriz vazia ou nulo.</param>
      <param name="culture">Informações específicas de cultura que controlam a coerção de <paramref name="args" /> para os tipos formais declarados do construtor <paramref name="typeName" />. Caso <paramref name="culture" /> seja <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> para o thread atual é usado.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação do cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
<paramref name="assemblyName" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor correspondente foi encontrado.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstance(System.String,System.String,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado definido no assembly especificado. Um parâmetro especifica uma matriz de atributos de ativação.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação pelo cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Um objeto que é um wrapper para a nova instância especificada por <paramref name="typeName" />. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)">
      <summary>Cria uma nova instância do tipo especificado. Parâmetros especificam o assembly no qual o tipo é definido e o nome do tipo.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <returns>Uma instância do objeto especificado por <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Cria uma nova instância do tipo indicado definido no assembly especificado, determinando se a diferenciação entre maiúsculas e minúsculas é ignorada no nome do tipo; os atributos de associação e o associador que são usados para selecionar o tipo a ser criado; os argumentos do construtor; a cultura; e os atributos de ativação.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</param>
      <param name="bindingAttr">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa do construtor <paramref name="typeName" />. Caso <paramref name="bindingAttr" /> seja zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos é realizada.</param>
      <param name="binder">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> usando reflexão. Caso <paramref name="binder" /> seja nulo, o associador padrão é usado.</param>
      <param name="args">Os argumentos a serem passados para o construtor. Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado. Caso haja preferência pelo construtor sem parâmetros, <paramref name="args" /> precisará ser uma matriz vazia ou nulo.</param>
      <param name="culture">Um objeto específico da cultura usado para controlar a coerção de tipos. Caso <paramref name="culture" /> seja <see langword="null" />, <see langword="CultureInfo" /> para o thread atual é usado.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />. que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação do cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Uma instância do objeto especificado por <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor correspondente foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
<paramref name="assemblyName" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado. Parâmetros especificam o assembly no qual o tipo, o nome do tipo e uma matriz de atributos de ativação são definidos.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação pelo cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Uma instância do objeto especificado por <paramref name="typeName" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> ou <paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typename" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão para chamar esse construtor.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String)">
      <summary>Cria uma nova instância do tipo especificado definido no arquivo de assembly especificado.</summary>
      <param name="assemblyFile">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado. O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <returns>Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.
-ou-
<paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.MissingMethodException">Não foi encontrado nenhum construtor público sem parâmetros.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyFile" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado definido no arquivo de assembly especificado.</summary>
      <param name="assemblyFile">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado. O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</param>
      <param name="bindingAttr">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa do construtor <paramref name="typeName" />. Caso <paramref name="bindingAttr" /> seja zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos é realizada.</param>
      <param name="binder">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> por meio da reflexão. Caso <paramref name="binder" /> seja nulo, o associador padrão é usado.</param>
      <param name="args">Os argumentos a serem passados para o construtor. Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado. Caso haja preferência pelo construtor sem parâmetros, <paramref name="args" /> precisará ser uma matriz vazia ou nulo.</param>
      <param name="culture">Informações específicas de cultura que controlam a coerção de <paramref name="args" /> para os tipos formais declarados do construtor <paramref name="typeName" />. Caso <paramref name="culture" /> seja <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> para o thread atual é usado.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação do cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.
-ou-
<paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
<paramref name="assemblyFile" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado definido no arquivo de assembly especificado.</summary>
      <param name="assemblyFile">O nome, inclusive o caminho, de um arquivo que contém um assembly que define o tipo solicitado. O assembly é carregado usando o método <see cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação pelo cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>Um objeto que é um wrapper para a nova instância ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado. O valor de retorno precisa ser desencapsulado para acessar o objeto real.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyFile" />.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyFile" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.NullReferenceException">Esta instância é <see langword="null" />.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)">
      <summary>Cria uma nova instância do tipo especificado definido no arquivo de assembly especificado.</summary>
      <param name="assemblyName">O nome de arquivo e o caminho do assembly que define o tipo solicitado.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <returns>O objeto solicitado ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> é <see langword="null" />.
-ou-
<paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Não foi encontrado nenhum construtor público sem parâmetros.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
      <summary>Cria uma nova instância do tipo indicado definido no arquivo do assembly especificado, determinando se a diferenciação entre maiúsculas e minúsculas é ignorada no nome do tipo; os atributos de associação e o associador que são usados para selecionar o tipo a ser criado; os argumentos do construtor; a cultura; e os atributos de ativação.</summary>
      <param name="assemblyFile">O nome de arquivo e o caminho do assembly que define o tipo solicitado.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly, como retornado pela propriedade <see cref="P:System.Type.FullName" />.</param>
      <param name="ignoreCase">Um valor booliano especificando se é necessário executar uma pesquisa que diferencie maiúsculas de minúsculas ou não.</param>
      <param name="bindingAttr">Uma combinação de zero ou mais sinalizadores de bit que afetam a pesquisa do construtor <paramref name="typeName" />. Caso <paramref name="bindingAttr" /> seja zero, uma pesquisa que diferencia maiúsculas de minúsculas para construtores públicos é realizada.</param>
      <param name="binder">Um objeto que permite a associação, a coerção de tipos de argumento, a invocação de membros e a recuperação de objetos <see cref="T:System.Reflection.MemberInfo" /> por meio da reflexão. Caso <paramref name="binder" /> seja nulo, o associador padrão é usado.</param>
      <param name="args">Os argumentos a serem passados para o construtor. Esta matriz de argumentos deve corresponder em número, ordem e digitar os parâmetros do construtor a ser invocado. Caso haja preferência pelo construtor sem parâmetros, <paramref name="args" /> precisará ser uma matriz vazia ou nulo.</param>
      <param name="culture">Informações específicas de cultura que controlam a coerção de <paramref name="args" /> para os tipos formais declarados do construtor <paramref name="typeName" />. Caso <paramref name="culture" /> seja <see langword="null" />, <see cref="T:System.Globalization.CultureInfo" /> para o thread atual é usado.</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação do cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>O objeto solicitado ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> é <see langword="null" />.
-ou-
<paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Nenhum construtor público correspondente foi encontrado.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
<paramref name="assemblyName" /> foi compilado com uma versão posterior do Common Language Runtime que a versão carregada atualmente.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])">
      <summary>Cria uma nova instância do tipo especificado definido no arquivo de assembly especificado.</summary>
      <param name="assemblyName">O nome de arquivo e o caminho do assembly que define o tipo solicitado.</param>
      <param name="typeName">O nome totalmente qualificado do tipo solicitado, inclusive o namespace, mas não o assembly (consulte a propriedade <see cref="P:System.Type.FullName" />).</param>
      <param name="activationAttributes">Uma matriz de um ou mais atributos que podem participar da ativação. Normalmente, uma matriz que contém um único objeto <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> que especifica a URL necessária para ativar um objeto remoto.
Esse parâmetro está relacionado a objetos ativados pelo cliente. A ativação pelo cliente é uma tecnologia herdada, mantida para compatibilidade com versões anteriores, mas não é recomendada para novos desenvolvimentos. Em vez disso, os aplicativos distribuídos devem usar o Windows Communication Foundation.</param>
      <returns>O objeto solicitado ou <see langword="null" /> caso <paramref name="typeName" /> não seja encontrado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> é <see langword="null" />.
-ou-
<paramref name="typeName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O chamador não pode fornecer atributos de ativação para um objeto que não seja herdado de <see cref="T:System.MarshalByRefObject" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.TypeLoadException">
        <paramref name="typeName" /> não foi encontrado em <paramref name="assemblyName" />.</exception>
      <exception cref="T:System.MissingMethodException">Não foi encontrado nenhum construtor público sem parâmetros.</exception>
      <exception cref="T:System.MethodAccessException">O chamador não tem permissão suficiente para chamar esse construtor.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="P:System.AppDomain.CurrentDomain">
      <summary>Obtém o domínio de aplicativo atual do <see cref="T:System.Threading.Thread" /> atual.</summary>
      <returns>O domínio do aplicativo atual.</returns>
    </member>
    <member name="E:System.AppDomain.DomainUnload">
      <summary>Ocorre quando um <see cref="T:System.AppDomain" /> está prestes a ser descarregado.</summary>
    </member>
    <member name="P:System.AppDomain.DynamicDirectory">
      <summary>Obtém o diretório que usa o resolvedor de assembly para sondar assemblies criados dinamicamente.</summary>
      <returns>O diretório que usa o resolvedor de assembly para sondar assemblies criados dinamicamente.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String)">
      <summary>Executa o assembly contido no arquivo especificado.</summary>
      <param name="assemblyFile">O nome do arquivo que contém o assembly a ser executado.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyFile" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[])">
      <summary>Executa o assembly contido no arquivo especificado usando argumentos especificados.</summary>
      <param name="assemblyFile">O nome do arquivo que contém o assembly a ser executado.</param>
      <param name="args">Os argumentos para o ponto de entrada do assembly.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
<paramref name="assemblyFile" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
      <summary>Executa o assembly contido no arquivo especificado usando os argumentos, o valor de hash e o algoritmo de hash especificados.</summary>
      <param name="assemblyFile">O nome do arquivo que contém o assembly a ser executado.</param>
      <param name="args">Os argumentos para o ponto de entrada do assembly.</param>
      <param name="hashValue">Representa o valor do código hash computado.</param>
      <param name="hashAlgorithm">Representa o algoritmo de hash usado pelo manifesto do assembly.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.
-ou-
<paramref name="assemblyFile" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])">
      <summary>Executa o assembly dado um <see cref="T:System.Reflection.AssemblyName" /> usando os argumentos especificados.</summary>
      <param name="assemblyName">Um objeto <see cref="T:System.Reflection.AssemblyName" /> que representa o nome do assembly.</param>
      <param name="args">Argumentos de linha de comando a serem passados durante o início do processo.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.IO.FileNotFoundException">O assembly especificado por <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.IO.FileLoadException">O assembly especificado por <paramref name="assemblyName" /> foi encontrado, mas não foi possível carregá-lo.</exception>
      <exception cref="T:System.BadImageFormatException">O assembly especificado por <paramref name="assemblyName" /> não é um assembly válido.
-ou-
<paramref name="assemblyName" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String)">
      <summary>Executa um assembly dado seu nome de exibição.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O assembly especificado por <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">O assembly especificado por <paramref name="assemblyName" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyName" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">O assembly especificado por <paramref name="assemblyName" /> foi encontrado, mas não foi possível carregá-lo.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="M:System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])">
      <summary>Executa o assembly dado seu nome de exibição usando os argumentos especificados.</summary>
      <param name="assemblyName">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <param name="args">Argumentos de linha de comando a serem passados durante o início do processo.</param>
      <returns>O valor retornado pelo ponto de entrada do assembly.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyName" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O assembly especificado por <paramref name="assemblyName" /> não foi encontrado.</exception>
      <exception cref="T:System.IO.FileLoadException">O assembly especificado por <paramref name="assemblyName" /> foi encontrado, mas não foi possível carregá-lo.</exception>
      <exception cref="T:System.BadImageFormatException">O assembly especificado por <paramref name="assemblyName" /> não é um assembly válido.
-ou-
<paramref name="assemblyName" /> foi compilado com uma versão posterior do Common Language Runtime do que a versão carregada atualmente.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.MissingMethodException">O assembly especificado não tem ponto de entrada.</exception>
    </member>
    <member name="E:System.AppDomain.FirstChanceException">
      <summary>Ocorre quando uma exceção é lançada no código gerenciado, antes que o tempo de execução procure na pilha de chamadas um manipulador de exceção no domínio do aplicativo.</summary>
    </member>
    <member name="P:System.AppDomain.FriendlyName">
      <summary>Obtém o nome amigável desse domínio do aplicativo.</summary>
      <returns>O nome amigável desse domínio do aplicativo.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.GetAssemblies">
      <summary>Obtém os assemblies que foram carregados no contexto de execução desse domínio de aplicativo.</summary>
      <returns>Uma matriz de assemblies nesse domínio do aplicativo.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.GetCurrentThreadId">
      <summary>Obtém o identificador atual de thread.</summary>
      <returns>Um inteiro com sinal de 32 bits que é o identificador do thread atual.</returns>
    </member>
    <member name="M:System.AppDomain.GetData(System.String)">
      <summary>Obtém o valor armazenado no domínio atual do aplicativo para o nome especificado.</summary>
      <param name="name">O nome de uma propriedade de domínio de aplicativo predefinida ou o nome de uma propriedade de domínio de aplicativo que você definiu.</param>
      <returns>O valor da propriedade <paramref name="name" /> ou <see langword="null" /> se a propriedade não existir.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="P:System.AppDomain.Id">
      <summary>Obtém um inteiro que identifica exclusivamente o domínio de aplicativo dentro do processo.</summary>
      <returns>Um inteiro que identifica o domínio do aplicativo.</returns>
    </member>
    <member name="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)">
      <summary>Obtém um valor booliano anulável que indica se alguma a de compatibilidade está definida e, caso esteja, se a opção de compatibilidade especificada está definida.</summary>
      <param name="value">A opção de compatibilidade a testar.</param>
      <returns>Uma referência nula (<see langword="Nothing" /> no Visual Basic) se nenhuma opção de compatibilidade estiver definida; caso contrário, um valor booliano que indica se a opção de compatibilidade especificada por <paramref name="value" /> está definida.</returns>
    </member>
    <member name="M:System.AppDomain.IsDefaultAppDomain">
      <summary>Retorna um valor que indica se o domínio de aplicativo é o domínio de aplicativo padrão para o processo.</summary>
      <returns>
        <see langword="true" /> caso o objeto <see cref="T:System.AppDomain" /> atual represente o domínio de aplicativo padrão para o processo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.IsFinalizingForUnload">
      <summary>Indica se esse domínio de aplicativo está descarregando e os objetos que ele contém estão sendo finalizados pelo Common Language Runtime.</summary>
      <returns>
        <see langword="true" /> se esse domínio de aplicativo estiver descarregando e o Common Language Runtime tiver começado a chamar finalizadores; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsFullyTrusted">
      <summary>Obtém um valor que indica se os assemblies carregados no domínio de aplicativo atual são executados com confiança total.</summary>
      <returns>
        <see langword="true" /> se os assemblies carregados no domínio de aplicativo atual forem executados com confiança total; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.AppDomain.IsHomogenous">
      <summary>Obtém um valor que indica se o domínio de aplicativo atual tem um conjunto de permissões concedido a todos os assemblies que são carregados no domínio do aplicativo.</summary>
      <returns>
        <see langword="true" /> se o domínio de aplicativo atual tiver um conjunto de permissões homogêneo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[])">
      <summary>Carrega o <see cref="T:System.Reflection.Assembly" /> com uma imagem baseada em formato COFF, contendo um <see cref="T:System.Reflection.Assembly" /> emitido.</summary>
      <param name="rawAssembly">Uma matriz do tipo <see langword="byte" /> que é uma imagem baseada em COFF contendo um assembly emitido.</param>
      <returns>O assembly carregado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> é <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="rawAssembly" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Byte[],System.Byte[])">
      <summary>Carrega o <see cref="T:System.Reflection.Assembly" /> com uma imagem baseada em formato COFF, contendo um <see cref="T:System.Reflection.Assembly" /> emitido. Os bytes brutos que representam os símbolos para o <see cref="T:System.Reflection.Assembly" /> também são carregados.</summary>
      <param name="rawAssembly">Uma matriz do tipo <see langword="byte" /> que é uma imagem baseada em COFF contendo um assembly emitido.</param>
      <param name="rawSymbolStore">Uma matriz do tipo <see langword="byte" /> contendo os bytes brutos que representam os símbolos para o assembly.</param>
      <returns>O assembly carregado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rawAssembly" /> é <see langword="null" />.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="rawAssembly" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="rawAssembly" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.Reflection.AssemblyName)">
      <summary>Carrega um <see cref="T:System.Reflection.Assembly" /> dado seu <see cref="T:System.Reflection.AssemblyName" />.</summary>
      <param name="assemblyRef">O objeto que descreve o assembly a ser carregado.</param>
      <returns>O assembly carregado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyRef" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyRef" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyRef" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyRef" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="M:System.AppDomain.Load(System.String)">
      <summary>Carrega um <see cref="T:System.Reflection.Assembly" /> de acordo com seu nome de exibição.</summary>
      <param name="assemblyString">O nome para exibição do assembly. Consulte <see cref="P:System.Reflection.Assembly.FullName" />.</param>
      <returns>O assembly carregado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyString" /> é <see langword="null" /></exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyString" /> não foi encontrado.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyString" /> não é um assembly válido.
-ou-
A versão 2,0 ou posterior do Common Language Runtime está carregada e <paramref name="assemblyString" /> foi compilada com uma versão posterior.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
      <exception cref="T:System.IO.FileLoadException">Um assembly ou módulo foi carregado duas vezes em com duas evidências diferentes.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringIsEnabled">
      <summary>Obtém ou define um valor que indica se o monitoramento de CPU e memória de domínios de aplicativo está habilitado para o processo atual. Depois que o monitoramento é habilitado para um processo, ele não pode ser desabilitado.</summary>
      <returns>
        <see langword="true" /> se o monitoramento está habilitado; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">O processo atual tentou atribuir o valor <see langword="false" /> a esta propriedade.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedMemorySize">
      <summary>Obtém o número de bytes que sobreviveram à última coleta e que são conhecidos por serem referenciados pelo domínio do aplicativo atual.</summary>
      <returns>O número de bytes sobreviventes.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see langword="static" /> (<see langword="Shared" /> no Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> é definida como <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringSurvivedProcessMemorySize">
      <summary>Obtém o total de bytes que sobreviveram da última coleção para todos os domínios de aplicativo no processo.</summary>
      <returns>O número total de bytes sobreviventes para o processo.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see langword="static" /> (<see langword="Shared" /> no Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> é definida como <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalAllocatedMemorySize">
      <summary>Obtém o tamanho total, em bytes, de todas as alocações de memória que foram feitas pelo domínio do aplicativo desde que ele foi criado, sem subtrair a memória que foi coletada.</summary>
      <returns>O tamanho total de todas as alocações de memória.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see langword="static" /> (<see langword="Shared" /> no Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> é definida como <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.MonitoringTotalProcessorTime">
      <summary>Obtém o tempo total do processador usado por todos os threads durante a execução no domínio do aplicativo atual, desde o início do processo.</summary>
      <returns>Tempo total do processador para o domínio do aplicativo atual.</returns>
      <exception cref="T:System.InvalidOperationException">A propriedade <see langword="static" /> (<see langword="Shared" /> no Visual Basic) <see cref="P:System.AppDomain.MonitoringIsEnabled" /> é definida como <see langword="false" />.</exception>
    </member>
    <member name="P:System.AppDomain.PermissionSet">
      <summary>Obtém o conjunto de permissões de um domínio de aplicativo em área restrita.</summary>
      <returns>O conjunto de permissões de um domínio de aplicativo em área restrita.</returns>
    </member>
    <member name="E:System.AppDomain.ProcessExit">
      <summary>Ocorre quando o processo pai do domínio de aplicativo padrão é encerrado.</summary>
    </member>
    <member name="E:System.AppDomain.ReflectionOnlyAssemblyResolve">
      <summary>Ocorre quando a resolução de um assembly falha no contexto somente para reflexão.</summary>
    </member>
    <member name="M:System.AppDomain.ReflectionOnlyGetAssemblies">
      <summary>Retorna os assemblies que foram carregados no contexto somente de reflexão do domínio do aplicativo.</summary>
      <returns>Uma matriz de objetos <see cref="T:System.Reflection.Assembly" /> que representam os assemblies carregados no contexto de somente reflexão do domínio do aplicativo.</returns>
      <exception cref="T:System.AppDomainUnloadedException">É feita uma tentativa de realizar uma operação em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="P:System.AppDomain.RelativeSearchPath">
      <summary>Obtém o caminho no diretório base em que o resolvedor do assembly deve investigar assemblies particulares.</summary>
      <returns>O caminho no diretório base em que o resolvedor do assembly deve investigar assemblies particulares.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="E:System.AppDomain.ResourceResolve">
      <summary>Ocorre quando a resolução de um recurso falha devido ao recurso não ser um recurso vinculado ou inserido válido no assembly.</summary>
    </member>
    <member name="M:System.AppDomain.SetCachePath(System.String)">
      <summary>Estabelece o caminho de diretório especificado como o local em que é feita cópia de sombra dos assemblies.</summary>
      <param name="path">O caminho totalmente qualificado para o local da cópia de sombra.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetData(System.String,System.Object)">
      <summary>Atribui o valor especificado para a propriedade de domínio do aplicativo especificado.</summary>
      <param name="name">O nome de uma propriedade de domínio de aplicativo definida pelo usuário a ser criada ou alterada.</param>
      <param name="data">O valor da propriedade.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetDynamicBase(System.String)">
      <summary>Estabelece o caminho de diretório especificado como o diretório base para subdiretórios em que os arquivos gerados dinamicamente são armazenados e acessados.</summary>
      <param name="path">O caminho totalmente qualificado que é o diretório base para subdiretórios em que assemblies dinâmicos são armazenados.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)">
      <summary>Especifica como objetos de identidade e de entidade de segurança devem ser anexados a um thread se a thread tenta se associar a uma entidade de segurança durante a execução nesse domínio do aplicativo.</summary>
      <param name="policy">Um dos valores <see cref="T:System.Security.Principal.PrincipalPolicy" /> que especifica o tipo do objeto de entidade de segurança a ser anexado aos threads.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyFiles">
      <summary>Ativa a cópia de sombra.</summary>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetShadowCopyPath(System.String)">
      <summary>Estabelece o caminho de diretório especificado como o lugar para o qual é feita cópia de sombra dos assemblies.</summary>
      <param name="path">Uma lista de nomes de diretórios, em que cada nome é separado por ponto e vírgula.</param>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)">
      <summary>Define o objeto de entidade de segurança padrão a ser anexado aos threads se eles tentam se associar a uma entidade de segurança durante a execução nesse domínio de aplicativo.</summary>
      <param name="principal">O objeto de entidade de segurança a ser anexado aos threads.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="principal" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">A entidade de segurança do thread já foi definida.</exception>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="P:System.AppDomain.SetupInformation">
      <summary>Obtém as informações de configuração do domínio do aplicativo para essa instância.</summary>
      <returns>As informações de inicialização do domínio do aplicativo.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="P:System.AppDomain.ShadowCopyFiles">
      <summary>Obtém uma indicação se o domínio do aplicativo é configurado para arquivos de cópia de sombra.</summary>
      <returns>
        <see langword="true" /> se o domínio do aplicativo for configurado para arquivos de cópia de sombra; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.AppDomainUnloadedException">A operação é tentada em um domínio de aplicativo descarregado.</exception>
    </member>
    <member name="M:System.AppDomain.ToString">
      <summary>Obtém uma representação de cadeia de caracteres que inclui o nome amigável do domínio do aplicativo e as políticas de contexto.</summary>
      <returns>Uma cadeia de caracteres é formada pela concatenação da cadeia de caracteres literal “Nome:”, o nome amigável do domínio do aplicativo e as representações de cadeia de caracteres das políticas de contexto ou a cadeia de caracteres “Não há políticas sem contexto”.</returns>
      <exception cref="T:System.AppDomainUnloadedException">O domínio de aplicativo representado pelo <see cref="T:System.AppDomain" /> atual foi descarregado.</exception>
    </member>
    <member name="E:System.AppDomain.TypeResolve">
      <summary>Ocorre quando a resolução de um tipo falha.</summary>
    </member>
    <member name="E:System.AppDomain.UnhandledException">
      <summary>Ocorre quando uma exceção não é capturada.</summary>
    </member>
    <member name="M:System.AppDomain.Unload(System.AppDomain)">
      <summary>Descarrega o domínio de aplicativo especificado.</summary>
      <param name="domain">Um domínio de aplicativo a ser descarregado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="domain" /> é <see langword="null" />.</exception>
      <exception cref="T:System.CannotUnloadAppDomainException">Não foi possível descarregar <paramref name="domain" />.</exception>
      <exception cref="T:System.Exception">Ocorreu um erro durante o processo de descarregamento.</exception>
    </member>
    <member name="T:System.AppDomainSetup">
      <summary>Representa as informações de associação de assembly que podem ser adicionadas a uma instância de <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="P:System.AppDomainSetup.ApplicationBase">
      <summary>Obtém ou define o nome do diretório que contém o aplicativo.</summary>
      <returns>O nome do diretório base do aplicativo.</returns>
    </member>
    <member name="P:System.AppDomainSetup.TargetFrameworkName">
      <summary>Obtém ou define uma cadeia de caracteres que especifica a versão de destino e o perfil do .NET Framework para o domínio do aplicativo, em um formato que pode ser analisado pelo construtor <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" />.</summary>
      <returns>A versão de destino e o perfil do .NET Framework.</returns>
    </member>
    <member name="T:System.AppDomainUnloadedException">
      <summary>A exceção lançada quando há uma tentativa de acessar um domínio de aplicativo descarregado.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.AppDomainUnloadedException" />.</summary>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.AppDomainUnloadedException" /> com dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.AppDomainUnloadedException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
    </member>
    <member name="M:System.AppDomainUnloadedException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.AppDomainUnloadedException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem que descreve o erro.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Se o parâmetro <paramref name="innerException" /> não for uma referência nula, a exceção atual será gerada em um bloco <see langword="catch" /> que lida com a exceção interna.</param>
    </member>
    <member name="T:System.ApplicationId">
      <summary>Contém informações usadas para identificar exclusivamente um aplicativo baseado em manifesto. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.ApplicationId.#ctor(System.Byte[],System.String,System.Version,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ApplicationId" />.</summary>
      <param name="publicKeyToken">A matriz de bytes que representa os dados brutos de chave pública.</param>
      <param name="name">O nome do aplicativo.</param>
      <param name="version">Um objeto <see cref="T:System.Version" /> que especifica a versão do aplicativo.</param>
      <param name="processorArchitecture">A arquitetura do processador do aplicativo.</param>
      <param name="culture">A cultura do aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.
- ou -
<paramref name="version" /> é <see langword="null" />.
- ou -
<paramref name="publicKeyToken" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> é uma cadeia de caracteres vazia.</exception>
    </member>
    <member name="M:System.ApplicationId.Copy">
      <summary>Cria e retorna uma cópia idêntica da identidade do aplicativo atual.</summary>
      <returns>Um objeto <see cref="T:System.ApplicationId" /> que representa uma cópia exata do original.</returns>
    </member>
    <member name="P:System.ApplicationId.Culture">
      <summary>Obtém uma cadeia de caracteres que representa as informações de cultura para o aplicativo.</summary>
      <returns>As informações de cultura do aplicativo.</returns>
    </member>
    <member name="M:System.ApplicationId.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.ApplicationId" /> especificado é equivalente ao <see cref="T:System.ApplicationId" /> atual.</summary>
      <param name="o">O objeto <see cref="T:System.ApplicationId" /> a ser comparado ao <see cref="T:System.ApplicationId" /> atual.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.ApplicationId" /> especificado for equivalente ao <see cref="T:System.ApplicationId" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ApplicationId.GetHashCode">
      <summary>Obtém o código hash para a identidade do aplicativo atual.</summary>
      <returns>O código hash para a identidade do aplicativo atual.</returns>
    </member>
    <member name="P:System.ApplicationId.Name">
      <summary>Obtém o nome do aplicativo.</summary>
      <returns>O nome do aplicativo.</returns>
    </member>
    <member name="P:System.ApplicationId.ProcessorArchitecture">
      <summary>Obtém a arquitetura do processador de destino para o aplicativo.</summary>
      <returns>A arquitetura do processador do aplicativo.</returns>
    </member>
    <member name="P:System.ApplicationId.PublicKeyToken">
      <summary>Obtém o token da chave pública para o aplicativo.</summary>
      <returns>Uma matriz de bytes que contém o token de chave pública para o aplicativo.</returns>
    </member>
    <member name="M:System.ApplicationId.ToString">
      <summary>Cria e retorna uma representação de cadeia de caracteres da identidade do aplicativo.</summary>
      <returns>Uma representação de cadeia de caracteres da identidade do aplicativo.</returns>
    </member>
    <member name="P:System.ApplicationId.Version">
      <summary>Obtém a versão do aplicativo.</summary>
      <returns>Um <see cref="T:System.Version" /> que especifica a versão do aplicativo.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventArgs">
      <summary>Fornece dados para o evento de <see cref="E:System.AppDomain.AssemblyLoad" /> .</summary>
    </member>
    <member name="M:System.AssemblyLoadEventArgs.#ctor(System.Reflection.Assembly)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.AssemblyLoadEventArgs" /> usando o <see cref="T:System.Reflection.Assembly" /> especificado.</summary>
      <param name="loadedAssembly">Uma instância que representa o assembly carregado no momento.</param>
    </member>
    <member name="P:System.AssemblyLoadEventArgs.LoadedAssembly">
      <summary>Obtém um <see cref="T:System.Reflection.Assembly" /> que representa o assembly carregado no momento.</summary>
      <returns>Uma instância do <see cref="T:System.Reflection.Assembly" /> que representa o assembly carregado atualmente.</returns>
    </member>
    <member name="T:System.AssemblyLoadEventHandler">
      <summary>Representa o método que manipula o evento <see cref="E:System.AppDomain.AssemblyLoad" /> de um <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="args">Um <see cref="T:System.AssemblyLoadEventArgs" /> que contém os dados do evento.</param>
    </member>
    <member name="T:System.Base64FormattingOptions">
      <summary>Especifica se os métodos <see cref="Overload:System.Convert.ToBase64CharArray" /> e <see cref="Overload:System.Convert.ToBase64String" /> relevantes inserem interrupções em sua saída.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.InsertLineBreaks">
      <summary>Insere quebras de linha após cada 76 caracteres na representação de cadeia de caracteres.</summary>
    </member>
    <member name="F:System.Base64FormattingOptions.None">
      <summary>Não insere quebras de linha a cada 76 caracteres na representação de cadeia de caracteres.</summary>
    </member>
    <member name="T:System.BitConverter">
      <summary>Converte tipos de dados para uma matriz de bytes e uma matriz de bytes para tipos de dados base de base.</summary>
    </member>
    <member name="M:System.BitConverter.DoubleToInt64Bits(System.Double)">
      <summary>Converte o número de ponto flutuante de precisão dupla especificado em um inteiro com sinal de 64 bits.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits cujo valor é equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Boolean)">
      <summary>Retorna o valor booliano especificado como uma matriz de bytes.</summary>
      <param name="value">Um valor booliano.</param>
      <returns>Uma matriz de bytes com comprimento 1.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Char)">
      <summary>Retorna o valor de caractere Unicode especificado como uma matriz de bytes.</summary>
      <param name="value">O caractere a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Double)">
      <summary>Retorna o valor especificado do ponto flutuante de dupla precisão como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com tamanho 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int16)">
      <summary>Retorna o valor inteiro com sinal de 16 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int32)">
      <summary>Retorna o valor inteiro com sinal de 32 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Int64)">
      <summary>Retorna o valor inteiro com sinal de 64 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com tamanho 8.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.Single)">
      <summary>Retorna o valor especificado do ponto flutuante de precisão simples como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt16)">
      <summary>Retorna o valor do inteiro sem sinal de 16 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 2.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt32)">
      <summary>Retorna o valor do inteiro sem sinal de 32 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com comprimento 4.</returns>
    </member>
    <member name="M:System.BitConverter.GetBytes(System.UInt64)">
      <summary>Retorna o valor do inteiro sem sinal de 64 bits especificado como uma matriz de bytes.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Uma matriz de bytes com tamanho 8.</returns>
    </member>
    <member name="M:System.BitConverter.Int32BitsToSingle(System.Int32)">
      <summary>Reinterpreta o inteiro de 32 bits especificado como um valor de ponto flutuante de precisão simples.</summary>
      <param name="value">O inteiro a ser convertido.</param>
      <returns>Um valor de ponto flutuante de precisão simples que representa o inteiro convertido.</returns>
    </member>
    <member name="M:System.BitConverter.Int64BitsToDouble(System.Int64)">
      <summary>Reinterpreta o inteiro com sinal de 64 bits especificado em um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão cujo valor é equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="F:System.BitConverter.IsLittleEndian">
      <summary>Indica a ordem de byte (“endianness”) na qual os dados são armazenados nessa arquitetura de computador.</summary>
    </member>
    <member name="M:System.BitConverter.SingleToInt32Bits(System.Single)">
      <summary>Converte um valor de ponto flutuante de precisão simples em um inteiro.</summary>
      <param name="value">O valor do ponto flutuante de precisão simples a ser convertido.</param>
      <returns>Um inteiro que representa um valor de ponto flutuante de precisão simples convertido.</returns>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
      <summary>Retorna um valor booliano convertido do byte em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">O índice do byte em <paramref name="value" />.</param>
      <returns>
        <see langword="true" /> se o byte no <paramref name="startIndex" /> em <paramref name="value" /> for diferente de zero, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um valor booliano.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um booliano que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 0.</exception>
    </member>
    <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
      <summary>Retorna um caractere Unicode convertido dos dois bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um caractere formado por dois bytes começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um caractere.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um caractere que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que o tamanho de um <see cref="T:System.Char" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
      <summary>Retorna um número de ponto flutuante de precisão dupla convertido de oito bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um número de ponto flutuante de precisão dupla formado por oito bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 7 e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um valor de ponto flutuante de precisão dupla.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um valor de ponto flutuante de precisão dupla que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que o tamanho de um valor de <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro com sinal de 16 bits convertido de dois bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro com sinal de 16 bits formado por dois bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um inteiro com sinal de 16 bits.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro com sinal de 16 bits que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 2.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro com sinal de 32 bits convertido de quatro bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro com sinal de 32 bits formado por quatro bytes, começando no <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 3, e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um inteiro com sinal de 32 bits.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro com sinal de 32 bits que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 4.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro com sinal de 64 bits convertido de oito bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro com sinal de 64 bits formado por oito bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 7 e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um inteiro com sinal de 64 bits.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro com sinal de 64 bits que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 8.</exception>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
      <summary>Retorna um número de ponto flutuante de precisão simples convertido de quatro bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um número de ponto flutuante de precisão simples formado por quatro bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 3, e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um valor de ponto flutuante de precisão dupla.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um valor de ponto flutuante de precisão dupla que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que o tamanho de um valor de <see cref="T:System.Double" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[])">
      <summary>Converte o valor numérico de cada elemento de uma matriz de bytes especificada em sua representação de cadeia de caracteres hexadecimal equivalente.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <returns>Uma cadeia de caracteres de pares hexadecimais separados por hifens, em que cada par representa o elemento correspondente de <paramref name="value" />. Por exemplo, "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
      <summary>Converte o valor numérico de cada elemento de uma submatriz de bytes especificada em sua representação de cadeia de caracteres hexadecimal equivalente.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Uma cadeia de caracteres de pares hexadecimais separados por hifens, no qual cada par representa o elemento correspondente de uma submatriz de <paramref name="value" />. Por exemplo, "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte o valor numérico de cada elemento de uma submatriz de bytes especificada em sua representação de cadeia de caracteres hexadecimal equivalente.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <param name="length">O número de elementos da matriz em <paramref name="value" /> a serem convertidos.</param>
      <returns>Uma cadeia de caracteres de pares hexadecimais separados por hifens, no qual cada par representa o elemento correspondente de uma submatriz de <paramref name="value" />. Por exemplo, "7F-2C-4A-00".</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> ou <paramref name="length" /> é menor que zero.
-ou-
<paramref name="startIndex" /> é maior que zero e é maior ou igual ao comprimento de <paramref name="value" />.</exception>
      <exception cref="T:System.ArgumentException">A combinação de <paramref name="startIndex" /> e <paramref name="length" /> não especifica uma posição em <paramref name="value" />, ou seja, o parâmetro <paramref name="startIndex" /> é maior que o comprimento de <paramref name="value" /> menos o parâmetro <paramref name="length" />.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro sem sinal de 16 bits convertido de dois bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">A matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro sem sinal de 16 bits formado por dois bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um inteiro sem sinal de 16 bits.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro sem sinal de 16 bits que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 2.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro sem sinal de 32 bits convertido de quatro bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro sem sinal de 32 bits formado por quatro bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 3, e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})">
      <summary>Converte um intervalo de bytes somente leitura em um inteiro sem sinal de 32 bits.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro sem sinal de 32 bits que representa os bytes convertidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O tamanho de <paramref name="value" /> é menor que 4.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
      <summary>Retorna um inteiro sem sinal de 64 bits convertido de oito bytes em uma posição especificada em uma matriz de bytes.</summary>
      <param name="value">Uma matriz de bytes.</param>
      <param name="startIndex">A posição inicial dentro de <paramref name="value" />.</param>
      <returns>Um inteiro sem sinal de 64 bits formado pelos oito bytes, começando em <paramref name="startIndex" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="startIndex" /> é maior ou igual ao tamanho de <paramref name="value" /> menos 7 e é menor ou igual ao tamanho de <paramref name="value" /> menos 1.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> é menor que zero ou maior que o tamanho de <paramref name="value" /> menos 1.</exception>
    </member>
    <member name="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})">
      <summary>Converte bytes em um unsigned long.</summary>
      <param name="value">Um intervalo somente leitura que contém os bytes a serem convertidos.</param>
      <returns>Um inteiro sem sinal de 64 bits que representa os bytes convertidos.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)">
      <summary>Converte um booliano em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o booliano convertido.</param>
      <param name="value">O booliano a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)">
      <summary>Converte um caractere em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o caractere convertido.</param>
      <param name="value">O caractere a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)">
      <summary>Converte um valor de ponto flutuante de precisão dupla em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o valor de ponto flutuante de precisão dupla convertido.</param>
      <param name="value">O valor do ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)">
      <summary>Converte um inteiro com sinal de 16 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro com sinal de 16 bits convertido.</param>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)">
      <summary>Converte um inteiro com sinal de 32 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro com sinal de 32 bits convertido.</param>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)">
      <summary>Converte um inteiro com sinal de 64 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro com sinal de 64 bits convertido.</param>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)">
      <summary>Converte um valor de ponto flutuante de precisão dupla em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o valor de ponto flutuante de precisão dupla convertido.</param>
      <param name="value">O valor do ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)">
      <summary>Converte um inteiro sem sinal de 16 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro sem sinal de 16 bits convertido.</param>
      <param name="value">O inteiro sem sinal de 16 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)">
      <summary>Converte um inteiro sem sinal de 32 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro sem sinal de 32 bits convertido.</param>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)">
      <summary>Converte um inteiro sem sinal de 64 bits em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, os bytes que representam o inteiro sem sinal de 64 bits convertido.</param>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.CannotUnloadAppDomainException">
      <summary>A exceção lançada quando uma tentativa de descarregar um domínio de aplicativo falha.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CannotUnloadAppDomainException" />.</summary>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CannotUnloadAppDomainException" /> com base nos dados serializados.</summary>
      <param name="info">O objeto que mantém os dados de objeto serializados.</param>
      <param name="context">As informações contextuais sobre a origem ou o destino.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CannotUnloadAppDomainException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">Um <see cref="T:System.String" /> que descreve o erro.</param>
    </member>
    <member name="M:System.CannotUnloadAppDomainException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CannotUnloadAppDomainException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja uma referência nula (<see langword="Nothing" /> no Visual Basic), a atual exceção é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.CodeDom.Compiler.IndentedTextWriter">
      <summary>Fornece um text writer que pode recuar novas linhas por um token de cadeia de caracteres de tabulação.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> usando o text writer e a cadeia de caracteres de tabulação padrão especificados.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> a ser usado para saída.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.CodeDom.Compiler.IndentedTextWriter" /> usando o text writer e a cadeia de caracteres de tabulação especificados.</summary>
      <param name="writer">O <see cref="T:System.IO.TextWriter" /> a ser usado para saída.</param>
      <param name="tabString">A cadeia de caracteres de tabulação a ser usada para recuo.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Close">
      <summary>Fecha o documento que está sendo gravado.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.IndentedTextWriter.DefaultTabString">
      <summary>Especifica cadeia de caracteres de tabulação padrão. Este campo é constante.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Encoding">
      <summary>Obtém a codificação do text writer a ser usado.</summary>
      <returns>Um <see cref="T:System.Text.Encoding" /> que indica a codificação para o text writer a ser usado.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Flush">
      <summary>Libera o fluxo.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.Indent">
      <summary>Obtém ou define o número de espaços a serem recuados.</summary>
      <returns>O número de espaços a serem recuados.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.InnerWriter">
      <summary>Obtém o <see cref="T:System.IO.TextWriter" /> a ser usado.</summary>
      <returns>O <see cref="T:System.IO.TextWriter" /> a ser usado.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.IndentedTextWriter.NewLine">
      <summary>Obtém ou define o caractere de nova linha a ser usado.</summary>
      <returns>O caractere de nova linha a ser usado.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.OutputTabs">
      <summary>Gera a cadeia de caracteres de tabulação uma vez para cada nível de recuo, de acordo com a propriedade <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Boolean)">
      <summary>Grava a representação de texto de um valor booliano no fluxo de texto.</summary>
      <param name="value">O valor booliano a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char)">
      <summary>Grava um caractere no fluxo de texto.</summary>
      <param name="value">O caractere a se gravar.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">O índice inicial no buffer.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Double)">
      <summary>Grava a representação de texto de um Double no fluxo de texto.</summary>
      <param name="value">O <see langword="double" /> a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int32)">
      <summary>Grava a representação de texto de um inteiro no fluxo de texto.</summary>
      <param name="value">O inteiro a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Int64)">
      <summary>Grava a representação de texto de um inteiro de 8 bytes no fluxo de texto.</summary>
      <param name="value">O inteiro de 8 bytes a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Object)">
      <summary>Grava a representação de texto de um objeto no fluxo de texto.</summary>
      <param name="value">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.Single)">
      <summary>Grava a representação de texto de um Single no fluxo de texto.</summary>
      <param name="value">O <see langword="single" /> a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String)">
      <summary>Grava a cadeia de caracteres especificada no fluxo de texto.</summary>
      <param name="s">A cadeia de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada usando a mesma semântica, conforme especificado.</summary>
      <param name="format">A cadeia de caracteres de formatação.</param>
      <param name="arg0">O objeto a ser gravado na cadeia de caracteres formatada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada usando a mesma semântica, conforme especificado.</summary>
      <param name="format">A cadeia de caracteres de formatação a ser usada.</param>
      <param name="arg0">O primeiro objeto a ser gravado na cadeia de caracteres formatada.</param>
      <param name="arg1">O segundo objeto a ser gravado na cadeia de caracteres formatada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada usando a mesma semântica, conforme especificado.</summary>
      <param name="format">A cadeia de caracteres de formatação a ser usada.</param>
      <param name="arg">A matriz de argumentos a ser gerada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Grava um terminador de linha.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>Grava a representação de texto de um booliano seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O booliano a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char)">
      <summary>Grava um caractere seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O caractere a se gravar.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>Grava uma matriz de caracteres seguida por um terminador de linha no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres seguida por um terminador de linha no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">O índice inicial no buffer.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Double)">
      <summary>Grava a representação de texto de um Double seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O <see langword="double" /> a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>Grava a representação de texto de um inteiro seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O inteiro a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>Grava a representação de texto de um inteiro de 8 bytes seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O inteiro de 8 bytes a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Object)">
      <summary>Grava a representação de texto de um objeto seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O objeto a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.Single)">
      <summary>Grava a representação de texto de um Single seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">O <see langword="single" /> a ser gravado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String)">
      <summary>Grava a cadeia de caracteres especificada seguida por um terminador de linha no fluxo de texto.</summary>
      <param name="s">A cadeia de caracteres a ser gravada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada seguida por um terminador de linha usando a mesma semântica especificada.</summary>
      <param name="format">A cadeia de caracteres de formatação.</param>
      <param name="arg0">O objeto a ser gravado na cadeia de caracteres formatada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada seguida por um terminador de linha usando a mesma semântica especificada.</summary>
      <param name="format">A cadeia de caracteres de formatação a ser usada.</param>
      <param name="arg0">O primeiro objeto a ser gravado na cadeia de caracteres formatada.</param>
      <param name="arg1">O segundo objeto a ser gravado na cadeia de caracteres formatada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada seguida por um terminador de linha usando a mesma semântica especificada.</summary>
      <param name="format">A cadeia de caracteres de formatação a ser usada.</param>
      <param name="arg">A matriz de argumentos a ser gerada.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>Grava a representação de texto de um UInt32 seguido por um terminador de linha no fluxo de texto.</summary>
      <param name="value">Um UInt32 a ser gerado.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>Grava a cadeia de caracteres especificada em uma linha sem tabulações.</summary>
      <param name="s">A cadeia de caracteres a ser gravada.</param>
    </member>
    <member name="T:System.Collections.ArrayList">
      <summary>Implementa a interface <see cref="T:System.Collections.IList" /> usando uma matriz cujo tamanho é aumentado dinamicamente conforme necessário.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" /> que está vazia e tem a capacidade inicial padrão.</summary>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" />, que contém os elementos copiados da coleção especificada e tem a mesma capacidade inicial que o número de elementos copiados.</summary>
      <param name="c">O <see cref="T:System.Collections.ICollection" /> cujos elementos são copiados para a nova lista.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.ArrayList" /> que está vazia e tem a capacidade inicial especificada.</summary>
      <param name="capacity">O número de elementos que a nova lista pode armazenar inicialmente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Adapter(System.Collections.IList)">
      <summary>Cria um wrapper <see cref="T:System.Collections.ArrayList" /> para um determinado <see cref="T:System.Collections.IList" />.</summary>
      <param name="list">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</param>
      <returns>O wrapper <see cref="T:System.Collections.ArrayList" /> ao redor de <see cref="T:System.Collections.IList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Add(System.Object)">
      <summary>Adiciona um objeto ao final do <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">O objeto <see cref="T:System.Object" /> a ser adicionado ao final do <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <returns>O índice <see cref="T:System.Collections.ArrayList" /> ao qual o <paramref name="value" /> foi adicionado.</returns>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)">
      <summary>Adiciona os elementos de um <see cref="T:System.Collections.ICollection" /> ao final do <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="c">O <see cref="T:System.Collections.ICollection" /> cujos elementos devem ser adicionados ao final do <see cref="T:System.Collections.ArrayList" />. A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
      <summary>Pesquisa um intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> classificado para encontrar um elemento que usa o comparador especificado e retorna o índice baseado em zero do elemento.</summary>
      <param name="index">O índice baseado em zero inicial do intervalo a ser pesquisado.</param>
      <param name="count">O tamanho do intervalo a ser procurado.</param>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado. O valor pode ser <see langword="null" />.</param>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.
-ou-
<see langword="null" /> para usar o comparador padrão que é a implementação <see cref="T:System.IComparable" /> de cada elemento.</param>
      <returns>O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido em <see cref="T:System.Collections.ArrayList" />.
-ou-
<paramref name="comparer" /> é <see langword="null" /> e nem <paramref name="value" /> ou os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> é <see langword="null" /> e <paramref name="value" /> não é do mesmo tipo que os elementos de <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object)">
      <summary>Pesquisa todo o <see cref="T:System.Collections.ArrayList" /> classificado para um elemento usando o comparador padrão e retorna o índice baseado em zero do elemento.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado. O valor pode ser <see langword="null" />.</param>
      <returns>O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">Nem <paramref name="value" /> nem os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="value" /> não é do mesmo tipo que os elementos do <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)">
      <summary>Pesquisa um elemento em todo o <see cref="T:System.Collections.ArrayList" /> classificado usando o comparador especificado e retorna o índice baseado em zero do elemento.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado. O valor pode ser <see langword="null" />.</param>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.
-ou-
<see langword="null" /> para usar o comparador padrão que é a implementação <see cref="T:System.IComparable" /> de cada elemento.</param>
      <returns>O índice baseado em zero da <paramref name="value" /> no <see cref="T:System.Collections.ArrayList" /> classificado se <paramref name="value" /> for encontrado; caso contrário, um número negativo, que é o complemento bit a bit do índice do próximo elemento maior que <paramref name="value" /> ou, se não houver nenhum elemento maior, o complemento bit a bit de <see cref="P:System.Collections.ArrayList.Count" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="comparer" /> é <see langword="null" /> e nem <paramref name="value" /> ou os elementos de <see cref="T:System.Collections.ArrayList" /> implementam a interface <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> é <see langword="null" /> e <paramref name="value" /> não é do mesmo tipo que os elementos de <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Capacity">
      <summary>Obtém ou define o número de elementos que o <see cref="T:System.Collections.ArrayList" /> pode conter.</summary>
      <returns>O número de elementos que o <see cref="T:System.Collections.ArrayList" /> pode conter.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.ArrayList.Capacity" /> é definido como um valor menor que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente disponível no sistema.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clear">
      <summary>Remove todos os elementos do <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Clone">
      <summary>Cria uma cópia superficial do <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Uma cópia superficial do <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.Contains(System.Object)">
      <summary>Determina se um elemento está no <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="item">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> for encontrado no <see cref="T:System.Collections.ArrayList" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array)">
      <summary>Copia todo o <see cref="T:System.Collections.ArrayList" /> para um <see cref="T:System.Array" /> unidimensional compatível, a partir do início da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
-ou-
O número de elementos no <see cref="T:System.Collections.ArrayList" /> de origem é maior que o número de elementos que o <paramref name="array" /> de destino pode conter.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)">
      <summary>Copia todo o <see cref="T:System.Collections.ArrayList" /> em um <see cref="T:System.Array" /> unidimensional compatível, começando no índice especificado da matriz de destino.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
-ou-
O número de elementos na origem <see cref="T:System.Collections.ArrayList" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>Copia um intervalo de elementos do <see cref="T:System.Collections.ArrayList" /> para um <see cref="T:System.Array" /> unidimensional compatível, começando pelo índice especificado da matriz de destino.</summary>
      <param name="index">O índice baseado em zero no <see cref="T:System.Collections.ArrayList" /> de origem em que a cópia começa.</param>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.ArrayList" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <param name="count">O número de elementos a serem copiados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="arrayIndex" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
-ou-
<paramref name="index" /> é igual a ou maior que o <see cref="P:System.Collections.ArrayList.Count" /> do <see cref="T:System.Collections.ArrayList" /> de origem.
-ou-
O número de elementos de <paramref name="index" /> até o final do <see cref="T:System.Collections.ArrayList" /> de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.Count">
      <summary>Obtém o número de elementos realmente contidos no <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>O número de elementos realmente contidos no <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> com um tamanho fixo.</summary>
      <param name="list">O <see cref="T:System.Collections.ArrayList" /> a ser encapsulado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.ArrayList" /> com um tamanho fixo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.IList" /> com um tamanho fixo.</summary>
      <param name="list">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.IList" /> com um tamanho fixo.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator">
      <summary>Retorna um enumerador para todo o <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para todo o <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)">
      <summary>Retorna um enumerador para um intervalo de elementos no <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">O índice inicial baseado em zero da seção <see cref="T:System.Collections.ArrayList" /> que o enumerador deve consultar.</param>
      <param name="count">O número de elementos na seção <see cref="T:System.Collections.ArrayList" /> que o enumerador deve consultar.</param>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o intervalo especificado de elementos no <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não especificam um intervalo válido no <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)">
      <summary>Retorna um <see cref="T:System.Collections.ArrayList" /> que representa um subconjunto dos elementos na origem <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">O índice <see cref="T:System.Collections.ArrayList" /> baseado em zero no qual é iniciado o intervalo.</param>
      <param name="count">O número de elementos no intervalo.</param>
      <returns>Um <see cref="T:System.Collections.ArrayList" /> que representa um subconjunto dos elementos na origem <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice de base zero da primeira ocorrência dentro de todo o <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <returns>O índice baseado em zero da primeira ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.ArrayList" />, se encontrado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da primeira ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do índice especificado ao último elemento.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <param name="startIndex">O índice inicial com base em zero da pesquisa. 0 (zero) é válido em uma lista vazia.</param>
      <returns>O índice baseado em zero da primeira ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do <paramref name="startIndex" /> ao último elemento, se for encontrado; caso contrário, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da primeira ocorrência dentro de um intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que começa no índice especificado e contém o número de elementos especificado.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <param name="startIndex">O índice inicial com base em zero da pesquisa. 0 (zero) é válido em uma lista vazia.</param>
      <param name="count">O número de elementos na seção a ser pesquisada.</param>
      <returns>O índice baseado em zero da primeira ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que começa em <paramref name="startIndex" /> e contém o número de elementos <paramref name="count" />, se encontrado; caso contrário, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.
-ou-
<paramref name="count" /> é menor que zero.
-ou-
<paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)">
      <summary>Insere um elemento no <see cref="T:System.Collections.ArrayList" />, no índice especificado.</summary>
      <param name="index">O índice de base zero no qual o <paramref name="value" /> deve ser inserido.</param>
      <param name="value">O <see cref="T:System.Object" /> a ser inserido. O valor pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="index" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>Insere os elementos de uma coleção no <see cref="T:System.Collections.ArrayList" /> no índice especificado.</summary>
      <param name="index">O índice baseado em zero no qual os novos elementos devem ser inseridos.</param>
      <param name="c">O <see cref="T:System.Collections.ICollection" /> cujos elementos devem ser inseridos no <see cref="T:System.Collections.ArrayList" />. A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="index" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.ArrayList" /> tiver um valor fixo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.ArrayList" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.ArrayList" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.ArrayList" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.ArrayList" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ArrayList.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <param name="index">O índice com base em zero do elemento a ser obtido ou definido.</param>
      <returns>O elemento no índice especificado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice de base zero da última ocorrência dentro de todo o <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <returns>O índice de base zero da última ocorrência de <paramref name="value" /> em todo o <see cref="T:System.Collections.ArrayList" />, se localizado; caso contrário, -1.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da última ocorrência dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que se estende do primeiro elemento ao índice especificado.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <param name="startIndex">O índice inicial com base em zero da pesquisa inversa.</param>
      <returns>O índice baseado em zero da última ocorrência de <paramref name="value" /> dentro do intervalo de elementos em <see cref="T:System.Collections.ArrayList" /> que se estende do primeiro elemento a <paramref name="startIndex" />, se encontrado; caso contrário, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)">
      <summary>Pesquisa o <see cref="T:System.Object" /> especificado e retorna o índice baseado em zero da última ocorrência no intervalo de elementos na <see cref="T:System.Collections.ArrayList" /> que contém o número de elementos especificado e termina no índice especificado.</summary>
      <param name="value">O <see cref="T:System.Object" /> a ser localizado no <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <param name="startIndex">O índice inicial com base em zero da pesquisa inversa.</param>
      <param name="count">O número de elementos na seção a ser pesquisada.</param>
      <returns>O índice baseado em zero da última ocorrência de <paramref name="value" /> dentro do intervalo de elementos no <see cref="T:System.Collections.ArrayList" /> que contém o número <paramref name="count" /> de elementos e termina em <paramref name="startIndex" />, se encontrado; caso contrário, -1.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> está fora do intervalo de índices válidos para o <see cref="T:System.Collections.ArrayList" />.
-ou-
<paramref name="count" /> é menor que zero.
-ou-
<paramref name="startIndex" /> e <paramref name="count" /> não especificam uma seção válida no <see cref="T:System.Collections.ArrayList" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> de somente leitura.</summary>
      <param name="list">O <see cref="T:System.Collections.ArrayList" /> a ser encapsulado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.ArrayList" /> de somente leitura encapsula <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.IList" /> de somente leitura.</summary>
      <param name="list">O <see cref="T:System.Collections.IList" /> a ser encapsulado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.IList" /> de somente leitura encapsula <paramref name="list" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Remove(System.Object)">
      <summary>Remove a primeira ocorrência de um objeto específico do <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="obj">O <see cref="T:System.Object" /> a ser removido de <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveAt(System.Int32)">
      <summary>Remove o elemento no índice especificado do <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">O índice de base zero do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="index" /> é igual a ou maior que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)">
      <summary>Remove um intervalo de elementos do <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">O índice inicial baseado em zero do intervalo de elementos a serem removidos.</param>
      <param name="count">O número de elementos a serem removidos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)">
      <summary>Retorna um <see cref="T:System.Collections.ArrayList" /> cujos elementos são cópias do valor especificado.</summary>
      <param name="value">O <see cref="T:System.Object" /> para copiar várias vezes no novo <see cref="T:System.Collections.ArrayList" />. O valor pode ser <see langword="null" />.</param>
      <param name="count">O número de vezes que <paramref name="value" /> deve ser copiado.</param>
      <returns>Um <see cref="T:System.Collections.ArrayList" /> com <paramref name="count" /> número de elementos, que são cópias de <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse">
      <summary>Inverte a ordem dos elementos em todo o <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)">
      <summary>Inverte a ordem dos elementos no intervalo especificado.</summary>
      <param name="index">O índice inicial baseado em zero do intervalo a ser revertido.</param>
      <param name="count">O número de elementos no intervalo a serem revertidos.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não denotam um intervalo válido de elementos no <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>Copia os elementos de uma coleção em um intervalo de elementos no <see cref="T:System.Collections.ArrayList" />.</summary>
      <param name="index">O índice <see cref="T:System.Collections.ArrayList" /> com base em zero no qual começar a copiar os elementos de <paramref name="c" />.</param>
      <param name="c">O <see cref="T:System.Collections.ICollection" /> cujos elementos copiar para o <see cref="T:System.Collections.ArrayList" />. A coleção em si não pode ser <see langword="null" />, mas pode conter elementos que são <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="index" /> mais o número de elementos em <paramref name="c" /> é maior que <see cref="P:System.Collections.ArrayList.Count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort">
      <summary>Classifica os elementos em todo o <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)">
      <summary>Classifica os elementos em todo o <see cref="T:System.Collections.ArrayList" /> usando o comparador especificado.</summary>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.
-ou-
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar a implementação de <see cref="T:System.IComparable" /> de cada elemento.</param>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">Erro ao comparar dois elementos.</exception>
      <exception cref="T:System.ArgumentException">
        <see langword="null" /> é passado para <paramref name="comparer" />, e os elementos na lista não implementam <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>Classifica os elementos em um intervalo de elementos em <see cref="T:System.Collections.ArrayList" /> usando o comparador especificado.</summary>
      <param name="index">O índice inicial baseado em zero do intervalo a ser classificado.</param>
      <param name="count">O tamanho do intervalo a ser classificado.</param>
      <param name="comparer">A implementação de <see cref="T:System.Collections.IComparer" /> a ser usada durante a comparação de elementos.
-ou-
Uma referência nula (<see langword="Nothing" /> no Visual Basic) para usar a implementação de <see cref="T:System.IComparable" /> de cada elemento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.
-ou-
<paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> não especificam um intervalo válido no <see cref="T:System.Collections.ArrayList" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.</exception>
      <exception cref="T:System.InvalidOperationException">Erro ao comparar dois elementos.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.ArrayList" /> sincronizado (thread-safe).</summary>
      <param name="list">O <see cref="T:System.Collections.ArrayList" /> a ser sincronizado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.ArrayList" /> sincronizado (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)">
      <summary>Retorna um wrapper <see cref="T:System.Collections.IList" /> sincronizado (thread-safe).</summary>
      <param name="list">O <see cref="T:System.Collections.IList" /> a ser sincronizado.</param>
      <returns>Um wrapper <see cref="T:System.Collections.IList" /> sincronizado (thread-safe).</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.ArrayList.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray">
      <summary>Copia os elementos do <see cref="T:System.Collections.ArrayList" /> em uma nova matriz <see cref="T:System.Object" />.</summary>
      <returns>Uma matriz <see cref="T:System.Object" /> que contém cópias dos elementos do <see cref="T:System.Collections.ArrayList" />.</returns>
    </member>
    <member name="M:System.Collections.ArrayList.ToArray(System.Type)">
      <summary>Copia os elementos do <see cref="T:System.Collections.ArrayList" /> em uma nova matriz do tipo de elemento especificado.</summary>
      <param name="type">O elemento <see cref="T:System.Type" /> da matriz de destino para criação e cópia dos elementos.</param>
      <returns>Uma matriz do tipo de elemento especificado que contém cópias dos elementos do <see cref="T:System.Collections.ArrayList" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.ArrayList" /> de origem não pode ser convertido automaticamente no tipo especificado.</exception>
    </member>
    <member name="M:System.Collections.ArrayList.TrimToSize">
      <summary>Define a capacidade para o número real de elementos em <see cref="T:System.Collections.ArrayList" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.ArrayList" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.ArrayList" /> tem um tamanho fixo.</exception>
    </member>
    <member name="T:System.Collections.Comparer">
      <summary>Compara dois objetos para equivalência, no qual as comparações de cadeias de caracteres diferenciam maiúsculas de minúsculas.</summary>
    </member>
    <member name="M:System.Collections.Comparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Comparer" /> usando o <see cref="T:System.Globalization.CultureInfo" /> especificado.</summary>
      <param name="culture">O <see cref="T:System.Globalization.CultureInfo" /> a ser usado para o novo <see cref="T:System.Collections.Comparer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Comparer.Compare(System.Object,System.Object)">
      <summary>Realiza uma comparação diferenciando maiúsculas de minúsculas em dois objetos do mesmo tipo e retorna um valor que indica se um objeto é menor que, igual a ou maior que o outro.</summary>
      <param name="a">O primeiro objeto a ser comparado.</param>
      <param name="b">O segundo objeto a ser comparado.</param>
      <returns>Um inteiro assinado que indica os valores relativos de <paramref name="a" /> e <paramref name="b" />, conforme mostrado na tabela a seguir.
  Valor 
  Significado 
  Menor que zero 
 <paramref name="a" /> é menor que <paramref name="b" />.  
  
  Zero 
 <paramref name="a" /> é igual a <paramref name="b" />.  
  
  Maior que zero 
 <paramref name="a" /> é maior que <paramref name="b" />.</returns>
      <exception cref="T:System.ArgumentException">Nem <paramref name="a" /> nem <paramref name="b" /> implementam a interface <see cref="T:System.IComparable" />.
- ou -
<paramref name="a" /> e <paramref name="b" /> são de tipos diferentes e não podem manipular comparações com os outros.</exception>
    </member>
    <member name="F:System.Collections.Comparer.Default">
      <summary>Representa uma instância de <see cref="T:System.Collections.Comparer" /> associada ao <see cref="P:System.Threading.Thread.CurrentCulture" /> do thread atual. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Collections.Comparer.DefaultInvariant">
      <summary>Representa uma instância de <see cref="T:System.Collections.Comparer" /> que está associada com <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.Collections.Comparer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para a serialização.</summary>
      <param name="info">O objeto a ser preenchido com dados.</param>
      <param name="context">As informações de contexto sobre a fonte ou o destino da serialização.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Collections.Hashtable">
      <summary>Representa uma coleção de pares chave-valor organizados com base no código hash da chave.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial, o fator de carga, o provedor de código hash e o comparador padrão.</summary>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga, o provedor de código hash e o comparador padrão.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para um novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga padrão e o objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="equalityComparer">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão. O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga padrão e o provedor de código hash e o comparador especificados. Esta API está obsoleta. Para obter uma alternativa, consulte <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="hcp">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.
-ou-
<see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga especificado e o provedor de código hash e o comparador padrão.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga especificado e o objeto <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <param name="equalityComparer">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão. O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Collections.Hashtable" /> copiando os elementos do dicionário especificado para o novo objeto <see cref="T:System.Collections.Hashtable" />. O novo objeto <see cref="T:System.Collections.Hashtable" /> tem uma capacidade inicial igual ao número de elementos copiados e usa o fator de carga, o provedor de código hash e o comparador especificados.</summary>
      <param name="d">O objeto <see cref="T:System.Collections.IDictionary" /> a ser copiado para um novo objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <param name="hcp">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.
-ou-
<see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga padrão e o objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</summary>
      <param name="equalityComparer">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador para usar com o objeto <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão. O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga padrão, bem como o provedor de código hash e o comparador especificados.</summary>
      <param name="hcp">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no objeto <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.
-ou-
<see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada e o fator de carga padrão, o provedor de código hash e o comparador.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada e <see cref="T:System.Collections.IEqualityComparer" />, bem como o fator de carga padrão.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <param name="equalityComparer">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão. O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada, o provedor de código hash, o comparador e o fator de carga padrão.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <param name="hcp">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.
-ou-
<see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial e o fator de carga especificados, bem como o provedor de código hash e o comparador padrão.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.
-ou-
<paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="capacity" /> está causando um estouro.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial especificada, o fator de carga e o objeto <see cref="T:System.Collections.IEqualityComparer" />.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <param name="equalityComparer">O objeto <see cref="T:System.Collections.IEqualityComparer" /> que define o provedor de código hash e o comparador a serem usados com o <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão e o comparador padrão. O provedor de código hash padrão é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" /> e o comparador padrão é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.
-ou-
<paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)">
      <summary>Inicializa uma instância nova e vazia da classe <see cref="T:System.Collections.Hashtable" /> usando a capacidade inicial, o fator de carga, o provedor de código hash e o comparador especificados.</summary>
      <param name="capacity">O número aproximado de elementos que o objeto <see cref="T:System.Collections.Hashtable" /> pode conter inicialmente.</param>
      <param name="loadFactor">Um número no intervalo entre 0.1 e 1.0 é multiplicado pelo valor padrão que fornece o melhor desempenho. O resultado é a proporção máxima de elementos para buckets.</param>
      <param name="hcp">O objeto <see cref="T:System.Collections.IHashCodeProvider" /> que fornece os códigos hash de todas as chaves no <see cref="T:System.Collections.Hashtable" />.
-ou-
<see langword="null" /> para usar o provedor de código hash padrão, que é a implementação de cada chave de <see cref="M:System.Object.GetHashCode" />.</param>
      <param name="comparer">O objeto <see cref="T:System.Collections.IComparer" /> a ser usado para determinar se duas chaves são iguais.
-ou-
<see langword="null" /> para usar o comparador padrão, que é a implementação de cada chave de <see cref="M:System.Object.Equals(System.Object)" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é menor que zero.
-ou-
<paramref name="loadFactor" /> é menor que 0.1.
-ou-
<paramref name="loadFactor" /> é maior que 1.0.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância vazia da classe <see cref="T:System.Collections.Hashtable" /> que pode ser serializada usando os objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar o objeto <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Add(System.Object,System.Object)">
      <summary>Adiciona um elemento com a chave e o valor especificados ao <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">A chave do elemento a ser adicionada.</param>
      <param name="value">O valor do elemento a ser adicionado. O valor pode ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Já existe um elemento com a mesma chave no <see cref="T:System.Collections.Hashtable" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clear">
      <summary>Remove todos os elementos do <see cref="T:System.Collections.Hashtable" />.</summary>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Clone">
      <summary>Cria uma cópia superficial do <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Uma cópia superficial do <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.comparer">
      <summary>Obtém ou define o <see cref="T:System.Collections.IComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>O <see cref="T:System.Collections.IComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Contains(System.Object)">
      <summary>Determina se a <see cref="T:System.Collections.Hashtable" /> contém uma chave específica.</summary>
      <param name="key">A chave a ser localizada no <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsKey(System.Object)">
      <summary>Determina se a <see cref="T:System.Collections.Hashtable" /> contém uma chave específica.</summary>
      <param name="key">A chave a ser localizada no <see cref="T:System.Collections.Hashtable" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com a chave especificada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.ContainsValue(System.Object)">
      <summary>Determinará se o <see cref="T:System.Collections.Hashtable" /> contiver um valor específico.</summary>
      <param name="value">O valor a ser localizado na <see cref="T:System.Collections.Hashtable" />. O valor pode ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> contiver um elemento com o <paramref name="value" /> especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos <see cref="T:System.Collections.Hashtable" /> para uma instância <see cref="T:System.Array" /> unidimensional no índice especificado.</summary>
      <param name="array">O <see cref="T:System.Array" /> unidimensional que é o destino dos objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.Hashtable" />. O <see cref="T:System.Array" /> deve ter indexação com base em zero.</param>
      <param name="arrayIndex">O índice com base em zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.
-ou-
O número de elementos na origem <see cref="T:System.Collections.Hashtable" /> é maior do que o espaço disponível de <paramref name="arrayIndex" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">O tipo do <see cref="T:System.Collections.Hashtable" /> de origem não pode ser automaticamente convertido para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Count">
      <summary>Obtém o número de pares chave-valor contidos no <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>O número de pares chave-valor contidos no <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.EqualityComparer">
      <summary>Obtém o <see cref="T:System.Collections.IEqualityComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>O <see cref="T:System.Collections.IEqualityComparer" /> a ser usado para o <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentException">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IHashCodeProvider" /> e um <see cref="T:System.Collections.IComparer" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetEnumerator">
      <summary>Retorna um <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera pelo <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Um <see cref="T:System.Collections.IDictionaryEnumerator" /> para o <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.GetHash(System.Object)">
      <summary>Retorna o código hash da chave especificada.</summary>
      <param name="key">O <see cref="T:System.Object" /> para o qual um código hash deve ser retornado.</param>
      <returns>O código hash para <paramref name="key" />.</returns>
      <exception cref="T:System.NullReferenceException">
        <paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e retorna os dados necessários para serializar o <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="info">Um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar o <see cref="T:System.Collections.Hashtable" />.</param>
      <param name="context">Um objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem e o destino do fluxo serializado associado a <see cref="T:System.Collections.Hashtable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">A coleção foi modificada.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.hcp">
      <summary>Obtém ou define o objeto que pode dispensar códigos hash.</summary>
      <returns>O objeto que pode dispensar códigos de hash.</returns>
      <exception cref="T:System.ArgumentException">A propriedade é definida como um valor, mas a tabela de hash foi criada usando um <see cref="T:System.Collections.IEqualityComparer" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.IsFixedSize">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> tiver um valor fixo; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsReadOnly">
      <summary>Obtém um valor que indica se o <see cref="T:System.Collections.Hashtable" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Collections.Hashtable" /> for somente leitura; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso à <see cref="T:System.Collections.Hashtable" /> é sincronizado (thread-safe).</summary>
      <returns>
        <see langword="true" /> caso o acesso ao <see cref="T:System.Collections.Hashtable" /> seja sincronizado (thread-safe); do contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Item(System.Object)">
      <summary>Obtém ou define o valor associado à chave especificada.</summary>
      <param name="key">A chave cujo valor será obtido ou definido.</param>
      <returns>O valor associado à chave especificada. Se a chave especificada não for encontrada, tentar obtê-la retornará <see langword="null" /> e tentar de defini-la criará um novo elemento usando a chave especificada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">A propriedade é definida e o <see cref="T:System.Collections.Hashtable" /> é somente leitura.
-ou-
A propriedade é definida, <paramref name="key" /> não existe na coleção e o <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)">
      <summary>Compara um <see cref="T:System.Object" /> específico com uma chave específica no <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="item">O <see cref="T:System.Object" /> a ser comparado com <paramref name="key" />.</param>
      <param name="key">A chave no <see cref="T:System.Collections.Hashtable" /> a ser comparada com <paramref name="item" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> e <paramref name="key" /> forem iguais, caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> é <see langword="null" />.
-ou-
<paramref name="key" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.Keys">
      <summary>Obtém uma <see cref="T:System.Collections.ICollection" /> que contém as chaves na <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Uma <see cref="T:System.Collections.ICollection" /> que contém as chaves na <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.OnDeserialization(System.Object)">
      <summary>Implementa a interface <see cref="T:System.Runtime.Serialization.ISerializable" /> e gera o evento de desserialização quando a desserialização for concluída.</summary>
      <param name="sender">A fonte do evento de desserialização.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">O objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associado ao <see cref="T:System.Collections.Hashtable" /> atual é inválido.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Remove(System.Object)">
      <summary>Remove o elemento com a chave especificada do <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O <see cref="T:System.Collections.Hashtable" /> é somente leitura.
-ou-
O <see cref="T:System.Collections.Hashtable" /> tem um tamanho fixo.</exception>
    </member>
    <member name="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)">
      <summary>Retorna um wrapper sincronizado (thread-safe) para o <see cref="T:System.Collections.Hashtable" />.</summary>
      <param name="table">O <see cref="T:System.Collections.Hashtable" /> a ser sincronizado.</param>
      <returns>Um wrapper sincronizado (thread-safe) para o <see cref="T:System.Collections.Hashtable" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="table" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Hashtable.SyncRoot">
      <summary>Obtém um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Um objeto que pode ser usado para sincronizar o acesso ao <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera em uma coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar pela coleção.</returns>
    </member>
    <member name="P:System.Collections.Hashtable.Values">
      <summary>Obtém um <see cref="T:System.Collections.ICollection" /> que contém os valores no <see cref="T:System.Collections.Hashtable" />.</summary>
      <returns>Um <see cref="T:System.Collections.ICollection" /> que contém os valores de <see cref="T:System.Collections.Hashtable" />.</returns>
    </member>
    <member name="T:System.Collections.IHashCodeProvider">
      <summary>Fornece um código hash para um objeto, usando uma função de hash personalizada.</summary>
    </member>
    <member name="M:System.Collections.IHashCodeProvider.GetHashCode(System.Object)">
      <summary>Retorna um código hash para o objeto especificado.</summary>
      <param name="obj">O <see cref="T:System.Object" /> para o qual um código hash deve ser retornado.</param>
      <returns>Um código hash para o objeto especificado.</returns>
      <exception cref="T:System.ArgumentNullException">O tipo de <paramref name="obj" /> é um tipo de referência e <paramref name="obj" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.ContextBoundObject">
      <summary>Define a classe base para todas as classes associadas ao contexto.</summary>
    </member>
    <member name="M:System.ContextBoundObject.#ctor">
      <summary>Cria uma instância da classe <see cref="T:System.ContextBoundObject" />.</summary>
    </member>
    <member name="T:System.ContextMarshalException">
      <summary>A exceção gerada quando ocorre uma falha na tentativa de realizar marshaling de um objeto em um limite de contexto.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ContextMarshalException" /> com propriedades padrão.</summary>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ContextMarshalException" /> com dados serializados.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ContextMarshalException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.ContextMarshalException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ContextMarshalException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="inner">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="inner" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.ContextStaticAttribute">
      <summary>Indica que o valor de um campo estático é exclusivo para um contexto específico.</summary>
    </member>
    <member name="M:System.ContextStaticAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.ContextStaticAttribute" />.</summary>
    </member>
    <member name="T:System.Convert">
      <summary>Converte um tipo de dados base em outro tipo de dados base.</summary>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
      <summary>Retorna um objeto do tipo especificado e cujo valor é equivalente ao objeto especificado.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">O tipo de objeto a ser retornado.</param>
      <returns>Um objeto cujo tipo é <paramref name="conversionType" /> e cujo valor é equivalente a <paramref name="value" />.
- ou -
Uma referência nula (<see langword="Nothing" /> no Visual Basic), se <paramref name="value" /> for <see langword="null" /> e <paramref name="conversionType" /> não for um tipo de valor.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.
- ou -
<paramref name="value" /> é <see langword="null" /> e <paramref name="conversionType" /> é um tipo de valor.
- ou -
<paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" /> .</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato reconhecido pelo <paramref name="conversionType" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que está fora do intervalo de <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
      <summary>Retorna um objeto do tipo especificado, cujo valor é equivalente ao objeto especificado. Um parâmetro fornece informações de formatação específicas da cultura.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="conversionType">O tipo de objeto a ser retornado.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um objeto cujo tipo é <paramref name="conversionType" /> e cujo valor é equivalente a <paramref name="value" />.
- ou -
<paramref name="value" />, se o <see cref="T:System.Type" /> de <paramref name="value" /> e <paramref name="conversionType" /> forem iguais.
- ou -
Uma referência nula (<see langword="Nothing" /> no Visual Basic), se <paramref name="value" /> for <see langword="null" /> e <paramref name="conversionType" /> não for um tipo de valor.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.
- ou -
<paramref name="value" /> é <see langword="null" /> e <paramref name="conversionType" /> é um tipo de valor.
- ou -
<paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato para <paramref name="conversionType" /> reconhecido pelo <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que está fora do intervalo de <paramref name="conversionType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="conversionType" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
      <summary>Retorna um objeto do tipo especificado, cujo valor é equivalente ao objeto especificado.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">O tipo de objeto a ser retornado.</param>
      <returns>Um objeto cujo tipo subjacente é <paramref name="typeCode" /> e cujo valor é equivalente a <paramref name="value" />.
- ou -
Uma referência nula (<see langword="Nothing" /> no Visual Basic), se <paramref name="value" /> for <see langword="null" /> e <paramref name="typeCode" /> for <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> ou <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.
- ou -
<paramref name="value" /> é <see langword="null" /> e <paramref name="typeCode" /> especifica um tipo de valor.
- ou -
<paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato reconhecido pelo tipo <paramref name="typeCode" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que está fora do intervalo do tipo <paramref name="typeCode" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> é inválido.</exception>
    </member>
    <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
      <summary>Retorna um objeto do tipo especificado, cujo valor é equivalente ao objeto especificado. Um parâmetro fornece informações de formatação específicas da cultura.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="typeCode">O tipo de objeto a ser retornado.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um objeto cujo tipo subjacente é <paramref name="typeCode" /> e cujo valor é equivalente a <paramref name="value" />.
- ou -
Uma referência nula (<see langword="Nothing" /> no Visual Basic), se <paramref name="value" /> for <see langword="null" /> e <paramref name="typeCode" /> for <see cref="F:System.TypeCode.Empty" />, <see cref="F:System.TypeCode.String" /> ou <see cref="F:System.TypeCode.Object" />.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.
- ou -
<paramref name="value" /> é <see langword="null" /> e <paramref name="typeCode" /> especifica um tipo de valor.
- ou -
<paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato para o tipo <paramref name="typeCode" /> reconhecido pelo <paramref name="provider" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que está fora do intervalo do tipo <paramref name="typeCode" /> .</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="typeCode" /> é inválido.</exception>
    </member>
    <member name="F:System.Convert.DBNull">
      <summary>Uma constante que representa uma coluna de banco de dados sem dados, ou seja, um banco de dados nulo.</summary>
    </member>
    <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
      <summary>Converte um subconjunto de uma matriz de caracteres Unicode que codifica dados binários como dígitos de base 64 em uma matriz de inteiros sem sinal de 8 bits equivalente. Os parâmetros especificam o subconjunto na matriz de entrada e o número de elementos a serem convertidos.</summary>
      <param name="inArray">Uma matriz de caracteres Unicode.</param>
      <param name="offset">Uma posição dentro de <paramref name="inArray" />.</param>
      <param name="length">O número de elementos no <paramref name="inArray" /> a ser convertido.</param>
      <returns>Uma matriz de inteiros sem sinal de 8 bits equivalentes aos elementos <paramref name="length" /> na posição <paramref name="offset" /> em <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="length" /> é menor que 0.
- ou -
A soma de <paramref name="offset" /> e <paramref name="length" /> indica uma posição que não está dentro do <paramref name="inArray" />.</exception>
      <exception cref="T:System.FormatException">O comprimento de <paramref name="inArray" />, ignorando caracteres de espaço em branco, não é zero ou um múltiplo de 4.
- ou -
O formato de <paramref name="inArray" /> é inválido. <paramref name="inArray" /> contém um caractere que não é de base 64, mais de dois caracteres de preenchimento ou um caractere que não é um espaço em branco entre os caracteres de preenchimento.</exception>
    </member>
    <member name="M:System.Convert.FromBase64String(System.String)">
      <summary>Converte a cadeia de caracteres especificada, o que codifica dados binários, como dígitos de base 64, em uma matriz equivalente de inteiros sem sinais de 8 bits.</summary>
      <param name="s">A cadeia de caracteres a ser convertida.</param>
      <returns>Uma matriz de inteiros sem sinais de 8 bits equivalente a <paramref name="s" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O comprimento de <paramref name="s" />, ignorando caracteres de espaço em branco, não é zero ou um múltiplo de 4.
- ou -
O formato de <paramref name="s" /> é inválido. <paramref name="s" /> contém um caractere que não é de base 64, mais de dois caracteres de preenchimento ou um caractere que não é um espaço em branco entre os caracteres de preenchimento.</exception>
    </member>
    <member name="M:System.Convert.GetTypeCode(System.Object)">
      <summary>Retorna o <see cref="T:System.TypeCode" /> para o objeto especificado.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <returns>O <see cref="T:System.TypeCode" /> de <paramref name="value" /> ou <see cref="F:System.TypeCode.Empty" /> se <paramref name="value" /> for <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.IsDBNull(System.Object)">
      <summary>Retorna uma indicação de que se o objeto especificado é do tipo <see cref="T:System.DBNull" />.</summary>
      <param name="value">Um objeto.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> for do tipo <see cref="T:System.DBNull" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <summary>Converte um subconjunto de uma matriz de inteiros não assinados de 8 bits em um subconjunto equivalente de uma matriz de caracteres Unicode codificada com dígitos com base em 64. Os parâmetros especificam os subconjuntos como deslocamentos nas matrizes de entrada e saída, e o número de elementos na matriz de entrada a serem convertidos.</summary>
      <param name="inArray">Uma matriz de entrada com inteiros sem sinal de 8 bits.</param>
      <param name="offsetIn">Uma posição dentro de <paramref name="inArray" />.</param>
      <param name="length">O número de elementos de <paramref name="inArray" /> a serem convertidos.</param>
      <param name="outArray">Uma matriz de saída de caracteres Unicode.</param>
      <param name="offsetOut">Uma posição dentro de <paramref name="outArray" />.</param>
      <returns>Um inteiro com sinal de 32 bits que contém o número de bytes em <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ou <paramref name="outArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> ou <paramref name="length" /> é negativo.
- ou -
A soma de <paramref name="offsetIn" /> e <paramref name="length" /> é maior que o tamanho de <paramref name="inArray" />.
- ou -
<paramref name="offsetOut" /> mais o número de elementos a serem retornados é maior que o comprimento de <paramref name="outArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
      <summary>Converte um subconjunto de uma matriz de inteiros não assinados de 8 bits em um subconjunto equivalente de uma matriz de caracteres Unicode codificada com dígitos com base em 64. Parâmetros especificam os subconjuntos como deslocamentos nas matrizes de entrada e saída, o número de elementos na matriz de entrada a serem convertidos e se as quebras de linha são inseridas na matriz de saída.</summary>
      <param name="inArray">Uma matriz de entrada com inteiros sem sinal de 8 bits.</param>
      <param name="offsetIn">Uma posição dentro de <paramref name="inArray" />.</param>
      <param name="length">O número de elementos de <paramref name="inArray" /> a serem convertidos.</param>
      <param name="outArray">Uma matriz de saída de caracteres Unicode.</param>
      <param name="offsetOut">Uma posição dentro de <paramref name="outArray" />.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> para inserir uma quebra de linha a cada 76 caracteres, ou <see cref="F:System.Base64FormattingOptions.None" /> para não inserir quebras de linha.</param>
      <returns>Um inteiro com sinal de 32 bits que contém o número de bytes em <paramref name="outArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> ou <paramref name="outArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offsetIn" />, <paramref name="offsetOut" /> ou <paramref name="length" /> é negativo.
- ou -
A soma de <paramref name="offsetIn" /> e <paramref name="length" /> é maior que o tamanho de <paramref name="inArray" />.
- ou -
<paramref name="offsetOut" /> mais o número de elementos a serem retornados é maior que o comprimento de <paramref name="outArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> não é um valor <see cref="T:System.Base64FormattingOptions" /> válido.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[])">
      <summary>Converte uma matriz de inteiros sem sinal de 8 bits na representação de cadeia de caracteres equivalente codificada com dígitos de base 64.</summary>
      <param name="inArray">Uma matriz de inteiros não assinados de 8 bits.</param>
      <returns>A representação de cadeia de caracteres, em base 64, do conteúdo de <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
      <summary>Converte uma matriz de inteiros sem sinal de 8 bits na representação de cadeia de caracteres equivalente codificada com dígitos de base 64. Você pode especificar se deseja inserir quebras de linha no valor retornado.</summary>
      <param name="inArray">Uma matriz de inteiros não assinados de 8 bits.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> para inserir uma quebra de linha a cada 76 caracteres, ou <see cref="F:System.Base64FormattingOptions.None" /> para não inserir quebras de linha.</param>
      <returns>A representação de cadeia de caracteres em base 64 dos elementos em <paramref name="inArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> não é um valor <see cref="T:System.Base64FormattingOptions" /> válido.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte um subconjunto de uma matriz de inteiros sem sinal de 8 bits na representação de cadeia de caracteres equivalente codificada com dígitos de base 64. Parâmetros especificam o subconjunto como um deslocamento na matriz de entrada e o número de elementos na matriz a converter.</summary>
      <param name="inArray">Uma matriz de inteiros não assinados de 8 bits.</param>
      <param name="offset">Um deslocamento em <paramref name="inArray" />.</param>
      <param name="length">O número de elementos de <paramref name="inArray" /> a serem convertidos.</param>
      <returns>A representação de cadeia de caracteres em base 64 de elementos <paramref name="length" /> de <paramref name="inArray" />, começando na posição <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="length" /> é negativo.
- ou -
A soma de <paramref name="offset" /> e <paramref name="length" /> é maior que o tamanho de <paramref name="inArray" />.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
      <summary>Converte um subconjunto de uma matriz de inteiros sem sinal de 8 bits na representação de cadeia de caracteres equivalente codificada com dígitos de base 64. Parâmetros especificam o subconjunto como um deslocamento da matriz de entrada, o número de elementos na matriz para converter e se deve ou não inserir quebras de linha no valor retornado.</summary>
      <param name="inArray">Uma matriz de inteiros não assinados de 8 bits.</param>
      <param name="offset">Um deslocamento em <paramref name="inArray" />.</param>
      <param name="length">O número de elementos de <paramref name="inArray" /> a serem convertidos.</param>
      <param name="options">
        <see cref="F:System.Base64FormattingOptions.InsertLineBreaks" /> para inserir uma quebra de linha a cada 76 caracteres, ou <see cref="F:System.Base64FormattingOptions.None" /> para não inserir quebras de linha.</param>
      <returns>A representação de cadeia de caracteres em base 64 de elementos <paramref name="length" /> de <paramref name="inArray" />, começando na posição <paramref name="offset" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="inArray" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="length" /> é negativo.
- ou -
A soma de <paramref name="offset" /> e <paramref name="length" /> é maior que o tamanho de <paramref name="inArray" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> não é um valor <see cref="T:System.Base64FormattingOptions" /> válido.</exception>
    </member>
    <member name="M:System.Convert.ToBase64String(System.ReadOnlySpan{System.Byte},System.Base64FormattingOptions)">
      <summary>Converte os números inteiros sem sinal de 8 bits dentro do intervalo somente leitura especificado em sua representação de cadeia de caracteres equivalente codificada com dígitos de base 64. Opcionalmente, você pode especificar se deseja inserir quebras de linha no valor retornado.</summary>
      <param name="bytes">Um intervalo somente leitura de números inteiros sem sinal de 8 bits.</param>
      <param name="options">Um dos valores de enumeração que especifica se é necessário inserir quebras de linha no valor retornado. O valor padrão é <see cref="F:System.Base64FormattingOptions.None" />.</param>
      <returns>A representação de cadeia de caracteres em base 64 dos elementos em <paramref name="inArray" />. Se o comprimento de <paramref name="bytes" /> for 0, uma cadeia de caracteres vazia será retornada.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> não é um valor <see cref="T:System.Base64FormattingOptions" /> válido.</exception>
      <exception cref="T:System.OutOfMemoryException">O comprimento de saída era maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Boolean)">
      <summary>Retorna o valor booliano especificado. Nenhuma conversão real é executada.</summary>
      <param name="value">O valor booliano a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Char)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um valor booliano equivalente.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla em um valor booliano equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado para um valor booliano equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object)">
      <summary>Converte o valor de um objeto especificado em um valor booliano equivalente.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>
        <see langword="true" /> ou <see langword="false" />, que reflete o valor retornado ao invocar o método <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> para o tipo subjacente de <paramref name="value" />. Se <paramref name="value" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> é uma cadeia de caracteres que não é igual a <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
Não há suporte para a conversão de <paramref name="value" /> em um <see cref="T:System.Boolean" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um valor booliano equivalente, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>
        <see langword="true" /> ou <see langword="false" />, que reflete o valor retornado ao invocar o método <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> para o tipo subjacente de <paramref name="value" />. Se <paramref name="value" /> for <see langword="null" />, o método retornará <see langword="false" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> é uma cadeia de caracteres que não é igual a <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
Não há suporte para a conversão de <paramref name="value" /> em um <see cref="T:System.Boolean" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples em um valor booliano equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um valor lógico para seu equivalente booliano.</summary>
      <param name="value">Uma cadeia de caracteres que contém o valor de <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> for igual a <see cref="F:System.Boolean.TrueString" />, ou <see langword="false" /> se <paramref name="value" /> for igual a <see cref="F:System.Boolean.FalseString" /> ou <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é igual a <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um valor lógico para seu equivalente booliano, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Uma cadeia de caracteres que contém o valor de <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura. Este parâmetro é ignorado.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> for igual a <see cref="F:System.Boolean.TrueString" />, ou <see langword="false" /> se <paramref name="value" /> for igual a <see cref="F:System.Boolean.FalseString" /> ou <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é igual a <see cref="F:System.Boolean.TrueString" /> ou <see cref="F:System.Boolean.FalseString" />.</exception>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToBoolean(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um valor booliano equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>
        <see langword="true" /> caso <paramref name="value" /> não seja zero; do contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Byte)">
      <summary>Retorna o inteiro sem sinal de 8 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToByte(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" /> ou menor que <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" /> ou menor que <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object)">
      <summary>Converte o valor do objeto especificado para um inteiro sem sinal de 8 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />, ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">O <paramref name="value" /> não está no formato de propriedade para um valor <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa <see cref="T:System.IConvertible" />.
- ou -
Não há suporte à conversão do <paramref name="value" /> para o tipo <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 8 bits, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />, ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">O <paramref name="value" /> não está no formato de propriedade para um valor <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa <see cref="T:System.IConvertible" />.
- ou -
Não há suporte à conversão do <paramref name="value" /> para o tipo <see cref="T:System.Byte" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.SByte)">
      <summary>Converte o valor do número inteiro com sinal de 8 bits especificado em um número inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">Um número de ponto flutuante de precisão simples.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" /> ou menor que <see cref="F:System.Byte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />, ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 8 bits equivalente, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />, ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro sem sinal de 8 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número sem sinal de base 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.Byte.MinValue" /> ou maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToByte(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro sem sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Byte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Boolean)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado em seu caractere Unicode equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.Char)">
      <summary>Retorna o valor do caractere Unicode especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O caractere Unicode a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Decimal)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Double)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em seu caractere Unicode equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em seu caractere Unicode equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" /> ou maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em seu caractere Unicode equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" /> ou maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object)">
      <summary>Converte o valor do objeto especificado em um caractere Unicode.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <returns>Um caractere Unicode equivalente ao valor ou <see cref="F:System.Char.MinValue" /> se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é uma cadeia de caracteres nula.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
Não há suporte para a conversão de <paramref name="value" /> em um <see cref="T:System.Char" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" /> ou maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado para o caractere Unicode equivalente usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" /> ou <see cref="F:System.Char.MinValue" />, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é uma cadeia de caracteres nula.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
Não há suporte para a conversão de <paramref name="value" /> em um <see cref="T:System.Char" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" /> ou maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no caractere Unicode equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que <see cref="F:System.Char.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.Single)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String)">
      <summary>Converte o primeiro caractere de uma cadeia de caracteres especificada em um caractere Unicode.</summary>
      <param name="value">Uma cadeia de caracteres de tamanho 1.</param>
      <returns>Um caractere Unicode que é equivalente ao primeiro e único caractere em <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O tamanho de <paramref name="value" /> não é 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
      <summary>Converte o primeiro caractere da cadeia de caracteres especificada em um caractere Unicode, usando informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres de tamanho 1 ou <see langword="null" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura. Este parâmetro é ignorado.</param>
      <returns>Um caractere Unicode que é equivalente ao primeiro e único caractere em <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">O tamanho de <paramref name="value" /> não é 1.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no caractere Unicode equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado no caractere Unicode equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToChar(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em seu caractere Unicode equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um caractere Unicode equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Char.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Boolean)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Byte)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Char)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.DateTime)">
      <summary>Retorna o objeto <see cref="T:System.DateTime" /> especificado; nenhuma conversão real é executada.</summary>
      <param name="value">Um valor de data e hora.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Decimal)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O número a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Double)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor do ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int16)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int32)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Int64)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object)">
      <summary>Converte o valor do objeto especificado em um objeto <see cref="T:System.DateTime" />.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>A data e hora equivalentes do valor de <paramref name="value" /> ou a data e hora equivalentes de <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um valor de data e hora válido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um objeto <see cref="T:System.DateTime" />, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A data e hora equivalentes do valor de <paramref name="value" /> ou a data e hora equivalentes de <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um valor de data e hora válido.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.SByte)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.Single)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor do ponto flutuante de precisão simples a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de uma data e hora em um valor de data e hora equivalente.</summary>
      <param name="value">A representação de cadeia de caracteres de uma data e hora.</param>
      <returns>A data e hora equivalentes do valor de <paramref name="value" /> ou a data e hora equivalentes de <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é uma cadeia de caracteres de data e hora formatada corretamente.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em uma data e hora equivalentes, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém uma data e hora a ser convertida.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A data e hora equivalentes do valor de <paramref name="value" /> ou a data e hora equivalentes de <see cref="F:System.DateTime.MinValue" /> se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é uma cadeia de caracteres de data e hora formatada corretamente.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt16)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt32)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDateTime(System.UInt64)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Boolean)">
      <summary>Converte o valor booliano especificado para o número decimal equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no número decimal equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>O número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Char)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Decimal)">
      <summary>Retorna o número decimal especificado; nenhuma conversão real é executada.</summary>
      <param name="value">Um número decimal.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de dupla precisão para um número decimal equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Decimal.MaxValue" /> ou menor que <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object)">
      <summary>Converte o valor do objeto especificado em um número decimal equivalente.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um número decimal equivalente a <paramref name="value" /> ou 0 (zero) se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Decimal.MinValue" /> ou maior que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um número decimal equivalente, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número decimal equivalente a <paramref name="value" /> ou 0 (zero) se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Decimal.MinValue" /> ou maior que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no número decimal equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples para um número decimal equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Decimal.MaxValue" /> ou menor que <see cref="F:System.Decimal.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número para um número decimal equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém um número a ser convertido.</param>
      <returns>Um número decimal equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Decimal.MinValue" /> ou maior que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um número decimal equivalente, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Uma cadeia de caracteres que contém um número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número decimal equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Decimal.MinValue" /> ou maior que <see cref="F:System.Decimal.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>O número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDecimal(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um número decimal equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um número decimal equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Boolean)">
      <summary>Converte o valor booliano especificado no número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado para um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Char)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Double)">
      <summary>Retorna o número de ponto flutuante de precisão dupla especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int32)">
      <summary>Converte o valor do inteiro com sinal especificado de 32 bits em um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object)">
      <summary>Converte o valor do objeto especificado em um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" /> ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Double.MinValue" /> ou maior que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um número de ponto flutuante de precisão dupla, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" /> ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Double.MinValue" /> ou maior que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>O inteiro com sinal de 8 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla que é equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Double.MinValue" /> ou maior que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
      <summary>Converte a representação da cadeia de caracteres especificada de um número em um número de ponto flutuante de precisão dupla equivalente, usando as informações de formatação específicas da cultura.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número de ponto flutuante de precisão dupla que é equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Double.MinValue" /> ou maior que <see cref="F:System.Double.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado para um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToDouble(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um número de ponto flutuante de precisão dupla equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão dupla equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" /> ou menor que <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" /> ou menor que <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int16)">
      <summary>Retorna o inteiro com sinal de 16 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro com sinal de 16 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>O inteiro com sinal de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" /> ou menor que <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" /> ou menor que <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 16 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 16 bits, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato apropriado para um tipo <see cref="T:System.Int16" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt16(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" /> ou menor que <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 16 bits equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada para um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro com sinal de 16 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.Int16.MinValue" /> ou maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt16(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro com sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Boolean)">
      <summary>Converte o valor booliano especificado para o inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" /> ou menor que <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" /> ou menor que <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um valor com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int32)">
      <summary>Retorna o inteiro com sinal de 32 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro com sinal de 32 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" /> ou menor que <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object)">
      <summary>Converte o valor do objeto especificado para um inteiro com sinal de 32 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />, ou zero, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 32 bits, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um número inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" /> ou menor que <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 32 bits equivalente, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada para um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.Int32.MinValue" /> ou maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt32(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro com sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int64.MaxValue" /> ou menor que <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int64.MaxValue" /> ou menor que <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Int64)">
      <summary>Retorna o inteiro com sinal de 64 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">Um inteiro com sinal de 64 bits.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 64 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />, ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 64 bits, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />, ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um número inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int64.MaxValue" /> ou menor que <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém um número a ser convertido.</param>
      <returns>Um inteiro assinado de 64 bits equivalente ao número em <paramref name="value" />, ou 0 (zero) caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 64 bits equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro assinado de 64 bits equivalente ao número em <paramref name="value" />, ou 0 (zero) caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada para um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro assinado de 64 bits equivalente ao número em <paramref name="value" />, ou 0 (zero) caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.Int64.MinValue" /> ou maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToInt64(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro com sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.Int64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Boolean)">
      <summary>Converte o valor booliano especificado para o inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 8 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente a <paramref name="value" /> ou zero, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro com sinal de 8 bits, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente a <paramref name="value" /> ou zero, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.SByte)">
      <summary>Retorna o inteiro com sinal de 8 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToSByte(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro com sinal de 8 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se o valor for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro com sinal de 8 bits equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada para um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro com sinal de 8 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.SByte.MinValue" /> ou maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSByte(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro com sinal de 8 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.SByte.MaxValue" /> ou menor que <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Boolean)">
      <summary>Converte o valor booliano especificado no número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Char)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Decimal)">
      <summary>Converte o valor do número decimal especificado para um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.
<paramref name="value" /> é arredondado usando o arredondamento mais próximo. Por exemplo, quando arredondado para duas casas decimais, o valor 2.345 torna-se 2.34 e 2.355 torna-se o valor 2.36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.
<paramref name="value" /> é arredondado usando o arredondamento mais próximo. Por exemplo, quando arredondado para duas casas decimais, o valor 2.345 torna-se 2.34 e 2.355 torna-se o valor 2.36.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object)">
      <summary>Converte o valor do objeto especificado em um número de ponto flutuante de precisão simples.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um número de ponto flutuante de precisão simples que é equivalente a <paramref name="value" /> ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Single.MinValue" /> ou maior que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um número de ponto flutuante de precisão simples, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número de ponto flutuante de precisão simples que é equivalente a <paramref name="value" /> ou zero se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa <see cref="T:System.IConvertible" />.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Single.MinValue" /> ou maior que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro assinado de 8 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.Single)">
      <summary>Retorna o número de ponto flutuante de precisão simples especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples que é equivalente ao número em <paramref name="value" /> ou 0 (zero) se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Single.MinValue" /> ou maior que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres de um número especificada em um número de ponto flutuante de precisão simples equivalente, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um número de ponto flutuante de precisão simples que é equivalente ao número em <paramref name="value" /> ou 0 (zero) se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não é um número em um formato válido.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.Single.MinValue" /> ou maior que <see cref="F:System.Single.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToSingle(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um número de ponto flutuante de precisão simples equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um número de ponto flutuante de precisão simples equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean)">
      <summary>Converte o valor booliano especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
      <summary>Converte o valor booliano especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <param name="provider">Uma instância de um objeto. Este parâmetro é ignorado.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado em sua representação de cadeia de caracteres equivalente, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
      <summary>Converte o valor de um inteiro sem sinal de 8 bits em sua representação de cadeia de caracteres equivalente de uma base especificada.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <param name="toBase">A base do valor de retorno, que deve ser 2, 8, 10 ou 16.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" /> na base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> não é 2, 8, 10 ou 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
      <summary>Converte o valor do caractere Unicode especificado em sua representação de cadeia de caracteres equivalente, usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura. Este parâmetro é ignorado.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime)">
      <summary>Converte o valor do <see cref="T:System.DateTime" /> especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
      <summary>Converte o valor do <see cref="T:System.DateTime" /> especificado na representação de cadeia de caracteres equivalente usando as informações de formatação específicas da cultura determinadas.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal)">
      <summary>Converte o valor do número decimal especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
      <summary>Converte o valor do número decimal especificado na representação de cadeia de caracteres equivalente usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado em sua representação de cadeia de caracteres equivalente usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
      <summary>Converte o valor de um inteiro com sinal de 16 bits em sua representação de cadeia de caracteres equivalente em uma base especificada.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <param name="toBase">A base do valor de retorno, que deve ser 2, 8, 10 ou 16.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" /> na base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> não é 2, 8, 10 ou 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em sua representação de cadeia de caracteres equivalente usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
      <summary>Converte o valor de um inteiro com sinal de 32 bits na representação de cadeia de caracteres equivalente a ele em uma base especificada.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <param name="toBase">A base do valor de retorno, que deve ser 2, 8, 10 ou 16.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" /> na base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> não é 2, 8, 10 ou 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado na representação de cadeia de caracteres equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
      <summary>Converte o valor de um inteiro com sinal de 64 bits na representação de cadeia de caracteres equivalente a ele em uma base especificada.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <param name="toBase">A base do valor de retorno, que deve ser 2, 8, 10 ou 16.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" /> na base <paramref name="toBase" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="toBase" /> não é 2, 8, 10 ou 16.</exception>
    </member>
    <member name="M:System.Convert.ToString(System.Object)">
      <summary>Converte o valor do objeto especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">Um objeto que fornece o valor a ser convertido ou <see langword="null" />.</param>
      <returns>A representação de cadeia de caracteres de <paramref name="value" />, ou <see cref="F:System.String.Empty" /> se <paramref name="value" /> for <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado na representação de cadeia de caracteres equivalente usando as informações de formatação específicas da cultura especificadas.</summary>
      <param name="value">Um objeto que fornece o valor a ser convertido ou <see langword="null" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação de cadeia de caracteres de <paramref name="value" />, ou <see cref="F:System.String.Empty" /> se <paramref name="value" /> for um objeto cujo valor é <see langword="null" />. Se <paramref name="value" /> for <see langword="null" />, o método retornará <see langword="null" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado em sua representação de cadeia de caracteres equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em sua representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples em sua representação de cadeia de caracteres equivalente, usando as informações de formatação específicas da cultura.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String)">
      <summary>Retorna a instância de cadeia de caracteres especificada; nenhuma conversão real é executada.</summary>
      <param name="value">A cadeia de caracteres a ser retornada.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
      <summary>Retorna a instância de cadeia de caracteres especificada; nenhuma conversão real é executada.</summary>
      <param name="value">A cadeia de caracteres a ser retornada.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura. Este parâmetro é ignorado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado em uma representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado na representação de cadeia de caracteres equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado na representação de cadeia de caracteres equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado na representação de cadeia de caracteres equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado na representação de cadeia de caracteres equivalente, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>A representação da cadeia de caracteres de <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>O inteiro sem sinal de 16 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado no inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 16 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro sem sinal de 16 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 16 bits, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 16 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 16 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro sem sinal de 16 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 16 bits equivalente, usando as informações específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 16 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro sem sinal de 16 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt16.MinValue" /> ou maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt16)">
      <summary>Retorna o inteiro sem sinal de 16 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro sem sinal de 16 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt16(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro sem sinal de 16 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro não assinado de 16 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.UInt16.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 32 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 32 bits, usando as informações de formatação específicas da cultura especificada.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" /> ou zero caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 32 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 32 bits equivalente, usando as informações específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente ao número em <paramref name="value" />, ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt32.MinValue" /> ou maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt32)">
      <summary>Retorna o inteiro sem sinal de 32 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.ToUInt32(System.UInt64)">
      <summary>Converte o valor do inteiro sem sinal de 64 bits especificado em um inteiro sem sinal de 32 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 32 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é maior que <see cref="F:System.UInt32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Boolean)">
      <summary>Converte o valor booliano especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O valor booliano a ser convertido.</param>
      <returns>O número 1 caso <paramref name="value" /> seja <see langword="true" />; do contrário, 0.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Byte)">
      <summary>Converte o valor do inteiro sem sinal de 8 bits especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro com sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Char)">
      <summary>Converte o valor do caractere Unicode especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O caractere Unicode a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.DateTime)">
      <summary>A chamada desse método sempre lança <see cref="T:System.InvalidCastException" />.</summary>
      <param name="value">O valor de data e tempo a ser convertido.</param>
      <returns>Não há suporte para esta conversão. Nenhum valor é retornado.</returns>
      <exception cref="T:System.InvalidCastException">Não há suporte para esta conversão.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Decimal)">
      <summary>Converte o valor do número decimal especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O número decimal a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Double)">
      <summary>Converte o valor do número de ponto flutuante de precisão dupla especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão dupla a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int16)">
      <summary>Converte o valor do inteiro com sinal de 16 bits especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int32)">
      <summary>Converte o valor do inteiro com sinal de 32 bits especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 32 bits a converter.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Int64)">
      <summary>Converte o valor do inteiro com sinal de 64 bits especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 64 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 64 bits.</summary>
      <param name="value">Um objeto que implementa a interface <see cref="T:System.IConvertible" /> ou <see langword="null" />.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" /> ou zero, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
      <summary>Converte o valor do objeto especificado em um inteiro sem sinal de 64 bits, usando as informações de formatação específicas à cultura especificadas.</summary>
      <param name="value">Um objeto que implementa a interface do <see cref="T:System.IConvertible" />.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" /> ou zero, se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não está em um formato adequado.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="value" /> não implementa a interface <see cref="T:System.IConvertible" />.
- ou -
A conversão não é suportada.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.SByte)">
      <summary>Converte o valor do inteiro com sinal de 8 bits especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro com sinal de 8 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.Single)">
      <summary>Converte o valor do número de ponto flutuante de precisão simples especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O número de ponto flutuante de precisão simples a ser convertido.</param>
      <returns>
        <paramref name="value" />, arredondado para o próximo inteiro sem sinal de 64 bits. Caso <paramref name="value" /> esteja entre dois números inteiros, o número par é retornado; ou seja, 4,5 é convertido em 4 e 5,5 é convertido em 6.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é menor que zero ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <returns>Um inteiro assinado de 64 bits equivalente ao número em <paramref name="value" />, ou 0 (zero) caso <paramref name="value" /> seja <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
      <summary>Converte a representação de cadeia de caracteres especificada de um número em um inteiro sem sinal de 64 bits equivalente, usando as informações específicas à cultura especificadas.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="provider">Um objeto que fornece informações de formatação específicas da cultura.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> não consiste em um sinal opcional seguido de uma sequência de dígitos (de 0 a 9).</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
      <summary>Converte a representação de cadeia de caracteres de um número em uma base especificada em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">Uma cadeia de caracteres que contém o número a ser convertido.</param>
      <param name="fromBase">A base do número em <paramref name="value" />, que deve ser 2, 8, 10 ou 16.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente ao número em <paramref name="value" /> ou 0 (zero), se <paramref name="value" /> for <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="fromBase" /> não é 2, 8, 10 ou 16.
- ou -
<paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> contém um caractere que não é um dígito válido na base especificada por <paramref name="fromBase" />. A mensagem de exceção indica que não há dígitos a serem convertidos caso o primeiro caractere em <paramref name="value" /> seja inválido; do contrário, a mensagem indica que <paramref name="value" /> contém caracteres à direita inválidos.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="value" />, que representa um número não assinado de base não 10, é prefixado com um sinal negativo.
- ou -
<paramref name="value" /> representa um número que é menor que <see cref="F:System.UInt64.MinValue" /> ou maior que <see cref="F:System.UInt64.MaxValue" />.</exception>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt16)">
      <summary>Converte o valor do inteiro sem sinal de 16 bits especificado no inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro não assinado de 16 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt32)">
      <summary>Converte o valor do inteiro sem sinal de 32 bits especificado em um inteiro sem sinal de 64 bits equivalente.</summary>
      <param name="value">O inteiro sem sinal de 32 bits a ser convertido.</param>
      <returns>Um inteiro sem sinal de 64 bits equivalente a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Convert.ToUInt64(System.UInt64)">
      <summary>Retorna o inteiro sem sinal de 64 bits especificado; nenhuma conversão real é executada.</summary>
      <param name="value">O inteiro sem sinal de 64 bits a ser retornado.</param>
      <returns>
        <paramref name="value" /> é retornado inalterado.</returns>
    </member>
    <member name="M:System.Convert.TryFromBase64Chars(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Int32@)">
      <summary>Tenta converter o intervalo especificado contendo uma representação de cadeia de caracteres codificada com dígitos de base 64 em um intervalo de números inteiros sem sinal de 8 bits.</summary>
      <param name="chars">Um intervalo que contém a representação da cadeia de caracteres codificada com dígitos de base 64.</param>
      <param name="bytes">Quando esse método retorna <see langword="true" />, os números inteiros sem sinal de 8 bits convertidos. Quando esse método retorna <see langword="false" />, o intervalo permanece inalterado ou contém uma conversão incompleta de <paramref name="chars" />, até o último caractere válido.</param>
      <param name="bytesWritten">Quando esse método é retornado, o número de bytes que foram gravados em <paramref name="bytes" />.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Convert.TryFromBase64String(System.String,System.Span{System.Byte},System.Int32@)">
      <summary>Tenta converter a representação de cadeia de caracteres codificada com dígitos de base 64 em um intervalo de números inteiros sem sinal de 8 bits.</summary>
      <param name="s">A representação da cadeia de caracteres codificada com dígitos de base 64.</param>
      <param name="bytes">Quando esse método retorna <see langword="true" />, os números inteiros sem sinal de 8 bits convertidos. Quando esse método retorna <see langword="false" />, o intervalo permanece inalterado ou contém uma conversão incompleta de <paramref name="s" />, até o último caractere válido.</param>
      <param name="bytesWritten">Quando esse método é retornado, o número de bytes que foram gravados em <paramref name="bytes" />.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Convert.TryToBase64Chars(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Int32@,System.Base64FormattingOptions)">
      <summary>Tenta converter os números inteiros sem sinal de 8 bits dentro do intervalo somente leitura especificado na representação deles de cadeia de caracteres equivalente codificada com dígitos de base 64. Opcionalmente, você pode especificar se deseja inserir quebras de linha no valor retornado.</summary>
      <param name="bytes">Um intervalo somente leitura de números inteiros sem sinal de 8 bits.</param>
      <param name="chars">Quando esse método retorna <see langword="true" />, um intervalo contendo a representação da cadeia de caracteres em base 64 dos elementos em <paramref name="bytes" />. Se o comprimento de <paramref name="bytes" /> for 0, ou quando o método retornar <paramref name="false" />, nada será gravado nesse parâmetro.</param>
      <param name="charsWritten">Quando esse método é retornado, o número total de caracteres gravados em <paramref name="chars" />.</param>
      <param name="options">Um dos valores de enumeração que especifica se é necessário inserir quebras de linha no valor retornado. O valor padrão é <see cref="F:System.Base64FormattingOptions.None" />.</param>
      <returns>
        <see langword="true" /> se a conversão for bem-sucedida; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> não é um valor <see cref="T:System.Base64FormattingOptions" /> válido.</exception>
    </member>
    <member name="T:System.Diagnostics.Stopwatch">
      <summary>Fornece um conjunto de métodos e propriedades que você pode usar para medir com precisão o tempo decorrido.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Diagnostics.Stopwatch" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.Elapsed">
      <summary>Obtém o tempo total decorrido, medido pela instância atual.</summary>
      <returns>Um <see cref="T:System.TimeSpan" /> somente leitura que representa o tempo total decorrido, medido pela instância atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedMilliseconds">
      <summary>Obtém o tempo total decorrido, medido pela instância atual, em milissegundos.</summary>
      <returns>Um inteiro longo somente leitura que representa o número total de milissegundos medidos pela instância atual.</returns>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.ElapsedTicks">
      <summary>Obtém o tempo total decorrido, medido pela instância atual, em tiques do temporizador.</summary>
      <returns>Um inteiro longo somente leitura que representa o número total de tiques do temporizador medidos pela instância atual.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.Frequency">
      <summary>Obtém a frequência do temporizador como o número de tiques por segundo. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.GetTimestamp">
      <summary>Obtém o número de tiques atual no mecanismo de temporizador.</summary>
      <returns>Um inteiro longo que representa o valor do contador de tiques do mecanismo de temporizador subjacente.</returns>
    </member>
    <member name="F:System.Diagnostics.Stopwatch.IsHighResolution">
      <summary>Indica se o temporizador é baseado em um contador de desempenho de alta resolução. Este campo é somente leitura.</summary>
    </member>
    <member name="P:System.Diagnostics.Stopwatch.IsRunning">
      <summary>Obtém um valor que indica se o temporizador de <see cref="T:System.Diagnostics.Stopwatch" /> está em execução.</summary>
      <returns>
        <see langword="true" /> se a instância de <see cref="T:System.Diagnostics.Stopwatch" /> estiver em execução e medindo o tempo decorrido com relação a um intervalo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Reset">
      <summary>Interrompe a medida de intervalo de tempo e redefine o tempo decorrido para zero.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Restart">
      <summary>Interrompe a medida de tempo de intervalo, redefine o tempo decorrido para zero e começa a medir o tempo decorrido.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Start">
      <summary>Inicia ou retoma a medição do tempo decorrido de um intervalo.</summary>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.StartNew">
      <summary>Inicializa uma nova instância <see cref="T:System.Diagnostics.Stopwatch" />, define a propriedade de tempo decorrido como zero e começa a medir o tempo decorrido.</summary>
      <returns>Um <see cref="T:System.Diagnostics.Stopwatch" /> que acabou de iniciar a medição de tempo decorrido.</returns>
    </member>
    <member name="M:System.Diagnostics.Stopwatch.Stop">
      <summary>Para a medição do tempo decorrido de um intervalo.</summary>
    </member>
    <member name="T:System.Environment">
      <summary>Fornece informações sobre e significa que para manipular, o ambiente atual e a plataforma. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Obtém a linha de comando para esse processo.</summary>
      <returns>Uma cadeia de caracteres que contém os argumentos de linha de comando.</returns>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Obtém ou define o caminho totalmente qualificado do diretório de trabalho atual.</summary>
      <returns>Uma cadeia de caracteres que contém um caminho de diretório.</returns>
      <exception cref="T:System.ArgumentException">Tentativa de definir como uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">Tentativa de definir como <see langword="null." /></exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Tentativa de definir um caminho local que não pode ser encontrado.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão apropriada.</exception>
    </member>
    <member name="P:System.Environment.CurrentManagedThreadId">
      <summary>Obtém um identificador exclusivo para o thread gerenciado atual.</summary>
      <returns>Um inteiro que representa um identificador exclusivo para esse thread gerenciado.</returns>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Encerra esse processo e retorna um código de saída para o sistema operacional.</summary>
      <param name="exitCode">O código de saída para retornar para o sistema operacional. Use 0 (zero) para indicar que o processo foi concluído com êxito.</param>
      <exception cref="T:System.Security.SecurityException">O chamador não tem permissão de segurança suficiente para executar esta função.</exception>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Obtém ou define o código de saída do processo.</summary>
      <returns>Um inteiro com sinal de 32 bits que contém o código de saída. O valor padrão é 0 (zero), que indica que o processo foi concluído com êxito.</returns>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Substitui o nome de cada variável de ambiente inserida na cadeia de caracteres especificada com o equivalente de cadeia de caracteres do valor da variável e, em seguida, retorna a cadeia de caracteres resultante.</summary>
      <param name="name">Uma cadeia de caracteres que contém os nomes de zero ou mais variáveis de ambiente. Cada variável de ambiente é delimitado pelo o caractere de sinal de porcentagem (%).</param>
      <returns>Uma cadeia de caracteres com cada variável de ambiente substituída por seu valor.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Um processo é encerrado imediatamente depois de gravar uma mensagem no log de eventos dos aplicativos do Windows e, em seguida, inclui a mensagem no relatório de erros para a Microsoft.</summary>
      <param name="message">Uma mensagem que explica por que o processo foi encerrado ou <see langword="null" /> se nenhuma explicação for fornecida.</param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>Um processo é encerrado imediatamente depois de gravar uma mensagem no log de eventos do Aplicativo do Windows e, em seguida, inclui a mensagem e as informações de exceção no relatório de erros para a Microsoft.</summary>
      <param name="message">Uma mensagem que explica por que o processo foi encerrado ou <see langword="null" /> se nenhuma explicação for fornecida.</param>
      <param name="exception">Uma exceção que representa o erro que causou o encerramento. Essa geralmente é a exceção em um bloco <see langword="catch" />.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Retorna uma matriz de cadeia de caracteres que contém os argumentos de linha de comando para o processo atual.</summary>
      <returns>Uma matriz de cadeia de caracteres em que cada elemento contém um argumento de linha de comando. O primeiro elemento é o nome do arquivo executável e os seguintes zero ou mais elementos contêm os argumentos de linha de comando restantes.</returns>
      <exception cref="T:System.NotSupportedException">O sistema não dá suporte a argumentos de linha de comando.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Recupera o valor de uma variável de ambiente do processo atual.</summary>
      <param name="variable">O nome da variável de ambiente.</param>
      <returns>O valor da variável de ambiente especificado por <paramref name="variable" />, ou <see langword="null" />, se a variável de ambiente não for encontrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Recupera o valor de uma variável de ambiente do processo atual ou da chave do Registro do sistema operacional Windows para o usuário atual ou o computador local.</summary>
      <param name="variable">O nome de uma variável de ambiente.</param>
      <param name="target">Um dos valores de <see cref="T:System.EnvironmentVariableTarget" />. Somente <see cref="F:System.EnvironmentVariableTarget.Process" /> é compatível com o .NET Core em execução em sistemas baseados em Unix.</param>
      <returns>O valor da variável de ambiente especificada pelos parâmetros <paramref name="variable" /> e <paramref name="target" /> ou <see langword="null" /> se a variável de ambiente não for encontrada.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> não é um valor <see cref="T:System.EnvironmentVariableTarget" /> válido.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Recupera todos os nomes de variáveis de ambiente e seus valores do processo atual.</summary>
      <returns>Um dicionário que contém todos os nomes de variáveis de ambiente e seus valores. Caso contrário, um dicionário vazio se nenhuma variável de ambiente for encontrada.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação.</exception>
      <exception cref="T:System.OutOfMemoryException">O buffer está sem memória.</exception>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Recupera todos os nomes de variáveis de ambiente e seus valores do processo atual ou de uma chave do Registro do sistema operacional Windows para o usuário atual ou o computador local.</summary>
      <param name="target">Um dos valores de <see cref="T:System.EnvironmentVariableTarget" />. Somente <see cref="F:System.EnvironmentVariableTarget.Process" /> é compatível com o .NET Core em execução em sistemas baseados em Unix.</param>
      <returns>Um dicionário que contém todos os nomes de variáveis de ambiente e seus valores da fonte especificada pelo parâmetro <paramref name="target" />. Caso contrário, um dicionário vazio se nenhuma variável de ambiente for encontrada.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação para o valor especificado de <paramref name="target" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> contém um valor inválido.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Obtém o caminho para a pasta especial do sistema identificada pela enumeração especificada.</summary>
      <param name="folder">Um dos valores de enumeração que identifica uma pasta especial do sistema.</param>
      <returns>O caminho para a pasta especial do sistema especificada, se essa pasta existir fisicamente no computador; caso contrário, uma cadeia de caracteres vazia ("").
Uma pasta não existirá fisicamente se o sistema operacional não a criar, se a pasta existente foi excluída ou se a pasta for um diretório virtual, como Meu Computador, que não corresponde a um caminho físico.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> não é membro de <see cref="T:System.Environment.SpecialFolder" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Não há suporte para a plataforma atual.</exception>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Obtém o caminho para a pasta especial do sistema identificada pela enumeração especificada e usa uma opção especificada para acessar pastas especiais.</summary>
      <param name="folder">Um dos valores de enumeração que identifica uma pasta especial do sistema.</param>
      <param name="option">Um dos valores de enumeração que especifica as opções a serem usadas para acessar uma pasta especial.</param>
      <returns>O caminho para a pasta especial do sistema especificada, se essa pasta existir fisicamente no computador; caso contrário, uma cadeia de caracteres vazia ("").
Uma pasta não existirá fisicamente se o sistema operacional não a criar, se a pasta existente foi excluída ou se a pasta for um diretório virtual, como Meu Computador, que não corresponde a um caminho físico.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> não é membro de <see cref="T:System.Environment.SpecialFolder" />.
-ou-
<paramref name="options" /> não é membro de <see cref="T:System.Environment.SpecialFolderOption" />.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Não há suporte para a plataforma atual.</exception>
    </member>
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Retorna uma matriz de cadeia de caracteres que contém os nomes das unidades lógicas no computador atual.</summary>
      <returns>Uma matriz de cadeias de caracteres em que cada elemento contém o nome de uma unidade lógica. Por exemplo, se o disco rígido do computador for a primeira unidade lógica, o primeiro elemento retornado será “C:\”.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem as permissões necessárias.</exception>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Obtém um valor que indica se o domínio de aplicativo atual está sendo descarregado ou o se o CLR (Common Language Runtime) está sendo desligado.</summary>
      <returns>
        <see langword="true" /> se o domínio do aplicativo atual estiver sendo descarregado ou se o CLR estiver sendo desligado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Determina se o sistema operacional atual é um sistema operacional de 64 bits.</summary>
      <returns>
        <see langword="true" /> se o sistema operacional é de 64 bits; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Determina se o processo atual é um processo de 64 bits.</summary>
      <returns>
        <see langword="true" /> se o processo for de 64 bits; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Obtém o nome NetBIOS deste computador local.</summary>
      <returns>Uma cadeia de caracteres que contém o nome deste computador.</returns>
      <exception cref="T:System.InvalidOperationException">Não é possível obter o nome deste computador.</exception>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Obtém a cadeia de caracteres de nova linha definida para esse ambiente.</summary>
      <returns>Uma cadeia de caracteres que contém “\r\n” para plataformas não Unix ou uma cadeia de caracteres que contém “\n” para plataformas Unix.</returns>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>Obtém um objeto <see cref="T:System.OperatingSystem" /> que contém o número de versão e o identificador da plataforma atual.</summary>
      <returns>Um objeto que contém o identificador de plataforma e o número de versão.</returns>
      <exception cref="T:System.InvalidOperationException">Essa propriedade não pôde obter a versão do sistema.
-ou-
O identificador de plataforma obtido não é um membro de <see cref="T:System.PlatformID" /></exception>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Obtém o número de processadores no computador atual.</summary>
      <returns>O inteiro com sinal de 32 bits que especifica o número de processadores no computador atual. Não há nenhum padrão. Se o computador atual contiver vários grupos de processador, essa propriedade retornará o número de processadores lógicos disponíveis para uso pelo CLR (Common Language Runtime).</returns>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Cria, modifica ou exclui uma variável de ambiente armazenada no processo atual.</summary>
      <param name="variable">O nome de uma variável de ambiente.</param>
      <param name="value">O valor para atribuir a <paramref name="variable" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contém uma cadeia de caracteres de tamanho zero, um caractere zero hexadecimal inicial (0x00) ou um sinal de igual ("=").
-ou-
O tamanho de <paramref name="variable" /> ou <paramref name="value" /> é maior ou igual a 32.767 caracteres.
-ou-
Ocorreu um erro durante a execução dessa operação.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação.</exception>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Cria, modifica ou exclui uma variável de ambiente armazenada no processo atual ou na chave do Registro do sistema operacional Windows reservada para o usuário atual ou o computador local.</summary>
      <param name="variable">O nome de uma variável de ambiente.</param>
      <param name="value">O valor para atribuir a <paramref name="variable" />.</param>
      <param name="target">Um dos valores de enumeração que especifica o local da variável de ambiente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contém uma cadeia de caracteres de tamanho zero, um caractere zero hexadecimal inicial (0x00) ou um sinal de igual ("=").
-ou-
O tamanho de <paramref name="variable" /> é maior ou igual a 32.767 caracteres.
-ou-
<paramref name="target" /> não é membro da enumeração <see cref="T:System.EnvironmentVariableTarget" />.
-ou-
<paramref name="target" /> é <see cref="F:System.EnvironmentVariableTarget.Machine" /> ou <see cref="F:System.EnvironmentVariableTarget.User" /> e o tamanho de <paramref name="variable" /> é maior ou igual a 255.
-ou-
<paramref name="target" /> é <see cref="F:System.EnvironmentVariableTarget.Process" /> e o tamanho de <paramref name="value" /> é maior ou igual a 32.767 caracteres.
-ou-
Ocorreu um erro durante a execução dessa operação.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária para executar essa operação.</exception>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Especifica as constantes enumeradas usadas para recuperar os caminhos de diretório para pastas especiais do sistema.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.AdminTools">
      <summary>O diretório de sistema de arquivos que é usado para armazenar ferramentas administrativas para um usuário individual. O MMC (Console de Gerenciamento Microsoft) salvará consoles personalizados nesse diretório e será movido com o usuário. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>O diretório que serve como um repositório comum para dados específicos do aplicativo para o usuário móvel atual. Um usuário móvel trabalha em mais de um computador em uma rede. O perfil de um usuário móvel é mantido em um servidor na rede e é carregado em um sistema quando o usuário faz logon.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CDBurning">
      <summary>O diretório do sistema de arquivos que atua como uma área de preparo para os arquivos aguardando para serem gravados em um CD. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonAdminTools">
      <summary>O diretório do sistema de arquivos que contém ferramentas administrativas para todos os usuários do computador. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>O diretório que serve como um repositório comum para dados específicos do aplicativo que são usados por todos os aplicativos.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDesktopDirectory">
      <summary>O diretório do sistema de arquivos que contém os arquivos e pastas que aparecem na área de trabalho para todos os usuários. Esta pasta especial só é válida para sistemas Windows NT. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonDocuments">
      <summary>O diretório do sistema de arquivos que contém os documentos que são comuns para todos os usuários. Essa pasta especial é válida para sistemas Windows NT, Windows 95 e Windows 98 sistemas com Shfolder.dll instalado. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonMusic">
      <summary>O diretório do sistema de arquivos que serve como um repositório para os arquivos de música comuns para todos os usuários. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonOemLinks">
      <summary>Esse valor é reconhecido no Windows Vista para compatibilidade com versões anteriores, mas a pasta especial em si não é mais usada. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPictures">
      <summary>O diretório do sistema de arquivos que serve como um repositório para os arquivos de imagem comuns para todos os usuários. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>O diretório de componentes que são compartilhados entre aplicativos.
Para ter o diretório de arquivos de programas comum x86 em um sistema não x86, use o membro <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFilesX86">
      <summary>A pasta Arquivos de Programas. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonPrograms">
      <summary>Uma pasta de componentes que são compartilhados entre aplicativos. Esta pasta especial é válida apenas para os sistemas Windows NT, Windows 2000 e Windows XP. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartMenu">
      <summary>O diretório do sistema de arquivos que contém os programas e as pastas que aparecem no menu Iniciar para todos os usuários. Esta pasta especial só é válida para sistemas Windows NT. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonStartup">
      <summary>O diretório do sistema de arquivos que contém os programas que aparecem na pasta Inicialização para todos os usuários. Esta pasta especial só é válida para sistemas Windows NT. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonTemplates">
      <summary>O diretório do sistema de arquivos que contém os modelos que estão disponíveis para todos os usuários. Esta pasta especial só é válida para sistemas Windows NT.  Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonVideos">
      <summary>O diretório do sistema de arquivos que serve como um repositório para os arquivos de vídeo comuns para todos os usuários. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>O diretório que serve como um repositório comum para os cookies de Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>A área de trabalho lógica em vez do local do sistema de arquivos físico.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>O diretório usado para armazenar fisicamente os objetos de arquivo na área de trabalho. Não confunda esse diretório com a pasta da área de trabalho propriamente dita, que é uma pasta virtual.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>O diretório que serve como um repositório comum para os itens favoritos do usuário.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Fonts">
      <summary>Uma pasta virtual que contém fontes. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>O diretório que serve como um repositório comum para os itens de histórico da Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>O diretório que serve como um repositório comum para os arquivos temporários da Internet.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>O diretório que serve como um repositório comum para dados específicos do aplicativo que são usados pelo usuário que não é móvel atual.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalizedResources">
      <summary>O diretório do sistema de arquivos que contém dados do recurso localizados. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>A pasta Meu Computador. Quando passado para o método <see langword="Environment.GetFolderPath" />, o membro de enumeração <see langword="MyComputer" /> sempre produz a cadeia de caracteres vazia ("") porque nenhum caminho está definido para a pasta Meu Computador.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>A pasta Meus Documentos. Esse membro é equivalente a <see cref="F:System.Environment.SpecialFolder.Personal" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>A pasta Músicas.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>A pasta Minhas Imagens.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyVideos">
      <summary>O diretório de sistema de arquivos que serve como um repositório para vídeos que pertencem a um usuário.  Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.NetworkShortcuts">
      <summary>Um diretório do sistema de arquivos que contém os objetos de link que podem existir na pasta virtual Meus Locais de Rede. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>O diretório que serve como um repositório comum para documento.  Esse membro é equivalente a <see cref="F:System.Environment.SpecialFolder.MyDocuments" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.PrinterShortcuts">
      <summary>O diretório do sistema de arquivos que contém os objetos de link que podem existir na pasta virtual Impressoras. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>O diretório de arquivos de programa.
Em um sistema não x86, passar <see cref="F:System.Environment.SpecialFolder.ProgramFiles" /> para o método <see cref="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)" /> retorna o caminho para programas não x86. Para ter o diretório de arquivos de programas x86 em um sistema não x86, use o membro <see cref="F:System.Environment.SpecialFolder.ProgramFilesX86" />.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFilesX86">
      <summary>A pasta Arquivos de Programas x86. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>O diretório que contém os grupos de programas do usuário.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>O diretório que contém os documentos usados mais recentemente do usuário.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Resources">
      <summary>O diretório do sistema de arquivos que contém dados do recurso. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>O diretório que contém os itens de menu Enviar Para.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>O diretório que contém os itens de menu Iniciar.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>O diretório que corresponde ao grupo de programas de Inicialização do usuário. O sistema inicia esses programas sempre que um usuário faz logon ou inicia o Windows.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>O diretório System.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SystemX86">
      <summary>A pasta System do Windows. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>O diretório que serve como um repositório comum para os modelos de documento.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.UserProfile">
      <summary>A pasta do perfil do usuário. Os aplicativos não devem criar arquivos ou pastas nesse nível, eles devem colocar seus dados nos locais referenciados por <see cref="F:System.Environment.SpecialFolder.ApplicationData" />. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Windows">
      <summary>O diretório do Windows ou SYSROOT. Isso corresponde às variáveis de ambiente %windir% ou %SYSTEMROOT%. Adicionado no .NET Framework 4.</summary>
    </member>
    <member name="T:System.Environment.SpecialFolderOption">
      <summary>Especifica as opções a serem usadas para obter o caminho para uma pasta especial.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.Create">
      <summary>O caminho para a pasta será criado se ele ainda não existir.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.DoNotVerify">
      <summary>O caminho para a pasta é retornado sem verificar se o caminho existe. Se a pasta estiver localizada em uma rede, especificar essa opção poderá reduzir o tempo de retardo.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolderOption.None">
      <summary>O caminho para a pasta foi verificado. Se a pasta existir, o caminho será retornado. Se a pasta não existir, uma cadeia de caracteres vazia será retornada. Este é o comportamento padrão.</summary>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Obtém informações do rastreamento de pilha atual.</summary>
      <returns>Uma cadeia de caracteres que contém informações do rastreamento de pilha. Este valor pode ser <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Obtém o caminho totalmente qualificado do diretório do sistema.</summary>
      <returns>Uma cadeia de caracteres que contém um caminho de diretório.</returns>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Obtém o número de bytes na página de memória do sistema operacional.</summary>
      <returns>O número de bytes na página de memória do sistema.</returns>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Obtém o número de milissegundos decorridos desde a inicialização do sistema.</summary>
      <returns>Um inteiro com sinal de 32 bits que contém a quantidade de tempo em milissegundos decorrida desde a última vez em que o computador foi iniciado.</returns>
    </member>
    <member name="P:System.Environment.TickCount64">
      <summary>Obtém o número de milissegundos decorridos desde a inicialização do sistema.</summary>
      <returns>Os milissegundos decorridos desde que o sistema foi iniciado.</returns>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Obtém o nome de domínio de rede associado ao usuário atual.</summary>
      <returns>O nome de domínio de rede associado ao usuário atual.</returns>
      <exception cref="T:System.PlatformNotSupportedException">O sistema operacional não dá suporte à recuperação do nome de domínio de rede.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível recuperar o nome de domínio de rede.</exception>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Obtém um valor que indica se o processo atual está em execução no modo de interação com o usuário.</summary>
      <returns>
        <see langword="true" /> se o processo atual estiver em execução no modo de interação com o usuário; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Obtém o nome de usuário da pessoa que está conectada no momento ao sistema operacional.</summary>
      <returns>O nome de usuário da pessoa que fez logon no sistema operacional.</returns>
    </member>
    <member name="P:System.Environment.Version">
      <summary>Obtém um objeto <see cref="T:System.Version" /> que descreve os números de versão principal, secundária, build e de revisão do Common Language Runtime.</summary>
      <returns>Um objeto que exibe a versão do Common Language Runtime.</returns>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Obtém a quantidade de memória física mapeada para o contexto do processo.</summary>
      <returns>Um inteiro de 64 bits com sinal que contém o número de bytes de memória física mapeado para o contexto do processo.</returns>
    </member>
    <member name="T:System.EnvironmentVariableTarget">
      <summary>Especifica o local em que uma variável de ambiente é armazenada ou recuperada em uma operação set ou get.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Machine">
      <summary>A variável de ambiente é armazenada ou recuperada da chave <see langword="HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment" /> no Registro do sistema operacional Windows. Esse valor deve ser usado em implementações do .NET em execução apenas em sistemas do Windows.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.Process">
      <summary>A variável de ambiente é armazenada ou recuperada do bloco de ambiente associado ao processo atual.</summary>
    </member>
    <member name="F:System.EnvironmentVariableTarget.User">
      <summary>A variável de ambiente é armazenada ou recuperada da chave <see langword="HKEY_CURRENT_USER\Environment" /> no Registro do sistema operacional Windows. Esse valor deve ser usado em implementações do .NET em execução apenas em sistemas do Windows.</summary>
    </member>
    <member name="T:System.Globalization.GlobalizationExtensions">
      <summary>Fornece métodos de extensão relacionados à globalização.</summary>
    </member>
    <member name="M:System.Globalization.GlobalizationExtensions.GetStringComparer(System.Globalization.CompareInfo,System.Globalization.CompareOptions)">
      <summary>Retorna um objeto <see cref="T:System.StringComparer" /> com base nas regras de comparação de cadeia de caracteres que fazem distinção entre culturas de um objeto <see cref="T:System.Globalization.CompareInfo" /> especificado.</summary>
      <param name="compareInfo">Um objeto que dá suporte à comparação de cadeia de caracteres que faz distinção entre culturas.</param>
      <param name="options">Um valor que define como as cadeias de caracteres devem ser comparadas. <paramref name="options" /> é o valor de enumeração <see cref="F:System.Globalization.CompareOptions.Ordinal" />, o valor de enumeração <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> ou uma combinação bit a bit de um ou mais dos seguintes valores: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> e <see cref="F:System.Globalization.CompareOptions.StringSort" />.</param>
      <returns>Um objeto que pode ser usado para executar comparações de cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="compareInfo" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="options" /> é inválido.</exception>
    </member>
    <member name="T:System.IO.BinaryReader">
      <summary>Lê os tipos de dados primitivos como valores binários em uma codificação específica.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryReader" /> com base no fluxo especificado e usando a codificação UTF-8.</summary>
      <param name="input">O fluxo de entrada.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte para leitura, é <see langword="null" /> ou já está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryReader" /> com base no fluxo especificado e na codificação de caracteres.</summary>
      <param name="input">O fluxo de entrada.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte para leitura, é <see langword="null" /> ou já está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryReader" /> com base no fluxo e na codificação de caracteres especificados e, opcionalmente, deixa o fluxo aberto.</summary>
      <param name="input">O fluxo de entrada.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="leaveOpen">
        <see langword="true" /> para deixar o fluxo aberto após o objeto <see cref="T:System.IO.BinaryReader" /> ser descartado; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte para leitura, é <see langword="null" /> ou já está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> ou <paramref name="input" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryReader.BaseStream">
      <summary>Expõe o acesso ao fluxo subjacente do <see cref="T:System.IO.BinaryReader" />.</summary>
      <returns>O fluxo subjacente associado ao <see langword="BinaryReader" />.</returns>
    </member>
    <member name="M:System.IO.BinaryReader.Close">
      <summary>Fecha o leitor atual e o fluxo subjacente.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.IO.BinaryReader" />.</summary>
    </member>
    <member name="M:System.IO.BinaryReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela classe <see cref="T:System.IO.BinaryReader" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.BinaryReader.FillBuffer(System.Int32)">
      <summary>Preenche o buffer interno com o número especificado de bytes lidos do fluxo.</summary>
      <param name="numBytes">O número de bytes a serem lidos.</param>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido antes que <paramref name="numBytes" /> pudesse ser lido.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O <paramref name="numBytes" /> solicitado é maior que o tamanho do buffer interno.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.PeekChar">
      <summary>Retorna o próximo caractere disponível e não avance a posição do caractere ou byte.</summary>
      <returns>O próximo caractere disponível ou -1 se não houver mais nenhum caractere disponível ou o fluxo não der suporte à busca.</returns>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ArgumentException">O caractere atual não pode ser decodificado no buffer de caractere interno usando o <see cref="T:System.Text.Encoding" /> selecionado para o fluxo.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read">
      <summary>Lê os caracteres do fluxo subjacente e avança a posição atual do fluxo de acordo com o <see langword="Encoding" /> usado e o caractere específico que está sendo lidos do fluxo.</summary>
      <returns>O próximo caractere do fluxo de entrada ou -1 se nenhum caractere estiver disponível no momento.</returns>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê o número especificado de bytes do fluxo, começando em um ponto especificado na matriz de bytes.</summary>
      <param name="buffer">O buffer no qual os dados serão lidos.</param>
      <param name="index">O ponto de partida no buffer no qual a leitura do buffer é iniciada.</param>
      <param name="count">O número de bytes a serem lidos.</param>
      <returns>O número de bytes lidos no <paramref name="buffer" />. Isso poderá ser menor que o número de bytes solicitado se esse número de bytes não estiver disponível, ou zero, se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.
-ou-
O número de caracteres decodificados a serem lidos é maior que <paramref name="count" />. Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Lê o número especificado de caracteres do fluxo, começando em um ponto especificado na matriz de caracteres.</summary>
      <param name="buffer">O buffer no qual os dados serão lidos.</param>
      <param name="index">O ponto de partida no buffer no qual a leitura do buffer é iniciada.</param>
      <param name="count">O número de caracteres a serem lidos.</param>
      <returns>O número total de caracteres lidos no buffer. Isso poderá ser menor que o número de caracteres solicitado se esse número de caracteres não estiver disponível no momento ou zero, se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.
-ou-
O número de caracteres decodificados a serem lidos é maior que <paramref name="count" />. Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Byte})">
      <summary>Lê uma sequência de bytes do fluxo atual e avança a posição no fluxo até o número de bytes lidos.</summary>
      <param name="buffer">Uma região da memória. Quando este método retorna, o conteúdo desta região é substituído pelos bytes lidos da fonte atual.</param>
      <returns>O número total de bytes lidos do buffer. Isso poderá ser menor que o número de bytes alocados no buffer se esses muitos bytes não estiverem disponíveis no momento, ou zero (0), se o final do fluxo tiver sido atingido.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read(System.Span{System.Char})">
      <summary>Lê, no fluxo atual, o mesmo número de caracteres que o tamanho do buffer fornecido, grava-os no buffer fornecido e avança a posição atual de acordo com o <see langword="Encoding" /> usado e o caractere específico que está sendo lido no fluxo.</summary>
      <param name="buffer">Um intervalo de caracteres. Quando este método retorna, o conteúdo desta região é substituído por caracteres lidos da fonte atual.</param>
      <returns>O número total de caracteres lidos no buffer. Isso poderá ser menor que o número de caracteres solicitado se esse número de caracteres não estiver disponível no momento ou zero, se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.Read7BitEncodedInt">
      <summary>Lê um inteiro de 32 bits em formato compactado.</summary>
      <returns>Um inteiro de 32 bits em formato compactado.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.FormatException">O fluxo está corrompido.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBoolean">
      <summary>Lê um valor <see langword="Boolean" /> do fluxo atual e avança a posição atual do fluxo em um byte.</summary>
      <returns>
        <see langword="true" /> se o byte for diferente de zero; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadByte">
      <summary>Lê o próximo byte do fluxo atual e avança a posição atual do fluxo em um byte.</summary>
      <returns>O próximo byte lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
      <summary>Lê o número especificado de bytes do fluxo atual em uma matriz de bytes e avança a posição atual pelo número de bytes.</summary>
      <param name="count">O número de bytes a serem lidos. Esse valor deve ser 0 ou um número que não seja negativo; caso contrário, uma exceção ocorrerá.</param>
      <returns>Uma matriz de bytes que contém os dados lidos do fluxo subjacente. Isso poderá ser menor que o número de bytes solicitado se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentException">O número de caracteres decodificados a serem lidos é maior que <paramref name="count" />. Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é negativo.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChar">
      <summary>Lê o caractere seguinte do fluxo atual e avança a posição atual do fluxo de acordo com o <see langword="Encoding" /> usado e o caractere específico que está sendo lido do fluxo.</summary>
      <returns>Um caractere lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ArgumentException">Um caractere alternativo foi lido.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadChars(System.Int32)">
      <summary>Lê o número especificado de caracteres do fluxo atual, retorna os dados em uma matriz de caracteres e avança a posição atual de acordo com o <see langword="Encoding" /> usado e o caractere específico que está sendo lido no fluxo.</summary>
      <param name="count">O número de caracteres a serem lidos.</param>
      <returns>Uma matriz de caracteres que contém os dados lidos do fluxo subjacente. Isso poderá ser menor do que o número de caracteres solicitado se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentException">O número de caracteres decodificados a serem lidos é maior que <paramref name="count" />. Isso poderá ocorrer se um decodificador de Unicode retornar caracteres de fallback ou um par alternativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> é negativo.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDecimal">
      <summary>Lê um valor decimal do fluxo atual e avança a posição atual do fluxo em 16 bytes.</summary>
      <returns>Um valor decimal lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadDouble">
      <summary>Lê um valor de ponto flutuante de 8 bytes do fluxo atual e avança a posição atual do fluxo em oito bytes.</summary>
      <returns>Um valor de ponto flutuante de 8 bytes lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt16">
      <summary>Lê um inteiro com sinal de 2 bytes do fluxo atual e avança a posição atual do fluxo em dois bytes.</summary>
      <returns>Um inteiro com sinal de 2 bytes lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt32">
      <summary>Lê um inteiro com sinal de 4 bytes do fluxo atual e avança a posição atual do fluxo em quatro bytes.</summary>
      <returns>Um inteiro com sinal de 4 bytes lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadInt64">
      <summary>Lê um inteiro com sinal de oito bytes do fluxo atual e avança a posição atual do fluxo em oito bytes.</summary>
      <returns>Um inteiro com sinal de oito bytes lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSByte">
      <summary>Lê um byte assinado desse fluxo e avança a posição atual do fluxo em um byte.</summary>
      <returns>Um byte assinado lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadSingle">
      <summary>Lê um valor de ponto flutuante de 4 bytes do fluxo atual e avança a posição atual do fluxo em quatro bytes.</summary>
      <returns>Um valor de ponto flutuante de 4 bytes lido do fluxo atual.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadString">
      <summary>Lê uma cadeia de caracteres do fluxo atual. A cadeia de caracteres é prefixada com o tamanho, codificado como um inteiro, sete bits por vez.</summary>
      <returns>A cadeia de caracteres que está sendo lida.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt16">
      <summary>Lê um inteiro sem sinal de 2 bytes do fluxo atual usando a codificação little-endian e avança a posição do fluxo em dois bytes.</summary>
      <returns>Um inteiro sem sinal de 2 bytes lido desse fluxo.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt32">
      <summary>Lê um inteiro sem sinal de quatro bytes do fluxo atual e avança a posição do fluxo em quatro bytes.</summary>
      <returns>Um inteiro sem sinal de 4 bytes lido desse fluxo.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryReader.ReadUInt64">
      <summary>Lê um inteiro sem sinal de 8 bytes do fluxo atual e avança a posição do fluxo em oito bytes.</summary>
      <returns>Um inteiro sem sinal de 8 bytes lido desse fluxo.</returns>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="T:System.IO.BinaryWriter">
      <summary>Grava tipos primitivos em binário em um fluxo e dá suporte à gravação de cadeias de caracteres em uma codificação específica.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryWriter" /> que é gravada no fluxo.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryWriter" /> com base no fluxo especificado e usando a codificação UTF-8.</summary>
      <param name="output">O fluxo de saída.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte à gravação ou já está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryWriter" /> com base no fluxo especificado e na codificação de caracteres.</summary>
      <param name="output">O fluxo de saída.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte à gravação ou já está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BinaryWriter" /> com base no fluxo e na codificação de caracteres especificados e, opcionalmente, deixa o fluxo aberto.</summary>
      <param name="output">O fluxo de saída.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="leaveOpen">
        <see langword="true" /> para deixar o fluxo aberto após o objeto <see cref="T:System.IO.BinaryWriter" /> ser descartado; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">O fluxo não dá suporte à gravação ou já está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.IO.BinaryWriter.BaseStream">
      <summary>Obtém o fluxo subjacente de <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>O fluxo subjacente associado ao <see langword="BinaryWriter" />.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Close">
      <summary>Fecha o <see cref="T:System.IO.BinaryWriter" /> atual e o fluxo subjacente.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose">
      <summary>Libera todos os recursos usados pela instância atual da classe <see cref="T:System.IO.BinaryWriter" />.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.BinaryWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.DisposeAsync">
      <summary>Libera de forma assíncrona todos os recursos usados pela instância atual da classe <see cref="T:System.IO.BinaryWriter" />.</summary>
      <returns>Uma tarefa que representa a operação de descarte assíncrona.</returns>
    </member>
    <member name="M:System.IO.BinaryWriter.Flush">
      <summary>Limpa todos os buffers do gravador atual e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.Null">
      <summary>Especifica um <see cref="T:System.IO.BinaryWriter" /> sem repositório de backup.</summary>
    </member>
    <member name="F:System.IO.BinaryWriter.OutStream">
      <summary>Mantém o fluxo subjacente.</summary>
    </member>
    <member name="M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)">
      <summary>Define a posição no fluxo atual.</summary>
      <param name="offset">Um deslocamento de bytes em relação a <paramref name="origin" />.</param>
      <param name="origin">Um campo de <see cref="T:System.IO.SeekOrigin" /> indicando o ponto de referência do qual a nova posição deverá ser obtida.</param>
      <returns>A posição com o fluxo atual.</returns>
      <exception cref="T:System.IO.IOException">O ponteiro do arquivo foi movido para um local inválido.</exception>
      <exception cref="T:System.ArgumentException">O valor <see cref="T:System.IO.SeekOrigin" /> é inválido.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Boolean)">
      <summary>Grava um valor <see langword="Boolean" /> de um byte no fluxo atual, com 0 representando <see langword="false" /> e 1 representando <see langword="true" />.</summary>
      <param name="value">O valor <see langword="Boolean" /> a ser gravado (0 ou 1).</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte)">
      <summary>Grava um byte sem sinal no fluxo atual e avança a posição do fluxo em um byte.</summary>
      <param name="value">O byte sem sinal a gravar.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[])">
      <summary>Grava uma matriz de bytes no fluxo subjacente.</summary>
      <param name="buffer">Uma matriz de bytes que contém os dados a serem gravados.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Grava uma região de uma matriz de bytes no fluxo atual.</summary>
      <param name="buffer">Uma matriz de bytes que contém os dados a serem gravados.</param>
      <param name="index">O índice do primeiro byte para ler do <paramref name="buffer" /> e gravar no fluxo.</param>
      <param name="count">O número de bytes para ler do <paramref name="buffer" /> e gravar no fluxo.</param>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char)">
      <summary>Grava um caractere Unicode no fluxo atual e avança a posição atual do fluxo de acordo com o <see langword="Encoding" /> usado e os caracteres específicos que estão sendo gravados no fluxo.</summary>
      <param name="ch">O caractere Unicode não alternativo a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="ch" /> é um caractere alternativo único.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo atual e avança a posição atual do fluxo de acordo com o <see langword="Encoding" /> usado e os caracteres específicos que estão sendo gravados no fluxo.</summary>
      <param name="chars">Uma matriz de caracteres que contém os dados a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma seção de uma matriz de caracteres no fluxo atual e avança a posição atual do fluxo de acordo com o <see langword="Encoding" /> usado e talvez com os caracteres específicos que estão sendo gravados no fluxo.</summary>
      <param name="chars">Uma matriz de caracteres que contém os dados a serem gravados.</param>
      <param name="index">O índice do primeiro caractere a ser lido do <paramref name="chars" /> e gravado no fluxo.</param>
      <param name="count">O número de caracteres a serem lidos do <paramref name="chars" /> e gravados no fluxo.</param>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Decimal)">
      <summary>Grava um valor decimal no fluxo atual e avança a posição do fluxo em 16 bytes.</summary>
      <param name="value">O valor decimal a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Double)">
      <summary>Grava um valor de ponto flutuante de oito bytes no fluxo atual e avança a posição do fluxo em oito bytes.</summary>
      <param name="value">O valor de ponto flutuante de oito bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int16)">
      <summary>Grava um inteiro com sinal de dois bytes no fluxo atual e avança a posição de fluxo em dois bytes.</summary>
      <param name="value">O inteiro com sinal de dois bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int32)">
      <summary>Grava um inteiro com sinal de quatro bytes no fluxo atual e avança a posição do fluxo em quatro bytes.</summary>
      <param name="value">O inteiro com sinal de quatro bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Int64)">
      <summary>Grava um inteiro com sinal de oito bytes no fluxo atual e avança a posição do fluxo em oito bytes.</summary>
      <param name="value">O inteiro com sinal de oito bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Grava um intervalo de bytes no fluxo atual.</summary>
      <param name="buffer">O intervalo de bytes a ser gravado.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Grava um intervalo de caracteres no fluxo atual e avança a posição atual do fluxo de acordo com a <see langword="Encoding" /> usada e talvez com os caracteres específicos que estão sendo gravados no fluxo.</summary>
      <param name="chars">Um intervalo de char a ser gravado.</param>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.SByte)">
      <summary>Grava um byte com sinal no fluxo atual e avança a posição do fluxo em um byte.</summary>
      <param name="value">O byte com sinal a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.Single)">
      <summary>Grava um valor de ponto flutuante de quatro bytes no fluxo atual e avança a posição do fluxo em quatro bytes.</summary>
      <param name="value">O valor de ponto flutuante de quatro bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.String)">
      <summary>Grava uma cadeia de caracteres de tamanho prefixado nesse fluxo na codificação atual do <see cref="T:System.IO.BinaryWriter" /> e avança a posição atual do fluxo de acordo com a codificação usada e os caracteres específicos que estão sendo gravados no fluxo.</summary>
      <param name="value">O valor a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt16)">
      <summary>Grava um inteiro sem sinal de dois bytes no fluxo atual e avança a posição do fluxo em dois bytes.</summary>
      <param name="value">O inteiro sem sinal de dois bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt32)">
      <summary>Grava um inteiro sem sinal de quatro bytes no fluxo atual e avança a posição do fluxo em quatro bytes.</summary>
      <param name="value">O inteiro sem sinal de quatro bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write(System.UInt64)">
      <summary>Grava um inteiro sem sinal de oito bytes no fluxo atual e avança a posição do fluxo em oito bytes.</summary>
      <param name="value">O inteiro sem sinal de oito bytes a ser gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.BinaryWriter.Write7BitEncodedInt(System.Int32)">
      <summary>Grava um inteiro de 32 bits em um formato compactado.</summary>
      <param name="value">O inteiro de 32 bits a ser gravado.</param>
      <exception cref="T:System.IO.EndOfStreamException">O final do fluxo foi atingido.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
      <exception cref="T:System.IO.IOException">O fluxo está fechado.</exception>
    </member>
    <member name="T:System.IO.BufferedStream">
      <summary>Adiciona uma camada de armazenamento em buffer para ler e gravar operações em outro fluxo. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BufferedStream" /> com o tamanho do buffer padrão de 4096 bytes.</summary>
      <param name="stream">O fluxo atual.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.#ctor(System.IO.Stream,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.BufferedStream" /> com o tamanho do buffer especificado.</summary>
      <param name="stream">O fluxo atual.</param>
      <param name="bufferSize">O tamanho do buffer em bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é negativo.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação de leitura assíncrona. (Considere o uso de <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="buffer">O buffer para ler os dados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual será iniciada a gravação da leitura de dados no fluxo.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <param name="callback">Um retorno de chamada assíncrono opcional, a ser chamado quando a leitura for concluída.</param>
      <param name="state">Um objeto fornecido pelo usuário que distingue essa solicitação de leitura assíncrona específica de outras solicitações.</param>
      <returns>Um objeto que representa a leitura assíncrona, que ainda pode estar pendente.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu uma tentativa de leitura assíncrona após o final do fluxo.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="offset" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo atual não dá suporte à operação de leitura.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação de gravação assíncrona. (Considere o uso de <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="buffer">O buffer que contém dados a serem gravados no fluxo atual.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> no qual será iniciada a cópia de bytes no fluxo atual.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <param name="callback">O método a ser chamado quando a operação de gravação assíncrona for concluída.</param>
      <param name="state">Um objeto fornecido pelo usuário que distingue essa solicitação de gravação assíncrona específica de outras solicitações.</param>
      <returns>Um objeto que faz referência à gravação assíncrona, que ainda pode estar pendente.</returns>
      <exception cref="T:System.ArgumentException">O tamanho de <paramref name="buffer" /> menos <paramref name="offset" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.BufferSize">
      <summary>Obtém o tamanho do buffer em bytes para este fluxo em buffer.</summary>
      <returns>Um inteiro que representa o tamanho do buffer em bytes.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanRead">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à leitura.</summary>
      <returns>
        <see langword="true" /> se o fluxo dá suporte à leitura; <see langword="false" /> se o fluxo está fechado ou foi aberto com acesso somente gravação.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanSeek">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à busca.</summary>
      <returns>
        <see langword="true" /> se o fluxo dá suporte à busca; <see langword="false" /> se o fluxo for fechado ou se o fluxo foi construído a partir de um identificador do sistema operacional, como um pipe ou uma saída para o console.</returns>
    </member>
    <member name="P:System.IO.BufferedStream.CanWrite">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à gravação.</summary>
      <returns>
        <see langword="true" /> se o fluxo der suporte à gravação; <see langword="false" /> se o fluxo estiver fechado ou tiver sido aberto com acesso somente leitura.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Lê os bytes do fluxo em buffer atual e grava-os em outro fluxo.</summary>
      <param name="destination">O fluxo para o qual o conteúdo do fluxo em buffer atual será copiado.</param>
      <param name="bufferSize">O tamanho do buffer. Esse valor deve ser maior que zero. O tamanho padrão é 81.920.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é negativo ou zero.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para a leitura no fluxo atual.
-ou-
<paramref name="destination" /> não dá suporte à gravação.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo atual ou <paramref name="destination" /> foi fechado antes do método <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)" /> ser chamado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os bytes do fluxo em buffer atual e grava-os em outro fluxo usando um tamanho do buffer especificado e um token de cancelamento.</summary>
      <param name="destination">O fluxo para o qual o conteúdo do fluxo em buffer atual será copiado.</param>
      <param name="bufferSize">O tamanho do buffer, em bytes. Esse valor deve ser maior que zero. O tamanho padrão é 81.920.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de cópia assíncrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.DisposeAsync">
      <summary>Libera de forma assíncrona os recursos não gerenciados usados pelo fluxo em buffer.</summary>
      <returns>Uma tarefa que representa a operação de descarte assíncrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.EndRead(System.IAsyncResult)">
      <summary>Aguarda a operação de leitura assíncrona pendente ser concluída. (Considere o uso de <see cref="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="asyncResult">A referência à solicitação assíncrona pendente que deverá ser aguardada.</param>
      <returns>O número de bytes lidos do fluxo, entre 0 (zero) e o número de bytes solicitado. Os fluxos retornam somente 0 no final do fluxo, caso contrário, eles devem ser bloqueados até que pelo menos 1 byte esteja disponível.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Este objeto <see cref="T:System.IAsyncResult" /> não foi criado chamando <see cref="M:System.IO.BufferedStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nesta classe.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.EndWrite(System.IAsyncResult)">
      <summary>Termina uma operação de gravação assíncrona e bloqueia até que a operação de E/S seja concluída. (Considere o uso de <see cref="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="asyncResult">A solicitação assíncrona pendente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Este objeto <see cref="T:System.IAsyncResult" /> não foi criado chamando <see cref="M:System.IO.BufferedStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> nesta classe.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Flush">
      <summary>Limpa todos os buffers nesse fluxo e faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.IO.IOException">O repositório ou a fonte de dados não está aberto.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Limpa todos os buffers nesse fluxo de forma assíncrona, faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente e monitora as solicitações de cancelamento.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Length">
      <summary>Obtém o tamanho do fluxo em bytes.</summary>
      <returns>O tamanho do fluxo em bytes.</returns>
      <exception cref="T:System.IO.IOException">O fluxo subjacente é <see langword="null" /> ou foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo não dá suporte à busca.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.Position">
      <summary>Define a posição no fluxo atual.</summary>
      <returns>A posição dentro do fluxo atual.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor passado para <see cref="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S, por exemplo, o fluxo ser fechado.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo não dá suporte à busca.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Copia bytes do fluxo em buffer atual para uma matriz.</summary>
      <param name="array">O buffer para o qual os bytes devem ser copiados.</param>
      <param name="offset">O deslocamento de bytes no buffer no qual será iniciada a leitura de bytes.</param>
      <param name="count">O número de bytes a serem lidos.</param>
      <returns>O número total de bytes lidos no <paramref name="array" />. Isso poderá ser menor que o número de bytes solicitado se esses muitos bytes não estiverem disponíveis no momento ou 0 se o final do fluxo tiver sido atingido antes que os dados possam ser lidos.</returns>
      <exception cref="T:System.ArgumentException">O tamanho de <paramref name="array" /> menos <paramref name="offset" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">O fluxo não está aberto ou é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para leitura no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Read(System.Span{System.Byte})">
      <summary>Copia bytes do fluxo em buffer atual para um intervalo de bytes e avança a posição no fluxo em buffer até o número de bytes lidos.</summary>
      <param name="destination">Uma região da memória. Quando este método retorna, o conteúdo desta região é substituído pelos bytes lidos da fonte atual.</param>
      <returns>O número total de bytes lidos do buffer. Isso poderá ser menor que o número de bytes alocados no buffer se esses muitos bytes não estiverem disponíveis no momento, ou zero (0), se o final do fluxo tiver sido atingido.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona uma sequência de bytes do fluxo atual, avança a posição no fluxo até o número de bytes lidos e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer no qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual será iniciada a gravação de dados no fluxo.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para leitura no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O fluxo está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona uma sequência de bytes do fluxo em buffer atual e avança a posição no fluxo em buffer até o número de bytes lidos.</summary>
      <param name="buffer">A região da memória na qual gravar os dados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor de sua propriedade <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes alocados no buffer se esses muitos bytes não estiverem disponíveis no momento, ou zero (0), se o final do fluxo tiver sido atingido.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.ReadByte">
      <summary>Lê um byte do fluxo subjacente e retorna o byte convertido em um <see langword="int" /> ou retorna -1 se estiver lendo do final do fluxo.</summary>
      <returns>O byte, convertido em um <see langword="int" /> ou -1 se estiver lendo do final do fluxo.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S, por exemplo, o fluxo ser fechado.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para leitura no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Define a posição no fluxo em buffer atual.</summary>
      <param name="offset">Um deslocamento de bytes em relação a <paramref name="origin" />.</param>
      <param name="origin">Um valor do tipo <see cref="T:System.IO.SeekOrigin" /> que indica o ponto de referência do qual a nova posição será obtida.</param>
      <returns>A nova posição no fluxo em buffer atual.</returns>
      <exception cref="T:System.IO.IOException">O fluxo não está aberto ou é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo não dá suporte à busca.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.SetLength(System.Int64)">
      <summary>Define o tamanho do fluxo armazenado em buffer.</summary>
      <param name="value">Um inteiro que indica o tamanho desejado do fluxo armazenado em buffer atual em bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">O fluxo não está aberto ou é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo não dá suporte para gravação e busca.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="P:System.IO.BufferedStream.UnderlyingStream">
      <summary>Obtém a instância <see cref="T:System.IO.Stream" /> subjacente para este fluxo em buffer.</summary>
      <returns>A instância de fluxo subjacente.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Copia bytes para o fluxo em buffer e avança a posição atual dentro do fluxo em buffer pelo número de bytes gravados.</summary>
      <param name="array">A matriz de bytes da qual copiar <paramref name="count" /> bytes para o fluxo em buffer atual.</param>
      <param name="offset">O deslocamento no buffer no qual começar a copiar bytes para o fluxo em buffer atual.</param>
      <param name="count">O número de bytes a serem gravados no fluxo em buffer atual.</param>
      <exception cref="T:System.ArgumentException">O tamanho de <paramref name="array" /> menos <paramref name="offset" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">O fluxo está fechado ou <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Grava uma sequência de bytes no fluxo em buffer atual e avança a posição atual nesse fluxo em buffer até o número de bytes gravados.</summary>
      <param name="buffer">Uma região da memória. Esse método copia o conteúdo dessa região para o fluxo em buffer atual.</param>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Grava uma sequência de bytes no fluxo atual assincronamente, avança a posição atual dentro desse fluxo pelo número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> do qual será iniciada a cópia de bytes no fluxo.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O fluxo está em uso no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.BufferedStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona uma sequência de bytes no fluxo em buffer atual, avança a posição atual nesse fluxo em buffer até o número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">A região da memória da qual gravar os dados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.BufferedStream.WriteByte(System.Byte)">
      <summary>Grava um byte na posição atual no fluxo armazenado em buffer.</summary>
      <param name="value">Um byte a ser gravado no fluxo.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo foi fechado.</exception>
    </member>
    <member name="T:System.IO.EndOfStreamException">
      <summary>A exceção que é gerada em uma tentativa de leitura após o término de um fluxo.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.EndOfStreamException" /> com sua cadeia de caracteres de mensagem definida como uma mensagem fornecida pelo sistema e seu HRESULT definido como COR_E_ENDOFSTREAM.</summary>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.EndOfStreamException" /> com as informações de contexto e de serialização especificadas.</summary>
      <param name="info">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que mantém os dados de objeto serializados sobre a exceção que está sendo lançada.</param>
      <param name="context">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém informações contextuais sobre a fonte ou o destino.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.EndOfStreamException" /> com sua cadeia de caracteres de mensagem definida como <paramref name="message" /> e seu HRESULT definido como COR_E_ENDOFSTREAM.</summary>
      <param name="message">Uma cadeia de caracteres que descreve o erro. O conteúdo de <paramref name="message" /> deve ser compreendido por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.IO.EndOfStreamException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.EndOfStreamException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="message">Uma cadeia de caracteres que descreve o erro. O conteúdo de <paramref name="message" /> deve ser compreendido por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres tenha sido localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.IO.InvalidDataException">
      <summary>A exceção que é gerada quando um fluxo de dados está em um formato inválido.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.InvalidDataException" />.</summary>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.InvalidDataException" /> com uma mensagem de erro especificada.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
    </member>
    <member name="M:System.IO.InvalidDataException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.InvalidDataException" /> com uma referência à exceção interna que é a causa dessa exceção.</summary>
      <param name="message">A mensagem de erro que explica a razão da exceção.</param>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="T:System.IO.MemoryStream">
      <summary>Cria um fluxo cujo repositório de backup é a memória.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.MemoryStream" /> com uma capacidade expansível inicializada em zero.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância não redimensionável da classe <see cref="T:System.IO.MemoryStream" /> com base na matriz de bytes especificada.</summary>
      <param name="buffer">A matriz de bytes sem sinal com base na qual o fluxo atual será criado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
      <summary>Inicializa uma nova instância não redimensionável da classe <see cref="T:System.IO.MemoryStream" /> com base na matriz de bytes especificada com a propriedade <see cref="P:System.IO.MemoryStream.CanWrite" /> definida conforme especificado.</summary>
      <param name="buffer">A matriz de bytes sem sinal da qual este fluxo deve ser criado.</param>
      <param name="writable">A configuração da propriedade <see cref="P:System.IO.MemoryStream.CanWrite" />, que determina se o fluxo dá suporte à gravação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância não redimensionável da classe <see cref="T:System.IO.MemoryStream" /> com base na região (índice) especificada de uma matriz bytes.</summary>
      <param name="buffer">A matriz de bytes sem sinal da qual este fluxo deve ser criado.</param>
      <param name="index">O índice para o <paramref name="buffer" /> no qual o fluxo começa.</param>
      <param name="count">O comprimento do fluxo em bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância não redimensionável da classe <see cref="T:System.IO.MemoryStream" /> com base na região especificada de uma matriz de bytes, com a propriedade <see cref="P:System.IO.MemoryStream.CanWrite" /> definida conforme especificado.</summary>
      <param name="buffer">A matriz de bytes sem sinal da qual este fluxo deve ser criado.</param>
      <param name="index">O índice em <paramref name="buffer" /> no qual o fluxo começa.</param>
      <param name="count">O comprimento do fluxo em bytes.</param>
      <param name="writable">A configuração da propriedade <see cref="P:System.IO.MemoryStream.CanWrite" />, que determina se o fluxo dá suporte à gravação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.MemoryStream" /> com base na região especificada de uma matriz de bytes, com o conjunto de propriedades <see cref="P:System.IO.MemoryStream.CanWrite" /> especificado e a capacidade de chamar <see cref="M:System.IO.MemoryStream.GetBuffer" /> definida de acordo com a especificação.</summary>
      <param name="buffer">A matriz de bytes sem sinal da qual este fluxo deve ser criado.</param>
      <param name="index">O índice para o <paramref name="buffer" /> no qual o fluxo começa.</param>
      <param name="count">O comprimento do fluxo em bytes.</param>
      <param name="writable">A configuração da propriedade <see cref="P:System.IO.MemoryStream.CanWrite" />, que determina se o fluxo dá suporte à gravação.</param>
      <param name="publiclyVisible">
        <see langword="true" /> para habilitar o <see cref="M:System.IO.MemoryStream.GetBuffer" />, que retorna a matriz de bytes sem sinal da qual o fluxo foi criado. Caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.MemoryStream" /> com uma capacidade expansível inicializada conforme especificado.</summary>
      <param name="capacity">O tamanho inicial da matriz interna em bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> é negativo.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação de leitura assíncrona. (Considere o uso de <see cref="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="buffer">O buffer para ler os dados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual será iniciada a gravação da leitura de dados no fluxo de memória.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <param name="callback">Um retorno de chamada assíncrono opcional, a ser chamado quando a leitura for concluída.</param>
      <param name="state">Um objeto fornecido pelo usuário que distingue essa solicitação de leitura assíncrona específica de outras solicitações.</param>
      <returns>Um <see cref="T:System.IAsyncResult" /> que representa a operação de leitura assíncrona, que ainda pode estar pendente.</returns>
      <exception cref="T:System.IO.IOException">Houve uma tentativa de leitura assíncrona após o final do fluxo de memória ou ocorreu um erro de disco.</exception>
      <exception cref="T:System.ArgumentException">Um ou mais argumentos são inválidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo de memória foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação do fluxo de memória atual não dá suporte à operação de leitura.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>Inicia uma operação de gravação assíncrona. (Considere o uso de <see cref="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual a gravação deve iniciar.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <param name="callback">Um retorno de chamada assíncrona opcional, a ser chamada quando a operação de gravação for concluída.</param>
      <param name="state">Um objeto fornecido pelo usuário que distingue essa solicitação de gravação assíncrona específica de outras solicitações.</param>
      <returns>Um <see langword="IAsyncResult" /> que representa a gravação assíncrona, que ainda pode estar pendente.</returns>
      <exception cref="T:System.IO.IOException">Houve uma tentativa de gravação assíncrona após o final do fluxo de memória ou ocorreu um erro de disco.</exception>
      <exception cref="T:System.ArgumentException">Um ou mais argumentos são inválidos.</exception>
      <exception cref="T:System.ObjectDisposedException">Foram chamados métodos depois que o fluxo de memória foi fechado.</exception>
      <exception cref="T:System.NotSupportedException">A implementação do fluxo de memória atual não dá suporte à operação de gravação.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.CanRead">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à leitura.</summary>
      <returns>
        <see langword="true" /> se o fluxo estiver aberto.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanSeek">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à busca.</summary>
      <returns>
        <see langword="true" /> se o fluxo estiver aberto.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.CanWrite">
      <summary>Obtém um valor que indica se o fluxo atual dá suporte à gravação.</summary>
      <returns>
        <see langword="true" /> se o fluxo der suporte à gravação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.MemoryStream.Capacity">
      <summary>Obtém ou define o número de bytes alocados a este fluxo.</summary>
      <returns>O tamanho da parte utilizável do buffer para o fluxo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Foi definida uma capacidade negativa ou menor que o tamanho atual do fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo atual está fechado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see langword="set" /> é invocado em um fluxo cuja capacidade não pode ser modificada.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.CopyTo(System.IO.Stream,System.Int32)">
      <summary>Lê os bytes do fluxo de memória atual e grava-os em outro fluxo usando um tamanho do buffer especificado.</summary>
      <param name="destination">O fluxo para o qual o conteúdo do fluxo de memória atual será copiado.</param>
      <param name="bufferSize">O tamanho do buffer. Esse valor deve ser maior que zero. O tamanho padrão é 81920.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> não é um número positivo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo de memória subjacente ou o fluxo de <paramref name="destination" /> está fechado.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo de memória subjacente é ilegível.
- ou -
O fluxo de <paramref name="destination" /> não é gravável.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê de maneira assíncrona todos os bytes do fluxo atual e os grava em outro fluxo usando um tamanho do buffer especificado e um token de cancelamento.</summary>
      <param name="destination">O fluxo para o qual o conteúdo do fluxo atual será copiado.</param>
      <param name="bufferSize">O tamanho do buffer, em bytes. Esse valor deve ser maior que zero.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de cópia assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> é negativo ou zero.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo atual ou o fluxo de destino é descartado.</exception>
      <exception cref="T:System.NotSupportedException">O fluxo atual não dá suporte à leitura ou o fluxo de destino não dá suporte à gravação.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pela classe <see cref="T:System.IO.MemoryStream" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.MemoryStream.EndRead(System.IAsyncResult)">
      <summary>Espera a leitura assíncrona pendente ser concluída. (Considere o uso de <see cref="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="asyncResult">A referência à solicitação assíncrona pendente a ser concluída.</param>
      <returns>O número de bytes lidos do fluxo de memória, entre zero (0) e o número de bytes solicitado. Retorna zero (0) somente no final do fluxo de memória, caso contrário, deve ser bloqueado até que pelo menos um byte esteja disponível.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Um identificador para a operação de leitura pendente não está disponível.
- ou -
A operação pendente não dá suporte à leitura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" /> não é proveniente de um método <see cref="M:System.IO.MemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> no fluxo de memória atual.</exception>
      <exception cref="T:System.IO.IOException">O fluxo está fechado ou ocorreu um erro interno.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.EndWrite(System.IAsyncResult)">
      <summary>Encerra uma operação de gravação assíncrona. (Considere o uso de <see cref="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" /> em seu lugar.)</summary>
      <param name="asyncResult">Uma referência à solicitação de E/S assíncrona pendente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Não há um identificador disponível para a operação de gravação pendente.
- ou -
A operação pendente não dá suporte à gravação.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult" /> não é proveniente de um método <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> no fluxo atual.</exception>
      <exception cref="T:System.IO.IOException">O fluxo está fechado ou ocorreu um erro interno.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Flush">
      <summary>Substitui o método <see cref="M:System.IO.Stream.Flush" /> para que nenhuma ação seja executada.</summary>
    </member>
    <member name="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>Limpa de maneira assíncrona todos os buffers para esse fluxo e monitora solicitações de cancelamento.</summary>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento.</param>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.GetBuffer">
      <summary>Retorna a matriz de bytes sem sinal com base na qual este fluxo foi criado.</summary>
      <returns>A matriz de bytes com base na qual este fluxo foi criado ou a matriz subjacente se uma matriz de bytes não tiver sido fornecida para o construtor <see cref="T:System.IO.MemoryStream" /> durante a construção da instância atual.</returns>
      <exception cref="T:System.UnauthorizedAccessException">A instância de <see langword="MemoryStream" /> não foi criada com um buffer visível publicamente.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Length">
      <summary>Obtém o tamanho do fluxo em bytes.</summary>
      <returns>O comprimento do fluxo em bytes.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="P:System.IO.MemoryStream.Position">
      <summary>Obtém ou define a posição atual no fluxo.</summary>
      <returns>A posição atual no fluxo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A posição é definida com um valor negativo ou um valor maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lê um bloco de bytes do fluxo atual e grava os dados em um buffer.</summary>
      <param name="buffer">Quando esse método retorna, contém a matriz de bytes especificada com os valores entre <paramref name="offset" /> e (<paramref name="offset" /> + <paramref name="count" /> -1) substituídos pelos caracteres lidos do fluxo atual.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> no qual será iniciado o armazenamento de dados no fluxo atual.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <returns>O número total de bytes gravados no buffer. Isso poderá ser menor que o número de bytes solicitado se esse número de bytes não estiver disponível no momento, ou zero se o final do fluxo for atingido antes que os bytes sejam lidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">O<paramref name="offset" /> subtraído do tamanho do buffer é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância atual do fluxo está fechada.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Read(System.Span{System.Byte})">
      <summary>Lê uma sequência de bytes do fluxo de memória atual e avança a posição no fluxo de memória até o número de bytes lidos.</summary>
      <param name="destination">Uma região da memória. Quando esse método é retornado, o conteúdo desse intervalo é substituído pelos bytes lidos da origem do fluxo de memória atual.</param>
      <returns>O número total de bytes lidos do buffer. Isso poderá ser menor que o número de bytes alocados no buffer se esses muitos bytes não estiverem disponíveis no momento ou poderá ser zero (0) se o final do fluxo de memória tiver sido atingido.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona uma sequência de bytes do fluxo atual, avança a posição no fluxo até o número de bytes lidos e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer no qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes no <paramref name="buffer" /> no qual será iniciada a gravação de dados no fluxo.</param>
      <param name="count">O número máximo de bytes a serem lidos.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo foi atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para leitura no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O fluxo está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona uma sequência de bytes do fluxo de memória atual, grava a sequência no <paramref name="destination" />, avança a posição no fluxo de memória até o número de bytes lidos e monitora as solicitações de cancelamento.</summary>
      <param name="destination">A região da memória na qual gravar os dados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor de sua propriedade <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> contém o número total de bytes lidos no <paramref name="destination" />. O valor do resultado poderá ser menor que o número de bytes alocados no <paramref name="destination" /> se esses muitos bytes não estiverem disponíveis no momento ou poderá ser zero (0) se o final do fluxo de memória tiver sido atingido.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.ReadByte">
      <summary>Lê um byte do fluxo atual.</summary>
      <returns>O byte é convertido em um <see cref="T:System.Int32" /> ou -1, se o fim do fluxo tiver sido atingido.</returns>
      <exception cref="T:System.ObjectDisposedException">A instância atual do fluxo está fechada.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Define a posição no fluxo atual com o valor especificado.</summary>
      <param name="offset">A nova posição no fluxo. Isso é relativo ao parâmetro <paramref name="loc" /> e pode ser positivo ou negativo.</param>
      <param name="loc">Um valor do tipo <see cref="T:System.IO.SeekOrigin" />, que atua como o ponto de referência de busca.</param>
      <returns>A nova posição no fluxo, calculada pela combinação do ponto de referência inicial e do deslocamento.</returns>
      <exception cref="T:System.IO.IOException">A busca é tentada antes do início do fluxo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ArgumentException">Há um <see cref="T:System.IO.SeekOrigin" /> inválido.
- ou -
O <paramref name="offset" /> causou um estouro aritmético.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância atual do fluxo está fechada.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.SetLength(System.Int64)">
      <summary>Define o comprimento do fluxo atual para o valor especificado.</summary>
      <param name="value">O valor a ser usado para definir o comprimento.</param>
      <exception cref="T:System.NotSupportedException">O fluxo atual não é redimensionável e <paramref name="value" /> é maior que a capacidade atual.
- ou -
O fluxo atual não dá suporte para gravação.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> é negativo ou maior que o comprimento máximo do <see cref="T:System.IO.MemoryStream" />, em que o comprimento máximo é (<see cref="F:System.Int32.MaxValue" /> – origem) e a origem é o índice para o buffer subjacente no qual o fluxo se inicia.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.ToArray">
      <summary>Grava o conteúdo de fluxo em uma matriz de bytes, independentemente da propriedade <see cref="P:System.IO.MemoryStream.Position" />.</summary>
      <returns>Uma nova matriz de bytes.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
      <summary>Retorna a matriz de bytes sem sinal com base na qual este fluxo foi criado. O valor de retorno indica se a conversão foi bem-sucedida.</summary>
      <param name="buffer">O segmento da matriz de bytes do qual este fluxo foi criado.</param>
      <returns>
        <see langword="true" /> se a conversão tiver sido bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Grava um bloco de bytes no fluxo atual usando os dados lidos de um buffer.</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> no qual será iniciada a cópia de bytes no fluxo atual.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo. Para obter mais informações, consulte <see cref="P:System.IO.Stream.CanWrite" />.
- ou -
A posição atual está mais próxima do que bytes <paramref name="count" /> até o final do fluxo, e a capacidade não pode ser modificada.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="offset" /> subtraído do tamanho do buffer é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">A instância atual do fluxo está fechada.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>Grava a sequência de bytes contida em <paramref name="source" /> no fluxo de memória atual e avança a posição atual nesse fluxo de memória até o número de bytes gravados.</summary>
      <param name="source">Uma região da memória. Esse método copia o conteúdo dessa região para o fluxo de memória atual.</param>
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>Grava uma sequência de bytes no fluxo atual assincronamente, avança a posição atual dentro desse fluxo pelo número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="buffer">O buffer do qual os dados serão gravados.</param>
      <param name="offset">O deslocamento de bytes baseado em zero em <paramref name="buffer" /> do qual será iniciada a cópia de bytes no fluxo.</param>
      <param name="count">O número máximo de bytes a serem gravados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="offset" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O fluxo está em uso no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a sequência de bytes contida em <paramref name="source" /> no fluxo de memória atual, avança a posição atual nesse fluxo de memória até o número de bytes gravados e monitora as solicitações de cancelamento.</summary>
      <param name="source">A região da memória da qual gravar os dados.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.MemoryStream.WriteByte(System.Byte)">
      <summary>Grava um byte no fluxo atual na posição atual.</summary>
      <param name="value">O byte a ser gravado.</param>
      <exception cref="T:System.NotSupportedException">Não há suporte para gravação no fluxo. Para obter mais informações, consulte <see cref="P:System.IO.Stream.CanWrite" />.
- ou -
A posição atual é no final do fluxo e a capacidade não pode ser modificada.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo atual está fechado.</exception>
    </member>
    <member name="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
      <summary>Grava todo o conteúdo deste fluxo de memória em outro fluxo.</summary>
      <param name="stream">O fluxo no qual este fluxo de memória será gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo atual ou de destino está fechado.</exception>
    </member>
    <member name="T:System.IO.Path">
      <summary>Executa operações em instâncias de <see cref="T:System.String" /> que contêm informações de caminho de arquivo ou diretório. Essas operações são executadas de uma maneira em plataforma cruzada.</summary>
    </member>
    <member name="F:System.IO.Path.AltDirectorySeparatorChar">
      <summary>Fornece um caractere alternativo específico da plataforma usado para separar os níveis de diretório em uma cadeia de caracteres de caminho que reflete uma organização do sistema de arquivos hierárquico.</summary>
    </member>
    <member name="M:System.IO.Path.ChangeExtension(System.String,System.String)">
      <summary>Altera a extensão de uma cadeia de caracteres do caminho.</summary>
      <param name="path">As informações de caminho a serem modificadas. O caminho não pode conter nenhum dos caracteres definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</param>
      <param name="extension">A nova extensão (com ou sem um ponto à esquerda). Especifique <see langword="null" /> para remover uma extensão do <paramref name="path" />.</param>
      <returns>As informações de caminho modificadas.
Em plataformas de área de trabalho baseadas no Windows, se <paramref name="path" /> for <see langword="null" /> ou uma cadeia de caracteres vazia (""), as informações de caminho serão retornadas sem modificações. Se <paramref name="extension" /> for <see langword="null" />, a cadeia de caracteres retornada conterá o caminho especificado com sua extensão removida. Se o <paramref name="path" /> não tiver uma extensão e <paramref name="extension" /> não for <see langword="null" />, a cadeia de caracteres de caminho retornada conterá <paramref name="extension" /> acrescentado ao final de <paramref name="path" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String)">
      <summary>Combina duas cadeias de caracteres em um caminho.</summary>
      <param name="path1">O primeiro caminho a ser combinado.</param>
      <param name="path2">O segundo caminho a ser combinado.</param>
      <returns>Os caminhos combinados. Se um dos caminhos especificados for uma cadeia de comprimento zero, esse método retornará o outro caminho. Se <paramref name="path2" /> contiver um caminho absoluto, esse método retornará <paramref name="path2" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" /> ou <paramref name="path2" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" /> ou <paramref name="path2" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String)">
      <summary>Combina três cadeias de caracteres em um caminho.</summary>
      <param name="path1">O primeiro caminho a ser combinado.</param>
      <param name="path2">O segundo caminho a ser combinado.</param>
      <param name="path3">O terceiro caminho a ser combinado.</param>
      <returns>Os caminhos combinados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" /> ou <paramref name="path3" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" /> ou <paramref name="path3" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)">
      <summary>Combina quatro cadeias de caracteres em um caminho.</summary>
      <param name="path1">O primeiro caminho a ser combinado.</param>
      <param name="path2">O segundo caminho a ser combinado.</param>
      <param name="path3">O terceiro caminho a ser combinado.</param>
      <param name="path4">O quarto caminho a ser combinado.</param>
      <returns>Os caminhos combinados.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> ou <paramref name="path4" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> ou <paramref name="path4" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.Combine(System.String[])">
      <summary>Combina uma matriz de cadeias de caracteres em um caminho.</summary>
      <param name="paths">Uma matriz de partes do caminho.</param>
      <returns>Os caminhos combinados.</returns>
      <exception cref="T:System.ArgumentException">Uma das cadeias de caracteres na matriz contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">Uma das cadeias de caracteres na matriz é <see langword="null" />.</exception>
    </member>
    <member name="F:System.IO.Path.DirectorySeparatorChar">
      <summary>Fornece um caractere específico da plataforma usado para separar os níveis de diretório em uma cadeia de caracteres de caminho que reflete uma organização do sistema de arquivos hierárquico.</summary>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Retorna um valor que indica se o caminho, especificado como um intervalo somente leitura, termina em um separador de diretório.</summary>
      <param name="path">O caminho a ser analisado.</param>
      <returns>
        <see langword="true" /> se o caminho terminar em um separador de diretório; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.EndsInDirectorySeparator(System.String)">
      <summary>Retorna um valor que indica se o caminho especificado termina em um separador de diretório.</summary>
      <param name="path">O caminho a ser analisado.</param>
      <returns>
        <see langword="true" /> se o caminho terminar em um separador de diretório; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})">
      <summary>Retorna as informações de diretório para o caminho especificado representado por um intervalo de caracteres.</summary>
      <param name="path">O caminho do qual recuperar as informações de diretório.</param>
      <returns>Informações de diretório <paramref name="path" /> ou um intervalo vazio se <paramref name="path" /> é <see langword="null" />, um intervalo vazio ou uma raiz (como , C: ou \servidor\compartilhamento).</returns>
    </member>
    <member name="M:System.IO.Path.GetDirectoryName(System.String)">
      <summary>Retorna as informações de diretório para a cadeia de caracteres do caminho especificado.</summary>
      <param name="path">O caminho de um arquivo ou diretório.</param>
      <returns>Informações de diretório para <paramref name="path" /> ou <see langword="null" />, se <paramref name="path" /> denotar um diretório raiz ou for nulo. Retornará <see cref="F:System.String.Empty" /> se <paramref name="path" /> não contiver informações de diretório.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="path" /> contém caracteres inválidos, está vazio ou contém apenas espaços em branco.</exception>
      <exception cref="T:System.IO.PathTooLongException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.IO.IOException" />.  
  

            
  
 O parâmetro <paramref name="path" /> é maior que o comprimento máximo definido pelo sistema.</exception>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})">
      <summary>Retorna a extensão de um caminho de arquivo que é representado por um intervalo de caracteres somente leitura.</summary>
      <param name="path">O caminho de arquivo do qual obter a extensão.</param>
      <returns>A extensão do caminho especificado (incluindo o ponto, ".") ou <see cref="P:System.ReadOnlySpan`1.Empty" /> se <paramref name="path" /> não tem informações de intervalo.</returns>
    </member>
    <member name="M:System.IO.Path.GetExtension(System.String)">
      <summary>Retorna a extensão (incluindo o ponto ".") da cadeia de caracteres de caminho especificada.</summary>
      <param name="path">A cadeia de caracteres do caminho do qual obter a extensão.</param>
      <returns>A extensão do caminho especificado (incluindo o ponto ".") ou <see langword="null" /> ou <see cref="F:System.String.Empty" />. Se <paramref name="path" /> for <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> retornará <see langword="null" />. Se <paramref name="path" /> não tiver informações de extensão, <see cref="M:System.IO.Path.GetExtension(System.String)" /> retornará <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})">
      <summary>Retorna o nome de arquivo e a extensão de um caminho de arquivo que é representado por um intervalo de caracteres somente leitura.</summary>
      <param name="path">Um intervalo somente leitura que contém o caminho do qual obter o nome de arquivo e a extensão.</param>
      <returns>Os caracteres após o último caractere separador de diretório em <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileName(System.String)">
      <summary>Retorna o nome de arquivo e a extensão da cadeia de caracteres do caminho especificado.</summary>
      <param name="path">A cadeia de caracteres do caminho do qual o nome do arquivo e a extensão serão obtidos.</param>
      <returns>Os caracteres após o último caractere separador de diretório em <paramref name="path" />. Se o último caractere de <paramref name="path" /> for um caractere de separador de diretório ou volume, esse método retornará <see cref="F:System.String.Empty" />. Se <paramref name="path" /> for <see langword="null" />, esse método retornará <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})">
      <summary>Retorna o nome de arquivo sem a extensão de um caminho de arquivo que é representado por um intervalo de caracteres somente leitura.</summary>
      <param name="path">Um intervalo somente leitura que contém o caminho do qual obter o nome de arquivo sem a extensão.</param>
      <returns>Os caracteres no intervalo somente leitura retornados por <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, menos o último ponto (.) e todos os caracteres depois dele.</returns>
    </member>
    <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.String)">
      <summary>Retorna o nome de arquivo da cadeia de caracteres do caminho especificado sem a extensão.</summary>
      <param name="path">O caminho do arquivo.</param>
      <returns>A cadeia de caracteres retornada por <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, menos o último ponto (.) e todos os caracteres seguintes.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String)">
      <summary>Retorna o caminho absoluto para a cadeia de caracteres do caminho especificado.</summary>
      <param name="path">O arquivo ou diretório para o qual as informações de caminho absoluto serão obtidas.</param>
      <returns>O local totalmente qualificado de <paramref name="path" />, como "C:\MyFile.txt".</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de comprimento zero, contém somente espaços em branco ou contém um ou mais dos caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.
- ou -
O sistema não pôde recuperar o caminho absoluto.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem as permissões necessárias.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> contém dois pontos (":") que não fazem parte de um identificador de volume (por exemplo, "c:\").</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
    </member>
    <member name="M:System.IO.Path.GetFullPath(System.String,System.String)">
      <summary>Retorna um caminho absoluto de um caminho base totalmente qualificado e um caminho relativo.</summary>
      <param name="path">Um caminho relativo a ser concatenado com <paramref name="basePath" />.</param>
      <param name="basePath">O início de um caminho totalmente qualificado.</param>
      <returns>O caminho absoluto.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ou <paramref name="basePath" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="basePath" /> não é um caminho totalmente qualificado.
- ou -
<paramref name="path" /> ou <paramref name="basePath" /> contém caracteres de caminho inválidos, como U+0000.</exception>
    </member>
    <member name="M:System.IO.Path.GetInvalidFileNameChars">
      <summary>Obtém uma matriz que contém os caracteres que não são permitidos em nomes de arquivo.</summary>
      <returns>Uma matriz que contém os caracteres que não são permitidos em nomes de arquivo.</returns>
    </member>
    <member name="M:System.IO.Path.GetInvalidPathChars">
      <summary>Obtém uma matriz que contém os caracteres que não são permitidos em nomes de caminho.</summary>
      <returns>Uma matriz que contém os caracteres que não são permitidos em nomes de caminho.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})">
      <summary>Obtém as informações do diretório raiz do caminho contido no intervalo de caracteres especificado.</summary>
      <param name="path">Um intervalo de caracteres somente leitura que contém o caminho pelo qual obter informações do diretório raiz.</param>
      <returns>Um intervalo de caracteres somente leitura que contém o diretório raiz de <paramref name="path" />.</returns>
    </member>
    <member name="M:System.IO.Path.GetPathRoot(System.String)">
      <summary>Obtém as informações do diretório raiz do caminho contido na cadeia de caracteres especificada.</summary>
      <param name="path">Uma cadeia de caracteres que contém o caminho pelo qual obter informações do diretório raiz.</param>
      <returns>O diretório raiz do <paramref name="path" /> se ele estiver com raiz.
- ou -
<see cref="F:System.String.Empty" /> se <paramref name="path" /> não contiver informações do diretório raiz.
- ou -
<see langword="null" /> se <paramref name="path" /> for <see langword="null" /> ou estiver efetivamente vazio.</returns>
      <exception cref="T:System.ArgumentException">Somente .NET Framework: <paramref name="path" /> contém um ou mais dos caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.
- ou -
Somente .NET Framework: <see cref="F:System.String.Empty" /> foi passado para <paramref name="path" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetRandomFileName">
      <summary>Retorna um nome de pasta ou nome de arquivo aleatório.</summary>
      <returns>Um nome de pasta aleatório ou um nome de arquivo.</returns>
    </member>
    <member name="M:System.IO.Path.GetRelativePath(System.String,System.String)">
      <summary>Retorna um caminho relativo de um caminho para outro.</summary>
      <param name="relativeTo">O caminho de origem ao qual o resultado deve ser relativo. Esse caminho é sempre considerado um diretório.</param>
      <param name="path">O caminho de destino.</param>
      <returns>O caminho relativo ou <paramref name="path" /> se os caminhos não compartilham a mesma raiz.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeTo" /> ou <paramref name="path" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempFileName">
      <summary>Cria um arquivo temporário de zero byte nomeado exclusivamente no disco e retorna o caminho completo do arquivo.</summary>
      <returns>O caminho completo do arquivo temporário.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S; por exemplo, não há um nome de arquivo temporário exclusivo disponível.
- ou -
Não foi possível criar um arquivo temporário com este método.</exception>
    </member>
    <member name="M:System.IO.Path.GetTempPath">
      <summary>Retorna o caminho da pasta temporária do usuário atual.</summary>
      <returns>O caminho para a pasta temporária, terminando com uma barra invertida.</returns>
      <exception cref="T:System.Security.SecurityException">O chamador não tem as permissões necessárias.</exception>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})">
      <summary>Determina se o caminho representado pelo intervalo de caracteres especificado inclui uma extensão de nome de arquivo.</summary>
      <param name="path">O caminho para pesquisar uma extensão.</param>
      <returns>
        <see langword="true" /> se o caractere após o último caractere separador de diretório ou separador de volume no caminho inclui um ponto (".") seguido por um ou mais caracteres; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.HasExtension(System.String)">
      <summary>Determina se um caminho inclui uma extensão de nome de arquivo.</summary>
      <param name="path">O caminho para pesquisar uma extensão.</param>
      <returns>
        <see langword="true" /> se o caractere que segue o último separador de diretório (\\ ou /) ou o separador de volume (:) no caminho incluir um ponto (.) seguido por um ou mais caracteres; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="F:System.IO.Path.InvalidPathChars">
      <summary>Fornece uma matriz de caracteres específica da plataforma que não pode ser especificada nos argumentos de cadeia de caracteres de caminho passados para membros da classe <see cref="T:System.IO.Path" />.</summary>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})">
      <summary>Retorna um valor que indica se o caminho de arquivo representado pelo intervalo de caracteres especificado está fixo em uma unidade ou um caminho UNC específico.</summary>
      <param name="path">Um caminho de arquivo.</param>
      <returns>
        <see langword="true" /> se o caminho está fixo em uma unidade ou um caminho UNC específico; <see langword="false" /> se o caminho é relativo à unidade ou ao diretório de trabalho atual.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathFullyQualified(System.String)">
      <summary>Retorna um valor que indica se o caminho de arquivo especificado está fixo em uma unidade ou um caminho UNC específico.</summary>
      <param name="path">Um caminho de arquivo.</param>
      <returns>
        <see langword="true" /> se o caminho está fixo em uma unidade ou um caminho UNC específico; <see langword="false" /> se o caminho é relativo à unidade ou ao diretório de trabalho atual.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})">
      <summary>Retorna um valor que indica se o intervalo de caracteres especificado que representa um caminho de arquivo contém uma raiz.</summary>
      <param name="path">O caminho a ser testado.</param>
      <returns>
        <see langword="true" /> se <paramref name="path" /> contém uma raiz; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.IsPathRooted(System.String)">
      <summary>Retorna um valor que indica se a cadeia de caracteres do caminho especificado contém uma raiz.</summary>
      <param name="path">O caminho a ser testado.</param>
      <returns>
        <see langword="true" /> se <paramref name="path" /> contém uma raiz; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> contém um ou mais caracteres inválidos definidos em <see cref="M:System.IO.Path.GetInvalidPathChars" />.</exception>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena componentes de dois caminhos em um único caminho.</summary>
      <param name="path1">Um intervalo de caracteres que contém o primeiro caminho a ser unido.</param>
      <param name="path2">Um intervalo de caracteres que contém o segundo caminho a ser unido.</param>
      <returns>Os caminhos combinados.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena componentes de três caminhos em um único caminho.</summary>
      <param name="path1">Um intervalo de caracteres que contém o primeiro caminho a ser unido.</param>
      <param name="path2">Um intervalo de caracteres que contém o segundo caminho a ser unido.</param>
      <param name="path3">Um intervalo de caracteres que contém o terceiro caminho a ser unido.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})">
      <summary>Concatena componentes de quatro caminhos em um único caminho.</summary>
      <param name="path1">Um intervalo de caracteres que contém o primeiro caminho a ser unido.</param>
      <param name="path2">Um intervalo de caracteres que contém o segundo caminho a ser unido.</param>
      <param name="path3">Um intervalo de caracteres que contém o terceiro caminho a ser unido.</param>
      <param name="path4">Um intervalo de caracteres que contém o quarto caminho a ser unido.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String)">
      <summary>Concatena dois caminhos em um único caminho.</summary>
      <param name="path1">O primeiro caminho a ser unido.</param>
      <param name="path2">O segundo caminho a ser unido.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String)">
      <summary>Concatena três caminhos em um único caminho.</summary>
      <param name="path1">O primeiro caminho a ser unido.</param>
      <param name="path2">O segundo caminho a ser unido.</param>
      <param name="path3">O terceiro caminho a ser unido.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String,System.String,System.String,System.String)">
      <summary>Concatena quatro caminhos em um único caminho.</summary>
      <param name="path1">O primeiro caminho a ser unido.</param>
      <param name="path2">O segundo caminho a ser unido.</param>
      <param name="path3">O terceiro caminho a ser unido.</param>
      <param name="path4">O quarto caminho a ser unido.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="M:System.IO.Path.Join(System.String[])">
      <summary>Concatena uma matriz de caminhos em um único caminho.</summary>
      <param name="paths">Uma matriz de caminhos.</param>
      <returns>O caminho concatenado.</returns>
    </member>
    <member name="F:System.IO.Path.PathSeparator">
      <summary>Um caractere separador específico da plataforma usado para separar cadeias de caracteres de caminho em variáveis de ambiente.</summary>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})">
      <summary>Corta um separador de diretório à direita além da raiz do caminho especificado.</summary>
      <param name="path">O caminho a ser cortado.</param>
      <returns>O <paramref name="path" /> sem nenhum separador de diretório à direita.</returns>
    </member>
    <member name="M:System.IO.Path.TrimEndingDirectorySeparator(System.String)">
      <summary>Corta um separador de diretório à direita além da raiz do caminho especificado.</summary>
      <param name="path">O caminho a ser cortado.</param>
      <returns>O <paramref name="path" /> sem nenhum separador de diretório à direita.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Tenta concatenar componentes de dois caminhos em um único intervalo de caracteres pré-alocado e retorna um valor que indica se a operação foi bem-sucedida.</summary>
      <param name="path1">Um intervalo de caracteres que contém o primeiro caminho a ser unido.</param>
      <param name="path2">Um intervalo de caracteres que contém o segundo caminho a ser unido.</param>
      <param name="path3">Um intervalo de caracteres que contém o terceiro caminho a ser unido.</param>
      <param name="destination">Um intervalo de caracteres que conterá o caminho concatenado.</param>
      <param name="charsWritten">Quando o método é retornado, um valor que indica o número de caracteres gravados no <paramref name="destination" />.</param>
      <returns>
        <see langword="true" /> se a operação de concatenação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)">
      <summary>Tenta concatenar componentes de dois caminhos em um único intervalo de caracteres pré-alocado e retorna um valor que indica se a operação foi bem-sucedida.</summary>
      <param name="path1">Um intervalo de caracteres que contém o primeiro caminho a ser unido.</param>
      <param name="path2">Um intervalo de caracteres que contém o segundo caminho a ser unido.</param>
      <param name="destination">Um intervalo de caracteres que conterá o caminho concatenado.</param>
      <param name="charsWritten">Quando o método é retornado, um valor que indica o número de caracteres gravados no <paramref name="destination" />.</param>
      <returns>
        <see langword="true" /> se a operação de concatenação for bem-sucedida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="F:System.IO.Path.VolumeSeparatorChar">
      <summary>Fornece um caractere separador de volume específico à plataforma.</summary>
    </member>
    <member name="T:System.IO.StreamReader">
      <summary>Implementa um <see cref="T:System.IO.TextReader" /> que lê caracteres de um fluxo de bytes em uma codificação específica.</summary>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não dá suporte à leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado, com a opção de detecção da marca da ordem de byte especificada.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não dá suporte à leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado, com a codificação de caractere especificada.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não dá suporte à leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado, com a codificação de caracteres e a opção de detecção de marca de ordem de byte especificadas.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não dá suporte à leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado, com a codificação de caracteres, a opção de detecção de marca de ordem de byte e o tamanho do buffer especificados.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <param name="bufferSize">O tamanho mínimo do buffer.</param>
      <exception cref="T:System.ArgumentException">Não há suporte para leitura no fluxo.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é menor que ou igual a zero.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o fluxo especificado com base na codificação de caractere especificada, na opção de detecção de marca de ordem de byte, no tamanho do buffer e, opcionalmente, deixa o fluxo aberto.</summary>
      <param name="stream">O fluxo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="detectEncodingFromByteOrderMarks">
        <see langword="true" /> para procurar marcas de ordem de byte no início do arquivo; caso contrário, <see langword="false" />.</param>
      <param name="bufferSize">O tamanho mínimo do buffer.</param>
      <param name="leaveOpen">
        <see langword="true" /> para deixar o fluxo aberto após o objeto <see cref="T:System.IO.StreamReader" /> ser descartado; caso contrário, <see langword="false" />.</param>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o nome de arquivo especificado.</summary>
      <param name="path">O caminho completo do arquivo a ser lido.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não pode ser encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido, por exemplo, ele está em uma unidade não mapeada.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, nome do diretório ou rótulo do volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> do nome do arquivo especificado, com a opção de detecção de marca de ordem de byte especificada.</summary>
      <param name="path">O caminho completo do arquivo a ser lido.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não pode ser encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido, por exemplo, ele está em uma unidade não mapeada.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, nome do diretório ou rótulo do volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o nome de arquivo especificado, com a codificação de caractere especificada.</summary>
      <param name="path">O caminho completo do arquivo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não pode ser encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido, por exemplo, ele está em uma unidade não mapeada.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, nome do diretório ou rótulo do volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o nome de arquivo especificado, com a codificação de caractere e opção de detecção da marca da ordem de byte especificada.</summary>
      <param name="path">O caminho completo do arquivo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não pode ser encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido, por exemplo, ele está em uma unidade não mapeada.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, nome do diretório ou rótulo do volume.</exception>
    </member>
    <member name="M:System.IO.StreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamReader" /> para o nome de arquivo especificado, com a codificação de caracteres, a opção de detecção de marca de ordem de byte e o tamanho do buffer especificados.</summary>
      <param name="path">O caminho completo do arquivo a ser lido.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="detectEncodingFromByteOrderMarks">Indica se é necessário procurar marcas de ordem de byte no início do arquivo.</param>
      <param name="bufferSize">O tamanho do buffer mínimo, em número de caracteres de 16 bits.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">O arquivo não pode ser encontrado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido, por exemplo, ele está em uma unidade não mapeada.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, nome do diretório ou rótulo do volume.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="buffersize" /> é menor que ou igual a zero.</exception>
    </member>
    <member name="P:System.IO.StreamReader.BaseStream">
      <summary>Retorna o fluxo subjacente.</summary>
      <returns>O fluxo subjacente.</returns>
    </member>
    <member name="M:System.IO.StreamReader.Close">
      <summary>Fecha o objeto <see cref="T:System.IO.StreamReader" /> e o fluxo subjacente e libera os recursos do sistema associados ao leitor.</summary>
    </member>
    <member name="P:System.IO.StreamReader.CurrentEncoding">
      <summary>Obtém a codificação de caracteres atual que está sendo usada pelo objeto <see cref="T:System.IO.StreamReader" /> atual.</summary>
      <returns>A codificação de caracteres atual usada pelo leitor atual. O valor pode ser diferente após a primeira chamada para qualquer método <see cref="Overload:System.IO.StreamReader.Read" /> de <see cref="T:System.IO.StreamReader" />, pois a detecção automática de codificação só é feita após a primeira chamada a um método <see cref="Overload:System.IO.StreamReader.Read" />.</returns>
    </member>
    <member name="M:System.IO.StreamReader.DiscardBufferedData">
      <summary>Limpa o buffer interno.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Dispose(System.Boolean)">
      <summary>Fecha o fluxo subjacente, libera os recursos não gerenciados usados pelo <see cref="T:System.IO.StreamReader" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.IO.StreamReader.EndOfStream">
      <summary>Obtém um valor que indica se a posição do fluxo atual está no final do fluxo.</summary>
      <returns>
        <see langword="true" /> se a posição do fluxo atual estiver no final do fluxo; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo subjacente foi descartado.</exception>
    </member>
    <member name="F:System.IO.StreamReader.Null">
      <summary>Um objeto <see cref="T:System.IO.StreamReader" /> em torno de um fluxo vazio.</summary>
    </member>
    <member name="M:System.IO.StreamReader.Peek">
      <summary>Retorna o próximo caractere disponível, mas não o consome.</summary>
      <returns>Um inteiro que representa o próximo caractere a ser lido, ou -1, se não houver nenhum caractere a ser lido ou se o fluxo não der suporte para busca.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read">
      <summary>Lê o próximo caractere do fluxo de entrada e avança a posição do caractere em um caractere.</summary>
      <returns>O próximo caractere do fluxo de entrada representado como um objeto <see cref="T:System.Int32" />, ou -1, se não houver mais caracteres disponíveis.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um máximo especificado de caracteres do fluxo atual em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, ele contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<c>índice + contagem -1</c>) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">O índice de <paramref name="buffer" /> no qual a escrita será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos.</param>
      <returns>O número de caracteres que foram lidos, ou 0, se estiver no final do fluxo e nenhum dado foi lido. O número será menor ou igual ao parâmetro <paramref name="count" />, dependendo se os dados estão disponíveis no fluxo.</returns>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Erro de E/S, por exemplo, o fluxo está fechado.</exception>
    </member>
    <member name="M:System.IO.StreamReader.Read(System.Span{System.Char})">
      <summary>Lê os caracteres do fluxo atual para um intervalo.</summary>
      <param name="buffer">Quando este método é retornado, contém o intervalo de caracteres especificado substituídos pelos caracteres lidos da origem atual.</param>
      <returns>O número de caracteres que foram lidos, ou 0, se estiver no final do fluxo e nenhum dado foi lido. O número será menor ou igual ao comprimento do <paramref name="buffer" />, dependendo da disponibilidade dos dados no fluxo.</returns>
      <exception cref="T:System.IO.IOException">O número de caracteres lidos do fluxo é maior do que o comprimento de <paramref name="buffer" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um máximo especificado de caracteres do fluxo atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos. Se o final do fluxo for atingido antes que o número especificado de caracteres seja gravado no buffer, o método atual será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de caracteres lidos no buffer. O valor do resultado poderá ser menor que o número de caracteres solicitados se o número de caracteres disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os caracteres do fluxo atual para um bloco de memória.</summary>
      <param name="buffer">Quando este método é retornado, contém o bloco de memória de caracteres especificado substituídos pelos caracteres lidos da fonte de dados atual.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa de valor que representa a operação de leitura assíncrona. O valor do parâmetro de tipo da tarefa de valor contém o número de caracteres que foram lidos ou 0 caso nenhum dado tenha sido lido no final do fluxo. O número será menor ou igual ao comprimento do <paramref name="buffer" />, dependendo da disponibilidade dos dados no fluxo.</returns>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um máximo especificado de caracteres do fluxo atual e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, ele contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<c>índice + contagem -1</c>) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual a <paramref name="count" />, dependendo se todos os caracteres de entrada tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.StreamReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlock(System.Span{System.Char})">
      <summary>Lê os caracteres do fluxo atual e grava os dados em um buffer.</summary>
      <param name="buffer">Quando este método é retornado, contém o intervalo de caracteres especificado substituídos pelos caracteres lidos da origem atual.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual ao comprimento de <paramref name="buffer" />, dependendo se todos os caracteres de entrada tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.StreamReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um máximo especificado de caracteres do fluxo atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos. Se o final do fluxo for atingido antes que o número especificado de caracteres seja gravado no buffer, o método será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de caracteres lidos no buffer. O valor do resultado poderá ser menor que o número de caracteres solicitados se o número de caracteres disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo for atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os caracteres do fluxo atual e grava os dados em um buffer.</summary>
      <param name="buffer">Quando este método é retornado, contém o bloco de memória de caracteres especificado substituídos pelos caracteres lidos da fonte de dados atual.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa de valor que representa a operação de leitura assíncrona. O valor do parâmetro de tipo da tarefa de valor contém o número total de caracteres lidos no buffer. O valor do resultado poderá ser menor que o número de caracteres solicitados se o número de caracteres disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo for atingido.</returns>
    </member>
    <member name="M:System.IO.StreamReader.ReadLine">
      <summary>Lê uma linha de caracteres do fluxo atual e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>A próxima linha do fluxo de entrada, ou <see langword="null" />, se o final do fluxo de entrada for atingido.</returns>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadLineAsync">
      <summary>Lê uma linha de caracteres assincronamente do fluxo atual e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém a próxima linha do fluxo ou <see langword="null" /> se todos os caracteres tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres na próxima linha é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEnd">
      <summary>Lê todos os caracteres da posição atual até o final do fluxo.</summary>
      <returns>O restante do fluxo como uma cadeia de caracteres, da posição atual até o final. Se a posição atual estiver no final do fluxo, será retornada uma cadeia de caracteres vazia ("").</returns>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamReader.ReadToEndAsync">
      <summary>Lê todos os caracteres da posição atual até o final do fluxo de forma assíncrona e os retorna como uma cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém uma cadeia de caracteres da posição atual até o final do fluxo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="T:System.IO.StreamWriter">
      <summary>Implementa um <see cref="T:System.IO.TextWriter" /> para gravar caracteres em um fluxo em uma codificação específica.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o fluxo especificado usando a codificação UTF-8 e o tamanho do buffer padrão.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não é gravável.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o fluxo especificado usando a codificação especificada e o tamanho do buffer padrão.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não é gravável.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o fluxo especificado usando o tamanho do buffer e a codificação especificados.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="bufferSize">O tamanho do buffer, em bytes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não é gravável.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o fluxo especificado usando o tamanho do buffer e a codificação especificados e opcionalmente deixa o fluxo aberto.</summary>
      <param name="stream">O fluxo para gravação.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="bufferSize">O tamanho do buffer, em bytes.</param>
      <param name="leaveOpen">
        <see langword="true" /> para deixar o fluxo aberto após o objeto <see cref="T:System.IO.StreamWriter" /> ser descartado; caso contrário, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> não é gravável.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o arquivo especificado usando o tamanho do buffer e a codificação padrão.</summary>
      <param name="path">O caminho de arquivo completo no qual gravar. <paramref name="path" /> pode ser um nome de arquivo.</param>
      <exception cref="T:System.UnauthorizedAccessException">O acesso foi negado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").
-ou-
<paramref name="path" /> contém o nome de um dispositivo de sistema (com1, com2 e assim por diante).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe de rótulo do volume.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o arquivo especificado usando o tamanho do buffer e a codificação padrão. Se o arquivo existir, ele poderá ser substituído ou dados poderão ser acrescentados a ele. Se o arquivo não existir, esse construtor criará um novo arquivo.</summary>
      <param name="path">O caminho de arquivo completo no qual gravar.</param>
      <param name="append">
        <see langword="true" /> para acrescentar dados ao arquivo; <see langword="false" /> para substituir o arquivo. Se o arquivo especificado não existir, esse parâmetro não terá efeito e o construtor criará um novo arquivo.</param>
      <exception cref="T:System.UnauthorizedAccessException">O acesso foi negado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> está vazio.
-ou-
<paramref name="path" /> contém o nome de um dispositivo de sistema (com1, com2 e assim por diante).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe de rótulo do volume.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o arquivo especificado usando a codificação especificada e o tamanho do buffer padrão. Se o arquivo existir, ele poderá ser substituído ou dados poderão ser acrescentados a ele. Se o arquivo não existir, esse construtor criará um novo arquivo.</summary>
      <param name="path">O caminho de arquivo completo no qual gravar.</param>
      <param name="append">
        <see langword="true" /> para acrescentar dados ao arquivo; <see langword="false" /> para substituir o arquivo. Se o arquivo especificado não existir, esse parâmetro não terá efeito e o construtor criará um novo arquivo.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <exception cref="T:System.UnauthorizedAccessException">O acesso foi negado.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> está vazio.
-ou-
<paramref name="path" /> contém o nome de um dispositivo de sistema (com1, com2 e assim por diante).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe de rótulo do volume.</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StreamWriter" /> para o arquivo especificado no caminho especificado usando a codificação especificada e o tamanho do buffer. Se o arquivo existir, ele poderá ser substituído ou dados poderão ser acrescentados a ele. Se o arquivo não existir, esse construtor criará um novo arquivo.</summary>
      <param name="path">O caminho de arquivo completo no qual gravar.</param>
      <param name="append">
        <see langword="true" /> para acrescentar dados ao arquivo; <see langword="false" /> para substituir o arquivo. Se o arquivo especificado não existir, esse parâmetro não terá efeito e o construtor criará um novo arquivo.</param>
      <param name="encoding">A codificação de caracteres a ser usada.</param>
      <param name="bufferSize">O tamanho do buffer, em bytes.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> é uma cadeia de caracteres vazia ("").
-ou-
<paramref name="path" /> contém o nome de um dispositivo de sistema (com1, com2 e assim por diante).</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> ou <paramref name="encoding" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="path" /> inclui uma sintaxe incorreta ou inválida para o nome do arquivo, o nome do diretório ou a sintaxe de rótulo do volume.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
      <exception cref="T:System.UnauthorizedAccessException">O acesso foi negado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">O caminho especificado é inválido (por exemplo, ele está em uma unidade não mapeada).</exception>
      <exception cref="T:System.IO.PathTooLongException">O caminho especificado, o nome de arquivo, ou ambos excedem o tamanho máximo definido pelo sistema.</exception>
    </member>
    <member name="P:System.IO.StreamWriter.AutoFlush">
      <summary>Obtém ou define um valor que indica se o <see cref="T:System.IO.StreamWriter" /> liberará o buffer para o fluxo subjacente após toda a chamada para <see cref="M:System.IO.StreamWriter.Write(System.Char)" />.</summary>
      <returns>
        <see langword="true" /> para forçar o <see cref="T:System.IO.StreamWriter" /> a liberar o buffer; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.BaseStream">
      <summary>Obtém o fluxo subjacente que faz interface com um repositório de backup.</summary>
      <returns>O fluxo para o qual <see langword="StreamWriter" /> está gravando.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Close">
      <summary>Fecha o atual objeto <see langword="StreamWriter" /> e o fluxo subjacente.</summary>
      <exception cref="T:System.Text.EncoderFallbackException">A codificação atual não dá suporte à exibição de metade de um par alternativo Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Dispose(System.Boolean)">
      <summary>Faz com que qualquer dado em buffer seja gravado no fluxo subjacente, libera os recursos não gerenciados usados pelo <see cref="T:System.IO.StreamWriter" /> e, opcionalmente, os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
      <exception cref="T:System.Text.EncoderFallbackException">A codificação atual não dá suporte à exibição de metade de um par alternativo Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.DisposeAsync">
      <summary>Grava de forma assíncrona os dados armazenados em buffer no fluxo subjacente e libera os recursos não gerenciados usados pelo <see cref="T:System.IO.StreamWriter" />.</summary>
      <returns>Uma tarefa que representa a operação de descarte assíncrona.</returns>
    </member>
    <member name="P:System.IO.StreamWriter.Encoding">
      <summary>Obtém o <see cref="T:System.Text.Encoding" /> no qual a saída é gravada.</summary>
      <returns>O <see cref="T:System.Text.Encoding" /> especificado no construtor para a instância atual ou <see cref="T:System.Text.UTF8Encoding" /> se uma codificação não foi especificada.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.Flush">
      <summary>Limpa todos os buffers para o gravador atual e faz com que todos os dados armazenados em buffer sejam gravados no fluxo subjacente.</summary>
      <exception cref="T:System.ObjectDisposedException">O gravador atual está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">A codificação atual não dá suporte à exibição de metade de um par alternativo Unicode.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.FlushAsync">
      <summary>Limpa todos os buffers de forma assíncrona para esse fluxo e faz com que os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O fluxo foi descartado.</exception>
    </member>
    <member name="F:System.IO.StreamWriter.Null">
      <summary>Fornece um <see langword="StreamWriter" /> sem nenhum repositório de backup que pode ser gravado, mas não lido.</summary>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char)">
      <summary>Grava um caractere no fluxo.</summary>
      <param name="value">O caractere a ser gravado no fluxo.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer <see cref="T:System.IO.StreamWriter" /> está cheio e o gravador atual está fechado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer de <see cref="T:System.IO.StreamWriter" /> está cheio e o conteúdo do buffer não pode ser gravado no fluxo subjacente de tamanho fixo, porque o <see cref="T:System.IO.StreamWriter" /> está no final do fluxo.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo.</summary>
      <param name="buffer">Uma matriz de caracteres que contém os dados a serem gravados. Se <paramref name="buffer" /> for <see langword="null" />, nada será gravado.</param>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer <see cref="T:System.IO.StreamWriter" /> está cheio e o gravador atual está fechado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer de <see cref="T:System.IO.StreamWriter" /> está cheio e o conteúdo do buffer não pode ser gravado no fluxo subjacente de tamanho fixo, porque o <see cref="T:System.IO.StreamWriter" /> está no final do fluxo.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres no fluxo.</summary>
      <param name="buffer">A matriz de caracteres que contém os dados a serem gravados.</param>
      <param name="index">A posição do caractere no buffer no qual iniciar a leitura de dados.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer <see cref="T:System.IO.StreamWriter" /> está cheio e o gravador atual está fechado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer de <see cref="T:System.IO.StreamWriter" /> está cheio e o conteúdo do buffer não pode ser gravado no fluxo subjacente de tamanho fixo, porque o <see cref="T:System.IO.StreamWriter" /> está no final do fluxo.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Grava um intervalo de caracteres no fluxo.</summary>
      <param name="buffer">O intervalo de caracteres a ser gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo.</summary>
      <param name="value">A cadeia de caracteres a ser gravada no fluxo. Se <paramref name="value" /> for nulo, nada será gravado.</param>
      <exception cref="T:System.ObjectDisposedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer <see cref="T:System.IO.StreamWriter" /> está cheio e o gravador atual está fechado.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.IO.StreamWriter.AutoFlush" /> é verdadeiro ou o buffer de <see cref="T:System.IO.StreamWriter" /> está cheio e o conteúdo do buffer não pode ser gravado no fluxo subjacente de tamanho fixo, porque o <see cref="T:System.IO.StreamWriter" /> está no final do fluxo.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <param name="arg2">O terceiro objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.Write(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada no fluxo usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg">Uma matriz de objetos que contém zero ou mais objetos a serem formatados e gravados.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char)">
      <summary>Grava um caractere no fluxo de forma assíncrona.</summary>
      <param name="value">O caractere a ser gravado no fluxo.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava de forma assíncrona uma submatriz de caracteres no fluxo.</summary>
      <param name="buffer">A matriz de caracteres que contém os dados a serem gravados.</param>
      <param name="index">A posição do caractere no buffer em que se inicia a leitura de dados.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava a região da memória do caractere no fluxo de forma assíncrona.</summary>
      <param name="buffer">A região da memória do caractere a ser gravado no fluxo.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteAsync(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo de forma assíncrona.</summary>
      <param name="value">A cadeia de caracteres a ser gravada no fluxo. Se <paramref name="value" /> for <see langword="null" />, nada será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Grava a representação de texto de um intervalo de caracteres no fluxo, seguido por um terminador de linha.</summary>
      <param name="buffer">O intervalo de caracteres a ser gravado no fluxo.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se <paramref name="value" /> for <see langword="null" />, o terminador de linha será gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo, usando a mesma semântica que o método <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo, usando a mesma semântica que o método <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo, usando a mesma semântica que <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <param name="arg2">O terceiro objeto a ser formatado e gravado.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLine(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo, usando a mesma semântica que <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg">Uma matriz de objetos que contém zero ou mais objetos a serem formatados e gravados.</param>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync">
      <summary>Grava de forma assíncrona um terminador de linha no fluxo.</summary>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char)">
      <summary>Grava de forma assíncrona um caractere no fluxo, seguido por um terminador de linha.</summary>
      <param name="value">O caractere a ser gravado no fluxo.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava de forma assíncrona uma submatriz de caracteres no fluxo, seguida por um terminador de linha no fluxo.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição do caractere no buffer no qual iniciar a leitura de dados.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de texto de uma região da memória do caractere no fluxo, seguida por um terminador de linha.</summary>
      <param name="buffer">A região da memória do caractere a ser gravado no fluxo.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StreamWriter.WriteLineAsync(System.String)">
      <summary>Grava de forma assíncrona uma cadeia de caracteres no fluxo, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se o valor for <see langword="null" />, somente um terminador de linha será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de fluxo é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de fluxo está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="T:System.IO.StringReader">
      <summary>Implementa um <see cref="T:System.IO.TextReader" /> lido de uma cadeia de caracteres.</summary>
    </member>
    <member name="M:System.IO.StringReader.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StringReader" /> que lê da cadeia de caracteres especificada.</summary>
      <param name="s">A cadeia de caracteres para a qual o <see cref="T:System.IO.StringReader" /> deve ser inicializado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="s" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringReader.Close">
      <summary>Fecha o <see cref="T:System.IO.StringReader" />.</summary>
    </member>
    <member name="M:System.IO.StringReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.StringReader" /> e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.StringReader.Peek">
      <summary>Retorna o próximo caractere disponível, mas não o consome.</summary>
      <returns>Um inteiro que representa o próximo caractere a ser lido ou -1 se não houver mais caracteres disponíveis ou se o fluxo não der suporte a buscas.</returns>
      <exception cref="T:System.ObjectDisposedException">O leitor atual está fechado.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read">
      <summary>Lê o próximo caractere da cadeia de caracteres de entrada e avança a posição do caractere em um caractere.</summary>
      <returns>O próximo caractere da cadeia de caracteres subjacente ou -1 se nenhum outro caractere estiver disponível.</returns>
      <exception cref="T:System.ObjectDisposedException">O leitor atual está fechado.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um bloco de caracteres da cadeia de caracteres da entrada e avança a posição do caractere em <paramref name="count" />.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">O índice inicial no buffer.</param>
      <param name="count">O número de caracteres a serem lidos.</param>
      <returns>O número total de caracteres lidos no buffer. Ele poderá ser menor que o número de caracteres solicitado se esse número de caracteres não estiver disponível no momento, ou zero se a cadeia de caracteres subjacente for atingida.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor atual está fechado.</exception>
    </member>
    <member name="M:System.IO.StringReader.Read(System.Span{System.Char})">
      <summary>Lê todos os caracteres da cadeia de caracteres de entrada, começando na posição atual e avança a posição atual para o final da cadeia de caracteres de entrada.</summary>
      <param name="buffer">Quando esse método retorna, contém os caracteres lidos da fonte atual. Se o número total de caracteres lidos for zero, a extensão permanecerá inalterada.</param>
      <returns>O número total de caracteres lidos no buffer.</returns>
      <exception cref="T:System.ObjectDisposedException">A instância atual do leitor de cadeia de caracteres está fechada.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres do fluxo atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a ler. Se o final da cadeia de caracteres for atingido antes que o número especificado de caracteres seja gravado no buffer, o método será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final da cadeia de caracteres foi atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de cadeia de caracteres foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona todos os caracteres da cadeia de caracteres de entrada, começando na posição atual e avança a posição atual para o final da cadeia de caracteres de entrada.</summary>
      <param name="buffer">Quando esse método retorna, contém os caracteres lidos da fonte atual.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de caracteres lidos no buffer.</returns>
    </member>
    <member name="M:System.IO.StringReader.ReadBlock(System.Span{System.Char})">
      <summary>Lê todos os caracteres da cadeia de caracteres de entrada começando na posição atual e avança a posição atual para o final da cadeia de caracteres de entrada.</summary>
      <param name="buffer">Quando esse método retorna, contém os caracteres lidos da fonte atual. Se o número total de caracteres lidos for zero, a extensão permanecerá inalterada.</param>
      <returns>O número total de caracteres lidos no buffer.</returns>
      <exception cref="T:System.ObjectDisposedException">A instância atual do leitor de cadeia de caracteres está fechada.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres do fluxo atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a ler. Se o final da cadeia de caracteres for atingido antes que o número especificado de caracteres seja gravado no buffer, o método será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final da cadeia de caracteres foi atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de cadeia de caracteres foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona todos os caracteres da cadeia de caracteres de entrada começando na posição atual e avança a posição atual para o final da cadeia de caracteres de entrada.</summary>
      <param name="buffer">Quando esse método retorna, contém os caracteres lidos da fonte atual. Se o número total de caracteres lidos for zero, a extensão permanecerá inalterada.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de caracteres lidos no buffer.</returns>
    </member>
    <member name="M:System.IO.StringReader.ReadLine">
      <summary>Lê uma linha de caracteres da cadeia de caracteres atual e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>A próxima linha da cadeia de caracteres atual, ou <see langword="null" />, se o final da cadeia de caracteres for atingido.</returns>
      <exception cref="T:System.ObjectDisposedException">O leitor atual está fechado.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadLineAsync">
      <summary>Lê uma linha de caracteres assincronamente da cadeia de caracteres atual e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém a próxima linha do leitor de cadeia de caracteres ou <see langword="null" /> se todos os caracteres tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres na próxima linha é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de cadeia de caracteres foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEnd">
      <summary>Lê todos os caracteres da posição atual até o final da cadeia de caracteres e os retorna como uma única cadeia de caracteres.</summary>
      <returns>O conteúdo da posição atual até o final da cadeia de caracteres subjacente.</returns>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor atual está fechado.</exception>
    </member>
    <member name="M:System.IO.StringReader.ReadToEndAsync">
      <summary>Lê todos os caracteres da posição atual até o final da cadeia de caracteres de forma assíncrona e os retorna como uma única cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém uma cadeia de caracteres com os caracteres da posição atual até o final da cadeia de caracteres.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de cadeia de caracteres foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="T:System.IO.StringWriter">
      <summary>Implementa um <see cref="T:System.IO.TextWriter" /> para gravar informações em uma cadeia de caracteres. As informações são armazenadas em um <see cref="T:System.Text.StringBuilder" /> subjacente.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StringWriter" />.</summary>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.IFormatProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StringWriter" /> com o controle de formato especificado.</summary>
      <param name="formatProvider">Um objeto <see cref="T:System.IFormatProvider" /> que controla a formatação.</param>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StringWriter" /> que é gravada para o <see cref="T:System.Text.StringBuilder" /> especificado.</summary>
      <param name="sb">O objeto <see cref="T:System.Text.StringBuilder" /> de gravação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.StringWriter" /> que grava no <see cref="T:System.Text.StringBuilder" /> especificado e têm o provedor de formato especificado.</summary>
      <param name="sb">O objeto <see cref="T:System.Text.StringBuilder" /> de gravação.</param>
      <param name="formatProvider">Um objeto <see cref="T:System.IFormatProvider" /> que controla a formatação.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sb" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Close">
      <summary>Fecha o <see cref="T:System.IO.StringWriter" /> atual e o fluxo subjacente.</summary>
    </member>
    <member name="M:System.IO.StringWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.StringWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="P:System.IO.StringWriter.Encoding">
      <summary>Obtém o <see cref="T:System.Text.Encoding" /> no qual a saída é gravada.</summary>
      <returns>O <see langword="Encoding" /> no qual a saída é gravada.</returns>
    </member>
    <member name="M:System.IO.StringWriter.FlushAsync">
      <summary>Limpa, de maneira assíncrona, todos os buffers do gravador atual e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.GetStringBuilder">
      <summary>Retorna o <see cref="T:System.Text.StringBuilder" /> subjacente.</summary>
      <returns>O <see langword="StringBuilder" /> subjacente.</returns>
    </member>
    <member name="M:System.IO.StringWriter.ToString">
      <summary>Retorna uma cadeia de caracteres que contém os caracteres gravados no <see langword="StringWriter" /> atual até agora.</summary>
      <returns>A cadeia de caracteres que contém os caracteres gravados no <see langword="StringWriter" /> atual.</returns>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char)">
      <summary>Grava um caractere na cadeia de caracteres.</summary>
      <param name="value">O caractere a se gravar.</param>
      <exception cref="T:System.ObjectDisposedException">O gravador está fechado.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres na cadeia de caracteres.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição no buffer em que a leitura de dados é iniciada.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />. <see langword="Length" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador está fechado.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Grava a representação da cadeia de caracteres de um intervalo de chars na cadeia de caracteres atual.</summary>
      <param name="buffer">Um intervalo de chars a serem gravados na cadeia de caracteres.</param>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.String)">
      <summary>Grava uma cadeia de caracteres na cadeia de caracteres atual.</summary>
      <param name="value">A cadeia de caracteres a ser gravada.</param>
      <exception cref="T:System.ObjectDisposedException">O gravador está fechado.</exception>
    </member>
    <member name="M:System.IO.StringWriter.Write(System.Text.StringBuilder)">
      <summary>Grava a representação da cadeia de caracteres de um construtor de cadeia de caracteres na cadeia de caracteres atual.</summary>
      <param name="value">O construtor de cadeia de caracteres a ser gravado na cadeia de caracteres.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char)">
      <summary>Grava um caractere na cadeia de caracteres de forma assíncrona.</summary>
      <param name="value">O caractere a ser gravado na cadeia de caracteres.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres na cadeia de caracteres de forma assíncrona.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição no buffer em que a leitura de dados é iniciada.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava uma região da memória de caracteres na cadeia de caracteres de forma assíncrona.</summary>
      <param name="buffer">A região da memória do caractere a ser gravado na cadeia de caracteres.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.String)">
      <summary>Grava uma cadeia de caracteres na cadeia de caracteres atual de forma assíncrona.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se <paramref name="value" /> for <see langword="null" />, nada será gravado no fluxo de texto.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de texto de um construtor de cadeia de caracteres na cadeia de caracteres.</summary>
      <param name="value">O construtor de cadeia de caracteres a ser gravado na cadeia de caracteres.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Grava a representação de texto de um intervalo de caracteres na cadeia de caracteres, seguida por um terminador de linha.</summary>
      <param name="buffer">O intervalo de caracteres a serem gravados na cadeia de caracteres.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Grava a representação de texto de um construtor de cadeia de caracteres na cadeia de caracteres, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres, como um construtor de cadeia de caracteres, a ser gravada na cadeia de caracteres.</param>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char)">
      <summary>Grava um caractere na cadeia de caracteres de forma assíncrona, seguidos por um terminador de linha.</summary>
      <param name="value">O caractere a ser gravado na cadeia de caracteres.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava de forma assíncrona uma submatriz de caracteres na cadeia de caracteres, seguida por um terminador de linha no fluxo.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição no buffer em que a leitura de dados é iniciada.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de cadeia de caracteres de uma região da memória de caracteres na cadeia de caracteres atual, seguida por um terminador de linha.</summary>
      <param name="buffer">Uma região de memória de caracteres a ser gravada na cadeia de caracteres.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.String)">
      <summary>Grava uma cadeia de caracteres na cadeia de caracteres atual de forma assíncrona, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se o valor for <see langword="null" />, somente um terminador de linha será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de cadeia de caracteres é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de cadeia de caracteres está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.StringWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de cadeia de caracteres do construtor de cadeia de caracteres na cadeia de caracteres atual, seguida por um terminador de linha.</summary>
      <param name="value">O construtor de cadeia de caracteres a ser gravado na cadeia de caracteres.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="T:System.IO.TextReader">
      <summary>Representa um leitor que pode ler uma série sequencial de caracteres.</summary>
    </member>
    <member name="M:System.IO.TextReader.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Close">
      <summary>Fecha o <see cref="T:System.IO.TextReader" /> e libera os recursos do sistema associados ao <see langword="TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose">
      <summary>Libera todos os recursos usados pelo objeto <see cref="T:System.IO.TextReader" />.</summary>
    </member>
    <member name="M:System.IO.TextReader.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.TextReader" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="F:System.IO.TextReader.Null">
      <summary>Fornece um <see langword="TextReader" /> sem dados a serem lidos.</summary>
    </member>
    <member name="M:System.IO.TextReader.Peek">
      <summary>Lê o próximo caractere sem alterar o estado do leitor ou a origem do caractere. Retorna o próximo caractere disponível sem realmente lê-lo no leitor.</summary>
      <returns>Um inteiro que representa o próximo caractere a ser lido ou -1 se não houver mais caracteres disponíveis ou se o leitor não der suporte a buscas.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read">
      <summary>Lê o próximo caractere do leitor de texto e avança a posição do caractere em um caractere.</summary>
      <returns>O próximo caractere do leitor de texto ou -1 se não houver mais nenhum caractere disponível. A implementação padrão retorna -1.</returns>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres do leitor atual e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos. Se o final do leitor for atingido antes que o número especificado de caracteres seja lido no buffer, o método será retornado.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual a <paramref name="count" />, dependendo se os dados estão disponíveis no leitor. Esse método retornará 0 (zero) se for chamado quando não houver mais caracteres para ler.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextReader.Read(System.Span{System.Char})">
      <summary>Lê os caracteres do leitor atual e grava os dados no buffer especificado.</summary>
      <param name="buffer">Quando este método é retornado, contém o intervalo de caracteres especificado substituídos pelos caracteres lidos da origem atual.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual ao comprimento do <paramref name="buffer" />, dependendo da disponibilidade dos dados no leitor. Esse método retornará 0 (zero) se for chamado quando não houver mais caracteres para ler.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">O número de caracteres lidos do fluxo é maior do que o comprimento do <paramref name="buffer" />.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres do leitor de texto atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos. Se o final do texto for atingido antes que o número especificado de caracteres seja lido no buffer, o método atual será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do texto tiver sido atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de texto foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os caracteres do fluxo atual para um bloco de memória.</summary>
      <param name="buffer">Quando este método é retornado, contém o bloco de memória de caracteres especificado substituídos pelos caracteres lidos da fonte de dados atual.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa de valor que representa a operação de leitura assíncrona. O valor do parâmetro de tipo contém o número de caracteres que foram lidos, ou 0, caso esteja no final do fluxo e nenhum dado tenha sido lido. O número será menor ou igual ao comprimento do <paramref name="buffer" />, dependendo da disponibilidade dos dados no fluxo.</returns>
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um máximo especificado de caracteres do leitor de texto atual e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método retorna, este parâmetro contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> -1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual a <paramref name="count" />, dependendo se todos os caracteres de entrada tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})">
      <summary>Lê os caracteres do fluxo atual e grava os dados em um buffer.</summary>
      <param name="buffer">Quando este método é retornado, contém o intervalo de caracteres especificado substituídos pelos caracteres lidos da origem atual.</param>
      <returns>O número de caracteres que foram lidos. O número será menor ou igual ao comprimento de <paramref name="buffer" />, dependendo se todos os caracteres de entrada tiverem sido lidos.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.StreamReader" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorreu um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lê um número máximo especificado de caracteres do leitor de texto atual de forma assíncrona e grava os dados em um buffer, começando no índice especificado.</summary>
      <param name="buffer">Quando esse método é retornado, contém a matriz de caracteres especificada com os valores entre <paramref name="index" /> e (<paramref name="index" /> + <paramref name="count" /> – 1) substituídos pelos caracteres lidos da origem atual.</param>
      <param name="index">A posição em <paramref name="buffer" /> na qual a gravação será iniciada.</param>
      <param name="count">O número máximo de caracteres a serem lidos. Se o final do texto for atingido antes que o número especificado de caracteres seja lido no buffer, o método atual será retornado.</param>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém o número total de bytes lidos no buffer. O valor do resultado poderá ser menor que o número de bytes solicitados se o número de bytes disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do texto tiver sido atingido.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ArgumentException">A soma de <paramref name="index" /> e <paramref name="count" /> é maior que o tamanho do buffer.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de texto foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)">
      <summary>Lê de forma assíncrona os caracteres do fluxo atual e grava os dados em um buffer.</summary>
      <param name="buffer">Quando este método é retornado, contém o bloco de memória de caracteres especificado substituídos pelos caracteres lidos da fonte de dados atual.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa de valor que representa a operação de leitura assíncrona. O valor do parâmetro de tipo contém o número total de caracteres lidos no buffer. O valor do resultado poderá ser menor que o número de caracteres solicitados se o número de caracteres disponíveis no momento for menor que o número solicitado ou poderá ser 0 (zero) se o final do fluxo for atingido.</returns>
    </member>
    <member name="M:System.IO.TextReader.ReadLine">
      <summary>Lê uma linha de caracteres do leitor de texto e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>A próxima linha do leitor, ou <see langword="null" />, se todos os caracteres foram lidos.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres na próxima linha é maior que <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.IO.TextReader.ReadLineAsync">
      <summary>Lê uma linha de caracteres assincronamente e retorna os dados como uma cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém a próxima linha do leitor de texto ou é <see langword="null" /> se todos os caracteres foram lidos.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres na próxima linha é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de texto foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEnd">
      <summary>Lê todos os caracteres da posição atual até o final do leitor de texto e os retorna como uma cadeia de caracteres.</summary>
      <returns>Uma cadeia de caracteres que contém todos os caracteres da posição atual até o final do leitor de texto.</returns>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextReader" /> está fechado.</exception>
      <exception cref="T:System.OutOfMemoryException">Não há memória suficiente para alocar um buffer à cadeia de caracteres retornada.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres na próxima linha é maior que <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.IO.TextReader.ReadToEndAsync">
      <summary>Lê todos os caracteres da posição atual até o final do leitor de texto de forma assíncrona e os retorna como uma cadeia de caracteres.</summary>
      <returns>Uma tarefa que representa a operação de leitura assíncrona. O valor do parâmetro <paramref name="TResult" /> contém uma cadeia de caracteres com os caracteres da posição atual até o final do leitor de texto.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">O número de caracteres é maior que <see cref="F:System.Int32.MaxValue" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O leitor de texto foi descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O leitor está sendo usado no momento por uma operação de leitura anterior.</exception>
    </member>
    <member name="M:System.IO.TextReader.Synchronized(System.IO.TextReader)">
      <summary>Cria um wrapper thread-safe em torno do <see langword="TextReader" /> especificado.</summary>
      <param name="reader">O <see langword="TextReader" /> a ser sincronizado.</param>
      <returns>Um <see cref="T:System.IO.TextReader" /> thread-safe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.IO.TextWriter">
      <summary>Representa um gravador que pode gravar uma série sequencial de caracteres. Esta classe é abstrata.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.#ctor(System.IFormatProvider)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.IO.TextWriter" /> com o provedor de formato especificado.</summary>
      <param name="formatProvider">Um objeto <see cref="T:System.IFormatProvider" /> que controla a formatação.</param>
    </member>
    <member name="M:System.IO.TextWriter.Close">
      <summary>Fecha o gravador atual e libera os recursos de sistema associados ao gravador.</summary>
    </member>
    <member name="F:System.IO.TextWriter.CoreNewLine">
      <summary>Armazena os caracteres de nova linha usados para esse <see langword="TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose">
      <summary>Libera todos os recursos usados pelo objeto <see cref="T:System.IO.TextWriter" />.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados usados pelo <see cref="T:System.IO.TextWriter" /> e opcionalmente libera os recursos gerenciados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar recursos gerenciados e não gerenciados; <see langword="false" /> para liberar apenas recursos não gerenciados.</param>
    </member>
    <member name="M:System.IO.TextWriter.DisposeAsync">
      <summary>Libera de forma assíncrona todos os recursos usados pelo objeto <see cref="T:System.IO.TextWriter" />.</summary>
      <returns>Uma tarefa que representa a operação de descarte assíncrona.</returns>
    </member>
    <member name="P:System.IO.TextWriter.Encoding">
      <summary>Quando substituído em uma classe derivada, retorna a codificação de caracteres na qual a saída é gravada.</summary>
      <returns>A codificação de caracteres na qual a saída é gravada.</returns>
    </member>
    <member name="M:System.IO.TextWriter.Flush">
      <summary>Limpa todos os buffers do gravador atual e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
    </member>
    <member name="M:System.IO.TextWriter.FlushAsync">
      <summary>Limpa, de maneira assíncrona, todos os buffers do gravador atual e faz com que todos os dados armazenados em buffer sejam gravados no dispositivo subjacente.</summary>
      <returns>Uma tarefa que representa a operação de liberação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="P:System.IO.TextWriter.FormatProvider">
      <summary>Obtém um objeto que controla a formatação.</summary>
      <returns>Um objeto <see cref="T:System.IFormatProvider" /> para uma cultura específica ou a formatação da cultura atual, se nenhuma outra cultura for especificada.</returns>
    </member>
    <member name="P:System.IO.TextWriter.NewLine">
      <summary>Obtém ou define a cadeia de caracteres de terminador de linha usada pelo <see langword="TextWriter" /> atual.</summary>
      <returns>A cadeia de caracteres de terminador de linha <see langword="TextWriter" /> atual.</returns>
    </member>
    <member name="F:System.IO.TextWriter.Null">
      <summary>Fornece um <see langword="TextWriter" /> sem nenhum repositório de backup que pode ser gravado, mas não lido.</summary>
    </member>
    <member name="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)">
      <summary>Cria um wrapper thread-safe em torno do <see langword="TextWriter" /> especificado.</summary>
      <param name="writer">O <see langword="TextWriter" /> a ser sincronizado.</param>
      <returns>Um wrapper thread-safe.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Boolean)">
      <summary>Grava a representação de texto de um valor <see langword="Boolean" /> no fluxo de texto.</summary>
      <param name="value">O valor <see langword="Boolean" /> a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char)">
      <summary>Grava um caractere no fluxo de texto.</summary>
      <param name="value">O caractere a ser gravado no fluxo de texto.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres a ser gravada no fluxo de texto.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres no fluxo de texto.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição do caractere no buffer em que iniciar a recuperação de dados.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Decimal)">
      <summary>Grava a representação de texto de um valor decimal no fluxo de texto.</summary>
      <param name="value">O valor decimal a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Double)">
      <summary>Grava a representação de texto de um valor de ponto flutuante de 8 bytes no fluxo de texto.</summary>
      <param name="value">O valor de ponto flutuante de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int32)">
      <summary>Grava a representação de texto de um inteiro com sinal de 4 bytes no fluxo de texto.</summary>
      <param name="value">O inteiro com sinal de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Int64)">
      <summary>Grava a representação de texto de um inteiro com sinal de 8 bytes no fluxo de texto.</summary>
      <param name="value">O inteiro com sinal de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Object)">
      <summary>Grava a representação de texto de um objeto no fluxo de texto chamando o método <see langword="ToString" /> nesse objeto.</summary>
      <param name="value">O objeto a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.ReadOnlySpan{System.Char})">
      <summary>Grava um intervalo de caracteres no fluxo de texto.</summary>
      <param name="buffer">O intervalo de caracteres a ser gravado.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Single)">
      <summary>Grava a representação de texto de um valor de ponto flutuante de 4 bytes no fluxo de texto.</summary>
      <param name="value">O valor de ponto flutuante de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo de texto.</summary>
      <param name="value">A cadeia de caracteres a ser gravada.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo de texto usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é um).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo de texto usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é dois).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada no fluxo de texto usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <param name="arg2">O terceiro objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é três).</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada no fluxo de texto usando a mesma semântica do método <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg">Uma matriz de objetos que contém zero ou mais objetos a serem formatados e gravados.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> ou <paramref name="arg" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao tamanho da matriz <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.Text.StringBuilder)">
      <summary>Grava um construtor de cadeia de caracteres no fluxo de texto.</summary>
      <param name="value">A cadeia de caracteres, como um construtor de cadeia de caracteres, a ser gravada no fluxo de texto.</param>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt32)">
      <summary>Grava a representação de texto de um inteiro sem sinal de 4 bytes no fluxo de texto.</summary>
      <param name="value">O inteiro sem sinal de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.Write(System.UInt64)">
      <summary>Grava a representação de texto de um inteiro sem sinal de 8 bytes no fluxo de texto.</summary>
      <param name="value">O inteiro sem sinal de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char)">
      <summary>Grava um caractere no fluxo de texto de forma assíncrona.</summary>
      <param name="value">O caractere a ser gravado no fluxo de texto.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo de texto de forma assíncrona.</summary>
      <param name="buffer">A matriz de caracteres a ser gravada no fluxo de texto. Se <paramref name="buffer" /> for <see langword="null" />, nada será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres no fluxo de texto de forma assíncrona.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição do caractere no buffer em que iniciar a recuperação de dados.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava a região da memória do caractere no fluxo de texto de forma assíncrona.</summary>
      <param name="buffer">A região da memória do caractere a ser gravado no fluxo de texto.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo de texto de forma assíncrona.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se <paramref name="value" /> for <see langword="null" />, nada será gravado no fluxo de texto.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona um construtor de cadeia de caracteres no fluxo de texto.</summary>
      <param name="value">A cadeia de caracteres, como um construtor de cadeia de caracteres, a ser gravada no fluxo de texto.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine">
      <summary>Grava um terminador de linha no fluxo de texto.</summary>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Boolean)">
      <summary>Grava a representação de texto de um valor <see langword="Boolean" /> no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">O valor <see langword="Boolean" /> a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char)">
      <summary>Grava um caractere no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O caractere a ser gravado no fluxo de texto.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[])">
      <summary>Grava uma matriz de caracteres no fluxo de texto, seguida por um terminador de linha no fluxo.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados são lidos.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>Grava uma submatriz de caracteres no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados são lidos.</param>
      <param name="index">A posição do caractere no <paramref name="buffer" /> no qual a leitura de dados é iniciada.</param>
      <param name="count">O número máximo de caracteres a serem gravados.</param>
      <exception cref="T:System.ArgumentException">O tamanho do buffer menos <paramref name="index" /> é menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Decimal)">
      <summary>Grava a representação de texto de um valor decimal no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">O valor decimal a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Double)">
      <summary>Grava a representação de texto de um valor de ponto flutuante de 8 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O valor de ponto flutuante de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int32)">
      <summary>Grava a representação de texto de um inteiro com sinal de 4 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O inteiro com sinal de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Int64)">
      <summary>Grava a representação de texto de um inteiro com sinal de 8 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O inteiro com sinal de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Object)">
      <summary>Grava a representação de texto de um objeto no fluxo de texto chamando o método <see langword="ToString" /> nesse objeto, seguido por um terminador de linha.</summary>
      <param name="value">O objeto a ser gravado. Se <paramref name="value" /> for <see langword="null" />, o terminador de linha será gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.ReadOnlySpan{System.Char})">
      <summary>Grava a representação de texto de um intervalo de caracteres no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="buffer">O valor do intervalo de caracteres a ser gravado no fluxo de texto.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Single)">
      <summary>Grava a representação de texto de um valor de ponto flutuante de 4 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O valor de ponto flutuante de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String)">
      <summary>Grava uma cadeia de caracteres no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se <paramref name="value" /> for <see langword="null" />, o terminador de linha será gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo de texto, usando a mesma semântica que o método <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é um).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo de texto, usando a mesma semântica que o método <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é dois).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo de texto, usando a mesma semântica que <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg0">O primeiro objeto a ser formatado e gravado.</param>
      <param name="arg1">O segundo objeto a ser formatado e gravado.</param>
      <param name="arg2">O terceiro objeto a ser formatado e gravado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao número de objetos a serem formatados (que, para essa sobrecarga de método, é três).</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.String,System.Object[])">
      <summary>Grava uma cadeia de caracteres formatada e uma nova linha no fluxo de texto, usando a mesma semântica que <see cref="M:System.String.Format(System.String,System.Object)" />.</summary>
      <param name="format">Uma cadeia de caracteres de formato de composição.</param>
      <param name="arg">Uma matriz de objetos que contém zero ou mais objetos a serem formatados e gravados.</param>
      <exception cref="T:System.ArgumentNullException">Uma cadeia de caracteres ou objeto é passado como <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="format" /> não é uma cadeia de caracteres de formato de composição válida.
-ou-
O índice de um item de formato é menor que 0 (zero) ou maior ou igual ao tamanho da matriz <paramref name="arg" />.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.Text.StringBuilder)">
      <summary>Grava a representação de texto de um construtor de cadeia de caracteres no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres, como um construtor de cadeia de caracteres, a ser gravada no fluxo de texto.</param>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt32)">
      <summary>Grava a representação de texto de um inteiro sem sinal de 4 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O inteiro sem sinal de 4 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLine(System.UInt64)">
      <summary>Grava a representação de texto de um inteiro sem sinal de 8 bytes no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O inteiro sem sinal de 8 bytes a ser gravado.</param>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.IO.TextWriter" /> está fechado.</exception>
      <exception cref="T:System.IO.IOException">Ocorre um erro de E/S.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync">
      <summary>Grava de forma assíncrona um terminador de linha no fluxo de texto.</summary>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char)">
      <summary>Grava de forma assíncrona um caractere no fluxo de texto, seguido por um terminador de linha.</summary>
      <param name="value">O caractere a ser gravado no fluxo de texto.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[])">
      <summary>Grava de forma assíncrona uma matriz de caracteres no fluxo de texto, seguida por um terminador de linha no fluxo.</summary>
      <param name="buffer">A matriz de caracteres a ser gravada no fluxo de texto. Se a matriz de caracteres for <see langword="null" />, somente o terminador de linha será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Grava de forma assíncrona uma submatriz de caracteres no fluxo de texto, seguida por um terminador de linha no fluxo.</summary>
      <param name="buffer">A matriz de caracteres da qual os dados serão gravados.</param>
      <param name="index">A posição do caractere no buffer em que iniciar a recuperação de dados.</param>
      <param name="count">O número de caracteres a serem gravados.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O <paramref name="index" /> mais <paramref name="count" /> é maior que o comprimento do buffer.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ou <paramref name="count" /> é negativo.</exception>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de texto de uma região da memória do caractere no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="buffer">A região da memória do caractere a ser gravado no fluxo de texto.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.String)">
      <summary>Grava de forma assíncrona uma cadeia de caracteres no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres a ser gravada. Se o valor for <see langword="null" />, somente um terminador de linha será gravado.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
      <exception cref="T:System.ObjectDisposedException">O gravador de texto é descartado.</exception>
      <exception cref="T:System.InvalidOperationException">O gravador de texto está sendo usado no momento por uma operação de gravação anterior.</exception>
    </member>
    <member name="M:System.IO.TextWriter.WriteLineAsync(System.Text.StringBuilder,System.Threading.CancellationToken)">
      <summary>Grava de forma assíncrona a representação de texto de um construtor de cadeia de caracteres no fluxo de texto, seguida por um terminador de linha.</summary>
      <param name="value">A cadeia de caracteres, como um construtor de cadeia de caracteres, a ser gravada no fluxo de texto.</param>
      <param name="cancellationToken">O token a se monitorar para solicitações de cancelamento. O valor padrão é <see cref="P:System.Threading.CancellationToken.None" />.</param>
      <returns>Uma tarefa que representa a operação de gravação assíncrona.</returns>
    </member>
    <member name="T:System.LoaderOptimization">
      <summary>Uma enumeração usada com a classe <see cref="T:System.LoaderOptimizationAttribute" /> para especificar otimizações de carregador para um executável.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DisallowBindings">
      <summary>Ignorado pelo Common Language Runtime.</summary>
    </member>
    <member name="F:System.LoaderOptimization.DomainMask">
      <summary>Não use. Essa máscara seleciona os valores relacionados a domínios, removendo os que tiverem o sinalizador <see cref="F:System.LoaderOptimization.DisallowBindings" /> não usado.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomain">
      <summary>Indica que o aplicativo provavelmente terá vários domínios que usam o mesmo código e o carregador deverá compartilhar ao máximo os recursos internos entre domínios de aplicativo.</summary>
    </member>
    <member name="F:System.LoaderOptimization.MultiDomainHost">
      <summary>Indica que o aplicativo provavelmente hospedará um código exclusivo em vários domínios e o carregador deverá compartilhar recursos entre domínios de aplicativo somente para os assemblies disponíveis globalmente (com nome forte) que tiverem sido adicionados ao cache de assembly global.</summary>
    </member>
    <member name="F:System.LoaderOptimization.NotSpecified">
      <summary>Indica que nenhuma otimização para compartilhar recursos internos foi especificada. Se a interface de hospedagem ou o domínio padrão tiver especificado uma otimização, o carregador usará isso; caso contrário, usará <see cref="F:System.LoaderOptimization.SingleDomain" />.</summary>
    </member>
    <member name="F:System.LoaderOptimization.SingleDomain">
      <summary>Indica que o aplicativo provavelmente terá um único domínio e o carregador não deverá compartilhar recursos internos entre domínios de aplicativo.</summary>
    </member>
    <member name="T:System.LoaderOptimizationAttribute">
      <summary>Usado para definir a política de otimização do carregador padrão para o método principal de um aplicativo executável.</summary>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.Byte)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.LoaderOptimizationAttribute" /> para o valor especificado.</summary>
      <param name="value">Um valor equivalente a uma constante <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="M:System.LoaderOptimizationAttribute.#ctor(System.LoaderOptimization)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.LoaderOptimizationAttribute" /> para o valor especificado.</summary>
      <param name="value">Uma constante <see cref="T:System.LoaderOptimization" />.</param>
    </member>
    <member name="P:System.LoaderOptimizationAttribute.Value">
      <summary>Obtém o valor <see cref="T:System.LoaderOptimization" /> atual dessa instância.</summary>
      <returns>Uma constante <see cref="T:System.LoaderOptimization" />.</returns>
    </member>
    <member name="T:System.Math">
      <summary>Fornece constantes e métodos estáticos para trigonométricas, logarítmicas e outras funções matemáticas comuns.</summary>
    </member>
    <member name="M:System.Math.Abs(System.Decimal)">
      <summary>Retorna o valor absoluto de um número <see cref="T:System.Decimal" />.</summary>
      <param name="value">Um número maior ou igual a <see cref="F:System.Decimal.MinValue" />, mas menor ou igual a <see cref="F:System.Decimal.MaxValue" />.</param>
      <returns>Um número decimal, x, tal que 0 ≤ x ≤ <see cref="F:System.Decimal.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Double)">
      <summary>Retorna o valor absoluto de um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">Um número maior ou igual a <see cref="F:System.Double.MinValue" />, mas menor ou igual a <see cref="F:System.Double.MaxValue" />.</param>
      <returns>Um número de ponto flutuante de precisão dupla, x, tal que 0 ≤ x ≤ <see cref="F:System.Double.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Abs(System.Int16)">
      <summary>Retorna o valor absoluto de um inteiro com sinal de 16 bits.</summary>
      <param name="value">Um número maior que <see cref="F:System.Int16.MinValue" />, mas menor ou igual a <see cref="F:System.Int16.MaxValue" />.</param>
      <returns>Um inteiro com sinal de 16 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int16.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é igual a <see cref="F:System.Int16.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int32)">
      <summary>Retorna o valor absoluto de um inteiro com sinal de 32 bits.</summary>
      <param name="value">Um número maior que <see cref="F:System.Int32.MinValue" />, mas menor ou igual a <see cref="F:System.Int32.MaxValue" />.</param>
      <returns>Um inteiro com sinal de 32 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int32.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é igual a <see cref="F:System.Int32.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Int64)">
      <summary>Retorna o valor absoluto de um inteiro com sinal de 64 bits.</summary>
      <param name="value">Um número maior que <see cref="F:System.Int64.MinValue" />, mas menor ou igual a <see cref="F:System.Int64.MaxValue" />.</param>
      <returns>Um inteiro com sinal de 64 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.Int64.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é igual a <see cref="F:System.Int64.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.SByte)">
      <summary>Retorna o valor absoluto de um inteiro com sinal de 8 bits.</summary>
      <param name="value">Um número maior que <see cref="F:System.SByte.MinValue" />, mas menor ou igual a <see cref="F:System.SByte.MaxValue" />.</param>
      <returns>Um inteiro com sinal de 8 bits, x, tal que 0 ≤ x ≤ <see cref="F:System.SByte.MaxValue" />.</returns>
      <exception cref="T:System.OverflowException">
        <paramref name="value" /> é igual a <see cref="F:System.SByte.MinValue" />.</exception>
    </member>
    <member name="M:System.Math.Abs(System.Single)">
      <summary>Retorna o valor absoluto de um número de ponto flutuante de precisão simples.</summary>
      <param name="value">Um número maior ou igual a <see cref="F:System.Single.MinValue" />, mas menor ou igual a <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Um número de ponto flutuante de precisão simples, x, tal que 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.Math.Acos(System.Double)">
      <summary>Retorna o ângulo cujo cosseno é o número especificado.</summary>
      <param name="d">Um número que representa um cosseno, em que <paramref name="d" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que 0 ≤ θ ≤ π
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 ou <paramref name="d" /> &gt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Acosh(System.Double)">
      <summary>Retorna o ângulo cujo cosseno hiperbólico é o número especificado.</summary>
      <param name="d">Um número que representa um cosseno hiperbólico, em que <paramref name="d" /> deve ser maior ou igual a 1, mas menor ou igual a <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que 0 ≤ θ ≤ ∞.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asin(System.Double)">
      <summary>Retorna o ângulo cujo seno é o número especificado.</summary>
      <param name="d">Um número que representa um seno, em que <paramref name="d" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -π/2 ≤ θ ≤ π/2
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 ou <paramref name="d" /> &gt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Asinh(System.Double)">
      <summary>Retorna o ângulo cujo seno hiperbólico é o número especificado.</summary>
      <param name="d">Um número que representa um seno hiperbólico, em que <paramref name="d" /> deve ser maior ou igual a <see cref="F:System.Double.NegativeInfinity" />, mas menor ou igual a <see cref="F:System.Double.PositiveInfinity" />.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -∞ &lt; θ ≤ -1 ou 1 ≤ θ &lt; ∞.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atan(System.Double)">
      <summary>Retorna o ângulo cuja tangente é o número especificado.</summary>
      <param name="d">Um número que representa uma tangente.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que π/2 ≤ θ ≤ π/2.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, -π/2 arrendondado para precisão dupla (-1,5707963267949) se <paramref name="d" /> for igual a <see cref="F:System.Double.NegativeInfinity" /> ou π/2 arrendondado para precisão dupla (1,5707963267949) se <paramref name="d" /> for igual a <see cref="F:System.Double.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.Math.Atan2(System.Double,System.Double)">
      <summary>Retorna o ângulo cuja tangente é o quociente de dois números especificados.</summary>
      <param name="y">A coordenada y de um ponto.</param>
      <param name="x">A coordenada x de um ponto.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -π ≤ θ ≤ π e tan(θ) = <paramref name="y" /> / <paramref name="x" />, em que (<paramref name="x" />, <paramref name="y" />) é um ponto no plano cartesiano. Observe o seguinte:

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 1, 0 &lt; θ &lt; π/2.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 2, π/2 &lt; θ ≤ π.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 3, -π &lt; θ &lt; -π/2.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 4, -π/2 &lt; θ &lt; 0.


Para pontos em limites dos quadrantes, o valor retornado é o seguinte:

Se y for 0 e x não for negativo, θ = 0.

Se y for 0 e x for negativo, θ = π.

Se y for positivo e x for 0, θ = π/2.

Se y for negativo e x for 0, θ = - π/2.

Se y for 0 e x for 0, θ = 0.


Se <paramref name="x" /> ou <paramref name="y" /> for <see cref="F:System.Double.NaN" />, ou se <paramref name="x" /> e <paramref name="y" /> forem <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" />, o método retornará <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Atanh(System.Double)">
      <summary>Retorna o ângulo cuja tangente hiperbólica é o número especificado.</summary>
      <param name="d">Um número que representa uma tangente hiperbólica, em que <paramref name="d" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -∞ &lt; θ &lt;-1 ou 1 &lt; θ &lt; ∞.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="d" /> &lt; -1 ou <paramref name="d" /> &gt; 1 ou <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
      <summary>Produz o produto completo de dois números de 32 bits.</summary>
      <param name="a">O primeiro número a multiplicar.</param>
      <param name="b">O segundo número a multiplicar.</param>
      <returns>O número que contém o produto dos números especificados.</returns>
    </member>
    <member name="M:System.Math.BitDecrement(System.Double)">
      <summary>Retorna o próximo valor menor que é comparado como menor que <paramref name="x" />.</summary>
      <param name="x">O valor a ser diminuído.</param>
      <returns>O próximo valor menor que é comparado como menor que <paramref name="x" />.
-ou-
<see cref="F:System.Double.NegativeInfinity" /> se <paramref name="x" /> for igual a <see cref="F:System.Double.NegativeInfinity" />.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.BitIncrement(System.Double)">
      <summary>Retorna o próximo valor maior que é comparado como maior que <paramref name="x" />.</summary>
      <param name="x">O valor a ser incrementado.</param>
      <returns>O próximo valor maior que é comparado como maior que <paramref name="x" />.
-ou-
<see cref="F:System.Double.PositiveInfinity" /> se <paramref name="x" /> for igual a <see cref="F:System.Double.PositiveInfinity" />.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cbrt(System.Double)">
      <summary>Retorna a raiz cúbica de um número especificado.</summary>
      <param name="d">O número cuja raiz cúbica deve ser encontrada.</param>
      <returns>A raiz cúbica de <paramref name="d" />.
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Decimal)">
      <summary>Retorna o menor valor integral maior ou igual ao número decimal especificado.</summary>
      <param name="d">Um número decimal.</param>
      <returns>O menor valor integral maior ou igual a <paramref name="d" />. Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</returns>
    </member>
    <member name="M:System.Math.Ceiling(System.Double)">
      <summary>Retorna o menor valor integral maior ou igual ao número de ponto flutuante de precisão dupla especificado.</summary>
      <param name="a">Um número de ponto flutuante de precisão dupla.</param>
      <returns>O menor valor integral maior ou igual a <paramref name="a" />. Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado. Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt;<paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Double,System.Double,System.Double)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.``
-ou-
<see cref="F:System.Double.NaN" /> se <paramref name="value" /> for igual a <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.Single,System.Single,System.Single)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.
-ou-
<see cref="F:System.Single.NaN" /> se <paramref name="value" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)">
      <summary>Retorna <paramref name="value" /> fixado no intervalo inclusivo de <paramref name="min" /> e <paramref name="max" />.</summary>
      <param name="value">O valor a ser fixado.</param>
      <param name="min">O limite inferior do resultado.</param>
      <param name="max">O limite superior do resultado.</param>
      <returns>
        <paramref name="value" /> se <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.
-ou-
<paramref name="min" /> se <paramref name="value" /> &lt; <paramref name="min" />.
-ou-
<paramref name="max" /> se <paramref name="max" /> &lt; <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.CopySign(System.Double,System.Double)">
      <summary>Retorna um valor com magnitude de <paramref name="x" /> e o sinal de <paramref name="y" />.</summary>
      <param name="x">Um número cuja magnitude é usada no resultado.</param>
      <param name="y">Um número cujo sinal é usado no resultado.</param>
      <returns>Um valor com magnitude de <paramref name="x" /> e o sinal de <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Cos(System.Double)">
      <summary>Retorna o cosseno do ângulo especificado.</summary>
      <param name="d">Um ângulo, medido em radianos.</param>
      <returns>O cosseno de <paramref name="d" />. Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Cosh(System.Double)">
      <summary>Retorna o cosseno hiperbólico do ângulo especificado.</summary>
      <param name="value">Um ângulo, medido em radianos.</param>
      <returns>O cosseno hiperbólico de <paramref name="value" />. Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> será retornado. Se <paramref name="value" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
      <summary>Calcula o quociente de dois inteiros de 32 bits com sinal e também retorna o resto em um parâmetro de saída.</summary>
      <param name="a">O dividendo.</param>
      <param name="b">O divisor.</param>
      <param name="result">O restante.</param>
      <returns>O quociente dos números especificados.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> é zero.</exception>
    </member>
    <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
      <summary>Calcula o quociente de dois inteiros com sinal de 64 bits e também retorna o restante em um parâmetro de saída.</summary>
      <param name="a">O dividendo.</param>
      <param name="b">O divisor.</param>
      <param name="result">O restante.</param>
      <returns>O quociente dos números especificados.</returns>
      <exception cref="T:System.DivideByZeroException">
        <paramref name="b" /> é zero.</exception>
    </member>
    <member name="F:System.Math.E">
      <summary>Representa a base logarítmica natural, especificada pela constante <see langword="e" />.</summary>
    </member>
    <member name="M:System.Math.Exp(System.Double)">
      <summary>Retorna <see langword="e" /> elevado à potência especificada.</summary>
      <param name="d">Um número que especifica uma potência.</param>
      <returns>O número <see langword="e" /> elevado à potência <paramref name="d" />. Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado. Se <paramref name="d" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, 0 será retornado.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Decimal)">
      <summary>Retorna o maior valor integral menor ou igual ao número decimal especificado.</summary>
      <param name="d">Um número decimal.</param>
      <returns>O maior valor integral menor ou igual a <paramref name="d" />.  Observe que o método retorna um valor integral do tipo <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Math.Floor(System.Double)">
      <summary>Retorna o maior valor integral menor ou igual ao número de ponto flutuante de precisão dupla especificado.</summary>
      <param name="d">Um número de ponto flutuante de precisão dupla.</param>
      <returns>O maior valor integral menor ou igual a <paramref name="d" />. Se <paramref name="d" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse valor será retornado.</returns>
    </member>
    <member name="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)">
      <summary>Retorna (x * y) + z, arredondado como uma operação ternária.</summary>
      <param name="x">O número deve ser multiplicado por <paramref name="y" />.</param>
      <param name="y">O número deve ser multiplicado por <paramref name="x" />.</param>
      <param name="z">O número a ser adicionado ao resultado de <paramref name="x" /> multiplicado por <paramref name="y" />.</param>
      <returns>(x * y) + z, arredondado como uma operação ternária.</returns>
    </member>
    <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
      <summary>Retorna o resultado restante da divisão de um número especificado por outro número especificado.</summary>
      <param name="x">Um dividendo.</param>
      <param name="y">Um divisor.</param>
      <returns>Um número igual a <paramref name="x" /> - (<paramref name="y" /> Q), em que Q é o quociente de <paramref name="x" /> / <paramref name="y" /> arredondado para o inteiro mais próximo (se <paramref name="x" /> / <paramref name="y" /> ficar entre dois inteiros, o inteiro par será retornado).
Se <paramref name="x" /> – (<paramref name="y" /> Q) for igual a zero, o valor +0 será retornado se <paramref name="x" /> for positivo ou -0 se <paramref name="x" /> for negativo.
Se <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> é retornado.</returns>
    </member>
    <member name="M:System.Math.ILogB(System.Double)">
      <summary>Retorna o logaritmo inteiro de base 2 de um número especificado.</summary>
      <param name="x">O número cujo logaritmo deve ser encontrado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Padrão 
  O logaritmo inteiro de base 2 do <paramref name="x" />; ou seja, (int)log2(<paramref name="x" />).  
  
  Zero 
 <see cref="F:System.Int32.MinValue" /> Igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double)">
      <summary>Retorna o logaritmo natural (de base <see langword="e" />) de um número especificado.</summary>
      <param name="d">O número cujo logaritmo deve ser encontrado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="d" /> 
  Valor retornado 
  Positivo 
  O logaritmo natural de <paramref name="d" />; ou seja, ln <paramref name="d" /> ou log e <paramref name="d" /> Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log(System.Double,System.Double)">
      <summary>Retorna o logaritmo de um número especificado em uma base especificada.</summary>
      <param name="a">O número cujo logaritmo deve ser encontrado.</param>
      <param name="newBase">A base do logaritmo.</param>
      <returns>Um dos valores na tabela a seguir. (+Infinito indica <see cref="F:System.Double.PositiveInfinity" />, -Infinito indica <see cref="F:System.Double.NegativeInfinity" /> e NaN indica <see cref="F:System.Double.NaN" />.)
 <paramref name="a" /><paramref name="newBase" /> Valor retornado 
 <paramref name="a" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -ou- (<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="a" />&lt; 0 
  (nenhum valor) 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="a" /> != 1 
 <paramref name="newBase" /> = +Infinito 
  NaN 
 <paramref name="a" /> = NaN 
  (nenhum valor) 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="a" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +Infinito 
 <paramref name="a" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -Infinito 
 <paramref name="a" /> = +Infinito 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinito 
 <paramref name="a" /> = +Infinito 
 <paramref name="newBase" />&gt; 1 
  +Infinito 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="a" /> = 1 
 <paramref name="newBase" /> = +Infinito 
  0</returns>
    </member>
    <member name="M:System.Math.Log10(System.Double)">
      <summary>Retorna o logaritmo de base 10 de um número especificado.</summary>
      <param name="d">Um número cujo logaritmo deve ser localizado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="d" /> 
  Valor retornado 
  Positivo 
  O log de base 10 de <paramref name="d" />; ou seja, log 10<paramref name="d" />.  
  
  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Log2(System.Double)">
      <summary>Retorna o logaritmo de base 2 de um número especificado.</summary>
      <param name="x">Um número cujo logaritmo deve ser localizado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Positivo 
  O logaritmo de base 2 de <paramref name="x" />; ou seja, log 2<paramref name="x" />.  
  
  Zero 
 <see cref="F:System.Double.NegativeInfinity" /> Negativo 
 <see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> Igual a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Max(System.Byte,System.Byte)">
      <summary>Retorna o maior entre dois inteiros sem sinal de 8 bits.</summary>
      <param name="val1">O primeiro entre dois inteiros sem sinal de 8 bits a serem comparados.</param>
      <param name="val2">O segundo entre dois inteiros sem sinal de 8 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
      <summary>Retorna o maior dos dois números decimais.</summary>
      <param name="val1">O primeiro dos dois números decimais a ser comparado.</param>
      <param name="val2">O segundo dos dois números decimais a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.Double,System.Double)">
      <summary>Retorna o maior dos dois números de ponto flutuante de precisão dupla.</summary>
      <param name="val1">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <param name="val2">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior. Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int16,System.Int16)">
      <summary>Retorna o maior dos dois inteiros com sinal de 16 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 16 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 16 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int32,System.Int32)">
      <summary>Retorna o maior dos dois inteiros com sinal de 32 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 32 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 32 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.Int64,System.Int64)">
      <summary>Retorna o maior dos dois inteiros com sinal de 64 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 64 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 64 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.SByte,System.SByte)">
      <summary>Retorna o maior dos dois inteiros com sinal de 8 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 8 bits a serem comparados.</param>
      <param name="val2">O segundo dos dois inteiros com sinal de 8 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.Single,System.Single)">
      <summary>Retorna o maior dos dois números de ponto flutuante de precisão simples.</summary>
      <param name="val1">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="val2">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior. Se <paramref name="val1" />, <paramref name="val2" /> ou ambos <paramref name="val1" /> e <paramref name="val2" /> forem igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
      <summary>Retorna o maior de dois inteiros sem sinal de 16 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros sem sinal de 16 bits para comparar.</param>
      <param name="val2">O segundo dos dois inteiros sem sinal de 16 bits para comparar.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
      <summary>Retorna o maior de dois inteiros sem sinal de 32 bits.</summary>
      <param name="val1">O primeiro de dois inteiros sem sinal de 32 bits a serem comparados.</param>
      <param name="val2">O segundo de dois inteiros sem sinal de 32 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
      <summary>Retorna o maior entre dois inteiros sem sinal de 64 bits.</summary>
      <param name="val1">O primeiro de dois inteiros sem sinal de 64 bits a serem comparados.</param>
      <param name="val2">O segundo de dois inteiros sem sinal de 64 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for maior.</returns>
    </member>
    <member name="M:System.Math.MaxMagnitude(System.Double,System.Double)">
      <summary>Retorna a maior magnitude de dois números de ponto flutuante de precisão dupla.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que tiver a magnitude maior. Se <paramref name="x" />, <paramref name="y" /> ou ambos <paramref name="x" /> e <paramref name="y" /> forem igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.Min(System.Byte,System.Byte)">
      <summary>Retorna o menor dos dois inteiros sem sinal de 8 bits.</summary>
      <param name="val1">O primeiro entre dois inteiros sem sinal de 8 bits a serem comparados.</param>
      <param name="val2">O segundo entre dois inteiros sem sinal de 8 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
      <summary>Retorna o menor dos dois números decimais.</summary>
      <param name="val1">O primeiro dos dois números decimais a ser comparado.</param>
      <param name="val2">O segundo dos dois números decimais a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.Double,System.Double)">
      <summary>Retorna o menor dos dois números de ponto flutuante de precisão dupla.</summary>
      <param name="val1">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <param name="val2">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor. Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int16,System.Int16)">
      <summary>Retorna o menor de dois inteiros com sinal de 16 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 16 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 16 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int32,System.Int32)">
      <summary>Retorna o menor de dois inteiros com sinal de 32 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 32 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 32 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.Int64,System.Int64)">
      <summary>Retorna o menor de dois inteiros com sinal de 64 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 64 bits a ser comparado.</param>
      <param name="val2">O segundo de dois inteiros com sinal de 64 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.SByte,System.SByte)">
      <summary>Retorna o menor de dois inteiros com sinal de 8 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros com sinal de 8 bits a serem comparados.</param>
      <param name="val2">O segundo dos dois inteiros com sinal de 8 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.Single,System.Single)">
      <summary>Retorna o menor de dois números de ponto flutuante de precisão simples.</summary>
      <param name="val1">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="val2">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor. Se <paramref name="val1" />, <paramref name="val2" /> ou tanto <paramref name="val1" /> quanto <paramref name="val2" /> forem iguais a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
      <summary>Retorna o menor dos dois inteiros sem sinal de 16 bits.</summary>
      <param name="val1">O primeiro dos dois inteiros sem sinal de 16 bits para comparar.</param>
      <param name="val2">O segundo dos dois inteiros sem sinal de 16 bits para comparar.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
      <summary>Retorna o menor de dois inteiros sem sinal de 32 bits.</summary>
      <param name="val1">O primeiro de dois inteiros sem sinal de 32 bits a serem comparados.</param>
      <param name="val2">O segundo de dois inteiros sem sinal de 32 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
      <summary>Retorna o menor de dois inteiros sem sinal de 64 bits.</summary>
      <param name="val1">O primeiro de dois inteiros sem sinal de 64 bits a serem comparados.</param>
      <param name="val2">O segundo de dois inteiros sem sinal de 64 bits a serem comparados.</param>
      <returns>Parâmetro <paramref name="val1" /> ou <paramref name="val2" />, o que for menor.</returns>
    </member>
    <member name="M:System.Math.MinMagnitude(System.Double,System.Double)">
      <summary>Retorna a menor magnitude de dois números de ponto flutuante de precisão dupla.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão dupla a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que tiver a magnitude menor. Se <paramref name="x" />, <paramref name="y" /> ou ambos <paramref name="x" /> e <paramref name="y" /> forem igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> será retornado.</returns>
    </member>
    <member name="F:System.Math.PI">
      <summary>Representa a razão entre a circunferência de um círculo e seu diâmetro, especificada pela constante π.</summary>
    </member>
    <member name="M:System.Math.Pow(System.Double,System.Double)">
      <summary>Retorna um número especificado elevado à potência especificada.</summary>
      <param name="x">Um número de ponto flutuante de precisão dupla a ser elevado a uma potência.</param>
      <param name="y">Um número de ponto flutuante de precisão dupla que especifica uma potência.</param>
      <returns>O número <paramref name="x" /> elevado à potência <paramref name="y" />.</returns>
    </member>
    <member name="M:System.Math.Round(System.Decimal)">
      <summary>Arredonda um valor decimal para o valor inteiro mais próximo e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="d">Um número decimal a ser arredondado.</param>
      <returns>O inteiro mais próximo do parâmetro <paramref name="d" />. Se o componente fracionário de <paramref name="d" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, o número par será retornado. Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</returns>
      <exception cref="T:System.OverflowException">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32)">
      <summary>Arredonda um valor decimal para o número especificado de dígitos fracionários e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="d">Um número decimal a ser arredondado.</param>
      <param name="decimals">O número de casas decimais no valor retornado.</param>
      <returns>O número mais próximo de <paramref name="d" /> que contém um número de dígitos fracionários igual a <paramref name="decimals" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> é menor que 0 ou maior que 28.</exception>
      <exception cref="T:System.OverflowException">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
      <summary>Arredonda um valor decimal para o número especificado de dígitos fracionários e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="d">Um número decimal a ser arredondado.</param>
      <param name="decimals">O número de casas decimais no valor retornado.</param>
      <param name="mode">Especificação de como arredondar <paramref name="d" /> se o valor estiver entre dois outros números.</param>
      <returns>O número mais próximo de <paramref name="d" /> que contém um número de dígitos fracionários igual a <paramref name="decimals" />. Se <paramref name="d" /> tiver menos dígitos fracionários que <paramref name="decimals" />, <paramref name="d" /> será retornado inalterado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="decimals" /> é menor que 0 ou maior que 28.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
      <summary>Arredonda um valor decimal para o inteiro mais próximo e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="d">Um número decimal a ser arredondado.</param>
      <param name="mode">Especificação de como arredondar <paramref name="d" /> se o valor estiver entre dois outros números.</param>
      <returns>O inteiro mais próximo de <paramref name="d" />. Se <paramref name="d" /> estiver entre dois números, sendo um deles par e o outro ímpar, <paramref name="mode" /> determinará qual dos dois será retornado. Observe que esse método retorna um <see cref="T:System.Decimal" /> em vez de um tipo integral.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
      <exception cref="T:System.OverflowException">O resultado é fora do intervalo de um <see cref="T:System.Decimal" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double)">
      <summary>Arredonda um valor de ponto flutuante de precisão dupla para o valor inteiro mais próximo e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="a">Um número de ponto flutuante de precisão dupla a ser arredondado.</param>
      <returns>O inteiro mais próximo de <paramref name="a" />. Se o componente fracionário de <paramref name="a" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, o número par será retornado. Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</returns>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32)">
      <summary>Arredonda um valor de ponto flutuante de precisão dupla para o número especificado de dígitos fracionários e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="value">Um número de ponto flutuante de precisão dupla a ser arredondado.</param>
      <param name="digits">O número de dígitos fracionários no valor de retorno.</param>
      <returns>O número mais próximo de <paramref name="value" /> que contém um número de dígitos fracionários igual a <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> é menor que 0 ou maior que 15.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
      <summary>Arredonda um valor de ponto flutuante de precisão dupla para o número especificado de dígitos fracionários e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="value">Um número de ponto flutuante de precisão dupla a ser arredondado.</param>
      <param name="digits">O número de dígitos fracionários no valor de retorno.</param>
      <param name="mode">Especificação de como arredondar <paramref name="value" /> se o valor estiver entre dois outros números.</param>
      <returns>O número mais próximo de <paramref name="value" /> que tem um número de dígitos fracionários igual a <paramref name="digits" />. Se <paramref name="value" /> tiver menos dígitos fracionários que <paramref name="digits" />, <paramref name="value" /> será retornado inalterado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> é menor que 0 ou maior que 15.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
      <summary>Arredonda um valor de ponto flutuante de precisão dupla para o inteiro mais próximo e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="value">Um número de ponto flutuante de precisão dupla a ser arredondado.</param>
      <param name="mode">Especificação de como arredondar <paramref name="value" /> se o valor estiver entre dois outros números.</param>
      <returns>O inteiro mais próximo de <paramref name="value" />. Se <paramref name="value" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, <paramref name="mode" /> determinará qual dos dois será retornado. Observe que esse método retorna um <see cref="T:System.Double" /> em vez de um tipo integral.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.Math.ScaleB(System.Double,System.Int32)">
      <summary>Retorna x * 2^n computado com eficiência.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples que especifica o valor da base.</param>
      <param name="n">Um número de ponto flutuante de precisão simples que especifica a potência.</param>
      <returns>x * 2^n computado com eficiência.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Decimal)">
      <summary>Retorna um inteiro que indica o sinal de um número decimal.</summary>
      <param name="value">Um número decimal com sinal.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Double)">
      <summary>Retorna um inteiro que indica o sinal de um número de ponto flutuante de precisão dupla.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> é igual a <see cref="F:System.Double.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sign(System.Int16)">
      <summary>Retorna um inteiro que indica o sinal de um inteiro com sinal de 16 bits.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int32)">
      <summary>Retorna um inteiro que indica o sinal de um inteiro com sinal de 32 bits.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Int64)">
      <summary>Retorna um inteiro que indica o sinal de um inteiro com sinal de 64 bits.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.SByte)">
      <summary>Retorna um inteiro que indica o sinal de um inteiro com sinal de 8 bits.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
    </member>
    <member name="M:System.Math.Sign(System.Single)">
      <summary>Retorna um inteiro que indica o sinal de um número de ponto flutuante de precisão simples.</summary>
      <param name="value">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="value" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="value" /> é menor que zero.  
  
  0 
 <paramref name="value" /> é igual a zero.  
  
  1 
 <paramref name="value" /> é maior que zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="value" /> é igual a <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.Math.Sin(System.Double)">
      <summary>Retorna o seno do ângulo especificado.</summary>
      <param name="a">Um ângulo, medido em radianos.</param>
      <returns>O seno de <paramref name="a" />. Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Sinh(System.Double)">
      <summary>Retorna o seno hiperbólico do ângulo especificado.</summary>
      <param name="value">Um ângulo, medido em radianos.</param>
      <returns>O seno hiperbólico de <paramref name="value" />. Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> ou <see cref="F:System.Double.NaN" />, o método retornará um <see cref="T:System.Double" /> igual a <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Math.Sqrt(System.Double)">
      <summary>Retorna a raiz quadrada de um número especificado.</summary>
      <param name="d">O número cuja raiz quadrada deve ser encontrada.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="d" /> 
  Valor retornado 
  Zero ou positivo 
  A raiz quadrada positiva de <paramref name="d" />.  
  
  Negativo 
 <see cref="F:System.Double.NaN" /> É igual a <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /> É igual a <see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.Math.Tan(System.Double)">
      <summary>Retorna a tangente do ângulo especificado.</summary>
      <param name="a">Um ângulo, medido em radianos.</param>
      <returns>A tangente de <paramref name="a" />. Se <paramref name="a" /> for igual a <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> ou <see cref="F:System.Double.PositiveInfinity" />, esse método retornará <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Tanh(System.Double)">
      <summary>Retorna a tangente hiperbólica do ângulo especificado.</summary>
      <param name="value">Um ângulo, medido em radianos.</param>
      <returns>A tangente hiperbólica de <paramref name="value" />. Se <paramref name="value" /> for igual a <see cref="F:System.Double.NegativeInfinity" />, esse método retornará -1. Se o valor for igual a <see cref="F:System.Double.PositiveInfinity" />, esse método retornará 1. Se <paramref name="value" /> for igual a <see cref="F:System.Double.NaN" />, esse método retornará <see cref="F:System.Double.NaN" />.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Decimal)">
      <summary>Calcula a parte integral de um número decimal especificado.</summary>
      <param name="d">Um número a ser truncado.</param>
      <returns>A parte integral do <paramref name="d" />; ou seja, o número que permanece depois que os dígitos fracionários foram descartados.</returns>
    </member>
    <member name="M:System.Math.Truncate(System.Double)">
      <summary>Calcula a parte integral de um número de ponto flutuante de precisão dupla especificado.</summary>
      <param name="d">Um número a ser truncado.</param>
      <returns>A parte integral do <paramref name="d" />; ou seja, o número que permanece depois que os dígitos fracionários tiverem sido descartados ou um dos valores listados na tabela a seguir.
 <paramref name="d" /> Valor retornado 
 <see cref="F:System.Double.NaN" /><see cref="F:System.Double.NaN" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.NegativeInfinity" /><see cref="F:System.Double.PositiveInfinity" /><see cref="F:System.Double.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.MathF">
      <summary>Fornece constantes e métodos estáticos para trigonométricas, logarítmicas e outras funções matemáticas comuns.</summary>
    </member>
    <member name="M:System.MathF.Abs(System.Single)">
      <summary>Retorna o valor absoluto de um número de ponto flutuante de precisão simples.</summary>
      <param name="x">Um número maior ou igual a <see cref="F:System.Single.MinValue" />, mas menor ou igual a <see cref="F:System.Single.MaxValue" />.</param>
      <returns>Um número de ponto flutuante de precisão simples, x, tal que 0 ≤ x ≤ <see cref="F:System.Single.MaxValue" />.</returns>
    </member>
    <member name="M:System.MathF.Acos(System.Single)">
      <summary>Retorna o ângulo cujo cosseno é o número especificado.</summary>
      <param name="x">Um número que representa um cosseno, em que <paramref name="x" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que 0 ≤ θ ≤ π.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 ou <paramref name="x" /> &gt; 1 ou <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Acosh(System.Single)">
      <summary>Retorna o ângulo cujo cosseno hiperbólico é o número especificado.</summary>
      <param name="x">Um número que representa um cosseno hiperbólico, em que <paramref name="x" /> deve ser maior ou igual a 1, mas menor ou igual a <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que 0 ≤ θ ≤ ∞.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; 1 ou <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asin(System.Single)">
      <summary>Retorna o ângulo cujo seno é o número especificado.</summary>
      <param name="x">Um número que representa um seno, em que <paramref name="x" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -π/2 ≤ θ ≤ π/2.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 ou <paramref name="x" /> &gt; 1 ou <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Asinh(System.Single)">
      <summary>Retorna o ângulo cujo seno hiperbólico é o número especificado.</summary>
      <param name="x">Um número que representa um seno hiperbólico, em que <paramref name="x" /> deve ser maior ou igual a <see cref="F:System.Single.NegativeInfinity" />, mas menor ou igual a <see cref="F:System.Single.PositiveInfinity" />.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -∞ &lt; θ ≤ -1 ou 1 ≤ θ &lt; ∞.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atan(System.Single)">
      <summary>Retorna o ângulo cuja tangente é o número especificado.</summary>
      <param name="x">Um número que representa uma tangente.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -π/2 ≤ θ ≤ π/2.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, -π/2 arrendondado para precisão dupla (-1,5707963267949) se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" /> ou π/2 arrendondado para precisão dupla (1,5707963267949) se <paramref name="x" /> for igual a <see cref="F:System.Single.PositiveInfinity" />.</returns>
    </member>
    <member name="M:System.MathF.Atan2(System.Single,System.Single)">
      <summary>Retorna o ângulo cuja tangente é o quociente de dois números especificados.</summary>
      <param name="y">A coordenada y de um ponto.</param>
      <param name="x">A coordenada x de um ponto.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -π ≤ θ ≤ π e tan(θ) = <paramref name="y" /> / <paramref name="x" />, em que (<paramref name="x" />, <paramref name="y" />) é um ponto no plano cartesiano. Observe o seguinte:

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 1, 0 &lt; θ &lt; π/2.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 2, π/2 &lt; θ ≤ π.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 3, -π &lt; θ &lt; -π/2.

Para (<paramref name="x" />, <paramref name="y" />) no quadrante 4, -π/2 &lt; θ &lt; 0.


Para pontos em limites dos quadrantes, o valor retornado é o seguinte:

Se y for 0 e x não for negativo, θ = 0.

Se y for 0 e x for negativo, θ = π.

Se y for positivo e x for 0, θ = π/2.

Se y for negativo e x for 0, θ = - π/2.

Se y for 0 e x for 0, θ = 0.


Se <paramref name="x" /> ou <paramref name="y" /> for <see cref="F:System.Single.NaN" />, ou se <paramref name="x" /> e <paramref name="y" /> forem <see cref="F:System.Single.PositiveInfinity" /> ou <see cref="F:System.Single.NegativeInfinity" />, o método retornará <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Atanh(System.Single)">
      <summary>Retorna o ângulo cuja tangente hiperbólica é o número especificado.</summary>
      <param name="x">Um número que representa uma tangente hiperbólica, em que <paramref name="x" /> deve ser maior ou igual a -1, mas menor ou igual a 1.</param>
      <returns>Um ângulo, θ, medido em radianos, tal que -∞ &lt; θ &lt;-1 ou 1 &lt; θ &lt; ∞.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> &lt; -1 ou <paramref name="x" /> &gt; 1 ou <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitDecrement(System.Single)">
      <summary>Retorna o próximo valor menor que é comparado como menor que <paramref name="x" />.</summary>
      <param name="x">O valor a ser diminuído.</param>
      <returns>O próximo valor menor que é comparado como menor que <paramref name="x" />.
- ou -
<see cref="F:System.Single.NegativeInfinity" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" />.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.BitIncrement(System.Single)">
      <summary>Retorna o próximo valor maior que é maior que <paramref name="x" />.</summary>
      <param name="x">O valor a ser incrementado.</param>
      <returns>O próximo valor maior que é maior que <paramref name="x" />.
- ou -
<see cref="F:System.Single.PositiveInfinity" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.PositiveInfinity" />.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cbrt(System.Single)">
      <summary>Retorna a raiz cúbica de um número especificado.</summary>
      <param name="x">O número cuja raiz cúbica deve ser encontrada.</param>
      <returns>A raiz cúbica de <paramref name="x" />.
- ou -
<see cref="F:System.Single.NaN" /> se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Ceiling(System.Single)">
      <summary>Retorna o menor valor integral maior ou igual ao número de ponto flutuante de precisão simples especificado.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples.</param>
      <returns>O menor valor integral maior ou igual a <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse valor será retornado. Observe que esse método retorna um <see cref="T:System.Single" /> em vez de um tipo integral.</returns>
    </member>
    <member name="M:System.MathF.CopySign(System.Single,System.Single)">
      <summary>Retorna um valor com magnitude de <paramref name="x" /> e o sinal de <paramref name="y" />.</summary>
      <param name="x">Um número cuja magnitude é usada no resultado.</param>
      <param name="y">Um número cujo sinal é usado no resultado.</param>
      <returns>Um valor com magnitude de <paramref name="x" /> e o sinal de <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Cos(System.Single)">
      <summary>Retorna o cosseno do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>O cosseno de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse método retornará <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Cosh(System.Single)">
      <summary>Retorna o cosseno hiperbólico do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>O cosseno hiperbólico de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> será retornado. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="F:System.MathF.E">
      <summary>Representa a base logarítmica natural, especificada pela constante <see langword="e" />.</summary>
    </member>
    <member name="M:System.MathF.Exp(System.Single)">
      <summary>Retorna <see langword="e" /> elevado à potência especificada.</summary>
      <param name="x">Um número que especifica uma potência.</param>
      <returns>O número <see langword="e" /> elevado à potência <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse valor será retornado. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" />, 0 será retornado.</returns>
    </member>
    <member name="M:System.MathF.Floor(System.Single)">
      <summary>Retorna o maior valor integral menor ou igual ao número de ponto flutuante de precisão simples especificado.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples.</param>
      <returns>O maior valor integral menor ou igual a <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse valor será retornado.</returns>
    </member>
    <member name="M:System.MathF.FusedMultiplyAdd(System.Single,System.Single,System.Single)">
      <summary>Retorna (x * y) + z, arredondado como uma operação ternária.</summary>
      <param name="x">O número deve ser multiplicado por <paramref name="y" />.</param>
      <param name="y">O número deve ser multiplicado por <paramref name="x" />.</param>
      <param name="z">O número a ser adicionado ao resultado de <paramref name="x" /> multiplicado por <paramref name="y" />.</param>
      <returns>(x * y) + z, arredondado como uma operação ternária.</returns>
    </member>
    <member name="M:System.MathF.IEEERemainder(System.Single,System.Single)">
      <summary>Retorna o resultado restante da divisão de um número especificado por outro número especificado.</summary>
      <param name="x">Um dividendo.</param>
      <param name="y">Um divisor.</param>
      <returns>Um número igual a <paramref name="x" /> - (<paramref name="y" /> Q), em que Q é o quociente de <paramref name="x" /> / <paramref name="y" /> arredondado para o inteiro mais próximo (se <paramref name="x" /> / <paramref name="y" /> ficar entre dois inteiros, o inteiro par será retornado).
Se <paramref name="x" /> – (<paramref name="y" /> Q) for igual a zero, o valor +0 será retornado se <paramref name="x" /> for positivo ou -0 se <paramref name="x" /> for negativo.
Se <paramref name="y" /> = 0, <see cref="F:System.Single.NaN" /> é retornado.</returns>
    </member>
    <member name="M:System.MathF.ILogB(System.Single)">
      <summary>Retorna o logaritmo inteiro de base 2 de um número especificado.</summary>
      <param name="x">O número cujo logaritmo deve ser encontrado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Padrão 
  O logaritmo inteiro de base 2 do <paramref name="x" />; ou seja, (int)log2(<paramref name="x" />).  
  
  Zero 
 <see cref="F:System.Int32.MinValue" /> Igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> ou <see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Int32.MaxValue" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single)">
      <summary>Retorna o logaritmo natural (de base <see langword="e" />) de um número especificado.</summary>
      <param name="x">O número cujo logaritmo deve ser encontrado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Positivo 
  O logaritmo natural de <paramref name="x" />; ou seja, ln <paramref name="x" /> ou log e <paramref name="x" /> Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log(System.Single,System.Single)">
      <summary>Retorna o logaritmo de um número especificado em uma base especificada.</summary>
      <param name="x">O número cujo logaritmo deve ser encontrado.</param>
      <param name="y">A base.</param>
      <returns>Um dos valores na tabela a seguir. (+Infinito indica <see cref="F:System.Single.PositiveInfinity" />, -Infinito indica <see cref="F:System.Single.NegativeInfinity" /> e NaN indica <see cref="F:System.Single.NaN" />.)
 <paramref name="x" /><paramref name="newBase" /> Valor retornado 
 <paramref name="x" />&gt; 0 
  (0 &lt;<paramref name="newBase" />&lt; 1) -ou- (<paramref name="newBase" />&gt; 1) 
  lognewBase(a) 
 <paramref name="x" />&lt; 0 
  (nenhum valor) 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" />&lt; 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = 0 
  NaN 
 <paramref name="x" /> != 1 
 <paramref name="newBase" /> = +Infinito 
  NaN 
 <paramref name="x" /> = NaN 
  (nenhum valor) 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" /> = NaN 
  NaN 
  (nenhum valor) 
 <paramref name="newBase" /> = 1 
  NaN 
 <paramref name="x" /> = 0 
  0 &lt;<paramref name="newBase" />&lt; 1 
  +Infinito 
 <paramref name="x" /> = 0 
 <paramref name="newBase" />&gt; 1 
  -Infinito 
 <paramref name="x" /> = +Infinito 
  0 &lt;<paramref name="newBase" />&lt; 1 
  -Infinito 
 <paramref name="x" /> = +Infinito 
 <paramref name="newBase" />&gt; 1 
  +Infinito 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = 0 
  0 
 <paramref name="x" /> = 1 
 <paramref name="newBase" /> = +Infinito 
  0</returns>
    </member>
    <member name="M:System.MathF.Log10(System.Single)">
      <summary>Retorna o logaritmo de base 10 de um número especificado.</summary>
      <param name="x">Um número cujo logaritmo deve ser localizado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Positivo 
  O log de base 10 de <paramref name="x" />; ou seja, log 10<paramref name="x" />.  
  
  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Log2(System.Single)">
      <summary>Retorna o logaritmo de base 2 de um número especificado.</summary>
      <param name="x">Um número cujo logaritmo deve ser localizado.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Positivo 
  O logaritmo de base 2 de <paramref name="x" />; ou seja, log 2<paramref name="x" />.  
  
  Zero 
 <see cref="F:System.Single.NegativeInfinity" /> Negativo 
 <see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> Igual a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Max(System.Single,System.Single)">
      <summary>Retorna o maior dos dois números de ponto flutuante de precisão simples.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que for maior. Se <paramref name="x" />, <paramref name="y" /> ou ambos <paramref name="x" /> e <paramref name="y" /> forem igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.MathF.MaxMagnitude(System.Single,System.Single)">
      <summary>Retorna a maior magnitude de dois números de ponto flutuante de precisão simples.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que tiver a magnitude maior. Se <paramref name="x" />, <paramref name="y" /> ou ambos <paramref name="x" /> e <paramref name="y" /> forem igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.MathF.Min(System.Single,System.Single)">
      <summary>Retorna o menor de dois números de ponto flutuante de precisão simples.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que for menor. Se <paramref name="x" />, <paramref name="y" /> ou tanto <paramref name="x" /> quanto <paramref name="y" /> forem iguais a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="M:System.MathF.MinMagnitude(System.Single,System.Single)">
      <summary>Retorna a menor magnitude de dois números de ponto flutuante de precisão simples.</summary>
      <param name="x">O primeiro dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <param name="y">O segundo dos dois números de ponto flutuante de precisão simples a ser comparado.</param>
      <returns>Parâmetro <paramref name="x" /> ou <paramref name="y" />, o que tiver a magnitude menor. Se <paramref name="x" />, <paramref name="y" /> ou ambos <paramref name="x" /> e <paramref name="y" /> forem igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> será retornado.</returns>
    </member>
    <member name="F:System.MathF.PI">
      <summary>Representa a razão entre a circunferência de um círculo e seu diâmetro, especificada pela constante π.</summary>
    </member>
    <member name="M:System.MathF.Pow(System.Single,System.Single)">
      <summary>Retorna um número especificado elevado à potência especificada.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples a ser elevado a uma potência.</param>
      <param name="y">Um número de ponto flutuante de precisão simples que especifica uma potência.</param>
      <returns>O número <paramref name="x" /> elevado à potência <paramref name="y" />.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single)">
      <summary>Arredonda um valor de ponto flutuante de precisão simples para o valor inteiro mais próximo e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples a ser arredondado.</param>
      <returns>O inteiro mais próximo de <paramref name="x" />. Se o componente fracionário de <paramref name="x" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, o número par será retornado. Observe que esse método retorna um <see cref="T:System.Single" /> em vez de um tipo integral.</returns>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32)">
      <summary>Arredonda um valor de ponto flutuante de precisão simples para o número especificado de dígitos fracionários e arredonda os valores de ponto médio para o número par mais próximo.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples a ser arredondado.</param>
      <param name="digits">O número de dígitos fracionários no valor de retorno.</param>
      <returns>O número mais próximo de <paramref name="x" /> que contém um número de dígitos fracionários igual a <paramref name="digits" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> é menor que 0 ou maior que 6.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.Int32,System.MidpointRounding)">
      <summary>Arredonda um valor de ponto flutuante de precisão simples para o número especificado de dígitos fracionários e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples a ser arredondado.</param>
      <param name="digits">O número de dígitos fracionários no valor de retorno.</param>
      <param name="mode">Especificação de como arredondar <paramref name="x" /> se o valor estiver entre dois outros números.</param>
      <returns>O número mais próximo de <paramref name="x" /> que tem um número de dígitos fracionários igual a <paramref name="digits" />. Se <paramref name="x" /> tiver menos dígitos fracionários que <paramref name="digits" />, <paramref name="x" /> será retornado inalterado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="digits" /> é menor que 0 ou maior que 6.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.Round(System.Single,System.MidpointRounding)">
      <summary>Arredonda um valor de ponto flutuante de precisão simples para o inteiro mais próximo e usa a convenção de arredondamento especificada para os valores de ponto médio.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples a ser arredondado.</param>
      <param name="mode">Especificação de como arredondar <paramref name="x" /> se o valor estiver entre dois outros números.</param>
      <returns>O inteiro mais próximo de <paramref name="x" />. Se <paramref name="x" /> estiver entre dois inteiros, sendo um deles par e o outro ímpar, <paramref name="mode" /> determinará qual dos dois será retornado. Observe que esse método retorna um <see cref="T:System.Single" /> em vez de um tipo integral.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="mode" /> não é um valor válido de <see cref="T:System.MidpointRounding" />.</exception>
    </member>
    <member name="M:System.MathF.ScaleB(System.Single,System.Int32)">
      <summary>Retorna x * 2^n computado com eficiência.</summary>
      <param name="x">Um número de ponto flutuante de precisão simples que especifica o valor da base.</param>
      <param name="n">Um número de ponto flutuante de precisão simples que especifica a potência.</param>
      <returns>x * 2^n computado com eficiência.</returns>
    </member>
    <member name="M:System.MathF.Sign(System.Single)">
      <summary>Retorna um inteiro que indica o sinal de um número de ponto flutuante de precisão simples.</summary>
      <param name="x">Um número assinado.</param>
      <returns>Um número que indica o sinal de <paramref name="x" />, conforme mostrado na tabela a seguir.
  Valor retornado 
  Significado 
  -1 
 <paramref name="x" /> é menor que zero.  
  
  0 
 <paramref name="x" /> é igual a zero.  
  
  1 
 <paramref name="x" /> é maior que zero.</returns>
      <exception cref="T:System.ArithmeticException">
        <paramref name="x" /> é igual a <see cref="F:System.Single.NaN" />.</exception>
    </member>
    <member name="M:System.MathF.Sin(System.Single)">
      <summary>Retorna o seno do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>O seno de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse método retornará <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Sinh(System.Single)">
      <summary>Retorna o seno hiperbólico do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>O seno hiperbólico de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" />, <see cref="F:System.Single.PositiveInfinity" /> ou <see cref="F:System.Single.NaN" />, o método retornará um <see cref="T:System.Single" /> igual a <paramref name="x" />.</returns>
    </member>
    <member name="M:System.MathF.Sqrt(System.Single)">
      <summary>Retorna a raiz quadrada de um número especificado.</summary>
      <param name="x">O número cuja raiz quadrada deve ser encontrada.</param>
      <returns>Um dos valores na tabela a seguir.
 Parâmetro <paramref name="x" /> 
  Valor retornado 
  Zero ou positivo 
  A raiz quadrada positiva de <paramref name="x" />.  
  
  Negativo 
 <see cref="F:System.Single.NaN" /> É igual a <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /> É igual a <see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="M:System.MathF.Tan(System.Single)">
      <summary>Retorna a tangente do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>A tangente de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> ou <see cref="F:System.Single.PositiveInfinity" />, esse método retornará <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Tanh(System.Single)">
      <summary>Retorna a tangente hiperbólica do ângulo especificado.</summary>
      <param name="x">Um ângulo, medido em radianos.</param>
      <returns>A tangente hiperbólica de <paramref name="x" />. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NegativeInfinity" />, esse método retornará -1. Se o valor for igual a <see cref="F:System.Single.PositiveInfinity" />, esse método retornará 1. Se <paramref name="x" /> for igual a <see cref="F:System.Single.NaN" />, esse método retornará <see cref="F:System.Single.NaN" />.</returns>
    </member>
    <member name="M:System.MathF.Truncate(System.Single)">
      <summary>Calcula a parte integral de um número de ponto flutuante de precisão simples especificado.</summary>
      <param name="x">Um número a ser truncado.</param>
      <returns>A parte integral do <paramref name="x" />; ou seja, o número que permanece depois que os dígitos fracionários tiverem sido descartados ou um dos valores listados na tabela a seguir.
 <paramref name="x" /> Valor retornado 
 <see cref="F:System.Single.NaN" /><see cref="F:System.Single.NaN" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.NegativeInfinity" /><see cref="F:System.Single.PositiveInfinity" /><see cref="F:System.Single.PositiveInfinity" /></returns>
    </member>
    <member name="T:System.Net.WebUtility">
      <summary>Fornece métodos para codificar e decodificar URLs durante o processamento de solicitações da Web.</summary>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
      <summary>Converte uma cadeia de caracteres que foi codificada em HTML para transmissão HTTP em uma cadeia de caracteres decodificada.</summary>
      <param name="value">A cadeia de caracteres para decodificar.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)">
      <summary>Converte uma cadeia de caracteres que foi codificada em HTML em uma cadeia de caracteres decodificada e envia a cadeia de caracteres decodificada para um fluxo de saída <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="value">A cadeia de caracteres para decodificar.</param>
      <param name="output">Um fluxo de saída <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="output" /> não pode ser <see langword="null" /> se o parâmetro <paramref name="value" /> não for <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
      <summary>Converte uma cadeia de caracteres em uma cadeia de caracteres codificada em HTML.</summary>
      <param name="value">A cadeia de caracteres a ser codificada.</param>
      <returns>Uma cadeia de caracteres codificada.</returns>
    </member>
    <member name="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)">
      <summary>Converte uma cadeia de caracteres em uma cadeia de caracteres codificada em HTML e retorna o resultado como um fluxo <see cref="T:System.IO.TextWriter" /> de saída.</summary>
      <param name="value">A cadeia de caracteres a ser codificada.</param>
      <param name="output">Um fluxo de saída de <see cref="T:System.IO.TextWriter" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="output" /> não pode ser <see langword="null" /> se o parâmetro <paramref name="value" /> não for <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecode(System.String)">
      <summary>Converte uma cadeia de caracteres codificada para transmissão em uma URL em uma cadeia de caracteres decodificada.</summary>
      <param name="encodedValue">Uma cadeia de caracteres codificada de URL a ser decodificada.</param>
      <returns>Uma cadeia de caracteres decodificada.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte uma matriz de bytes codificados que foi codificada para transmissão em uma URL em uma matriz de bytes decodificados.</summary>
      <param name="encodedValue">Uma matriz <see cref="T:System.Byte" /> com codificação de URL a ser decodificada.</param>
      <param name="offset">O deslocamento, em bytes, do início da matriz <see cref="T:System.Byte" /> a ser decodificada.</param>
      <param name="count">A contagem, em bytes, a ser decodificada da matriz <see cref="T:System.Byte" />.</param>
      <returns>Uma matriz <see cref="T:System.Byte" /> decodificada.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
      <summary>Converte uma cadeia de caracteres de texto em uma cadeia de caracteres codificada em URL.</summary>
      <param name="value">O texto a ser codificado em URL.</param>
      <returns>Uma cadeia de caracteres codificada em URL.</returns>
    </member>
    <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
      <summary>Converte uma matriz de bytes em uma matriz de bytes codificada em URL.</summary>
      <param name="value">A matriz <see cref="T:System.Byte" /> a ser codificada em URL.</param>
      <param name="offset">O deslocamento, em bytes, do início da matriz <see cref="T:System.Byte" /> a ser codificado.</param>
      <param name="count">A contagem, em bytes, a ser codificada da matriz <see cref="T:System.Byte" />.</param>
      <returns>Uma matriz <see cref="T:System.Byte" /> codificada.</returns>
    </member>
    <member name="T:System.Numerics.BitOperations">
      <summary>Fornece métodos de utilitário para operações intrínsecas de manipulação de bits. Os métodos usam intrínsecos de hardware quando disponíveis na plataforma subjacente; caso contrário, eles usam fallbacks de software otimizados.</summary>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)">
      <summary>Conta o número de bits com zero à esquerda em uma máscara de inteiro de 32 bits sem sinal.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à esquerda em uma máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)">
      <summary>Conta o número de bits com zero à esquerda em uma máscara de inteiro de 64 bits sem sinal.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à esquerda em uma máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt32)">
      <summary>Retorna o log de inteiro (piso) do valor especificado, base 2.</summary>
      <param name="value">O número do qual o logaritmo será obtido.</param>
      <returns>O log do valor especificado, base 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.Log2(System.UInt64)">
      <summary>Retorna o log de inteiro (piso) do valor especificado, base 2.</summary>
      <param name="value">O número do qual o logaritmo será obtido.</param>
      <returns>O log do valor especificado, base 2.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt32)">
      <summary>Retorna a contagem de população (número de bits definidos) de uma máscara.</summary>
      <param name="value">A máscara.</param>
      <returns>A contagem de população de uma máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.PopCount(System.UInt64)">
      <summary>Retorna a contagem de população (número de bits definidos) de uma máscara de inteiro de 64 bits sem sinal.</summary>
      <param name="value">A máscara.</param>
      <returns>A contagem de população da máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)">
      <summary>Gira o valor especificado para a esquerda pelo número especificado de bits.</summary>
      <param name="value">O valor a ser girado.</param>
      <param name="offset">O número de bits pelo qual girar o valor. Qualquer valor fora do intervalo [0-31] é tratado como congruente mod 32.</param>
      <returns>O valor girado.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)">
      <summary>Gira o valor especificado para a esquerda pelo número especificado de bits.</summary>
      <param name="value">O valor a ser girado.</param>
      <param name="offset">O número de bits pelo qual girar o valor. Qualquer valor fora do intervalo [0-63] é tratado como congruente mod 64.</param>
      <returns>O valor girado.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)">
      <summary>Gira o valor especificado para a direita pelo número especificado de bits.</summary>
      <param name="value">O valor a ser girado.</param>
      <param name="offset">O número de bits pelo qual girar o valor. Qualquer valor fora do intervalo [0-31] é tratado como congruente mod 32.</param>
      <returns>O valor girado.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)">
      <summary>Gira o valor especificado para a direita pelo número especificado de bits.</summary>
      <param name="value">O valor a ser girado.</param>
      <param name="offset">O número de bits pelo qual girar o valor. Qualquer valor fora do intervalo [0-63] é tratado como congruente mod 64.</param>
      <returns>O valor girado.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)">
      <summary>Conta o número de bits com zero à direita em uma máscara de valor inteiro de 32 bits.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à direita no valor inteiro.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)">
      <summary>Conta o número de bits com zero à direita em uma máscara de valor inteiro de 64 bits.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à direita na máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)">
      <summary>Conta o número de bits com zero à direita em uma máscara de valor inteiro de 32 bits sem sinal.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à direita na máscara.</returns>
    </member>
    <member name="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)">
      <summary>Conta o número de bits com zero à direita em uma máscara de valor inteiro de 64 bits sem sinal.</summary>
      <param name="value">A máscara.</param>
      <returns>O número de bits com zero à direita na máscara.</returns>
    </member>
    <member name="T:System.OperatingSystem">
      <summary>Representa informações sobre um sistema operacional, como a versão e o identificador de plataforma. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.OperatingSystem.#ctor(System.PlatformID,System.Version)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.OperatingSystem" /> usando o objeto de versão e o valor do identificador de plataforma especificados.</summary>
      <param name="platform">Uma dos valores <see cref="T:System.PlatformID" /> que indica a plataforma do sistema operacional.</param>
      <param name="version">Um objeto <see cref="T:System.Version" /> que indica a versão do sistema operacional.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="version" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="platform" /> não é um valor de enumeração de <see cref="T:System.PlatformID" />.</exception>
    </member>
    <member name="M:System.OperatingSystem.Clone">
      <summary>Cria um objeto <see cref="T:System.OperatingSystem" /> idêntico a esta instância.</summary>
      <returns>Um objeto <see cref="T:System.OperatingSystem" /> que é uma cópia dessa instância.</returns>
    </member>
    <member name="M:System.OperatingSystem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Preenche um objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para desserializar essa instância.</summary>
      <param name="info">O objeto a ser preenchido com informações de serialização.</param>
      <param name="context">O local para armazenar e recuperar dados serializados. Reservado para uso futuro.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.OperatingSystem.Platform">
      <summary>Obtém um valor de enumeração <see cref="T:System.PlatformID" /> que identifica a plataforma do sistema operacional.</summary>
      <returns>Um dos valores de <see cref="T:System.PlatformID" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.ServicePack">
      <summary>Obtém a versão do service pack representada por esse objeto <see cref="T:System.OperatingSystem" />.</summary>
      <returns>A versão do service pack, se houver suporte para service packs e pelo menos um estiver instalado; caso contrário, uma cadeia de caracteres vazia ("").</returns>
    </member>
    <member name="M:System.OperatingSystem.ToString">
      <summary>Converte o valor deste objeto <see cref="T:System.OperatingSystem" /> em sua representação de cadeia de caracteres equivalente.</summary>
      <returns>A representação de cadeia de caracteres dos valores retornados pelas propriedades <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> e <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="P:System.OperatingSystem.Version">
      <summary>Obtém um objeto <see cref="T:System.Version" /> que identifica o sistema operacional.</summary>
      <returns>Um objeto <see cref="T:System.Version" /> que descreve a versão principal, a versão secundária, o build e os números de revisão do sistema operacional.</returns>
    </member>
    <member name="P:System.OperatingSystem.VersionString">
      <summary>Obtém a representação de cadeia de caracteres concatenada do identificador de plataforma, a versão e o service pack que atualmente estão instalados no sistema operacional.</summary>
      <returns>A representação de cadeia de caracteres dos valores retornados pelas propriedades <see cref="P:System.OperatingSystem.Platform" />, <see cref="P:System.OperatingSystem.Version" /> e <see cref="P:System.OperatingSystem.ServicePack" />.</returns>
    </member>
    <member name="T:System.PlatformID">
      <summary>Identifica o sistema operacional ou a plataforma com suporte em um assembly.</summary>
    </member>
    <member name="F:System.PlatformID.MacOSX">
      <summary>O sistema operacional é Macintosh. Esse valor foi retornado pelo Silverlight. No .NET Core, sua substituição é Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Unix">
      <summary>O sistema operacional é Unix.</summary>
    </member>
    <member name="F:System.PlatformID.Win32NT">
      <summary>O sistema operacional é o Windows NT ou posterior.</summary>
    </member>
    <member name="F:System.PlatformID.Win32S">
      <summary>O sistema operacional é Win32s. Esse valor já não está em uso.</summary>
    </member>
    <member name="F:System.PlatformID.Win32Windows">
      <summary>O sistema operacional é Windows 95 ou Windows 98. Esse valor já não está em uso.</summary>
    </member>
    <member name="F:System.PlatformID.WinCE">
      <summary>O sistema operacional é Windows CE. Esse valor já não está em uso.</summary>
    </member>
    <member name="F:System.PlatformID.Xbox">
      <summary>A plataforma de desenvolvimento é o Xbox 360. Esse valor já não está em uso.</summary>
    </member>
    <member name="T:System.Progress`1">
      <summary>Fornece um <see cref="T:System.IProgress`1" /> que invoca retornos de chamada para cada valor de progresso.</summary>
      <typeparam name="T">Especifica o tipo do valor do relatório de progresso.</typeparam>
    </member>
    <member name="M:System.Progress`1.#ctor">
      <summary>Inicializa o objeto <see cref="T:System.Progress`1" />.</summary>
    </member>
    <member name="M:System.Progress`1.#ctor(System.Action{`0})">
      <summary>Inicializa o objeto <see cref="T:System.Progress`1" /> com o retorno de chamada especificado.</summary>
      <param name="handler">Um manipulador a ser invocado para cada valor de progresso relatado. Esse manipulador será invocado além de quaisquer representantes registrados com o evento <see cref="E:System.Progress`1.ProgressChanged" />. Dependendo da instância <see cref="T:System.Threading.SynchronizationContext" /> capturada pelo <see cref="T:System.Progress`1" /> na construção, é possível que essa instância de manipulador possa ser invocada simultaneamente em si.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handler" /> é <see langword="null" /> (<see langword="Nothing" /> no Visual Basic).</exception>
    </member>
    <member name="M:System.Progress`1.OnReport(`0)">
      <summary>Relata uma alteração de progresso.</summary>
      <param name="value">O valor do progresso atualizado.</param>
    </member>
    <member name="E:System.Progress`1.ProgressChanged">
      <summary>Acionado para cada valor de progresso relatado.</summary>
    </member>
    <member name="M:System.Progress`1.System#IProgress{T}#Report(`0)">
      <summary>Relata uma alteração de progresso.</summary>
      <param name="value">O valor do progresso atualizado.</param>
    </member>
    <member name="T:System.Random">
      <summary>Representa um gerador de número pseudoaleatório, que é um dispositivo que produz uma sequência de números que atendem a certos requisitos estatísticos de aleatoriedade.</summary>
    </member>
    <member name="M:System.Random.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Random" />, usando um valor de semente padrão dependente de tempo.</summary>
    </member>
    <member name="M:System.Random.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Random" />, usando o valor de semente especificado.</summary>
      <param name="Seed">Um número usado para calcular um valor inicial para a sequência numérica pseudoaleatória. Se um número negativo for especificado, o valor absoluto do número será usado.</param>
    </member>
    <member name="M:System.Random.Next">
      <summary>Retorna um inteiro aleatório não negativo.</summary>
      <returns>Um inteiro com sinal de 32 bits maior ou igual a 0 e menor que <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.Random.Next(System.Int32)">
      <summary>Retorna um número inteiro aleatório não negativo menor que o máximo especificado.</summary>
      <param name="maxValue">O limite superior exclusivo do número aleatório a ser gerado. <paramref name="maxValue" /> deve ser maior ou igual a 0.</param>
      <returns>Um inteiro com sinal de 32 bits maior ou igual a 0 e menor que <paramref name="maxValue" />; ou seja, o intervalo de valores retornados inclui 0, mas não <paramref name="maxValue" />. No entanto, se <paramref name="maxValue" /> for igual a 0, <paramref name="maxValue" /> será retornado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxValue" /> é menor que 0.</exception>
    </member>
    <member name="M:System.Random.Next(System.Int32,System.Int32)">
      <summary>Retorna um inteiro aleatório que está dentro do intervalo especificado.</summary>
      <param name="minValue">O limite inferior inclusivo do número aleatório retornado.</param>
      <param name="maxValue">O limite superior exclusivo do número aleatório retornado. <paramref name="maxValue" /> deve ser maior ou igual a <paramref name="minValue" />.</param>
      <returns>Um inteiro com sinal de 32 bits maior ou igual a <paramref name="minValue" /> e menor que <paramref name="maxValue" />; ou seja, o intervalo de valores retornados inclui <paramref name="minValue" />, mas não <paramref name="maxValue" />. Se <paramref name="minValue" /> for igual a <paramref name="maxValue" />, <paramref name="minValue" /> será retornado.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minValue" /> é maior que <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Byte[])">
      <summary>Preenche os elementos de uma matriz de bytes especificada com números aleatórios.</summary>
      <param name="buffer">Uma matriz de bytes que deverá conter números aleatórios.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Random.NextBytes(System.Span{System.Byte})">
      <param name="buffer" />
    </member>
    <member name="M:System.Random.NextDouble">
      <summary>Retorna um número de ponto flutuante aleatório maior ou igual a 0,0 e menor que 1.0.</summary>
      <returns>Um número de ponto flutuante de precisão dupla maior ou igual a 0,0 e menor que 1,0.</returns>
    </member>
    <member name="M:System.Random.Sample">
      <summary>Retorna um número de ponto flutuante aleatório entre 0.0 e 1.0.</summary>
      <returns>Um número de ponto flutuante de precisão dupla maior ou igual a 0,0 e menor que 1,0.</returns>
    </member>
    <member name="T:System.Reflection.AssemblyNameProxy">
      <summary>Fornece uma versão remota do <see langword="AssemblyName" />.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Reflection.AssemblyNameProxy" />.</summary>
    </member>
    <member name="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
      <summary>Obtém o <see langword="AssemblyName" /> para determinado arquivo.</summary>
      <param name="assemblyFile">O arquivo do assembly para o qual obter o <see langword="AssemblyName" />.</param>
      <returns>Um objeto <see langword="AssemblyName" /> que representa o arquivo determinado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblyFile" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assemblyFile" /> está vazio.</exception>
      <exception cref="T:System.IO.FileNotFoundException">
        <paramref name="assemblyFile" /> não foi encontrado.</exception>
      <exception cref="T:System.Security.SecurityException">O chamador não tem a permissão necessária.</exception>
      <exception cref="T:System.BadImageFormatException">
        <paramref name="assemblyFile" /> não é um assembly válido.</exception>
    </member>
    <member name="T:System.ResolveEventHandler">
      <summary>Representa um método que manipula o evento <see cref="E:System.AppDomain.TypeResolve" />, <see cref="E:System.AppDomain.ResourceResolve" /> ou <see cref="E:System.AppDomain.AssemblyResolve" /> de um <see cref="T:System.AppDomain" />.</summary>
      <param name="sender">A fonte do evento.</param>
      <param name="args">Os dados do evento.</param>
      <returns>O assembly que resolve o tipo, assembly ou recurso; ou <see langword="null" /> se o assembly não puder ser resolvido.</returns>
    </member>
    <member name="T:System.Runtime.CompilerServices.SwitchExpressionException">
      <summary>Indica que uma expressão switch que não foi completa falhou em corresponder à sua entrada em tempo de execução. A exceção, opcionalmente, contém um objeto que representa o valor não correspondente.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" />.</summary>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção.</summary>
      <param name="innerException">A exceção que é a causa da exceção atual. Caso o parâmetro <paramref name="innerException" /> não seja <see langword="null" />, a exceção atual é acionada em um bloco <see langword="catch" /> que identifica a exceção interna.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> com um valor de switch sem correspondência.</summary>
      <param name="unmatchedValue">O valor de switch que não corresponde a nenhum caso de switch.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> com a mensagem especificada.</summary>
      <param name="message">A mensagem a ser exibida ao usuário final.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.SwitchExpressionException" /> com a descrição detalhada e a exceção especificadas.</summary>
      <param name="message">A mensagem a ser exibida ao usuário final.</param>
      <param name="innerException">Uma referência à exceção interna que é a causa dessa exceção.</param>
    </member>
    <member name="M:System.Runtime.CompilerServices.SwitchExpressionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Define a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com o nome de parâmetro e informações adicionais de exceção.</summary>
      <param name="info">Armazena os dados que estavam sendo usados para serializar ou desserializar o objeto que o <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> estava serializando ou desserializando.</param>
      <param name="context">Descreve a origem e o destino do fluxo que gerou a exceção, além de um meio para que a serialização retenha esse contexto e um contexto adicional definido pelo chamador.</param>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.Message">
      <summary>Obtém a mensagem de exceção.</summary>
      <returns>A cadeia de caracteres de mensagem completa.</returns>
    </member>
    <member name="P:System.Runtime.CompilerServices.SwitchExpressionException.UnmatchedValue">
      <summary>Obtém o valor sem correspondência associado à exceção.</summary>
      <returns>O valor sem correspondência que causa a exceção.</returns>
    </member>
    <member name="T:System.Runtime.ProfileOptimization">
      <summary>Melhora o desempenho de inicialização de domínios do aplicativo em aplicativos que exigem o compilador JIT (Just-In-Time), executando a compilação em segundo plano dos métodos que provavelmente serão executados, com base nos perfis criados durante as compilações anteriores.</summary>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
      <summary>Permite a criação de perfil de otimização para o domínio de aplicativo atual de otimização e define a pasta na qual os arquivos de perfil de otimização são armazenados. Em um computador de núcleo único, o método é ignorado.</summary>
      <param name="directoryPath">O caminho completo para a pasta na qual os arquivos de perfil são armazenados para o domínio de aplicativo atual.</param>
    </member>
    <member name="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
      <summary>Inicia a compilação JIT (Just-In-Time) dos métodos que foram registrados anteriormente no arquivo de perfil especificado em um thread em segundo plano. Inicia o processo de gravação do uso do método atual, que posteriormente substituirá o arquivo de perfil especificado.</summary>
      <param name="profile">O nome de arquivo do perfil a ser usado.</param>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesAttribute">
      <summary>Define a garantia de compatibilidade de um componente, tipo ou membro de tipo que podem abranger várias versões.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> com um valor que indica o nível de compatibilidade garantido de uma biblioteca, um tipo ou um membro entre várias versões.</summary>
      <param name="guarantees">Um dos valores de enumeração que especifica o nível de compatibilidade garantido entre várias versões.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees">
      <summary>Obtém um valor que indica o nível de compatibilidade garantido de uma biblioteca, um tipo ou um membro que abrange várias versões.</summary>
      <returns>Um dos valores de enumeração que especifica o nível de compatibilidade garantido entre várias versões.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ComponentGuaranteesOptions">
      <summary>Descreve a garantia de compatibilidade de um componente, tipo ou membro de tipo que podem abranger várias versões.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange">
      <summary>O desenvolvedor promete compatibilidade entre várias versões para o tipo. Os consumidores do tipo podem esperar compatibilidade entre versões futuras e podem usar o tipo em todas as suas interfaces. Problemas de controle de versão não podem ser corrigidos pela execução lado a lado.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.None">
      <summary>O desenvolvedor não garante a compatibilidade entre versões. Os consumidores do componente, tipo ou membro podem esperar que futuras versões interrompam o cliente existente.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide">
      <summary>De acordo com os testes realizados, o componente funciona quando mais de uma versão do assembly é carregada no mesmo domínio do aplicativo. Versões futuras poderão interromper a compatibilidade. No entanto, quando forem feitas tais alterações que causam interrupções, a versão antiga não será modificada e continuará existindo com a nova versão.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable">
      <summary>O desenvolvedor promete compatibilidade estável entre versões. Os consumidores do tipo podem esperar que versões futuras não interrompam o cliente existente. No entanto, se isso ocorrer e se o cliente não tiver usado o tipo em suas interfaces, a execução lado a lado poderá corrigir o problema.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.FrameworkName">
      <summary>Representa o nome de uma versão do .NET Framework.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> com base em uma cadeia de caracteres que contém informações sobre uma versão do .NET Framework.</summary>
      <param name="frameworkName">Uma cadeia de caracteres que contém informações de versão do .NET Framework.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="frameworkName" /> é <see cref="F:System.String.Empty" />.
- ou -
<paramref name="frameworkName" /> tem menos que dois ou mais que três componentes.
- ou -
<paramref name="frameworkName" /> não inclui um número de versão principal e secundária.
- ou -
<paramref name="frameworkName" /> não inclui um número de versão válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="frameworkName" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> com base em uma cadeia de caracteres e um objeto <see cref="T:System.Version" /> que identificam uma versão do .NET Framework.</summary>
      <param name="identifier">Uma cadeia de caracteres que identifica uma versão do .NET Framework.</param>
      <param name="version">Um objeto que contém informações de versão do .NET Framework.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> é <see langword="null" />.
- ou -
<paramref name="version" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.FrameworkName" /> com base em uma cadeia de caracteres, um objeto <see cref="T:System.Version" /> que identificam uma versão do .NET Framework e um nome de perfil.</summary>
      <param name="identifier">Uma cadeia de caracteres que identifica uma versão do .NET Framework.</param>
      <param name="version">Um objeto que contém informações de versão do .NET Framework.</param>
      <param name="profile">Um nome de perfil.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="identifier" /> é <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identifier" /> é <see langword="null" />.
- ou -
<paramref name="version" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
      <summary>Retorna um valor que indica se esta instância de <see cref="T:System.Runtime.Versioning.FrameworkName" /> representa a mesma versão do .NET Framework que um objeto especificado.</summary>
      <param name="obj">O objeto a ser comparado com a instância atual.</param>
      <returns>
        <see langword="true" /> se todos os componentes do objeto <see cref="T:System.Runtime.Versioning.FrameworkName" /> atual correspondem ao componente correspondente de <paramref name="obj" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
      <summary>Retorna um valor que indica se esta instância de <see cref="T:System.Runtime.Versioning.FrameworkName" /> representa a mesma versão do .NET Framework que uma instância de <see cref="T:System.Runtime.Versioning.FrameworkName" /> especificada.</summary>
      <param name="other">O objeto a ser comparado com a instância atual.</param>
      <returns>
        <see langword="true" /> se todos os componentes do objeto <see cref="T:System.Runtime.Versioning.FrameworkName" /> atual correspondem ao componente correspondente de <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
      <summary>Obtém o nome completo desse objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>O nome <see cref="T:System.Runtime.Versioning.FrameworkName" /> completo deste objeto.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.GetHashCode">
      <summary>Retorna o código hash para o objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Um inteiro com sinal de 32 bits que representa o código hash desta instância.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Identifier">
      <summary>Obtém o identificador deste objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>O identificador deste <see cref="T:System.Runtime.Versioning.FrameworkName" /> objeto.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Equality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Retorna um valor que indica se dois objetos <see cref="T:System.Runtime.Versioning.FrameworkName" /> representam a mesma versão do .NET Framework.</summary>
      <param name="left">O primeiro objeto a ser comparado.</param>
      <param name="right">O segundo objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> representam a mesma versão do .NET Framework; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.op_Inequality(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName)">
      <summary>Retorna um valor que indica se dois objetos <see cref="T:System.Runtime.Versioning.FrameworkName" /> representam versões diferentes do .NET Framework.</summary>
      <param name="left">O primeiro objeto a ser comparado.</param>
      <param name="right">O segundo objeto a ser comparado.</param>
      <returns>
        <see langword="true" /> se os parâmetros <paramref name="left" /> e <paramref name="right" /> representam versões diferentes do .NET Framework; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Profile">
      <summary>Obtém o nome de perfil deste objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>O nome do <see cref="T:System.Runtime.Versioning.FrameworkName" /> perfil deste objeto.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.FrameworkName.ToString">
      <summary>Retorna a representação de cadeia de caracteres desse objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Uma cadeia de caracteres que representa este objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.FrameworkName.Version">
      <summary>Obtém a versão deste objeto <see cref="T:System.Runtime.Versioning.FrameworkName" />.</summary>
      <returns>Um objeto que contém informações de versão sobre <see cref="T:System.Runtime.Versioning.FrameworkName" /> este objeto.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceConsumptionAttribute">
      <summary>Especifica o recurso consumido pelo membro de uma classe. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />, especificando o escopo do recurso consumido.</summary>
      <param name="resourceScope">O <see cref="T:System.Runtime.Versioning.ResourceScope" /> para o recurso consumido.</param>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceConsumptionAttribute.#ctor(System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.ResourceConsumptionAttribute" />, especificando o escopo do recurso consumido e o escopo de como ele é consumido.</summary>
      <param name="resourceScope">O <see cref="T:System.Runtime.Versioning.ResourceScope" /> para o recurso consumido.</param>
      <param name="consumptionScope">O <see cref="T:System.Runtime.Versioning.ResourceScope" /> usado por este membro.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ConsumptionScope">
      <summary>Obtém o escopo de consumo para esse membro.</summary>
      <returns>Um <see cref="T:System.Runtime.Versioning.ResourceScope" /> objeto que especifica o escopo de recurso usado por este membro.</returns>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceConsumptionAttribute.ResourceScope">
      <summary>Obtém o escopo do recurso para o recurso consumido.</summary>
      <returns>Um <see cref="T:System.Runtime.Versioning.ResourceScope" /> objeto que especifica o escopo do recurso do membro consumido.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceExposureAttribute">
      <summary>Especifica a exposição do recurso para um membro de uma classe. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.ResourceExposureAttribute.#ctor(System.Runtime.Versioning.ResourceScope)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Runtime.Versioning.ResourceExposureAttribute" /> com o nível de exposição especificado.</summary>
      <param name="exposureLevel">O escopo do recurso.</param>
    </member>
    <member name="P:System.Runtime.Versioning.ResourceExposureAttribute.ResourceExposureLevel">
      <summary>Obtém o escopo da exposição do recurso.</summary>
      <returns>Um objeto <see cref="T:System.Runtime.Versioning.ResourceScope" />.</returns>
    </member>
    <member name="T:System.Runtime.Versioning.ResourceScope">
      <summary>Identifica o escopo de um recurso compartilhável.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.AppDomain">
      <summary>O estado é compartilhado por objetos dentro de um <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Assembly">
      <summary>O recurso está visível em um escopo de assembly.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Library">
      <summary>O estado é compartilhado por objetos dentro de uma biblioteca.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Machine">
      <summary>O estado é compartilhado por objetos dentro de um computador.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.None">
      <summary>Não há nenhum estado compartilhado.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Private">
      <summary>O recurso está visível apenas para o tipo.</summary>
    </member>
    <member name="F:System.Runtime.Versioning.ResourceScope.Process">
      <summary>O estado é compartilhado dentro de um processo.</summary>
    </member>
    <member name="T:System.Runtime.Versioning.VersioningHelper">
      <summary>Fornece métodos para ajudar desenvolvedores a escrever código seguro de versão. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope)">
      <summary>Retorna um nome de versão segura com base no nome do recurso especificado e na fonte de consumo de recurso pretendido.</summary>
      <param name="name">O nome do recurso.</param>
      <param name="from">O escopo do recurso.</param>
      <param name="to">O escopo de consumo de recurso desejado.</param>
      <returns>Um nome de versão segura.</returns>
    </member>
    <member name="M:System.Runtime.Versioning.VersioningHelper.MakeVersionSafeName(System.String,System.Runtime.Versioning.ResourceScope,System.Runtime.Versioning.ResourceScope,System.Type)">
      <summary>Retorna um nome de versão segura com base no nome do recurso especificado, no escopo de consumo de recurso pretendido e no tipo que usa o recurso.</summary>
      <param name="name">O nome do recurso.</param>
      <param name="from">O início do intervalo do escopo.</param>
      <param name="to">O fim do intervalo do escopo.</param>
      <param name="type">O <see cref="T:System.Type" /> do recurso.</param>
      <returns>Um nome de versão segura.</returns>
      <exception cref="T:System.ArgumentException">Os valores para <paramref name="from" /> e <paramref name="to" /> são inválidos. O tipo de recurso na enumeração <see cref="T:System.Runtime.Versioning.ResourceScope" /> vai de um tipo de recurso mais restritivo para um tipo de recurso mais geral.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> é <see langword="null" />.</exception>
    </member>
    <member name="T:System.Security.IPermission">
      <summary>Define os métodos implementados pelos tipos de permissão.</summary>
    </member>
    <member name="M:System.Security.IPermission.Copy">
      <summary>Cria e retorna uma cópia idêntica da permissão atual.</summary>
      <returns>Uma cópia da permissão atual.</returns>
    </member>
    <member name="M:System.Security.IPermission.Demand">
      <summary>Gera um <see cref="T:System.Security.SecurityException" /> em tempo de execução se o requisito de segurança não é atendido.</summary>
    </member>
    <member name="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
      <summary>Cria e retorna uma permissão que é a interseção de permissão atual e da permissão especificada.</summary>
      <param name="target">Uma permissão para ter interseção com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a interseção da permissão atual e da permissão especificada. Essa nova permissão é <see langword="null" /> se a interseção estiver vazia.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é uma instância da mesma classe que a permissão atual.</exception>
    </member>
    <member name="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>Determina se a permissão atual é um subconjunto da permissão especificada.</summary>
      <param name="target">Uma permissão que deve ser testada quanto à relação de subconjunto. Essa permissão deve ser do mesmo tipo da permissão atual.</param>
      <returns>
        <see langword="true" /> se a permissão atual for um subconjunto da permissão especificada; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
    </member>
    <member name="M:System.Security.IPermission.Union(System.Security.IPermission)">
      <summary>Cria uma permissão que é a união entre a permissão atual e a permissão especificada.</summary>
      <param name="target">Uma permissão a ser combinada com a permissão atual. Ele deve ser do mesmo tipo da permissão atual.</param>
      <returns>Uma nova permissão que representa a união da permissão atual e da permissão especificada.</returns>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="target" /> não é <see langword="null" /> e não é do mesmo tipo que a permissão atual.</exception>
    </member>
    <member name="T:System.Security.ISecurityEncodable">
      <summary>Define os métodos que convertem o estado do objeto de permissão para e da representação do elemento XML.</summary>
    </member>
    <member name="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="e">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
    </member>
    <member name="M:System.Security.ISecurityEncodable.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="T:System.Security.IStackWalk">
      <summary>Gerencia a movimentação da pilha que determina se todos os chamadores na pilha de chamadas têm as permissões necessárias para acessar um recurso protegido.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.Assert">
      <summary>Declara que código de chamada pode acessar o recurso identificado pelo objeto de permissão atual, mesmo que os chamadores na pilha não tenham recebido permissão para acessar o recurso.</summary>
      <exception cref="T:System.Security.SecurityException">O código de chamada não tem <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Demand">
      <summary>Determina em tempo de execução se a permissão especificada pelo objeto de permissão atual foi ou não concedida a todos os chamadores na pilha de chamadas.</summary>
      <exception cref="T:System.Security.SecurityException">Um chamador superior na pilha de chamadas não tem a permissão especificada no objeto de permissão atual.
- ou -
Um chamador na pilha de chamadas chamou <see cref="M:System.Security.IStackWalk.Deny" /> no objeto de permissão atual.</exception>
    </member>
    <member name="M:System.Security.IStackWalk.Deny">
      <summary>Faz com que cada <see cref="M:System.Security.IStackWalk.Demand" /> para o objeto atual que passa pelo código de chamada falhe.</summary>
    </member>
    <member name="M:System.Security.IStackWalk.PermitOnly">
      <summary>Faz com que cada <see cref="M:System.Security.IStackWalk.Demand" /> para todos os objetos, com exceção do atual, que passam pelo código de chamada falhe, mesmo se a permissão para acessar outros recursos foi concedida a código superior na pilha de chamadas.</summary>
    </member>
    <member name="T:System.Security.Permissions.CodeAccessSecurityAttribute">
      <summary>Especifica a classe de atributo base para a segurança de acesso do código.</summary>
    </member>
    <member name="M:System.Security.Permissions.CodeAccessSecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" />especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="T:System.Security.Permissions.PermissionState">
      <summary>Especifica se uma permissão deve ter todos ou nenhum acesso aos recursos no momento da criação.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.None">
      <summary>Nenhum acesso ao recurso protegido pela permissão.</summary>
    </member>
    <member name="F:System.Security.Permissions.PermissionState.Unrestricted">
      <summary>Acesso completo ao recurso protegido pela permissão.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAction">
      <summary>Especifica as ações de segurança que podem ser executadas usando a segurança declarativa.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Assert">
      <summary>O código de chamada pode acessar o recurso identificado pelo objeto de permissão atual, mesmo que os chamadores na pilha não tenham recebido permissão para acessar o recurso (consulte Usando o Método Assert).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Demand">
      <summary>Todos os chamadores na pilha de chamadas deverão ter a permissão especificada pelo objeto de permissão atual.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.Deny">
      <summary>A capacidade de acessar o recurso especificado pelo objeto de permissão atual é negado aos chamadores, mesmo que eles tenham recebido permissão para acessá-lo (consulte Usando o Método Deny).</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <summary>A classe derivada que está herdando a classe ou substituindo um método deverá ter recebido a permissão especificada.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.LinkDemand">
      <summary>O chamador imediato deverá ter recebido a permissão especificada. Não use no .NET Framework 4. Para confiança total, use <see cref="T:System.Security.SecurityCriticalAttribute" />; para confiança parcial, use <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.PermitOnly">
      <summary>Somente os recursos especificados por esse objeto de permissão poderão ser acessados, mesmo que o código tenha recebido permissão para acessar outros recursos.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestMinimum">
      <summary>A solicitação para as permissões mínimas necessárias para a execução do código. Esta ação só pode ser usada no escopo do assembly.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestOptional">
      <summary>A solicitação de permissões adicionais que são opcionais (não necessárias para a execução). Essa solicitação recusa implicitamente todas as outras permissões não solicitadas especificamente. Esta ação só pode ser usada no escopo do assembly.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityAction.RequestRefuse">
      <summary>A solicitação de permissões que podem ser usadas indevidamente não serão concedidas ao código de chamada. Esta ação só pode ser usada no escopo do assembly.</summary>
    </member>
    <member name="T:System.Security.Permissions.SecurityAttribute">
      <summary>Especifica a classe de atributo base da segurança declarativa da qual o <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute" /> é derivado.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Security.Permissions.SecurityAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" />especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Action">
      <summary>Obtém ou define uma ação de segurança.</summary>
      <returns>Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
      <summary>Quando substituído em uma classe derivada, cria um objeto de permissão que pode ser serializado em formato binário e persistentemente armazenado juntamente com o <see cref="T:System.Security.Permissions.SecurityAction" /> nos metadados do assembly.</summary>
      <returns>Um objeto de permissão serializável.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityAttribute.Unrestricted">
      <summary>Obtém ou define um valor que indica se a permissão total (irrestrita) para o recurso protegido pelo atributo é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão total para o recurso protegido for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionAttribute">
      <summary>Permite que as ações de segurança para <see cref="T:System.Security.Permissions.SecurityPermission" /> sejam aplicadas ao código usando a segurança declarativa. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Permissions.SecurityPermissionAttribute" /> com o <see cref="T:System.Security.Permissions.SecurityAction" /> especificado.</summary>
      <param name="action">Um dos valores de <see cref="T:System.Security.Permissions.SecurityAction" />.</param>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Assertion">
      <summary>Obtém ou define um valor que indica se a permissão para declarar que todos os chamadores deste código têm a permissão necessária para a operação é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para Assert for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.BindingRedirects">
      <summary>Obtém ou define um valor que indica se o código tem permissão para executar o redirecionamento de associação no arquivo de configuração de aplicativo.</summary>
      <returns>
        <see langword="true" /> se o código puder executar redirecionamentos de associação; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlAppDomain">
      <summary>Obtém ou define um valor que indica se a permissão para manipular <see cref="T:System.AppDomain" /> é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para manipular <see cref="T:System.AppDomain" /> for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlDomainPolicy">
      <summary>Obtém ou define um valor que indica se a permissão para alterar ou manipular a política de segurança de domínio é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para alterar ou manipular a política de segurança em um domínio de aplicativo for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlEvidence">
      <summary>Obtém ou define um valor que indica se a permissão para alterar ou manipular evidência é declarada.</summary>
      <returns>
        <see langword="true" /> se a capacidade de alterar ou manipular evidências for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPolicy">
      <summary>Obtém ou define um valor que indica se a permissão para exibir e manipular a política de segurança é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para manipular a política de segurança for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlPrincipal">
      <summary>Obtém ou define um valor que indica se a permissão para manipular a entidade de segurança atual é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para manipular a entidade de segurança atual for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.ControlThread">
      <summary>Obtém ou define um valor que indica se a permissão para manipular threads é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para manipular threads for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermissionAttribute.CreatePermission">
      <summary>Cria e retorna um novo <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Um <see cref="T:System.Security.Permissions.SecurityPermission" /> que corresponde a este atributo.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Execution">
      <summary>Obtém ou define um valor que indica se a permissão para executar código é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para executar o código for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Flags">
      <summary>Obtém ou define todos os sinalizadores de permissão que compõem as permissões <see cref="T:System.Security.Permissions.SecurityPermission" />.</summary>
      <returns>Um ou mais dos valores <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> combinados usando um or de bit e.</returns>
      <exception cref="T:System.ArgumentException">É feita uma tentativa de definir essa propriedade como um valor inválido. Veja <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> para obter os valores válidos.</exception>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.Infrastructure">
      <summary>Obtém ou define um valor que indica se o código pode conectar-se à infraestrutura de Common Language Runtime, como ao adicionar Coletores de Contexto de Comunicação Remota, Coletores Envoy e Coletores Dinâmico.</summary>
      <returns>
        <see langword="true" /> se o código puder ser conectado à infraestrutura de Common Language Runtime; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.RemotingConfiguration">
      <summary>Obtém ou define um valor que indica se o código pode configurar os tipos e canais de comunicação remota.</summary>
      <returns>
        <see langword="true" /> se o código puder configurar canais e tipos de comunicação remota; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter">
      <summary>Obtém ou define um valor que indica se o código pode usar um formatador de serialização para serializar ou desserializar um objeto.</summary>
      <returns>
        <see langword="true" /> se o código puder usar um formatador de serialização para serializar ou desserializar um objeto; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.SkipVerification">
      <summary>Obtém ou define um valor que indica se a permissão para ignorar a verificação de código é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para ignorar a verificação de código for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode">
      <summary>Obtém ou define um valor que indica se a permissão para chamar código não gerenciado é declarada.</summary>
      <returns>
        <see langword="true" /> se a permissão para chamar código não gerenciado for declarada; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermissionFlag">
      <summary>Especifica sinalizadores de acesso para o objeto de permissão de segurança.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.AllFlags">
      <summary>O estado irrestrito da permissão.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Assertion">
      <summary>Capacidade de declarar que todos os chamadores desse código têm a permissão necessária para a operação.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.BindingRedirects">
      <summary>Permissão para executar o redirecionamento de associação explícita no arquivo de configuração de aplicativo. Isso inclui o redirecionamento dos assemblies do .NET Framework que foram unificados, bem como outros assemblies localizados fora do .NET Framework.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain">
      <summary>Capacidade de criar e manipular um <see cref="T:System.AppDomain" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlDomainPolicy">
      <summary>Capacidade de especificar a política de domínio.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence">
      <summary>Capacidade de fornecer evidências, incluindo a capacidade de alterar a evidência fornecida pelo Common Language Runtime.
Essa é uma permissão avançada que deve ser concedida apenas a código altamente confiável.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy">
      <summary>Capacidade de exibir e modificar a política.
Essa é uma permissão avançada que deve ser concedida apenas a código altamente confiável.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal">
      <summary>Capacidade de manipular o objeto de entidade de segurança.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.ControlThread">
      <summary>Capacidade de usar determinadas operações avançadas em threads.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Execution">
      <summary>Permissão que o código seja executado. Sem essa permissão, o código gerenciado não será executado.
Esse sinalizador não tem efeito quando usado de forma dinâmica com modificadores de pilha, como <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> e <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure">
      <summary>Permissão para conectar o código à infraestrutura de Common Language Runtime, como a adição de Coletores de contexto de comunicação remota, coletores Envoy e coletores dinâmicos.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.NoFlags">
      <summary>Sem acesso de segurança.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.RemotingConfiguration">
      <summary>Permissão para configurar canais e tipos de comunicação remota.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter">
      <summary>Capacidade de fornecer serviços de serialização. Usado por formatadores de serialização.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.SkipVerification">
      <summary>Capacidade de ignorar a verificação de código neste assembly. O código não verificável poderá ser executado se esta permissão for concedida.
Essa é uma permissão avançada que deve ser concedida apenas a código altamente confiável.
Esse sinalizador não tem efeito quando usado de forma dinâmica com modificadores de pilha, como <see cref="M:System.Security.CodeAccessPermission.Deny" />, <see cref="M:System.Security.CodeAccessPermission.Assert" /> e <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />.</summary>
    </member>
    <member name="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode">
      <summary>Capacidade de chamar código não gerenciado.
 Uma vez que o código não gerenciado potencialmente permite que outras permissões sejam ignoradas, essa é uma permissão perigosa que deve ser concedida apenas a código altamente confiável. Ela é usada para aplicativos como o código nativo de chamada usando invocação de plataforma ou interoperabilidade COM.</summary>
    </member>
    <member name="T:System.Security.PermissionSet">
      <summary>Representa uma coleção que pode conter vários tipos diferentes de permissões.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.PermissionSet" /> com o <see cref="T:System.Security.Permissions.PermissionState" /> especificado.</summary>
      <param name="state">Um dos valores de enumeração que especifica o acesso a recursos do conjunto de permissões.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="state" /> não é um <see cref="T:System.Security.Permissions.PermissionState" /> válido.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.#ctor(System.Security.PermissionSet)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.PermissionSet" /> com valores iniciais obtidos do parâmetro <paramref name="permSet" />.</summary>
      <param name="permSet">O conjunto do qual o valor do novo <see cref="T:System.Security.PermissionSet" /> ou <see langword="null" /> para criar um <see cref="T:System.Security.PermissionSet" /> vazio.</param>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermission(System.Security.IPermission)">
      <summary>Adiciona uma permissão especificada ao <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">A permissão a ser adicionada.</param>
      <returns>A união da permissão adicionada e qualquer permissão do mesmo tipo que já exista no <see cref="T:System.Security.PermissionSet" />.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)">
      <summary>Adiciona uma permissão especificada ao <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="perm">A permissão a ser adicionada.</param>
      <returns>A união da permissão adicionada e qualquer permissão do mesmo tipo que já exista no <see cref="T:System.Security.PermissionSet" /> ou <see langword="null" />, se <paramref name="perm" /> for <see langword="null" />.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Assert">
      <summary>Declara que o código de chamada pode acessar o recurso protegido por uma demanda de permissão através do código que chama este método, mesmo que os chamadores na pilha não tenham recebido permissão para acessar o recurso. Usar um <see cref="M:System.Security.PermissionSet.Assert" /> pode criar vulnerabilidades de segurança.</summary>
      <exception cref="T:System.Security.SecurityException">A instância <see cref="T:System.Security.PermissionSet" /> declarada não foi concedida ao código de declaração.
-ou-
Já existe um <see cref="M:System.Security.PermissionSet.Assert" /> ativo para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.ContainsNonCodeAccessPermissions">
      <summary>Obtém um valor que indica se o <see cref="T:System.Security.PermissionSet" /> contém permissões que não são derivadas de <see cref="T:System.Security.CodeAccessPermission" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.PermissionSet" /> contiver permissões que não são derivadas de <see cref="T:System.Security.CodeAccessPermission" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)">
      <summary>Converte um <see cref="T:System.Security.PermissionSet" /> codificado de um formato de codificação XML para outro formato de codificação XML.</summary>
      <param name="inFormat">Uma cadeia de caracteres que representa um dos seguintes formatos de codificação: ASCII, Unicode ou Binário. Os valores possíveis são "XMLASCII" ou "XML", "XMLUNICODE" e "BINARY".</param>
      <param name="inData">Um conjunto de permissões codificados em XML.</param>
      <param name="outFormat">Uma cadeia de caracteres que representa um dos seguintes formatos de codificação: ASCII, Unicode ou Binário. Os valores possíveis são "XMLASCII" ou "XML", "XMLUNICODE" e "BINARY".</param>
      <returns>Um conjunto de permissões criptografadas com o formato de saída especificado.</returns>
      <exception cref="T:System.NotImplementedException">Em todos os casos.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Copy">
      <summary>Cria uma cópia do <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Uma cópia do <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.CopyTo(System.Array,System.Int32)">
      <summary>Copia os objetos de permissão do conjunto para o local indicado em um <see cref="T:System.Array" />.</summary>
      <param name="array">A matriz de destino para a qual copiar.</param>
      <param name="index">A posição inicial na matriz para começar a copiar (baseado em zero).</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="array" /> tem mais de uma dimensão.</exception>
      <exception cref="T:System.IndexOutOfRangeException">O parâmetro <paramref name="index" /> está fora do intervalo do parâmetro <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.Count">
      <summary>Obtém o número de objetos de permissão contidos no conjunto de permissões.</summary>
      <returns>O número de objetos de permissão contidos no <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Demand">
      <summary>Força um <see cref="T:System.Security.SecurityException" /> em tempo de execução se todos os chamadores no topo da pilha de chamadas não receberam as permissões especificadas pela instância atual.</summary>
      <exception cref="T:System.Security.SecurityException">Um chamador na cadeia de chamadas não tem a permissão exigida.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Deny">
      <summary>Faz com que qualquer <see cref="M:System.Security.PermissionSet.Demand" /> que passe pelo código de chamada para uma permissão que tenha uma interseção com uma permissão de um tipo contido no atual <see cref="T:System.Security.PermissionSet" /> falhe.</summary>
      <exception cref="T:System.Security.SecurityException">Uma chamada anterior a <see cref="M:System.Security.PermissionSet.Deny" /> já restringiu as permissões para o registro de ativação atual.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.Equals(System.Object)">
      <summary>Determina se o objeto <see cref="T:System.Security.PermissionSet" /> ou <see cref="T:System.Security.NamedPermissionSet" /> especificado é igual ao <see cref="T:System.Security.PermissionSet" /> atual.</summary>
      <param name="o">O objeto a ser comparado com o <see cref="T:System.Security.PermissionSet" /> atual.</param>
      <returns>
        <see langword="true" /> se o objeto especificado for igual ao objeto <see cref="T:System.Security.PermissionSet" /> atual, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>Reconstrói um objeto de segurança com um estado especificado de uma codificação XML.</summary>
      <param name="et">A codificação XML a ser usada para reconstruir o objeto de segurança.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="et" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="et" /> não é um elemento de permissão válido.
-ou-
O número de versão do parâmetro <paramref name="et" /> não é compatível.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumerator">
      <summary>Retorna um enumerador para as permissões do conjunto.</summary>
      <returns>Um objeto enumerador para as permissões do conjunto.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetEnumeratorImpl">
      <summary>Retorna um enumerador para as permissões do conjunto.</summary>
      <returns>Um objeto enumerador para as permissões do conjunto.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetHashCode">
      <summary>Obtém um código hash para o objeto <see cref="T:System.Security.PermissionSet" /> atual, adequado para algoritmos de hash e estruturas de dados, tais como uma tabela de hash.</summary>
      <returns>Um código hash para o objeto <see cref="T:System.Security.PermissionSet" /> atual.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermission(System.Type)">
      <summary>Obtém um objeto de permissão do tipo especificado, se ele existir no conjunto.</summary>
      <param name="permClass">O tipo do objeto de permissão desejado.</param>
      <returns>Uma cópia do objeto de permissão do tipo especificado pelo parâmetro <paramref name="permClass" /> contido no <see cref="T:System.Security.PermissionSet" /> ou <see langword="null" />, se não existir nenhum.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.GetPermissionImpl(System.Type)">
      <summary>Obtém um objeto de permissão do tipo especificado, se ele existir no conjunto.</summary>
      <param name="permClass">O tipo do objeto de permissão.</param>
      <returns>Uma cópia do objeto de permissão do tipo especificado pelo parâmetro <paramref name="permClass" /> contido no <see cref="T:System.Security.PermissionSet" /> ou <see langword="null" />, se não existir nenhum.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Intersect(System.Security.PermissionSet)">
      <summary>Cria e retorna um conjunto de permissões que é a interseção do <see cref="T:System.Security.PermissionSet" /> atual e do <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="other">Um conjunto de permissões a intersectar com o <see cref="T:System.Security.PermissionSet" /> atual.</param>
      <returns>Um novo conjunto de permissões que representa a interseção do <see cref="T:System.Security.PermissionSet" /> atual e do destino especificado. Este objeto será <see langword="null" /> se a interseção estiver vazia.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsEmpty">
      <summary>Obtém um valor que indica se o <see cref="T:System.Security.PermissionSet" /> está vazio.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.PermissionSet" /> estiver vazio; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)">
      <summary>Determina se o <see cref="T:System.Security.PermissionSet" /> atual é um subconjunto do <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="target">O conjunto de permissões a testar para a relação do subconjunto. Isso deve ser um <see cref="T:System.Security.PermissionSet" /> ou <see cref="T:System.Security.NamedPermissionSet" />.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Security.PermissionSet" /> atual for um subconjunto do parâmetro <paramref name="target" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.PermissionSet.IsSynchronized">
      <summary>Obtém um valor que indica se é garantido que a coleção é thread-safe.</summary>
      <returns>Sempre <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.IsUnrestricted">
      <summary>Determina se o <see cref="T:System.Security.PermissionSet" /> é <see langword="Unrestricted" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Security.PermissionSet" /> for <see langword="Unrestricted" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.PermitOnly">
      <summary>Faz com que qualquer <see cref="M:System.Security.PermissionSet.Demand" /> que passe pelo código de chamada para qualquer <see cref="T:System.Security.PermissionSet" /> que não seja um subconjunto do <see cref="T:System.Security.PermissionSet" /> atual falhe.</summary>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermission(System.Type)">
      <summary>Remove uma permissão de um determinado tipo do conjunto.</summary>
      <param name="permClass">O tipo de permissão a excluir.</param>
      <returns>A permissão removida do conjunto.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RemovePermissionImpl(System.Type)">
      <summary>Remove uma permissão de um determinado tipo do conjunto.</summary>
      <param name="permClass">O tipo de permissão para remover.</param>
      <returns>A permissão removida do conjunto.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.RevertAssert">
      <summary>Faz com que qualquer <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior do quadro atual seja removido e não esteja mais em vigor.</summary>
      <exception cref="T:System.InvalidOperationException">Não há nenhum <see cref="M:System.Security.CodeAccessPermission.Assert" /> anterior para o quadro atual.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermission(System.Security.IPermission)">
      <summary>Define uma permissão para o <see cref="T:System.Security.PermissionSet" />, substituindo qualquer permissão existente do mesmo tipo.</summary>
      <param name="perm">A permissão a ser definida.</param>
      <returns>A permissão definida.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="M:System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)">
      <summary>Define uma permissão para o <see cref="T:System.Security.PermissionSet" />, substituindo qualquer permissão existente do mesmo tipo.</summary>
      <param name="perm">A permissão a ser definida.</param>
      <returns>A permissão definida.</returns>
      <exception cref="T:System.InvalidOperationException">O método é chamado de um <see cref="T:System.Security.ReadOnlyPermissionSet" />.</exception>
    </member>
    <member name="P:System.Security.PermissionSet.SyncRoot">
      <summary>Obtém o objeto raiz da coleção atual.</summary>
      <returns>O objeto raiz da coleção atual.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>É executado quando o todo o grafo de objeto tiver sido desserializado.</summary>
      <param name="sender">O objeto que iniciou o retorno de chamada. A funcionalidade desse parâmetro não está implementada no momento.</param>
    </member>
    <member name="M:System.Security.PermissionSet.ToString">
      <summary>Retorna uma representação de cadeia de caracteres da <see cref="T:System.Security.PermissionSet" />.</summary>
      <returns>Uma representação de <see cref="T:System.Security.PermissionSet" />.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.ToXml">
      <summary>Cria uma codificação XML do objeto de segurança e seu estado atual.</summary>
      <returns>Uma codificação XML do objeto de segurança, incluindo quaisquer informações de estado.</returns>
    </member>
    <member name="M:System.Security.PermissionSet.Union(System.Security.PermissionSet)">
      <summary>Cria um <see cref="T:System.Security.PermissionSet" /> que é a união do <see cref="T:System.Security.PermissionSet" /> atual e do <see cref="T:System.Security.PermissionSet" /> especificado.</summary>
      <param name="other">O conjunto de permissões para formar a união com o <see cref="T:System.Security.PermissionSet" /> atual.</param>
      <returns>Um novo conjunto de permissões que representa a união do <see cref="T:System.Security.PermissionSet" /> atual e do <see cref="T:System.Security.PermissionSet" /> especificado.</returns>
    </member>
    <member name="T:System.Security.SecurityElement">
      <summary>Representa o modelo de objeto XML para codificação de objetos de segurança. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityElement" /> com a marca especificada.</summary>
      <param name="tag">O nome da marca de um elemento XML.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="tag" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="tag" /> é inválido em XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.SecurityElement" /> com o texto e a marca especificados.</summary>
      <param name="tag">O nome da marca do elemento XML.</param>
      <param name="text">O conteúdo do texto dentro do elemento.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="tag" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="tag" /> ou <paramref name="text" /> é inválido em XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddAttribute(System.String,System.String)">
      <summary>Adiciona um atributo de nome/valor a um elemento XML.</summary>
      <param name="name">O nome do atributo.</param>
      <param name="value">O valor do atributo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> ou o parâmetro <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> ou <paramref name="value" /> é inválido em XML.
- ou -
Um atributo com o nome especificado pelo parâmetro <paramref name="name" /> já existe.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.AddChild(System.Security.SecurityElement)">
      <summary>Adiciona um elemento filho ao elemento XML.</summary>
      <param name="child">O elemento filho a adicionar.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="child" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Attribute(System.String)">
      <summary>Localiza um atributo pelo nome em um elemento XML.</summary>
      <param name="name">O nome do atributo pelo qual pesquisar.</param>
      <returns>O valor associado ao atributo nomeado ou <see langword="null" /> se nenhum atributo com <paramref name="name" /> existir.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="name" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Attributes">
      <summary>Obtém ou define os atributos de um elemento XML como pares nome/valor.</summary>
      <returns>O <see cref="T:System.Collections.Hashtable" /> objeto para os valores de atributo do elemento XML.</returns>
      <exception cref="T:System.InvalidCastException">O nome ou o valor do objeto <see cref="T:System.Collections.Hashtable" /> é inválido.</exception>
      <exception cref="T:System.ArgumentException">O nome não é um nome de atributo XML válido.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Children">
      <summary>Obtém ou define a matriz de elementos filho do elemento XML.</summary>
      <returns>Os elementos filho ordenados do elemento XML como elementos de segurança.</returns>
      <exception cref="T:System.ArgumentException">Um filho do nó pai XML é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.Copy">
      <summary>Cria e retorna uma cópia idêntica do objeto <see cref="T:System.Security.SecurityElement" /> atual.</summary>
      <returns>Uma cópia do objeto <see cref="T:System.Security.SecurityElement" /> atual.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Equal(System.Security.SecurityElement)">
      <summary>Compara dois objetos de elemento XML quanto à igualdade.</summary>
      <param name="other">Um objeto de elemento XML com o qual comparar o objeto do elemento XML atual.</param>
      <returns>
        <see langword="true" /> se a marca, os nomes e valores de atributos, os elementos filho e os campos de texto no elemento XML atual forem idênticos às suas contrapartes no parâmetro <paramref name="other" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.Escape(System.String)">
      <summary>Substitui os caracteres XML inválidos em uma cadeia de caracteres com seus equivalentes XML válidos.</summary>
      <param name="str">A cadeia de caracteres dentro da qual escapar os caracteres inválidos.</param>
      <returns>A cadeia de caracteres de entrada com caracteres inválidos substituídos.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.FromString(System.String)">
      <summary>Cria um elemento de segurança de uma cadeia de caracteres codificada em XML.</summary>
      <param name="xml">A cadeia de caracteres codificada em XML da qual o elemento de segurança é criado.</param>
      <returns>Um <see cref="T:System.Security.SecurityElement" /> criado do XML.</returns>
      <exception cref="T:System.Security.XmlSyntaxException">
        <paramref name="xml" /> contém um ou mais caracteres de aspas simples.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xml" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeName(System.String)">
      <summary>Determina se uma cadeia de caracteres é um nome de atributo válido.</summary>
      <param name="name">O nome do atributo para testar quanto à validade.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="name" /> for um nome de atributo XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidAttributeValue(System.String)">
      <summary>Determina se uma cadeia de caracteres é um valor de atributo válido.</summary>
      <param name="value">O valor do atributo a testar quanto à validade.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="value" /> for um valor de atributo XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidTag(System.String)">
      <summary>Determina se uma cadeia de caracteres é uma marca válida.</summary>
      <param name="tag">A marca a testar quanto à validade.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="tag" /> for uma marca XML válida; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.IsValidText(System.String)">
      <summary>Determina se uma cadeia de caracteres é válida como texto dentro de um elemento XML.</summary>
      <param name="text">O texto a testar quanto à validade.</param>
      <returns>
        <see langword="true" /> se o parâmetro <paramref name="text" /> for um elemento de texto XML válido; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForChildByTag(System.String)">
      <summary>Localiza um filho pelo seu nome de marca.</summary>
      <param name="tag">A marca pela qual pesquisar nos elementos filho.</param>
      <returns>O primeiro elemento XML filho com o valor da marca especificado ou <see langword="null" />, se nenhum elemento filho com <paramref name="tag" /> existir.</returns>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="tag" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.SearchForTextOfTag(System.String)">
      <summary>Localiza um filho pelo seu nome de marca e retorna o texto contido.</summary>
      <param name="tag">A marca pela qual pesquisar nos elementos filho.</param>
      <returns>O conteúdo de texto do primeiro elemento filho com o valor da marca especificado.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tag" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Tag">
      <summary>Obtém ou define o nome da marca de um elemento XML.</summary>
      <returns>O nome da marca de um elemento XML.</returns>
      <exception cref="T:System.ArgumentNullException">A marca é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">A marca não é válida em XML.</exception>
    </member>
    <member name="P:System.Security.SecurityElement.Text">
      <summary>Obtém ou define o texto em um elemento XML.</summary>
      <returns>O valor do texto dentro de um elemento XML.</returns>
      <exception cref="T:System.ArgumentException">O texto não é válido em XML.</exception>
    </member>
    <member name="M:System.Security.SecurityElement.ToString">
      <summary>Produz uma representação de cadeia de caracteres de um elemento XML e seus atributos constituintes, elementos filho e texto.</summary>
      <returns>O elemento XML e seus conteúdos.</returns>
    </member>
    <member name="T:System.StringComparer">
      <summary>Representa uma operação de comparação de cadeia de caracteres que usa regras de comparação ordinal ou com base em cultura e caso específico.</summary>
    </member>
    <member name="M:System.StringComparer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.StringComparer" />.</summary>
    </member>
    <member name="M:System.StringComparer.Compare(System.Object,System.Object)">
      <summary>Quando substituído em uma classe derivada, compara dois objetos e retorna uma indicação de sua ordem de classificação relativa.</summary>
      <param name="x">Um objeto a ser comparado com <paramref name="y" />.</param>
      <param name="y">Um objeto a ser comparado com <paramref name="x" />.</param>
      <returns>Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.
  Valor 
  Significado 
  Menor que zero 
 <paramref name="x" /> precede <paramref name="y" /> na ordem de classificação.  
  
-ou- 
 <paramref name="x" /> é <see langword="null" /> e <paramref name="y" /> não é <see langword="null" />.  
  
  Zero 
 <paramref name="x" /> é igual a <paramref name="y" />.  
  
-ou- 
 <paramref name="x" /> e <paramref name="y" /> são <see langword="null" />.  
  
  Maior que zero 
 <paramref name="x" /> segue <paramref name="y" /> na ordem de classificação.  
  
-ou- 
 <paramref name="y" /> é <see langword="null" /> e <paramref name="x" /> não é <see langword="null" />.</returns>
      <exception cref="T:System.ArgumentException">Nem <paramref name="x" /> nem <paramref name="y" /> é um <see cref="T:System.String" /> objeto e nem <paramref name="x" /> nem <paramref name="y" /> implementa a interface <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.StringComparer.Compare(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, compara duas cadeias de caracteres e retorna uma indicação de sua ordem de classificação relativa.</summary>
      <param name="x">Uma cadeia de caracteres a ser comparada com <paramref name="y" />.</param>
      <param name="y">Uma cadeia de caracteres a ser comparada com <paramref name="x" />.</param>
      <returns>Um inteiro assinado que indica os valores relativos de <paramref name="x" /> e <paramref name="y" />, conforme mostrado na tabela a seguir.
  Valor 
  Significado 
  Menor que zero 
 <paramref name="x" /> precede <paramref name="y" /> na ordem de classificação.  
  
-ou- 
 <paramref name="x" /> é <see langword="null" /> e <paramref name="y" /> não é <see langword="null" />.  
  
  Zero 
 <paramref name="x" /> é igual a <paramref name="y" />.  
  
-ou- 
 <paramref name="x" /> e <paramref name="y" /> são <see langword="null" />.  
  
  Maior que zero 
 <paramref name="x" /> segue <paramref name="y" /> na ordem de classificação.  
  
-ou- 
 <paramref name="y" /> é <see langword="null" /> e <paramref name="x" /> não é <see langword="null" />.</returns>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
      <summary>Cria um objeto <see cref="T:System.StringComparer" /> que compara cadeias de caracteres de acordo com as regras de uma cultura especificada.</summary>
      <param name="culture">Uma cultura cujas regras linguísticas são usadas para executar uma comparação de cadeia de caracteres.</param>
      <param name="ignoreCase">
        <see langword="true" /> para especificar que as operações de comparação não diferenciam maiúsculas de minúsculas, <see langword="false" /> para especificar que as comparações que diferenciam maiúsculas de minúsculas.</param>
      <returns>Um novo objeto <see cref="T:System.StringComparer" /> que realiza comparações de cadeias de caracteres de acordo com as regras de comparação usadas pelo parâmetro <paramref name="culture" /> e a regra de maiúsculas e minúsculas especificada pelo parâmetro <paramref name="ignoreCase" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
      <param name="culture" />
      <param name="options" />
    </member>
    <member name="P:System.StringComparer.CurrentCulture">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura atual.</summary>
      <returns>Um novo objeto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.CurrentCultureIgnoreCase">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa comparações de cadeia de caracteres que não diferenciam maiúsculas de minúsculas, usando as regras de comparação de palavras da cultura atual.</summary>
      <returns>Um novo objeto para comparação de cadeia de caracteres.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.Object,System.Object)">
      <summary>Quando substituído em uma classe derivada, indica se dois objetos são iguais.</summary>
      <param name="x">Um objeto a ser comparado com <paramref name="y" />.</param>
      <param name="y">Um objeto a ser comparado com <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> se referirem ao mesmo objeto ou <paramref name="x" /> e <paramref name="y" /> forem o mesmo tipo de objeto e esses objetos forem iguais ou <paramref name="x" /> e <paramref name="y" /> forem <see langword="null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.Equals(System.String,System.String)">
      <summary>Quando substituído em uma classe derivada, indica se duas cadeias de caracteres são iguais.</summary>
      <param name="x">Uma cadeia de caracteres a ser comparada com <paramref name="y" />.</param>
      <param name="y">Uma cadeia de caracteres a ser comparada com <paramref name="x" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="x" /> e <paramref name="y" /> se referirem ao mesmo objeto, ou <paramref name="x" /> e <paramref name="y" /> forem iguais, ou <paramref name="x" /> e <paramref name="y" /> forem <see langword="null" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.StringComparer.FromComparison(System.StringComparison)">
      <param name="comparisonType" />
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.Object)">
      <summary>Quando substituído em uma classe derivada, obtém o código hash para o objeto especificado.</summary>
      <param name="obj">Um objeto.</param>
      <returns>Um código hash com sinal de 32 bits calculado do valor do parâmetro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.StringComparer.GetHashCode(System.String)">
      <summary>Quando substituído em uma classe derivada, obtém o código hash para a cadeia de caracteres especificada.</summary>
      <param name="obj">Uma cadeia de caracteres.</param>
      <returns>Um código hash com sinal de 32 bits calculado do valor do parâmetro <paramref name="obj" />.</returns>
      <exception cref="T:System.ArgumentException">Não há memória suficiente disponível para alocar o buffer necessário para calcular o código hash.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> é <see langword="null" />.</exception>
    </member>
    <member name="P:System.StringComparer.InvariantCulture">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura invariável.</summary>
      <returns>Um novo objeto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.InvariantCultureIgnoreCase">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres que não diferencia maiúsculas de minúsculas usando as regras de comparação de palavras da cultura invariável.</summary>
      <returns>Um novo objeto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.Ordinal">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres ordinais que diferencia maiúsculas de minúsculas.</summary>
      <returns>Um objeto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="P:System.StringComparer.OrdinalIgnoreCase">
      <summary>Obtém um objeto <see cref="T:System.StringComparer" /> que executa uma comparação de cadeia de caracteres ordinais que não diferencia maiúsculas de minúsculas.</summary>
      <returns>Um objeto <see cref="T:System.StringComparer" />.</returns>
    </member>
    <member name="T:System.StringNormalizationExtensions">
      <summary>Fornece métodos de extensão para trabalhar com normalização de cadeia de caracteres.</summary>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String)">
      <summary>Indica se a cadeia de caracteres especificada está no formato de normalização Unicode C.</summary>
      <param name="value">Uma cadeia de caracteres.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> estiver no formato de normalização C; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contém caracteres Unicode inválidos.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.IsNormalized(System.String,System.Text.NormalizationForm)">
      <summary>Indica se uma cadeia de caracteres está em um formato de normalização Unicode especificado.</summary>
      <param name="value">Uma cadeia de caracteres.</param>
      <param name="normalizationForm">Um formato de normalização Unicode.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> estiver no formato de normalização <paramref name="normalizationForm" />; caso contrário, <see langword="false" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contém caracteres Unicode inválidos.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String)">
      <summary>Normaliza uma cadeia de caracteres com relação a um formato de normalização Unicode C.</summary>
      <param name="value">A cadeia de caracteres a ser normalizada.</param>
      <returns>Uma nova cadeia de caracteres cujo valor textual é o mesmo que <paramref name="value" />, mas cuja representação binária está no formato de normalização Unicode C.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contém caracteres Unicode inválidos.</exception>
    </member>
    <member name="M:System.StringNormalizationExtensions.Normalize(System.String,System.Text.NormalizationForm)">
      <summary>Normaliza uma cadeia de caracteres com relação ao formato de normalização Unicode.</summary>
      <param name="value">A cadeia de caracteres a ser normalizada.</param>
      <param name="normalizationForm">O formato de normalização Unicode.</param>
      <returns>Uma nova cadeia de caracteres cujo valor textual é o mesmo que <paramref name="value" />, mas cuja representação binária está no formato de normalização <paramref name="normalizationForm" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> contém caracteres Unicode inválidos.</exception>
    </member>
    <member name="T:System.UriBuilder">
      <summary>Fornece um construtor personalizado para URIs (Uniform Resource Identifiers) e modifica URIs para a classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" />.</summary>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com URI especificado.</summary>
      <param name="uri">Uma cadeia de caracteres do URI.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.FormatException" />.  
  

          
          <paramref name="uri" /> é uma cadeia de caracteres de tamanho zero ou contém apenas espaços.  
  
-ou- 
A rotina de análise detectou um esquema em um formulário inválido.  
  
-ou- 
O analisador detectou mais de duas barras consecutivas em um URI que não usa o esquema de "arquivo".  
  
-ou- 
 <paramref name="uri" /> não é um URI válido.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com o esquema e o host especificados.</summary>
      <param name="schemeName">Um protocolo de acesso à Internet.</param>
      <param name="hostName">Um nome de domínio no estilo DNS ou endereço IP.</param>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com o esquema, o host e a porta especificados.</summary>
      <param name="scheme">Um protocolo de acesso à Internet.</param>
      <param name="host">Um nome de domínio no estilo DNS ou endereço IP.</param>
      <param name="portNumber">Um número da porta IP para o serviço.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="portNumber" /> é menor que -1 ou maior que 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com o esquema, o host, o número da porta e o caminho especificados.</summary>
      <param name="scheme">Um protocolo de acesso à Internet.</param>
      <param name="host">Um nome de domínio no estilo DNS ou endereço IP.</param>
      <param name="port">Um número da porta IP para o serviço.</param>
      <param name="pathValue">O caminho para o recurso de Internet.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que -1 ou maior que 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com o esquema, host, número da porta, caminho e cadeia de caracteres de consulta especificados ou o identificador do fragmento.</summary>
      <param name="scheme">Um protocolo de acesso à Internet.</param>
      <param name="host">Um nome de domínio no estilo DNS ou endereço IP.</param>
      <param name="port">Um número da porta IP para o serviço.</param>
      <param name="path">O caminho para o recurso de Internet.</param>
      <param name="extraValue">Uma cadeia de caracteres de consulta ou identificador do fragmento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="extraValue" /> não é <see langword="null" /> nem <see cref="F:System.String.Empty" /> e um identificador de fragmento válido não começa com um sinal de cerquilha (#), nem uma cadeia de caracteres de consulta válida começa com um ponto de interrogação (?).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que -1 ou maior que 65.535.</exception>
    </member>
    <member name="M:System.UriBuilder.#ctor(System.Uri)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.UriBuilder" /> com a instância <see cref="T:System.Uri" /> especificada.</summary>
      <param name="uri">Uma instância da classe <see cref="T:System.Uri" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.UriBuilder.Equals(System.Object)">
      <summary>Compara uma instância <see cref="T:System.Uri" /> existente com os conteúdos do <see cref="T:System.UriBuilder" /> quanto à igualdade.</summary>
      <param name="rparam">O objeto a ser comparado com a instância atual.</param>
      <returns>
        <see langword="true" /> se <paramref name="rparam" /> representar o mesmo <see cref="T:System.Uri" /> que o <see cref="T:System.Uri" /> construído por essa instância <see cref="T:System.UriBuilder" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.UriBuilder.Fragment">
      <summary>Obtém ou define a parte de fragmento do URI.</summary>
      <returns>A parte de fragmento do URI. O identificador do fragmento ("#") é adicionado ao início do fragmento.</returns>
    </member>
    <member name="M:System.UriBuilder.GetHashCode">
      <summary>Retorna o código hash para o URI.</summary>
      <returns>O código hash gerado para o URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Host">
      <summary>Obtém ou define o nome do host DNS (Sistema de Nomes de Domínio) ou o endereço IP de um servidor.</summary>
      <returns>O nome do host DNS ou o endereço IP do servidor.</returns>
    </member>
    <member name="P:System.UriBuilder.Password">
      <summary>Obtém ou define a senha associada ao usuário que acessa o URI.</summary>
      <returns>A senha do usuário que acessa o URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Path">
      <summary>Obtém ou define o caminho para o recurso referenciado pelo URI.</summary>
      <returns>O caminho para o recurso referenciado pelo URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Port">
      <summary>Obtém ou define o número da porta desse URI.</summary>
      <returns>O número da porta do URI.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">A porta não pode ser definida como um valor menor que -1 ou maior do que 65.535.</exception>
    </member>
    <member name="P:System.UriBuilder.Query">
      <summary>Obtém ou define informações de consulta incluídas na URI.</summary>
      <returns>As informações de consulta incluídas na URI.</returns>
    </member>
    <member name="P:System.UriBuilder.Scheme">
      <summary>Obtém ou define o nome do esquema do URI.</summary>
      <returns>O esquema do URI.</returns>
      <exception cref="T:System.ArgumentException">O esquema não pode ser definido como um nome de esquema inválido.</exception>
    </member>
    <member name="M:System.UriBuilder.ToString">
      <summary>Retorna a cadeia de caracteres de exibição da instância <see cref="T:System.UriBuilder" /> especificada.</summary>
      <returns>A cadeia de caracteres que contém a cadeia de caracteres de exibição sem escape de <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.FormatException" />.  
  

            
  
 A instância <see cref="T:System.UriBuilder" /> tem uma senha incorreta.</exception>
    </member>
    <member name="P:System.UriBuilder.Uri">
      <summary>Obtém a instância <see cref="T:System.Uri" /> construída pela instância <see cref="T:System.UriBuilder" /> especificada.</summary>
      <returns>Um <see cref="T:System.Uri" /> que contém o URI construído pela <see cref="T:System.UriBuilder" />.</returns>
      <exception cref="T:System.UriFormatException">Em vez disso, no .NET para aplicativos da Windows Store ou na Biblioteca de Classes Portátil, capture a exceção de classe base, <see cref="T:System.FormatException" />.  
  

            
  
 O URI construído pelas propriedades <see cref="T:System.UriBuilder" /> é inválido.</exception>
    </member>
    <member name="P:System.UriBuilder.UserName">
      <summary>O nome de usuário associado ao usuário que acessa o URI.</summary>
      <returns>O nome de usuário do usuário que acessa o URI.</returns>
    </member>
  </members>
</doc>