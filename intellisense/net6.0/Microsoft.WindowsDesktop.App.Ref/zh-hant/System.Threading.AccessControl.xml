<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.AccessControl</name>
  </assembly>
  <members>
    <member name="T:System.Security.AccessControl.EventWaitHandleAccessRule">
      <summary>表示允許或拒絕使用者或群組的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組名稱、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">套用這個規則的使用者或群組名稱。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="identity" /> 是零長度字串  
  
-或- 
 <paramref name="identity" /> 的長度超過 512 個字元。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights">
      <summary>取得存取規則所允許或拒絕的權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，表示存取規則所允許或拒絕的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleAuditRule">
      <summary>表示要針對使用者或群組稽核的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 類別的新執行個體，指定要稽核的使用者或群組、要稽核的權限，以及是要稽核成功、失敗或兩者皆稽核。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，指定要稽核的存取類型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功、失敗或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="flags" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights">
      <summary>取得受稽核規則影響的存取權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，表示受稽核規則所影響的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleRights">
      <summary>指定可套用至具名系統事件物件的存取控制 (Access Control) 權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ChangePermissions">
      <summary>變更與具名事件相關聯之安全性和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Delete">
      <summary>刪除具名事件的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.FullControl">
      <summary>對具名事件執行完全控制以及修改其存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Modify">
      <summary>設定或重設具名事件之信號狀態的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.ReadPermissions">
      <summary>開啟並複製具名事件之存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.Synchronize">
      <summary>等候具名事件的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.EventWaitHandleRights.TakeOwnership">
      <summary>變更具名事件擁有人的權限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.EventWaitHandleSecurity">
      <summary>表示套用至具名系統等候控制代碼 (Wait Handle) 的 Windows 存取控制安全性。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 類別的新執行個體。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 上不支援這個類別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>以指定的存取權限、存取控制和旗標，為指定的使用者建立新的存取控制規則。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，指定允許或拒絕的存取權限 (轉型成整數)。</param>
      <param name="isInherited">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="inheritanceFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="propagationFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 物件，表示指定之使用者的指定權限。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜尋可合併新規則的相符存取控制規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的存取控制規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜尋可合併新規則的稽核規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的稽核規則。 這個規則指定的使用者會決定搜尋方式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>以指定要套用規則的使用者的方式，建立新的稽核規則、要稽核的存取權限以及觸發該稽核規則的結果。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的位元組合，指定要稽核的存取權限 (轉型成整數)。</param>
      <param name="isInherited">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="inheritanceFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="propagationFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功存取、失敗存取或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 物件，表示指定之使用者的指定稽核規則。 此方法的傳回型別為基底類別 <see cref="T:System.Security.AccessControl.AuditRule" />，但是傳回值可以安全地轉型為衍生類別。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜尋具有與指定之存取規則相同的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 以及具有相容的繼承和傳用旗標的存取控制規則。如果找到這樣的規則，則會移除指定之存取規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />，其會指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜尋與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />，指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>搜尋與指定規則完全相符的存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜尋具有與指定之規則相同的使用者以及具有相容的繼承和傳用旗標的稽核規則。如果找到了相容的規則，則會移除指定之規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />，其會指定要搜尋的使用者，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜尋與所指定規則有相同使用者的所有稽核規則，找到以後將其移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />，指定要搜尋的使用者。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>搜尋與指定規則完全相符的稽核規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>移除與指定規則具有相同使用者的所有存取控制規則 (不論 <see cref="T:System.Security.AccessControl.AccessControlType" /> 為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
      <summary>移除與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" />。 這個規則的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
      <summary>移除與指定規則具有相同使用者的所有稽核規則 (不論 <see cref="T:System.Security.AccessControl.AuditFlags" /> 值為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRightType">
      <summary>取得 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 類別用來表示存取權限的列舉型別。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 列舉型別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AccessRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 類別用來表示存取規則的型別。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 類別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.EventWaitHandleSecurity.AuditRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 類別用來表示稽核規則的類型。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.EventWaitHandleAuditRule" /> 類別。</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAccessRule">
      <summary>表示允許或拒絕使用者或群組的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組名稱、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">套用這個規則的使用者或群組名稱。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="identity" /> 是零長度字串  
  
-或- 
 <paramref name="identity" /> 的長度超過 512 個字元。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAccessRule.MutexRights">
      <summary>取得存取規則所允許或拒絕的權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，表示存取規則所允許或拒絕的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexAuditRule">
      <summary>表示要針對使用者或群組稽核的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 類別的新執行個體，指定要稽核的使用者或群組、要稽核的權限，以及是要稽核成功、失敗或兩者皆稽核。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定要稽核的存取類型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功、失敗或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="flags" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉譯成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexAuditRule.MutexRights">
      <summary>取得受稽核規則影響的存取權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，表示受稽核規則所影響的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.MutexRights">
      <summary>指定可套用至具名系統 Mutex 物件的存取控制權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ChangePermissions">
      <summary>變更與具名 Mutex 相關聯之安全性和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Delete">
      <summary>刪除具名 Mutex 的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.FullControl">
      <summary>對具名 Mutex 執行完全控制以及修改其存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Modify">
      <summary>釋放具名 Mutex 的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.ReadPermissions">
      <summary>開啟並複製具名 Mutex 之存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.Synchronize">
      <summary>等候具名 Mutex 的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.MutexRights.TakeOwnership">
      <summary>變更具名 Mutex 擁有人的權限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.MutexSecurity">
      <summary>表示具名 Mutex 的 Windows 存取控制安全性。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 類別的新執行個體。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 上不支援這個類別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>從具有指定名稱的系統 Mutex，使用存取控制安全性規則的指定區段，初始化 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 類別的新執行個體。</summary>
      <param name="name">要擷取其存取控制安全性規則的系統 Mutex 名稱。</param>
      <param name="includeSections">
        <see cref="T:System.Security.AccessControl.AccessControlSections" /> 旗標的組合，指定要擷取的區段。</param>
      <exception cref="T:System.IO.FileNotFoundException">沒有具有指定名稱的系統物件。</exception>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 上不支援這個類別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>以指定的存取權限、存取控制和旗標，為指定的使用者建立新的存取控制規則。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定允許或拒絕的存取權限 (轉型成整數)。</param>
      <param name="isInherited">對於具名 Mutex 沒有意義，因為它們沒有階層架構。</param>
      <param name="inheritanceFlags">對於具名 Mutex 沒有意義，因為它們沒有階層架構。</param>
      <param name="propagationFlags">對於具名 Mutex 沒有意義，因為它們沒有階層架構。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 物件，表示指定之使用者的指定權限。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜尋可合併新規則的相符存取控制規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的存取控制規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Security.Principal.IdentityNotMappedException">
        <paramref name="rule" /> 無法對應至已知的識別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AddAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜尋可合併新規則的稽核規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的稽核規則。 這個規則指定的使用者會決定搜尋方式。</param>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>以指定要套用規則的使用者的方式，建立新的稽核規則、要稽核的存取權限以及觸發該稽核規則的結果。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.MutexRights" /> 值的位元組合，指定要稽核的存取權限 (轉型成整數)。</param>
      <param name="isInherited">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="inheritanceFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="propagationFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功存取、失敗存取或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 物件，表示指定之使用者的指定稽核規則。 此方法的傳回型別為基底類別 <see cref="T:System.Security.AccessControl.AuditRule" />，但是傳回值可以安全地轉型為衍生類別。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜尋具有與指定之規則相同的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 以及具有相容的繼承和傳用旗標的存取控制規則。如果找到這樣的規則，則會移除指定之存取規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" />，其會指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleAll(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜尋與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAccessRule" />，指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.MutexAccessRule)">
      <summary>搜尋與指定規則完全相符的存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜尋具有與指定之規則相同的使用者以及具有相容的繼承和傳用旗標的稽核控制規則。如果找到了相容的規則，則會移除指定之規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" />，其會指定要搜尋的使用者，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleAll(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜尋與所指定規則有相同使用者的所有稽核規則，找到以後將其移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.MutexAuditRule" />，指定要搜尋的使用者。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.MutexAuditRule)">
      <summary>搜尋與指定規則完全相符的稽核規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.MutexAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.ResetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>移除與指定規則具有相同使用者的所有存取控制規則 (不論 <see cref="T:System.Security.AccessControl.AccessControlType" /> 為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAccessRule(System.Security.AccessControl.MutexAccessRule)">
      <summary>移除與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.MutexAccessRule" />。 這個規則的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.MutexSecurity.SetAuditRule(System.Security.AccessControl.MutexAuditRule)">
      <summary>移除與指定規則具有相同使用者的所有稽核規則 (不論 <see cref="T:System.Security.AccessControl.AuditFlags" /> 值為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.MutexAuditRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRightType">
      <summary>取得 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 類別用來表示存取權限的列舉型別 (Enumeration)。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.MutexRights" /> 列舉型別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AccessRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 類別用來表示存取規則的型別。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.MutexAccessRule" /> 類別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.MutexSecurity.AuditRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 類別用來表示稽核規則的類型。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.MutexAuditRule" /> 類別。</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAccessRule">
      <summary>表示允許或拒絕使用者或群組的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 類別的新執行個體，指定套用此規則的使用者或群組名稱、存取權限，以及允許還是拒絕指定的存取權限。</summary>
      <param name="identity">套用這個規則的使用者或群組名稱。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，指定允許或拒絕的權限。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="type" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="identity" /> 是零長度字串  
  
-或- 
 <paramref name="identity" /> 的長度超過 512 個字元。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAccessRule.SemaphoreRights">
      <summary>取得存取規則所允許或拒絕的權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，表示存取規則所允許或拒絕的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreAuditRule">
      <summary>表示要針對使用者或群組稽核的一組存取權限。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
      <summary>初始化 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 類別的新執行個體，指定要稽核的使用者或群組、要稽核的權限，以及是要稽核成功、失敗或兩者皆稽核。</summary>
      <param name="identity">適用這項規則的使用者或群組。 必須是型別 <see cref="T:System.Security.Principal.SecurityIdentifier" />，或是像是可以轉換成型別 <see cref="T:System.Security.Principal.NTAccount" /> 的 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 的型別。</param>
      <param name="eventRights">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，指定要稽核的存取類型。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功、失敗或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="eventRights" /> 指定了無效的值。  
  
-或- 
 <paramref name="flags" /> 指定了無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="eventRights" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identity" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights">
      <summary>取得受稽核規則影響的存取權限。</summary>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，表示受稽核規則所影響的權限。</returns>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreRights">
      <summary>指定可套用至具名系統號誌 (Semaphore) 物件的存取控制 (Access Control) 權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions">
      <summary>變更與具名號誌相關聯之安全性和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Delete">
      <summary>刪除具名號誌的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.FullControl">
      <summary>對具名號誌執行完全控制以及修改其存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Modify">
      <summary>釋放具名號誌的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions">
      <summary>開啟並複製具名號誌之存取規則和稽核規則的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.Synchronize">
      <summary>等候具名號誌的權限。</summary>
    </member>
    <member name="F:System.Security.AccessControl.SemaphoreRights.TakeOwnership">
      <summary>變更具名號誌擁有人的權限。</summary>
    </member>
    <member name="T:System.Security.AccessControl.SemaphoreSecurity">
      <summary>表示具名號誌 (Semaphore) 的 Windows 存取控制安全性。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor">
      <summary>使用預設值，初始化 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 類別的新執行個體。</summary>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 上不支援這個類別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)">
      <summary>從具有指定名稱的系統號誌，使用指定的存取控制安全性規則區段，初始化 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 類別的新執行個體。</summary>
      <param name="name">要擷取其存取控制安全性規則的系統號誌名稱。</param>
      <param name="includeSections">
        <see cref="T:System.Security.AccessControl.AccessControlSections" /> 旗標的組合，指定要擷取的區段。</param>
      <exception cref="T:System.NotSupportedException">Windows 98 或 Windows Millennium Edition 上不支援這個類別。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>以指定的存取權限、存取控制和旗標，為指定的使用者建立新的存取控制規則。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，指定允許或拒絕的存取權限 (轉型成整數)。</param>
      <param name="isInherited">對於具名號誌沒有意義，因為它們沒有階層架構。</param>
      <param name="inheritanceFlags">對於具名號誌沒有意義，因為它們沒有階層架構。</param>
      <param name="propagationFlags">對於具名號誌沒有意義，因為它們沒有階層架構。</param>
      <param name="type">其中一個 <see cref="T:System.Security.AccessControl.AccessControlType" /> 值，指定允許還是拒絕權限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="type" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 物件，表示指定之使用者的指定權限。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜尋可合併新規則的相符規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的存取控制規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜尋可合併新規則的稽核規則。 如果找不到，就加入新規則。</summary>
      <param name="rule">要加入的稽核規則。 這個規則指定的使用者會決定搜尋方式。</param>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>以指定要套用規則的使用者的方式，建立新的稽核規則、要稽核的存取權限以及觸發該稽核規則的結果。</summary>
      <param name="identityReference">
        <see cref="T:System.Security.Principal.IdentityReference" />，可識別套用這個規則的使用者或群組。</param>
      <param name="accessMask">
        <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 值的位元組合，指定要稽核的存取權限 (轉型成整數)。</param>
      <param name="isInherited">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="inheritanceFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="propagationFlags">命名為等候控制代碼是沒有意義的，因為它們並未具有階層架構。</param>
      <param name="flags">
        <see cref="T:System.Security.AccessControl.AuditFlags" /> 值的位元組合，指定是否要稽核成功存取、失敗存取或兩者皆稽核。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="accessMask" />、<paramref name="inheritanceFlags" />、<paramref name="propagationFlags" /> 或 <paramref name="flags" /> 會指定無效的值。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identityReference" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="accessMask" /> 為零。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="identityReference" /> 既不是 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 型別，也不是可以轉換成 <see cref="T:System.Security.Principal.NTAccount" /> 型別的型別 (例如 <see cref="T:System.Security.Principal.SecurityIdentifier" />)。</exception>
      <returns>
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 物件，表示指定之使用者的指定稽核規則。 此方法的傳回型別為基底類別 <see cref="T:System.Security.AccessControl.AuditRule" />，但是傳回值可以安全地轉型為衍生類別。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜尋具有與指定之規則相同的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 以及具有相容的繼承和傳用旗標的存取控制規則。如果找到這樣的規則，則會移除指定之存取規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />，其會指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜尋與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />，指定要搜尋的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" />。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>搜尋與指定規則完全相符的存取控制規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜尋具有與指定之規則相同的使用者以及具有相容的繼承和傳用旗標的稽核控制規則。如果找到了相容的規則，則會移除指定之規則中所包含的權限。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />，其會指定要搜尋的使用者，以及必須與相符的規則 (如果找到的話) 相容的繼承和傳用旗標集合。 如果找到的話，指定從相容的規則中移除此權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
      <returns>如果找到相容的規則，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜尋與所指定規則有相同使用者的所有稽核規則，找到以後將其移除。</summary>
      <param name="rule">
        <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />，指定要搜尋的使用者。 忽略根據此規則指定的任何權限。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>搜尋與指定規則完全相符的稽核規則，如果找到的話，便加以移除。</summary>
      <param name="rule">要移除的 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>移除與指定規則具有相同使用者的所有存取控制規則 (不論 <see cref="T:System.Security.AccessControl.AccessControlType" /> 為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
      <summary>移除與指定規則具有相同使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> (允許或拒絕) 的所有存取控制規則，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" />。 這個規則的使用者和 <see cref="T:System.Security.AccessControl.AccessControlType" /> 會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
      <summary>移除與指定規則具有相同使用者的所有稽核規則 (不論 <see cref="T:System.Security.AccessControl.AuditFlags" /> 值為何)，然後加入指定規則。</summary>
      <param name="rule">要加入的 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />。 這個規則指定的使用者會決定在加入這項規則之前要移除的規則。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rule" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRightType">
      <summary>取得 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 類別用來表示存取權限的列舉型別 (Enumeration)。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.SemaphoreRights" /> 列舉型別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AccessRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 類別用來表示存取規則的型別。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.SemaphoreAccessRule" /> 類別。</returns>
    </member>
    <member name="P:System.Security.AccessControl.SemaphoreSecurity.AuditRuleType">
      <summary>取得 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 類別用來表示稽核規則的類型。</summary>
      <returns>
        <see cref="T:System.Type" /> 物件，表示 <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" /> 類別。</returns>
    </member>
    <member name="T:System.Threading.EventWaitHandleAcl">
      <summary>提供特定於 Windows 的擴充方法，可用來建立具有特定存取控制清單 (ACL) 安全性的 <see cref="T:System.Threading.EventWaitHandle" /> 物件。</summary>
    </member>
    <member name="M:System.Threading.EventWaitHandleAcl.Create(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>取得或建立 <see cref="T:System.Threading.EventWaitHandle" /> 執行個體，允許在建立事件期間選擇性地指定 <see cref="T:System.Security.AccessControl.EventWaitHandleSecurity" /> 執行個體以進行設定。</summary>
      <param name="initialState">如果已因此呼叫而建立具名事件，則為 <see langword="true" /> 以將初始狀態設定為收到訊號；否則為 <see langword="false" /> 以將其設定為未收到訊號。</param>
      <param name="mode">其中一個列舉值，其決定事件要自動或手動重設。</param>
      <param name="name">如果事件要與其他處理序共用，則為名稱；否則為 <see langword="null" /> 或空字串。</param>
      <param name="createdNew">當此方法傳回時，如果已建立本機事件，則此引數一律會設定為 <see langword="true" /> (意即當 <paramref name="name" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 時)。 如果 <paramref name="name" /> 具有非空白的有效值，則此引數會在建立系統事件時設定為 <see langword="true" />；如果找到具有該名稱的現有系統事件時，則會設定為 <see langword="false" />。</param>
      <param name="eventSecurity">要套用的選擇性 Windows 存取控制安全性。</param>
      <exception cref="T:System.ArgumentException">僅限 .NET Framework：<paramref name="name" /> 長度超過 MAX_PATH (260 個字元)。

-或-

僅限 .NET Framework：<paramref name="mode" /> 列舉值不在合法範圍內。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 列舉值不在合法範圍內。</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">找不到在 <paramref name="name" /> 中指定的部分路徑。</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">找不到具有所提供 <paramref name="name" /> 的全系統同步處理事件。
或無法建立具有全系統名稱 <paramref name="name" /> 的 <see cref="T:System.Threading.EventWaitHandle" />。 不同類型的 <see cref="T:System.Threading.EventWaitHandle" /> 可能具有相同名稱。</exception>
      <returns>表示所要求事件等候控制代碼的物件。</returns>
    </member>
    <member name="T:System.Threading.MutexAcl">
      <summary>提供特定於 Windows 的擴充方法，可用來建立具有特定存取控制清單 (ACL) 安全性的 <see cref="T:System.Threading.Mutex" /> 物件。</summary>
    </member>
    <member name="M:System.Threading.MutexAcl.Create(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
      <summary>取得或建立 <see cref="T:System.Threading.Mutex" /> 執行個體，允許在建立 Mutex 期間，選擇性地指定 <see cref="T:System.Security.AccessControl.MutexSecurity" /> 以進行設定。</summary>
      <param name="initiallyOwned">
        <see langword="true" /> 表示如果這個呼叫的結果建立了具名系統 Mutex，則將具名系統 Mutex 的初始擁有權授與呼叫執行緒，否則為 <see langword="false" />。</param>
      <param name="name">系統 Mutex 的選擇性名稱。 如果此引數設定為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />，則會建立本機 Mutex。</param>
      <param name="createdNew">當此方法傳回時，如果已建立本機 Mutex，則此引數一律會設定為 <see langword="true" /> (意即當 <paramref name="name" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 時)。 如果 <paramref name="name" /> 具有非空白的有效值，則此引數會在建立系統 Mutex 時設定為 <see langword="true" />；如果找到具有該名稱的現有系統 Mutex 時，則會設定為 <see langword="false" />。 這個參數會以未初始化的狀態傳遞。</param>
      <param name="mutexSecurity">要套用的選擇性 Mutex 存取控制安全性。</param>
      <exception cref="T:System.ArgumentException">僅限 .NET Framework：名稱的長度超過最大限制。</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">或無法建立具有全系統名稱 <paramref name="name" /> 的 Mutex 控制代碼。 不同類型的 Mutex 控制代碼可能具有相同名稱。</exception>
      <returns>若物件已命名，則代表系統 Mutex；若物件未命名，則代表本機 Mutex。</returns>
    </member>
    <member name="T:System.Threading.SemaphoreAcl">
      <summary>提供 Windows 特有的擴充方法，可用來建立具有特定存取控制清單 (ACL) 安全性的 <see cref="T:System.Threading.Semaphore" /> 物件。</summary>
    </member>
    <member name="M:System.Threading.SemaphoreAcl.Create(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>取得或建立 <see cref="T:System.Threading.Semaphore" /> 執行個體，允許在建立事件期間選擇性地指定 <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> 執行個體以進行設定。</summary>
      <param name="initialCount">可以同時滿足之號誌要求的初始數目。</param>
      <param name="maximumCount">可以同時滿足之號誌要求的最大數目。</param>
      <param name="name">用來建立系統旗號的選擇性引數。 設定為 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 以建立本機旗號。</param>
      <param name="createdNew">當此方法傳回時，如果已建立本機旗號，則此引數一律會設定為 <see langword="true" /> (意即當 <paramref name="name" /> 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" /> 時)。 如果 <paramref name="name" /> 具有非空白的有效值，則此引數會在建立系統旗號時設定為 <see langword="true" />；如果找到具有該名稱的現有系統旗號時，則會設定為 <see langword="false" />。 這個參數會以未初始化的狀態傳遞。</param>
      <param name="semaphoreSecurity">要套用的選擇性旗號存取控制安全性。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCount" /> 為負數。
-或-

<paramref name="maximumCount" /> 不是正數。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="initialCount" /> 大於 <paramref name="maximumCount" />。</exception>
      <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException">無法建立具有全系統名稱 '<paramref name="name" />' 的旗號控制代碼。 不同類型的旗號控制代碼可能具有相同名稱。</exception>
      <returns>若物件已命名，則代表系統旗號；若物件未命名，則代表本機旗號。</returns>
    </member>
    <member name="T:System.Threading.ThreadingAclExtensions">
      <summary>提供 Windows 特有的擴充方法來管理 <see cref="T:System.Threading.EventWaitHandle" />、<see cref="T:System.Threading.Mutex" />、<see cref="T:System.Threading.Semaphore" /> 的存取控制清單 (ACL) 安全性描述元。</summary>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.EventWaitHandle)">
      <summary>傳回所指定 <paramref name="handle" /> 的安全性描述元。</summary>
      <param name="handle">應從此事件等候控制代碼傳回安全性描述元。</param>
      <returns>所指定 <paramref name="handle" /> 的安全性描述元。</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Mutex)">
      <summary>傳回所指定 <paramref name="mutex" /> 的安全性描述元。</summary>
      <param name="mutex">應從此 mutex 傳回安全性描述元。</param>
      <returns>所指定 <paramref name="mutex" /> 的安全性描述元。</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.GetAccessControl(System.Threading.Semaphore)">
      <summary>傳回所指定 <paramref name="semaphore" /> 的安全性描述元。</summary>
      <param name="semaphore">應從此旗號傳回安全性描述元。</param>
      <returns>所指定旗號的安全性描述元。</returns>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.EventWaitHandle,System.Security.AccessControl.EventWaitHandleSecurity)">
      <summary>設定所指定事件等候控制代碼的安全性描述元。</summary>
      <param name="handle">將在此事件等候控制代碼上套用 <paramref name="eventSecurity" />。</param>
      <param name="eventSecurity">要套用至所指定 <paramref name="handle" /> 的安全性描述元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="eventSecurity" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Mutex,System.Security.AccessControl.MutexSecurity)">
      <summary>設定所指定 mutex 的安全性描述元。</summary>
      <param name="mutex">將在此 mutex 上套用 <paramref name="mutexSecurity" />。</param>
      <param name="mutexSecurity">要套用至所指定 <paramref name="mutex" /> 的安全性描述元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="mutexSecurity" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Threading.ThreadingAclExtensions.SetAccessControl(System.Threading.Semaphore,System.Security.AccessControl.SemaphoreSecurity)">
      <summary>設定所指定旗號的安全性描述元。</summary>
      <param name="semaphore">將在此旗號上套用 <paramref name="semaphoreSecurity" />。</param>
      <param name="semaphoreSecurity">要套用至所指定 <paramref name="semaphore" /> 的安全性描述元。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="semaphoreSecurity" /> 為 <see langword="null" />。</exception>
    </member>
  </members>
</doc>