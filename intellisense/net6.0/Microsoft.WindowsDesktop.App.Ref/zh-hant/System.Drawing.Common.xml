<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Common</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Bitmap">
      <summary>封裝 GDI+ 點陣圖，這個點陣圖是由圖形影像的像素資料及其屬性所組成。 <see cref="T:System.Drawing.Bitmap" /> 是用來處理像素資料所定義影像的物件。</summary>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)">
      <summary>從指定的現有影像初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="original">
        <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>從指定的現有影像 (已縮放至指定之大小)，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="original">
        <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="newSize">
        <see cref="T:System.Drawing.Size" /> 結構，表示新 <see cref="T:System.Drawing.Bitmap" /> 的大小。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>從指定的現有影像 (已縮放至指定之大小)，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="original">
        <see cref="T:System.Drawing.Image" />，用於建立新的 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)">
      <summary>使用指定的大小，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>使用指定的大小，並使用指定 <see cref="T:System.Drawing.Bitmap" /> 物件的解析度，初始化 <see cref="T:System.Drawing.Graphics" /> 類別的新執行個體。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
      <param name="g">設定新 <see cref="T:System.Drawing.Graphics" /> 解析度的 <see cref="T:System.Drawing.Bitmap" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
      <summary>使用指定的大小和格式，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
      <exception cref="T:System.ArgumentException">指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」** 開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)">
      <summary>使用指定的大小、像素格式和像素資料，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="width">新 <see cref="T:System.Drawing.Bitmap" /> 的寬度 (以像素為單位)。</param>
      <param name="height">新 <see cref="T:System.Drawing.Bitmap" /> 的高度 (以像素為單位)。</param>
      <param name="stride">整數，指定一條掃描線 (Scan Line) 的開頭和下一條之間的位元組位移 (Offset)。 這通常 (但不一定) 是像素格式的位元組數目 (例如，16 位元/像素為 2) 乘以點陣圖寬度。 傳遞給此參數之值必須為四的倍數。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
      <param name="scan0">包含像素資料之位元組陣列的指標。</param>
      <exception cref="T:System.ArgumentException">指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」** 開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)">
      <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="stream">用來載入影像的資料流。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 未含有影像資料或為 <see langword="null" />。  
  
-或- 
 <paramref name="stream" /> 含有一個 PNG 影像檔案，其中有一個維度超過 65,535 個像素。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)">
      <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="stream">用來載入影像的資料流。</param>
      <param name="useIcm">
        <see langword="true" /> 表示要對此 <see cref="T:System.Drawing.Bitmap" /> 進行色彩修正，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 未含有影像資料或為 <see langword="null" />。  
  
-或- 
 <paramref name="stream" /> 含有一個 PNG 影像檔案，其中有一個維度超過 65,535 個像素。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String)">
      <summary>從指定的檔案，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="filename">點陣圖檔名稱和路徑。</param>
      <exception cref="T:System.IO.FileNotFoundException">找不到指定的檔案。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)">
      <summary>從指定的檔案，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="filename">點陣圖檔的名稱。</param>
      <param name="useIcm">
        <see langword="true" /> 表示要對此 <see cref="T:System.Drawing.Bitmap" /> 進行色彩修正，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)">
      <summary>從指定的資源，初始化 <see cref="T:System.Drawing.Bitmap" /> 類別的新執行個體。</summary>
      <param name="type">用來擷取資源的類別。</param>
      <param name="resource">資源名稱。</param>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)">
      <summary>建立藉由 <see cref="T:System.Drawing.Bitmap" /> 結構和使用指定 <see cref="T:System.Drawing.Rectangle" /> 列舉型別定義的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 之區段複本。</summary>
      <param name="rect">定義要複製的這個 <see cref="T:System.Drawing.Bitmap" /> 的部分。 座標相對於這個 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="format">新 <see cref="T:System.Drawing.Bitmap" /> 的像素格式。 這必須指定以「格式」<c></c> 開頭的值。</param>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> 落在來源點陣圖的外框之外。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> 的高度或寬度為 0。  
  
-或- 
指定了 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，其名稱不是以「格式」** 開頭。 例如，指定 <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> 會導致 <see cref="T:System.ArgumentException" />，但 <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" /> 不會。</exception>
      <returns>這個方法建立的新 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)">
      <summary>建立使用指定 <see cref="T:System.Drawing.Bitmap" /> 定義的這個 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 之區段複本。</summary>
      <param name="rect">定義要複製的這個 <see cref="T:System.Drawing.Bitmap" /> 的部分。</param>
      <param name="format">指定目的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 的 <see cref="T:System.Drawing.Bitmap" /> 列舉。</param>
      <exception cref="T:System.OutOfMemoryException">
        <paramref name="rect" /> 落在來源點陣圖的外框之外。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rect" /> 的高度或寬度為 0。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)">
      <summary>從圖示的 Windows 控制代碼建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hicon">圖示的控制代碼。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)">
      <summary>從指定的 Windows 資源建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hinstance">含有資源之執行檔執行個體的控制代碼。</param>
      <param name="bitmapName">字串，包含資源點陣圖的名稱。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap">
      <summary>從這個 <see cref="T:System.Drawing.Bitmap" /> 建立 GDI 點陣圖物件。</summary>
      <exception cref="T:System.ArgumentException">點陣圖的寬度或高度大於 <see cref="F:System.Int16.MaxValue" />。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>這個方法所建立的 GDI 點陣圖物件的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)">
      <summary>從這個 <see cref="T:System.Drawing.Bitmap" /> 建立 GDI 點陣圖物件。</summary>
      <param name="background">
        <see cref="T:System.Drawing.Color" /> 結構，指定背景色彩。 如果點陣圖完全不透明，這個參數會被忽略。</param>
      <exception cref="T:System.ArgumentException">點陣圖的寬度或高度大於 <see cref="F:System.Int16.MaxValue" />。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>這個方法所建立的 GDI 點陣圖物件的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetHicon">
      <summary>傳回圖示的控制代碼。</summary>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>擁有與 <see cref="T:System.Drawing.Bitmap" /> 相同影像之圖示的 Windows 控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)">
      <summary>取得這個 <see cref="T:System.Drawing.Bitmap" /> 中指定像素的色彩。</summary>
      <param name="x">要擷取的像素 X 座標。</param>
      <param name="y">要擷取的像素 Y 座標。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="x" /> 小於零，或大於等於 <see cref="P:System.Drawing.Image.Width" />。  
  
-或- 
 <paramref name="y" /> 小於零，或大於等於 <see cref="P:System.Drawing.Image.Height" />。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，表示指定像素的色彩。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)">
      <summary>將 <see cref="T:System.Drawing.Bitmap" /> 鎖定在系統記憶體內。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定要鎖定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 列舉，指定 <see cref="T:System.Drawing.Bitmap" /> 的存取層級 (讀取/寫入)。</param>
      <param name="format">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列舉，指定這個 <see cref="T:System.Drawing.Bitmap" /> 的資料格式。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 並不是代表每一個像素含有幾個位元的有效值。  
  
-或- 
傳入點陣圖的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不正確。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>
        <see cref="T:System.Drawing.Imaging.BitmapData" />，包含這個鎖定作業的相關資訊。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)">
      <summary>將 <see cref="T:System.Drawing.Bitmap" /> 鎖定在系統記憶體內。</summary>
      <param name="rect">矩形結構，指定要鎖定的 <see cref="T:System.Drawing.Bitmap" /> 部分。</param>
      <param name="flags">一個 <see cref="T:System.Drawing.Imaging.ImageLockMode" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的存取層級 (讀取/寫入)。</param>
      <param name="format">一個 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 值，指定 <see cref="T:System.Drawing.Bitmap" /> 的資料格式。</param>
      <param name="bitmapData">
        <see cref="T:System.Drawing.Imaging.BitmapData" />，包含鎖定作業的相關資訊。</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 並不是代表每一個像素含有幾個位元的有效值。  
  
-或- 
傳入點陣圖的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 不正確。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
      <returns>
        <see cref="T:System.Drawing.Imaging.BitmapData" />，包含鎖定作業的相關資訊。</returns>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent">
      <summary>可讓這個 <see cref="T:System.Drawing.Bitmap" />的預設透明色彩為透明。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> 的影像格式為圖示格式。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)">
      <summary>將此 <see cref="T:System.Drawing.Bitmap" /> 的指定色彩變為透明。</summary>
      <param name="transparentColor">
        <see cref="T:System.Drawing.Color" /> 結構，表示要變為透明的色彩。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Drawing.Bitmap" /> 的影像格式為圖示格式。</exception>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)">
      <summary>設定此 <see cref="T:System.Drawing.Bitmap" /> 中指定之像素的色彩。</summary>
      <param name="x">要設定之像素的 X 座標。</param>
      <param name="y">要設定之像素的 Y 座標。</param>
      <param name="color">代表要指派給指定像素的 <see cref="T:System.Drawing.Color" /> 結構。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)">
      <summary>設定這個 <see cref="T:System.Drawing.Bitmap" /> 的解析度。</summary>
      <param name="xDpi">
        <see cref="T:System.Drawing.Bitmap" /> 的水平解析度 (單位為 DPI)。</param>
      <param name="yDpi">
        <see cref="T:System.Drawing.Bitmap" /> 的垂直解析度 (單位為 DPI)。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)">
      <summary>從系統記憶體解除鎖定這個 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="bitmapdata">
        <see cref="T:System.Drawing.Imaging.BitmapData" />，指定鎖定作業的相關資訊。</param>
      <exception cref="T:System.Exception">作業失敗。</exception>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute">
      <summary>指定，當解譯 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 宣告時，組件應該尋找相同組件中的指定資源，但是這個組件的宣告檔案名稱有附加 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 組態值。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSameAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute">
      <summary>指定，當解譯 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 宣告時，組件應該尋找附屬組件中的指定資源，但是這個組件的宣告檔案名稱有附加 <see cref="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix" /> 組態值。</summary>
    </member>
    <member name="M:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Drawing.Brush">
      <summary>定義用於填滿圖形形狀內部的物件，例如矩形、橢圓形、派形、多邊形和路徑。</summary>
    </member>
    <member name="M:System.Drawing.Brush.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Brush" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Clone">
      <summary>在衍生類別中覆寫時，建立這個 <see cref="T:System.Drawing.Brush" /> 的完全相同複本。</summary>
      <returns>這個方法建立的新 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="M:System.Drawing.Brush.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Brush" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Brush.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Drawing.Brush" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Drawing.Brush.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Brush.SetNativeBrush(System.IntPtr)">
      <summary>在衍生類別中，設定 GDI+ 筆刷物件的參考。</summary>
      <param name="brush">GDI+ 筆刷物件的指標。</param>
    </member>
    <member name="T:System.Drawing.Brushes">
      <summary>所有標準色彩的筆刷。 此類別無法獲得繼承。</summary>
    </member>
    <member name="P:System.Drawing.Brushes.AliceBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.AntiqueWhite">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aqua">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Aquamarine">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Azure">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Beige">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Bisque">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Black">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlanchedAlmond">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Blue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BlueViolet">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Brown">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.BurlyWood">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CadetBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chartreuse">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Chocolate">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Coral">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.CornflowerBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cornsilk">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Crimson">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Cyan">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkCyan">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGoldenrod">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkKhaki">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkMagenta">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOliveGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrange">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkOrchid">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkRed">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSalmon">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSeaGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkSlateGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkTurquoise">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DarkViolet">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepPink">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DeepSkyBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DimGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.DodgerBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Firebrick">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.FloralWhite">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.ForestGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Fuchsia">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gainsboro">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GhostWhite">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gold">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Goldenrod">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Gray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Green">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.GreenYellow">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Honeydew">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.HotPink">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.IndianRed">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Indigo">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Ivory">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Khaki">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lavender">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LavenderBlush">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LawnGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LemonChiffon">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCoral">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightCyan">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGoldenrodYellow">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightPink">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSalmon">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSeaGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSkyBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSlateGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightSteelBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LightYellow">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Lime">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.LimeGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Linen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Magenta">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Maroon">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumAquamarine">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumOrchid">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumPurple">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSeaGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSlateBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumSpringGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumTurquoise">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MediumVioletRed">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MidnightBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MintCream">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.MistyRose">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Moccasin">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.NavajoWhite">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Navy">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OldLace">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Olive">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OliveDrab">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orange">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.OrangeRed">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Orchid">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGoldenrod">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleTurquoise">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PaleVioletRed">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PapayaWhip">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PeachPuff">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Peru">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Pink">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Plum">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.PowderBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Purple">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Red">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RosyBrown">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.RoyalBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SaddleBrown">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Salmon">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SandyBrown">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SeaShell">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Sienna">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Silver">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SkyBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SlateGray">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Snow">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SpringGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.SteelBlue">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tan">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Teal">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Thistle">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Tomato">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Transparent">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Turquoise">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Violet">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Wheat">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.White">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.WhiteSmoke">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.Yellow">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Brushes.YellowGreen">
      <summary>取得系統定義的 <see cref="T:System.Drawing.Brush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Brush" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphics">
      <summary>提供雙重緩衝的圖形緩衝區。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Dispose">
      <summary>釋放由 <see cref="T:System.Drawing.BufferedGraphics" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render">
      <summary>將圖形緩衝區的內容寫入預設裝置。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
      <summary>將圖形緩衝區的內容寫入指定的 <see cref="T:System.Drawing.Graphics" /> 物件。</summary>
      <param name="target">要將圖形緩衝區的內容寫入的 <see cref="T:System.Drawing.Graphics" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
      <summary>將圖形緩衝區的內容寫入與指定 <see cref="T:System.IntPtr" /> 控制代碼關聯的裝置內容。</summary>
      <param name="targetDC">
        <see cref="T:System.IntPtr" />，指向要將圖形緩衝區的內容寫入的裝置內容。</param>
    </member>
    <member name="P:System.Drawing.BufferedGraphics.Graphics">
      <summary>取得 <see cref="T:System.Drawing.Graphics" /> 物件，該物件輸出至圖形緩衝區。</summary>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> 物件，該物件輸出至圖形緩衝區。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsContext">
      <summary>提供建立圖形緩衝區的方法，該緩衝區可用於雙重緩衝 (Double Buffering)。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>使用指定 <see cref="T:System.Drawing.Graphics" /> 的像素格式，建立指定大小的圖形緩衝區。</summary>
      <param name="targetGraphics">要與新緩衝區的像素格式相符之 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="targetRectangle">
        <see cref="T:System.Drawing.Rectangle" />，指出要建立的緩衝區大小。</param>
      <returns>
        <see cref="T:System.Drawing.BufferedGraphics" />，可用於繪製到指定維度的緩衝區。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)">
      <summary>使用指定 <see cref="T:System.Drawing.Graphics" /> 的像素格式，建立指定大小的圖形緩衝區。</summary>
      <param name="targetDC">一個指到裝置內容的 <see cref="T:System.IntPtr" />，要與新緩衝區的像素格式相符。</param>
      <param name="targetRectangle">
        <see cref="T:System.Drawing.Rectangle" />，指出要建立的緩衝區大小。</param>
      <returns>
        <see cref="T:System.Drawing.BufferedGraphics" />，可用於繪製到指定維度的緩衝區。</returns>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Dispose">
      <summary>釋放 <see cref="T:System.Drawing.BufferedGraphicsContext" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.BufferedGraphicsContext.Invalidate">
      <summary>處置目前的圖形緩衝區，如果已配置緩衝區但尚未處置的話。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer">
      <summary>取得或設定要使用之緩衝區的大小上限。</summary>
      <exception cref="T:System.ArgumentException">大小的高度或寬度小於或等於零。</exception>
      <returns>
        <see cref="T:System.Drawing.Size" /> 指出緩衝區維度的最大值。</returns>
    </member>
    <member name="T:System.Drawing.BufferedGraphicsManager">
      <summary>提供對應用程式定義域之主要緩衝圖形內容物件的存取。</summary>
    </member>
    <member name="P:System.Drawing.BufferedGraphicsManager.Current">
      <summary>取得目前應用程式定義域的 <see cref="T:System.Drawing.BufferedGraphicsContext" />。</summary>
      <returns>目前應用程式定義域的 <see cref="T:System.Drawing.BufferedGraphicsContext" />。</returns>
    </member>
    <member name="T:System.Drawing.CharacterRange">
      <summary>指定字串中的字元位置範圍。</summary>
    </member>
    <member name="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.CharacterRange" /> 結構的新執行個體，指定字串中的字元位置範圍。</summary>
      <param name="First">範圍中第一個字元的位置。 例如，如果 <paramref name="First" /> 是設定為 0，則範圍的第一個位置為字串中的位置 0。</param>
      <param name="Length">範圍中的位置數目。</param>
    </member>
    <member name="M:System.Drawing.CharacterRange.Equals(System.Object)">
      <summary>取得值，指出此物件是否相當於指定的物件。</summary>
      <param name="obj">要比較是否相等的物件。</param>
      <returns>
        <see langword="true" /> 表示指定的物件是與這個執行個體具有相同 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值的執行個體，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>32 位元帶正負號的整數，其為這個執行個體的雜湊碼。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>比較兩個 <see cref="T:System.Drawing.CharacterRange" /> 物件。 取得值，指出兩個 <see cref="P:System.Drawing.CharacterRange.First" /> 物件的 <see cref="P:System.Drawing.CharacterRange.Length" /> 和 <see cref="T:System.Drawing.CharacterRange" /> 值是否相等。</summary>
      <param name="cr1">比較是否相等的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <param name="cr2">比較是否相等的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <returns>
        <see langword="true" /> 表示兩個 <see cref="T:System.Drawing.CharacterRange" /> 物件具有相同的 <see cref="P:System.Drawing.CharacterRange.First" /> 和 <see cref="P:System.Drawing.CharacterRange.Length" /> 值，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)">
      <summary>比較兩個 <see cref="T:System.Drawing.CharacterRange" /> 物件。 取得值，指出兩個 <see cref="P:System.Drawing.CharacterRange.First" /> 物件的 <see cref="P:System.Drawing.CharacterRange.Length" /> 或 <see cref="T:System.Drawing.CharacterRange" /> 值是否不相等。</summary>
      <param name="cr1">要比較是否不相等的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <param name="cr2">要比較是否不相等的 <see cref="T:System.Drawing.CharacterRange" />。</param>
      <returns>
        <see langword="true" /> 表示兩個 <see cref="P:System.Drawing.CharacterRange.First" /> 物件的 <see cref="P:System.Drawing.CharacterRange.Length" /> 或 <see cref="T:System.Drawing.CharacterRange" /> 值不同，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.First">
      <summary>取得或設定這個 <see cref="T:System.Drawing.CharacterRange" /> 的第一個字元之字串中的位置。</summary>
      <returns>這個 <see cref="T:System.Drawing.CharacterRange" /> 的第一個位置。</returns>
    </member>
    <member name="P:System.Drawing.CharacterRange.Length">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.CharacterRange" /> 中的位置數目。</summary>
      <returns>
        <see cref="T:System.Drawing.CharacterRange" /> 中的位置數目。</returns>
    </member>
    <member name="T:System.Drawing.ContentAlignment">
      <summary>指定在繪圖表面上的內容對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomCenter">
      <summary>內容垂直靠下對齊，且水平置中對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomLeft">
      <summary>內容垂直靠下對齊，且水平靠左對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.BottomRight">
      <summary>內容垂直靠下對齊，且水平靠右對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleCenter">
      <summary>內容垂直居中對齊，且水平置中對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleLeft">
      <summary>內容垂直居中對齊，且水平靠左對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.MiddleRight">
      <summary>內容垂直居中對齊，且水平置中對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopCenter">
      <summary>內容垂直靠上對齊，且水平置中對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopLeft">
      <summary>內容垂直靠上對齊，且水平靠左對齊。</summary>
    </member>
    <member name="F:System.Drawing.ContentAlignment.TopRight">
      <summary>內容垂直靠上對齊，且水平靠右對齊。</summary>
    </member>
    <member name="T:System.Drawing.CopyPixelOperation">
      <summary>判斷在像素複製作業中來源色彩如何與目的色彩結合以產生最後的色彩。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Blackness">
      <summary>使用與實體調色盤中之索引 0 相關聯的色彩，來填充目的區域  (在預設實體調色盤中，此色彩為黑色)。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.CaptureBlt">
      <summary>位於您的視窗上層的視窗包括在結果影像中。 根據預設，該影像僅包含您的視窗。 請注意，這一般不能用於列印裝置内容。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.DestinationInvert">
      <summary>目的區域被逆轉。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergeCopy">
      <summary>透過使用布林 (Boolean) 的 <see langword="AND" /> 運算子，將來源區域的色彩與目的裝置内容的選取之筆刷的色彩合併。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.MergePaint">
      <summary>透過使用布林的 <see langword="OR" /> 運算子，將逆轉之來源區域的色彩與目的區域的色彩合併。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NoMirrorBitmap">
      <summary>點陣圖沒有被鏡像。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceCopy">
      <summary>逆轉的來源區域複製至目的端。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.NotSourceErase">
      <summary>透過使用布林的 <see langword="OR" /> 運算子，將來源和目的色彩合併，然後逆轉結果色彩。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatCopy">
      <summary>目前在目的裝置内容中選取的筆刷複製至目的點陣圖。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatInvert">
      <summary>透過使用布林的 <see langword="XOR" /> 運算子，將目前在目的裝置内容中選取之筆刷的色彩與目的的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.PatPaint">
      <summary>透過使用布林的 <see langword="OR" /> 運算子，將目前在目的裝置内容中選取之筆刷的色彩與逆轉之來源區域的色彩結合。 透過使用布林的 <see langword="OR" /> 運算子，將此作業的結果與目的區域的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceAnd">
      <summary>透過使用布林的 <see langword="AND" /> 運算子，將來源和目的區域的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceCopy">
      <summary>來源區域被直接複製至目的區域。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceErase">
      <summary>透過使用布林的 <see langword="AND" /> 運算子，將目的區域之逆轉的色彩與來源區域的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourceInvert">
      <summary>透過使用布林的 <see langword="XOR" /> 運算子，將來源和目的區域的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.SourcePaint">
      <summary>透過使用布林的 <see langword="OR" /> 運算子，將來源和目的區域的色彩結合。</summary>
    </member>
    <member name="F:System.Drawing.CopyPixelOperation.Whiteness">
      <summary>使用與實體調色盤中之索引 1 相關聯的色彩，來填充目的區域  (此色彩為預設實體調色盤的白色)。</summary>
    </member>
    <member name="T:System.Drawing.Design.CategoryNameCollection">
      <summary>代表類別名稱字串的集合。</summary>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.Drawing.Design.CategoryNameCollection)">
      <summary>使用指定的集合，初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 類別的新執行個體。</summary>
      <param name="value">
        <see cref="T:System.Drawing.Design.CategoryNameCollection" />，包含集合值所初始化的名稱。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.#ctor(System.String[])">
      <summary>使用指定的名稱陣列，初始化 <see cref="T:System.Drawing.Design.CategoryNameCollection" /> 類別的新執行個體。</summary>
      <param name="value">字串陣列，包含集合值所初始化的分類名稱。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.Contains(System.String)">
      <summary>指示指定的分類是否包含在集合中。</summary>
      <param name="value">要在集合中檢查的字串。</param>
      <returns>如果指定的分類包含在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>將集合元素複製到指定索引處的指定陣列。</summary>
      <param name="array">要複製到其中的陣列。</param>
      <param name="index">要開始進行複製的目的陣列索引。</param>
    </member>
    <member name="M:System.Drawing.Design.CategoryNameCollection.IndexOf(System.String)">
      <summary>取得指定值的索引。</summary>
      <param name="value">要在集合中擷取索引所屬的分類名稱。</param>
      <returns>集合中的索引；如果字串不存在於集合中，則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.Design.CategoryNameCollection.Item(System.Int32)">
      <summary>取得在指定索引處的分類名稱。</summary>
      <param name="index">要存取的集合元素的索引。</param>
      <returns>在指定索引處的分類名稱。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.AdjustableArrowCap">
      <summary>表示可調整的箭號形狀的線條端點。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single)">
      <summary>使用指定的寬度和高度，初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 類別的新執行個體。 使用這個建構函式 (Constructor) 建立的箭端永遠是填滿的。</summary>
      <param name="width">箭號的寬度。</param>
      <param name="height">箭號的高度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.AdjustableArrowCap.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>使用指定的寬度、高度和填色屬性，初始化 <see cref="T:System.Drawing.Drawing2D.AdjustableArrowCap" /> 類別的新執行個體。 是否填滿箭端取決於傳遞至 <paramref name="isFilled" /> 參數的引數。</summary>
      <param name="width">箭號的寬度。</param>
      <param name="height">箭號的高度。</param>
      <param name="isFilled">若要填滿箭端，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Filled">
      <summary>取得或設定箭端是否填滿。</summary>
      <returns>如果要填滿箭端，則這個屬性為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Height">
      <summary>取得或設定箭端的高度。</summary>
      <returns>箭端的高度。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.MiddleInset">
      <summary>取得或設定箭端外框和填色之間的單位數。</summary>
      <returns>箭端外框和箭端填色之間的單位數。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.AdjustableArrowCap.Width">
      <summary>取得或設定箭端的寬度。</summary>
      <returns>箭端的寬度 (以單位計算)。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.Blend">
      <summary>定義 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 物件的漸變圖樣。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)">
      <summary>使用指定數量的因數和位置，初始化 <see cref="T:System.Drawing.Drawing2D.Blend" /> 類別的新執行個體。</summary>
      <param name="count">
        <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> 和 <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> 陣列中的元素數目。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Factors">
      <summary>取得或設定漸層的漸變因數陣列。</summary>
      <returns>漸變因數的陣列，指定要在對應位置使用的開始色彩和結束色彩的百分比。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Blend.Positions">
      <summary>取得或設定漸層的漸變位置陣列。</summary>
      <returns>漸變位置的陣列，指定沿著漸層線的距離百分比。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.ColorBlend">
      <summary>定義用於多色漸層的變化色彩漸變之色彩和位置陣列。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)">
      <summary>使用指定數量的色彩和位置，初始化 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 類別的新執行個體。</summary>
      <param name="count">這個 <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> 中的色彩和位置數量。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Colors">
      <summary>取得或設定色彩的陣列，表示要在沿著漸層的對應位置使用的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構的陣列，表示要在沿著漸層的對應位置使用的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.ColorBlend.Positions">
      <summary>取得或設定沿著漸層線的位置。</summary>
      <returns>值的陣列，指定沿著漸層線的距離百分比。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.CombineMode">
      <summary>指定不同裁剪區域的組合方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Complement">
      <summary>指定現有區域由從新區域中移除的現有區域結果取代。 換句話說，現有區域會從新區域排除。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Exclude">
      <summary>指定現有區域由從現有區域中移除的新區域結果取代。 換句話說，新區域會從現有區域排除。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Intersect">
      <summary>藉由取得兩個裁剪區域的交集來組合它們。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Replace">
      <summary>一個裁剪區域會由另一個取代。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Union">
      <summary>藉由取得兩個裁剪區域的聯集來組合它們。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CombineMode.Xor">
      <summary>藉由只取得由兩個裁剪區域的其中一個 (而不是兩個) 所包圍的區域來組合兩個裁剪區域。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingMode">
      <summary>指定來源色彩如何與背景色彩組合。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceCopy">
      <summary>指定當呈現色彩時，它會覆寫背景色彩。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingMode.SourceOver">
      <summary>指定當呈現色彩時，它會和背景色彩漸變。 漸變由要呈現的色彩之 Alpha 元件決定。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CompositingQuality">
      <summary>指定要在合成期間使用的品質等級。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.AssumeLinear">
      <summary>假設線形值。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Default">
      <summary>預設品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.GammaCorrected">
      <summary>使用伽瑪值修正。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighQuality">
      <summary>高品質、低速度的合成。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.HighSpeed">
      <summary>高速度、低品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CompositingQuality.Invalid">
      <summary>無效的品質。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CoordinateSpace">
      <summary>指定估算座標時所使用的系統。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Device">
      <summary>指定座標位在設備座標內容中。 在電腦畫面上，設備座標通常以像素為單位來測量。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.Page">
      <summary>指定座標位在畫面座標內容中。 它們的單位由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 屬性定義，並且必須是 <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的其中一個項目。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.CoordinateSpace.World">
      <summary>指定座標位在全局座標內容中。 全局座標用在非實體環境中，例如模型環境。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.CustomLineCap">
      <summary>封裝自訂的使用者定義線條端點。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的外框和填滿，初始化 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 類別的新執行個體。</summary>
      <param name="fillPath">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <param name="strokePath">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
      <summary>使用指定的外框和填滿，從指定的現有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 類別的新執行個體。</summary>
      <param name="fillPath">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <param name="strokePath">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <param name="baseCap">要建立自訂帽緣的來源直線帽緣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
      <summary>使用指定的外框、填滿和內凹，從指定的現有 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別初始化 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 類別的新執行個體。</summary>
      <param name="fillPath">定義自訂端點填滿的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <param name="strokePath">定義自訂端點外框的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <param name="baseCap">要建立自訂帽緣的來源直線帽緣。</param>
      <param name="baseInset">端點和線條之間的距離。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
      <summary>在記憶體回收 (GC) 回收 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 前，允許 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
      <summary>取得用來起始和結束組成這個自訂端點線條的端點。</summary>
      <param name="startCap">用於這個端點中線條開端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</param>
      <param name="endCap">用於這個端點中線條末端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
      <summary>設定用來起始和結束組成這個自訂端點線條的端點。</summary>
      <param name="startCap">用於這個端點中線條開端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</param>
      <param name="endCap">用於這個端點中線條末端的 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 所根據的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineCap" /> 列舉型別，這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 所根據的。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
      <summary>取得或設定端點和線條之間的距離。</summary>
      <returns>端點開端和線條末端之間的距離。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
      <summary>取得或設定判斷組成這個 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 物件的線條如何聯結 (Join) 的 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 列舉型別。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 列舉型別，被這個 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件用來聯結線條。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
      <summary>取得或設定縮放與 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 物件寬度相關的這個 <see cref="T:System.Drawing.Pen" /> 類別物件的數量。</summary>
      <returns>要縮放端點的數量。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashCap">
      <summary>指定要在短折線的每個破折號兩端使用的圖形形狀類型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Flat">
      <summary>指定使每個破折號兩端變成方形的方形端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Round">
      <summary>指定使每個破折號兩端變成圓形的圓形端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashCap.Triangle">
      <summary>指定使每個破折號兩端變成尖角的三角形端點。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.DashStyle">
      <summary>指定使用 <see cref="T:System.Drawing.Pen" /> 物件繪製的虛線樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Custom">
      <summary>指定使用者定義的自訂虛線樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dash">
      <summary>指定含有虛線的線條。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDot">
      <summary>指定含有「虛線-點」之重複花紋的線條。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.DashDotDot">
      <summary>指定含有「虛線-點-點」之重複花紋的線條。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Dot">
      <summary>指定含有點的線條。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.DashStyle.Solid">
      <summary>指定實線。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FillMode">
      <summary>指定如何填滿關閉路徑的內部。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Alternate">
      <summary>指定替代的填滿模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FillMode.Winding">
      <summary>指定捲曲的填滿模式。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.FlushIntention">
      <summary>指定是否立即結束 (清除) 或儘快執行在圖形堆疊中的命令。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Flush">
      <summary>指定立即清除所有圖形作業的堆疊。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.FlushIntention.Sync">
      <summary>指定儘快執行在堆疊上的所有圖形作業。 這會同步圖形狀態。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsContainer">
      <summary>表示圖形容器 (Container) 的內部資料。 當使用 <see cref="T:System.Drawing.Graphics" /> 和 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法儲存 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" /> 物件的狀態時，會使用這個類別。 此類別無法獲得繼承。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPath">
      <summary>表示一系列連接的直線和曲線。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor">
      <summary>使用 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> 值，初始化 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 列舉型別，初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 類別的新執行個體。</summary>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別，決定如何填滿這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的內部。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 陣列，初始化 <see cref="T:System.Drawing.Point" /> 類別的新執行個體。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，定義構成這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的點座標。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列舉型別元素的陣列，指定 <paramref name="pts" /> 陣列中每一對應點的型別。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 陣列以及指定的 <see cref="T:System.Drawing.Point" /> 列舉型別項目，初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 類別的新執行個體。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，定義構成這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的點座標。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列舉型別元素的陣列，指定 <paramref name="pts" /> 陣列中每一對應點的型別。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別，指定如何填滿這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形狀內部。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 陣列，初始化 <see cref="T:System.Drawing.PointF" /> 陣列的新執行個體。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義構成這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的點座標。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列舉型別元素的陣列，指定 <paramref name="pts" /> 陣列中每一對應點的型別。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 陣列以及指定的 <see cref="T:System.Drawing.PointF" /> 列舉型別項目，初始化 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 陣列的新執行個體。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義構成這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的點座標。</param>
      <param name="types">
        <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列舉型別元素的陣列，指定 <paramref name="pts" /> 陣列中每一對應點的型別。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別，指定如何填滿這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形狀內部。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>將橢圓弧形附加到目前的圖形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，表示用來取得弧形之橢圓形的矩形界限。</param>
      <param name="startAngle">弧形的開始點角度，順時針自 X 軸所測得的度數。</param>
      <param name="sweepAngle">介於弧形的 <paramref name="startAngle" /> 和結束點的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>將橢圓弧形附加到目前的圖形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />，表示用來取得弧形之橢圓形的矩形界限。</param>
      <param name="startAngle">弧形的開始點角度，順時針自 X 軸所測得的度數。</param>
      <param name="sweepAngle">介於弧形的 <paramref name="startAngle" /> 和結束點的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>將橢圓弧形附加到目前的圖形。</summary>
      <param name="x">矩形區域左上角的 X 軸座標，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="y">矩形區域左上角的 Y 軸座標，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="width">矩形區域的寬度，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="height">矩形區域的高度，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="startAngle">弧形的開始點角度，順時針自 X 軸所測得的度數。</param>
      <param name="sweepAngle">介於弧形的 <paramref name="startAngle" /> 和結束點的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>將橢圓弧形附加到目前的圖形。</summary>
      <param name="x">矩形區域左上角的 X 軸座標，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="y">矩形區域左上角的 Y 軸座標，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="width">矩形區域的寬度，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="height">矩形區域的高度，這個矩形區域定義用來繪製弧形的橢圓形。</param>
      <param name="startAngle">弧形的開始點角度，順時針自 X 軸所測得的度數。</param>
      <param name="sweepAngle">介於弧形的 <paramref name="startAngle" /> 和結束點的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>將立方貝茲曲線加入至目前圖形。</summary>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" />，表示曲線的起點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" />，表示曲線的第一個控制點。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" />，表示曲線的第二個控制點。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" />，表示曲線的端點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>將立方貝茲曲線加入至目前圖形。</summary>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" />，表示曲線的起點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" />，表示曲線的第一個控制點。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.PointF" />，表示曲線的第二個控制點。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.PointF" />，表示曲線的端點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>將立方貝茲曲線加入至目前圖形。</summary>
      <param name="x1">曲線開始點的 X 軸座標。</param>
      <param name="y1">曲線開始點的 Y 軸座標。</param>
      <param name="x2">曲線第一個控制點的 X 軸座標。</param>
      <param name="y2">曲線第一個控制點的 Y 軸座標。</param>
      <param name="x3">曲線第二個控制點的 X 軸座標。</param>
      <param name="y3">曲線第二個控制點的 Y 軸座標。</param>
      <param name="x4">曲線結束點的 X 軸座標。</param>
      <param name="y4">曲線結束點的 Y 軸座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>將立方貝茲曲線加入至目前圖形。</summary>
      <param name="x1">曲線開始點的 X 軸座標。</param>
      <param name="y1">曲線開始點的 Y 軸座標。</param>
      <param name="x2">曲線第一個控制點的 X 軸座標。</param>
      <param name="y2">曲線第一個控制點的 Y 軸座標。</param>
      <param name="x3">曲線第二個控制點的 X 軸座標。</param>
      <param name="y3">曲線第二個控制點的 Y 軸座標。</param>
      <param name="x4">曲線結束點的 X 軸座標。</param>
      <param name="y4">曲線結束點的 Y 軸座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])">
      <summary>將連接的三次方貝茲曲線序列加入至目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])">
      <summary>將連接的三次方貝茲曲線序列加入至目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])">
      <summary>將關閉曲線加入這個路徑。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)">
      <summary>將關閉曲線加入這個路徑。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="tension">從 0 到 1 之間的值，這個值會指定曲線在各點之間彎曲的量，其中 0 表示最小的曲線 (最銳利的角)，而 1 表示最平滑的曲線。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])">
      <summary>將關閉曲線加入這個路徑。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)">
      <summary>將關閉曲線加入這個路徑。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="tension">從 0 到 1 之間的值，這個值會指定曲線在各點之間彎曲的量，其中 0 表示最小的曲線 (最銳利的角)，而 1 表示最平滑的曲線。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])">
      <summary>將曲線加入目前的圖形。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>將曲線加入目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="offset">
        <paramref name="points" /> 陣列中元素的索引，做為曲線中的第一個點。</param>
      <param name="numberOfSegments">值，指定曲線在控制點之間彎曲的數量。 大於 1 的值會產生無法預期的結果。</param>
      <param name="tension">值，指定曲線在控制點之間彎曲的數量。 大於 1 的值會產生無法預期的結果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)">
      <summary>將曲線加入目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="tension">值，指定曲線在控制點之間彎曲的數量。 大於 1 的值會產生無法預期的結果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])">
      <summary>將曲線加入目前的圖形。 主要曲線會被使用，因為該曲線會經過陣列中的每一個點。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>將曲線加入目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="offset">
        <paramref name="points" /> 陣列中元素的索引，做為曲線中的第一個點。</param>
      <param name="numberOfSegments">用來繪製曲線的線段數。 線段可以視為連接兩點的直線。</param>
      <param name="tension">值，指定曲線在控制點之間彎曲的數量。 大於 1 的值會產生無法預期的結果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)">
      <summary>將曲線加入目前的圖形。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義曲線的點。</param>
      <param name="tension">值，指定曲線在控制點之間彎曲的數量。 大於 1 的值會產生無法預期的結果。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)">
      <summary>將橢圓形加入目前的路徑。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，表示定義橢圓形的週框 (Bounding Rectangle)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)">
      <summary>將橢圓形加入目前的路徑。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />，表示定義橢圓形的週框 (Bounding Rectangle)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>將橢圓形加入目前的路徑。</summary>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)">
      <summary>將橢圓形加入目前的路徑。</summary>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)">
      <summary>將線段附加至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" />，表示直線的起點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" />，表示直線的端點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
      <summary>將線段附加至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" />，表示直線的起點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" />，表示直線的端點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>將直線線段附加到目前的圖形。</summary>
      <param name="x1">直線開始點的 X 軸座標。</param>
      <param name="y1">直線開始點的 Y 軸座標。</param>
      <param name="x2">直線結束點的 X 軸座標。</param>
      <param name="y2">直線結束點的 Y 軸座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)">
      <summary>將線段附加至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="x1">直線開始點的 X 軸座標。</param>
      <param name="y1">直線開始點的 Y 軸座標。</param>
      <param name="x2">直線結束點的 X 軸座標。</param>
      <param name="y2">直線結束點的 Y 軸座標。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])">
      <summary>將一系列連接的線段附加至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的結尾。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示定義要加入的直線線段的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])">
      <summary>將一系列連接的線段附加至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的結尾。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示定義要加入的直線線段的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>將指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 附加至這個路徑。</summary>
      <param name="addingPath">要加入的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="connect">布林 (Boolean) 值，指定加入的路徑中第一個圖形是否為這個路徑中最後圖形的一部分。 <see langword="true" /> 值會指定 (如果可能) 加入的路徑中第一個圖形是這個路徑最後圖形的一部分。 <see langword="false" /> 值會指定加入的路徑中第一個圖形和這個路徑中最後一個圖形是分開的。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>將派形的外框加入這個路徑。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，表示定義繪製派形之橢圓形的週框。</param>
      <param name="startAngle">派形區段的開始角度，以度數為單位從 X 軸順時針測量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和派形區段末端之間的角度，以度數為單位從 <paramref name="startAngle" /> 順時針測量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
      <summary>將派形的外框加入這個路徑。</summary>
      <param name="x">週框左上角的 X 軸座標，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="height">週框的高度，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="startAngle">派形區段的開始角度，以度數為單位從 X 軸順時針測量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和派形區段末端之間的角度，以度數為單位從 <paramref name="startAngle" /> 順時針測量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>將派形的外框加入這個路徑。</summary>
      <param name="x">週框左上角的 X 軸座標，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="height">週框的高度，這個週框定義用來繪製派形的橢圓形。</param>
      <param name="startAngle">派形區段的開始角度，以度數為單位從 X 軸順時針測量。</param>
      <param name="sweepAngle">
        <paramref name="startAngle" /> 和派形區段末端之間的角度，以度數為單位從 <paramref name="startAngle" /> 順時針測量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])">
      <summary>將多邊形加入至這個路徑。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，定義要加入的多邊形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])">
      <summary>將多邊形加入至這個路徑。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義要加入的多邊形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)">
      <summary>將矩形加入至這個路徑。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，表示要加入的方框。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)">
      <summary>將矩形加入至這個路徑。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" />，表示要加入的方框。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])">
      <summary>將一系列的矩形加入至這個路徑。</summary>
      <param name="rects">
        <see cref="T:System.Drawing.Rectangle" /> 結構的陣列，表示要加入的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])">
      <summary>將一系列的矩形加入至這個路徑。</summary>
      <param name="rects">
        <see cref="T:System.Drawing.RectangleF" /> 結構的陣列，表示要加入的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)">
      <summary>將文字字串加入這個路徑。</summary>
      <param name="s">要加入的 <see cref="T:System.String" />。</param>
      <param name="family">
        <see cref="T:System.Drawing.FontFamily" />，表示用來描繪測試的字型名稱。</param>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" /> 列舉型別，表示文字的樣式資訊 (粗體、斜體等等)。 這必須轉型為整數 (請參閱這個章節後面的程式碼範例)。</param>
      <param name="emSize">限制字元的 Em 方形的高度。</param>
      <param name="origin">
        <see cref="T:System.Drawing.Point" />，這表示文字開始的所在點。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定文字格式資訊，例如行的間距和對齊方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>將文字字串加入這個路徑。</summary>
      <param name="s">要加入的 <see cref="T:System.String" />。</param>
      <param name="family">
        <see cref="T:System.Drawing.FontFamily" />，表示用來描繪測試的字型名稱。</param>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" /> 列舉型別，表示文字的樣式資訊 (粗體、斜體等等)。 這必須轉型為整數 (請參閱這個章節後面的程式碼範例)。</param>
      <param name="emSize">限制字元的 Em 方形的高度。</param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" />，這表示文字開始的所在點。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定文字格式資訊，例如行的間距和對齊方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)">
      <summary>將文字字串加入這個路徑。</summary>
      <param name="s">要加入的 <see cref="T:System.String" />。</param>
      <param name="family">
        <see cref="T:System.Drawing.FontFamily" />，表示用來描繪測試的字型名稱。</param>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" /> 列舉型別，表示文字的樣式資訊 (粗體、斜體等等)。 這必須轉型為整數 (請參閱這個章節後面的程式碼範例)。</param>
      <param name="emSize">限制字元的 Em 方形的高度。</param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定文字界限的矩形。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定文字格式資訊，例如行的間距和對齊方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>將文字字串加入這個路徑。</summary>
      <param name="s">要加入的 <see cref="T:System.String" />。</param>
      <param name="family">
        <see cref="T:System.Drawing.FontFamily" />，表示用來描繪測試的字型名稱。</param>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" /> 列舉型別，表示文字的樣式資訊 (粗體、斜體等等)。 這必須轉型為整數 (請參閱這個章節後面的程式碼範例)。</param>
      <param name="emSize">限制字元的 Em 方形的高度。</param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定文字界限的矩形。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定文字格式資訊，例如行的間距和對齊方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers">
      <summary>從這個路徑清除所有的資料標記。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Clone">
      <summary>建立這個路徑的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures">
      <summary>關閉在這個路徑中的所有開放的圖形，並開始新的圖形。 它會藉由連接從其開始點至其結束點的直線來關閉每個開放的圖形。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure">
      <summary>關閉目前的圖形，並開始新的圖形。 如果目前的圖形含有連接的直線和曲線序列，則該方法會藉由連接從結束點至開始點的直線來關閉迴圈。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>將這個路徑中的每條曲線轉型為連接的直線線段序列。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)">
      <summary>套用指定的轉換，然後將這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的每條曲線轉換為連接的直線線段序列。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，用來在簡維前轉換這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的每條曲線轉換為連接的直線線段序列。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，用來在簡維前轉換這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="flatness">指定曲線和它的扁平大約值之間的最大允許錯誤。 值 0.25 是預設值。 降低扁平值將增加大約值中的直線線段數。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>傳回限定這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 之界限的矩形。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示限定這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 之界限的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)">
      <summary>當這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 路徑由指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 轉換時，會傳回限定這個路徑之界限的矩形。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在計算週框前要套用至這個路徑的轉換。 這個路徑不是永久地轉換；該轉換只會用在計算週框期間。</param>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示限定這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 之界限的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)">
      <summary>當目前路徑由指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 轉換，並使用指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 繪製時，會傳回限定這個 <see cref="T:System.Drawing.Pen" /> 之界限的矩形。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定在計算週框前要套用至這個路徑的轉換。 這個路徑不是永久地轉換；該轉換只會用在計算週框期間。</param>
      <param name="pen">用來繪製 <see cref="T:System.Drawing.Pen" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示限定這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 之界限的矩形。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint">
      <summary>取得這個 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 陣列中的最後一點。</summary>
      <returns>
        <see cref="T:System.Drawing.PointF" />，表示這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的最後一點。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內 (下面)。</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" />，指定要測試的位置。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果指定的點包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內，則這個方法會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和指定的 <see cref="T:System.Drawing.Pen" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的外框內 (下面)。</summary>
      <param name="pt">
        <see cref="T:System.Drawing.Point" />，指定要測試的位置。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果這個 <see cref="T:System.Drawing.Pen" /> 的外框內包含指定的點，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內 (下面)。</summary>
      <param name="point">
        <see cref="T:System.Drawing.PointF" />，指定要測試的位置。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果指定的點包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內，則這個方法會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和指定的 <see cref="T:System.Drawing.Pen" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的外框內 (下面)。</summary>
      <param name="pt">
        <see cref="T:System.Drawing.PointF" />，指定要測試的位置。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果這個 <see cref="T:System.Drawing.Pen" /> 的外框之內 (或之下) 包含指定的點，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內 (下面)。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果指定的點包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內，則這個方法會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和指定的 <see cref="T:System.Drawing.Pen" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的外框內 (下面)。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果這個 <see cref="T:System.Drawing.Pen" /> 的外框內包含指定的點，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內 (下面)。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果指定的點包含在這個 <see cref="T:System.Drawing.Pen" /> 的外框內，則這個方法會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)">
      <summary>指出當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 和指定的 <see cref="T:System.Drawing.Pen" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的外框內 (下面)。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="pen">要測試的 <see cref="T:System.Drawing.Pen" />。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>當使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 繪製時，如果這個 <see cref="T:System.Drawing.Pen" /> 的外框之內 (或之下) 包含指定的點，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="point">
        <see cref="T:System.Drawing.Point" />，表示要測試的點。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="pt">
        <see cref="T:System.Drawing.Point" />，表示要測試的點。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="point">
        <see cref="T:System.Drawing.PointF" />，表示要測試的點。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="pt">
        <see cref="T:System.Drawing.PointF" />，表示要測試的點。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定的點包含在這個物件中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，指示這個 <see cref="T:System.Drawing.Graphics" /> 內是否包含指定的點。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>指出指定的點是否包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 內。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>指示指定的點是否包含在指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 之可見裁剪區域中的這個 <see cref="T:System.Drawing.Graphics" /> 內。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="graphics">用以測試可視性的 <see cref="T:System.Drawing.Graphics" />。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reset">
      <summary>清除 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 和 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 陣列，並將 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 設定為 <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Reverse">
      <summary>反轉這個 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 陣列中點的順序。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers">
      <summary>在這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 上設定資料標記。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure">
      <summary>不關閉目前的圖形而開始新圖形。 所有後續加入至路徑的點會加入至這個新圖形。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>將轉換矩陣套用至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，表示要套用的轉換。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)">
      <summary>將由矩形和平行四邊形所定義的彎曲轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="destPoints">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義由 <paramref name="srcRect" /> 所定義之矩形轉換成的平行四邊形。 該陣列可包含三或四個元素。 如果陣列包含三個元素，平行四邊形的右下角必定包含在前三點中。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" />，表示轉換為由 <paramref name="destPoints" /> 所定義之平行四邊形的矩形。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)">
      <summary>將由矩形和平行四邊形所定義的彎曲轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="destPoints">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義由 <paramref name="srcRect" /> 所定義之矩形轉換成的平行四邊形。 該陣列可包含三或四個元素。 如果陣列包含三個元素，平行四邊形的右下角必定包含在前三點中。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" />，表示轉換為由 <paramref name="destPoints" /> 所定義之平行四邊形的矩形。</param>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定要套用至路徑的幾何轉換。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)">
      <summary>將由矩形和平行四邊形所定義的彎曲轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="destPoints">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義由 <paramref name="srcRect" /> 所定義之矩形轉換成的平行四邊形。 該陣列可包含三或四個元素。 如果陣列包含三個元素，平行四邊形的右下角必定包含在前三點中。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" />，表示轉換為由 <paramref name="destPoints" /> 所定義之平行四邊形的矩形。</param>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定要套用至路徑的幾何轉換。</param>
      <param name="warpMode">
        <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 列舉型別，這個列舉型別指定這個彎曲作業是否使用透視點或雙線形模式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)">
      <summary>將由矩形和平行四邊形所定義的彎曲轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="destPoints">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，定義由 <paramref name="srcRect" /> 所定義之矩形轉換成的平行四邊形。 該陣列可包含三或四個元素。 如果陣列包含三個元素，平行四邊形的右下角必定包含在前三點中。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" />，表示轉換為由 <paramref name="destPoints" /> 所定義之平行四邊形的矩形。</param>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定要套用至路徑的幾何轉換。</param>
      <param name="warpMode">
        <see cref="T:System.Drawing.Drawing2D.WarpMode" /> 列舉型別，這個列舉型別指定這個彎曲作業是否使用透視點或雙線形模式。</param>
      <param name="flatness">從 0 到 1 的值，這個值指定產生的路徑的扁平度。 如需詳細資訊，請參閱 <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> 方法。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)">
      <summary>將額外的外框加入至路徑。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，指定在路徑的原始外框和這個方法建立之新外框間的寬度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)">
      <summary>將額外的外框加入至 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，指定在路徑的原始外框和這個方法建立之新外框間的寬度。</param>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定要在加寬前套用至路徑的轉換。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 取代為封閉在指定的畫筆繪製這個路徑時所填滿之區域的曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，指定在路徑的原始外框和這個方法建立之新外框間的寬度。</param>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，指定要在加寬前套用至路徑的轉換。</param>
      <param name="flatness">指定曲線扁平度的值。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.FillMode">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別，此列舉型別決定如何填滿這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中形狀的內部。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別，指定如何填滿這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中的形狀內部。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathData">
      <summary>取得 <see cref="T:System.Drawing.Drawing2D.PathData" />，它為這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 封裝點 (<paramref name="points" />) 和型別 (<paramref name="types" />) 的陣列。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PathData" />，為這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 封裝點和型別的陣列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints">
      <summary>取得路徑中的點。</summary>
      <returns>表示路徑的 <see cref="T:System.Drawing.PointF" /> 物件陣列。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes">
      <summary>取得 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 陣列中對應點的型別。</summary>
      <returns>位元組的陣列，指定路徑中相對應點的型別。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPath.PointCount">
      <summary>取得 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 陣列中的元素數。</summary>
      <returns>整數，指定在 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 或 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 陣列中的元素數。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsPathIterator">
      <summary>提供在 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 中逐一查看子路徑，並測試每個子路徑中含有之形狀類型的功能。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 物件，初始化 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 類別的新執行個體。</summary>
      <param name="path">用來初始化這個 Helper 類別的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
      <summary>將關聯的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 之 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 屬性和 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 屬性陣列複製至這兩個指定的陣列。</summary>
      <param name="points">在傳回時，含有 <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示路徑中的點。</param>
      <param name="types">在傳回時，含有位元組陣列，這個陣列表示路徑中的點型別。</param>
      <param name="startIndex">指定陣列的開始索引。</param>
      <param name="endIndex">指定陣列的結束索引。</param>
      <returns>複製的點數。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
      <summary>將關聯的 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> 之 <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> 屬性和 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 屬性陣列複製至這兩個指定的陣列。</summary>
      <param name="points">在傳回時，含有 <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示路徑中的點。</param>
      <param name="types">在傳回時，含有位元組陣列，這個陣列表示路徑中的點型別。</param>
      <returns>複製的點數。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
      <summary>指示與這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 關聯的路徑是否含有曲線。</summary>
      <returns>如果目前的子路徑含有曲線，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 具有與其相關聯的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。 <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> 方法會將關聯的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 遞增至其路徑中的下一個資料標記，並將目前資料標記和下一個資料標記 (或路徑端點) 之間包含的所有點複製至傳入至參數的第二個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</summary>
      <param name="path">點複製至的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件。</param>
      <returns>在這個資料標記和下一個資料標記之間的點數。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
      <summary>將 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 遞增至路徑中的下一個資料標記，並經由 [out] 參數傳回開始和停止索引。</summary>
      <param name="startIndex">[out] 提供給這個參數的整數參考會接收開始子路徑的點索引。</param>
      <param name="endIndex">[out] 提供給這個參數的整數參考會接收結束 <paramref name="startIndex" /> 所指向的子路徑之點索引。</param>
      <returns>在這個資料標記和下一個資料標記之間的點數。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
      <summary>取得具有相同型別之資料點的下一個群組之開始索引和結束索引。</summary>
      <param name="pathType">[out] 接收由群組中所有點共用的點類型。 可能的類型可從 <see cref="T:System.Drawing.Drawing2D.PathPointType" /> 列舉型別 (Enumeration) 擷取。</param>
      <param name="startIndex">[out] 接收點群組的開始索引。</param>
      <param name="endIndex">[out] 接收點群組的結束索引。</param>
      <returns>這個方法會傳回群組中的資料點數。 如果路徑中沒有其他的群組，則這個方法會傳回 0。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
      <summary>從這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 的相關路徑取得下一個圖形 (子路徑)。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，將設定其資料點以符合這個 Iterator 之所擷取圖形 (子路徑) 的資料點。</param>
      <param name="isClosed">[out] 指示目前的子路徑是否關閉。 如果圖形是關閉的，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <returns>擷取的圖形 (子路徑) 中的資料點數。 如果沒有其他要擷取的圖形，則傳回零。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
      <summary>將 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 移至路徑中的下一個子路徑。 下一個子路徑的開始索引和結束索引包含在 [out] 參數中。</summary>
      <param name="startIndex">[out] 接收下一個子路徑的開始索引。</param>
      <param name="endIndex">[out] 接收下一個子路徑的結束索引。</param>
      <param name="isClosed">[out] 指示子路徑是否關閉。</param>
      <returns>在 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件中的子路徑數。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> 回轉至其相關路徑的開始。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
      <summary>取得路徑中的點數。</summary>
      <returns>路徑中的點數。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
      <summary>取得路徑中的子路徑數。</summary>
      <returns>路徑中的子路徑數。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.GraphicsState">
      <summary>表示 <see cref="T:System.Drawing.Graphics" /> 物件的狀態。 這個物件是由 <see cref="M:System.Drawing.Graphics.Save" /> 方法的呼叫所傳回的。 此類別無法獲得繼承。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchBrush">
      <summary>使用規劃樣式、前景色彩和背景色彩來定義矩形筆刷。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 列舉型別和前景色彩，初始化 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 類別的新執行個體。</summary>
      <param name="hatchstyle">其中一個 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，表示由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 繪製的圖樣。</param>
      <param name="foreColor">
        <see cref="T:System.Drawing.Color" /> 結構，這個結構表示由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 繪製的線條色彩。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 列舉型別、前景色彩和背景色彩，初始化 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 類別的新執行個體。</summary>
      <param name="hatchstyle">其中一個 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，表示由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 繪製的圖樣。</param>
      <param name="foreColor">
        <see cref="T:System.Drawing.Color" /> 結構，這個結構表示由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 繪製的線條色彩。</param>
      <param name="backColor">
        <see cref="T:System.Drawing.Color" /> 結構，這個結構表示由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 繪製的線條之間的空間色彩。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.HatchBrush.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 物件的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.HatchBrush" />，其轉型為物件。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.BackgroundColor">
      <summary>取得由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 物件繪製的規劃線條之間的空間色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，這個結構表示這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.ForegroundColor">
      <summary>取得由這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 物件繪製的規劃線條色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，這個結構表示這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的前景色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.HatchBrush.HatchStyle">
      <summary>取得這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 物件的規劃樣式。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> 值，表示這個 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 的圖樣。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.HatchStyle">
      <summary>指定 <see cref="T:System.Drawing.Drawing2D.HatchBrush" /> 物件可用的不同花紋。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal">
      <summary>從右上到左下的斜線線條花紋。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Cross">
      <summary>指定交叉的水平和垂直線條。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkDownwardDiagonal">
      <summary>指定從頂點到底點往右斜的斜線，間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 相互接近百分之 50，並且寬度為其兩倍。 這個規劃花紋沒有反鋸齒補償。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkHorizontal">
      <summary>指定水平線，其間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 接近百分之 50，且寬度為 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 的兩倍。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkUpwardDiagonal">
      <summary>指定從頂點到底點往左斜的斜線，間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 相互接近百分之 50，並且寬度為其兩倍，但是線條沒有反鋸齒補償。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DarkVertical">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 相互接近百分之 50 並且寬度為其兩倍的垂直線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedDownwardDiagonal">
      <summary>指定從頂點到底點向右斜的短折斜線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedHorizontal">
      <summary>指定短折水平線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedUpwardDiagonal">
      <summary>指定從頂點到底點向左斜的短折斜線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DashedVertical">
      <summary>指定短折垂直線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalBrick">
      <summary>指定具有從頂點到底點向左斜的層次磚形外觀之規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DiagonalCross">
      <summary>十字形對角線的模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Divot">
      <summary>指定具有草皮外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedDiamond">
      <summary>指定交叉的正斜虛線和反斜虛線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.DottedGrid">
      <summary>指定交叉的水平虛線和垂直虛線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal">
      <summary>從左上到右下的斜線線條花紋。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Horizontal">
      <summary>水平線花紋。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.HorizontalBrick">
      <summary>指定具有水平層次磚形外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeCheckerBoard">
      <summary>指定具有方格大小為 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard" /> 兩倍的棋盤外觀之規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeConfetti">
      <summary>指定具有五彩碎紙外觀並且由比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti" /> 更大的碎紙組成的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LargeGrid">
      <summary>指定 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> 規劃樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightDownwardDiagonal">
      <summary>指定從頂點到底點往右斜的對角線，其間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 接近百分之 50，但是沒有反鋸齒。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 相互接近百分之 50 的水平線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightUpwardDiagonal">
      <summary>指定從頂點到底點往左斜的斜線，間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 相互接近百分之 50，但是沒有反鋸齒補償。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.LightVertical">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 相互接近百分之 50 的垂直線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Max">
      <summary>指定 <see cref="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond" /> 影線樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Min">
      <summary>指定 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 影線樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowHorizontal">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Horizontal" /> 規劃樣式相互接近百分之 75 (或比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightHorizontal" /> 相互接近百分之 25) 的水平線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.NarrowVertical">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Vertical" /> 規劃樣式相互接近百分之 75 (或比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.LightVertical" /> 相互接近百分之 25) 的垂直線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.OutlinedDiamond">
      <summary>指定交叉但是沒有反鋸齒補償的正斜線和反斜線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent05">
      <summary>指定百分之 5 的規劃。 前景色彩與背景色彩的比例為 5:95。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent10">
      <summary>指定百分之 10 的影線。 前景色彩與背景色彩的比例為 10:90。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent20">
      <summary>指定百分之 20 的影線。 前景色彩與背景色彩的比例為 20:80。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent25">
      <summary>指定百分之 25 的影線。 前景色彩與背景色彩的比例為 25:75。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent30">
      <summary>指定百分之 30 的影線。 前景色彩與背景色彩的比例為 30:70。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent40">
      <summary>指定百分之 40 的影線。 前景色彩與背景色彩的比例為 40:60。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent50">
      <summary>指定百分之 50 的影線。 前景色彩與背景色彩的比例為 50:50。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent60">
      <summary>指定百分之 60 的影線。 前景色彩與背景色彩的比例為 60:40。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent70">
      <summary>指定百分之 70 的影線。 前景色彩與背景色彩的比例為 70:30。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent75">
      <summary>指定百分之 75 的影線。 前景色彩與背景色彩的比例為 75:25。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent80">
      <summary>指定百分之 80 的影線。 前景色彩與背景色彩的比例為 80:100。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Percent90">
      <summary>指定百分之 90 的影線。 前景色彩與背景色彩的比例為 90:10。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Plaid">
      <summary>指定具有格子圖案材質外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Shingle">
      <summary>指定規劃之圖樣，其外觀為從頂點到底點向右斜的對角層次木瓦。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallCheckerBoard">
      <summary>指定具有棋盤外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallConfetti">
      <summary>指定具有五彩碎紙外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SmallGrid">
      <summary>指定間距比 <see cref="F:System.Drawing.Drawing2D.HatchStyle.Cross" /> 規劃樣式相互接近百分之 50 的交叉水平線和垂直線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.SolidDiamond">
      <summary>指定具有斜對置放的棋盤外觀之規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Sphere">
      <summary>指定具有相鄰置放的球體外觀之規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Trellis">
      <summary>指定具有格子外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Vertical">
      <summary>垂直線花紋。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Wave">
      <summary>指定由波狀符號 (~) 組成的水平線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.Weave">
      <summary>指定具有編織材質外觀的規劃。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideDownwardDiagonal">
      <summary>指定從頂點到底點往右斜的斜線，間距與 <see cref="F:System.Drawing.Drawing2D.HatchStyle.ForwardDiagonal" /> 規劃樣式相同，並且寬度為其三倍，但是沒有反鋸齒補償。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.WideUpwardDiagonal">
      <summary>指定從頂點到底點往左斜的斜線，間距與 <see cref="F:System.Drawing.Drawing2D.HatchStyle.BackwardDiagonal" /> 規劃樣式相同，並且寬度為其三倍，但是沒有反鋸齒補償。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.HatchStyle.ZigZag">
      <summary>指定由 Z 字形組成的水平線。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.InterpolationMode">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 列舉型別會指定縮放或旋轉影像時所使用的演算法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bicubic">
      <summary>指定雙立方的插補法。 不做預先篩選。 這個模式不適用於將影像縮小到原始尺寸的百分之 25 以下。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Bilinear">
      <summary>指定雙線形的插補法。 不做預先篩選。 這個模式不適用於將影像縮小到原始大小的百分之 50 以下。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Default">
      <summary>指定預設模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.High">
      <summary>指定高品質的插補法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBicubic">
      <summary>指定高品質的雙立方插補法。 將執行預先篩選，以確保縮小影像的品質。 這個模式會產生品質最高的變形影像。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear">
      <summary>指定高品質的雙線形插補法。 將執行預先篩選，以確保縮小影像的品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Invalid">
      <summary>等同於 <see cref="F:System.Drawing.Drawing2D.QualityMode.Invalid" /> 列舉型別的 <see cref="T:System.Drawing.Drawing2D.QualityMode" /> 項目。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.Low">
      <summary>指定低品質的插補法。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.InterpolationMode.NearestNeighbor">
      <summary>指定最相鄰的插補法。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientBrush">
      <summary>使用線形漸層封裝 <see cref="T:System.Drawing.Brush" />。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的點和色彩，初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="point1">
        <see cref="T:System.Drawing.Point" /> 結構，表示線形漸層的開始點。</param>
      <param name="point2">
        <see cref="T:System.Drawing.Point" /> 結構，表示線形漸層的結束點。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示線形漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示線形漸層的結束色彩。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)">
      <summary>使用指定的點和色彩，初始化 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="point1">
        <see cref="T:System.Drawing.PointF" /> 結構，表示線形漸層的開始點。</param>
      <param name="point2">
        <see cref="T:System.Drawing.PointF" /> 結構，表示線形漸層的結束點。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示線形漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示線形漸層的結束色彩。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>根據矩形、起始和結束色彩，以及方向，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="linearGradientMode">指定漸層方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列舉型別項目。 方向決定漸層的起始和結束點。 例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起點為矩形的左上角而結束點為矩形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>根據矩形、起始和結束色彩，以及方向角度，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="angle">漸層方向線的角度 (自 X 軸起順時鐘方向的角度來測量)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>根據矩形、起始和結束色彩，以及方向角度，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="angle">漸層方向線的角度 (自 X 軸起順時鐘方向的角度來測量)。</param>
      <param name="isAngleScaleable">若要指定角度是由與這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 相關聯的變換所影響，則設定為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)">
      <summary>根據矩形、起始和結束色彩，以及方向模式，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="linearGradientMode">指定漸層方向的 <see cref="T:System.Drawing.Drawing2D.LinearGradientMode" /> 列舉型別項目。 方向決定漸層的起始和結束點。 例如，<see langword="LinearGradientMode.ForwardDiagonal" /> 指定起點為矩形的左上角而結束點為矩形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)">
      <summary>根據矩形、起始和結束色彩，以及方向角度，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="angle">漸層方向線的角度 (自 X 軸起順時鐘方向的角度來測量)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)">
      <summary>根據矩形、起始和結束色彩，以及方向角度，建立 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 類別的新執行個體。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定線性漸層的界限。</param>
      <param name="color1">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的開始色彩。</param>
      <param name="color2">
        <see cref="T:System.Drawing.Color" /> 結構，表示漸層的結束色彩。</param>
      <param name="angle">漸層方向線的角度 (自 X 軸起順時鐘方向的角度來測量)。</param>
      <param name="isAngleScaleable">若要指定角度是由與這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 相關聯的變換所影響，則設定為 <see langword="true" />，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" />，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>藉由在前面加上指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，將表示這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">與幾何轉換相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依據指定的順序，將表示這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">與幾何轉換相乘的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定兩個矩陣相乘所依據的順序。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform">
      <summary>將 <see cref="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform" /> 屬性重設為識別 (Identity)。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)">
      <summary>根據指定的數量來旋轉局部幾何轉換。 這個方法會預先規劃轉換的旋轉。</summary>
      <param name="angle">旋轉的角度。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的數量來旋轉局部幾何轉換。</summary>
      <param name="angle">旋轉的角度。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加旋轉矩陣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>以指定的數量，縮放局部的幾何轉換。 這個方法預先規劃轉換的縮放矩陣。</summary>
      <param name="sx">用來縮放 X 軸方向變換的數量。</param>
      <param name="sy">用來縮放 Y 軸方向變換的數量。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的數量來縮放局部幾何轉換。</summary>
      <param name="sx">用來縮放 X 軸方向變換的數量。</param>
      <param name="sy">用來縮放 Y 軸方向變換的數量。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加縮放矩陣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>使用中心色彩和在兩端的單一色彩線形減少來建立線形漸層。</summary>
      <param name="focus">指定漸層的中心 (只含有結束色彩的漸層所在點) 的從 0 到 1 的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>使用中心色彩和在兩端的單一色彩線形減少來建立線形漸層。</summary>
      <param name="focus">指定漸層的中心 (只含有結束色彩的漸層所在點) 的從 0 到 1 的值。</param>
      <param name="scale">指定色彩多快從開始色彩減少到 <paramref name="focus" /> (結束色彩) 的從 0 到 1 的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>根據鐘型曲線來建立漸層減少。</summary>
      <param name="focus">指定漸層的中心 (開始色彩和結束色彩相等漸變的所在點) 的從 0 到 1 的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>根據鐘型曲線來建立漸層減少。</summary>
      <param name="focus">指定漸層的中心 (只含有結束色彩的漸層所在點) 的從 0 到 1 的值。</param>
      <param name="scale">指定色彩多快從 <paramref name="focus" /> 減少的從 0 到 1 的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>根據指定的維度來轉換局部幾何變換。 這個方法預先規劃轉換的轉換。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的維度來轉換局部幾何變換。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
      <param name="order">用來套用轉譯的順序 (附加在前端或後端)。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Blend">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Blend" />，此物件指定定義漸層之自訂減少的位置和因數。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Blend" />，表示漸層的自訂減少。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection">
      <summary>取得或設定值，指示是否啟用這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的色差補正修正。</summary>
      <returns>如果要為這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 物件啟用伽瑪值修正，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors">
      <summary>取得或設定定義多色線形漸層的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</summary>
      <returns>定義多色線形漸層的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.LinearColors">
      <summary>取得或設定漸層的開始和結束色彩。</summary>
      <returns>兩個 <see cref="T:System.Drawing.Color" /> 結構的陣列，表示漸層的開始和結束色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Rectangle">
      <summary>取得定義漸層開始點和結束點的矩形區域。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定漸層的開始點和結束點。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.Transform">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，這個複本會為這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 定義局部幾何轉換。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，定義只套用至使用這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 繪製填色的幾何轉換。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.LinearGradientBrush.WrapMode">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指出這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 的環繞模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 繪製之填色的拼接方式。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.LinearGradientMode">
      <summary>指定線形漸層的方向。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.BackwardDiagonal">
      <summary>指定從右上至左下的漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.ForwardDiagonal">
      <summary>指定從左上至右下的漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Horizontal">
      <summary>指定從左至右的漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LinearGradientMode.Vertical">
      <summary>指定從上至下的漸層。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineCap">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 物件可以用來結束線條的可用端點樣式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.AnchorMask">
      <summary>指定遮罩，用來檢查線條端點是否為錨點端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.ArrowAnchor">
      <summary>指定箭頭形狀的錨點端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Custom">
      <summary>指定自訂的線條端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.DiamondAnchor">
      <summary>指定鑽石形錨點端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Flat">
      <summary>指定扁平線條端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.NoAnchor">
      <summary>不指定錨點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Round">
      <summary>指定圓形線條端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.RoundAnchor">
      <summary>指定圓形錨點端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Square">
      <summary>指定方形線條端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.SquareAnchor">
      <summary>指定方形錨點線條端點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineCap.Triangle">
      <summary>指定三角形線條端點。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.LineJoin">
      <summary>指定如何聯結包含在 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件的圖形 (子路徑) 中之連續直線或曲線線段。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Bevel">
      <summary>指定斜面接合。 這會產生對角。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Miter">
      <summary>指定斜接接合。 這會產生尖角或銳角，取決於斜接的長度是否超過斜接限制。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.MiterClipped">
      <summary>指定斜接接合。 這會產生尖角或斜面角，取決於斜接的長度是否超過斜接限制。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.LineJoin.Round">
      <summary>指定圓形接合。 這會在直線之間產生平滑且圓的弧形。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.Matrix">
      <summary>封裝代表幾何轉換的 3 乘 3 仿射矩陣。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體做為識別 (Identity) 矩陣。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體至指定的矩形和點陣列所定義的幾何轉換。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示要轉換的矩形。</param>
      <param name="plgpts">三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，這個結構表示矩形左上角、右上角和左下角的要轉換平行四邊形的點。 前三個角指示平行四邊形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體至指定的矩形和點陣列所定義的幾何轉換。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示要轉換的矩形。</param>
      <param name="plgpts">三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個結構表示矩形左上角、右上角和左下角的要轉換平行四邊形的點。 前三個角指示平行四邊形的右下角。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>使用指定的項目，初始化 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 類別的新執行個體。</summary>
      <param name="m11">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一列第一行中的值。</param>
      <param name="m12">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第一列第二行中的值。</param>
      <param name="m21">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二列第一行中的值。</param>
      <param name="m22">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第二列第二行中的值。</param>
      <param name="dx">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三列第一行中的值。</param>
      <param name="dy">新 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的第三列第二行中的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的完全相同複本。</summary>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)">
      <summary>測試指定的物件是否為 <see cref="T:System.Drawing.Drawing2D.Matrix" />，並且和這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同。</summary>
      <param name="obj">要測試的物件。</param>
      <returns>如果 <paramref name="obj" /> 是與這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 相同的指定 <see cref="T:System.Drawing.Drawing2D.Matrix" />，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.GetHashCode">
      <summary>傳回雜湊程式碼。</summary>
      <returns>這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Invert">
      <summary>如果可反轉，則反轉這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)">
      <summary>藉由預先規劃指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />，將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以 <paramref name="matrix" /> 參數中所指定的矩陣。</summary>
      <param name="matrix">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 乘以 <paramref name="matrix" /> 參數中所指定的矩陣，並且依據 <paramref name="order" /> 參數中所指定的順序。</summary>
      <param name="matrix">這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">表示乘法順序的 <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Reset">
      <summary>重設這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 使其具有身分識別矩陣的元素。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)">
      <summary>在原點為中心並以指定的角度，預先規劃這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順時針旋轉。</summary>
      <param name="angle">旋轉的角度，單位為度數。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>以這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的原點 (X 座標和 Y 座標都為 0) 為中心，套用 <paramref name="angle" /> 參數中指定的順時針旋轉量。</summary>
      <param name="angle">旋轉的角度 (範圍)，單位為度數。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加或預先規劃)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)">
      <summary>藉由預先規劃旋轉，繞著 <paramref name="point" /> 參數中所指定的點，將順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="angle">旋轉的角度 (範圍)，單位為度數。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" />，表示旋轉的中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依據指定的順序，將繞著指定點的順時針旋轉套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="angle">旋轉的角度，單位為度數。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" />，表示旋轉的中心。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定套用旋轉的順序 (附加或預先規劃)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)">
      <summary>藉由預先規劃縮放向量，將指定的縮放向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="scaleX">用來在 X 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</param>
      <param name="scaleY">用來在 Y 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>使用指定的順序，將指定的縮放向量 (<paramref name="scaleX" /> 和 <paramref name="scaleY" />) 套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="scaleX">用來在 X 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</param>
      <param name="scaleY">用來在 Y 軸方向縮放這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的值。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將縮放向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加或預先規劃)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)">
      <summary>藉由預先規劃切變轉換，將指定的切變向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="shearX">水平分歧因數。</param>
      <param name="shearY">垂直分歧因數。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依據指定的順序，將指定的切變向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="shearX">水平分歧因數。</param>
      <param name="shearY">垂直分歧因數。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定套用切變的順序 (附加或預先規劃)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的幾何轉換套用至指定的點陣列。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])">
      <summary>將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 所表示的幾何轉換套用至指定的點陣列。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示要轉換的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])">
      <summary>只將這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的縮放和旋轉元件套用至指定的點陣列。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])">
      <summary>將陣列中的每個向量乘以矩陣。 這個矩陣的轉換項目 (第三列) 會被忽略。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)">
      <summary>藉由預先規劃轉換向量，將指定的轉換向量 (<paramref name="offsetX" /> 和 <paramref name="offsetY" />) 套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="offsetX">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 值。</param>
      <param name="offsetY">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依據指定的順序，將指定的轉換向量套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="offsetX">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 值。</param>
      <param name="offsetY">用來轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 值。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定將轉換套用至這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的順序 (附加或預先規劃)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])">
      <summary>將陣列中的每個向量乘以矩陣。 這個矩陣的轉換項目 (第三列) 會被忽略。</summary>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示要轉換的點。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.Elements">
      <summary>取得浮點值的陣列，該陣列表示這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的項目。</summary>
      <returns>浮點值的陣列，表示這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的項目。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsIdentity">
      <summary>取得值，指示這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否為身分識別矩陣。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 為身分識別，則這個屬性為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.IsInvertible">
      <summary>取得指出這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 是否可反轉的值。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 為可逆轉的，則這個屬性為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetX">
      <summary>取得這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 轉換值 (dx 值或第三列第一行中的項目)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 x 轉換值。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.Matrix.OffsetY">
      <summary>取得這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 轉換值 (dy 值或第三列第二欄中的項目)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的 y 轉換值。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.MatrixOrder">
      <summary>指定矩陣變換作業的順序。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Append">
      <summary>新作業是在舊作業之後套用。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.MatrixOrder.Prepend">
      <summary>新作業是在舊作業之前套用。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathData">
      <summary>含有組成 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件的圖形資料。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathData.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Drawing2D.PathData" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Points">
      <summary>取得或設定表示用來建構路徑的點之 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</summary>
      <returns>
        <see cref="T:System.Drawing.PointF" /> 物件的陣列，表示用來建構路徑的點。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathData.Types">
      <summary>取得或設定路徑中相對應點的型別。</summary>
      <returns>位元組的陣列，指定路徑中相對應點的型別。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathGradientBrush">
      <summary>封裝 <see cref="T:System.Drawing.Brush" /> 物件，這個物件會使用漸層來填滿 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件的內部。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的路徑來初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 類別的新執行個體。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，定義由這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 填滿的區域。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])">
      <summary>使用指定的點來初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 類別的新執行個體。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示構成路徑頂點的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)">
      <summary>使用指定的點和環繞模式來初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 類別的新執行個體。</summary>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，這個陣列表示構成路徑頂點的點。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 繪製之填色的拼接方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])">
      <summary>使用指定的點來初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 類別的新執行個體。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示構成路徑頂點的點。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)">
      <summary>使用指定的點和環繞模式來初始化 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 類別的新執行個體。</summary>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，這個陣列表示構成路徑頂點的點。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 繪製之填色的拼接方式。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>使用筆刷轉換矩陣乘以其他矩陣的乘積來更新筆刷的轉換矩陣。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，將乘以筆刷的目前轉換矩陣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>使用筆刷轉換矩陣乘以其他矩陣的乘積來更新筆刷的轉換矩陣。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，將乘以筆刷的目前轉換矩陣。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定兩個矩陣相乘所依據的順序。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform">
      <summary>將 <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> 屬性重設為識別 (Identity)。</summary>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)">
      <summary>根據指定的數量來旋轉局部幾何轉換。 這個方法會預先規劃轉換的旋轉。</summary>
      <param name="angle">旋轉的角度 (範圍)。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的數量來旋轉局部幾何轉換。</summary>
      <param name="angle">旋轉的角度 (範圍)。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加旋轉矩陣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)">
      <summary>以指定的數量，縮放局部的幾何轉換。 這個方法預先規劃轉換的縮放矩陣。</summary>
      <param name="sx">在 X 軸方向的轉換縮放因數。</param>
      <param name="sy">在 Y 軸方向的轉換縮放因數。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的數量來縮放局部幾何轉換。</summary>
      <param name="sx">在 X 軸方向的轉換縮放因數。</param>
      <param name="sy">在 Y 軸方向的轉換縮放因數。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加縮放矩陣。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>使用中心色彩和一個環繞色彩的線型減少來建立漸層。</summary>
      <param name="focus">從 0 到 1 的值，這個值指定中心色彩將沿著從路徑中心至路徑邊界的任何圓形來達到最大濃度的位置。 值 1 (預設值) 會將最大濃度置於路徑的中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>使用中心色彩和每個環繞色彩的線型減少來建立漸層。</summary>
      <param name="focus">從 0 到 1 的值，這個值指定中心色彩將沿著從路徑中心至路徑邊界的任何圓形來達到最大濃度的位置。 值 1 (預設值) 會將最大濃度置於路徑的中心。</param>
      <param name="scale">從 0 到 1 的值，這個值指定使用邊界色彩來造成漸變之中心色彩的最大濃度。 值 1 會讓中心色彩達到最高的可能濃度，並且這個值是預設值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>建立從路徑中心開始向外至路徑邊界變更色彩的漸層筆刷。 從一個色彩轉換為另一個色彩是根據鐘型曲線。</summary>
      <param name="focus">從 0 到 1 的值，這個值指定中心色彩將沿著從路徑中心至路徑邊界的任何圓形來達到最大濃度的位置。 值 1 (預設值) 會將最大濃度置於路徑的中心。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>建立從路徑中心開始向外至路徑邊界變更色彩的漸層筆刷。 從一個色彩轉換為另一個色彩是根據鐘型曲線。</summary>
      <param name="focus">從 0 到 1 的值，這個值指定中心色彩將沿著從路徑中心至路徑邊界的任何圓形來達到最大濃度的位置。 值 1 (預設值) 會將最大濃度置於路徑的中心。</param>
      <param name="scale">從 0 到 1 的值，這個值指定使用邊界色彩來造成漸變之中心色彩的最大濃度。 值 1 會讓中心色彩達到最高的可能濃度，並且這個值是預設值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)">
      <summary>將指定的轉換套用至區域幾何轉換。 這個方法預先規劃轉換的轉換。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
    </member>
    <member name="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序將指定的轉換套用至區域幾何轉換。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
      <param name="order">用來套用轉譯的順序 (附加在前端或後端)。</param>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Blend">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Blend" />，此物件指定定義漸層之自訂減少的位置和因數。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Blend" />，表示漸層的自訂減少。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor">
      <summary>取得或設定路徑漸層中心點的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" />，表示在路徑漸層之中心點的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint">
      <summary>取得或設定路徑漸層的中心點。</summary>
      <returns>
        <see cref="T:System.Drawing.PointF" />，表示路徑漸層的中心點。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales">
      <summary>取得或設定漸層減少的焦點。</summary>
      <returns>
        <see cref="T:System.Drawing.PointF" />，表示漸層減少的焦點。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors">
      <summary>取得或設定定義多色線形漸層的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</summary>
      <returns>定義多色線形漸層的 <see cref="T:System.Drawing.Drawing2D.ColorBlend" />。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle">
      <summary>取得這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的週框。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示限定這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 所填滿之路徑的矩形區域。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors">
      <summary>取得或設定色彩陣列，對應至這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 所填滿之路徑中的點。</summary>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構陣列，表示與這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 所填滿之路徑中的每個點相關聯的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.Transform">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，這個複本會為此 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 定義局部幾何轉換。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，定義只套用至使用這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 繪製填色的幾何轉換。</returns>
    </member>
    <member name="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指示這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 的環繞模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" />，指定使用這個 <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> 繪製之填色的拼接方式。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.PathPointType">
      <summary>指定在 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件中的點類型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier">
      <summary>預設的環圈曲線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Bezier3">
      <summary>立體的環圈曲線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.CloseSubpath">
      <summary>子路徑的結束點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.DashMode">
      <summary>對應的線段為虛線。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Line">
      <summary>線段。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathMarker">
      <summary>路徑標記。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.PathTypeMask">
      <summary>遮罩點。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PathPointType.Start">
      <summary>
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 物件的起點。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenAlignment">
      <summary>指定與假設的零寬度線條相關聯之 <see cref="T:System.Drawing.Pen" /> 物件的對齊。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Center">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 物件會在假設線條的中央。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Inset">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 定位在假設線條的內部。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Left">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 定位在假設線的左方。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Outset">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 定位在假設線的外部。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenAlignment.Right">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 定位在假設線的右方。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PenType">
      <summary>指定 <see cref="T:System.Drawing.Pen" /> 物件用來填滿線條的填色類型。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.HatchFill">
      <summary>指定規劃填色。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.LinearGradient">
      <summary>指定線形漸層填色。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.PathGradient">
      <summary>指定路徑漸層填色。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.SolidColor">
      <summary>指定純色填色。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PenType.TextureFill">
      <summary>指定點陣圖材質填色。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.PixelOffsetMode">
      <summary>指定在呈現期間像素如何位移。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Default">
      <summary>指定預設模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Half">
      <summary>指定像素水平和垂直位移 -.5 個單位，以高速達到反鋸齒效果。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighQuality">
      <summary>指定高品質、低速度的呈現方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.HighSpeed">
      <summary>指定高速度、低品質的呈現方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.Invalid">
      <summary>指定無效的模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.PixelOffsetMode.None">
      <summary>指定不位移任何像素。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.QualityMode">
      <summary>指定呈現 GDI+ 物件時的整體品質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Default">
      <summary>指定預設模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.High">
      <summary>指定高品質、低速度的呈現方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Invalid">
      <summary>指定無效的模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.QualityMode.Low">
      <summary>指定低品質、高速度的呈現方式。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.RegionData">
      <summary>封裝組成 <see cref="T:System.Drawing.Region" /> 物件的資料。 此類別無法獲得繼承。</summary>
    </member>
    <member name="P:System.Drawing.Drawing2D.RegionData.Data">
      <summary>取得或設定位元組的陣列，這個陣列指定 <see cref="T:System.Drawing.Region" /> 物件。</summary>
      <returns>位元組的陣列，這個陣列指定 <see cref="T:System.Drawing.Region" /> 物件。</returns>
    </member>
    <member name="T:System.Drawing.Drawing2D.SmoothingMode">
      <summary>指定平滑處理 (反鋸齒補償) 是否套用至直線和曲線，以及填滿的區域的邊緣。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.AntiAlias">
      <summary>指定反鋸齒呈現。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Default">
      <summary>指定不使用反鋸齒。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighQuality">
      <summary>指定反鋸齒呈現。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.HighSpeed">
      <summary>指定不使用反鋸齒。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.Invalid">
      <summary>指定無效的模式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.SmoothingMode.None">
      <summary>指定不使用反鋸齒。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WarpMode">
      <summary>指定 <see cref="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp" /> 方法中所套用的彎曲變換。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Bilinear">
      <summary>指定雙線形彎曲。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WarpMode.Perspective">
      <summary>指定透視點彎曲。</summary>
    </member>
    <member name="T:System.Drawing.Drawing2D.WrapMode">
      <summary>指定在紋理或漸層小於要填滿的區域時的拼接方式。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Clamp">
      <summary>未拼接紋理或漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.Tile">
      <summary>拼接漸層或材質。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipX">
      <summary>水平地反轉材質或漸層，然後拼接材質或漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipXY">
      <summary>水平和垂直地反轉材質或漸層，然後拼接材質或漸層。</summary>
    </member>
    <member name="F:System.Drawing.Drawing2D.WrapMode.TileFlipY">
      <summary>垂直地反轉材質或漸層，然後拼接材質或漸層。</summary>
    </member>
    <member name="T:System.Drawing.Font">
      <summary>定義文字的特定格式，包括字體、大小和樣式屬性 (Attribute)。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>初始化使用指定之現有 <see cref="T:System.Drawing.Font" /> 與 <see cref="T:System.Drawing.Font" /> 列舉的新 <see cref="T:System.Drawing.FontStyle" />。</summary>
      <param name="prototype">用來建立新 <see cref="T:System.Drawing.Font" /> 的現有 <see cref="T:System.Drawing.Font" />。</param>
      <param name="newStyle">要套用至新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontStyle" />。 <see cref="T:System.Drawing.FontStyle" /> 列舉的多個值可以與 <see langword="OR" /> 運算子相結合。</param>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)">
      <summary>使用指定的大小，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小 (以點計算)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)">
      <summary>使用指定的大小和樣式，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小 (以點計算)。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>使用指定大小、樣式和單位，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>使用指定大小、樣式、單位和字元集，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">
        <see cref="T:System.Byte" />，指定 
 用於新字型的 GDI 字元集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>使用指定大小、樣式、單位和字元集，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">
        <see cref="T:System.Byte" />，指定 
 用於此字型的 GDI 字元集。</param>
      <param name="gdiVerticalFont">布林值，表示新字型是否衍生自 GDI 垂直字型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 是 <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)">
      <summary>使用指定大小和單位，初始化新的 <see cref="T:System.Drawing.Font" />。 將樣式設為 <see cref="F:System.Drawing.FontStyle.Regular" />。</summary>
      <param name="family">新 <see cref="T:System.Drawing.Font" /> 的 <see cref="T:System.Drawing.FontFamily" />。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="family" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single)">
      <summary>使用指定的大小，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小 (以點計算)。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)">
      <summary>使用指定的大小和樣式，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小 (以點計算)。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
      <summary>使用指定大小、樣式和單位，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)">
      <summary>使用指定大小、樣式、單位和字元集，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">
        <see cref="T:System.Byte" />，指定要用於這個字型的 GDI 字元集。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)">
      <summary>使用指定大小、樣式、單位和字元集，初始化新的 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="style">新字型的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <param name="gdiCharSet">
        <see cref="T:System.Byte" />，指定要用於這個字型的 GDI 字元集。</param>
      <param name="gdiVerticalFont">布林值，表示新的 <see cref="T:System.Drawing.Font" /> 是否衍生自 GDI 垂直字型。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)">
      <summary>使用指定大小和單位，初始化新的 <see cref="T:System.Drawing.Font" />。 樣式設定為 <see cref="F:System.Drawing.FontStyle.Regular" />。</summary>
      <param name="familyName">新 <see cref="T:System.Drawing.Font" /> 之 <see cref="T:System.Drawing.FontFamily" /> 的字串表示。</param>
      <param name="emSize">新字型的 Em 大小，以 <paramref name="unit" /> 參數所指定的單位計算。</param>
      <param name="unit">新字型的 <see cref="T:System.Drawing.GraphicsUnit" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="emSize" /> 小於或等於 0、評估為無限，或為無效數字。</exception>
    </member>
    <member name="M:System.Drawing.Font.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Font" /> 的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Font" />，它轉換為 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Font" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Font.Equals(System.Object)">
      <summary>表示指定的物件是否為 <see cref="T:System.Drawing.Font" />，而且是否具有與這個 <see cref="T:System.Drawing.Font" /> 相同的 <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" /> 與 <see cref="P:System.Drawing.Font.Unit" /> 屬性值。</summary>
      <param name="obj">要測試的物件。</param>
      <returns>如果 <paramref name="obj" /> 參數為 <see cref="T:System.Drawing.Font" /> 而且具有與這個 <see cref="T:System.Drawing.Font" /> 相同的 <see cref="P:System.Drawing.Font.FontFamily" />、<see cref="P:System.Drawing.Font.GdiVerticalFont" />、<see cref="P:System.Drawing.Font.GdiCharSet" />、<see cref="P:System.Drawing.Font.Style" />、<see cref="P:System.Drawing.Font.Size" /> 與 <see cref="P:System.Drawing.Font.Unit" /> 屬性值，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Font.FromHdc(System.IntPtr)">
      <summary>從裝置內容的指定 Windows 控制代碼建立 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="hdc">裝置內容的控制代碼。</param>
      <exception cref="T:System.ArgumentException">指定之裝置内容的字型不是 TrueType 字型。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromHfont(System.IntPtr)">
      <summary>從指定的 Windows 控制代碼建立 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="hfont">GDI 字型的 Windows 控制代碼。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hfont" /> 指向不是 TrueType 字型的物件。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object)">
      <summary>從指定的 GDI 邏輯字型 (<c>LOGFONT</c>) 結構建立 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="lf">
        <see cref="T:System.Object" />，表示從其中建立 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 結構。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)">
      <summary>從指定的 GDI 邏輯字型 (<c>LOGFONT</c>) 結構建立 <see cref="T:System.Drawing.Font" />。</summary>
      <param name="lf">
        <see cref="T:System.Object" />，表示從其中建立 <see cref="T:System.Drawing.Font" /> 的 GDI <see langword="LOGFONT" /> 結構。</param>
      <param name="hdc">含有 <paramref name="lf" /> 結構相關額外資訊的裝置內容控制代碼。</param>
      <exception cref="T:System.ArgumentException">字型不是 TrueType 字型。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHashCode">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的雜湊碼。</summary>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight">
      <summary>傳回這個字型的行距 (單位為像素)。</summary>
      <returns>這個字型的行距 (單位為像素)。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Drawing.Graphics)">
      <summary>傳回這個字型的行距 (單位是指定之 <see cref="T:System.Drawing.Graphics" /> 的目前單位)。</summary>
      <param name="graphics">
        <see cref="T:System.Drawing.Graphics" />，其保留顯示裝置的垂直解析度 (單位為 DPI) 以及頁面單位和頁面縮放的設定。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 為 <see langword="null" />。</exception>
      <returns>這個字型的行距 (單位為像素)。</returns>
    </member>
    <member name="M:System.Drawing.Font.GetHeight(System.Single)">
      <summary>傳回這個 <see cref="T:System.Drawing.Font" /> 在使用指定之垂直解析度繪製至裝置時的高度 (單位為像素)。</summary>
      <param name="dpi">用來計算字型高度的垂直解析度 (單位為 DPI)。</param>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 的高度 (單位為像素)。</returns>
    </member>
    <member name="M:System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>將序列化目標物件所需的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="si">要以資料填入的 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
      <param name="context">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="M:System.Drawing.Font.ToHfont">
      <summary>傳回這個 <see cref="T:System.Drawing.Font" /> 的控制代碼。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">作業失敗。</exception>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 的 Windows 控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object)">
      <summary>從這個 <see cref="T:System.Drawing.Font" /> 建立 GDI 邏輯字型 (<c>LOGFONT</c>) 結構。</summary>
      <param name="logFont">
        <see cref="T:System.Object" />，表示這個方法所建立的 <see langword="LOGFONT" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)">
      <summary>從這個 <see cref="T:System.Drawing.Font" /> 建立 GDI 邏輯字型 (<c>LOGFONT</c>) 結構。</summary>
      <param name="logFont">
        <see cref="T:System.Object" />，表示這個方法所建立的 <see langword="LOGFONT" /> 結構。</param>
      <param name="graphics">
        <see cref="T:System.Drawing.Graphics" />，提供 <see langword="LOGFONT" /> 結構的額外資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Font.ToString">
      <summary>傳回這個 <see cref="T:System.Drawing.Font" /> 的人們可解讀的字串表示。</summary>
      <returns>表示這個 <see cref="T:System.Drawing.Font" /> 的字串。</returns>
    </member>
    <member name="P:System.Drawing.Font.Bold">
      <summary>取得值，表示這個 <see cref="T:System.Drawing.Font" /> 是否為粗體。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Font" /> 為粗體，則為<see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.FontFamily">
      <summary>取得與這個 <see cref="T:System.Drawing.FontFamily" /> 關聯的 <see cref="T:System.Drawing.Font" />。</summary>
      <returns>與這個 <see cref="T:System.Drawing.FontFamily" /> 相關聯的 <see cref="T:System.Drawing.Font" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiCharSet">
      <summary>取得指定這個 <see cref="T:System.Drawing.Font" /> 使用之 GDI 字元集的位元組值。</summary>
      <returns>位元組值，指定這個 <see cref="T:System.Drawing.Font" /> 使用的 GDI 字元集。 預設值是 1。</returns>
    </member>
    <member name="P:System.Drawing.Font.GdiVerticalFont">
      <summary>取得布林值，指示這個 <see cref="T:System.Drawing.Font" /> 是否衍生自 GDI 垂直字型。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Font" /> 衍生自 GDI 垂直字型，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Height">
      <summary>取得這個字型的行距。</summary>
      <returns>這個字型的行距 (單位為像素)。</returns>
    </member>
    <member name="P:System.Drawing.Font.IsSystemFont">
      <summary>取得值，指示字型是否為 <see cref="T:System.Drawing.SystemFonts" /> 的成員。</summary>
      <returns>如果字型是 <see cref="T:System.Drawing.SystemFonts" /> 的成員，則為 <see langword="true" />；否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Italic">
      <summary>取得值，這個值表示此字型是否已套用斜體樣式。</summary>
      <returns>
        <see langword="true" /> 表示此字型已套用斜體樣式，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Name">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的字樣名稱。</summary>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 之字樣名稱的字串表示。</returns>
    </member>
    <member name="P:System.Drawing.Font.OriginalFontName">
      <summary>取得原本指定之字型的名稱。</summary>
      <returns>表示原本指定之字型名稱的字串。</returns>
    </member>
    <member name="P:System.Drawing.Font.Size">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的 Em 大小，此大小是以 <see cref="P:System.Drawing.Font.Unit" /> 屬性指定的單位來測量的。</summary>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 的 Em 大小。</returns>
    </member>
    <member name="P:System.Drawing.Font.SizeInPoints">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的 Em 大小 (單位為點)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Font" /> 的 Em 大小 (單位為點)。</returns>
    </member>
    <member name="P:System.Drawing.Font.Strikeout">
      <summary>取得值，表示這個 <see cref="T:System.Drawing.Font" /> 是否指定字型中有水平線貫穿。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Font" /> 具有貫穿它的水平線，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Style">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的樣式資訊。</summary>
      <returns>
        <see cref="T:System.Drawing.FontStyle" /> 列舉，包含這個 <see cref="T:System.Drawing.Font" /> 的樣式資訊。</returns>
    </member>
    <member name="P:System.Drawing.Font.SystemFontName">
      <summary>如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 屬性傳回 <see langword="true" />，則取得系統字型的名稱。</summary>
      <returns>如果 <see cref="P:System.Drawing.Font.IsSystemFont" /> 傳回 <see langword="true" />，則為系統字型的名稱；否則為空字串 ("")。</returns>
    </member>
    <member name="P:System.Drawing.Font.Underline">
      <summary>取得值，表示這個 <see cref="T:System.Drawing.Font" /> 是否有底線。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Font" /> 加上了底線，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Font.Unit">
      <summary>取得這個 <see cref="T:System.Drawing.Font" /> 的測量單位。</summary>
      <returns>
        <see cref="T:System.Drawing.GraphicsUnit" />，表示這個 <see cref="T:System.Drawing.Font" /> 的測量單位。</returns>
    </member>
    <member name="T:System.Drawing.FontConverter">
      <summary>將 <see cref="T:System.Drawing.Font" /> 物件從一個資料型別轉換為另一個資料型別。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.FontConverter" /> 物件。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個轉換子是否可以將指定來源型別的物件轉換成轉換子的原生 (Native) 型別。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的其他資訊，而這個轉換子就是從這個環境呼叫的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="sourceType">要轉換的來源型別。</param>
      <returns>如果這個物件可以執行轉換，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>取得值，表示這個轉換子是否可以使用內容將物件轉換成指定的目的型別。</summary>
      <param name="context">提供格式內容的 <see langword="ITypeDescriptorContext" /> 物件。</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> 物件，表示要轉換成的型別。</param>
      <returns>如果這個轉換子可以執行轉換，則這個方法會傳回 <see langword="true" />；否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定的物件轉換成轉換子的原生型別。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的其他資訊，而這個轉換子就是從這個環境呼叫的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="culture">
        <see langword="CultureInfo" /> 物件，指定用來表示字型的文化特性 (Culture)。</param>
      <param name="value">要轉換的物件。</param>
      <exception cref="T:System.NotSupportedException">無法執行轉換。</exception>
      <returns>轉換的物件。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>將指定的物件轉換為另一個型別。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的其他資訊，而這個轉換子就是從這個環境呼叫的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，指定用來表示物件的文化特性。</param>
      <param name="value">要轉換的物件。</param>
      <param name="destinationType">要物件轉換的目的資料型別。</param>
      <exception cref="T:System.NotSupportedException">轉換未成功。</exception>
      <returns>轉換的物件。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>藉由使用指定的物件屬性值組，來建立這個型別的物件。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <param name="propertyValues">新屬性值的字典。 字典包含了一系列的名稱/值組，每一個都會從 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> 方法傳回一個屬性。</param>
      <returns>新建立的物件，或 <see langword="null" /> (如果無法建立物件)。 預設實作會傳回 <see langword="null" />。  
  
 <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 對於建立擁有可變更屬性的不可變更物件非常有用。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>判斷在這個物件上變更值是否需要呼叫 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 方法來建立新的值。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <returns>如果在對這個物件的一或多個屬性進行變更時應該呼叫 <see langword="true" /> 物件，則這個方法會傳回 <see langword="CreateInstance" />；否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>擷取這個型別的屬性集。 根據預設值，型別不傳回任何屬性。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <param name="value">要為其取得屬性的物件的值。</param>
      <param name="attributes">描述屬性的 <see cref="T:System.Attribute" /> 物件陣列。</param>
      <returns>應該公開給這個資料型別的屬性集。 如果沒有屬性應該公開，則會傳回 <see langword="null" />。 預設的實作 (Implementation) 一定會傳回 <see langword="null" />。  
  
這個方法的簡單實作可呼叫正確資料型別的 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 方法。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>判斷這個物件是否支援屬性。 預設為 <see langword="false" />。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <returns>如果應該呼叫 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 方法來尋找這個物件的屬性，則這個方法會傳回 <see langword="true" />，否則會傳回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.FontConverter.FontNameConverter">
      <summary>
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 是型別轉換子 (Type Converter)，用於在字型名稱和各種其他表示之間來回轉換。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個轉換子是否可以將指定來源型別中的物件轉換成轉換子的原生型別。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可以用來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性可能會傳回 <see langword="null" />。</param>
      <param name="sourceType">您想要轉換的來源類型。</param>
      <returns>如果這個轉換器可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定的物件轉換成轉換子的原生型別。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可以用來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性可能會傳回 <see langword="null" />。</param>
      <param name="culture">要用於執行轉換的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要轉換的物件。</param>
      <exception cref="T:System.NotSupportedException">無法完成轉換作業。</exception>
      <returns>轉換的物件。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>擷取含有資料型別之標準值集的集合，這個轉換子是針對該資料型別所設計。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可以用來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性可能會傳回 <see langword="null" />。</param>
      <returns>包含有效值之標準集的集合，或是 <see langword="null" />。 預設為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>判斷從 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 方法所傳回的標準值清單是否為獨佔清單。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可以用來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性可能會傳回 <see langword="null" />。</param>
      <returns>如果從 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> 傳回的集合是可能值的獨佔清單，則為 <see langword="true" />；否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>判斷這個物件是否支援可從清單選取的標準值集。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，可以用來擷取環境的其他資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性可能會傳回 <see langword="null" />。</param>
      <returns>如果應該呼叫 <see langword="true" /> 以尋找物件支援的通用值集合則為 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose">
      <summary>執行與釋放 (Free)、釋放 (Release) 或重設 Unmanaged 資源相關聯之應用程式定義的工作。</summary>
    </member>
    <member name="T:System.Drawing.FontConverter.FontUnitConverter">
      <summary>將字型單位與其他單位類型來回轉換。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.FontConverter.FontUnitConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>傳回對 <see cref="T:System.Drawing.Font" /> 型別有效的標準值集合。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
    </member>
    <member name="T:System.Drawing.FontFamily">
      <summary>定義具有相似基本設計和特定樣式變化的字樣群組。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)">
      <summary>從指定的泛用字型家族來初始化新的 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <param name="genericFamily">
        <see cref="T:System.Drawing.Text.GenericFontFamilies" />，用於建立新的 <see cref="T:System.Drawing.FontFamily" />。</param>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String)">
      <summary>使用指定的名稱，初始化新的 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <param name="name">新 <see cref="T:System.Drawing.FontFamily" /> 的名稱。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 為空字串 ("")。  
  
-或- 
 <paramref name="name" /> 會指定未安裝在執行應用程式之電腦上的字型。  
  
-或- 
 <paramref name="name" /> 會指定不是 TrueType 字型的字型。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)">
      <summary>使用指定的名稱，初始化指定之 <see cref="T:System.Drawing.Text.FontCollection" /> 中的新 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <param name="name">
        <see cref="T:System.String" />，代表新 <see cref="T:System.Drawing.FontFamily" /> 的名稱。</param>
      <param name="fontCollection">包含這個 <see cref="T:System.Drawing.FontFamily" /> 的 <see cref="T:System.Drawing.Text.FontCollection" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 為空字串 ("")。  
  
-或- 
 <paramref name="name" /> 會指定未安裝在執行應用程式之電腦上的字型。  
  
-或- 
 <paramref name="name" /> 會指定不是 TrueType 字型的字型。</exception>
    </member>
    <member name="M:System.Drawing.FontFamily.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.FontFamily" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.Equals(System.Object)">
      <summary>指出指定的物件是否為 <see cref="T:System.Drawing.FontFamily" />，並且是否和這個 <see cref="T:System.Drawing.FontFamily" /> 相同。</summary>
      <param name="obj">要測試的物件。</param>
      <returns>如果 <paramref name="obj" /> 是 <see cref="T:System.Drawing.FontFamily" /> 並且與這個 <see cref="T:System.Drawing.FontFamily" /> 相同，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)">
      <summary>傳回指定的樣式之 <see cref="T:System.Drawing.FontFamily" /> 的方格上移 (單位為設計單位)。</summary>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" />，包含字型的樣式資訊。</param>
      <returns>使用指定之 <see cref="T:System.Drawing.FontStyle" /> 的這個 <see cref="T:System.Drawing.FontFamily" /> 的方格上移。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)">
      <summary>傳回指定的樣式之 <see cref="T:System.Drawing.FontFamily" /> 的方格下移 (單位為設計單位)。</summary>
      <param name="style">
        <see cref="T:System.Drawing.FontStyle" />，包含字型的樣式資訊。</param>
      <returns>使用指定之 <see cref="T:System.Drawing.FontFamily" /> 的這個 <see cref="T:System.Drawing.FontStyle" /> 的方格下移度量資訊。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)">
      <summary>取得指定樣式的 Em 方形高度 (單位為字型設計單位)。</summary>
      <param name="style">要取得其 Em 高度的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>Em 方形的高度。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)">
      <summary>傳回陣列，這個陣列含有指定圖形內容可使用的所有 <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
      <param name="graphics">
        <see cref="T:System.Drawing.Graphics" /> 物件，從其中傳回 <see cref="T:System.Drawing.FontFamily" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphics" /> 為 <see langword="null" />。</exception>
      <returns>所指定 <see cref="T:System.Drawing.Graphics" /> 物件可使用的 <see cref="T:System.Drawing.FontFamily" /> 物件陣列。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetHashCode">
      <summary>取得這個 <see cref="T:System.Drawing.FontFamily" /> 的雜湊碼。</summary>
      <returns>這個 <see cref="T:System.Drawing.FontFamily" /> 的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)">
      <summary>傳回指定的樣式之 <see cref="T:System.Drawing.FontFamily" /> 的行距 (單位為設計單位)。 行距是兩連續文字行基準線間的垂直距離。</summary>
      <param name="style">要套用的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>兩個連續文字行之間的距離。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.GetName(System.Int32)">
      <summary>傳回這個 <see cref="T:System.Drawing.FontFamily" /> 的名稱 (使用指定的語言)。</summary>
      <param name="language">傳回名稱所使用的語言。</param>
      <returns>
        <see cref="T:System.String" />，代表這個 <see cref="T:System.Drawing.FontFamily" /> 的名稱 (使用指定的語言)。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)">
      <summary>指示指定的 <see cref="T:System.Drawing.FontStyle" /> 列舉是否可以使用。</summary>
      <param name="style">要測試的 <see cref="T:System.Drawing.FontStyle" />。</param>
      <returns>如果指定的 <see cref="T:System.Drawing.FontStyle" /> 可供使用，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.FontFamily.ToString">
      <summary>將這個 <see cref="T:System.Drawing.FontFamily" /> 轉換為人們可讀取的字串表示。</summary>
      <returns>表示這個 <see cref="T:System.Drawing.FontFamily" /> 的字串。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Families">
      <summary>傳回陣列，這個陣列含有與目前圖形內容相關聯的所有 <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
      <returns>與目前圖形內容相關聯的 <see cref="T:System.Drawing.FontFamily" /> 物件陣列。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericMonospace">
      <summary>取得泛用等寬 <see cref="T:System.Drawing.FontFamily" />。</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" />，表示泛用等寬字型。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSansSerif">
      <summary>取得泛用 Sans serif <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" /> 物件，代表泛用 Sans Serif 字型。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.GenericSerif">
      <summary>取得泛用 Serif <see cref="T:System.Drawing.FontFamily" />。</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" />，表示泛用 Serif 字型。</returns>
    </member>
    <member name="P:System.Drawing.FontFamily.Name">
      <summary>取得這個 <see cref="T:System.Drawing.FontFamily" /> 的名稱。</summary>
      <returns>
        <see cref="T:System.String" />，代表這個 <see cref="T:System.Drawing.FontFamily" /> 的名稱。</returns>
    </member>
    <member name="T:System.Drawing.FontStyle">
      <summary>指定要套用至文字的樣式資訊。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Bold">
      <summary>粗體文字。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Italic">
      <summary>斜體文字。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Regular">
      <summary>一般文字。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Strikeout">
      <summary>中間有線條經過的文字。</summary>
    </member>
    <member name="F:System.Drawing.FontStyle.Underline">
      <summary>加上底線的文字。</summary>
    </member>
    <member name="T:System.Drawing.Graphics">
      <summary>封裝 GDI+ 繪圖介面。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])">
      <summary>將註解加入至目前的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <param name="data">包含註解的位元組陣列。</param>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer">
      <summary>以這個 <see cref="T:System.Drawing.Graphics" /> 的目前狀態儲存圖形容器，並開啟及使用新的圖形容器。</summary>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，表示在方法呼叫時這個 <see cref="T:System.Drawing.Graphics" /> 的狀態。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>使用這個 <see cref="T:System.Drawing.Graphics" /> 的目前狀態儲存圖形容器，並使用指定之縮放變換開啟和使用新的圖形容器。</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，和 <paramref name="srcrect" /> 參數一起指定容器的縮放變換。</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，和 <paramref name="dstrect" /> 參數一起指定容器的縮放變換。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定容器的測量單位。</param>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，表示在方法呼叫時這個 <see cref="T:System.Drawing.Graphics" /> 的狀態。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>使用這個 <see cref="T:System.Drawing.Graphics" /> 的目前狀態儲存圖形容器，並使用指定之縮放變換開啟和使用新的圖形容器。</summary>
      <param name="dstrect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，和 <paramref name="srcrect" /> 參數一起指定新圖形容器的縮放變換。</param>
      <param name="srcrect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，和 <paramref name="dstrect" /> 參數一起指定新圖形容器的縮放變換。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定容器的測量單位。</param>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，表示在方法呼叫時這個 <see cref="T:System.Drawing.Graphics" /> 的狀態。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.Clear(System.Drawing.Color)">
      <summary>清除整個繪圖介面，並使用指定的背景色彩填滿它。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 結構，表示繪圖介面的背景色彩。</param>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
      <summary>執行從畫面到 <see cref="T:System.Drawing.Graphics" /> 之繪圖介面的色彩資料位元區塊傳輸，與像素矩形相對應。</summary>
      <param name="upperLeftSource">來源矩形左上角的點。</param>
      <param name="upperLeftDestination">目的矩形左上角的點。</param>
      <param name="blockRegionSize">要傳輸的區域大小。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>執行從畫面到 <see cref="T:System.Drawing.Graphics" /> 之繪圖介面的色彩資料位元區塊傳輸，與像素矩形相對應。</summary>
      <param name="upperLeftSource">來源矩形左上角的點。</param>
      <param name="upperLeftDestination">目的矩形左上角的點。</param>
      <param name="blockRegionSize">要傳輸的區域大小。</param>
      <param name="copyPixelOperation">其中一個 <see cref="T:System.Drawing.CopyPixelOperation" /> 值。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成員。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
      <summary>執行從畫面到 <see cref="T:System.Drawing.Graphics" /> 之繪圖介面的色彩資料位元區塊傳輸，與像素矩形相對應。</summary>
      <param name="sourceX">來源矩形左上角之點的 X 座標。</param>
      <param name="sourceY">來源矩形左上角之點的 Y 座標。</param>
      <param name="destinationX">目的矩形左上角之點的 X 座標。</param>
      <param name="destinationY">目的矩形左上角之點的 Y 座標。</param>
      <param name="blockRegionSize">要傳輸的區域大小。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
      <summary>執行從畫面到 <see cref="T:System.Drawing.Graphics" /> 之繪圖介面的色彩資料位元區塊傳輸，與像素矩形相對應。</summary>
      <param name="sourceX">來源矩形左上角之點的 X 座標。</param>
      <param name="sourceY">來源矩形左上角之點的 Y 座標。</param>
      <param name="destinationX">目的矩形左上角之點的 X 座標。</param>
      <param name="destinationY">目的矩形左上角之點的 Y 座標。</param>
      <param name="blockRegionSize">要傳輸的區域大小。</param>
      <param name="copyPixelOperation">其中一個 <see cref="T:System.Drawing.CopyPixelOperation" /> 值。</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="copyPixelOperation" /> 不是 <see cref="T:System.Drawing.CopyPixelOperation" /> 的成員。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">作業失敗。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Graphics" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>繪製弧形，表示由 <see cref="T:System.Drawing.Rectangle" /> 結構所指定的橢圓形的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定弧形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，定義橢圓形的邊界。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到弧形開始點的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向測量之從 <paramref name="startAngle" /> 參數到弧形結束點的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>繪製弧形，表示由 <see cref="T:System.Drawing.RectangleF" /> 結構所指定的橢圓形的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定弧形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，定義橢圓形的邊界。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到弧形開始點的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向測量之從 <paramref name="startAngle" /> 參數到弧形結束點的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 是 <see langword="null" /></exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>繪製弧形，表示由一對座標、寬度和高度所指定的橢圓形的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定弧形的色彩、寬度和樣式。</param>
      <param name="x">矩形左上角的 X 座標，這個矩形定義橢圓形。</param>
      <param name="y">矩形左上角的 Y 座標，這個矩形定義橢圓形。</param>
      <param name="width">定義橢圓形的矩形的寬度。</param>
      <param name="height">定義橢圓形的矩形的高度。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到弧形開始點的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向測量之從 <paramref name="startAngle" /> 參數到弧形結束點的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製弧形，表示由一對座標、寬度和高度所指定的橢圓形的一部分。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定弧形的色彩、寬度和樣式。</param>
      <param name="x">矩形左上角的 X 座標，這個矩形定義橢圓形。</param>
      <param name="y">矩形左上角的 Y 座標，這個矩形定義橢圓形。</param>
      <param name="width">定義橢圓形的矩形的寬度。</param>
      <param name="height">定義橢圓形的矩形的高度。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到弧形開始點的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向測量之從 <paramref name="startAngle" /> 參數到弧形結束點的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>繪製由四個 <see cref="T:System.Drawing.Point" /> 結構定義的貝茲曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" /> 結構，決定曲線的色彩、寬度和樣式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> 結構，表示曲線的開始點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> 結構，表示曲線的第一個控制點。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.Point" /> 結構，表示曲線的第二個控制點。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.Point" /> 結構，表示曲線的結束點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>繪製由四個 <see cref="T:System.Drawing.PointF" /> 結構定義的貝茲曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> 結構，表示曲線的開始點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> 結構，表示曲線的第一個控制點。</param>
      <param name="pt3">
        <see cref="T:System.Drawing.PointF" /> 結構，表示曲線的第二個控制點。</param>
      <param name="pt4">
        <see cref="T:System.Drawing.PointF" /> 結構，表示曲線的結束點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製貝茲曲線，該曲線是由表示各點的四個座標排序配對所定義。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="x1">曲線開始點的 X 軸座標。</param>
      <param name="y1">曲線開始點的 Y 軸座標。</param>
      <param name="x2">曲線第一個控制點的 X 座標。</param>
      <param name="y2">曲線第一個控制點的 Y 座標。</param>
      <param name="x3">曲線第二個控制點的 X 座標。</param>
      <param name="y3">曲線第二個控制點的 Y 座標。</param>
      <param name="x4">曲線結束點的 X 座標。</param>
      <param name="y4">曲線結束點的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>從 <see cref="T:System.Drawing.Point" /> 結構陣列繪製一系列的貝茲曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，此結構表示決定曲線的點。 在這個陣列中的點數應該是 3 的倍數加 1，例如 4、7 或 10。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>從 <see cref="T:System.Drawing.PointF" /> 結構陣列繪製一系列的貝茲曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，此結構表示決定曲線的點。 在這個陣列中的點數應該是 3 的倍數加 1，例如 4、7 或 10。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>繪製由 <see cref="T:System.Drawing.Point" /> 結構陣列定義的封閉的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和高度。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的張力，繪製由 <see cref="T:System.Drawing.Point" /> 結構定義的封閉基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和高度。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。 這個參數是必要的，但是會被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>繪製由 <see cref="T:System.Drawing.PointF" /> 結構陣列定義的封閉的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和高度。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的張力，繪製由 <see cref="T:System.Drawing.PointF" /> 結構定義的封閉基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和高度。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。 這個參數是必要的，但是會被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>繪製穿過指定陣列的 <see cref="T:System.Drawing.Point" /> 結構的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和高度。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
      <summary>使用指定的張力，繪製穿過指定陣列的 <see cref="T:System.Drawing.Point" /> 結構的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <param name="offset">從 <paramref name="points" /> 參數陣列第一個元素到曲線開始點的位移。</param>
      <param name="numberOfSegments">要在曲線中包括的開始點後的線段數目。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
      <summary>使用指定的張力，繪製穿過指定陣列的 <see cref="T:System.Drawing.Point" /> 結構的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>繪製穿過指定陣列的 <see cref="T:System.Drawing.PointF" /> 結構的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
      <summary>繪製穿過指定陣列的 <see cref="T:System.Drawing.PointF" /> 結構的基本曲線。 會從陣列開頭位移開始繪製。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <param name="offset">從 <paramref name="points" /> 參數陣列第一個元素到曲線開始點的位移。</param>
      <param name="numberOfSegments">要在曲線中包括的開始點後的線段數目。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>使用指定的張力，繪製穿過指定陣列的 <see cref="T:System.Drawing.PointF" /> 結構的基本曲線。 會從陣列開頭位移開始繪製。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <param name="offset">從 <paramref name="points" /> 參數陣列第一個元素到曲線開始點的位移。</param>
      <param name="numberOfSegments">要在曲線中包括的開始點後的線段數目。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
      <summary>使用指定的張力，繪製穿過指定陣列的 <see cref="T:System.Drawing.PointF" /> 結構的基本曲線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定曲線的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，此結構表示定義曲線的點。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>繪製由界限 <see cref="T:System.Drawing.Rectangle" /> 結構指定的橢圓形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定橢圓形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，定義橢圓形的邊界。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
      <summary>繪製由界限 <see cref="T:System.Drawing.RectangleF" /> 定義的橢圓形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定橢圓形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，定義橢圓形的邊界。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>繪製由矩形左上角、高度和寬度的座標指定之週框所定義的橢圓形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定橢圓形的色彩、寬度和樣式。</param>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製由一對座標、高度和寬度所指定的週框定義的橢圓形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定橢圓形的色彩、寬度和樣式。</param>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>在 <see cref="T:System.Drawing.Rectangle" /> 結構指定的區域中，繪製由指定之 <see cref="T:System.Drawing.Icon" /> 表示的影像。</summary>
      <param name="icon">要繪製的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定在顯示介面上產生影像的位置和大小。 包含在 <paramref name="icon" /> 參數中的影像會縮放到這個矩形區域的維度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>在指定的座標處，繪製由指定之 <see cref="T:System.Drawing.Icon" /> 所表示的影像。</summary>
      <param name="icon">要繪製的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
      <summary>繪製由指定之 <see cref="T:System.Drawing.Icon" /> 表示的影像，但不縮放影像。</summary>
      <param name="icon">要繪製的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="targetRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定產生影像的位置和大小。 影像不會縮放以符合這個矩形，而是保留它的原始大小。 如果影像比矩形大，則它會裁剪以適合置入此矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="icon" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
      <summary>使用原始的實體大小，在指定位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> 結構，指定繪製影像的左上角位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
      <summary>以指定的形狀和大小，在指定之位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>在指定的位置，繪製指定之 <see cref="T:System.Drawing.Image" /> 的指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法。</param>
      <param name="callbackData">數值，指定 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派在檢查是否停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法時要使用的額外資料。</param>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
      <summary>使用原始的實體大小，在指定位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 結構，表示繪製影像的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
      <summary>以指定的形狀和大小，在指定之位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destPoints">定義平行四邊形之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法。</param>
      <param name="callbackData">數值，指定 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派在檢查是否停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> 方法時要使用的額外資料。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>以指定的大小，在指定的位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法。</param>
      <param name="callbackData">數值，指定 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派在檢查是否停止執行 <see langword="DrawImage" /> 方法時要使用的額外資料。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> 方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcX">要繪製之來源影像部分左上角的 X 座標。</param>
      <param name="srcY">要繪製之來源影像部分左上角的 Y 座標。</param>
      <param name="srcWidth">要繪製之來源影像部分的寬度。</param>
      <param name="srcHeight">要繪製之來源影像部分的高度。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定用來判斷來源矩形的測量單位。</param>
      <param name="imageAttrs">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定 <paramref name="image" /> 物件的重新著色和 Gamma 資訊。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派，在繪製影像期間指定要呼叫的方法。 這個方法會經常被呼叫，以檢查是否要根據應用程式所決定的準則來停止執行 <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> 方法。</param>
      <param name="callbackData">數值，指定 <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> 委派在檢查是否停止執行 <see langword="DrawImage" /> 方法時要使用的額外資料。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>以指定的大小，在指定的位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定繪製影像的位置和大小。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>以指定的大小，在指定的位置繪製所指定 <see cref="T:System.Drawing.Image" /> 之指定部分。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定繪製影像的位置和大小。 縮放影像來符合矩形。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>使用原始的實體大小將指定的影像繪製於座標對所指定的位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
      <summary>將影像的一部分繪製於指定位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定 <paramref name="image" /> 物件要繪製的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>以指定的大小，在指定的位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <param name="width">繪製影像的寬度。</param>
      <param name="height">繪製影像的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
      <summary>使用原始的實體大小，在指定位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>將影像的一部分繪製於指定位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定要繪製之 <see cref="T:System.Drawing.Image" /> 的部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉的成員，指定 <paramref name="srcRect" /> 參數所使用的測量單位。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>以指定的大小，在指定的位置繪製指定的 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <param name="width">繪製影像的寬度。</param>
      <param name="height">繪製影像的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
      <summary>使用原始的實體大小將指定影像繪製於指定位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="point">
        <see cref="T:System.Drawing.Point" /> 結構，指定繪製影像的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>使用原始的實體大小將指定影像繪製於指定位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" />，指定繪製影像的左上角。 矩形的 X 和 Y 屬性指定左上角。 Width 和 Height 屬性會被忽略。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
      <summary>使用原始的實體大小將指定的影像繪製於座標對所指定的位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用原始的實體大小將指定影像繪製於指定位置。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="x">繪製影像左上角的 X 座標。</param>
      <param name="y">所繪製影像左上角的 Y 座標。</param>
      <param name="width">未使用。</param>
      <param name="height">未使用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>必要時，繪製指定的影像，而不需要加以縮放或裁剪以容納在指定的矩形中。</summary>
      <param name="image">要繪製的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="rect">要在其中繪製影像的 <see cref="T:System.Drawing.Rectangle" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
      <summary>繪製連接兩個 <see cref="T:System.Drawing.Point" /> 結構的直線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定直線的色彩、寬度和樣式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.Point" /> 結構，表示要連接的第一個點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.Point" /> 結構，表示要連接的第二個點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>繪製連接兩個 <see cref="T:System.Drawing.PointF" /> 結構的直線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定直線的色彩、寬度和樣式。</param>
      <param name="pt1">
        <see cref="T:System.Drawing.PointF" /> 結構，表示要連接的第一個點。</param>
      <param name="pt2">
        <see cref="T:System.Drawing.PointF" /> 結構，表示要連接的第二個點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>繪製連接由座標對所指定的兩個點之直線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定直線的色彩、寬度和樣式。</param>
      <param name="x1">第一點的 X 座標。</param>
      <param name="y1">第一點的 Y 座標。</param>
      <param name="x2">第二點的 X 座標。</param>
      <param name="y2">第二點的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製連接由座標對所指定的兩個點之直線。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定直線的色彩、寬度和樣式。</param>
      <param name="x1">第一點的 X 座標。</param>
      <param name="y1">第一點的 Y 座標。</param>
      <param name="x2">第二點的 X 座標。</param>
      <param name="y2">第二點的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>繪製連接 <see cref="T:System.Drawing.Point" /> 結構陣列的一系列直線線段。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定線段的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，此結構表示要連接的點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>繪製連接 <see cref="T:System.Drawing.PointF" /> 結構陣列的一系列直線線段。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定線段的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，此結構表示要連接的點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>繪製 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定路徑的色彩、寬度和樣式。</param>
      <param name="path">要繪製的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>繪製由 <see cref="T:System.Drawing.Rectangle" /> 結構和兩條放射線指定的橢圓形所定義的派形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定派形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示定義派形的來源橢圓形之周框。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
      <summary>繪製由 <see cref="T:System.Drawing.RectangleF" /> 結構和兩條放射線指定的橢圓形所定義的派形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定派形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示定義派形的來源橢圓形之周框。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>繪製由橢圓形所定義的派形，該橢圓形是由座標對、寬度、高度和兩條放射線所指定。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定派形的色彩、寬度和樣式。</param>
      <param name="x">週框左上角的 X 座標，這個週框定義派形的來源橢圓形。</param>
      <param name="y">周框左上角的 X 座標，這個周框定義派形的來源橢圓形。</param>
      <param name="width">周框的寬度，這個周框定義派形的來源橢圓形。</param>
      <param name="height">週框的高度，這個週框定義派形的來源橢圓形。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製由橢圓形所定義的派形，該橢圓形是由座標對、寬度、高度和兩條放射線所指定。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定派形的色彩、寬度和樣式。</param>
      <param name="x">週框左上角的 X 座標，這個週框定義派形的來源橢圓形。</param>
      <param name="y">周框左上角的 X 座標，這個周框定義派形的來源橢圓形。</param>
      <param name="width">周框的寬度，這個周框定義派形的來源橢圓形。</param>
      <param name="height">週框的高度，這個週框定義派形的來源橢圓形。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
      <summary>繪製由 <see cref="T:System.Drawing.Point" /> 結構陣列定義的多邊形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定多邊形的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示多邊形的頂點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
      <summary>繪製由 <see cref="T:System.Drawing.PointF" /> 結構陣列定義的多邊形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定多邊形的色彩、寬度和樣式。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示多邊形的頂點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
      <summary>繪製由 <see cref="T:System.Drawing.Rectangle" /> 結構指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定矩形的色彩、寬度和樣式。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示要繪製的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>繪製由座標對、寬度和高度所指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定矩形的色彩、寬度和樣式。</param>
      <param name="x">要繪製之矩形左上角的 X 座標。</param>
      <param name="y">要繪製之矩形左上角的 Y 座標。</param>
      <param name="width">要繪製的矩形的寬度。</param>
      <param name="height">要繪製的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>繪製由座標對、寬度和高度所指定的矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定矩形的色彩、寬度和樣式。</param>
      <param name="x">要繪製之矩形左上角的 X 座標。</param>
      <param name="y">要繪製之矩形左上角的 Y 座標。</param>
      <param name="width">要繪製的矩形的寬度。</param>
      <param name="height">要繪製的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
      <summary>繪製由 <see cref="T:System.Drawing.Rectangle" /> 結構所指定的一系列矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定矩形外框的色彩、寬度和樣式。</param>
      <param name="rects">
        <see cref="T:System.Drawing.Rectangle" /> 結構的陣列，表示要繪製的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="rects" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是長度為零的陣列。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
      <summary>繪製由 <see cref="T:System.Drawing.RectangleF" /> 結構所指定的一系列矩形。</summary>
      <param name="pen">
        <see cref="T:System.Drawing.Pen" />，決定矩形外框的色彩、寬度和樣式。</param>
      <param name="rects">
        <see cref="T:System.Drawing.RectangleF" /> 結構的陣列，表示要繪製的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="rects" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是長度為零的陣列。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
      <summary>使用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 物件，將指定的文字字串繪製於指定的位置。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 結構，指定繪製文字的左上角。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>使用指定之 <see cref="T:System.Drawing.Brush" /> 的格式化屬性，以指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 物件，在指定之位置繪製指定的文字字串。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="point">
        <see cref="T:System.Drawing.PointF" /> 結構，指定繪製文字的左上角。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定套用到所繪製文字的格式化屬性，例如，行距和對齊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>使用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 物件，將指定的文字字串繪製在指定的矩形中。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定繪製文字的位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>使用指定之 <see cref="T:System.Drawing.Brush" /> 的格式化屬性，以指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 物件，在指定之矩形內繪製指定的文字字串。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="layoutRectangle">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定繪製文字的位置。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定套用到所繪製文字的格式化屬性，例如，行距和對齊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
      <summary>使用指定的 <see cref="T:System.Drawing.Brush" /> 和 <see cref="T:System.Drawing.Font" /> 物件，將指定的文字字串繪製於指定的位置。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="x">繪製文字左上角的 X 座標。</param>
      <param name="y">繪製文字左上角的 Y 座標。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
      <summary>使用指定之 <see cref="T:System.Drawing.Brush" /> 的格式化屬性，以指定的 <see cref="T:System.Drawing.Font" /> 和 <see cref="T:System.Drawing.StringFormat" /> 物件，在指定之位置繪製指定的文字字串。</summary>
      <param name="s">要繪製的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定所繪製文字的色彩和紋理。</param>
      <param name="x">繪製文字左上角的 X 座標。</param>
      <param name="y">繪製文字左上角的 Y 座標。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，指定套用到所繪製文字的格式化屬性，例如，行距和對齊。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="s" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
      <summary>關閉目前的圖形容器，並將這個 <see cref="T:System.Drawing.Graphics" /> 的狀態還原成藉由呼叫 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法所儲存的狀態。</summary>
      <param name="container">
        <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />，表示這個方法還原的容器。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形中的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.Point" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形中的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.Point" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形中的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的點上顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoint">
        <see cref="T:System.Drawing.PointF" /> 結構，指定所繪製中繼檔的左上角位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形中的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的平行四邊形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destPoints">定義平行四邊型之三個 <see cref="T:System.Drawing.PointF" /> 結構的陣列，會決定所繪製中繼檔的大小和位置。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 中的資料錄一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將指定之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的記錄一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
      <summary>將所選取矩形中的資料錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以便在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="srcUnit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
      <summary>將選取之矩形的記錄從 <see cref="T:System.Drawing.Imaging.Metafile" /> 一次一筆地傳送至回呼方法，以使用指定之影像屬性在指定的矩形中顯示。</summary>
      <param name="metafile">要列舉的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <param name="destRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定所繪製中繼檔的位置和大小。</param>
      <param name="srcRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定與其左上角相關且要繪製之中繼檔部分。</param>
      <param name="unit">
        <see cref="T:System.Drawing.GraphicsUnit" /> 列舉型別的成員，指定用來判斷由 <paramref name="srcRect" /> 參數指定之矩形所包含之中繼檔部分的測量單位。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> 委派，指定中繼檔記錄被傳送至的方法。</param>
      <param name="callbackData">必要但被忽略的內部指標。 您可以為這個參數傳入 <see cref="F:System.IntPtr.Zero" />。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" />，指定所繪製影像的影像屬性資訊。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)">
      <summary>更新這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，以排除由 <see cref="T:System.Drawing.Rectangle" /> 結構所指定的區域。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，指定要從裁剪區域排除的矩形。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)">
      <summary>更新這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，以排除由 <see cref="T:System.Drawing.Region" /> 所指定的區域。</summary>
      <param name="region">
        <see cref="T:System.Drawing.Region" />，指定要從裁剪區域排除的區域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>填滿由 <see cref="T:System.Drawing.Point" /> 結構陣列所定義之封閉的基本曲線內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填滿模式，填滿 <see cref="T:System.Drawing.Point" /> 結構陣列所定義之封閉式基本曲線的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>使用指定的填滿模式和張力，填滿 <see cref="T:System.Drawing.Point" /> 結構陣列所定義之封閉式基本曲線的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.Point" /> 結構陣列。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>填滿由 <see cref="T:System.Drawing.PointF" /> 結構陣列所定義之封閉的基本曲線內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填滿模式，填滿 <see cref="T:System.Drawing.PointF" /> 結構陣列所定義之封閉式基本曲線的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
      <summary>使用指定的填滿模式和張力，填滿 <see cref="T:System.Drawing.PointF" /> 結構陣列所定義之封閉式基本曲線的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">定義曲線的 <see cref="T:System.Drawing.PointF" /> 結構陣列。</param>
      <param name="fillmode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉的成員，決定填滿曲線的方法。</param>
      <param name="tension">大於或等於 0.0F 的值，指定曲線的張力。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>填滿由 <see cref="T:System.Drawing.Rectangle" /> 結構指定的周框所定義的橢圓形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示定義橢圓形的周框。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>填滿由 <see cref="T:System.Drawing.RectangleF" /> 結構指定的周框所定義的橢圓形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示定義橢圓形的周框。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填滿由座標對、寬度和高度指定的周框所定義的橢圓形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>填滿由座標對、寬度和高度指定的周框所定義的橢圓形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">週框左上角的 X 軸座標，這個週框定義橢圓形。</param>
      <param name="y">週框左上角的 Y 軸座標，這個週框定義橢圓形。</param>
      <param name="width">週框的寬度，這個週框定義橢圓形。</param>
      <param name="height">週框的高度，這個週框定義橢圓形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
      <summary>填滿 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，表示要填滿的路徑。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
      <summary>填滿由 <see cref="T:System.Drawing.RectangleF" /> 結構和兩條放射線指定的橢圓形所定義的派形區段的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示定義派形區段的來源橢圓形之周框。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形區段的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形區段的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填滿由座標對、寬度、高度和兩條放射線指定的橢圓形所定義的派形區域內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">周框左上角的 X 座標，這個周框定義派形區段的來源橢圓形。</param>
      <param name="y">周框左上角的 X 座標，這個周框定義派形區段的來源橢圓形。</param>
      <param name="width">周框的寬度，這個周框定義派形區段的來源橢圓形。</param>
      <param name="height">周框的高度，這個周框定義派形區段的來源橢圓形。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形區段的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形區段的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>填滿由座標對、寬度、高度和兩條放射線指定的橢圓形所定義的派形區域內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">周框左上角的 X 座標，這個周框定義派形區段的來源橢圓形。</param>
      <param name="y">周框左上角的 X 座標，這個周框定義派形區段的來源橢圓形。</param>
      <param name="width">周框的寬度，這個周框定義派形區段的來源橢圓形。</param>
      <param name="height">周框的高度，這個周框定義派形區段的來源橢圓形。</param>
      <param name="startAngle">以度為單位，依順時針方向測量之從 X 軸到派形區段的第一個邊的角度。</param>
      <param name="sweepAngle">以度為單位，依順時針方向從 <paramref name="startAngle" /> 參數到派形區段的第二個邊的角度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
      <summary>填滿由 <see cref="T:System.Drawing.Point" /> 結構指定的點陣列所定義的多邊形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示要填滿的多邊形的頂點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填滿模式，填滿由 <see cref="T:System.Drawing.Point" /> 結構指定的點陣列所定義的多邊形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示要填滿的多邊形的頂點。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別的成員，決定填滿的樣式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
      <summary>填滿由 <see cref="T:System.Drawing.PointF" /> 結構指定的點陣列所定義的多邊形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示要填滿的多邊形的頂點。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
      <summary>使用指定的填滿模式，填滿由 <see cref="T:System.Drawing.PointF" /> 結構指定的點陣列所定義的多邊形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="points">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示要填滿的多邊形的頂點。</param>
      <param name="fillMode">
        <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列舉型別的成員，決定填滿的樣式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="points" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
      <summary>填滿由 <see cref="T:System.Drawing.Rectangle" /> 結構表示的矩形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示要填滿的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
      <summary>填滿由 <see cref="T:System.Drawing.RectangleF" /> 結構表示的矩形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示要填滿的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>填滿由座標對、寬度和高度指定的矩形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">要填滿之矩形左上角的 X 座標。</param>
      <param name="y">要填滿之矩形左上角的 Y 座標。</param>
      <param name="width">要填滿的矩形的寬度。</param>
      <param name="height">要填滿的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>填滿由座標對、寬度和高度指定的矩形內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="x">要填滿之矩形左上角的 X 座標。</param>
      <param name="y">要填滿之矩形左上角的 Y 座標。</param>
      <param name="width">要填滿的矩形的寬度。</param>
      <param name="height">要填滿的矩形的高度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
      <summary>填滿由 <see cref="T:System.Drawing.Rectangle" /> 結構表示的一系列矩形的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rects">
        <see cref="T:System.Drawing.Rectangle" /> 結構的陣列，表示要填滿的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="rects" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rects" /> 是長度為零的陣列。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
      <summary>填滿由 <see cref="T:System.Drawing.RectangleF" /> 結構表示的一系列矩形的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="rects">
        <see cref="T:System.Drawing.RectangleF" /> 結構的陣列，表示要填滿的矩形。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="rects" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="Rects" /> 是長度為零的陣列。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
      <summary>填滿 <see cref="T:System.Drawing.Region" /> 的內部。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定填滿的特性。</param>
      <param name="region">
        <see cref="T:System.Drawing.Region" />，表示要填滿的區域。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="region" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Graphics.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush">
      <summary>強制執行所有暫止圖形作業，並立即傳回而不等待作業完成。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
      <summary>使用在作業完成之前依照指定等待或不等待傳回的方法，來強制執行所有暫止圖形作業。</summary>
      <param name="intention">
        <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 列舉的成員，指定方法是否立即傳回或等待任何現有作業完成。</param>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr)">
      <summary>從指定的裝置內容控制代碼建立新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">裝置內容的控制代碼。</param>
      <returns>這個方法會傳回指定之裝置內容的新 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)">
      <summary>從指定的裝置內容控制代碼和裝置控制代碼，建立新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">裝置內容的控制代碼。</param>
      <param name="hdevice">裝置的控制代碼。</param>
      <returns>這個方法會傳回指定之裝置內容和裝置的新 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)">
      <summary>傳回指定之裝置內容的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hdc">裝置內容的控制代碼。</param>
      <returns>指定之裝置內容的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)">
      <summary>從指定之視窗控制代碼建立新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hwnd">視窗的控點。</param>
      <returns>這個方法會傳回指定之視窗控制代碼的新 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)">
      <summary>為指定之 Windows 控制代碼建立新的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <param name="hwnd">視窗的控點。</param>
      <returns>指定之視窗控制代碼的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)">
      <summary>從指定的 <see cref="T:System.Drawing.Graphics" /> 建立新 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="image">用來建立新 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Exception">
        <paramref name="image" /> 具備索引像素格式或其格式尚未定義。</exception>
      <returns>這個方法會傳回指定之 <see cref="T:System.Drawing.Graphics" /> 的新 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetContextInfo">
      <summary>取得累計圖形內容。</summary>
      <returns>代表累計圖形內容的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHalftonePalette">
      <summary>取得目前的 Windows 半色調調色盤的控制代碼。</summary>
      <returns>指定調色盤控制代碼的內部指標。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetHdc">
      <summary>取得與這個 <see cref="T:System.Drawing.Graphics" /> 關聯之裝置內容的控制代碼。</summary>
      <returns>與這個 <see cref="T:System.Drawing.Graphics" /> 關聯之裝置內容的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)">
      <summary>取得最接近指定的 <see cref="T:System.Drawing.Color" /> 結構的色彩。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 結構，用來尋找符合項目。</param>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，表示最接近以 <paramref name="color" /> 參數所指定的色彩。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域更新為目前裁剪區域和所指定 <see cref="T:System.Drawing.Rectangle" /> 結構的交集。</summary>
      <param name="rect">要和目前裁剪區域交叉的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域更新為目前裁剪區域和所指定 <see cref="T:System.Drawing.RectangleF" /> 結構的交集。</summary>
      <param name="rect">要和目前裁剪區域交叉的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域更新為目前裁剪區域和指定之 <see cref="T:System.Drawing.Region" /> 的交集。</summary>
      <param name="region">要與目前區域交集的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)">
      <summary>指示指定之 <see cref="T:System.Drawing.Point" /> 結構是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="point">要測試可視性的 <see cref="T:System.Drawing.Point" /> 結構。</param>
      <returns>如果 <paramref name="point" /> 參數所指定的點包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)">
      <summary>指示指定之 <see cref="T:System.Drawing.PointF" /> 結構是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="point">要測試可視性的 <see cref="T:System.Drawing.PointF" /> 結構。</param>
      <returns>如果 <paramref name="point" /> 參數所指定的點包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)">
      <summary>指出由 <see cref="T:System.Drawing.Rectangle" /> 結構指定的矩形是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="rect">要測試可視性的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
      <returns>如果 <paramref name="rect" /> 參數所指定的矩形包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)">
      <summary>指出由 <see cref="T:System.Drawing.RectangleF" /> 結構指定的矩形是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="rect">要測試可視性的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
      <returns>如果 <paramref name="rect" /> 參數所指定的矩形包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)">
      <summary>指出由一對座標指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="x">要測試可視性的點的 X 座標。</param>
      <param name="y">要測試可視性的點的 Y 座標。</param>
      <returns>如果 <paramref name="x" /> 和 <paramref name="y" /> 參數所定義的點包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>指出由一對座標、寬度和高度指定的矩形，是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="x">要測試可視性之矩形左上角的 X 座標。</param>
      <param name="y">要測試可視性之矩形左上角的 Y 座標。</param>
      <param name="width">要測試可視性之矩形的寬度。</param>
      <param name="height">要測試可視性之矩形的高度。</param>
      <returns>如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 參數所定義之矩形包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)">
      <summary>指出由一對座標指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="x">要測試可視性的點的 X 座標。</param>
      <param name="y">要測試可視性的點的 Y 座標。</param>
      <returns>如果 <paramref name="x" /> 和 <paramref name="y" /> 參數所定義的點包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>指出由一對座標、寬度和高度指定的矩形，是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中。</summary>
      <param name="x">要測試可視性之矩形左上角的 X 座標。</param>
      <param name="y">要測試可視性之矩形左上角的 Y 座標。</param>
      <param name="width">要測試可視性之矩形的寬度。</param>
      <param name="height">要測試可視性之矩形的高度。</param>
      <returns>如果 <paramref name="x" />、<paramref name="y" />、<paramref name="width" /> 和 <paramref name="height" /> 參數所定義之矩形包含在這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域中，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
      <summary>取得 <see cref="T:System.Drawing.Region" /> 物件的陣列，每個陣列框住指定字串中字元位置的範圍。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="layoutRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，指定字串的配置矩形。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，表示字串的格式設定資訊，例如行距。</param>
      <returns>這個方法傳回 <see cref="T:System.Drawing.Region" /> 物件的陣列，每個物件框住指定字串中字元位置的範圍。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 物件繪製時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數所指定的字串以 <paramref name="text" /> 參數繪製時的大小，而使用的單位是由 <paramref name="font" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 繪製並以指定的 <see cref="T:System.Drawing.StringFormat" /> 設定格式時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="origin">
        <see cref="T:System.Drawing.PointF" /> 結構，表示字串的左上角。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，表示字串的格式設定資訊，例如行距。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數所指定的字串以 <paramref name="text" /> 參數和 <paramref name="font" /> 參數繪製時的大小，而使用的單位是由 <paramref name="stringFormat" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
      <summary>在指定之配置區域中使用指定的 <see cref="T:System.Drawing.Font" /> 繪製時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 結構，指定文字的最大配置區域。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數所指定的字串以 <paramref name="text" /> 參數繪製時的大小，而使用的單位是由 <paramref name="font" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 繪製並以指定的 <see cref="T:System.Drawing.StringFormat" /> 設定格式時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 結構，指定文字的最大配置區域。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，表示字串的格式設定資訊，例如行距。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數中所指定的字串以 <paramref name="text" /> 參數和 <paramref name="font" /> 參數繪製時的大小，而使用的單位是由 <paramref name="stringFormat" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 繪製並以指定的 <see cref="T:System.Drawing.StringFormat" /> 設定格式時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="layoutArea">
        <see cref="T:System.Drawing.SizeF" /> 結構，指定文字的最大配置區域。</param>
      <param name="stringFormat">
        <see cref="T:System.Drawing.StringFormat" />，表示字串的格式設定資訊，例如行距。</param>
      <param name="charactersFitted">字串中的字元數。</param>
      <param name="linesFilled">字串中的文字行數。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <paramref name="text" /> 參數的字串以 <paramref name="font" /> 參數和 <paramref name="stringFormat" /> 參數繪製時的大小，而使用的單位是由 <see cref="P:System.Drawing.Graphics.PageUnit" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 物件繪製時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的格式。</param>
      <param name="width">字串的最大寬度，以像素為單位。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數中所指定的字串以 <paramref name="text" /> 參數繪製時的大小，而使用的單位是由 <paramref name="font" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
      <summary>以指定的 <see cref="T:System.Drawing.Font" /> 繪製並以指定的 <see cref="T:System.Drawing.StringFormat" /> 設定格式時，測量指定的字串。</summary>
      <param name="text">要測量的字串。</param>
      <param name="font">
        <see cref="T:System.Drawing.Font" />，定義字串的文字格式。</param>
      <param name="width">字串的最大寬度。</param>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" />，表示字串的格式設定資訊，例如行距。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="font" /> 為 <see langword="null" />。</exception>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.SizeF" /> 結構，表示 <see cref="P:System.Drawing.Graphics.PageUnit" /> 參數中所指定的字串以 <paramref name="text" /> 參數和 <paramref name="font" /> 參數繪製時的大小，而使用的單位是由 <paramref name="stringFormat" /> 屬性所指定。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的自然變換和指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件相乘。</summary>
      <param name="matrix">乘以自然變換的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的自然變換和指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 以指定的順序相乘。</summary>
      <param name="matrix">乘以自然變換的 4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉的成員，決定相乘的順序。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc">
      <summary>釋放由先前呼叫這個 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法所取得的裝置內容控制代碼。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)">
      <summary>釋放由先前呼叫這個 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法所取得的裝置內容控制代碼。</summary>
      <param name="hdc">藉由先前呼叫這個 <see cref="T:System.Drawing.Graphics" /> 之 <see cref="M:System.Drawing.Graphics.GetHdc" /> 方法所取得的裝置內容控制代碼。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)">
      <summary>釋放裝置內容的控制代碼。</summary>
      <param name="hdc">裝置內容的控制代碼。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ResetClip">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域重設為無限區域。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.ResetTransform">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的自然變換矩陣重設為識別矩陣。</summary>
    </member>
    <member name="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的狀態，還原成 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 所代表的狀態。</summary>
      <param name="gstate">
        <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，表示要用來還原這個 <see cref="T:System.Drawing.Graphics" /> 的狀態。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single)">
      <summary>將指定的旋轉套用至這個 <see cref="T:System.Drawing.Graphics" /> 的變換矩陣。</summary>
      <param name="angle">旋轉的角度，以度為單位。</param>
    </member>
    <member name="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，將指定之旋轉套用至這個 <see cref="T:System.Drawing.Graphics" /> 的變換矩陣。</summary>
      <param name="angle">旋轉的角度，以度為單位。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉的成員，指定旋轉是附加到矩陣變換之前或之後。</param>
    </member>
    <member name="M:System.Drawing.Graphics.Save">
      <summary>儲存這個 <see cref="T:System.Drawing.Graphics" /> 的目前狀態，並使用 <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> 識別儲存的狀態。</summary>
      <returns>這個方法會傳回 <see cref="T:System.Drawing.Drawing2D.GraphicsState" />，表示這個 <see cref="T:System.Drawing.Graphics" /> 的儲存狀態。</returns>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>透過將指定的縮放作業放置在物件的轉換矩陣之前，將作業套用至此 <see cref="T:System.Drawing.Graphics" /> 的轉換矩陣。</summary>
      <param name="sx">X 方向的縮放比例。</param>
      <param name="sy">Y 方向的縮放比例。</param>
    </member>
    <member name="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，將指定之縮放作業套用至這個 <see cref="T:System.Drawing.Graphics" /> 的變換矩陣。</summary>
      <param name="sx">X 方向的縮放比例。</param>
      <param name="sy">Y 方向的縮放比例。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉的成員，指定縮放作業是附加到變換矩陣之前或之後。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 之裁剪區域設定為指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，表示新的裁剪區域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為指定之作業的結果，該作業組合了目前裁剪區域和指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</summary>
      <param name="path">要組合的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列舉的成員，指定要使用的組合作業。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域設定為所指定 <see cref="T:System.Drawing.Graphics" /> 的 <see langword="Clip" /> 屬性。</summary>
      <param name="g">要從其中取得新裁剪區域的 <see cref="T:System.Drawing.Graphics" />。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為目前裁剪區域和指定的 <see cref="T:System.Drawing.Graphics" /> 之 <see cref="P:System.Drawing.Graphics.Clip" /> 屬性的指定組合作業結果。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，指定要組合的裁剪區域。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列舉的成員，指定要使用的組合作業。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為 <see cref="T:System.Drawing.Rectangle" /> 結構所指定的矩形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示新裁剪區域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為指定之作業的結果，該作業組合了目前裁剪區域和 <see cref="T:System.Drawing.Rectangle" /> 結構所指定的矩形。</summary>
      <param name="rect">要組合的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列舉的成員，指定要使用的組合作業。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為 <see cref="T:System.Drawing.RectangleF" /> 結構所指定的矩形。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示新裁剪區域。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為指定之作業的結果，該作業組合了目前裁剪區域和 <see cref="T:System.Drawing.RectangleF" /> 結構所指定的矩形。</summary>
      <param name="rect">要組合的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列舉的成員，指定要使用的組合作業。</param>
    </member>
    <member name="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)">
      <summary>將這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域，設定為指定之作業的結果，該作業組合了目前裁剪區域和指定的 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="region">要組合的 <see cref="T:System.Drawing.Region" />。</param>
      <param name="combineMode">
        <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列舉的成員，指定要使用的組合作業。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
      <summary>使用這個 <see cref="T:System.Drawing.Graphics" /> 的目前全局和頁面轉換，將點陣列從一個座標空間轉換到另一個座標空間。</summary>
      <param name="destSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列舉的成員，指定目的座標空間。</param>
      <param name="srcSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列舉的成員，指定來源座標空間。</param>
      <param name="pts">
        <see cref="T:System.Drawing.Point" /> 結構的陣列，表示要變換的點。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
      <summary>使用這個 <see cref="T:System.Drawing.Graphics" /> 的目前全局和頁面轉換，將點陣列從一個座標空間轉換到另一個座標空間。</summary>
      <param name="destSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列舉的成員，指定目的座標空間。</param>
      <param name="srcSpace">
        <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列舉的成員，指定來源座標空間。</param>
      <param name="pts">
        <see cref="T:System.Drawing.PointF" /> 結構的陣列，表示要變換的點。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)">
      <summary>透過所指定之水平和垂直方向的量，轉譯這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域。</summary>
      <param name="dx">這個轉譯的 X 座標。</param>
      <param name="dy">這個轉譯的 Y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)">
      <summary>透過所指定之水平和垂直方向的量，轉譯這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域。</summary>
      <param name="dx">這個轉譯的 X 座標。</param>
      <param name="dy">這個轉譯的 Y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>透過將指定的轉譯放置在此 <see cref="T:System.Drawing.Graphics" /> 的轉換矩陣之前，變更座標系統的原點。</summary>
      <param name="dx">這個轉譯的 X 座標。</param>
      <param name="dy">這個轉譯的 Y 座標。</param>
    </member>
    <member name="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，將指定之轉換套用至這個 <see cref="T:System.Drawing.Graphics" /> 的變換矩陣，以變更座標系統的原點。</summary>
      <param name="dx">這個轉譯的 X 座標。</param>
      <param name="dy">這個轉譯的 Y 座標。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉的成員，指定轉換是附加到變換矩陣之前或之後。</param>
    </member>
    <member name="P:System.Drawing.Graphics.Clip">
      <summary>取得或設定 <see cref="T:System.Drawing.Region" />，它會限制這個 <see cref="T:System.Drawing.Graphics" /> 的繪圖區域。</summary>
      <returns>
        <see cref="T:System.Drawing.Region" />，它會限制這個 <see cref="T:System.Drawing.Graphics" /> 目前可用於繪圖的部分。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.ClipBounds">
      <summary>取得 <see cref="T:System.Drawing.RectangleF" /> 結構，此結構會框住這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.Graphics" /> 之裁剪區域的週框。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingMode">
      <summary>取得值，指定如何將複合影像繪製至這個 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>這個屬性指定 <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 列舉型別的成員。 預設為 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.CompositingQuality">
      <summary>取得或設定繪製至這個 <see cref="T:System.Drawing.Graphics" /> 之複合影像的呈現品質。</summary>
      <returns>這個屬性指定 <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 列舉型別的成員。 預設為 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiX">
      <summary>取得這個 <see cref="T:System.Drawing.Graphics" /> 的水平解析度。</summary>
      <returns>這個 <see cref="T:System.Drawing.Graphics" /> 所支援的水平解析度的值，以 DPI 為單位。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.DpiY">
      <summary>取得這個 <see cref="T:System.Drawing.Graphics" /> 的垂直解析度。</summary>
      <returns>這個 <see cref="T:System.Drawing.Graphics" /> 所支援的垂直解析度的值，以 DPI 為單位。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.InterpolationMode">
      <summary>取得或設定與這個 <see cref="T:System.Drawing.Graphics" /> 關聯的插補模式。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsClipEmpty">
      <summary>取得值，指出這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域是否為空的。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Graphics" /> 的裁剪區域是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.IsVisibleClipEmpty">
      <summary>取得值，指出這個 <see cref="T:System.Drawing.Graphics" /> 的可見裁剪區域是否為空的。</summary>
      <returns>如果這個 <see cref="T:System.Drawing.Graphics" /> 之裁剪區域的可見部分是空的，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageScale">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Graphics" /> 的自然單位和畫面單位之間的縮放。</summary>
      <returns>這個屬性指定這個 <see cref="T:System.Drawing.Graphics" /> 的自然單位和畫面單位之間的縮放值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PageUnit">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Graphics" /> 中畫面座標使用的測量單位。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Graphics.PageUnit" /> 設定為 <see cref="F:System.Drawing.GraphicsUnit.World" />，這個值不是實體單位。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.GraphicsUnit" /> 值，<see cref="F:System.Drawing.GraphicsUnit.World" /> 除外。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.PixelOffsetMode">
      <summary>取得或設定值，指定在此 <see cref="T:System.Drawing.Graphics" /> 轉譯期間，位移像素的方式。</summary>
      <returns>這個屬性指定 <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 列舉的成員。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.RenderingOrigin">
      <summary>取得或設定這個用於遞色和交錯線筆刷之 <see cref="T:System.Drawing.Graphics" /> 的呈現原點。</summary>
      <returns>
        <see cref="T:System.Drawing.Point" /> 結構，表示每像素 8 位元和每像素 16 位元之遞色處理的遞色原點，並且用來設定交錯線筆刷的原點。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.SmoothingMode">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Graphics" /> 的呈現品質。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextContrast">
      <summary>取得或設定呈現文字的 Gamma 修正值。</summary>
      <returns>用於呈現反鋸齒補償和 ClearType 文字的 Gamma 修正值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.TextRenderingHint">
      <summary>取得或設定與這個 <see cref="T:System.Drawing.Graphics" /> 關聯之文字的呈現模式。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Text.TextRenderingHint" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.Transform">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Graphics" /> 幾何自然轉換的複本。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，代表這個 <see cref="T:System.Drawing.Graphics" /> 的幾何自然轉換。</returns>
    </member>
    <member name="P:System.Drawing.Graphics.VisibleClipBounds">
      <summary>取得這個 <see cref="T:System.Drawing.Graphics" /> 之可見裁剪區域的週框。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 結構，代表這個 <see cref="T:System.Drawing.Graphics" /> 之可見裁剪區域的週框。</returns>
    </member>
    <member name="T:System.Drawing.Graphics.DrawImageAbort">
      <summary>提供回呼 (Callback) 方法來決定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該在何時提前取消執行並停止繪製影像。</summary>
      <param name="callbackdata">內部指標，指定回呼方法的資料。 這個參數不會由所有的 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 多載來傳遞。 您可以藉由檢查 <see cref="F:System.IntPtr.Zero" /> 值來測試它是否存在。</param>
      <returns>如果這個方法決定 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該提前停止執行，則這個方法會傳回 <see langword="true" />。 否則它會傳回 <see langword="false" /> 來指示 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法應該繼續執行。</returns>
    </member>
    <member name="T:System.Drawing.Graphics.EnumerateMetafileProc">
      <summary>提供回呼 (Callback) 方法給 <see cref="Overload:System.Drawing.Graphics.EnumerateMetafile" /> 方法。</summary>
      <param name="recordType">
        <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 列舉型別 (Enumeration) 的成員，指定中繼檔記錄的型別。</param>
      <param name="flags">指定記錄屬性 (Attribute) 的旗標集。</param>
      <param name="dataSize">記錄資料中的位元組數目。</param>
      <param name="data">含有記錄資料的緩衝區指標。</param>
      <param name="callbackData">未使用。</param>
      <returns>如果您想要繼續列舉記錄，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.GraphicsUnit">
      <summary>指定所指定資料的測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Display">
      <summary>指定顯示裝置的測量單位。 一般來說，視訊顯示會使用像素，而印表機會使用 1/100 英吋。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Document">
      <summary>指定文件單位 (1/300 英吋) 做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Inch">
      <summary>指定英吋做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Millimeter">
      <summary>指定公釐做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Pixel">
      <summary>指定裝置像素做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.Point">
      <summary>指定印表機的點 (1/72 英吋) 做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.GraphicsUnit.World">
      <summary>指定全局座標系統的單位做為測量單位。</summary>
    </member>
    <member name="T:System.Drawing.Icon">
      <summary>代表 Windows 圖示，這個圖示為用來代表物件的小型點陣圖影像。 雖然圖示的大小是由系統決定，但是圖示仍然可以視為透明的點陣圖。</summary>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)">
      <summary>初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體，並嘗試尋找符合所要求大小的圖示版本。</summary>
      <param name="original">要從其中載入已重新調整大小之圖示的 <see cref="T:System.Drawing.Icon" />。</param>
      <param name="size">
        <see cref="T:System.Drawing.Size" /> 結構，指定新 <see cref="T:System.Drawing.Icon" /> 的高度和寬度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體，並嘗試尋找符合所要求大小的圖示版本。</summary>
      <param name="original">要載入不同大小的來源圖示。</param>
      <param name="width">新圖示的寬度。</param>
      <param name="height">新圖示的高度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="original" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream)">
      <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="stream">要從其中載入 <see cref="T:System.Drawing.Icon" /> 的資料流。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)">
      <summary>從指定的資料流，以指定之大小初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="stream">包含圖示資料的資料流。</param>
      <param name="size">所需的圖示大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 為 <see langword="null" /> 或未包含影像資料。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)">
      <summary>使用指定的寬度和高度，從指定的資料流初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="stream">要從其中載入圖示的資料流。</param>
      <param name="width">圖示的寬度，以像素為單位。</param>
      <param name="height">圖示的高度，以像素為單位。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 參數為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String)">
      <summary>從指定的檔案名稱初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="fileName">要載入 <see cref="T:System.Drawing.Icon" /> 的來源檔案。</param>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)">
      <summary>從指定的資料流，以指定之大小初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="fileName">包含圖示資料之檔案的名稱和路徑。</param>
      <param name="size">所需的圖示大小。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> 為 <see langword="null" /> 或未包含影像資料。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)">
      <summary>使用來自指定檔案的指定寬度和高度，初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="fileName">包含 <see cref="T:System.Drawing.Icon" /> 資料之檔案的名稱和路徑。</param>
      <param name="width">
        <see cref="T:System.Drawing.Icon" /> 的所需寬度。</param>
      <param name="height">
        <see cref="T:System.Drawing.Icon" /> 的所需高度。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="string" /> 為 <see langword="null" /> 或未包含影像資料。</exception>
    </member>
    <member name="M:System.Drawing.Icon.#ctor(System.Type,System.String)">
      <summary>從指定的組件中的資源，初始化 <see cref="T:System.Drawing.Icon" /> 類別的新執行個體。</summary>
      <param name="type">
        <see cref="T:System.Type" />，指定要在其中尋找資源的組件。</param>
      <param name="resource">要載入的資源名稱。</param>
      <exception cref="T:System.ArgumentException">在包含指定之 <paramref name="resource" /> 的組件中找不到 <paramref name="type" /> 所指定的圖示。</exception>
    </member>
    <member name="M:System.Drawing.Icon.Clone">
      <summary>複製 <see cref="T:System.Drawing.Icon" />，建立重複的影像。</summary>
      <returns>可以轉換成 <see cref="T:System.Drawing.Icon" /> 的物件。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Icon" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Icon.ExtractAssociatedIcon(System.String)">
      <summary>傳回指定之檔案中所含影像的圖示表示。</summary>
      <param name="filePath">含有影像之檔案的路徑。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filePath" /> 不表示有效檔案。  
  
-或- 
<paramref name="filePath" /> 表示通用命名慣例 (Universal Naming Convention，UNC) 路徑。</exception>
      <returns>指定之檔案中所含影像的 <see cref="T:System.Drawing.Icon" /> 表示。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Icon.FromHandle(System.IntPtr)">
      <summary>從圖示的指定 Windows 控制代碼 (<see cref="T:System.Drawing.Icon" />) 建立 GDI+ <see langword="HICON" />。</summary>
      <param name="handle">圖示的 Windows 控制代碼。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Icon.Save(System.IO.Stream)">
      <summary>將這個 <see cref="T:System.Drawing.Icon" /> 儲存至指定的輸出 <see cref="T:System.IO.Stream" />。</summary>
      <param name="outputStream">要儲存的目標 <see cref="T:System.IO.Stream" />。</param>
    </member>
    <member name="M:System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>在 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 中填入將目標物件序列化時所需的資料。</summary>
      <param name="si" />
      <param name="context">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="M:System.Drawing.Icon.ToBitmap">
      <summary>將這個 <see cref="T:System.Drawing.Icon" /> 轉換成 GDI+ <see cref="T:System.Drawing.Bitmap" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" />，表示已轉換的 <see cref="T:System.Drawing.Icon" />。</returns>
    </member>
    <member name="M:System.Drawing.Icon.ToString">
      <summary>取得描述 <see cref="T:System.Drawing.Icon" /> 之人們可讀取的字串。</summary>
      <returns>描述 <see cref="T:System.Drawing.Icon" /> 的字串。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Handle">
      <summary>取得這個 <see cref="T:System.Drawing.Icon" /> 的 Windows 控制代碼。 這不是控制代碼的複本，請勿釋放它。</summary>
      <returns>圖示的 Windows 控制代碼。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Height">
      <summary>取得這個 <see cref="T:System.Drawing.Icon" /> 的高度。</summary>
      <returns>這個 <see cref="T:System.Drawing.Icon" /> 的高度。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Size">
      <summary>取得這個 <see cref="T:System.Drawing.Icon" /> 的大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" /> 結構，指定這個 <see cref="T:System.Drawing.Icon" /> 的寬度和高度。</returns>
    </member>
    <member name="P:System.Drawing.Icon.Width">
      <summary>取得這個 <see cref="T:System.Drawing.Icon" /> 的寬度。</summary>
      <returns>這個 <see cref="T:System.Drawing.Icon" /> 的寬度。</returns>
    </member>
    <member name="T:System.Drawing.IconConverter">
      <summary>將 <see cref="T:System.Drawing.Icon" /> 物件從某一個資料型別轉換為另一個資料型別。 這個類別可透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 物件來存取。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.IconConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個 <see cref="T:System.Drawing.IconConverter" /> 是否可以使用指定內容，將指定型別的執行個體轉換為 <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，指定您想要轉換的來源型別。</param>
      <returns>如果這個 <see cref="T:System.Drawing.IconConverter" /> 可以執行轉換，這個方法便會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個 <see cref="T:System.Drawing.IconConverter" /> 是否可以使用指定內容將 <see cref="T:System.Drawing.Icon" /> 轉換為指定型別的執行個體。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">
        <see cref="T:System.Type" />，指定您想要轉換成的目的型別。</param>
      <returns>如果這個 <see cref="T:System.Drawing.IconConverter" /> 可以執行轉換，這個方法便會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定物件轉換成 <see cref="T:System.Drawing.Icon" />。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，儲存特定文化特性 (Culture) 的資訊。</param>
      <param name="value">要轉換的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">無法執行轉換。</exception>
      <returns>如果這個方法成功，就會傳回由轉換指定物件所產生的 <see cref="T:System.Drawing.Icon" />。 否則，會擲回例外狀況。</returns>
    </member>
    <member name="M:System.Drawing.IconConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>將 <see cref="T:System.Drawing.Icon" /> (或可以轉換成 <see cref="T:System.Drawing.Icon" /> 的物件) 轉換為指定型別。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，這個物件指定由特定文化特性 (Culture) 所使用的格式慣例。</param>
      <param name="value">要轉換的物件。 這個物件應該是圖示型別或是可以轉換為 <see cref="T:System.Drawing.Icon" /> 的某種型別。</param>
      <param name="destinationType">要將圖示轉換成哪一種型別。</param>
      <exception cref="T:System.NotSupportedException">無法執行轉換。</exception>
      <returns>這個方法傳回轉換過的物件。</returns>
    </member>
    <member name="T:System.Drawing.IDeviceContext">
      <summary>定義取得和釋放 Windows 裝置内容的現有控制代碼的方法。</summary>
    </member>
    <member name="M:System.Drawing.IDeviceContext.GetHdc">
      <summary>傳回 Windows 裝置內容的控制代碼。</summary>
      <returns>
        <see cref="T:System.IntPtr" />，表示裝置内容的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.IDeviceContext.ReleaseHdc">
      <summary>釋放 Windows 裝置內容的控制代碼。</summary>
    </member>
    <member name="T:System.Drawing.Image">
      <summary>提供功能給 <see cref="T:System.Drawing.Bitmap" /> 和 <see cref="T:System.Drawing.Imaging.Metafile" /> 子代類別的抽象基底類別。</summary>
    </member>
    <member name="M:System.Drawing.Image.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Image" /> 的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.Image" />，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Image.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Image" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Image.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Drawing.Image" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Drawing.Image.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String)">
      <summary>從指定的檔案建立 <see cref="T:System.Drawing.Image" /> 物件。</summary>
      <param name="filename">字串，包含從其中建立 <see cref="T:System.Drawing.Image" /> 之檔案的名稱。</param>
      <exception cref="T:System.OutOfMemoryException">檔案沒有有效的影像格式。  
  
-或- 
 GDI+ 不支援檔案的像素格式。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定的檔案不存在。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> 為 <see cref="T:System.Uri" />。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromFile(System.String,System.Boolean)">
      <summary>使用指定之檔案中的內嵌色彩管理資訊，從該檔案建立 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="filename">字串，包含從其中建立 <see cref="T:System.Drawing.Image" /> 之檔案的名稱。</param>
      <param name="useEmbeddedColorManagement">若要使用內嵌在影像檔的色彩管理資訊，則設定為 <see langword="true" />，否則為 <see langword="false" />。</param>
      <exception cref="T:System.OutOfMemoryException">檔案沒有有效的影像格式。  
  
-或- 
 GDI+ 不支援檔案的像素格式。</exception>
      <exception cref="T:System.IO.FileNotFoundException">指定的檔案不存在。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> 為 <see cref="T:System.Uri" />。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr)">
      <summary>從 GDI 點陣圖控制代碼建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hbitmap">GDI 點陣圖控制代碼，從其中建立 <see cref="T:System.Drawing.Bitmap" />。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)">
      <summary>從 GDI 點陣圖控制代碼和 GDI 調色盤控制代碼建立 <see cref="T:System.Drawing.Bitmap" />。</summary>
      <param name="hbitmap">GDI 點陣圖控制代碼，從其中建立 <see cref="T:System.Drawing.Bitmap" />。</param>
      <param name="hpalette">如果在 <paramref name="hbitmap" /> 參數中指定的點陣圖不是與裝置無關的點陣圖 (DIB)，則會使用 GDI 調色盤控制代碼定義點陣圖色彩。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Bitmap" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream)">
      <summary>從指定的資料流建立 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Image" /> 的資料。</param>
      <exception cref="T:System.ArgumentException">資料流沒有有效的影像格式 
-或- 
 <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)">
      <summary>選擇性地使用指定之資料流中的內嵌色彩管理資訊，從該資料流建立 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Image" /> 的資料。</param>
      <param name="useEmbeddedColorManagement">
        <see langword="true" /> 表示使用內嵌在資料流的色彩管理資訊，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">資料流沒有有效的影像格式 
-或- 
 <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)">
      <summary>選擇性地使用内嵌色彩管理資訊並驗證影像資料，從指定的資料流建立 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Image" /> 的資料。</param>
      <param name="useEmbeddedColorManagement">
        <see langword="true" /> 表示使用內嵌在資料流的色彩管理資訊，否則為 <see langword="false" />。</param>
      <param name="validateImageData">
        <see langword="true" /> 表示驗證影像資料，否則為 <see langword="false" />。</param>
      <exception cref="T:System.ArgumentException">資料流沒有有效的影像格式。</exception>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Image" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)">
      <summary>取得使用指定單位之影像的界限。</summary>
      <param name="pageUnit">其中一個 <see cref="T:System.Drawing.GraphicsUnit" /> 值，指示周框的測量單位。</param>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示影像的界限 (使用指定的單位)。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetEncoderParameterList(System.Guid)">
      <summary>傳回指定的影像編碼器支援的參數資訊。</summary>
      <param name="encoder">指定影像編碼器的 GUID。</param>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件的陣列。 每個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 包含與指定的影像編碼器支援之其中一個參數有關的資訊。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)">
      <summary>傳回指定維度的框架數。</summary>
      <param name="dimension">
        <see cref="T:System.Drawing.Imaging.FrameDimension" />，指定維度型別的識別 (Identity)。</param>
      <returns>指定維度中的框架數。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)">
      <summary>傳回指定之像素格式的色彩深度 (單位為每像素的位元數)。</summary>
      <param name="pixfmt">
        <see cref="T:System.Drawing.Imaging.PixelFormat" /> 成員，指定用來尋找大小的格式。</param>
      <returns>指定像素格式的色彩深度。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetPropertyItem(System.Int32)">
      <summary>從這個 <see cref="T:System.Drawing.Image" /> 取得指定的屬性項目。</summary>
      <param name="propid">要取得的屬性項目 ID。</param>
      <exception cref="T:System.ArgumentException">此影像的影像格式不支援屬性項目。</exception>
      <returns>這個方法所取得的 <see cref="T:System.Drawing.Imaging.PropertyItem" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)">
      <summary>傳回這個 <see cref="T:System.Drawing.Image" /> 的縮圖。</summary>
      <param name="thumbWidth">要求的縮圖影像的寬度 (單位為像素)。</param>
      <param name="thumbHeight">要求的縮圖影像的高度 (單位為像素)。</param>
      <param name="callback">
        <see cref="T:System.Drawing.Image.GetThumbnailImageAbort" /> 委派 (Delegate)。  
  
 注意：您必須建立委派，並將委派的參考當作 <paramref name="callback" /> 參數傳遞，而不使用該委派。</param>
      <param name="callbackData">必須是 <see cref="F:System.IntPtr.Zero" />。</param>
      <returns>
        <see cref="T:System.Drawing.Image" />，表示縮圖。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>傳回值，指示這個 <see cref="T:System.Drawing.Image" /> 的像素格式是否包含 Alpha 資訊。</summary>
      <param name="pixfmt">要測試的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>如果 <paramref name="pixfmt" /> 包含 Alpha 資訊，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>傳回值，指示像素格式是否為每像素 32 位元。</summary>
      <param name="pixfmt">要測試的 <see cref="T:System.Drawing.Imaging.PixelFormat" />。</param>
      <returns>如果 <paramref name="pixfmt" /> 符合標準，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)">
      <summary>傳回值，指示像素格式是否為每像素 64 位元。</summary>
      <param name="pixfmt">要測試的 <see cref="T:System.Drawing.Imaging.PixelFormat" /> 列舉型別。</param>
      <returns>如果 <paramref name="pixfmt" /> 是為擴充的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Image.RemovePropertyItem(System.Int32)">
      <summary>將指定的屬性項目從這個 <see cref="T:System.Drawing.Image" /> 中移除。</summary>
      <param name="propid">要移除的屬性項目 ID。</param>
      <exception cref="T:System.ArgumentException">影像不包含要求的屬性項目。  
  
 -或-  
  
 這個影像的影像格式不支援屬性項目。</exception>
    </member>
    <member name="M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)">
      <summary>旋轉、翻轉或者同時旋轉和翻轉 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="rotateFlipType">
        <see cref="T:System.Drawing.RotateFlipType" /> 成員，指定要套用至影像的旋轉和翻轉類型。</param>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>使用指定的編碼器和影像編碼器參數，將此影像儲存至指定的資料流。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，其中將會儲存影像。</param>
      <param name="encoder">這個 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">
        <see cref="T:System.Drawing.Imaging.EncoderParameters" />，指定由影像編碼器使用的參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">使用了錯誤的影像格式儲存影像。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
      <summary>將這個影像以指定的格式儲存至指定的資料流。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，其中將會儲存影像。</param>
      <param name="format">
        <see cref="T:System.Drawing.Imaging.ImageFormat" />，指定儲存之影像的格式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">使用了錯誤的影像格式儲存影像。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String)">
      <summary>儲存這個 <see cref="T:System.Drawing.Image" /> 至指定的檔案或資料流。</summary>
      <param name="filename">字串，包含要儲存這個 <see cref="T:System.Drawing.Image" /> 之目的檔案的名稱。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">使用了錯誤的影像格式儲存影像。  
  
 -或-  
  
 影像已儲存至建立它時所使用的檔案中。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)">
      <summary>使用指定的編碼器和影像編碼器參數，將此 <see cref="T:System.Drawing.Image" /> 儲存至指定的檔案。</summary>
      <param name="filename">字串，包含要儲存這個 <see cref="T:System.Drawing.Image" /> 之目的檔案的名稱。</param>
      <param name="encoder">這個 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="encoderParams">要用於這個 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 或 <paramref name="encoder" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">使用了錯誤的影像格式儲存影像。  
  
 -或-  
  
 影像已儲存至建立它時所使用的檔案中。</exception>
    </member>
    <member name="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)">
      <summary>將這個 <see cref="T:System.Drawing.Image" /> 以指定的格式儲存至指定的檔案。</summary>
      <param name="filename">字串，包含要儲存這個 <see cref="T:System.Drawing.Image" /> 之目的檔案的名稱。</param>
      <param name="format">這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.InteropServices.ExternalException">使用了錯誤的影像格式儲存影像。  
  
 -或-  
  
 影像已儲存至建立它時所使用的檔案中。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)">
      <summary>將框架加入先前的 <see cref="Overload:System.Drawing.Image.Save" /> 方法呼叫所指定的檔案或資料流。</summary>
      <param name="image">
        <see cref="T:System.Drawing.Image" />，包含要加入的框架。</param>
      <param name="encoderParams">
        <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含儲存-加入作業使用之影像編碼器所需的參數。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="image" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)">
      <summary>將框架加入先前的 <see cref="Overload:System.Drawing.Image.Save" /> 方法呼叫所指定的檔案或資料流。 使用這個方法以從多重框架影像儲存選取框架至另一個多重框架影像。</summary>
      <param name="encoderParams">
        <see cref="T:System.Drawing.Imaging.EncoderParameters" />，包含儲存-加入作業使用之影像編碼器所需的參數。</param>
    </member>
    <member name="M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)">
      <summary>選取由維度和索引所指定的框架。</summary>
      <param name="dimension">
        <see cref="T:System.Drawing.Imaging.FrameDimension" />，指定維度型別的識別 (Identity)。</param>
      <param name="frameIndex">作用中框架的索引。</param>
      <returns>永遠傳回 0。</returns>
    </member>
    <member name="M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)">
      <summary>在這個 <see cref="T:System.Drawing.Image" /> 中儲存屬性項目 (中繼資料的項目)。</summary>
      <param name="propitem">要儲存的 <see cref="T:System.Drawing.Imaging.PropertyItem" />。</param>
      <exception cref="T:System.ArgumentException">此影像的影像格式不支援屬性項目。</exception>
    </member>
    <member name="M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>將序列化目標物件所需的資料填入 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="si" />
      <param name="context">這個序列化的目的端 (請參閱 <see cref="T:System.Runtime.Serialization.StreamingContext" />)。</param>
    </member>
    <member name="P:System.Drawing.Image.Flags">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 之像素資料的屬性旗標。</summary>
      <returns>整數，表示這個 <see cref="T:System.Drawing.Imaging.ImageFlags" /> 之 <see cref="T:System.Drawing.Image" /> 的位元組合。</returns>
    </member>
    <member name="P:System.Drawing.Image.FrameDimensionsList">
      <summary>取得 GUID 的陣列，表示這個 <see cref="T:System.Drawing.Image" /> 中的框架 (Frame) 維度 (Dimension)。</summary>
      <returns>GUID 的陣列，指定這個 <see cref="T:System.Drawing.Image" /> 中從最大顯著性到最小顯著性的框架維度。</returns>
    </member>
    <member name="P:System.Drawing.Image.Height">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的高度 (單位為像素)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Image" /> 的高度 (單位為像素)。</returns>
    </member>
    <member name="P:System.Drawing.Image.HorizontalResolution">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的水平解析度 (單位為每英吋的像素)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Image" /> 的水平解析度 (單位為每英吋的像素)。</returns>
    </member>
    <member name="P:System.Drawing.Image.Palette">
      <summary>取得或設定用於這個 <see cref="T:System.Drawing.Image" /> 的調色盤。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ColorPalette" />，表示用於這個 <see cref="T:System.Drawing.Image" /> 的調色盤。</returns>
    </member>
    <member name="P:System.Drawing.Image.PhysicalDimension">
      <summary>取得這個影像的寬度和高度。</summary>
      <returns>
        <see cref="T:System.Drawing.SizeF" /> 結構，表示這個 <see cref="T:System.Drawing.Image" /> 的寬度和高度。</returns>
    </member>
    <member name="P:System.Drawing.Image.PixelFormat">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的像素格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.PixelFormat" />，表示這個 <see cref="T:System.Drawing.Image" /> 的像素格式。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyIdList">
      <summary>取得儲存在這個 <see cref="T:System.Drawing.Image" /> 中的屬性項目 ID。</summary>
      <returns>屬性 ID 的陣列，存放在這個影像中的每一個屬性項目各有一個 ID。</returns>
    </member>
    <member name="P:System.Drawing.Image.PropertyItems">
      <summary>取得儲存在這個 <see cref="T:System.Drawing.Image" /> 中的所有屬性項目 (中繼資料的各個項目)。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.PropertyItem" /> 物件的陣列，針對影像中存放的每個屬性項目所組成的一個陣列。</returns>
    </member>
    <member name="P:System.Drawing.Image.RawFormat">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的檔案格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" />，代表這個 <see cref="T:System.Drawing.Image" /> 的檔案格式。</returns>
    </member>
    <member name="P:System.Drawing.Image.Size">
      <summary>取得影像的寬度和高度，單位為像素。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" /> 結構，表示這個影像的寬度和高度 (單位為像素)。</returns>
    </member>
    <member name="P:System.Drawing.Image.Tag">
      <summary>取得或設定物件，該物件提供影像的其他相關資料。</summary>
      <returns>提供影像之其他相關資料的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="P:System.Drawing.Image.VerticalResolution">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的垂直解析度 (單位為每英吋的像素)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Image" /> 的垂直解析度 (單位為每英吋的像素)。</returns>
    </member>
    <member name="P:System.Drawing.Image.Width">
      <summary>取得這個 <see cref="T:System.Drawing.Image" /> 的寬度 (單位為像素)。</summary>
      <returns>這個 <see cref="T:System.Drawing.Image" /> 的寬度 (單位為像素)。</returns>
    </member>
    <member name="T:System.Drawing.Image.GetThumbnailImageAbort">
      <summary>提供回呼 (Callback) 方法來判斷 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法何時應該提前取消執行。</summary>
      <returns>如果這個方法決定 <see cref="M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)" /> 方法應該提前停止執行，則這個方法會傳回 <see langword="true" />；否則會傳回 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.ImageAnimator">
      <summary>顯示具有以時間為基礎的框架 (Frame) 的影像動畫。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.Animate(System.Drawing.Image,System.EventHandler)">
      <summary>顯示多重框架影像為動畫。</summary>
      <param name="image">要顯示動畫的 <see cref="T:System.Drawing.Image" /> 物件。</param>
      <param name="onFrameChangedHandler">
        <see langword="EventHandler" /> 物件，指定當動畫框架變更時要呼叫的方法。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.CanAnimate(System.Drawing.Image)">
      <summary>傳回布林值 (Boolean)，表示指定的影像是否包含以時間為基礎的框架。</summary>
      <param name="image">要測試的 <see cref="T:System.Drawing.Image" /> 物件。</param>
      <returns>如果指定的影像包含以時間為基礎的框架，則這個方法會傳回 <see langword="true" />；否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageAnimator.StopAnimate(System.Drawing.Image,System.EventHandler)">
      <summary>結束執行中的動畫。</summary>
      <param name="image">要停止顯示動畫的 <see cref="T:System.Drawing.Image" /> 物件。</param>
      <param name="onFrameChangedHandler">
        <see langword="EventHandler" /> 物件，指定當動畫框架變更時要呼叫的方法。</param>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>推進目前正在顯示動畫的所有影像中的框架。 新的框架會在下次呈現影像時繪製。</summary>
    </member>
    <member name="M:System.Drawing.ImageAnimator.UpdateFrames(System.Drawing.Image)">
      <summary>推進指定影像中的框架。 新的框架會在下次呈現影像時繪製。 這個方法只能套用至以時間為基礎的框架影像。</summary>
      <param name="image">用來更新框架的 <see cref="T:System.Drawing.Image" /> 物件。</param>
    </member>
    <member name="T:System.Drawing.ImageConverter">
      <summary>
        <see cref="T:System.Drawing.ImageConverter" /> 為類別，可用來將 <see cref="T:System.Drawing.Image" /> 物件從一種資料型別轉換成另一種資料型別。 這個類別可透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 物件來存取。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.ImageConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個 <see cref="T:System.Drawing.ImageConverter" /> 是否可以使用指定內容，將指定型別的執行個體轉換為 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，指定您想要轉換的來源型別。</param>
      <returns>如果這個 <see cref="T:System.Drawing.ImageConverter" /> 可以執行轉換，這個方法便會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>判斷這個 <see cref="T:System.Drawing.ImageConverter" /> 是否可以使用指定內容將 <see cref="T:System.Drawing.Image" /> 轉換為指定型別的執行個體。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">
        <see cref="T:System.Type" />，指定您想要轉換成的目的型別。</param>
      <returns>如果這個 <see cref="T:System.Drawing.ImageConverter" /> 可以執行轉換，這個方法便會傳回 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定物件轉換成 <see cref="T:System.Drawing.Image" />。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />，儲存特定文化特性 (Culture) 的資訊。</param>
      <param name="value">要轉換的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.NotSupportedException">無法完成轉換作業。</exception>
      <returns>如果這個方法成功，就會傳回由轉換指定物件所產生的 <see cref="T:System.Drawing.Image" />。 否則，會擲回例外狀況。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>將 <see cref="T:System.Drawing.Image" /> (或可以轉換成 <see cref="T:System.Drawing.Image" /> 的物件) 轉換為指定型別。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的更多資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，這個物件指定由特定文化特性 (Culture) 所使用的格式慣例。</param>
      <param name="value">要進行轉換的 <see cref="T:System.Drawing.Image" />。</param>
      <param name="destinationType">要將 <see cref="T:System.Type" /> 轉換成的目的 <see cref="T:System.Drawing.Image" />。</param>
      <exception cref="T:System.NotSupportedException">無法完成轉換作業。</exception>
      <returns>這個方法傳回轉換過的物件。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>取得這個型別的屬性集。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <param name="value">要為其取得屬性的物件的值。</param>
      <param name="attributes">描述屬性的 <see cref="T:System.Attribute" /> 物件陣列。</param>
      <returns>應該公開給這個資料型別的屬性集。 如果沒有屬性應該公開，則會傳回 <see langword="null" />。 預設的實作 (Implementation) 一定會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示這個物件是否支援屬性。 根據預設，這是 <see langword="false" />。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <returns>如果應該呼叫 <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> 方法來尋找這個物件的屬性，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Drawing.ImageFormatConverter">
      <summary>
        <see cref="T:System.Drawing.ImageFormatConverter" /> 為類別，可用來將 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件從一種資料型別轉換成另一種資料型別。 這個類別可透過 <see cref="T:System.ComponentModel.TypeDescriptor" /> 物件來存取。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.ImageFormatConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>指示這個轉換子是否可以將指定來源型別的物件轉換成轉換子的原生 (Native) 型別。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的更多資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="sourceType">要轉換的來源型別。</param>
      <returns>如果這個物件可以執行轉換，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>取得值，指出這個轉換子是否可以使用內容來將物件轉換成指定的目的型別。</summary>
      <param name="context">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，指定這個型別轉換的內容。</param>
      <param name="destinationType">
        <see cref="T:System.Type" />，表示您要轉換這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件的目的型別。</param>
      <returns>如果這個物件可以執行轉換，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定的物件轉換為 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的更多資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，指定特定文化特性所使用的格式慣例。</param>
      <param name="value">要轉換的物件。</param>
      <exception cref="T:System.NotSupportedException">無法完成轉換作業。</exception>
      <returns>轉換的物件。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>將指定的物件轉換成指定的類型。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的更多資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> 物件，指定特定文化特性所使用的格式慣例。</param>
      <param name="value">要轉換的物件。</param>
      <param name="destinationType">要將物件轉換成的類型。</param>
      <exception cref="T:System.NotSupportedException">無法完成轉換作業。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 為 <see langword="null" />。</exception>
      <returns>轉換的物件。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>取得集合，含有用來設計這個驗證程式之資料型別的標準值集。 如果資料型別不支援標準值集，則傳回 <see langword="null" />。</summary>
      <param name="context">格式子 (Formatter) 內容。 這個物件可用來取得環境的更多資訊，而這個轉換子就是從這個環境叫用的。 這可能是 <see langword="null" />，所以您要隨時檢查。 此外，內容物件上的屬性也可能會傳回 <see langword="null" />。</param>
      <returns>集合 (包含有效值的標準集) 或 <see langword="null" />。 預設的實作 (Implementation) 一定會傳回 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.ImageFormatConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>指示這個物件是否支援可以從清單選取的值標準集。</summary>
      <param name="context">可用來提供其他內容的型別描述項。</param>
      <returns>如果 <see cref="Overload:System.Drawing.ImageFormatConverter.GetStandardValues" /> 方法必須呼叫來尋找物件支援的值通用集，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.BitmapData">
      <summary>指定點陣圖影像的屬性 (Attribute)。 <see cref="T:System.Drawing.Imaging.BitmapData" /> 類別是由 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 類別的 <see cref="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" /> 和 <see cref="T:System.Drawing.Bitmap" /> 方法所使用。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.BitmapData.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.BitmapData" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Height">
      <summary>取得或設定 <see cref="T:System.Drawing.Bitmap" /> 物件的像素高度。 有時也稱為掃描線 (Scan Line) 數目。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 物件的像素高度。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.PixelFormat">
      <summary>取得或設定傳回這個 <see cref="T:System.Drawing.Bitmap" /> 物件的 <see cref="T:System.Drawing.Imaging.BitmapData" /> 物件中像素資訊格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.PixelFormat" />，這會指定在相關聯 <see cref="T:System.Drawing.Bitmap" /> 物件中的像素資訊格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Reserved">
      <summary>保留的。 請勿使用。</summary>
      <returns>保留的。 請勿使用。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Scan0">
      <summary>取得或設定點陣圖中第一個像素資料的位址。 這也可以視為點陣圖中第一條掃描線。</summary>
      <returns>點陣圖中第一個像素資料的位址。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Stride">
      <summary>取得或設定 <see cref="T:System.Drawing.Bitmap" /> 物件的分散寬度 (也稱為掃描寬度)。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 物件的分散寬度，以位元組表示。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.BitmapData.Width">
      <summary>取得或設定 <see cref="T:System.Drawing.Bitmap" /> 物件的像素寬度。 這也可以視為一條掃描線中的像素數目。</summary>
      <returns>
        <see cref="T:System.Drawing.Bitmap" /> 物件的像素寬度。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorAdjustType">
      <summary>指定哪個 GDI+ 物件使用色彩調整資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Any">
      <summary>指定的型別數目。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Bitmap">
      <summary>
        <see cref="T:System.Drawing.Bitmap" /> 物件的色彩調整資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Brush">
      <summary>
        <see cref="T:System.Drawing.Brush" /> 物件的色彩調整資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Count">
      <summary>指定的型別數目。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Default">
      <summary>色彩調整資訊，這項資訊是由不具有自己的色彩調整資訊的 GDI+ 物件所使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Pen">
      <summary>
        <see cref="T:System.Drawing.Pen" /> 物件的色彩調整資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorAdjustType.Text">
      <summary>文字的色彩調整資訊。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorChannelFlag">
      <summary>指定 CMYK (青、洋紅、黃、黑) 色彩空間中的個別色頻。 這個列舉型別 (Enumeration) 是由 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel" /> 方法所使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>青色色頻。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>黑色色頻。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>應該使用最後一個選取的色頻。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>洋紅色色頻。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>黃色色頻。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMap">
      <summary>定義轉換色彩的對應。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 類別的數個方法會藉由使用色彩重新對應表 (這是 <see cref="T:System.Drawing.Imaging.ColorMap" /> 結構的陣列) 來調整影像色彩。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMap.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ColorMap" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.NewColor">
      <summary>取得或設定要轉換成的新 <see cref="T:System.Drawing.Color" /> 結構。</summary>
      <returns>要轉換成的新 <see cref="T:System.Drawing.Color" /> 結構。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMap.OldColor">
      <summary>取得或設定要轉換的現有 <see cref="T:System.Drawing.Color" /> 結構。</summary>
      <returns>要轉換的現有 <see cref="T:System.Drawing.Color" /> 結構。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMapType">
      <summary>指定色彩對應的型別。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Brush">
      <summary>指定 <see cref="T:System.Drawing.Brush" /> 的色彩對應。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMapType.Default">
      <summary>預設的色彩對應。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrix">
      <summary>定義含有 RGBAW 空間座標的 5 x 5 矩陣。 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 類別的多個方法會使用色彩矩陣來調整影像色彩。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ColorMatrix.#ctor(System.Single[][])">
      <summary>使用在指定的矩陣 <paramref name="newColorMatrix" /> 中的項目，初始化 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 類別的新執行個體。</summary>
      <param name="newColorMatrix">新 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 的項目值。</param>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Item(System.Int32,System.Int32)">
      <summary>取得或設定在 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中指定列和行的項目。</summary>
      <param name="row">項目列。</param>
      <param name="column">項目行。</param>
      <returns>在指定列和行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix00">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 (零) 列和第 0 行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 列和第 0 行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix01">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 (零) 列和第一行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 列和第一行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix02">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 (零) 列和第二行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 列和第二行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix03">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 (零) 列和第三行的項目。 表示 Alpha 元件。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 列和第三行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix04">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 (零) 列和第四行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第 0 列和第四行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix10">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第 0 (零) 行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第 0 行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix11">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第一行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第一行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix12">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第二行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第二行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix13">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第三行的項目。 表示 Alpha 元件。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第三行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix14">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第四行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第一列和第四行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix20">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第 0 (零) 行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第 0 行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix21">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第一行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第一行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix22">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第二行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第二行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix23">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第三行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第三行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix24">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第四行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第二列和第四行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix30">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第 0 (零) 行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第 0 行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix31">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第一行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第一行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix32">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第二行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第二行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix33">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第三行的項目。 表示 Alpha 元件。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第三行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix34">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第四行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第三列和第四行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix40">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第 0 (零) 行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第 0 行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix41">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第一行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第一行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix42">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第二行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第二行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix43">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第三行的項目。 表示 Alpha 元件。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第三行的項目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorMatrix.Matrix44">
      <summary>取得或設定在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第四行的項目。</summary>
      <returns>在這個 <see cref="T:System.Drawing.Imaging.ColorMatrix" /> 中第四列和第四行的項目。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMatrixFlag">
      <summary>指定將受到 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 的色彩和灰階調整所影響的影像和色彩類型。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.AltGrays">
      <summary>只會調整灰階。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.Default">
      <summary>所有色彩值 (包括灰階) 都由相同色彩調整矩陣來調整。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMatrixFlag.SkipGrays">
      <summary>只調整色彩但不調整灰階。 灰階是具有紅、綠、藍元件相同值的任何色彩。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorMode">
      <summary>指定色彩元件值的兩種模式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb32Mode">
      <summary>提供的整數值是 32 位元值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ColorMode.Argb64Mode">
      <summary>提供的整數值是 64 位元值。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ColorPalette">
      <summary>定義組成色板的色彩陣列。 色彩為 32 位元 ARGB 色彩。 無法被繼承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Entries">
      <summary>取得 <see cref="T:System.Drawing.Color" /> 結構的陣列。</summary>
      <returns>組成這個 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Imaging.ColorPalette" /> 結構陣列。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ColorPalette.Flags">
      <summary>取得數值，指定如何解譯色彩陣列中的色彩資訊。</summary>
      <returns>下列旗標值有效：  
  
 0x00000001  
 陣列中的色彩值含有 Alpha 資訊。  
  
 0x00000002  
 陣列中的色彩為灰階值。  
  
 0x00000004  
 陣列中的色彩為半色調值。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EmfPlusRecordType">
      <summary>指定與要讀取和寫入圖形指令的中繼檔 (Metafile) 一起使用的方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainer">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.BeginContainerNoParams">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.BeginContainer" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Clear">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Comment">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawArc">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawArc" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawBeziers">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawBeziers" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawClosedCurve">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawClosedCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawCurve">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawDriverString">
      <summary>指定字元字串、位置和格式化資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawEllipse">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawEllipse" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImage">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawImagePoints">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawLines">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawLines" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPath">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawPie">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawPie" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawRects">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawRectangles" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.DrawString">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.DrawString" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAbortPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAlphaBlend">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfAngleArc">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfArcTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBeginPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfBitBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfChord">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCloseFigure">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorCorrectPalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfColorMatchToTargetW">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateBrushIndirect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpace">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateColorSpaceW">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateDibPatternBrushPt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreateMonoBrush">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfCreatePen">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteColorSpace">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDeleteObject">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfDrawEscape">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEllipse">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEndPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfEof">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExcludeClipRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreateFontIndirect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtCreatePen">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtEscape">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtFloodFill">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtSelectClipRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutA">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfExtTextOutW">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFillRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFlattenPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfForceUfiMapping">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfFrameRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGdiComment">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsBoundedRecord">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGlsRecord">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfGradientFill">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfHeader">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfIntersectClipRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfInvertRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfLineTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMaskBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMax">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMin">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfModifyWorldTransform">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfMoveToEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfNamedEscpae">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfOffsetClipRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPaintRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPie">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPixelFormat">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlgBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPlusRecordBase">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezier16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyBezierTo16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyDraw16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolygon16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyline16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyLineTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolylineTo16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolygon16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyPolyline16">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutA">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfPolyTextOutW">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRealizePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRectangle">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved069">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfReserved117">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfResizePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRestoreDC">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundArc">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfRoundRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSaveDC">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleViewportExtEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfScaleWindowExtEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectClipPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectObject">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSelectPalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetArcDirection">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkColor">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBkMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetBrushOrgEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorAdjustment">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetColorSpace">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetDIBitsToDevice">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileA">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetIcmProfileW">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLayout">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetLinkedUfis">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMapperFlags">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMetaRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetMiterLimit">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPaletteEntries">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPixelV">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetPolyFillMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetROP2">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetStretchBltMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextAlign">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextColor">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetTextJustification">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportExtEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetViewportOrgEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowExtEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWindowOrgEx">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSetWorldTransform">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfSmallTextOut">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStartDoc">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStretchDIBits">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokeAndFillPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfStrokePath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfTransparentBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EmfWidenPath">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Enhanced-Format Metafiles＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndContainer">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.EndOfFile">
      <summary>識別標記中繼檔最後一筆 EMF+ 記錄的記錄。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillClosedCurve">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.FillClosedCurve" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillEllipse">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.FillEllipse" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPath">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPie">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.FillPie" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillPolygon">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.FillPolygon" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRects">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.FillRectangles" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.FillRegion">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.GetDC">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.GetHdc" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Header">
      <summary>識別為 EMF+ 標頭的記錄。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Invalid">
      <summary>指示無效的資料。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Max">
      <summary>這個列舉型別的最大值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Min">
      <summary>這個列舉型別的最小值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatEnd">
      <summary>標記多重格式區段的末端。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatSection">
      <summary>標記多重格式區段。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiFormatStart">
      <summary>標記多重格式區段的開端。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.MultiplyWorldTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.MultiplyTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Object">
      <summary>標記物件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.OffsetClip">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.TranslateClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetClip">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.ResetClip" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ResetWorldTransform">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.ResetTransform" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Restore">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.RotateWorldTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.RotateTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Save">
      <summary>請參閱 <see cref="M:System.Drawing.Graphics.Save" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.ScaleWorldTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.ScaleTransform" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetAntiAliasMode">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.SmoothingMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipPath">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRect">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetClipRegion">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.SetClip" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingMode">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.CompositingMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetCompositingQuality">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.CompositingQuality" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetInterpolationMode">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.InterpolationMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPageTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetPixelOffsetMode">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.PixelOffsetMode" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetRenderingOrigin">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.RenderingOrigin" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextContrast">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.TextContrast" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetTextRenderingHint">
      <summary>請參閱 <see cref="P:System.Drawing.Graphics.TextRenderingHint" />。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.SetWorldTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.Total">
      <summary>內部使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.TranslateWorldTransform">
      <summary>請參閱 <see cref="Overload:System.Drawing.Graphics.TransformPoints" /> 方法。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfAnimatePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfArc">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfBitBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfChord">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateBrushIndirect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateFontIndirect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePatternBrush">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreatePenIndirect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfCreateRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDeleteObject">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibBitBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibCreatePatternBrush">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfDibStretchBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEllipse">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfEscape">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExcludeClipRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtFloodFill">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfExtTextOut">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFillRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFloodFill">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfFrameRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfIntersectClipRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfInvertRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfLineTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfMoveTo">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetCilpRgn">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetViewportOrg">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfOffsetWindowOrg">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPaintRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPatBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPie">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolygon">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyline">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfPolyPolygon">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRealizePalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRecordBase">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRectangle">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfResizePalette">
      <summary>根據指定值來增加或減少邏輯調色盤 (Palette) 的大小。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRestoreDC">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfRoundRect">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSaveDC">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleViewportExt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfScaleWindowExt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectClipRegion">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectObject">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSelectPalette">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkColor">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetBkMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetDibToDev">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetLayout">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetMapperFlags">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPalEntries">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPixel">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetPolyFillMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetRelAbs">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetROP2">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetStretchBltMode">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextAlign">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextCharExtra">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextColor">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetTextJustification">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportExt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetViewportOrg">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowExt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfSetWindowOrg">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchBlt">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfStretchDib">
      <summary>複製 DIB 中像素矩形的色彩資料至指定的目的矩形。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfPlusRecordType.WmfTextOut">
      <summary>請參閱 MSDN Library 中 GDI 章節中的＜Windows 格式的中繼檔＞。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EmfType">
      <summary>指定放置在加強型中繼檔 (EMF) 中的記錄性質。 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別中的數個建構函式會使用此列舉型別。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfOnly">
      <summary>指定中繼檔中的所有記錄都是 EMF 記錄，這項記錄可以由 GDI 或 GDI+ 顯示。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusDual">
      <summary>指定中繼檔中的所有 EMF+ 記錄和替代的 EMF 記錄相關聯。 型別 <see cref="F:System.Drawing.Imaging.EmfType.EmfPlusDual" /> 的中繼檔可以由 GDI 或 GDI+ 顯示。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EmfType.EmfPlusOnly">
      <summary>指定中繼檔中的所有記錄都是 EMF+ 記錄，這項記錄只可以由 GDI+ 顯示，而不可以由 GDI 顯示。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Encoder">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件會封裝全域唯一識別項 (GUID)，這個識別項識別影像編碼器參數的分類。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ChrominanceTable">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，是使用色差表參數分類的全域唯一識別項所初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorDepth">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，是使用色彩深度參數分類的全域唯一識別項所初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ColorSpace">
      <summary>代表以色彩空間分類的全域唯一識別碼初始化的編碼器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Compression">
      <summary>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，是使用壓縮參數分類的全域唯一識別項所初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ImageItems">
      <summary>代表以影像項目分類的全域唯一識別碼初始化的編碼器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.LuminanceTable">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用亮度表參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Quality">
      <summary>取得 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，這個物件是以品質參數分類的全域唯一識別碼初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.RenderMethod">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用呈現參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveAsCmyk">
      <summary>代表以儲存為 CMYK 分類的全域唯一識別碼初始化的編碼器。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.SaveFlag">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用儲存旗標參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.ScanMethod">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用掃描方法參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Transformation">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用轉換參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.Encoder.Version">
      <summary>表示 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，此物件使用版本參數分類的全域唯一識別項來進行初始化。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Encoder.#ctor(System.Guid)">
      <summary>從指定的全域唯一識別項 (GUID) 初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 GUID 會指定影像編碼器參數分類。</summary>
      <param name="guid">識別影像編碼器參數分類的全域唯一識別項。</param>
    </member>
    <member name="P:System.Drawing.Imaging.Encoder.Guid">
      <summary>取得識別影像編碼器參數分類的全域唯一識別項 (GUID)。</summary>
      <returns>GUID，它會指定影像編碼器參數分類。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameter">
      <summary>用於將值或值的陣列傳遞至影像編碼器。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個不帶正負號的 8 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">8 位元不帶正負號的整數 (Unsigned Integer)，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 8 位元值，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">位元組，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
      <param name="undefined">如果為 <see langword="true" />，則 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />，否則，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和不帶正負號的 8 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">8 位元不帶正負號整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和位元組的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" /> 或 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">位元組陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
      <param name="undefined">如果為 <see langword="true" />，則 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined" />，否則，<see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性會設定為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 16 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">16 位元整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 不可為負值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和 16 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">16 位元整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 陣列中的整數不可為負值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件、值的數目、值的資料型別和儲存在 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件中值的指標，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="numberValues">整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值數目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性設為這個值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，其指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之值的資料型別。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性都設定為這個值。</param>
      <param name="value">由 <paramref name="Type" /> 參數所指定型別的值陣列之指標。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和一組 32 位元整數，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 這組整數表示分數，第一個整數為分子，第二個整數為分母。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="numerator">32 位元整數，表示分數的分子。 不可為負值。</param>
      <param name="denominator">32 位元整數，表示分數的分母。 不可為負值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和三個整數 (其指定值的數目、值的資料型別和儲存在 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件中值的指標)，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="NumberOfValues">整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值數目。 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性設為這個值。</param>
      <param name="Type">
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，其指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之值的資料型別。 <see cref="T:System.Type" /> 和 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性都設定為這個值。</param>
      <param name="Value">由 <paramref name="Type" /> 參數所指定型別的值陣列之指標。</param>
      <exception cref="T:System.InvalidOperationException">型別不是有效的 <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" />。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和四個 32 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 四個整數表示分數的範圍。 前兩個整數表示範圍中的最小分數，其餘的兩個整數表示範圍中的最大分數。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="numerator1">32 位元整數，表示範圍中最小分數的分子。 不可為負值。</param>
      <param name="demoninator1">32 位元整數，表示範圍中最小分數的分母。 不可為負值。</param>
      <param name="numerator2">32 位元整數，表示範圍中最小分數的分母。 不可為負值。</param>
      <param name="demoninator2">32 位元整數，表示範圍中最大分數的分子。 不可為負值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和兩個 32 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 這兩個陣列表示分數的陣列。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="numerator" /> 陣列中的元素數目，這個數目必須和 <paramref name="denominator" /> 陣列中的元素數目相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="numerator">32 位元整數的陣列，指定分數的分子。 陣列中的整數不可為負值。</param>
      <param name="denominator">32 位元整數的陣列，指定分數的分母。 陣列中的整數不可為負值。 指定索引的分母和相同索引的分子相配對。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和四個 32 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 四個陣列表示陣列有理數範圍。 有理數範圍是從最小分數值到最大分數值的所有分數集合。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="numerator1" /> 陣列中的元素數目，這個數目必須與其他三個陣列中的元素數目相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="numerator1">32 位元整數的陣列，指定範圍中最小值的分子。 陣列中的整數不可為負值。</param>
      <param name="denominator1">32 位元整數的陣列，指定範圍中最小值的分母。 陣列中的整數不可為負值。</param>
      <param name="numerator2">32 位元整數的陣列，指定範圍中最大值的分子。 陣列中的整數不可為負值。</param>
      <param name="denominator2">32 位元整數的陣列，指定範圍中最大值的分母。 陣列中的整數不可為負值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和一個 64 位元整數，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 位元)，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">64 位元整數，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和一組 64 位元整數，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 整數的配對表示整數的範圍，第一個整數為範圍中的最小數字，第二個整數為範圍中的最大數字。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 1。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="rangebegin">64 位元整數，表示整數範圍中的最小數字。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
      <param name="rangeend">64 位元整數，表示整數範圍中的最大數字。 不可為負值。 在這個參數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和 64 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong" /> (32 位元)，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為陣列中的元素數目。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">64 位元整數的陣列，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件和兩個 64 位元整數的陣列，初始化 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 類別的新執行個體。 這兩個陣列表示陣列整數範圍。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為 <paramref name="rangebegin" /> 陣列中的元素數目，這個數目必須和 <paramref name="rangeend" /> 陣列中的元素數目相同。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="rangebegin">64 位元整數的陣列，指定整數範圍的最小值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 32 位元整數。</param>
      <param name="rangeend">64 位元整數的陣列，指定整數範圍的最大值。 陣列中的整數不可為負值。 在 64 位元整數儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 物件中之前，會先轉換為 32 位元整數。 指定索引的最大值和相同索引的最小值相配對。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)">
      <summary>使用指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件和字元字串，初始化 <see cref="T:System.Drawing.Imaging.Encoder" /> 類別的新執行個體。 在字串儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中之前，會先轉換為 Null 終端 ASCII 字串。 設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.ValueType" /> 屬性為 <see cref="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii" />，並設定 <see cref="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues" /> 屬性為包含 null 結束字元 (Terminator) 的 ASCII 字串的長度。</summary>
      <param name="encoder">
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，會封裝參數類別目錄的全域唯一識別碼。</param>
      <param name="value">
        <see cref="T:System.String" />，指定儲存在 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameter.Finalize">
      <summary>允許 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件嘗試釋放資源，並執行其他清除作業，不必等到記憶體回收收回 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Encoder">
      <summary>取得或設定與這個 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件相關聯的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。 <see cref="T:System.Drawing.Imaging.Encoder" /> 物件會封裝全域唯一識別項 (GUID)，其指定儲存在這個 <see cref="F:System.Drawing.Imaging.Encoder.Quality" /> 物件中之參數的分類 (例如 <see cref="F:System.Drawing.Imaging.Encoder.ColorDepth" />、<see cref="F:System.Drawing.Imaging.Encoder.Compression" /> 或 <see cref="T:System.Drawing.Imaging.EncoderParameter" />)。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.Encoder" /> 物件，封裝指定儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中參數之分類的 GUID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.NumberOfValues">
      <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值陣列之元素數目。</summary>
      <returns>整數，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中值陣列的元素數目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.Type">
      <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameter.ValueType">
      <summary>取得儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameterValueType" /> 列舉型別的成員，指出儲存在這個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件中的值之資料型別。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameters">
      <summary>封裝 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件的陣列。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 類別的新執行個體，這個執行個體可以含有一個 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.#ctor(System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 類別的新執行個體，這個執行個體可以含有指定數目的 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件。</summary>
      <param name="count">整數，這個整數指定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件可以包含的 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 物件數目。</param>
    </member>
    <member name="M:System.Drawing.Imaging.EncoderParameters.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Imaging.EncoderParameters" /> 物件使用的所有資源。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.EncoderParameters.Param">
      <summary>取得或設定 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件的陣列。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 物件的陣列。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderParameterValueType">
      <summary>指定搭配影像的 <see cref="Overload:System.Drawing.Image.Save" /> 或 <see cref="Overload:System.Drawing.Image.SaveAdd" /> 方法使用之 <see cref="T:System.Drawing.Imaging.EncoderParameter" /> 的資料類型。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeAscii">
      <summary>8 位元的 ASCII 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeByte">
      <summary>8 位元不帶正負號的整數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLong">
      <summary>32 位元不帶正負號的整數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeLongRange">
      <summary>指定整數值範圍的兩個長數值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypePointer">
      <summary>自訂中繼資料的區塊指標。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRational">
      <summary>一對 32 位元不帶正負號的整數。 每個配對表示分數，第一個整數為分子，第二個整數為分母。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeRationalRange">
      <summary>一組四個 32 位元不帶正負號的整數。 前兩個整數表示一個分數，而後兩個整數表示第二個分數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeShort">
      <summary>16 位元不帶正負號的整數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderParameterValueType.ValueTypeUndefined">
      <summary>未定義任何資料類型的位元組。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.EncoderValue">
      <summary>使用 <see cref="M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)" /> 或 <see cref="M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)" /> 方法時，用於指定要傳遞至 JPEG 或 TIFF 影像編碼器的參數值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeCMYK">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ColorTypeYCCK">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT3">
      <summary>指定 CCITT3 壓縮配置。 可以傳遞至 TIFF 編碼器來做為屬於壓縮分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionCCITT4">
      <summary>指定 CCITT4 壓縮配置。 可以傳遞至 TIFF 編碼器來做為屬於壓縮分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionLZW">
      <summary>指定 LZW 壓縮配置。 可以傳遞至 TIFF 編碼器來做為屬於壓縮分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionNone">
      <summary>不指定壓縮。 可以傳遞至 TIFF 編碼器來做為屬於壓縮分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.CompressionRle">
      <summary>指定 RLE 壓縮配置。 可以傳遞至 TIFF 編碼器來做為屬於壓縮分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.Flush">
      <summary>指定多重框架的檔案或資料流是否應該關閉。 可以傳遞至 TIFF 編碼器來做為屬於儲存旗標分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionPage">
      <summary>指定框架是否加入至影像的版面大小。 可以傳遞至 TIFF 編碼器來做為屬於儲存旗標分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionResolution">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.FrameDimensionTime">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.LastFrame">
      <summary>指定多重框架影像的最後框架。 可以傳遞至 TIFF 編碼器來做為屬於儲存旗標分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.MultiFrame">
      <summary>指定影像是否具有一個以上的框架 (頁面)。 可以傳遞至 TIFF 編碼器來做為屬於儲存旗標分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderNonProgressive">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.RenderProgressive">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodInterlaced">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.ScanMethodNonInterlaced">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipHorizontal">
      <summary>指定影像是否水平翻轉 (繞著垂直軸)。 可傳送至 JPEG 編碼器做為屬於轉換分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformFlipVertical">
      <summary>指定影像是否垂直翻轉 (繞著水平軸)。 可傳送至 JPEG 編碼器做為屬於轉換分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate180">
      <summary>指定影像是否繞著中心點旋轉 180 度。 可傳送至 JPEG 編碼器做為屬於轉換分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate270">
      <summary>指定影像是否繞著中心點順時針旋轉 270 度。 可傳送至 JPEG 編碼器做為屬於轉換分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.TransformRotate90">
      <summary>指定影像是否繞著中心點順時針旋轉 90 度。 可傳送至 JPEG 編碼器做為屬於轉換分類的參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif87">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.EncoderValue.VersionGif89">
      <summary>不在 GDI+ 1.0 版中使用。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.FrameDimension">
      <summary>提供取得影像框架大小的屬性。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.#ctor(System.Guid)">
      <summary>使用指定的 <see langword="Guid" /> 結構，初始化 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 類別的新執行個體。</summary>
      <param name="guid">
        <see langword="Guid" /> 結構，含有這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的 GUID。</param>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.Equals(System.Object)">
      <summary>傳回數值，表示指定物件是否為等於這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的 <see cref="T:System.Drawing.Imaging.FrameDimension" />。</summary>
      <param name="o">要測試的物件。</param>
      <returns>若 <paramref name="o" /> 是等於這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的 <see cref="T:System.Drawing.Imaging.FrameDimension" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.GetHashCode">
      <summary>傳回這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的雜湊程式碼。</summary>
      <returns>這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的雜湊碼。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.FrameDimension.ToString">
      <summary>將這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件轉換成人們可讀取的字串。</summary>
      <returns>表示這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的字串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Guid">
      <summary>取得全域唯一識別項 (GUID) 來表示這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件。</summary>
      <returns>
        <see langword="Guid" /> 結構，含有表示這個 <see cref="T:System.Drawing.Imaging.FrameDimension" /> 物件的 GUID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Page">
      <summary>取得版面大小。</summary>
      <returns>版面大小。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Resolution">
      <summary>取得解析度大小。</summary>
      <returns>解析度大小。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.FrameDimension.Time">
      <summary>取得時間大小。</summary>
      <returns>時間大小。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageAttributes">
      <summary>包含如何在呈現期間操作點陣圖和中繼檔色彩的相關資訊。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable">
      <summary>清除此 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件的筆刷色彩重新對應表。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>清除預設分類的色鍵 (透明度範圍)。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的色鍵 (透明度範圍)。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經清除色鍵的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>清除預設分類的彩色調整矩陣。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的彩色調整矩陣。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經清除彩色調整矩陣的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>停用預設分類的 Gamma 修正。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)">
      <summary>停用指定分類的 Gamma 修正。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已停用 Gamma 修正的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>清除預設分類的 <see langword="NoOp" /> 設定。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的 <see langword="NoOp" /> 設定。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已清除 <see langword="NoOp" /> 設定的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>清除預設分類的 CMYK (青色-洋紅-黃色-黑色) 輸出色頻設定。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的 (青色-洋紅-黃色-黑色) 輸出色頻設定。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已清除輸出色頻設定的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>清除預設分類之輸出色頻色彩設定檔的設定。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類之輸出色頻色彩設定檔的設定。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已清除輸出色頻設定檔設定的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>清除預設分類的色彩重新對應表。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的色彩重新對應表。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已清除重新對應表的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>清除預設分類的閾值。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)">
      <summary>清除指定分類的閾值。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已清除閾值的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件的完全相同複本。</summary>
      <returns>這個類別建立的 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，其轉型為物件。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)">
      <summary>根據指定分類的調整設定來調整調色盤中的色彩。</summary>
      <param name="palette">
        <see cref="T:System.Drawing.Imaging.ColorPalette" />，其在輸入時會包含要調整的調色盤，而在輸出時會包含調整過的調色盤。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定其調整設定將套用至調色盤的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>設定筆刷分類的色彩重新對應表。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 物件的陣列。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)">
      <summary>設定預設分類的色鍵。</summary>
      <param name="colorLow">低色鍵值。</param>
      <param name="colorHigh">高色鍵值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的色鍵 (透明度範圍)。</summary>
      <param name="colorLow">低色鍵值。</param>
      <param name="colorHigh">高色鍵值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經設定色鍵的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)">
      <summary>設定預設分類的彩色調整矩陣和灰階調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
      <param name="grayMatrix">灰階調整矩陣。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>設定預設分類的彩色調整矩陣和灰階調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
      <param name="grayMatrix">灰階調整矩陣。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，指定將會受到彩色調整和灰階調整矩陣影響之影像和色彩的類型。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的彩色調整矩陣和灰階調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
      <param name="grayMatrix">灰階調整矩陣。</param>
      <param name="mode">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，指定將會受到彩色調整和灰階調整矩陣影響之影像和色彩的類型。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已設定彩色調整和灰階調整矩陣的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)">
      <summary>設定預設分類的彩色調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)">
      <summary>設定預設分類的彩色調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，指定將會受到彩色調整矩陣影響之影像和色彩的類型。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的彩色調整矩陣。</summary>
      <param name="newColorMatrix">彩色調整矩陣。</param>
      <param name="mode">
        <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> 的元素，指定將會受到彩色調整矩陣影響之影像和色彩的類型。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經設定彩色調整矩陣的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)">
      <summary>設定預設分類的 Gamma 值。</summary>
      <param name="gamma">Gamma 修正值。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的 Gamma 值。</summary>
      <param name="gamma">Gamma 修正值。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 列舉的元素，指定已經設定 Gamma 值的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>關閉預設分類的彩色調整。 您可以呼叫 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法，以重新啟用在呼叫 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法之前既有的彩色調整設定。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)">
      <summary>關閉指定分類的彩色調整。 您可以呼叫 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> 方法，以重新啟用在呼叫 <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" /> 方法之前既有的彩色調整設定。</summary>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已關閉色彩修正的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)">
      <summary>設定預設分類的 CMYK (青色-洋紅-黃色-黑色) 輸出色頻。</summary>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的元素，指定輸出色頻。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的 CMYK (青色-洋紅-黃色-黑色) 輸出色頻。</summary>
      <param name="flags">
        <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> 的元素，指定輸出色頻。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經設定輸出色頻的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)">
      <summary>設定預設分類的輸出色頻色彩設定檔案。</summary>
      <param name="colorProfileFilename">色彩設定檔的路徑名稱。 如果色彩設定檔位於 %SystemRoot%\System32\Spool\Drivers\Color 目錄中，這個參數可以是檔案名稱。 否則，這個參數就必須是完整路徑名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的輸出色頻色彩設定檔案。</summary>
      <param name="colorProfileFilename">色彩設定檔的路徑名稱。 如果色彩設定檔位於 %SystemRoot%\System32\Spool\Drivers\Color 目錄中，這個參數可以是檔案名稱。 否則，這個參數就必須是完整路徑名稱。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已設定輸出色頻色彩設定檔的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])">
      <summary>設定預設分類的色彩重新對應表。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 型別的色彩配對陣列。 每個色彩配對包含現有色彩 (第一個值) 和現有色彩所要對應至的色彩 (第二個值)。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的色彩重新對應表。</summary>
      <param name="map">
        <see cref="T:System.Drawing.Imaging.ColorMap" /> 型別的色彩配對陣列。 每個色彩配對包含現有色彩 (第一個值) 和現有色彩所要對應至的色彩 (第二個值)。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已設定色彩重新對應表的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)">
      <summary>設定預設分類的閾值 (透明度範圍)。</summary>
      <param name="threshold">指定閾值的實數。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)">
      <summary>設定指定分類的閾值 (透明度範圍)。</summary>
      <param name="threshold">閾值，介於 0.0 到 1.0 之間，做為要對應至最大值或最小值的排序色彩中斷點。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> 的元素，指定已經設定色彩閾值的分類。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)">
      <summary>設定環繞模式，這個模式是用來決定如何橫越形狀或在形狀界限並排紋理。 當紋理小於它正在填滿的形狀時，紋理會橫越形狀來並排，以便將它填滿。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的元素，指定如何使用重複的影像複本來並排填滿區域。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)">
      <summary>指定用來決定如何橫越形狀或在形狀界限並排紋理的環繞模式和色彩。 當紋理小於它正在填滿的形狀時，紋理會橫越形狀來並排，以便將它填滿。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的元素，指定如何使用重複的影像複本來並排填滿區域。</param>
      <param name="color">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，指定所呈現影像外部的像素色彩。 如果模式參數設定為 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />，而且傳遞至 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的來源矩形大於影像本身，就會顯示這個色彩。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)">
      <summary>指定用來決定如何橫越形狀或在形狀界限並排紋理的環繞模式和色彩。 當紋理小於它正在填滿的形狀時，紋理會橫越形狀來並排，以便將它填滿。</summary>
      <param name="mode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 的元素，指定如何使用重複的影像複本來並排填滿區域。</param>
      <param name="color">色彩物件，指定所呈現影像外部的像素色彩。 如果模式參數設定為 <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" />，而且傳遞至 <see cref="Overload:System.Drawing.Graphics.DrawImage" /> 的來源矩形大於影像本身，就會顯示這個色彩。</param>
      <param name="clamp">這個參數沒有作用。 將它設為 <see langword="false" />。</param>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecFlags">
      <summary>提供影像編碼器/解碼器 (轉碼器) 的屬性。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.BlockingDecode">
      <summary>解碼器在解碼處理期間有封鎖行為。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Builtin">
      <summary>轉碼器內建於 GDI+。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Decoder">
      <summary>轉碼器支援解碼 (讀取)。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.Encoder">
      <summary>轉碼器支援編碼 (儲存)。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SeekableEncode">
      <summary>編碼器需要可搜尋的輸出資料流。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportBitmap">
      <summary>轉碼器支援光柵 (Raster) 影像 (點陣圖)。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.SupportVector">
      <summary>轉碼器支援向量影像 (中繼檔)。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.System">
      <summary>未使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageCodecFlags.User">
      <summary>未使用。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageCodecInfo">
      <summary>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 類別提供必要的儲存成員和方法，以擷取已安裝之影像編碼器和解碼器 (稱為轉碼器) 的所有相關資訊。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders">
      <summary>傳回 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件的陣列，物件含有內建於 GDI+ 的影像解碼器相關資訊。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件的陣列。 陣列中的每個 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件包含其中一個內建影像解碼器的相關資訊。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders">
      <summary>傳回 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件的陣列，物件含有內建於 GDI+ 的影像編碼器相關資訊。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件的陣列。 陣列中的每個 <see cref="T:System.Drawing.Imaging.ImageCodecInfo" /> 物件包含其中一個內建影像編碼器的相關資訊。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Clsid">
      <summary>取得或設定 <see cref="T:System.Guid" /> 結構，含有識別特定 Codec 的 GUID。</summary>
      <returns>
        <see cref="T:System.Guid" /> 結構，含有識別特定 Codec 的 GUID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.CodecName">
      <summary>取得或設定含有 Codec 的名稱之字串。</summary>
      <returns>字串，含有 Codec 的名稱。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.DllName">
      <summary>取得或設定字串，這個字串含有存留 Codec 的 DLL 路徑名稱。 如果 Codec 不是在 DLL 中，則這個指標為 <see langword="null" />。</summary>
      <returns>字串，含有存留 Codec 的 DLL 路徑名稱。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FilenameExtension">
      <summary>取得或設定含有在 Codec 中所使用副檔名的字串。 副檔名是以分號隔開。</summary>
      <returns>字串，含有在 Codec 中所使用的副檔名。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Flags">
      <summary>取得或設定 32 位元值，用來儲存 Codec 的相關額外資訊。 這個屬性會從 <see cref="T:System.Drawing.Imaging.ImageCodecFlags" /> 列舉型別 (Enumeration) 傳回旗標組合。</summary>
      <returns>32 位元值，用來儲存 Codec 的相關額外資訊。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatDescription">
      <summary>取得或設定描述 Codec 的檔案格式之字串。</summary>
      <returns>字串，描述 Codec 的檔案格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.FormatID">
      <summary>取得或設定 <see cref="T:System.Guid" /> 結構，含有識別 Codec 的格式之 GUID。</summary>
      <returns>
        <see cref="T:System.Guid" /> 結構，含有識別 Codec 的格式之 GUID。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.MimeType">
      <summary>取得或設定字串，含有 Codec 的多用途網際網路郵件延伸標準 (Multipurpose Internet Mail Extension，MIME) 類型。</summary>
      <returns>字串，含有 Codec 的多用途網際網路郵件延伸標準 (MIME) 類型。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignatureMasks">
      <summary>取得或設定可以做為篩選條件的位元組二維陣列。</summary>
      <returns>位元組的二維陣列，可以做為篩選條件。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns">
      <summary>取得或設定表示 Codec 的簽章之位元組二維陣列。</summary>
      <returns>位元組二維陣列，表示 Codec 的簽章。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageCodecInfo.Version">
      <summary>取得或設定 Codec 的版本號碼。</summary>
      <returns>Codec 的版本號碼。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFlags">
      <summary>指定包含於 <see cref="T:System.Drawing.Image" /> 物件中的像素資料屬性 (Attribute)。 <see cref="P:System.Drawing.Image.Flags" /> 屬性會傳回此列舉型別的成員。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Caching">
      <summary>可對像素資料進行快取處理以利快速存取。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>像素資料會使用 CMYK 色彩空間。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>像素資料為灰階。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>像素資料會使用 RGB 色彩空間。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>指定使用 YCBCR 色彩空間來儲存影像。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>指定使用 YCCK 色彩空間來儲存影像。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>像素資料包含 Alpha 資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>指定在影像中儲存 DPI 資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>指定在影像中儲存像素大小。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>指定像素資料具有不為 0 (透明) 和 255 (不透明) 的 Alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.None">
      <summary>沒有格式資訊。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>像素資料可以部分縮放，但有某些限制。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>像素資料是唯讀的。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageFlags.Scalable">
      <summary>像素資料可以縮放。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.ImageFormat">
      <summary>指定影像的檔案格式。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>使用指定的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 結構，初始化 <see cref="T:System.Guid" /> 類別的新執行個體。</summary>
      <param name="guid">
        <see cref="T:System.Guid" /> 結構，指定特定的影像格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>傳回數值，表示指定物件是否為等於這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件。</summary>
      <param name="o">要測試的物件。</param>
      <returns>如果 <paramref name="o" /> 是相當於這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件的 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>傳回表示這個物件的雜湊程式碼值。</summary>
      <returns>表示這個物件的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.ImageFormat.ToString">
      <summary>將這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件轉換成人們可讀取的字串。</summary>
      <returns>表示這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件的字串。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Bmp">
      <summary>取得點陣圖 (BMP) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示點陣圖影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Emf">
      <summary>取得增強型中繼檔 (EMF) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示增強型中繼檔影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Exif">
      <summary>取得可交換影像檔 (Exchangeable Image File，Exif) 格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 Exif 格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Gif">
      <summary>取得圖形交換格式 (GIF) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 GIF 影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Guid">
      <summary>取得 <see cref="T:System.Guid" /> 結構，表示這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件。</summary>
      <returns>
        <see cref="T:System.Guid" /> 結構，表示這個 <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Icon">
      <summary>取得 Windows 圖示影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 Windows 圖示影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>取得 Joint Photographic Experts Group (JPEG) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 JPEG 影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>取得記憶體中點陣圖的格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示記憶體中點陣圖的格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Png">
      <summary>取得 W3C 可攜式網路圖形 (W3C Portable Network Graphics，PNG) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 PNG 影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Tiff">
      <summary>取得標記的影像檔案格式 (Tagged Image File Format，TIFF) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 TIFF 影像格式。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.ImageFormat.Wmf">
      <summary>取得 Windows 中繼檔 (WMF) 影像格式。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.ImageFormat" /> 物件，表示 Windows 中繼檔影像格式。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.ImageLockMode">
      <summary>指定傳遞至 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法的旗標參數之旗標。 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法會鎖定影像的部分，以便您可以讀取或寫入像素資料。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadOnly">
      <summary>指定鎖定影像的部分供讀取之用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.ReadWrite">
      <summary>指定鎖定影像的部分供讀取或寫入之用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.UserInputBuffer">
      <summary>指定用來讀取或寫入像素資料的緩衝區是由使用者所配置。 如果設定這個旗標，則 <see cref="Overload:System.Drawing.Bitmap.LockBits" /> 方法的 <paramref name="flags" /> 參數會做為輸入參數 (也可能做為輸出參數)。 如果清除這個旗標，則 <paramref name="flags" /> 參數只會做為輸出參數。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.ImageLockMode.WriteOnly">
      <summary>指定鎖定影像的部分供寫入之用。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.Metafile">
      <summary>定義圖形中繼檔 (Metafile)。 中繼檔，包含用在說明一系列可記錄 (建構) 和重播 (顯示) 之圖形操作的記錄。 這個類別是不可繼承的。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Boolean)">
      <summary>從指定的控制代碼初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="henhmetafile">增強型中繼檔的控制代碼。</param>
      <param name="deleteEmf">
        <see langword="true" /> 表示在刪除 <see cref="T:System.Drawing.Imaging.Metafile" /> 時刪除增強型中繼檔控制代碼，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>從指定的裝置內容控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別 (Enumeration)，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的裝置內容控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別 (Enumeration)，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 字串可以提供來命名檔案。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="emfType">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>從指定的控制代碼和 <see cref="T:System.Drawing.Imaging.Metafile" /> 初始化 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 類別的新執行個體。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 控制代碼。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader,System.Boolean)">
      <summary>從指定的控制代碼和 <see cref="T:System.Drawing.Imaging.Metafile" /> 初始化 <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" /> 類別的新執行個體。 而且，<paramref name="deleteWmf" /> 參數還可以在刪除中繼檔時用來刪除控制代碼。</summary>
      <param name="hmetafile">
        <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 控制代碼。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <param name="deleteWmf">
        <see langword="true" /> 表示在刪除 <see cref="T:System.Drawing.Imaging.Metafile" /> 時刪除新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的控制代碼，否則為 <see langword="false" />。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle)">
      <summary>從指定的裝置內容 (其界限是由指定的矩形加以限定) 來初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定)，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定) 和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定) 和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 字串可以提供來命名檔案。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="desc">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF)">
      <summary>從指定的裝置內容 (其界限是由指定的矩形加以限定) 來初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定)，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定) 和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的裝置內容 (其界限是由使用提供之測量單位的指定矩形加以限定) 和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 字串可以提供來命名檔案。</summary>
      <param name="referenceHdc">裝置內容的控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream)">
      <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，用於建立新的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="stream" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr)">
      <summary>從指定的資料流，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入含有新 <see cref="T:System.Drawing.Imaging.Metafile" /> 之描述性名稱的字串。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼和表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 可以加入含有新 <see cref="T:System.Drawing.Imaging.Metafile" /> 之描述性名稱的字串。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼和表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.IO.Stream,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>從指定的資料流、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 可以加入含有新 <see cref="T:System.Drawing.Imaging.Metafile" /> 之描述性名稱的字串。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，包含這個 <see cref="T:System.Drawing.Imaging.Metafile" /> 的資料。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String)">
      <summary>從指定的檔案名稱初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="filename">
        <see cref="T:System.String" />，表示用於建立新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr)">
      <summary>使用指定的檔案名稱，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 之格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Imaging.EmfType,System.String)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 之格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入描述性字串。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼和表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形之 <see cref="T:System.Drawing.Rectangle" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.Rectangle" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入描述性字串。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.Rectangle,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形之 <see cref="T:System.Drawing.Rectangle" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入描述性字串。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.Rectangle" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼和表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形之 <see cref="T:System.Drawing.RectangleF" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.Drawing.Imaging.EmfType,System.String)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限之矩形的 <see cref="T:System.Drawing.RectangleF" /> 結構、提供的測量單位和指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 格式的 <see cref="T:System.Drawing.Imaging.EmfType" /> 列舉型別，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入描述性字串。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="type">
        <see cref="T:System.Drawing.Imaging.EmfType" />，指定 <see cref="T:System.Drawing.Imaging.Metafile" /> 的格式。</param>
      <param name="description">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.#ctor(System.String,System.IntPtr,System.Drawing.RectangleF,System.Drawing.Imaging.MetafileFrameUnit,System.String)">
      <summary>使用指定的檔案名稱、裝置內容的 Windows 控制代碼、表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形之 <see cref="T:System.Drawing.RectangleF" /> 結構和提供的測量單位，初始化 <see cref="T:System.Drawing.Imaging.Metafile" /> 類別的新執行個體。 也可以加入描述性字串。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，表示新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的檔案名稱。</param>
      <param name="referenceHdc">裝置內容的 Windows 控制代碼。</param>
      <param name="frameRect">
        <see cref="T:System.Drawing.RectangleF" />，表示限定新 <see cref="T:System.Drawing.Imaging.Metafile" /> 界限的矩形。</param>
      <param name="frameUnit">
        <see cref="T:System.Drawing.Imaging.MetafileFrameUnit" />，指定 <paramref name="frameRect" /> 的測量單位。</param>
      <param name="desc">
        <see cref="T:System.String" />，包含新 <see cref="T:System.Drawing.Imaging.Metafile" /> 的描述性名稱。</param>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetHenhmetafile">
      <summary>傳回增強型 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 控制代碼。</summary>
      <returns>這個增強型 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>傳回與這個 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <returns>與這個 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr)">
      <summary>傳回與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <param name="henhmetafile">其標頭已傳回的增強型 <see cref="T:System.Drawing.Imaging.Metafile" /> 控制代碼。</param>
      <returns>與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IntPtr,System.Drawing.Imaging.WmfPlaceableFileHeader)">
      <summary>傳回與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <param name="hmetafile">要傳回其標頭的 <see cref="T:System.Drawing.Imaging.Metafile" /> 控制代碼。</param>
      <param name="wmfHeader">
        <see cref="T:System.Drawing.Imaging.WmfPlaceableFileHeader" />。</param>
      <returns>與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.IO.Stream)">
      <summary>傳回與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <param name="stream">
        <see cref="T:System.IO.Stream" />，含有其標頭已擷取的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <returns>與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.GetMetafileHeader(System.String)">
      <summary>傳回與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <param name="fileName">
        <see cref="T:System.String" />，含有其標頭已擷取的 <see cref="T:System.Drawing.Imaging.Metafile" />。</param>
      <returns>與指定 <see cref="T:System.Drawing.Imaging.MetafileHeader" /> 相關聯的 <see cref="T:System.Drawing.Imaging.Metafile" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.Metafile.PlayRecord(System.Drawing.Imaging.EmfPlusRecordType,System.Int32,System.Int32,System.Byte[])">
      <summary>播放個別的中繼檔記錄。</summary>
      <param name="recordType">
        <see cref="T:System.Drawing.Imaging.EmfPlusRecordType" /> 的項目，指定正要播放之中繼檔記錄的類型。</param>
      <param name="flags">旗標集，指定記錄的屬性 (Attribute)。</param>
      <param name="dataSize">記錄資料中的位元組數目。</param>
      <param name="data">含有記錄資料的位元組陣列。</param>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileFrameUnit">
      <summary>指定用來調整中繼檔 (Metafile) 大小和位置的矩形度量單位。 這會在 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件的建立期間加以指定。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Document">
      <summary>度量單位為 1/300 英吋。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.GdiCompatible">
      <summary>度量單位為 0.01 公釐。 便於與 GDI 相容。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Inch">
      <summary>度量單位為 1 英吋。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Millimeter">
      <summary>度量單位為 1 公釐。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Pixel">
      <summary>度量單位為 1 像素。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileFrameUnit.Point">
      <summary>度量單位為 1 個印表機的點。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileHeader">
      <summary>含有關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的屬性。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsDisplay">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否與裝置相關。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 與裝置相關，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmf">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為 Windows 加強型中繼檔格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為 Windows 加強型中繼檔格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfOrEmfPlus">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為 Windows 加強型中繼檔格式或 Windows 加強型中繼檔加強格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為 Windows 加強型中繼檔格式或 Windows 加強型中繼檔加強格式，則傳回 <see langword="true" />；否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlus">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為 Windows 加強型中繼檔加強格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為 Windows 加強型中繼檔加強格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusDual">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為雙重加強型中繼檔格式。 這個格式支援加強型格式和加強型加強格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為雙重加強型中繼檔格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsEmfPlusOnly">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否只支援 Windows 加強型中繼檔加強格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 只支援 Windows 加強型中繼檔加強格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmf">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為 Windows 中繼檔格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為 Windows 中繼檔格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Imaging.MetafileHeader.IsWmfPlaceable">
      <summary>傳回值，指示關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 是否為 Windows 可置入中繼檔格式。</summary>
      <returns>如果關聯的 <see cref="T:System.Drawing.Imaging.Metafile" /> 為 Windows 可置入中繼檔格式，則傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Bounds">
      <summary>取得限定關聯之 <see cref="T:System.Drawing.Rectangle" /> 界限的 <see cref="T:System.Drawing.Imaging.Metafile" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，限定關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的界限。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiX">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的水平解析度 (單位為 Dots Per Inch，DPI)。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的水平解析度 (單位為 Dots Per Inch，DPI)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.DpiY">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的垂直解析度 (單位為 Dots Per Inch，DPI)。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的垂直解析度 (單位為 Dots Per Inch，DPI)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.EmfPlusHeaderSize">
      <summary>取得加強型中繼檔 (Metafile) 加上標頭檔 (Header File) 的大小 (單位為位元組)。</summary>
      <returns>加強型中繼檔加上標頭檔的大小 (單位為位元組)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiX">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的邏輯水平解析度 (單位為 Dots Per Inch，DPI)。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的邏輯水平解析度 (單位為 Dots Per Inch，DPI)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.LogicalDpiY">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的邏輯垂直解析度 (單位為 Dots Per Inch，DPI)。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的邏輯垂直解析度 (單位為 Dots Per Inch，DPI)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.MetafileSize">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的大小 (單位為位元組)。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的大小 (單位為位元組)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Type">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的型別。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.MetafileType" /> 列舉型別，表示關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的型別。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.Version">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的版本號碼。</summary>
      <returns>關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的版本號碼。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetafileHeader.WmfHeader">
      <summary>取得關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 Windows 中繼檔 (WMF) 標頭檔。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.MetaHeader" />，含有關聯之 <see cref="T:System.Drawing.Imaging.Metafile" /> 的 WMF 標頭檔。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.MetafileType">
      <summary>指定中繼檔 (Metafile) 的類型。 <see cref="P:System.Drawing.Imaging.MetafileHeader.Type" /> 屬性會傳回此列舉型別的成員。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Emf">
      <summary>指定加強型中繼檔 (EMF) 檔案。 這類檔案只含有 GDI 記錄。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusDual">
      <summary>指定 EMF+ Dual 檔案。 這類檔案含有 GDI+ 記錄和替代的 GDI 記錄，並且可以藉由使用 GDI 或 GDI+ 來顯示。 使用 GDI 來顯示記錄可能會造成某些品質降低。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.EmfPlusOnly">
      <summary>指定 EMF+ 檔案。 這類檔案只含有 GDI+ 記錄，並且必須藉由使用 GDI+ 來顯示。 使用 GDI 來顯示記錄可能會造成不可預期的結果。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Invalid">
      <summary>指定無法在 GDI+ 中辨識的中繼檔格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.Wmf">
      <summary>指定 WMF (Windows 中繼檔) 檔案。 這類檔案只含有 GDI 記錄。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.MetafileType.WmfPlaceable">
      <summary>指定 WMF (Windows 中繼檔) 檔案，這類檔案的前端具有可置入的中繼檔檔頭。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.MetaHeader">
      <summary>含有 Windows 格式 (WMF) 中繼檔 (Metafile) 的資訊。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.MetaHeader.#ctor">
      <summary>初始化 <see langword="MetaHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.HeaderSize">
      <summary>取得或設定標頭檔 (Header File) 的大小 (單位為位元組)。</summary>
      <returns>標頭檔的大小 (單位為位元組)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.MaxRecord">
      <summary>取得或設定相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件中的最大記錄大小 (單位為位元組)。</summary>
      <returns>相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件中的最大記錄大小 (單位為位元組)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoObjects">
      <summary>取得或設定 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件中同時存在的物件最大數目。</summary>
      <returns>
        <see cref="T:System.Drawing.Imaging.Metafile" /> 物件中同時存在的物件最大數目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.NoParameters">
      <summary>未使用。 永遠傳回 0。</summary>
      <returns>一律是 0。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Size">
      <summary>取得或設定相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件的大小 (單位為位元組)。</summary>
      <returns>相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件的大小 (單位為位元組)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Type">
      <summary>取得或設定相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件的型別。</summary>
      <returns>相關聯 <see cref="T:System.Drawing.Imaging.Metafile" /> 物件的型別。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.MetaHeader.Version">
      <summary>取得或設定標頭格式的版本號碼。</summary>
      <returns>標頭格式的版本號碼。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.PaletteFlags">
      <summary>指定在系統調色盤 (Palette) 中色彩日期的型別。 資料可以是有 Alpha 值、僅灰階資料或半色調資料的色彩資料。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.GrayScale">
      <summary>灰階資料。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.Halftone">
      <summary>半色調資料。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PaletteFlags.HasAlpha">
      <summary>Alpha 資料。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PixelFormat">
      <summary>指定影像中每個像素的色彩資料格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Alpha">
      <summary>像素資料含有未預先相乘的 Alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Canonical">
      <summary>預設的像素格式為每像素 32 位元。 此格式會指定 24 位元的色彩深度及 8 位元的 Alpha 色版。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.DontCare">
      <summary>未指定像素格式。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Extended">
      <summary>保留的。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555">
      <summary>像素格式為每像素 16 位元。 色彩資訊會指定 32,768 的色彩漸層，其中 5 位元是紅色、5 位元是綠色、5 位元是藍色，1 位元是 Alpha。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale">
      <summary>像素格式為每像素 16 位元。 色彩資訊會指定 65536 色灰階。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb555">
      <summary>指定格式為每像素 16 位元；各有 5 位元用於紅色、綠色和藍色元件。 剩餘的位元則不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format16bppRgb565">
      <summary>指定格式為每像素 16 位元，5 位元用於紅色元件、6 位元用於綠色元件，5 位元用於藍色元件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format1bppIndexed">
      <summary>指定像素格式為每像素 1 位元，並使用索引色彩。 因此，色彩表中具有兩種色彩。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format24bppRgb">
      <summary>指定格式為每像素 24 位元；各有 8 位元用於紅色、綠色和藍色元件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb">
      <summary>指定格式為每像素 32 位元；各有 8 位元用於 Alpha、紅色、綠色和藍色元件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppPArgb">
      <summary>指定格式為每像素 32 位元；各有 8 位元用於 Alpha、紅色、綠色和藍色元件。 紅色、綠色、藍色元件會根據 Alpha 元件來預先相乘。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format32bppRgb">
      <summary>指定格式為每像素 32 位元；各有 8 位元用於紅色、綠色和藍色元件。 剩餘的 8 位元則不使用。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb">
      <summary>指定格式為每像素 48 位元；各有 16 位元用於紅色、綠色和藍色元件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format4bppIndexed">
      <summary>指定格式為每像素 4 位元的索引色彩。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppArgb">
      <summary>指定格式為每像素 64 位元；各有 16 位元用於 Alpha、紅色、綠色和藍色元件。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format64bppPArgb">
      <summary>指定格式為每像素 64 位元；各有 16 位元用於 Alpha、紅色、綠色和藍色元件。 紅色、綠色、藍色元件會根據 Alpha 元件來預先相乘。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Format8bppIndexed">
      <summary>指定格式為每像素 8 位元的索引色彩。 因此，色彩表中具有 256 種色彩。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Gdi">
      <summary>像素資料含有 GDI 色彩。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Indexed">
      <summary>像素資料含有色彩索引值，這表示這些值是系統色彩表中色彩的索引 (相對於個別的色彩值)。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Max">
      <summary>這個列舉型別的最大值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.PAlpha">
      <summary>像素格式含有預先相乘的 Alpha 值。</summary>
    </member>
    <member name="F:System.Drawing.Imaging.PixelFormat.Undefined">
      <summary>未定義像素格式。</summary>
    </member>
    <member name="T:System.Drawing.Imaging.PlayRecordCallback">
      <summary>不使用這個委派。 如需列舉中繼檔 (Metafile) 記錄的範例，請參閱 <see cref="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />。</summary>
      <param name="recordType">未使用。</param>
      <param name="flags">未使用。</param>
      <param name="dataSize">未使用。</param>
      <param name="recordData">未使用。</param>
    </member>
    <member name="T:System.Drawing.Imaging.PropertyItem">
      <summary>封裝中繼資料 (Metadata) 屬性來包括在影像檔中。 無法被繼承。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Id">
      <summary>取得或設定屬性 ID。</summary>
      <returns>表示屬性 ID 的整數。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Len">
      <summary>取得或設定 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 屬性的長度 (以位元組為單位)。</summary>
      <returns>整數，表示 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 位元組陣列的長度 (以位元組為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Type">
      <summary>取得或設定定義 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 屬性中包含之資料型別的整數。</summary>
      <returns>整數，定義 <see cref="P:System.Drawing.Imaging.PropertyItem.Value" /> 中包含的資料型別。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.PropertyItem.Value">
      <summary>取得或設定屬性項目的值。</summary>
      <returns>位元組陣列，表示屬性項目的值。</returns>
    </member>
    <member name="T:System.Drawing.Imaging.WmfPlaceableFileHeader">
      <summary>定義可置入中繼檔 (Metafile)。 無法被繼承。</summary>
    </member>
    <member name="M:System.Drawing.Imaging.WmfPlaceableFileHeader.#ctor">
      <summary>初始化 <see langword="WmfPlaceableFileHeader" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxBottom">
      <summary>取得或設定在輸出裝置上中繼檔影像週框 (Bounding Rectangle) 右下角的 Y 座標。</summary>
      <returns>在輸出裝置上中繼檔影像週框 (Bounding Rectangle) 右下角的 Y 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxLeft">
      <summary>取得或設定在輸出裝置上中繼檔影像週框左上角的 X 座標。</summary>
      <returns>在輸出裝置上中繼檔影像週框左上角的 X 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxRight">
      <summary>取得或設定在輸出裝置上中繼檔影像週框右下角的 X 座標。</summary>
      <returns>在輸出裝置上中繼檔影像週框右下角的 X 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.BboxTop">
      <summary>取得或設定在輸出裝置上中繼檔影像週框左上角的 Y 座標。</summary>
      <returns>在輸出裝置上中繼檔影像週框左上角的 Y 座標。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Checksum">
      <summary>取得或設定標頭中前十個 <see langword="WORD" /> 的總和檢查碼 (Checksum) 值。</summary>
      <returns>標頭中前十個 <see langword="WORD" /> 的總和檢查碼值。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Hmf">
      <summary>取得或設定在記憶體中的中繼檔控制代碼。</summary>
      <returns>記憶體中的中繼檔控制代碼。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Inch">
      <summary>取得或設定每英吋的 Twip 數目。</summary>
      <returns>每英吋的 Twip 數目。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Key">
      <summary>取得或設定數值，表示可置入中繼檔標頭的存在。</summary>
      <returns>數值，表示可置入中繼檔標頭的存在。</returns>
    </member>
    <member name="P:System.Drawing.Imaging.WmfPlaceableFileHeader.Reserved">
      <summary>保留的。 請勿使用。</summary>
      <returns>保留的。 請勿使用。</returns>
    </member>
    <member name="T:System.Drawing.Pen">
      <summary>定義用來繪製直線與曲線的物件。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
      <summary>使用指定的 <see cref="T:System.Drawing.Pen" /> 初始化 <see cref="T:System.Drawing.Brush" /> 類別的新執行個體。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定這個 <see cref="T:System.Drawing.Pen" /> 的填滿屬性。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
      <summary>使用指定的 <see cref="T:System.Drawing.Pen" /> 和 <see cref="T:System.Drawing.Brush" />，初始化 <see cref="P:System.Drawing.Pen.Width" /> 類別的新執行個體。</summary>
      <param name="brush">
        <see cref="T:System.Drawing.Brush" />，決定這個 <see cref="T:System.Drawing.Pen" /> 的特性。</param>
      <param name="width">新 <see cref="T:System.Drawing.Pen" /> 的寬度。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
      <summary>使用指定的色彩，初始化 <see cref="T:System.Drawing.Pen" /> 類別的新執行個體。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 結構，表示這個 <see cref="T:System.Drawing.Pen" /> 的色彩。</param>
    </member>
    <member name="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
      <summary>使用指定的 <see cref="T:System.Drawing.Color" /> 和 <see cref="P:System.Drawing.Pen.Width" /> 屬性，初始化 <see cref="T:System.Drawing.Pen" /> 類別的新執行個體。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 結構，表示這個 <see cref="T:System.Drawing.Pen" /> 的色彩。</param>
      <param name="width">值，表示這個 <see cref="T:System.Drawing.Pen" /> 的寬度。</param>
    </member>
    <member name="M:System.Drawing.Pen.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Pen" /> 的完全相同複本。</summary>
      <returns>
        <see cref="T:System.Object" />，可以轉型成 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="M:System.Drawing.Pen.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Pen" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Pen.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>將這個 <see cref="T:System.Drawing.Pen" /> 的轉換矩陣乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">轉換矩陣所要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，將這個 <see cref="T:System.Drawing.Pen" /> 的轉換矩陣乘以指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">轉換矩陣要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</param>
      <param name="order">執行乘法運算所使用的順序。</param>
    </member>
    <member name="M:System.Drawing.Pen.ResetTransform">
      <summary>將這個 <see cref="T:System.Drawing.Pen" /> 的幾何轉換矩陣重設為單位矩陣。</summary>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single)">
      <summary>根據指定的角度來旋轉局部幾何轉換。 這個方法會將旋轉附加到轉換之前。</summary>
      <param name="angle">旋轉的角度。</param>
    </member>
    <member name="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的角度來旋轉局部幾何轉換。</summary>
      <param name="angle">旋轉的角度。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加旋轉矩陣。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>根據指定的因數來縮放局部幾何轉換。 這個方法會將縮放矩陣附加到轉換之前。</summary>
      <param name="sx">要在 X 軸方向縮放轉換所用的因數。</param>
      <param name="sy">要在 Y 座標方向縮放轉換所用的因數。</param>
    </member>
    <member name="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的因數來縮放局部幾何轉換。</summary>
      <param name="sx">要在 X 軸方向縮放轉換所用的因數。</param>
      <param name="sy">要在 Y 座標方向縮放轉換所用的因數。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" />，指定要在之後或之前附加縮放矩陣。</param>
    </member>
    <member name="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
      <summary>設定值，決定用於結束以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之直線的帽緣樣式。</summary>
      <param name="startCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />，代表以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之直線開端所用的帽緣樣式。</param>
      <param name="endCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />，代表以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之直線末端所用的帽緣樣式。</param>
      <param name="dashCap">
        <see cref="T:System.Drawing.Drawing2D.LineCap" />，代表以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之短折線開端或末端所用的帽緣樣式。</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>根據指定的維度來轉換局部幾何轉換。 這個方法會將轉譯附加到轉換之前。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
    </member>
    <member name="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的順序來轉換局部幾何轉換。</summary>
      <param name="dx">x 中轉譯的值。</param>
      <param name="dy">y 中轉譯的值。</param>
      <param name="order">用來套用轉譯的順序 (附加在前端或後端)。</param>
    </member>
    <member name="P:System.Drawing.Pen.Alignment">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Pen" /> 的對齊。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的值不是 <see cref="T:System.Drawing.Drawing2D.PenAlignment" /> 的成員。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Alignment" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PenAlignment" />，表示這個 <see cref="T:System.Drawing.Pen" /> 的對齊。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Brush">
      <summary>取得或設定 <see cref="T:System.Drawing.Brush" />，決定這個 <see cref="T:System.Drawing.Pen" /> 的屬性。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Brush" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Brush" />，決定這個 <see cref="T:System.Drawing.Pen" /> 的屬性。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Color">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Pen" /> 的色彩。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Color" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，表示這個 <see cref="T:System.Drawing.Pen" /> 的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CompoundArray">
      <summary>取得或設定指定複合畫筆的值陣列。 複合畫筆會繪製由平行線和間距組成的複合直線。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CompoundArray" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>實數陣列，指定複合陣列。 陣列中的元素必須使用遞增順序，不小於 0 且不大於 1。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CustomEndCap">
      <summary>取得或設定自訂帽緣，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線末端。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomEndCap" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之直線末端所用的帽緣。</returns>
    </member>
    <member name="P:System.Drawing.Pen.CustomStartCap">
      <summary>取得或設定自訂帽緣，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線開端。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.CustomStartCap" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />，表示以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之直線開端所用的帽緣。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashCap">
      <summary>取得或設定帽緣樣式，用於組成以這個 <see cref="T:System.Drawing.Pen" /> 所繪製短折線的虛線末端。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的值不是 <see cref="T:System.Drawing.Drawing2D.DashCap" /> 的成員。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashCap" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.DashCap" /> 值，表示帽緣樣式，用於組成以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之短折線的虛線開端和末端。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashOffset">
      <summary>取得或設定從直線開端至虛線圖樣開端的距離。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashOffset" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>從直線開端至虛線圖樣開端的距離。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashPattern">
      <summary>取得或設定自訂虛線和間距的陣列。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashPattern" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>實數陣列，指定短折線中交替的虛線和間距的長度。</returns>
    </member>
    <member name="P:System.Drawing.Pen.DashStyle">
      <summary>取得或設定樣式，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的短折線。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.DashStyle" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.DashStyle" />，表示以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之短折線所用的樣式。</returns>
    </member>
    <member name="P:System.Drawing.Pen.EndCap">
      <summary>取得或設定帽緣樣式，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線末端。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成員。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.EndCap" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值，表示帽緣樣式，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線末端。</returns>
    </member>
    <member name="P:System.Drawing.Pen.LineJoin">
      <summary>取得或設定以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之兩條連續直線末端的接合樣式。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.LineJoin" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.LineJoin" />，表示以這個 <see cref="T:System.Drawing.Pen" /> 所繪製之兩條連續直線末端的接合樣式。</returns>
    </member>
    <member name="P:System.Drawing.Pen.MiterLimit">
      <summary>取得或設定斜接角上的接合厚度限制。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.MiterLimit" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>斜接角上的接合厚度限制。</returns>
    </member>
    <member name="P:System.Drawing.Pen.PenType">
      <summary>取得以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線樣式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.PenType" /> 列舉，指定以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線樣式。</returns>
    </member>
    <member name="P:System.Drawing.Pen.StartCap">
      <summary>取得或設定帽緣樣式，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線開端。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的值不是 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 的成員。</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.StartCap" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Drawing2D.LineCap" /> 值，表示帽緣樣式，用於以這個 <see cref="T:System.Drawing.Pen" /> 所繪製的直線開端。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Transform">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Pen" /> 幾何轉換的複本。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Transform" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 的複本，代表這個 <see cref="T:System.Drawing.Pen" /> 的幾何轉換。</returns>
    </member>
    <member name="P:System.Drawing.Pen.Width">
      <summary>取得或設定這個 <see cref="T:System.Drawing.Pen" /> 的寬度，以用於繪圖的 <see cref="T:System.Drawing.Graphics" /> 物件為單位。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Pen.Width" /> 屬性設定於不可變動的 <see cref="T:System.Drawing.Pen" /> 上，例如 <see cref="T:System.Drawing.Pens" /> 類別傳回的項目。</exception>
      <returns>這個 <see cref="T:System.Drawing.Pen" /> 的寬度。</returns>
    </member>
    <member name="T:System.Drawing.Pens">
      <summary>所有標準色彩的畫筆。 此類別無法獲得繼承。</summary>
    </member>
    <member name="P:System.Drawing.Pens.AliceBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.AntiqueWhite">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aqua">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Aquamarine">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Azure">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Beige">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Bisque">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Black">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlanchedAlmond">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Blue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BlueViolet">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Brown">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.BurlyWood">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CadetBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chartreuse">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Chocolate">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Coral">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.CornflowerBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cornsilk">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Crimson">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Cyan">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkCyan">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGoldenrod">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkKhaki">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkMagenta">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOliveGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrange">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkOrchid">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkRed">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSalmon">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSeaGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkSlateGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkTurquoise">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DarkViolet">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepPink">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DeepSkyBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DimGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.DodgerBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Firebrick">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.FloralWhite">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.ForestGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Fuchsia">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gainsboro">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GhostWhite">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gold">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Goldenrod">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Gray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Green">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.GreenYellow">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Honeydew">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.HotPink">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.IndianRed">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Indigo">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Ivory">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Khaki">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lavender">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LavenderBlush">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LawnGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LemonChiffon">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCoral">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightCyan">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGoldenrodYellow">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightPink">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSalmon">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSeaGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSkyBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSlateGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightSteelBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LightYellow">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Lime">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.LimeGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Linen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Magenta">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Maroon">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumAquamarine">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumOrchid">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumPurple">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSeaGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSlateBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumSpringGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumTurquoise">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MediumVioletRed">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MidnightBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MintCream">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.MistyRose">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Moccasin">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.NavajoWhite">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Navy">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OldLace">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Olive">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OliveDrab">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orange">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.OrangeRed">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Orchid">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGoldenrod">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleTurquoise">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PaleVioletRed">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PapayaWhip">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PeachPuff">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Peru">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Pink">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Plum">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.PowderBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Purple">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Red">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RosyBrown">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.RoyalBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SaddleBrown">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Salmon">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SandyBrown">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SeaShell">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Sienna">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Silver">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SkyBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SlateGray">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Snow">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SpringGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.SteelBlue">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tan">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Teal">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Thistle">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Tomato">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Transparent">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Turquoise">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Violet">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Wheat">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.White">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.WhiteSmoke">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.Yellow">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="P:System.Drawing.Pens.YellowGreen">
      <summary>寬度為 1 的系統定義 <see cref="T:System.Drawing.Pen" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" /> 物件，設定為系統定義的色彩。</returns>
    </member>
    <member name="T:System.Drawing.Printing.Duplex">
      <summary>指定印表機的雙面列印設定。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Default">
      <summary>印表機的預設雙面列印設定。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Horizontal">
      <summary>雙面水平列印。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Simplex">
      <summary>單面列印。</summary>
    </member>
    <member name="F:System.Drawing.Printing.Duplex.Vertical">
      <summary>雙面垂直列印。</summary>
    </member>
    <member name="T:System.Drawing.Printing.InvalidPrinterException">
      <summary>表示在嘗試使用無效的印表機設定來存取印表機時擲回的例外狀況。</summary>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 類別的新執行個體。</summary>
      <param name="settings">
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，指定印表機的設定。</param>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化資料，初始化 <see cref="T:System.Drawing.Printing.InvalidPrinterException" /> 類別的新執行個體。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">類別名稱為 <see langword="null" /> 或 <see cref="P:System.Exception.HResult" /> 為 0。</exception>
    </member>
    <member name="M:System.Drawing.Printing.InvalidPrinterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>被覆寫。 使用例外狀況的相關資訊來設定 <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />，包含所擲回之例外狀況的相關序列化物件資料。</param>
      <param name="context">包含有關來源或目的端內容資訊的 <see cref="T:System.Runtime.Serialization.StreamingContext" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Drawing.Printing.Margins">
      <summary>指定列印的頁面之邊界的維度。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor">
      <summary>使用 1 英吋寬的邊界來初始化 <see cref="T:System.Drawing.Printing.Margins" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>使用指定的左、右、上方、下方邊界來初始化 <see cref="T:System.Drawing.Printing.Margins" /> 類別的新執行個體。</summary>
      <param name="left">左邊界，以百分之一英吋為單位。</param>
      <param name="right">右邊界，以百分之一英吋為單位。</param>
      <param name="top">上方邊界，以百分之一英吋為單位。</param>
      <param name="bottom">下方邊界，以百分之一英吋為單位。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="left" /> 參數值小於 0。  
  
-或- 
<paramref name="right" /> 參數值小於 0。  
  
-或- 
<paramref name="top" /> 參數值小於 0。  
  
-或- 
<paramref name="bottom" /> 參數值小於 0。</exception>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Clone">
      <summary>依成員擷取這個物件的複本。</summary>
      <returns>這個物件的複本。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.Equals(System.Object)">
      <summary>將這個 <see cref="T:System.Drawing.Printing.Margins" /> 與指定的 <see cref="T:System.Object" /> 進行比較，以判斷它們是否具有相同維度。</summary>
      <param name="obj">要與這個 <see cref="T:System.Drawing.Printing.Margins" /> 進行比較的物件。</param>
      <returns>如果指定的物件為 <see cref="T:System.Drawing.Printing.Margins" /> 且與這個 <see cref="P:System.Drawing.Printing.Margins.Top" /> 具有相同的 <see cref="P:System.Drawing.Printing.Margins.Bottom" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Left" /> 和 <see cref="T:System.Drawing.Printing.Margins" /> 值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.GetHashCode">
      <summary>計算和擷取基於左邊界、右邊界、上方邊界和下方邊界之寬度的雜湊程式碼。</summary>
      <returns>基於左邊界、右邊界、上方邊界和下方邊界的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Equality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>比較兩個 <see cref="T:System.Drawing.Printing.Margins" />，以判斷它們是否具有相同維度。</summary>
      <param name="m1">要比較是否相等的第一個 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">要比較是否相等的第二個 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>
        <see langword="true" /> 表示兩個邊界的 <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" /> 和 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 屬性具有相同值，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.op_Inequality(System.Drawing.Printing.Margins,System.Drawing.Printing.Margins)">
      <summary>比較兩個 <see cref="T:System.Drawing.Printing.Margins" />，以判斷它們是否為不相等的寬度。</summary>
      <param name="m1">要進行是否不相等之比較的第一個 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="m2">要進行是否不相等之比較的第二個 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <returns>
        <see langword="true" /> 表示兩個邊界的 <see cref="P:System.Drawing.Printing.Margins.Left" />、<see cref="P:System.Drawing.Printing.Margins.Right" />、<see cref="P:System.Drawing.Printing.Margins.Top" /> 或 <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 屬性不相等，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.Margins.ToString">
      <summary>將 <see cref="T:System.Drawing.Printing.Margins" /> 轉換成字串。</summary>
      <returns>
        <see cref="T:System.String" /> 的 <see cref="T:System.Drawing.Printing.Margins" /> 表示。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Bottom">
      <summary>取得或設定以百分之一英吋為單位的下方邊界。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Bottom" /> 屬性已設成小於 0 的值。</exception>
      <returns>下方邊界，以百分之一英吋為單位。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Left">
      <summary>取得或設定左邊界寬度 (以百分之一英吋為單位)。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Left" /> 屬性已設成小於 0 的值。</exception>
      <returns>左邊界寬度 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Right">
      <summary>取得或設定右邊界寬度 (以百分之一英吋為單位)。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Right" /> 屬性已設成小於 0 的值。</exception>
      <returns>右邊界寬度 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.Margins.Top">
      <summary>取得或設定上方邊界寬度 (以百分之一英吋為單位)。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.Margins.Top" /> 屬性已設成小於 0 的值。</exception>
      <returns>上方邊界寬度 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="T:System.Drawing.Printing.MarginsConverter">
      <summary>為 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 提供 <see cref="T:System.Drawing.Printing.Margins" />。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.MarginsConverter" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>傳回這個轉換子是否可以使用指定內容將指定來源型別中的物件轉換成轉換子的原生型別。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="sourceType">
        <see cref="T:System.Type" />，表示要轉換的來源型別。</param>
      <returns>如果這個物件可以執行轉換則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>傳回這個轉換子是否可以使用內容將物件轉換成指定目的型別。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="destinationType">
        <see cref="T:System.Type" />，表示要轉換之目的型別。</param>
      <returns>如果這個轉換子可以執行轉換，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>將指定的物件轉換成轉換子的原生型別。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">提供轉換之目的語言的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要進行轉換的 <see cref="T:System.Object" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> 不包含所有邊界 (共四個) 的值。 例如，「100,100,100,100」指定左、右、上方、下方邊界都是 1 英吋。</exception>
      <exception cref="T:System.NotSupportedException">無法執行轉換作業。</exception>
      <returns>
        <see cref="T:System.Object" />，代表轉換過的值。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>使用指定的內容和引數將指定數值物件轉換成指定目的型別。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="culture">提供轉換之目的語言的 <see cref="T:System.Globalization.CultureInfo" />。</param>
      <param name="value">要進行轉換的 <see cref="T:System.Object" />。</param>
      <param name="destinationType">要轉換數值目的的 <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">無法執行轉換作業。</exception>
      <returns>
        <see cref="T:System.Object" />，代表轉換過的值。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>建立為物件提供一組屬性值的 <see cref="T:System.Object" />。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <param name="propertyValues">新屬性值的 <see cref="T:System.Collections.IDictionary" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="propertyValues" /> 為 <see langword="null" />。</exception>
      <returns>
        <see cref="T:System.Object" />，表示指定的 <see cref="T:System.Collections.IDictionary" />，但如果物件無法建立，則為 <see langword="null" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>使用指定的內容，傳回在這個物件上變更值時是否需要呼叫 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 方法來建立新的值。</summary>
      <param name="context">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
      <returns>如果在這個物件上變更屬性需要呼叫 <see cref="M:System.Drawing.Printing.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 來建立新的值，則為 <see langword="true" />；否則為 <see langword="false" />。 這個方法一律會傳回 <see langword="true" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PageSettings">
      <summary>指定要套用到單一列印頁面的設定。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor">
      <summary>使用預設的印表機來初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)">
      <summary>使用指定的印表機來初始化 <see cref="T:System.Drawing.Printing.PageSettings" /> 類別的新執行個體。</summary>
      <param name="printerSettings">
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，描述要使用的印表機。</param>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Printing.PageSettings" /> 的複本。</summary>
      <returns>這個物件的複本。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)">
      <summary>將相關資訊從 <see cref="T:System.Drawing.Printing.PageSettings" /> 複製到指定的 <see langword="DEVMODE" /> 結構。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 結構的控制代碼。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在，或沒有安裝預設的印表機。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)">
      <summary>從指定的 <see langword="DEVMODE" /> 結構將相關資訊複製至 <see cref="T:System.Drawing.Printing.PageSettings" />。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 結構的控制代碼。</param>
      <exception cref="T:System.ArgumentException">印表機控制代碼無效。</exception>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在，或沒有安裝預設的印表機。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PageSettings.ToString">
      <summary>將 <see cref="T:System.Drawing.Printing.PageSettings" /> 轉換成字串格式。</summary>
      <returns>字串，顯示 <see cref="T:System.Drawing.Printing.PageSettings" /> 的各種屬性設定。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Bounds">
      <summary>取得頁面的大小，並將 <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> 屬性所指定的頁面方向列入考量。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，表示頁面的長度和寬度 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Color">
      <summary>取得或設定值，指出頁面是否應該以彩色列印。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <returns>如果頁面以彩色列印為 <see langword="true" />，否則為 <see langword="false" />。 由印表機決定預設值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginX">
      <summary>取得位於頁面左側之強制邊界的 X 座標 (以百分之一英吋為單位)。</summary>
      <returns>左側強制邊界的 X 座標 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.HardMarginY">
      <summary>取得位於頁面頂端之強制邊界的 Y 座標 (以百分之一英吋為單位)。</summary>
      <returns>位於頁面頂端之強制邊界的 Y 座標 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Landscape">
      <summary>取得或設定值，指出橫印或直印頁面。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <returns>如果必須橫印頁面為 <see langword="true" />，否則為 <see langword="false" />。 由印表機決定預設值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.Margins">
      <summary>取得或設定這個頁面的邊界。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.Margins" />，表示頁面的邊界 (以百分之一英吋為單位)。 每一邊的預設值都是 1 英吋邊界。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSize">
      <summary>取得或設定這個頁面的紙張大小。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在，或沒有安裝預設的印表機。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSize" />，表示紙張的大小。 預設為印表機的預設紙張大小。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PaperSource">
      <summary>取得或設定頁面的紙張來源 (例如，印表機的上層紙匣)。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在，或沒有安裝預設的印表機。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PaperSource" />，指定紙張的來源。 預設為印表機的預設紙張來源。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrintableArea">
      <summary>取得印表機之頁面可列印區域的界限。</summary>
      <returns>
        <see cref="T:System.Drawing.RectangleF" />，表示印表機可列印區域的長度和寬度 (以百分之一英吋為單位)。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterResolution">
      <summary>取得或設定這個頁面的印表機解析度。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在，或沒有安裝預設的印表機。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterResolution" />，指定頁面的印表機解析度。 預設為印表機的預設解析度。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PageSettings.PrinterSettings">
      <summary>取得或設定這個頁面相關的各項設定。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings" />，表示與這個頁面相關的印表機設定。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperKind">
      <summary>指定標準紙張大小。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A2">
      <summary>A2 紙張 (420x594 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3">
      <summary>A3 紙張 (297x420 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Extra">
      <summary>A3 Extra 紙張 (322x445 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3ExtraTransverse">
      <summary>A3 Extra Transverse 紙張 (322x445 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Rotated">
      <summary>A3 Rotated 紙張 (420x297 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A3Transverse">
      <summary>A3 Transverse 紙張 (297x420 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4">
      <summary>A4 紙張 (210x297 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Extra">
      <summary>A4 Extra 紙張 (236x322 公釐)。 這是 PostScript 驅動程式的特定值，僅供 Linotronic 印表機使用以協助節省紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Plus">
      <summary>A4 Plus 紙張 (210x330 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Rotated">
      <summary>A4 Rotated 紙張 (297x210 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Small">
      <summary>A4 Small 紙張 (210x297 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A4Transverse">
      <summary>A4 Transverse 紙張 (210x297 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5">
      <summary>A5 紙張 (148x210 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Extra">
      <summary>A5 Extra 紙張 (174x235 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Rotated">
      <summary>A5 Rotated 紙張 (210x148 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A5Transverse">
      <summary>A5 Transverse 紙張 (148x210 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6">
      <summary>A6 紙張 (105x148 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.A6Rotated">
      <summary>A6 Rotated 紙張 (148x105 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.APlus">
      <summary>SuperA/SuperA/A4 紙張 (227x356 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4">
      <summary>B4 紙張 (250x353 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4Envelope">
      <summary>B4 Envelope (250x353 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B4JisRotated">
      <summary>JIS B4 Rotated 紙張 (364x257 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5">
      <summary>B5 紙張 (176x250 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Envelope">
      <summary>B5 Envelope (176x250 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Extra">
      <summary>ISO B5 Extra 紙張 (201x276 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5JisRotated">
      <summary>JIS B5 Rotated 紙張 (257x182 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B5Transverse">
      <summary>JIS B5 Transverse 紙張 (182x257 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Envelope">
      <summary>B6 Envelope (176x125 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6Jis">
      <summary>JIS B6 紙張 (128x182 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.B6JisRotated">
      <summary>JIS B6 Rotated 紙張 (182x128 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.BPlus">
      <summary>SuperB/SuperB/A3 紙張 (305x487 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C3Envelope">
      <summary>C3 Envelope (324x458 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C4Envelope">
      <summary>C4 Envelope (229x324 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C5Envelope">
      <summary>C5 Envelope (162x229 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C65Envelope">
      <summary>C65 Envelope (114x229 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.C6Envelope">
      <summary>C6 Envelope (114x162 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.CSheet">
      <summary>C 紙張 (17x22 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Custom">
      <summary>紙張大小由使用者定義。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DLEnvelope">
      <summary>DL Envelope (110x220 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.DSheet">
      <summary>D 紙張 (22x34 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ESheet">
      <summary>E 紙張 (34x44 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Executive">
      <summary>Executive 紙張 (7.25x10.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Folio">
      <summary>Folio 紙張 (8.5x13 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanLegalFanfold">
      <summary>German Legal Fanfold (8.5x13 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.GermanStandardFanfold">
      <summary>German Standard Fanfold (8.5x12 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.InviteEnvelope">
      <summary>Invitation Envelope (220x220 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.IsoB4">
      <summary>ISO B4 (250x353 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.ItalyEnvelope">
      <summary>Italy Envelope (110x230 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcard">
      <summary>Japanese Double Postcard (200x148 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseDoublePostcardRotated">
      <summary>Japanese Rotated Double Postcard (148x200 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3">
      <summary>Japanese Chou #3 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber3Rotated">
      <summary>Japanese Rotated Chou #3 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4">
      <summary>Japanese Chou #4 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeChouNumber4Rotated">
      <summary>Japanese Rotated Chou #4 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2">
      <summary>Japanese Kaku #2 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber2Rotated">
      <summary>Japanese Rotated Kaku #2 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3">
      <summary>Japanese Kaku #3 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeKakuNumber3Rotated">
      <summary>Japanese Rotated Kaku #3 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4">
      <summary>Japanese You #4 Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapaneseEnvelopeYouNumber4Rotated">
      <summary>Japanese You #4 Rotated Envelope。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcard">
      <summary>Japanese Postcard (100x148 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.JapanesePostcardRotated">
      <summary>Japanese Rotated Postcard (148x100 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Ledger">
      <summary>Ledger 紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Legal">
      <summary>Legal 紙張 (8.5x14 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LegalExtra">
      <summary>Legal Extra 紙張 (9.275x15 英吋)。 這是 PostScript 驅動程式的特定值，僅供 Linotronic 印表機使用以節省紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Letter">
      <summary>Letter 紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtra">
      <summary>Letter Extra 紙張 (8.5x12 英吋)。 這是 PostScript 驅動程式的特定值，僅供 Linotronic 印表機使用以節省紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterExtraTransverse">
      <summary>Letter Extra Transverse 紙張 (8.5x12 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterPlus">
      <summary>Letter Plus 紙張 (8.5x12.69 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterRotated">
      <summary>Letter Rotated 紙張 (11x8.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterSmall">
      <summary>Letter Small 紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.LetterTransverse">
      <summary>Letter Transverse 紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.MonarchEnvelope">
      <summary>Monarch Envelope (3.875x7.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Note">
      <summary>便條紙 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number10Envelope">
      <summary>#10 Envelope (4.125x9.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number11Envelope">
      <summary>#11 Envelope (4.5x 10.375 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number12Envelope">
      <summary>#12 Envelope (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number14Envelope">
      <summary>#14 Envelope (5x11.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Number9Envelope">
      <summary>#9 Envelope (3.875x8.875 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PersonalEnvelope">
      <summary>6 3/4 Envelope (3.625x6.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16K">
      <summary>16K 紙張 (146x215 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc16KRotated">
      <summary>16K Rotated 紙張 (146x215 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32K">
      <summary>32K 紙張 (97x151 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBig">
      <summary>32K Big 紙張 (97x151 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KBigRotated">
      <summary>32K Big Rotated 紙張 (97x151 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Prc32KRotated">
      <summary>32K Rotated 紙張 (97x151 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1">
      <summary>#1 Envelope (102x165 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10">
      <summary>#10 Envelope (324x458 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber10Rotated">
      <summary>#10 Rotated Envelope (458x324 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber1Rotated">
      <summary>#1 Rotated Envelope (165x102 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2">
      <summary>#2 Envelope (102x176 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber2Rotated">
      <summary>#2 Rotated Envelope (176x102 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3">
      <summary>#3 Envelope (125x176 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber3Rotated">
      <summary>#3 Rotated Envelope (176x125 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4">
      <summary>#4 Envelope (110x208 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber4Rotated">
      <summary>#4 Rotated Envelope (208x110 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5">
      <summary>#5 Envelope (110x220 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber5Rotated">
      <summary>#5 Rotated Envelope (220x110 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6">
      <summary>#6 Envelope (120x230 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber6Rotated">
      <summary>#6 Rotated Envelope (230x120 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7">
      <summary>#7 Envelope (160x230 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber7Rotated">
      <summary>#7 Rotated Envelope (230x160 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8">
      <summary>#8 Envelope (120x309 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber8Rotated">
      <summary>#8 Rotated Envelope (309x120 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9">
      <summary>#9 Envelope (229x324 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.PrcEnvelopeNumber9Rotated">
      <summary>#9 Rotated Envelope (324x229 公釐)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Quarto">
      <summary>Quarto 紙張 (215x275 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x11">
      <summary>標準紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard10x14">
      <summary>標準紙張 (8.5x14 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard11x17">
      <summary>標準紙張 (11x17 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard12x11">
      <summary>標準紙張 (12x11 英吋)。 需要 Windows 98、Windows NT 4.0 或更新版本。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard15x11">
      <summary>標準紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Standard9x11">
      <summary>標準紙張 (12x11 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Statement">
      <summary>Statement 紙張 (11x8.5 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.Tabloid">
      <summary>Tabloid 紙張 (11x17 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.TabloidExtra">
      <summary>Tabloid Extra 紙張 (11.69x18 英吋)。 這是 PostScript 驅動程式的特定值，僅供 Linotronic 印表機使用以節省紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperKind.USStandardFanfold">
      <summary>US Standard Fanfold (12x11 英吋)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PaperSize">
      <summary>指定紙張的大小。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.#ctor(System.String,System.Int32,System.Int32)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSize" /> 類別的新執行個體。</summary>
      <param name="name">紙張名稱。</param>
      <param name="width">紙張的寬度，以百分之一英吋為單位。</param>
      <param name="height">紙張的高度，以百分之一英吋為單位。</param>
    </member>
    <member name="M:System.Drawing.Printing.PaperSize.ToString">
      <summary>以字串形式提供 <see cref="T:System.Drawing.Printing.PaperSize" /> 的相關資訊。</summary>
      <returns>字串。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Height">
      <summary>取得或設定紙張的高度，以百分之一英吋為單位。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 屬性未設定為 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
      <returns>紙張的高度，以百分之一英吋為單位。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Kind">
      <summary>取得紙張的類型。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 屬性未設定為 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PaperKind" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.PaperName">
      <summary>取得或設定紙張類型的名稱。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 屬性未設定為 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
      <returns>紙張類型的名稱。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.RawKind">
      <summary>取得或設定整數，表示其中一個 <see cref="T:System.Drawing.Printing.PaperSize" /> 值或自訂值。</summary>
      <returns>整數，表示其中一個 <see cref="T:System.Drawing.Printing.PaperSize" /> 值或自訂值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSize.Width">
      <summary>取得或設定紙張的寬度，以百分之一英吋為單位。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PaperSize.Kind" /> 屬性未設定為 <see cref="F:System.Drawing.Printing.PaperKind.Custom" />。</exception>
      <returns>紙張的寬度，以百分之一英吋為單位。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSource">
      <summary>指定印表機取得紙張的紙匣。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PaperSource" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PaperSource.ToString">
      <summary>以字串形式提供 <see cref="T:System.Drawing.Printing.PaperSource" /> 的相關資訊。</summary>
      <returns>字串。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.Kind">
      <summary>取得紙張來源。</summary>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.RawKind">
      <summary>取得或設定整數，表示其中一個 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值或自訂值。</summary>
      <returns>整數值，表示其中一個 <see cref="T:System.Drawing.Printing.PaperSourceKind" /> 值或自訂值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PaperSource.SourceName">
      <summary>取得或設定紙張來源的名稱。</summary>
      <returns>紙張來源的名稱。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PaperSourceKind">
      <summary>標準紙張來源。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.AutomaticFeed">
      <summary>自動送紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Cassette">
      <summary>紙匣。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Custom">
      <summary>印表機特定紙張來源。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Envelope">
      <summary>信封。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.FormSource">
      <summary>印表機的預設輸入紙匣。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeCapacity">
      <summary>印表機的大容量紙匣。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.LargeFormat">
      <summary>大型格式紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Lower">
      <summary>印表機的下層紙匣。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Manual">
      <summary>手動送紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.ManualFeed">
      <summary>手動方式送進信封。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Middle">
      <summary>印表機的中層紙匣。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.SmallFormat">
      <summary>小型格式紙張。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.TractorFeed">
      <summary>曳引送紙。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PaperSourceKind.Upper">
      <summary>印表機的上層紙匣 (如果印表機只有一個紙匣，則為預設紙匣)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPageInfo">
      <summary>指定單一頁面的預覽列印資訊。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 類別的新執行個體。</summary>
      <param name="image">列印頁面的影像。</param>
      <param name="physicalSize">列印頁面的大小，以百分之一英吋為單位。</param>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.Image">
      <summary>取得列印頁面的影像。</summary>
      <returns>
        <see cref="T:System.Drawing.Image" />，表示列印的頁面。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPageInfo.PhysicalSize">
      <summary>取得列印頁面的大小，以百分之一英吋為單位。</summary>
      <returns>
        <see cref="T:System.Drawing.Size" />，指定列印頁面的大小，以百分之一英吋為單位。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PreviewPrintController">
      <summary>指定可在螢幕上將文件以連續影像顯示的列印控制程式。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PreviewPrintController" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.GetPreviewPageInfo">
      <summary>以連續影像的方式擷取頁面。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PreviewPageInfo" /> 型別的陣列，以連續影像方式包含 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的頁面。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>完成決定何時以及如何在列印文件中預覽頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示要預覽的文件。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，包含關於如何在列印文件中預覽頁面的資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>完成決定何時以及如何預覽列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示要預覽的文件。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，包含關於如何預覽列印文件的資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>開始可決定何時以及如何在列印文件中預覽頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示要預覽的文件。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，包含關於如何在列印文件中預覽頁面的資料。 在一開始時，這個參數的 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 屬性會是 <see langword="null" />。 此方法傳回的值將會用於設定這個屬性。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的頁面。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>開始可決定何時以及如何預覽列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示要預覽的文件。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，包含如何列印文件的相關資料。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.IsPreview">
      <summary>取得值，指示這個控制程式是否用於列印預覽。</summary>
      <returns>所有情況下都是 <see langword="true" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PreviewPrintController.UseAntiAlias">
      <summary>取得或設定數值，指定顯示預覽列印時是否要使用反鋸齒補償。</summary>
      <returns>如果列印預覽使用反鋸齒功能則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintAction">
      <summary>指定執行之列印作業的類型。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToFile">
      <summary>列印作業正在列印至檔案。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPreview">
      <summary>列印作業為列印預覽。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintAction.PrintToPrinter">
      <summary>列印作業正在列印至印表機。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrintController">
      <summary>控制從 Windows Form 應用程式列印時，將要如何列印文件。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintController" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>在衍生類別中覆寫時，完成決定何時以及如何列印文件頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件目前已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>在衍生類別中覆寫時，完成決定何時以及如何列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件目前已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>在衍生的類別中覆寫時，開始可決定何時以及如何列印文件頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件目前已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，其中包含事件資料。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的頁面。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>在衍生的類別中覆寫時，開始可決定何時以及如何列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件目前已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintController.IsPreview">
      <summary>取得值，指示 <see cref="T:System.Drawing.Printing.PrintController" /> 是否用於列印預覽。</summary>
      <returns>所有情況下都是 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintDocument">
      <summary>定義從 Windows Forms 應用程式中列印時會將輸出傳送至印表機的可重複使用物件。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.BeginPrint">
      <summary>發生於呼叫 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法時 (在文件的第一頁列印之前)。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.EndPrint">
      <summary>發生於文件最後一頁列印時。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.PrintPage">
      <summary>發生於需要目前頁面的列印輸出時。</summary>
    </member>
    <member name="E:System.Drawing.Printing.PrintDocument.QueryPageSettings">
      <summary>在 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件之前立即發生。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintDocument" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>引發 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 事件。 在呼叫 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> 方法之後和文件的第一頁列印之前呼叫它。</summary>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>引發 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件。 在文件最後一頁已列印時呼叫它。</summary>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>引發 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件。 在頁面列印之前呼叫它。</summary>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>引發 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件。 在每個 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件之前立即呼叫它。</summary>
      <param name="e">
        <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.Print">
      <summary>啟動文件的列印程序。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintDocument.ToString">
      <summary>提供列印文件的相關資訊 (以字串形式)。</summary>
      <returns>字串。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings">
      <summary>取得或設定頁面設定，其會使用為所有要列印頁面的預設設定。</summary>
      <returns>指定文件預設頁面設定的 <see cref="T:System.Drawing.Printing.PageSettings" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.DocumentName">
      <summary>取得或設定要在列印文件時顯示的文件名稱 (例如，在列印狀態對話方塊中或在印表機佇列中)。</summary>
      <returns>列印文件時要顯示的文件名稱。 預設值是「文件」。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.OriginAtMargins">
      <summary>取得或設定值，指出與頁面相關的圖形物件位置是否正好在使用者指定的邊界內部，或在頁面可列印區域的左上角。</summary>
      <returns>如果圖形原點起始於頁面邊界，則為 <see langword="true" />；如果圖形原點在可列印頁面的左上角，則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrintController">
      <summary>取得或設定指引列印程序的列印控制程式。</summary>
      <returns>指引列印程序的 <see cref="T:System.Drawing.Printing.PrintController" />。 預設值為 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> 類別的新執行個體。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintDocument.PrinterSettings">
      <summary>取得或設定列印文件的印表機。</summary>
      <returns>指定何處和如何列印文件的 <see cref="T:System.Drawing.Printing.PrinterSettings" />。 預設值是其屬性設成預設值的 <see cref="T:System.Drawing.Printing.PrinterSettings" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolution">
      <summary>表示印表機所支援的解析度。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterResolution.ToString">
      <summary>這個成員會覆寫 <see cref="M:System.Object.ToString" /> 方法。</summary>
      <returns>
        <see cref="T:System.String" />，包含關於 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的資訊。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Kind">
      <summary>取得或設定印表機解析度。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">指定的值不是 <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 列舉型別的成員。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PrinterResolutionKind" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.X">
      <summary>取得水平印表機解析度，以點/英吋 (DPI) 為單位。</summary>
      <returns>如果 <see cref="P:System.Drawing.Printing.PrinterResolution.Kind" /> 設定為 <see cref="F:System.Drawing.Printing.PrinterResolutionKind.Custom" />，則為水平印表機解析度 (以 DPI 為單位)，否則為 <see langword="dmPrintQuality" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterResolution.Y">
      <summary>取得垂直印表機解析度，以點/英吋 (DPI) 為單位。</summary>
      <returns>垂直印表機解析度，以點/英吋 (DPI) 為單位。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterResolutionKind">
      <summary>指定印表機解析度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Custom">
      <summary>自訂解析度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Draft">
      <summary>草稿品質解析度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.High">
      <summary>高解析度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Low">
      <summary>低解析度。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterResolutionKind.Medium">
      <summary>中解析度。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings">
      <summary>指定從 Windows Form 應用程式列印時，文件如何列印的相關資訊，包括用來列印的印表機。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 的複本。</summary>
      <returns>這個物件的複本。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>傳回 <see cref="T:System.Drawing.Graphics" />，其中包含在建立 <see cref="T:System.Drawing.Printing.PrintDocument" /> 時非常有用的印表機資訊。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，其中包含印表機的資訊。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)">
      <summary>傳回包含印表機資訊的 <see cref="T:System.Drawing.Graphics" />，選擇性地指定邊界處的原點。</summary>
      <param name="honorOriginAtMargins">
        <see langword="true" /> 指示邊界處的原點，否則為 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，其中包含 <see cref="T:System.Drawing.Printing.PageSettings" /> 的印表機資訊。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)">
      <summary>傳回 <see cref="T:System.Drawing.Graphics" />，其中包含與指定之 <see cref="T:System.Drawing.Printing.PageSettings" /> 關聯的印表機資訊。</summary>
      <param name="pageSettings">要為其擷取圖形物件的 <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，其中包含 <see cref="T:System.Drawing.Printing.PageSettings" /> 的印表機資訊。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>建立與指定頁面設定關聯的 <see cref="T:System.Drawing.Graphics" />，並選擇性地指定邊界處的原點。</summary>
      <param name="pageSettings">要為其擷取 <see cref="T:System.Drawing.Printing.PageSettings" /> 物件的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="honorOriginAtMargins">
        <see langword="true" /> 指定邊界處的原點，否則為 <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Drawing.Graphics" />，其中包含 <see cref="T:System.Drawing.Printing.PageSettings" /> 的印表機資訊。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>建立對應到印表機設定的 <see langword="DEVMODE" /> 結構的控制代碼。</summary>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取印表機初始化資訊。</exception>
      <returns>
        <see langword="DEVMODE" /> 結構的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)">
      <summary>建立對應於印表機的 <see langword="DEVMODE" /> 結構控制代碼和透過 <paramref name="pageSettings" /> 參數指定的頁面設定。</summary>
      <param name="pageSettings">
        <see langword="DEVMODE" /> 結構之控制代碼對應的 <see cref="T:System.Drawing.Printing.PageSettings" /> 物件。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">以 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性命名的印表機並不存在。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">無法擷取印表機初始化資訊。</exception>
      <returns>
        <see langword="DEVMODE" /> 結構的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.GetHdevnames">
      <summary>建立對應到印表機設定的 <see langword="DEVNAMES" /> 結構的控制代碼。</summary>
      <returns>
        <see langword="DEVNAMES" /> 結構的控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)">
      <summary>取得值，指示印表機是否支援列印指定的影像檔。</summary>
      <param name="image">要列印的影像。</param>
      <returns>如果印表機支援列印指定的影像，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)">
      <summary>傳回值，指示印表機是否支援列印指定的影像格式。</summary>
      <param name="imageFormat">要列印的 <see cref="T:System.Drawing.Imaging.ImageFormat" />。</param>
      <returns>如果印表機支援列印指定的影像格式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)">
      <summary>複製已給定的控制代碼以外的相關資訊至 <see cref="T:System.Drawing.Printing.PrinterSettings" />。</summary>
      <param name="hdevmode">Win32 <see langword="DEVMODE" /> 結構的控制代碼。</param>
      <exception cref="T:System.ArgumentException">印表機控制代碼無效。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)">
      <summary>複製已給定的控制代碼以外的相關資訊至 <see cref="T:System.Drawing.Printing.PrinterSettings" />。</summary>
      <param name="hdevnames">Win32 <see langword="DEVNAMES" /> 結構的控制代碼。</param>
      <exception cref="T:System.ArgumentException">印表機的控制代碼無效。</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.ToString">
      <summary>以字串形式提供 <see cref="T:System.Drawing.Printing.PrinterSettings" /> 的相關資訊。</summary>
      <returns>字串。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.CanDuplex">
      <summary>取得值，指出印表機是否支援雙面列印。</summary>
      <returns>如果印表機支援雙面列印，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Collate">
      <summary>取得或設定值，指出列印文件是否要分頁。</summary>
      <returns>如果列印的文件被分頁，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Copies">
      <summary>取得或設定文件列印的份數。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> 屬性的值小於 0。</exception>
      <returns>要列印的份數。 預設值是 1。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings">
      <summary>取得這個印表機的預設頁面設定。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PageSettings" />，表示這個印表機的預設頁面設定。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.Duplex">
      <summary>取得或設定雙面列印的印表機設定。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> 屬性的值不是其中一個 <see cref="T:System.Drawing.Printing.Duplex" /> 值。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.Duplex" /> 值。 由印表機決定預設值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.FromPage">
      <summary>取得或設定要列印的第一頁的頁碼。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 屬性值小於 0。</exception>
      <returns>要列印的第一頁的頁碼。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters">
      <summary>取得安裝於電腦上的所有印表機名稱。</summary>
      <exception cref="T:System.ComponentModel.Win32Exception">無法列舉可用的印表機。</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />，表示安裝於電腦上的所有印表機名稱。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter">
      <summary>取得值，指出 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性是否會指定預設的印表機 (除非使用者明確設定 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />)。</summary>
      <returns>如果 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 指定預設印表機，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsPlotter">
      <summary>取得值，指出印表機是否為繪圖機。</summary>
      <returns>如果印表機是繪圖機，則為 <see langword="true" />；如果印表機是點陣印表機，則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.IsValid">
      <summary>取得值，指出 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性是否指定有效印表機。</summary>
      <returns>如果 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 屬性指定有效印表機，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle">
      <summary>以度數為單位，取得將縱向列印旋轉以產生橫向列印的角度。</summary>
      <returns>這個角度以度數為單位，將縱向列印旋轉以產生橫向列印。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumCopies">
      <summary>取得印表機可讓使用者單次列印的最大複本數目。</summary>
      <returns>印表機可讓使用者單次列印的最大複本數目。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MaximumPage">
      <summary>取得或設定可在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 內選取的最大 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> 屬性的值小於 0。</exception>
      <returns>可在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 內選取的最大 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.MinimumPage">
      <summary>取得或設定可在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 內選取的最小 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> 屬性的值小於 0。</exception>
      <returns>可在 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 內選取的最小 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 或 <see cref="T:System.Windows.Forms.PrintDialog" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizes">
      <summary>取得這個印表機支援的紙張大小。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />，表示印表機支援的紙張大小。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSources">
      <summary>取得印表機可用的紙張來源紙匣。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />，表示印表機可用的紙張來源紙匣。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterName">
      <summary>取得或設定要使用的印表機名稱。</summary>
      <returns>要使用的印表機名稱。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions">
      <summary>取得這個印表機支援的所有解析度。</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />，表示這個印表機支援的所有解析度。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintFileName">
      <summary>取得或設定列印至檔案時的檔案名稱。</summary>
      <returns>列印至檔案時的檔案名稱。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintRange">
      <summary>取得或設定使用者指定要列印的頁碼。</summary>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> 屬性的值不是其中一個 <see cref="T:System.Drawing.Printing.PrintRange" /> 值。</exception>
      <returns>其中一個 <see cref="T:System.Drawing.Printing.PrintRange" /> 值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrintToFile">
      <summary>取得或設定值，指出列印輸出是否傳送至檔案而非連接埠。</summary>
      <returns>如果列印輸出傳送至檔案，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.SupportsColor">
      <summary>取得值，指出這個印表機是否支援彩色列印。</summary>
      <returns>如果印表機支援彩色列印，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.ToPage">
      <summary>取得或設定要列印的最後一頁的頁碼。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 屬性的值小於 0。</exception>
      <returns>要列印之最後一頁的頁碼。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PaperSize" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.#ctor(System.Drawing.Printing.PaperSize[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 類別的新執行個體。</summary>
      <param name="array">類型為 <see cref="T:System.Drawing.Printing.PaperSize" /> 的陣列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Add(System.Drawing.Printing.PaperSize)">
      <summary>將 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 加入至集合結尾。</summary>
      <param name="paperSize">要加入至集合的 <see cref="T:System.Drawing.Printing.PaperSize" />。</param>
      <returns>新加入項目之以零起始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.CopyTo(System.Drawing.Printing.PaperSize[],System.Int32)">
      <summary>從指定的索引處開始，複製目前 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 的內容至指定的陣列。</summary>
      <param name="paperSizes">以零起始的陣列，接收從 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> 複製的項目。</param>
      <param name="index">要從其開始複製項目的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.GetEnumerator">
      <summary>傳回可逐一查看這個集合的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">以零起始的陣列，接收從集合複製來的項目。</param>
      <param name="index">要從其開始複製項目的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>與集合關聯的列舉值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Count">
      <summary>取得集合中不同紙張大小的數目。</summary>
      <returns>集合中不同紙張大小的數目。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.Item(System.Int32)">
      <summary>取得指定之索引處的 <see cref="T:System.Drawing.Printing.PaperSize" />。</summary>
      <param name="index">要取得之 <see cref="T:System.Drawing.Printing.PaperSize" /> 的索引。</param>
      <returns>指定之索引處的 <see cref="T:System.Drawing.Printing.PaperSize" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#Count">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSizeCollection.System#Collections#ICollection#SyncRoot">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用來同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PaperSource" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.#ctor(System.Drawing.Printing.PaperSource[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 類別的新執行個體。</summary>
      <param name="array">類型為 <see cref="T:System.Drawing.Printing.PaperSource" /> 的陣列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Add(System.Drawing.Printing.PaperSource)">
      <summary>將指定的 <see cref="T:System.Drawing.Printing.PaperSource" /> 加入至 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 的結尾。</summary>
      <param name="paperSource">要加入至集合的 <see cref="T:System.Drawing.Printing.PaperSource" />。</param>
      <returns>以零為基底的索引，這是加入 <see cref="T:System.Drawing.Printing.PaperSource" /> 的位置。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.CopyTo(System.Drawing.Printing.PaperSource[],System.Int32)">
      <summary>從指定的索引處開始，複製目前 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 的內容至指定的陣列。</summary>
      <param name="paperSources">以零起始的陣列，接收從 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> 複製的項目。</param>
      <param name="index">要從其開始複製項目的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.GetEnumerator">
      <summary>傳回可逐一查看這個集合的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">集合之內容的目的陣列。</param>
      <param name="index">開始複製作業的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Count">
      <summary>取得集合中不同紙張來源的數目。</summary>
      <returns>集合中不同紙張來源的數目。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.Item(System.Int32)">
      <summary>取得指定之索引處的 <see cref="T:System.Drawing.Printing.PaperSource" />。</summary>
      <param name="index">要取得之 <see cref="T:System.Drawing.Printing.PaperSource" /> 的索引。</param>
      <returns>指定之索引處的 <see cref="T:System.Drawing.Printing.PaperSource" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#Count">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PaperSourceCollection.System#Collections#ICollection#SyncRoot">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用來同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection">
      <summary>包含 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.#ctor(System.Drawing.Printing.PrinterResolution[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 類別的新執行個體。</summary>
      <param name="array">類型為 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的陣列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Add(System.Drawing.Printing.PrinterResolution)">
      <summary>將 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 加入至集合結尾。</summary>
      <param name="printerResolution">要加入至集合的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</param>
      <returns>新加入項目之以零起始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.CopyTo(System.Drawing.Printing.PrinterResolution[],System.Int32)">
      <summary>從指定的索引處開始，複製目前 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 的內容至指定的陣列。</summary>
      <param name="printerResolutions">以零起始的陣列，接收從 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 複製的項目。</param>
      <param name="index">要從其開始複製項目的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.GetEnumerator">
      <summary>傳回可逐一查看這個集合的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">目的陣列。</param>
      <param name="index">開始複製作業的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 物件，可用於逐一查看集合。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Count">
      <summary>取得集合中可用印表機解析度的數目。</summary>
      <returns>集合中可用印表機解析度的數目。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.Item(System.Int32)">
      <summary>取得指定之索引處的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</summary>
      <param name="index">要取得之 <see cref="T:System.Drawing.Printing.PrinterResolution" /> 的索引。</param>
      <returns>指定之索引處的 <see cref="T:System.Drawing.Printing.PrinterResolution" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#Count">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection.System#Collections#ICollection#SyncRoot">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用來同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterSettings.StringCollection">
      <summary>包含 <see cref="T:System.String" /> 物件的集合。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.#ctor(System.String[])">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 類別的新執行個體。</summary>
      <param name="array">類型為 <see cref="T:System.String" /> 的陣列。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.Add(System.String)">
      <summary>將字串加入至集合的結尾。</summary>
      <param name="value">要加入至集合中的字串。</param>
      <returns>新加入項目之以零起始的索引。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>從指定的索引處開始，複製目前 <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> 的內容至指定的陣列。</summary>
      <param name="strings">以零起始的陣列，接收從 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> 複製的項目。</param>
      <param name="index">要從其開始複製項目的索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.GetEnumerator">
      <summary>傳回可逐一查看這個集合的列舉程式。</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</summary>
      <param name="array">要將項目複製至的陣列。</param>
      <param name="index">起始索引。</param>
    </member>
    <member name="M:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>可用來逐一查看集合的列舉值。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Count">
      <summary>取得集合中的字串數目。</summary>
      <returns>集合中的字串數目。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.Item(System.Int32)">
      <summary>取得指定之索引處的 <see cref="T:System.String" />。</summary>
      <param name="index">要取得之 <see cref="T:System.String" /> 的索引。</param>
      <returns>指定之索引處的 <see cref="T:System.String" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#Count">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.Count" />。</summary>
      <returns>
        <see cref="T:System.Collections.ICollection" /> 中所包含的項目數。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#IsSynchronized">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</summary>
      <returns>如果 <see langword="true" /> 的存取為同步 (安全執行緒)，則為 <see cref="T:System.Collections.ICollection" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrinterSettings.StringCollection.System#Collections#ICollection#SyncRoot">
      <summary>如需這個成員的說明，請參閱 <see cref="P:System.Collections.ICollection.SyncRoot" />。</summary>
      <returns>可用來同步存取 <see cref="T:System.Collections.ICollection" /> 的物件。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnit">
      <summary>指定用於列印的數種度量單位。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.Display">
      <summary>預設單位 (0.01 英吋)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.HundredthsOfAMillimeter">
      <summary>百分之一公釐 (0.01 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.TenthsOfAMillimeter">
      <summary>十分之一公釐 (0.1 公釐)。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrinterUnit.ThousandthsOfAnInch">
      <summary>千分之一英吋 (0.001 英吋)。</summary>
    </member>
    <member name="T:System.Drawing.Printing.PrinterUnitConvert">
      <summary>指定一系列與 Win32 列印 API 互通時適用的轉換方法。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Double,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將雙精確度浮點數從某種 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一種 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">正在轉換 <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>雙精確度浮點數，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Point,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將 <see cref="T:System.Drawing.Point" /> 從一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">正在轉換 <see cref="T:System.Drawing.Point" />。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>
        <see cref="T:System.Drawing.Point" />，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Printing.Margins,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將 <see cref="T:System.Drawing.Printing.Margins" /> 從一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">正在轉換 <see cref="T:System.Drawing.Printing.Margins" />。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>
        <see cref="T:System.Drawing.Printing.Margins" />，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Rectangle,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將 <see cref="T:System.Drawing.Rectangle" /> 從一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">正在轉換 <see cref="T:System.Drawing.Rectangle" />。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>
        <see cref="T:System.Drawing.Rectangle" />，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Drawing.Size,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將 <see cref="T:System.Drawing.Size" /> 從一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">正在轉換 <see cref="T:System.Drawing.Size" />。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>
        <see cref="T:System.Drawing.Size" />，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrinterUnitConvert.Convert(System.Int32,System.Drawing.Printing.PrinterUnit,System.Drawing.Printing.PrinterUnit)">
      <summary>將 32 位元帶正負號的整數從一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型轉換成另一個 <see cref="T:System.Drawing.Printing.PrinterUnit" /> 類型。</summary>
      <param name="value">轉換的值。</param>
      <param name="fromUnit">要轉換的來源單位。</param>
      <param name="toUnit">要轉換成的單位。</param>
      <returns>32 位元帶正負號的整數，表示已轉換的 <see cref="T:System.Drawing.Printing.PrinterUnit" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventArgs">
      <summary>提供 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 和 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintEventArgs.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintEventArgs" /> 類別的新執行個體。</summary>
    </member>
    <member name="P:System.Drawing.Printing.PrintEventArgs.PrintAction">
      <summary>在所有情況下都會傳回 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。</summary>
      <returns>所有情況下都是 <see cref="F:System.Drawing.Printing.PrintAction.PrintToFile" />。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintEventHandler">
      <summary>表示處理 <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> 的 <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> 或 <see cref="T:System.Drawing.Printing.PrintDocument" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventArgs">
      <summary>提供 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintPageEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> 類別的新執行個體。</summary>
      <param name="graphics">用來繪製項目的 <see cref="T:System.Drawing.Graphics" />。</param>
      <param name="marginBounds">邊界之間的區域。</param>
      <param name="pageBounds">整個頁面。</param>
      <param name="pageSettings">頁面的 <see cref="T:System.Drawing.Printing.PageSettings" />。</param>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Cancel">
      <summary>取得或設定值，指出是否應該取消列印工作。</summary>
      <returns>如果應該要取消列印工作，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.Graphics">
      <summary>取得用來繪製頁面的 <see cref="T:System.Drawing.Graphics" />。</summary>
      <returns>用來繪製頁面的 <see cref="T:System.Drawing.Graphics" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.HasMorePages">
      <summary>取得或設定值，指出是否應該列印其他頁面。</summary>
      <returns>如果應該列印其他頁面，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.MarginBounds">
      <summary>取得表示邊界內頁面部分的矩形區域。</summary>
      <returns>表示邊界內之頁面部分的矩形區域，度量單位是百分之一英吋。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageBounds">
      <summary>取得表示整個頁面的矩形區域。</summary>
      <returns>矩形區域，表示整個頁面區域。</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintPageEventArgs.PageSettings">
      <summary>取得目前頁面的頁面設定。</summary>
      <returns>目前頁面的頁面設定。</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintPageEventHandler">
      <summary>代表將處理 <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> 之 <see cref="T:System.Drawing.Printing.PrintDocument" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Drawing.Printing.PrintRange">
      <summary>指定文件中要列印的部分。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.AllPages">
      <summary>列印全部頁面。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.CurrentPage">
      <summary>列印目前顯示的頁面。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.Selection">
      <summary>列印選取的頁面。</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintRange.SomePages">
      <summary>列印介於 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> 和 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> 之間的頁面。</summary>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventArgs">
      <summary>提供 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件的資料。</summary>
    </member>
    <member name="M:System.Drawing.Printing.QueryPageSettingsEventArgs.#ctor(System.Drawing.Printing.PageSettings)">
      <summary>初始化 <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" /> 類別的新執行個體。</summary>
      <param name="pageSettings">要列印頁面的頁面設定。</param>
    </member>
    <member name="P:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings">
      <summary>取得或設定要列印頁面的頁面設定。</summary>
      <returns>要列印頁面的頁面設定。</returns>
    </member>
    <member name="T:System.Drawing.Printing.QueryPageSettingsEventHandler">
      <summary>代表處理 <see cref="T:System.Drawing.Printing.PrintDocument" /> 之 <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> 事件的方法。</summary>
      <param name="sender">事件的來源。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />，其中包含事件資料。</param>
    </member>
    <member name="T:System.Drawing.Printing.StandardPrintController">
      <summary>指定傳送訊息至印表機的列印控制程式。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Printing.StandardPrintController" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>完成決定何時以及如何列印文件頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，包含如何在文件中列印頁面的相關資料。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">原生 Win32 應用程式開發介面 (Application Programming Interface，API) 無法完成寫入頁面。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>完成決定何時以及如何列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，包含如何列印文件的相關資料。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">原生 Win32 應用程式開發介面 (API) 無法完成列印工作。  
  
 -或-  
  
 原生 Windows API 無法刪除指定的裝置內容 (DC)。</exception>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
      <summary>開始可決定何時以及如何在文件中列印頁面的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />，包含如何在文件中列印頁面的相關資料。 在一開始時，這個參數的 <see cref="P:System.Drawing.Printing.PrintPageEventArgs.Graphics" /> 屬性會是 <see langword="null" />。 將使用從 <see cref="M:System.Drawing.Printing.StandardPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)" /> 方法傳回的值來設定這個屬性。</param>
      <exception cref="T:System.ComponentModel.Win32Exception">原生 Win32 應用程式開發介面 (API) 無法準備印表機驅動程式以接收資料。  
  
 -或-  
  
 原生 Windows API 無法使用指定的資訊來更新指定的印表機或繪圖機裝置內容 (DC)。</exception>
      <returns>
        <see cref="T:System.Drawing.Graphics" /> 物件，表示 <see cref="T:System.Drawing.Printing.PrintDocument" /> 的頁面。</returns>
    </member>
    <member name="M:System.Drawing.Printing.StandardPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
      <summary>開始可決定何時以及如何列印文件的控制順序。</summary>
      <param name="document">
        <see cref="T:System.Drawing.Printing.PrintDocument" />，表示文件已經列印。</param>
      <param name="e">
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />，包含如何列印文件的相關資料。</param>
      <exception cref="T:System.Drawing.Printing.InvalidPrinterException">印表機設定無效。</exception>
      <exception cref="T:System.ComponentModel.Win32Exception">原生 Win32 應用程式開發介面 (API) 無法開始列印工作。</exception>
    </member>
    <member name="T:System.Drawing.Region">
      <summary>描述由矩形和路徑構成的圖形形狀內部。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.Region" />。</summary>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>使用指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，將新的 <see cref="T:System.Drawing.Region" /> 初始化。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />，定義新的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)">
      <summary>從指定的資料將新的 <see cref="T:System.Drawing.Region" /> 初始化。</summary>
      <param name="rgnData">定義新 <see cref="T:System.Drawing.Region" /> 內部的 <see cref="T:System.Drawing.Drawing2D.RegionData" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rgnData" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)">
      <summary>從指定的 <see cref="T:System.Drawing.Region" /> 結構，初始化新的 <see cref="T:System.Drawing.Rectangle" />。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，定義新 <see cref="T:System.Drawing.Region" /> 的內部。</param>
    </member>
    <member name="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)">
      <summary>從指定的 <see cref="T:System.Drawing.Region" /> 結構，初始化新的 <see cref="T:System.Drawing.RectangleF" />。</summary>
      <param name="rect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，定義新 <see cref="T:System.Drawing.Region" /> 的內部。</param>
    </member>
    <member name="M:System.Drawing.Region.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.Region" /> 的完全相同複本。</summary>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>更新此 <see cref="T:System.Drawing.Region" /> 以包含指定的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 部分，其未與此 <see cref="T:System.Drawing.Region" /> 交集。</summary>
      <param name="path">
        <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 來補充此 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" />，以包含不與這個 <see cref="T:System.Drawing.Rectangle" /> 交集的指定 <see cref="T:System.Drawing.Region" /> 結構部分。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.Rectangle" /> 互補的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" />，以包含不與這個 <see cref="T:System.Drawing.RectangleF" /> 交集的指定 <see cref="T:System.Drawing.Region" /> 結構部分。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.RectangleF" /> 互補的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Complement(System.Drawing.Region)">
      <summary>更新此 <see cref="T:System.Drawing.Region" /> 以包含指定的 <see cref="T:System.Drawing.Region" /> 部分，其未與此 <see cref="T:System.Drawing.Region" /> 交集。</summary>
      <param name="region">要與此 <see cref="T:System.Drawing.Region" /> 物件互補的物件 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Region" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)">
      <summary>測試指定的 <see cref="T:System.Drawing.Region" /> 是否在指定的繪圖介面上與這個 <see cref="T:System.Drawing.Region" /> 相同。</summary>
      <param name="region">要測試的 <see cref="T:System.Drawing.Region" />。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示繪圖介面。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 或 <paramref name="region" /> 為 <see langword="null" />。</exception>
      <returns>在套用與 <paramref name="g" /> 參數關聯的轉換時，如果區域的內部和這個區域的內部相同，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" />，以便只包含其內部中不與指定之 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 交集的部分。</summary>
      <param name="path">要從這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 排除的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" /> 物件，以便只包含其內部中不與指定之 <see cref="T:System.Drawing.Rectangle" /> 結構交集的部分。</summary>
      <param name="rect">要從這個 <see cref="T:System.Drawing.Rectangle" /> 排除的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" /> 物件，以便只包含其內部中不與指定之 <see cref="T:System.Drawing.RectangleF" /> 結構交集的部分。</summary>
      <param name="rect">要從這個 <see cref="T:System.Drawing.RectangleF" /> 排除的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Exclude(System.Drawing.Region)">
      <summary>更新這個 <see cref="T:System.Drawing.Region" />，以便只包含其內部中不與指定之 <see cref="T:System.Drawing.Region" /> 交集的部分。</summary>
      <param name="region">要從這個 <see cref="T:System.Drawing.Region" /> 排除的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.Region.FromHrgn(System.IntPtr)">
      <summary>從指定之現有 GDI 區域的控制代碼，初始化新的 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="hrgn">現有 <see cref="T:System.Drawing.Region" /> 的控制代碼。</param>
      <returns>新的 <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)">
      <summary>取得 <see cref="T:System.Drawing.RectangleF" /> 結構，表示在 <see cref="T:System.Drawing.Region" /> 物件的繪圖介面上框住這個 <see cref="T:System.Drawing.Graphics" /> 的矩形。</summary>
      <param name="g">在其上繪製 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 為 <see langword="null" />。</exception>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示在指定之繪圖介面上這個 <see cref="T:System.Drawing.Region" /> 的週框 (Bounding Rectangle)。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)">
      <summary>傳回這個 <see cref="T:System.Drawing.Region" /> 在指定之圖形內容中的 Windows 控制代碼。</summary>
      <param name="g">在其上繪製 <see cref="T:System.Drawing.Graphics" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 為 <see langword="null" />。</exception>
      <returns>這個 <see cref="T:System.Drawing.Region" /> 的 Windows 控制代碼。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionData">
      <summary>傳回 <see cref="T:System.Drawing.Drawing2D.RegionData" /> 物件，表示描述這個 <see cref="T:System.Drawing.Region" /> 的資訊。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.RegionData" />，表示描述這個 <see cref="T:System.Drawing.Region" /> 的資訊。</returns>
    </member>
    <member name="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)">
      <summary>傳回 <see cref="T:System.Drawing.RectangleF" /> 結構的陣列，這些結構會在套用指定的轉換矩陣後近似於這個 <see cref="T:System.Drawing.Region" />。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，表示要套用至區域的幾何轉換。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> 為 <see langword="null" />。</exception>
      <returns>
        <see cref="T:System.Drawing.RectangleF" /> 結構的陣列，這些結構會在套用指定的矩陣轉換後近似於這個 <see cref="T:System.Drawing.Region" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>將此 <see cref="T:System.Drawing.Region" /> 更新到其本身與指定之 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的交集。</summary>
      <param name="path">要與這個 <see cref="T:System.Drawing.Region" /> 交集的 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)">
      <summary>將此 <see cref="T:System.Drawing.Region" /> 更新到其本身與指定之 <see cref="T:System.Drawing.Rectangle" /> 結構的交集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.Region" /> 交集的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)">
      <summary>將此 <see cref="T:System.Drawing.Region" /> 更新到其本身與指定之 <see cref="T:System.Drawing.RectangleF" /> 結構的交集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.Region" /> 交集的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Intersect(System.Drawing.Region)">
      <summary>將此 <see cref="T:System.Drawing.Region" /> 更新到其本身與指定之 <see cref="T:System.Drawing.Region" /> 的交集。</summary>
      <param name="region">要與這個 <see cref="T:System.Drawing.Region" /> 交集的 <see cref="T:System.Drawing.Region" />。</param>
    </member>
    <member name="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)">
      <summary>測試這個 <see cref="T:System.Drawing.Region" /> 在指定的繪圖介面上是否有空的內部。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示繪圖介面。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 為 <see langword="null" />。</exception>
      <returns>如果套用與 <paramref name="g" /> 關聯的轉換時，這個 <see cref="T:System.Drawing.Region" /> 的內部是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)">
      <summary>測試這個 <see cref="T:System.Drawing.Region" /> 在指定的繪圖介面上是否有無限內部。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示繪圖介面。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> 為 <see langword="null" />。</exception>
      <returns>如果套用與 <paramref name="g" /> 關聯的轉換時，這個 <see cref="T:System.Drawing.Region" /> 的內部是無限的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point)">
      <summary>測試指定的 <see cref="T:System.Drawing.Point" /> 結構是否包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="point">要進行測試的 <see cref="T:System.Drawing.Point" /> 結構。</param>
      <returns>如果 <paramref name="point" /> 包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Point" /> 繪製時，指定的 <see cref="T:System.Drawing.Region" /> 結構是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="point">要進行測試的 <see cref="T:System.Drawing.Point" /> 結構。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果 <paramref name="point" /> 包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)">
      <summary>測試指定的 <see cref="T:System.Drawing.PointF" /> 結構是否包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="point">要進行測試的 <see cref="T:System.Drawing.PointF" /> 結構。</param>
      <returns>如果 <paramref name="point" /> 包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.PointF" /> 繪製時，指定的 <see cref="T:System.Drawing.Region" /> 結構是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="point">要進行測試的 <see cref="T:System.Drawing.PointF" /> 結構。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果 <paramref name="point" /> 包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)">
      <summary>測試是否有任何指定之 <see cref="T:System.Drawing.Rectangle" /> 結構的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="rect">要進行測試的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
      <returns>如果有任何 <paramref name="rect" /> 的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則這個方法會傳回 <see langword="true" />，否則傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Rectangle" /> 繪製時，是否有任何指定之 <see cref="T:System.Drawing.Region" /> 結構的部分包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="rect">要進行測試的 <see cref="T:System.Drawing.Rectangle" /> 結構。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果有任何 <paramref name="rect" /> 的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)">
      <summary>測試是否有任何指定之 <see cref="T:System.Drawing.RectangleF" /> 結構的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="rect">要進行測試的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
      <returns>如果有任何 <paramref name="rect" /> 的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.RectangleF" /> 繪製時，是否有任何指定之 <see cref="T:System.Drawing.Region" /> 結構的部分包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="rect">要進行測試的 <see cref="T:System.Drawing.RectangleF" /> 結構。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果 <paramref name="rect" /> 包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Region" /> 物件繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 物件之中。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>測試是否有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要測試之矩形左上角的 X 座標。</param>
      <param name="y">要測試之矩形左上角的 Y 座標。</param>
      <param name="width">要測試的矩形的寬度。</param>
      <param name="height">要測試的矩形的高度。</param>
      <returns>如果有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Region" /> 繪製時，是否有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要測試之矩形左上角的 X 座標。</param>
      <param name="y">要測試之矩形左上角的 Y 座標。</param>
      <param name="width">要測試的矩形的寬度。</param>
      <param name="height">要測試的矩形的高度。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single)">
      <summary>測試指定的點是否包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Region" /> 繪製時，指定的點是否包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要測試的點的 X 座標。</param>
      <param name="y">要測試的點的 Y 座標。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果指定的點包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>測試是否有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中。</summary>
      <param name="x">要測試之矩形左上角的 X 座標。</param>
      <param name="y">要測試之矩形左上角的 Y 座標。</param>
      <param name="width">要測試的矩形的寬度。</param>
      <param name="height">要測試的矩形的高度。</param>
      <returns>如果有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 物件中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)">
      <summary>測試當使用指定的 <see cref="T:System.Drawing.Region" /> 繪製時，是否有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Graphics" /> 中。</summary>
      <param name="x">要測試之矩形左上角的 X 座標。</param>
      <param name="y">要測試之矩形左上角的 Y 座標。</param>
      <param name="width">要測試的矩形的寬度。</param>
      <param name="height">要測試的矩形的高度。</param>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />，表示圖形內容。</param>
      <returns>如果有任何指定之矩形的部分包含在這個 <see cref="T:System.Drawing.Region" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Drawing.Region.MakeEmpty">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 初始化為空的內部。</summary>
    </member>
    <member name="M:System.Drawing.Region.MakeInfinite">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 物件初始化為無限內部。</summary>
    </member>
    <member name="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)">
      <summary>釋放 <see cref="T:System.Drawing.Region" /> 的控制代碼。</summary>
      <param name="regionHandle">
        <see cref="T:System.Drawing.Region" /> 的控制代碼。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="regionHandle" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>藉由指定的 <see cref="T:System.Drawing.Region" /> 轉換這個 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</summary>
      <param name="matrix">
        <see cref="T:System.Drawing.Drawing2D.Matrix" />，用來轉換這個 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Int32,System.Int32)">
      <summary>以指定的數量來位移這個 <see cref="T:System.Drawing.Region" /> 的座標。</summary>
      <param name="dx">水平位移這個 <see cref="T:System.Drawing.Region" /> 的數量。</param>
      <param name="dy">垂直位移這個 <see cref="T:System.Drawing.Region" /> 的數量。</param>
    </member>
    <member name="M:System.Drawing.Region.Translate(System.Single,System.Single)">
      <summary>以指定的數量來位移這個 <see cref="T:System.Drawing.Region" /> 的座標。</summary>
      <param name="dx">水平位移這個 <see cref="T:System.Drawing.Region" /> 的數量。</param>
      <param name="dy">垂直位移這個 <see cref="T:System.Drawing.Region" /> 的數量。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為其本身與指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的聯集。</summary>
      <param name="path">要與這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 聯集的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Rectangle)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為其本身與指定 <see cref="T:System.Drawing.Rectangle" /> 結構的聯集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.Rectangle" /> 聯集的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.RectangleF)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為其本身與指定 <see cref="T:System.Drawing.RectangleF" /> 結構的聯集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.RectangleF" /> 聯集的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Union(System.Drawing.Region)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為其本身與指定 <see cref="T:System.Drawing.Region" /> 的聯集。</summary>
      <param name="region">要與這個 <see cref="T:System.Drawing.Region" /> 聯集的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為聯集減去其本身與指定 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> 的交集。</summary>
      <param name="path">要與這個 <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /><see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為聯集減去其本身與指定 <see cref="T:System.Drawing.Rectangle" /> 結構的交集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.Rectangle" /><see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為聯集減去其本身與指定 <see cref="T:System.Drawing.RectangleF" /> 結構的交集。</summary>
      <param name="rect">要與這個 <see cref="T:System.Drawing.RectangleF" /><see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> 的 <see cref="T:System.Drawing.Region" /> 結構。</param>
    </member>
    <member name="M:System.Drawing.Region.Xor(System.Drawing.Region)">
      <summary>將這個 <see cref="T:System.Drawing.Region" /> 更新為聯集減去其本身與指定 <see cref="T:System.Drawing.Region" /> 的交集。</summary>
      <param name="region">要與這個 <see cref="T:System.Drawing.Region" /><see cref="Overload:System.Drawing.Region.Xor" /> 的 <see cref="T:System.Drawing.Region" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="T:System.Drawing.RotateFlipType">
      <summary>指定影像的旋轉量以及用來翻轉影像的座標軸。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipNone">
      <summary>指定不翻轉的 180 度順時針旋轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipX">
      <summary>指定 180 度順時針旋轉，後面接續水平翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipXY">
      <summary>指定 180 度順時針旋轉，後面接續水平和垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate180FlipY">
      <summary>指定 180 度順時針旋轉，後面接續垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipNone">
      <summary>指定不翻轉的 270 度順時針旋轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipX">
      <summary>指定 270 度順時針旋轉，後面接續水平翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipXY">
      <summary>指定 270 度順時針旋轉，後面接續水平和垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate270FlipY">
      <summary>指定 270 度順時針旋轉，後面接續垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipNone">
      <summary>指定不翻轉的 90 度順時針旋轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipX">
      <summary>指定 90 度順時針旋轉，後面接續水平翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipXY">
      <summary>指定 90 度順時針旋轉，後面接續水平和垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.Rotate90FlipY">
      <summary>指定 90 度順時針旋轉，後面接續垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipNone">
      <summary>指定不順時針旋轉也不翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipX">
      <summary>指定不順時針旋轉，後面接續水平翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipXY">
      <summary>指定不順時針旋轉，後面接續水平和垂直翻轉。</summary>
    </member>
    <member name="F:System.Drawing.RotateFlipType.RotateNoneFlipY">
      <summary>指定不順時針旋轉，後面接續垂直翻轉。</summary>
    </member>
    <member name="T:System.Drawing.SolidBrush">
      <summary>定義單一色彩的筆刷。 筆刷是用來填滿圖形形狀，例如矩形、橢圓形、派形、多邊形和路徑。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.SolidBrush.#ctor(System.Drawing.Color)">
      <summary>初始化指定色彩的新 <see cref="T:System.Drawing.SolidBrush" /> 物件。</summary>
      <param name="color">
        <see cref="T:System.Drawing.Color" /> 結構，表示這個筆刷的色彩。</param>
    </member>
    <member name="M:System.Drawing.SolidBrush.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.SolidBrush" /> 物件的完全相同複本。</summary>
      <returns>這個方法建立的 <see cref="T:System.Drawing.SolidBrush" /> 物件。</returns>
    </member>
    <member name="P:System.Drawing.SolidBrush.Color">
      <summary>取得或設定這個 <see cref="T:System.Drawing.SolidBrush" /> 物件的色彩。</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Drawing.SolidBrush.Color" /> 屬性是在不可變動的 <see cref="T:System.Drawing.SolidBrush" /> 上設定。</exception>
      <returns>
        <see cref="T:System.Drawing.Color" /> 結構，表示這個筆刷的色彩。</returns>
    </member>
    <member name="T:System.Drawing.StringAlignment">
      <summary>指定相對於文字字串之配置矩形的文字字串對齊。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Center">
      <summary>指定文字對齊配置矩形的中央。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Far">
      <summary>指定文字對齊配置矩形原始位置的遠端位置。 在由左至右的配置中，遠端位置是右方。 在由右至左的配置中，遠端位置是左方。</summary>
    </member>
    <member name="F:System.Drawing.StringAlignment.Near">
      <summary>指定文字應該靠近配置來對齊。 在由左至右的配置中，近端位置是左方。 在由右至左的配置中，近端位置是右方。</summary>
    </member>
    <member name="T:System.Drawing.StringDigitSubstitute">
      <summary>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 列舉型別會指定如何根據使用者的地區設定 (Locale) 或語言來取代字串中的數字。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.National">
      <summary>指定與使用者地區設定的正式當地語言相對應的取代數字。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.None">
      <summary>指定要停用取代。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.Traditional">
      <summary>指定與使用者的本地字體或語言相對應的取代數字，這個數字可能和使用者地區設定的正式當地語言不同。</summary>
    </member>
    <member name="F:System.Drawing.StringDigitSubstitute.User">
      <summary>指定使用者定義的取代配置。</summary>
    </member>
    <member name="T:System.Drawing.StringFormat">
      <summary>封裝文字配置資訊 (例如對齊、方向和定位停駐點)、顯示管理 (例如省略符號插入和國家數字取代) 和 OpenType 功能。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor">
      <summary>初始化新的 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)">
      <summary>從指定的現有 <see cref="T:System.Drawing.StringFormat" /> 物件，初始化新的 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
      <param name="format">
        <see cref="T:System.Drawing.StringFormat" /> 物件，從中初始化新的 <see cref="T:System.Drawing.StringFormat" /> 物件。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> 為 <see langword="null" />。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)">
      <summary>使用指定的 <see cref="T:System.Drawing.StringFormatFlags" /> 列舉，初始化新的 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
      <param name="options">新 <see cref="T:System.Drawing.StringFormat" /> 物件的 <see cref="T:System.Drawing.StringFormatFlags" /> 列舉。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)">
      <summary>使用指定的 <see cref="T:System.Drawing.StringFormatFlags" /> 列舉和語言，初始化新的 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
      <param name="options">新 <see cref="T:System.Drawing.StringFormat" /> 物件的 <see cref="T:System.Drawing.StringFormatFlags" /> 列舉。</param>
      <param name="language">表示文字語言的值。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.StringFormat" /> 物件的完全相同複本。</summary>
      <returns>這個方法建立的 <see cref="T:System.Drawing.StringFormat" /> 物件。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.StringFormat" /> 物件使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="M:System.Drawing.StringFormat.GetTabStops(System.Single@)">
      <summary>取得這個 <see cref="T:System.Drawing.StringFormat" /> 物件的定位停駐點。</summary>
      <param name="firstTabOffset">在文字行開端和第一個定位停駐點之間的間距數目。</param>
      <returns>在定位停駐點之間距離 (以間距數目表示) 的陣列。</returns>
    </member>
    <member name="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)">
      <summary>指定以本地數字取代西式數字時所要使用的語言和方法。</summary>
      <param name="language">國家語言支援 (NLS) 語言識別項，識別以本地數字取代西式數字時要使用的語言。 您可以傳遞 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 屬性做為 NLS 語言識別項。 例如，您可藉由傳遞字串 "ar-EG" 至 <see cref="T:System.Globalization.CultureInfo" /> 建構函式來建立 <see cref="T:System.Globalization.CultureInfo" /> 物件。 如果您將該 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 屬性連同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 傳遞給 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> 方法，則阿拉伯數字將會在顯示期間替換為西式數字。</param>
      <param name="substitute">
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 列舉的元素，指定如何顯示數字。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])">
      <summary>指定 <see cref="T:System.Drawing.CharacterRange" /> 結構的陣列，代表由 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法的呼叫所測量的字元範圍。</summary>
      <param name="ranges">
        <see cref="T:System.Drawing.CharacterRange" /> 結構的陣列，指定由 <see cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" /> 方法的呼叫所測量的字元範圍。</param>
      <exception cref="T:System.OverflowException">設定 32 個以上的字元範圍。</exception>
    </member>
    <member name="M:System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>設定這個 <see cref="T:System.Drawing.StringFormat" /> 物件的定位停駐點。</summary>
      <param name="firstTabOffset">文字行的開頭到第一個定位停駐點的空格數目。</param>
      <param name="tabStops">定位停駐點的間距陣列 (以 <see cref="P:System.Drawing.Graphics.PageUnit" /> 屬性所指定的單位表示)。</param>
    </member>
    <member name="M:System.Drawing.StringFormat.ToString">
      <summary>將這個 <see cref="T:System.Drawing.StringFormat" /> 物件轉換成人們可讀取的字串。</summary>
      <returns>這個 <see cref="T:System.Drawing.StringFormat" /> 物件的字串表示。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Alignment">
      <summary>取得或設定字串的水平對齊方式。</summary>
      <returns>
        <see cref="T:System.Drawing.StringAlignment" /> 列舉，指定字串的水平對齊方式。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionLanguage">
      <summary>取得以本地數字取代西式數字時所使用的語言。</summary>
      <returns>國家語言支援 (NLS) 語言識別項，識別以本地數字取代西式數字時要使用的語言。 您可以傳遞 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 屬性做為 NLS 語言識別項。 例如，您可藉由傳遞字串 "ar-EG" 至 <see cref="T:System.Globalization.CultureInfo" /> 建構函式來建立 <see cref="T:System.Globalization.CultureInfo" /> 物件。 如果您將該 <see cref="T:System.Globalization.CultureInfo" /> 物件的 <see cref="P:System.Globalization.CultureInfo.LCID" /> 屬性連同 <see cref="F:System.Drawing.StringDigitSubstitute.Traditional" /> 傳遞給 <see cref="M:System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)" /> 方法，則阿拉伯數字將會在顯示期間替換為西式數字。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.DigitSubstitutionMethod">
      <summary>取得要用於數字取代的方法。</summary>
      <returns>
        <see cref="T:System.Drawing.StringDigitSubstitute" /> 列舉值，指定如何在字串中替代字元 (這些字元因為不受目前的字型所支援，所以無法顯示)。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.FormatFlags">
      <summary>取得或設定包含格式資訊的 <see cref="T:System.Drawing.StringFormatFlags" /> 列舉。</summary>
      <returns>
        <see cref="T:System.Drawing.StringFormatFlags" /> 列舉，包含格式資訊。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericDefault">
      <summary>取得泛型的預設 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
      <returns>泛型的預設 <see cref="T:System.Drawing.StringFormat" /> 物件。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.GenericTypographic">
      <summary>取得泛型的印刷樣式 <see cref="T:System.Drawing.StringFormat" /> 物件。</summary>
      <returns>泛型的印刷樣式 <see cref="T:System.Drawing.StringFormat" /> 物件。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.HotkeyPrefix">
      <summary>取得或設定這個 <see cref="T:System.Drawing.StringFormat" /> 物件的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 物件。</summary>
      <returns>這個 <see cref="T:System.Drawing.StringFormat" /> 物件的 <see cref="T:System.Drawing.Text.HotkeyPrefix" /> 物件，預設為 <see cref="F:System.Drawing.Text.HotkeyPrefix.None" />。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.LineAlignment">
      <summary>取得或設定字串的垂直對齊方式。</summary>
      <returns>
        <see cref="T:System.Drawing.StringAlignment" /> 列舉，代表垂直行對齊方式。</returns>
    </member>
    <member name="P:System.Drawing.StringFormat.Trimming">
      <summary>取得或設定這個 <see cref="T:System.Drawing.StringFormat" /> 物件的 <see cref="T:System.Drawing.StringTrimming" /> 列舉。</summary>
      <returns>
        <see cref="T:System.Drawing.StringTrimming" /> 列舉，表示如何在這個 <see cref="T:System.Drawing.StringFormat" /> 物件所繪製的文字超過配置矩形邊緣時修剪該文字。</returns>
    </member>
    <member name="T:System.Drawing.StringFormatFlags">
      <summary>指定文字字串的顯示和配置資訊。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionRightToLeft">
      <summary>文字會由右至左顯示。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DirectionVertical">
      <summary>文字會垂直對齊。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.DisplayFormatControl">
      <summary>控制字元 (例如由右至左標記) 會以代表圖像 (Glyph) 顯示於輸出中。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.FitBlackBox">
      <summary>允許部分字元突出字串的配置矩形。 根據預設，會重新調整字元位置以避免任何突出部分。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.LineLimit">
      <summary>只有整行會配置在格式化矩形中。 根據預設值，配置會持續到文字結束為止，或者持續到因為裁剪 (Clipping) 而讓文字不再顯示為止 (無論何者先發生)。 請注意，預設值會格式化不是行高整數倍數的矩形，藉此部分遮蔽最後一個文字行。 若要確保只看見完整的文字行，請指定這個值，並小心提供至少與單行同高的格式化矩形。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.MeasureTrailingSpaces">
      <summary>包含每行結尾處的後端空白字元。 根據預設值，由 <see cref="Overload:System.Drawing.Graphics.MeasureString" /> 方法傳回的邊界矩形會排除每行末端的空白。 設定這個旗標，會將該空白包含在測量範圍內。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoClip">
      <summary>允許顯示圖像的突出部分和超出格式化矩形外部的未換行文字。 根據預設值，超出格式化矩形外部的所有文字和圖像會加以裁剪。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoFontFallback">
      <summary>停用將要求字型中不支援的字元字型回溯為替代字型的功能。 任何遺漏的字元會以字型遺漏圖像加以顯示，通常是空心正方形。</summary>
    </member>
    <member name="F:System.Drawing.StringFormatFlags.NoWrap">
      <summary>停用在矩形中進行格式化時的行間文字換行功能。 當傳遞點而非傳遞矩形時，或者當指定矩形具有為零的線長度時，即暗示這個旗標。</summary>
    </member>
    <member name="T:System.Drawing.StringTrimming">
      <summary>指定如何從不符合配置形狀的字串修剪字元。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Character">
      <summary>指定將文字修剪為最接近的字元。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisCharacter">
      <summary>指定文字修剪為最接近的字元，並且在修剪行的末端插入省略號。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisPath">
      <summary>從修剪行移除中心點，並以省略號來取代。 演算法會盡可能保留文字行最後的斜線分隔區段。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.EllipsisWord">
      <summary>指定文字修剪為最接近的字，並且在修剪行的末端插入省略號。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.None">
      <summary>不指定修剪。</summary>
    </member>
    <member name="F:System.Drawing.StringTrimming.Word">
      <summary>指定將文字修剪為最接近的字。</summary>
    </member>
    <member name="T:System.Drawing.StringUnit">
      <summary>指定文字字串的測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Display">
      <summary>指定設備單位做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Document">
      <summary>指定 1/300 英吋做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Em">
      <summary>指定印表機的 32 Em 尺寸做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Inch">
      <summary>指定英吋做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Millimeter">
      <summary>指定公釐作為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Pixel">
      <summary>指定像素做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.Point">
      <summary>指定印表機的點 (1/72 英吋) 做為測量單位。</summary>
    </member>
    <member name="F:System.Drawing.StringUnit.World">
      <summary>指定自然單位做為測量單位。</summary>
    </member>
    <member name="T:System.Drawing.SystemBrushes">
      <summary>
        <see cref="T:System.Drawing.SystemBrushes" /> 類別的每個屬性是 <see cref="T:System.Drawing.SolidBrush" />，其為 Windows 顯示項目的色彩。</summary>
    </member>
    <member name="M:System.Drawing.SystemBrushes.FromSystemColor(System.Drawing.Color)">
      <summary>從指定的 <see cref="T:System.Drawing.Brush" /> 結構建立 <see cref="T:System.Drawing.Color" />。</summary>
      <param name="c">從其中建立 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Brush" /> 結構。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Brush" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveBorder">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，這是使用中視窗框線的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為現用視窗的框線色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaption">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為使用中視窗標題列的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為使用中視窗標題列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ActiveCaptionText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，這是使用中視窗標題列之文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為使用中視窗標題列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.AppWorkspace">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，這是應用程式工作區的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為應用程式工作區的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonFace">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的表面色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，3-D 項目的表面色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonHighlight">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的醒目提示色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為 3D 項目的反白顯示色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ButtonShadow">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，3-D 項目的陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Control">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的表面色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，3-D 項目的表面色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDark">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，3-D 項目的陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlDarkDark">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的深色陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為 3D 項目的深色陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLight">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的淺色色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為 3D 項目的淺色色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlLightLight">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目的醒目提示色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為 3D 項目的反白顯示色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ControlText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為 3D 項目中文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為 3D 項目中文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Desktop">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為桌面的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為桌面的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientActiveCaption">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為使用中視窗標題列之色彩漸層中最亮的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為現用視窗標題列的色彩漸層中最亮的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GradientInactiveCaption">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為非使用中視窗標題列之色彩漸層中最亮的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為非現用視窗標題列的色彩漸層中最亮的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.GrayText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為暗灰色文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為暗灰色文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Highlight">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為選取之項目的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為選取項目的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HighlightText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，也就是所選項目的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為選取項目的文字色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.HotTrack">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，這是用來指定熱點追蹤項目的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為用來指定熱點追蹤項目的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveBorder">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，這是非使用中視窗框線的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為非現用視窗的框線色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaption">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為非使用中視窗標題列的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為非現用視窗標題列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InactiveCaptionText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為非使用中視窗標題列的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為非現用視窗標題列中文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Info">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為工具提示的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為工具提示的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.InfoText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為工具提示的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為工具提示的文字色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Menu">
      <summary>取得表示功能表背景色彩的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為功能表背景的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuBar">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為功能表列的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為功能表列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuHighlight">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為用來在功能表顯示為平面功能表時反白顯示功能表項目的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為用來在功能表顯示為平面功能表時反白顯示功能表項目的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.MenuText">
      <summary>取得表示功能表文字色彩的 <see cref="T:System.Drawing.SolidBrush" />。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為功能表文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.ScrollBar">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為捲軸的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為捲軸的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.Window">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為視窗工作區中背景的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為視窗工作區中背景的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowFrame">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為視窗框架的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為視窗框架的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemBrushes.WindowText">
      <summary>取得 <see cref="T:System.Drawing.SolidBrush" />，其為視窗工作區中 (client area) 文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.SolidBrush" />，為視窗工作區中文字的色彩。</returns>
    </member>
    <member name="T:System.Drawing.SystemFonts">
      <summary>指定用於顯示 Windows 顯示項目中文字的字型。</summary>
    </member>
    <member name="M:System.Drawing.SystemFonts.GetFontByName(System.String)">
      <summary>傳回字型物件，對應至指定的系統字型名稱。</summary>
      <param name="systemFontName">需要字型物件的系統字型名稱。</param>
      <returns>如果指定名稱符合 <see cref="T:System.Drawing.Font" /> 中的值則為 <see cref="T:System.Drawing.SystemFonts" />，否則為 <see langword="null" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.CaptionFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於顯示視窗標題列中的文字。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於顯示視窗標題列中的文字。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DefaultFont">
      <summary>取得應用程式可用於對話方塊和表單的預設字型。</summary>
      <returns>系統的預設 <see cref="T:System.Drawing.Font" />。 視使用者的作業系統和系統的本機文化特性 (Culture) 設定而定，傳回的值會有所不同。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.DialogFont">
      <summary>取得應用程式可用於對話方塊和表單的字型。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，可用於對話方塊和表單，視作業系統和系統的本機文化特性設定而定。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.IconTitleFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於圖示標題。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於圖示標題。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MenuFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於功能表。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於功能表。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.MessageBoxFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於訊息方塊。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於訊息方塊。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.SmallCaptionFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於顯示小型視窗標題列中的文字，例如工具視窗。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於顯示小型視窗標題列中的文字，例如工具視窗。</returns>
    </member>
    <member name="P:System.Drawing.SystemFonts.StatusFont">
      <summary>取得 <see cref="T:System.Drawing.Font" />，用於顯示狀態列中的文字。</summary>
      <returns>
        <see cref="T:System.Drawing.Font" />，用於顯示狀態列中的文字。</returns>
    </member>
    <member name="T:System.Drawing.SystemIcons">
      <summary>
        <see cref="T:System.Drawing.SystemIcons" /> 類別的每一個屬性皆為整個 Windows 系統圖示的 <see cref="T:System.Drawing.Icon" /> 物件。 此類別無法獲得繼承。</summary>
    </member>
    <member name="P:System.Drawing.SystemIcons.Application">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，這個物件含有預設的應用程式圖示 (WIN32: IDI_APPLICATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有預設的應用程式圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Asterisk">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統星號圖示 (WIN32: IDI_ASTERISK)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統星號圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Error">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統錯誤圖示 (WIN32: IDI_ERROR)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統錯誤圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Exclamation">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統驚嘆號圖示 (WIN32: IDI_EXCLAMATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統驚嘆號圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Hand">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統手部圖示 (WIN32: IDI_HAND)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統手部圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Information">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統資訊圖示 (WIN32: IDI_INFORMATION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統資訊圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Question">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統問號圖示 (WIN32: IDI_QUESTION)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統問號圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Shield">
      <summary>取得含有盾牌圖示的 <see cref="T:System.Drawing.Icon" /> 物件。</summary>
      <returns>含有盾牌圖示的 <see cref="T:System.Drawing.Icon" /> 物件。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.Warning">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有系統警告圖示 (WIN32: IDI_WARNING)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有系統警告圖示。</returns>
    </member>
    <member name="P:System.Drawing.SystemIcons.WinLogo">
      <summary>取得 <see cref="T:System.Drawing.Icon" /> 物件，含有 Windows 標誌圖示 (WIN32: IDI_WINLOGO)。</summary>
      <returns>
        <see cref="T:System.Drawing.Icon" /> 物件，含有 Windows 標誌圖示。</returns>
    </member>
    <member name="T:System.Drawing.SystemPens">
      <summary>
        <see cref="T:System.Drawing.SystemPens" /> 類別的每個屬性都是 <see cref="T:System.Drawing.Pen" />，其為 Windows 顯示項目的色彩，並且寬度為 1 像素。</summary>
    </member>
    <member name="M:System.Drawing.SystemPens.FromSystemColor(System.Drawing.Color)">
      <summary>從指定的 <see cref="T:System.Drawing.Pen" /> 建立 <see cref="T:System.Drawing.Color" />。</summary>
      <param name="c">新 <see cref="T:System.Drawing.Color" /> 的 <see cref="T:System.Drawing.Pen" />。</param>
      <returns>這個方法建立的 <see cref="T:System.Drawing.Pen" />。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveBorder">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，這是使用中視窗框線的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為現用視窗的框線色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaption">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為使用中視窗標題列的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為使用中視窗標題列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ActiveCaptionText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，這是使用中視窗標題列之文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為現用視窗標題列中文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.AppWorkspace">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，這是應用程式工作區的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為應用程式工作區的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonFace">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的表面色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，3-D 項目的表面色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonHighlight">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的醒目提示色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 3D 項目的反白顯示色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ButtonShadow">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，3-D 項目的陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Control">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的表面色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，3-D 項目的表面色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDark">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，3-D 項目的陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlDarkDark">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的深色陰影色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 3D 項目的深色陰影色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLight">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的淺色色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 3D 項目的淺色色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlLightLight">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目的醒目提示色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 3D 項目的反白顯示色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ControlText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 3D 項目中文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 3D 項目中文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Desktop">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為 Windows 桌面的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為 Windows 桌面的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientActiveCaption">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為使用中視窗標題列之色彩漸層中最亮的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為現用視窗標題列的色彩漸層中最亮的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GradientInactiveCaption">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為非使用中視窗標題列之色彩漸層中最亮的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為非現用視窗標題列的色彩漸層中最亮的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.GrayText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為暗灰色文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為暗灰色文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Highlight">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為選取之項目的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為選取項目的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HighlightText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，也就是所選項目的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為選取項目的文字色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.HotTrack">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，這是用來指定熱點追蹤項目的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為用來指定熱點追蹤項目的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveBorder">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為非使用中視窗的框線色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為非使用中視窗的框線色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaption">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為非使用中視窗之標題列標題的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為非使用中視窗之標題列標題的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InactiveCaptionText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為非使用中視窗標題列的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為非現用視窗標題列中文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Info">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為工具提示的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為工具提示的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.InfoText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為工具提示的文字色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為工具提示的文字色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Menu">
      <summary>取得表示功能表背景色彩的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為功能表背景的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuBar">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為功能表列的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為功能表列的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuHighlight">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為用來在功能表顯示為平面功能表時反白顯示功能表項目的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為用來在功能表顯示為平面功能表時反白顯示功能表項目的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.MenuText">
      <summary>取得表示功能表文字色彩的 <see cref="T:System.Drawing.Pen" />。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為功能表文字的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.ScrollBar">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為捲軸的背景色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為捲軸的背景色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.Window">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為視窗工作區中背景的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為視窗工作區中背景的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowFrame">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為視窗框架的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為視窗框架的色彩。</returns>
    </member>
    <member name="P:System.Drawing.SystemPens.WindowText">
      <summary>取得 <see cref="T:System.Drawing.Pen" />，其為視窗工作區中 (client area) 文字的色彩。</summary>
      <returns>
        <see cref="T:System.Drawing.Pen" />，為視窗工作區中文字的色彩。</returns>
    </member>
    <member name="T:System.Drawing.Text.FontCollection">
      <summary>提供已安裝和私用字型集合的基底類別。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose">
      <summary>釋放這個 <see cref="T:System.Drawing.Text.FontCollection" /> 所使用的所有資源。</summary>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Dispose(System.Boolean)">
      <summary>釋放 <see cref="T:System.Drawing.Text.FontCollection" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
      <param name="disposing">
        <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
    </member>
    <member name="M:System.Drawing.Text.FontCollection.Finalize">
      <summary>允許物件在記憶體回收進行回收之前，嘗試釋放資源並執行其他清除作業。</summary>
    </member>
    <member name="P:System.Drawing.Text.FontCollection.Families">
      <summary>取得與這個 <see cref="T:System.Drawing.FontFamily" /> 相關聯的 <see cref="T:System.Drawing.Text.FontCollection" /> 物件陣列。</summary>
      <returns>
        <see cref="T:System.Drawing.FontFamily" /> 物件的陣列。</returns>
    </member>
    <member name="T:System.Drawing.Text.GenericFontFamilies">
      <summary>指定泛用 <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Monospace">
      <summary>泛用單行 <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.SansSerif">
      <summary>泛用 Sans Serif <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
    </member>
    <member name="F:System.Drawing.Text.GenericFontFamilies.Serif">
      <summary>泛用 Serif <see cref="T:System.Drawing.FontFamily" /> 物件。</summary>
    </member>
    <member name="T:System.Drawing.Text.HotkeyPrefix">
      <summary>指定關於文字的快速鍵字首之顯示類型。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Hide">
      <summary>不要顯示快速鍵字首。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.None">
      <summary>沒有快速鍵字首。</summary>
    </member>
    <member name="F:System.Drawing.Text.HotkeyPrefix.Show">
      <summary>顯示快速鍵字首。</summary>
    </member>
    <member name="T:System.Drawing.Text.InstalledFontCollection">
      <summary>表示系統上所安裝的字型。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.Text.InstalledFontCollection.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Text.InstalledFontCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="T:System.Drawing.Text.PrivateFontCollection">
      <summary>提供從字型檔案建立的字型系列集合，這些字型檔案是由用戶端應用程式所提供。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.#ctor">
      <summary>初始化 <see cref="T:System.Drawing.Text.PrivateFontCollection" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddFontFile(System.String)">
      <summary>從指定的檔案將字型加入這個 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。</summary>
      <param name="filename">含有要加入字型檔名的 <see cref="T:System.String" />。</param>
      <exception cref="T:System.IO.FileNotFoundException">不支援指定的字型，或是找不到字型檔案。</exception>
    </member>
    <member name="M:System.Drawing.Text.PrivateFontCollection.AddMemoryFont(System.IntPtr,System.Int32)">
      <summary>將包含在系統記憶體中的字型加入這個 <see cref="T:System.Drawing.Text.PrivateFontCollection" />。</summary>
      <param name="memory">要加入的字型記憶體位址。</param>
      <param name="length">要加入的字型記憶體長度。</param>
    </member>
    <member name="T:System.Drawing.Text.TextRenderingHint">
      <summary>指定文字呈現的品質。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAlias">
      <summary>不經提示，使用字元的反鋸齒補償圖像 (Glyph) 點陣圖繪製每個字元。 平滑化 (或稱反鋸齒補償) 可以產生較佳的品質。 縱線寬度的差異可能因為提示關閉而變得明顯。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.AntiAliasGridFit">
      <summary>經由提示，使用字元的反鋸齒補償圖像點陣圖繪製每個字元。 平滑化 (反鋸齒補償) 可以產生較佳的品質，但卻會犧牲效能。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit">
      <summary>經由提示，使用字元的圖像 ClearType 點陣圖繪製每個字元。 最高的品質設定。 用來利用 ClearType 字型的功能。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixel">
      <summary>使用字元的圖像點陣圖繪製每個字元。 不使用提示。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>使用字元的圖像點陣圖繪製每個字元。 提示是用來改善在縱線和彎曲上字元的外觀。</summary>
    </member>
    <member name="F:System.Drawing.Text.TextRenderingHint.SystemDefault">
      <summary>經由系統預設呈現提示，使用字元的圖像點陣圖繪製每個字元。 使用任何使用者為系統所選取的字型平滑化設定來繪製文字。</summary>
    </member>
    <member name="T:System.Drawing.TextureBrush">
      <summary>
        <see cref="T:System.Drawing.TextureBrush" /> 類別的每一個屬性都是 <see cref="T:System.Drawing.Brush" /> 物件，這個物件會使用影像來填滿形狀的內部。 此類別無法獲得繼承。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image)">
      <summary>初始化使用指定影像的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</summary>
      <param name="bitmap">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和環繞模式。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.Rectangle)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、環繞模式和週框。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode,System.Drawing.RectangleF)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、環繞模式和週框。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="wrapMode">
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排這個 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和週框。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Imaging.ImageAttributes)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、週框和影像屬性。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.Rectangle" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，包含這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所使用影像的相關額外資訊。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像和週框。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.#ctor(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.Imaging.ImageAttributes)">
      <summary>初始化新的 <see cref="T:System.Drawing.TextureBrush" /> 物件，這個物件會使用指定的影像、週框和影像屬性。</summary>
      <param name="image">這個 <see cref="T:System.Drawing.Image" /> 物件用來填滿內部的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</param>
      <param name="dstRect">
        <see cref="T:System.Drawing.RectangleF" /> 結構，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的週框。</param>
      <param name="imageAttr">
        <see cref="T:System.Drawing.Imaging.ImageAttributes" /> 物件，包含這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所使用影像的相關額外資訊。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.Clone">
      <summary>建立這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的完全相同複本。</summary>
      <returns>這個方法所建立的 <see cref="T:System.Drawing.TextureBrush" /> 物件，其轉型為 <see cref="T:System.Object" /> 物件。</returns>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
      <summary>藉由將指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件附加在前面，根據指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件來乘以代表這個 <see cref="T:System.Drawing.TextureBrush" /> 物件之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</summary>
      <param name="matrix">幾何轉換所要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件來乘以代表這個 <see cref="T:System.Drawing.TextureBrush" /> 物件之局部幾何轉換的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</summary>
      <param name="matrix">幾何轉換所要乘以的 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要乘以兩個矩陣的順序。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ResetTransform">
      <summary>將此 <see cref="T:System.Drawing.TextureBrush" /> 物件的 <see langword="Transform" /> 屬性重設為單位矩陣。</summary>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single)">
      <summary>根據指定的角度來旋轉此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將旋轉附加到轉換之前。</summary>
      <param name="angle">旋轉的角度。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的量來旋轉此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。</summary>
      <param name="angle">旋轉的角度。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要在之後或之前附加旋轉矩陣。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single)">
      <summary>以指定的數量來縮放這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將縮放矩陣附加到轉換之前。</summary>
      <param name="sx">X 方向縮放轉換的量。</param>
      <param name="sy">Y 方向縮放轉換的量。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的量來縮放此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。</summary>
      <param name="sx">X 方向縮放轉換的量。</param>
      <param name="sy">Y 方向縮放轉換的量。</param>
      <param name="order">
        <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列舉，指定要在之後或之前附加縮放矩陣。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single)">
      <summary>根據指定的維度來轉譯此 <see cref="T:System.Drawing.TextureBrush" /> 物件的局部幾何轉換。 這個方法會將轉譯附加到轉換之前。</summary>
      <param name="dx">以 x 方向轉譯轉換所根據的維度。</param>
      <param name="dy">以 y 方向轉譯轉換所根據的維度。</param>
    </member>
    <member name="M:System.Drawing.TextureBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
      <summary>依照指定的順序，根據指定的維度來轉換此 <see cref="T:System.Drawing.TextureBrush" />物件的局部幾何轉換。</summary>
      <param name="dx">以 x 方向轉譯轉換所根據的維度。</param>
      <param name="dy">以 y 方向轉譯轉換所根據的維度。</param>
      <param name="order">用來套用轉譯的順序 (附加在前端或後端)。</param>
    </member>
    <member name="P:System.Drawing.TextureBrush.Image">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件關聯的 <see cref="T:System.Drawing.TextureBrush" /> 物件。</summary>
      <returns>
        <see cref="T:System.Drawing.Image" /> 物件，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件填滿形狀所用的影像。</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.Transform">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件的複本，這個複本會為與這個 <see cref="T:System.Drawing.TextureBrush" /> 物件相關聯的影像定義局部幾何轉換。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.Matrix" /> 物件的複本，定義只套用至藉由使用這個 <see cref="T:System.Drawing.TextureBrush" /> 物件所繪製填色的幾何轉換。</returns>
    </member>
    <member name="P:System.Drawing.TextureBrush.WrapMode">
      <summary>取得或設定 <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別 (Enumeration)，表示這個 <see cref="T:System.Drawing.TextureBrush" /> 物件的環繞模式。</summary>
      <returns>
        <see cref="T:System.Drawing.Drawing2D.WrapMode" /> 列舉型別，指定如何並排使用藉由使用這個 <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> 物件所繪製的填色。</returns>
    </member>
    <member name="T:System.Drawing.ToolboxBitmapAttribute">
      <summary>可讓您指定圖示以表示容器中的控制項，例如 Microsoft Visual Studio 表單設計工具。</summary>
    </member>
    <member name="F:System.Drawing.ToolboxBitmapAttribute.Default">
      <summary>
        <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件，具有小型影像，而其大型影像設定為 <see langword="null" />。</summary>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
      <summary>使用來自指定檔案的影像，初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件。</summary>
      <param name="imageFile">含有 16 x 16 點陣圖的檔案的名稱。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
      <summary>根據指定組件中內嵌為資源的 16 x 16 點陣圖，初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件。</summary>
      <param name="t">
        <see cref="T:System.Type" />，程式碼會在其定義組件中搜尋點陣圖資源。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
      <summary>根據指定組件中內嵌為資源的 16 x 16 點陣圖，初始化新的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件。</summary>
      <param name="t">
        <see cref="T:System.Type" />，程式碼會在其定義組件中搜尋點陣圖資源。</param>
      <param name="name">內嵌點陣圖資源的名稱。</param>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
      <summary>指示指定物件是否為 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件，並且和這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件相同。</summary>
      <param name="value">要測試的 <see cref="T:System.Object" />。</param>
      <returns>如果 <paramref name="value" /> 是 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件，並且和這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件相同，則這個方法會傳回 <see langword="true" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
      <summary>取得這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件的雜湊程式碼。</summary>
      <returns>這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件的雜湊程式碼。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="component">如果這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件尚未有小型影像，這個方法會在定義元件參數所指定物件型別的組件中搜尋點陣圖資源。 例如，如果您傳遞 ControlA 型別的物件至元件參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <returns>與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型或大型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="component">如果這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件尚未有小型影像，這個方法會在定義元件參數所指定物件型別的組件中搜尋點陣圖資源。 例如，如果您傳遞 ControlA 型別的物件至元件參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <param name="large">指定這個方法是否傳回大型影像 (<see langword="true" />) 或小型影像 (<see langword="false" />)。 小型影像為 16 x 16，而大型影像為 32 x 32。</param>
      <returns>與這個 <see cref="T:System.Drawing.Image" /> 物件關聯的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件尚未有小型影像，這個方法會在定義型別參數所指定型別的組件中搜尋點陣圖資源。 例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <returns>與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型或大型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件尚未有小型影像，這個方法會在定義元件型別所指定型別的組件中搜尋點陣圖資源。 例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <param name="large">指定這個方法是否傳回大型影像 (<see langword="true" />) 或小型影像 (<see langword="false" />)。 小型影像為 16 x 16，而大型影像為 32 x 32。</param>
      <returns>與這個 <see cref="T:System.Drawing.Image" /> 物件關聯的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
      <summary>取得與這個 <see cref="T:System.Drawing.Image" /> 物件相關的小型或大型 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</summary>
      <param name="type">如果這個 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 物件尚未有小型影像，這個方法會在定義元件型別所指定型別的組件中搜尋內嵌點陣圖資源。 例如，如果您傳遞 typeof(ControlA) 至型別參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <param name="imgName">內嵌點陣圖資源的名稱。</param>
      <param name="large">指定這個方法是否傳回大型影像 (<see langword="true" />) 或小型影像 (<see langword="false" />)。 小型影像為 16 x 16，而大型影像為 32 x 32。</param>
      <returns>與這個 <see cref="T:System.Drawing.Image" /> 物件關聯的 <see cref="T:System.Drawing.ToolboxBitmapAttribute" />。</returns>
    </member>
    <member name="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
      <summary>根據嵌入組件的點陣圖資源傳回 <see cref="T:System.Drawing.Image" /> 物件。</summary>
      <param name="t">這個方法會在定義 t 參數所指定型別的組件搜尋內嵌點陣圖資源。 例如，如果您傳遞 typeof(ControlA) 至 t 參數，那麼這個方法會在定義 ControlA 的組件中搜尋。</param>
      <param name="imageName">內嵌點陣圖資源的名稱。</param>
      <param name="large">指定此方法是會傳回大型影像 (true) 或小型影像 (false)。 小型影像為 16 x 16，而大型影像為 32 x 32。</param>
      <returns>以擷取的點陣圖為基礎的 <see cref="T:System.Drawing.Image" /> 物件。</returns>
    </member>
  </members>
</doc>