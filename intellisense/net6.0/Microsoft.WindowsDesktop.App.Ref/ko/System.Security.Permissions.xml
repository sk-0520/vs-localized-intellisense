<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Permissions</name>
  </assembly>
  <members>
    <member name="T:System.ApplicationIdentity">
      <summary>매니페스트로 활성화되는 애플리케이션을 고유하게 식별하는 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.ApplicationIdentity.#ctor(System.String)">
      <summary>
        <see cref="T:System.ApplicationIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="applicationIdentityFullName">애플리케이션의 전체 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationIdentityFullName" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 채웁니다.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">serialization에 대한 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 구조체입니다.</param>
    </member>
    <member name="M:System.ApplicationIdentity.ToString">
      <summary>매니페스트로 활성화되는 애플리케이션의 전체 이름을 반환합니다.</summary>
      <returns>매니페스트로 활성화되는 애플리케이션의 전체 이름입니다.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.CodeBase">
      <summary>배포 매니페스트의 위치를 URL로 가져옵니다.</summary>
      <returns>배포 매니페스트의 URL입니다.</returns>
    </member>
    <member name="P:System.ApplicationIdentity.FullName">
      <summary>애플리케이션의 전체 이름을 가져옵니다.</summary>
      <returns>표시 이름이라고도 하는 애플리케이션의 전체 이름입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermission">
      <summary>메서드나 클래스에서 구성 파일에 액세스할 수 있도록 하는 권한 구조체를 제공합니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">부여할 권한 수준입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />의 값이 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 또는 <see cref="F:System.Security.Permissions.PermissionState.None" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Copy">
      <summary>권한 수준이 같은 새 <see cref="T:System.Configuration.ConfigurationPermission" /> 개체를 반환합니다.</summary>
      <returns>권한 수준이 같은 새 <see cref="T:System.Configuration.ConfigurationPermission" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML에서 권한 상태의 값을 읽습니다.</summary>
      <param name="securityElement">권한 상태를 읽을 구성 요소입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">주어진 <paramref name="securityElement" />의 <see langword="unrestricted" /> 특성이 <see langword="true" /> 또는 <see langword="false" />가 아닌 경우

또는

주어진 <paramref name="securityElement" />의 <see cref="P:System.Security.SecurityElement.Tag" />가 "IPermission"이 아닌 경우

또는

주어진 <paramref name="securityElement " />의 <see langword="class" /> 특성이 <see langword="null" />이거나 <see cref="T:System.Configuration.ConfigurationPermission" />의 형식 이름이 아닌 경우

또는

주어진 <paramref name="securityElement" />의 <see langword="version" /> 특성이 1이 아닌 경우</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 개체와 <see cref="T:System.Security.IPermission" /> 인터페이스를 구현하는 주어진 개체의 논리 교집합을 반환합니다.</summary>
      <param name="target">교집합을 구하는 데 사용할 권한을 포함하는 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Configuration.ConfigurationPermission" />으로 형식화되지 않은 경우</exception>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" />과 <see cref="T:System.Security.IPermission" />을 구현하는 주어진 개체의 논리 교집합입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 개체와 <see cref="T:System.Security.IPermission" /> 인터페이스를 구현하는 개체를 비교합니다.</summary>
      <param name="target">비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Configuration.ConfigurationPermission" />으로 형식화되지 않은 경우</exception>
      <returns>권한 상태가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 개체의 권한 상태가 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 열거형의 <see cref="T:System.Security.Permissions.PermissionState" /> 값인지 여부를 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" />의 권한 상태가 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />의 <see cref="T:System.Security.Permissions.PermissionState" /> 값이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.ToXml">
      <summary>현재 <see cref="T:System.Security.SecurityElement" /> 개체를 기반으로 하는 특성 값이 포함된 <see cref="T:System.Configuration.ConfigurationPermission" /> 개체를 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.SecurityElement" />을 기반으로 하는 특성 값이 포함된 <see cref="T:System.Configuration.ConfigurationPermission" />입니다.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermission" /> 개체와 <see cref="T:System.Security.IPermission" /> 인터페이스를 구현하는 주어진 개체의 논리 합집합을 반환합니다.</summary>
      <param name="target">합집합을 구하는 데 사용할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Configuration.ConfigurationPermission" />으로 형식화되지 않은 경우</exception>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPermission" />과 <see cref="T:System.Security.IPermission" />을 구현하는 개체의 논리 합집합입니다.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPermissionAttribute">
      <summary>구성 파일의 섹션에 액세스할 수 있는 표시된 대상 권한을 부여하거나 거부하는 <see cref="T:System.Configuration.ConfigurationPermission" /> 개체를 만듭니다.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Configuration.ConfigurationPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" />의 열거형 멤버가 나타내는 보안 동작입니다. 특성의 권한 상태를 결정합니다.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.IPermission" /> 인터페이스를 구현하는 개체를 만들고 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.IPermission" />를 구현하는 개체입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermission">
      <summary>.NET Framework 데이터 공급자에서 사용자가 데이터에 액세스하는 데 적합한 보안 수준을 갖도록 보장합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor">
      <summary>
        <see langword="DBDataPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermission)">
      <summary>기존 <see langword="DBDataPermission" />을 사용하여 <see langword="DBDataPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permission">새 <see langword="DBDataPermission" />을 만드는 데 사용되는 기존 <see langword="DBDataPermission" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Data.Common.DBDataPermissionAttribute)">
      <summary>지정된 <see langword="DBDataPermission" />를 사용하여 <see langword="DBDataPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAttribute">사용자 지정 보안 특성과 관련된 보안 동작입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PermissionState" /> 값을 사용하여 <see langword="DBDataPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PermissionState" /> 값 및 빈 암호를 사용할 수 있는지 여부를 나타내는 값을 사용하여 <see langword="DBDataPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <param name="allowBlankPassword">빈 암호가 허용됨을 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>지정된 연결 문자열에 대한 액세스를 <see langword="DBDataPermission" />의 기존 상태에 추가합니다.</summary>
      <param name="connectionString">허용되는 연결 문자열입니다.</param>
      <param name="restrictions">허용되거나 허용되지 않는 연결 문자열 매개 변수를 식별하는 문자열입니다.</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 속성 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Clear">
      <summary>이전에 <see cref="M:System.Data.Common.DBDataPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)" /> 메서드를 사용하여 추가된 사용 권한을 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Copy">
      <summary>현재 권한 개체의 동일한 복사본을 만들어 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.CreateInstance">
      <summary>
        <see langword="DBDataPermission" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <returns>새 <see langword="DBDataPermission" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="securityElement">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)">
      <summary>현재 권한 개체와 지정된 권한 개체의 교집합을 나타내는 새 권한 개체를 반환합니다.</summary>
      <param name="target">현재 사용 권한 개체와 공통되는 사용 권한 개체입니다. 이 사용 권한 개체는 현재 사용 권한 개체와 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 null 참조(Visual Basic에서는 <see langword="Nothing" />)가 아니며 현재 권한 개체와 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 사용 권한 개체와 지정된 사용 권한 개체의 교집합에 해당하는 새 사용 권한 개체입니다. 교집합이 없는 경우 이 새 사용 권한 개체는 null 참조(Visual Basic에서는 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 권한 개체가 지정된 권한 개체의 하위 집합인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 대상 권한 개체입니다. 이 개체는 현재 권한 개체와 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수는 현재 권한 개체와 다른 형식의 개체인 경우</exception>
      <returns>현재 권한 개체가 지정된 권한 개체의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.IsUnrestricted">
      <summary>권한을 사용 권한 구문에 대한 지식 없이 무제한으로 나타낼 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>권한을 무제한으로 나타낼 수 있으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 개체와 지정된 사용 권한 개체의 합집합에 해당하는 새 사용 권한 개체를 반환합니다.</summary>
      <param name="target">현재 권한 개체와 통합할 권한 개체입니다. 이 사용 권한 개체는 현재 사용 권한 개체와 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 개체의 형식이 현재 권한 개체의 형식과 동일하지 않은 경우</exception>
      <returns>현재 사용 권한 개체와 지정된 사용 권한 개체의 합집합에 해당하는 개체를 나타내는 새 사용 권한 개체입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermission.AllowBlankPassword">
      <summary>빈 암호를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>빈 암호를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Data.Common.DBDataPermissionAttribute">
      <summary>보안 동작을 사용자 지정 보안 특성에 연결합니다.</summary>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.Common.DBDataPermissionAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">선언적 보안으로 수행할 수 있는 동작을 나타내는 보안 동작 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeConnectionString">
      <summary>특성이 연결 문자열을 serialize해야 하는지 여부를 식별합니다.</summary>
      <returns>특성이 연결 문자열을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.Common.DBDataPermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>특성이 키 제한 집합을 serialize해야 하는지 여부를 식별합니다.</summary>
      <returns>특성이 키 제한 집합을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.AllowBlankPassword">
      <summary>빈 암호를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>빈 암호를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.ConnectionString">
      <summary>허용되는 연결 문자열을 가져오거나 설정합니다.</summary>
      <returns>허용되는 연결 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictionBehavior">
      <summary>
        <see cref="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions" /> 속성에 의해 식별되는 연결 문자열 매개 변수 목록만 연결 문자열 매개 변수로 허용되는지 여부를 식별합니다.</summary>
      <returns>
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.Common.DBDataPermissionAttribute.KeyRestrictions">
      <summary>허용되거나 허용되지 않는 연결 문자열 매개 변수를 가져오거나 설정합니다.</summary>
      <returns>허용되거나 허용되지 않는 하나 이상의 연결 문자열 매개 변수입니다.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermission">
      <summary>.NET Framework Data Provider for ODBC에서 사용자가 ODBC 데이터 소스에 액세스하는 데 충분한 보안 수준을 갖도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나를 사용하여 <see cref="T:System.Data.Odbc.OdbcPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see langword="System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <param name="allowBlankPassword">빈 암호를 사용할 수 있는지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>지정된 연결 문자열에 대한 액세스를 기존 사용 권한 상태에 추가합니다.</summary>
      <param name="connectionString">허용되는 연결 문자열입니다.</param>
      <param name="restrictions">허용되거나 허용되지 않는 연결 문자열 매개 변수를 식별하는 문자열입니다.</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermission.Copy">
      <summary>
        <see cref="T:System.Data.Odbc.OdbcPermission" />을 <see cref="T:System.Security.IPermission" />으로 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="T:System.Data.Odbc.OdbcPermissionAttribute">
      <summary>보안 동작을 사용자 지정 보안 특성에 연결합니다.</summary>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나를 사용하여 <see cref="T:System.Data.Odbc.OdbcPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">선언적 보안을 사용하여 수행할 수 있는 동작을 나타내는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.Odbc.OdbcPermissionAttribute.CreatePermission">
      <summary>특성 속성에 따라 구성되는 <see cref="T:System.Data.Odbc.OdbcPermission" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.Odbc.OdbcPermission" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermission">
      <summary>.NET Framework Data Provider for OLE DB에서 사용자가 OLE DB 데이터 소스에 액세스하는 데 충분한 보안 수준을 갖도록 합니다.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <param name="allowBlankPassword">빈 암호를 사용할 수 있는지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermission.Copy">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermission" />을 <see cref="T:System.Security.IPermission" />으로 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermission.Provider">
      <summary>이 속성은 사용되지 않는다고 표시되었습니다. 이 속성을 설정해도 아무 영향을 미치지 않습니다.</summary>
      <returns>이 속성은 사용되지 않는다고 표시되었습니다. 이 속성을 설정해도 아무 영향을 미치지 않습니다.</returns>
    </member>
    <member name="T:System.Data.OleDb.OleDbPermissionAttribute">
      <summary>보안 동작을 사용자 지정 보안 특성에 연결합니다.</summary>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.OleDb.OleDbPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">선언적 보안을 사용하여 수행할 수 있는 동작을 나타내는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.OleDb.OleDbPermissionAttribute.CreatePermission">
      <summary>특성 속성에 따라 구성되는 <see cref="T:System.Data.OleDb.OleDbPermission" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.OleDb.OleDbPermission" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Data.OleDb.OleDbPermissionAttribute.Provider">
      <summary>지원되는 공급자의 목록이 포함된 쉼표 구분 문자열을 가져오거나 설정합니다.</summary>
      <returns>보안 정책에서 허용하는 쉼표로 분리된 공급자 목록입니다.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>.NET Framework Data Provider for Oracle에서 사용자가 Oracle 데이터 소스에 액세스하는 데 적합한 보안 수준을 갖도록 보장합니다.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나를 사용하여 <see cref="T:System.Data.OracleClient.OraclePermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>새 권한 집합을 만듭니다.</summary>
      <param name="connectionString">연결 문자열입니다.</param>
      <param name="restrictions">키 제한입니다.</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 열거형 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <summary>파생된 클래스에 의해 구현될 때 현재 권한 개체의 동일한 복사본을 만들어서 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <summary>파생된 클래스에서 재정의하는 경우 XML 인코딩으로 지정된 상태를 가진 보안 개체를 다시 생성합니다.</summary>
      <param name="securityElement">
        <see cref="T:System.Security.SecurityElement" /> 식입니다.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한과 지정된 권한의 교집합에 해당하는 사용 권한을 만들고 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한이 지정된 권한의 하위 집합인지 여부를 결정합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>권한을 사용 권한 구문에 대한 지식 없이 무제한으로 나타낼 수 있는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>권한을 무제한으로 나타낼 수 있으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>빈 암호를 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>빈 암호를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>보안 동작을 사용자 지정 보안 특성에 연결합니다.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">선언적 보안을 사용하여 수행할 수 있는 작업을 나타내는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>특성 속성에 따라 구성되는 <see cref="T:System.Data.OracleClient.OraclePermission" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.OracleClient.OraclePermission" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>특성이 연결 문자열을 serialize해야 하는지 여부를 식별합니다.</summary>
      <returns>특성이 연결 문자열을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>특성이 키 제한 집합을 serialize해야 하는지 여부를 식별합니다.</summary>
      <returns>특성이 키 제한 집합을 serialize해야 하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>빈 암호를 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>빈 암호를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>허용되는 연결 문자열을 가져오거나 설정합니다.</summary>
      <returns>허용되는 연결 문자열입니다.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> 속성에 의해 식별되는 연결 문자열 매개 변수 목록만 연결 문자열 매개 변수로 허용되는지 여부를 식별합니다.</summary>
      <returns>
        <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>허용되거나 허용되지 않는 연결 문자열 매개 변수를 가져오거나 설정합니다.</summary>
      <returns>허용되거나 허용되지 않는 하나 이상의 연결 문자열 매개 변수입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermission">
      <summary>.NET Framework Data Provider for SQL Server에서 사용자가 데이터 소스에 액세스하는 데 충분한 보안 수준을 갖도록 보장합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <param name="allowBlankPassword">빈 암호를 사용할 수 있는지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 개체에 새 연결 문자열과 제한된 키워드의 집합을 추가합니다.</summary>
      <param name="connectionString">연결 문자열입니다.</param>
      <param name="restrictions">키 제한입니다.</param>
      <param name="behavior">
        <see cref="T:System.Data.KeyRestrictionBehavior" /> 열거형 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermission.Copy">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" />을 <see cref="T:System.Security.IPermission" />으로 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="T:System.Data.SqlClient.SqlClientPermissionAttribute">
      <summary>보안 동작을 사용자 지정 보안 특성에 연결합니다.</summary>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Data.SqlClient.SqlClientPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">선언적 보안을 사용하여 수행할 수 있는 동작을 나타내는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Data.SqlClient.SqlClientPermissionAttribute.CreatePermission">
      <summary>특성 속성에 따라 구성된 <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Data.SqlClient.SqlClientPermission" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermission">
      <summary>이벤트 로깅을 위한 코드 액세스 권한을 제어합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>지정된 액세스 수준과 사용할 컴퓨터의 이름을 사용하여 <see cref="T:System.Diagnostics.EventLogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">액세스 수준을 지정하는 열거형 값 중 하나입니다.</param>
      <param name="machineName">이벤트를 읽거나 쓸 컴퓨터의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>지정된 권한 항목을 사용하여 <see cref="T:System.Diagnostics.EventLogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccessEntries">사용 권한 항목을 나타내는 개체 배열입니다. <see cref="P:System.Diagnostics.EventLogPermission.PermissionEntries" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 사용 권한 상태를 사용하여 <see cref="T:System.Diagnostics.EventLogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">권한 상태(리소스에 대한 전체 액세스 또는 액세스 권한 없음)를 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
      <summary>이 사용 권한 요청에 대한 사용 권한 항목의 컬렉션을 가져옵니다.</summary>
      <returns>이 권한 요청에 대한 사용 권한 항목을 포함하는 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAccess">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" /> 권한 클래스에서 사용되는 액세스 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서는 이벤트 소스를 만들고 기존 로그를 읽을 수 있으며 이벤트 소스 또는 로그를 삭제하고 엔트리에 응답할 수 있을 뿐 아니라 이벤트 로그를 지우고 이벤트를 수신하며 모든 이벤트 로그 컬렉션에 액세스할 수도 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Audit">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서는 기존 로그 읽기, 이벤트 소스 또는 로그 삭제하기, 엔트리에 응답하기, 이벤트 로그 지우기, 이벤트 수신하기, 모든 이벤트 로그 컬렉션에 액세스하기 등을 수행할 수 있습니다. <see langword="Note" /> 이 멤버는 이제 사용되지 않으므로 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />를 대신 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서는 기존 로그 읽기를 수행할 수 있습니다. <see langword="Note" /> 이 멤버는 이제 사용되지 않으므로 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Administer" />를 대신 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서는 기존 로그 읽기 또는 쓰기 그리고 이벤트 소스 및 로그 만들기를 수행할 수 있습니다. <see langword="Note" /> 이 멤버는 이제 사용되지 않으므로 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />를 대신 사용합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.EventLogPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에서는 기존 로그에 쓰고 이벤트 소스 및 로그를 만들 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionAttribute">
      <summary>이벤트 로깅을 위한 선언적 권한 검사를 허용합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
      <summary>
        <see cref="P:System.Diagnostics.EventLogPermissionAttribute.MachineName" /> 속성과 이 속성에 대해 <see cref="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess" /> 속성을 통해 설정되어 요청된 액세스 수준에 따라 권한을 만듭니다.</summary>
      <returns>만들어진 사용 권한을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.MachineName">
      <summary>이벤트를 읽을 컴퓨터의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">컴퓨터 이름이 잘못된 경우</exception>
      <returns>이벤트를 읽을 컴퓨터의 이름입니다. 기본값은 "."입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionAttribute.PermissionAccess">
      <summary>권한 요청에 사용할 액세스 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntry">
      <summary>
        <see cref="T:System.Diagnostics.EventLog" />에 대해 설정된 코드 액세스 보안 권한의 최소 단위를 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 값의 비트 조합입니다. <see cref="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="machineName">이벤트를 읽거나 쓸 컴퓨터의 이름입니다. <see cref="P:System.Diagnostics.EventLogPermissionEntry.MachineName" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <exception cref="T:System.ArgumentException">컴퓨터 이름이 잘못된 경우</exception>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.MachineName">
      <summary>이벤트를 읽거나 쓸 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>이벤트를 읽거나 쓸 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntry.PermissionAccess">
      <summary>권한 요청에 사용할 권한 액세스 수준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.EventLogPermissionAccess" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.EventLogPermissionEntryCollection">
      <summary>
        <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 개체의 강력한 형식의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
      <summary>지정된 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />를 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />입니다.</param>
      <returns>추가된 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 형식의 개체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.Diagnostics.EventLogPermissionEntryCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
      <summary>지정한 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />가 이 컬렉션에 있는지 여부를 확인합니다.</summary>
      <param name="value">찾을 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />입니다.</param>
      <returns>지정된 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />가 이 컬렉션에 속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
      <summary>배열의 특정 인덱스에서 시작하여 이 컬렉션에서 배열로 사용 권한 항목을 복사합니다.</summary>
      <param name="array">이 컬렉션의 사용 권한 항목을 받는 <see cref="T:System.Diagnostics.EventLogPermissionEntry" /> 형식의 배열입니다.</param>
      <param name="index">사용 권한 항목의 복사를 시작할 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목의 인덱스를 확인합니다.</summary>
      <param name="value">검색할 사용 권한 항목입니다.</param>
      <returns>지정된 사용 권한 항목의 인덱스(0부터 시작)이거나 사용 권한 항목이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
      <summary>이 컬렉션의 지정된 인덱스에 사용 권한 항목을 삽입합니다.</summary>
      <param name="index">사용 권한 항목을 삽입할 컬렉션의 인덱스(0부터 시작)입니다.</param>
      <param name="value">이 컬렉션에 삽입할 사용 권한 항목입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnClear">
      <summary>컬렉션의 내용을 지운 후에 추가 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>컬렉션에 새 사용 권한 항목을 삽입하기 전에 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="index" />에 있는 사용 권한 항목의 새 값입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>컬렉션에서 새 사용 권한 항목을 제거할 때 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="value">
        <paramref name="index" />에서 제거할 사용 권한 항목입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>컬렉션에 값을 설정하기 전에 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="oldValue" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="oldValue">
        <paramref name="newValue" />로 바꿀 값입니다.</param>
      <param name="newValue">
        <paramref name="index" />에 있는 사용 권한 항목의 새 값입니다.</param>
    </member>
    <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목을 제거합니다.</summary>
      <param name="value">제거할 사용 권한 항목입니다.</param>
    </member>
    <member name="P:System.Diagnostics.EventLogPermissionEntryCollection.Item(System.Int32)">
      <summary>지정된 인덱스에서 개체를 가져오거나 설정합니다.</summary>
      <param name="index">컬렉션에 포함된 인덱스(0부터 시작)입니다.</param>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Diagnostics.EventLogPermissionEntry" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermission">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />에 대해 코드 액세스 권한을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>지정된 액세스 수준, 사용할 컴퓨터 이름 및 성능 카운터와 관련된 범주를 사용하여 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="machineName">성능 카운터 및 해당 연결 범주가 있는 서버입니다.</param>
      <param name="categoryName">성능 카운터가 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>지정된 권한 액세스 수준 항목을 사용하여 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체의 배열입니다. <see cref="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 사용 권한 상태를 사용하여 <see cref="T:System.Diagnostics.PerformanceCounterPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
      <summary>이 사용 권한 요청에 대한 사용 권한 항목의 컬렉션을 가져옵니다.</summary>
      <returns>이 권한 요청에 대한 사용 권한 항목을 포함하는 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAccess">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" /> 권한 클래스에서 사용되는 액세스 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 범주를 읽고, 쓰고, 만들 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Browse">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 범주를 읽을 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Instrument">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 범주를 읽고 쓸 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.None">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 권한이 없습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 범주를 읽을 수 있습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />는 범주를 쓸 수 있습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionAttribute">
      <summary>선언적 성능 카운터 권한을 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
      <summary>해당 특성의 <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess" /> 속성을 통해 설정되는 요청된 액세스 수준에 따라 권한을 만듭니다.</summary>
      <returns>만들어진 사용 권한을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.CategoryName">
      <summary>성능 카운터 범주의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">값이 <see langword="null" />인 경우</exception>
      <returns>성능 카운터 범주(성능 개체)의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName">
      <summary>성능 카운터의 컴퓨터 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Diagnostics.PerformanceCounterPermissionAttribute.MachineName" /> 형식이 잘못된 경우</exception>
      <returns>성능 카운터의 범주가 있는 서버입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionAttribute.PermissionAccess">
      <summary>권한 요청에 사용할 액세스 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Diagnostics.EventLogPermissionAccess.Write" />입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntry">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounter" />에 대해 설정된 코드 액세스 보안 권한의 최소 단위를 정의합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 값의 비트 조합입니다. <see cref="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="machineName">성능 카운터의 범주가 있는 서버입니다.</param>
      <param name="categoryName">이 성능 카운터와 연결된 성능 카운터 범주(성능 개체)의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="categoryName" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="machineName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permissionAccess" />는 유효한 <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 값이 아닙니다.  
  
또는 
 <paramref name="machineName" />이 올바른 컴퓨터 이름이 아닌 경우</exception>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.CategoryName">
      <summary>성능 카운터 범주(성능 개체)의 이름을 가져옵니다.</summary>
      <returns>성능 카운터 범주(성능 개체)의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.MachineName">
      <summary>성능 카운터의 범주가 있는 서버의 이름을 가져옵니다.</summary>
      <returns>해당 범주가 있는 서버의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntry.PermissionAccess">
      <summary>항목의 권한 액세스 수준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionAccess" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection">
      <summary>
        <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체의 강력한 형식의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>지정된 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" />를 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체입니다.</param>
      <returns>추가된 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 형식의 개체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntryCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>이 컬렉션에 특정 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체가 들어 있는지 여부를 확인합니다.</summary>
      <param name="value">찾을 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체입니다.</param>
      <returns>지정된 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체가 이 컬렉션에 속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
      <summary>배열의 특정 인덱스에서 시작하여 이 컬렉션에서 배열로 사용 권한 항목을 복사합니다.</summary>
      <param name="array">이 컬렉션의 사용 권한 항목을 받는 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 형식의 배열입니다.</param>
      <param name="index">사용 권한 항목의 복사를 시작할 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목의 인덱스를 확인합니다.</summary>
      <param name="value">검색할 사용 권한 항목입니다.</param>
      <returns>지정된 사용 권한 항목의 인덱스(0부터 시작)이거나 사용 권한 항목이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>이 컬렉션의 지정된 인덱스에 사용 권한 항목을 삽입합니다.</summary>
      <param name="index">사용 권한 항목을 삽입할 컬렉션의 인덱스(0부터 시작)입니다.</param>
      <param name="value">이 컬렉션에 삽입할 사용 권한 항목입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnClear">
      <summary>컬렉션의 내용을 지운 후에 추가 사용자 지정 프로세스를 수행합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <summary>컬렉션에 새 사용 권한 항목을 삽입하기 전에 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입할 인덱스(0부터 시작)입니다.</param>
      <param name="value">
        <paramref name="index" />에 있는 사용 권한 항목의 새 값입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <summary>컬렉션에서 새 사용 권한 항목을 제거할 때 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="value" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="value">
        <paramref name="index" />에서 제거할 사용 권한 항목입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>컬렉션에 값을 설정하기 전에 추가 사용자 지정 프로세스를 수행합니다.</summary>
      <param name="index">
        <paramref name="oldValue" />를 찾을 수 있는 0부터 시작하는 인덱스입니다.</param>
      <param name="oldValue">
        <paramref name="newValue" />로 바꿀 값입니다.</param>
      <param name="newValue">
        <paramref name="index" />에 있는 사용 권한 항목의 새 값입니다.</param>
    </member>
    <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목을 제거합니다.</summary>
      <param name="value">제거할 사용 권한 항목입니다.</param>
    </member>
    <member name="P:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Item(System.Int32)">
      <summary>지정된 인덱스에서 개체를 가져오거나 설정합니다.</summary>
      <param name="index">컬렉션에 포함된 인덱스(0부터 시작)입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Diagnostics.PerformanceCounterPermissionEntry" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermission">
      <summary>프린터에 대한 액세스를 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Drawing.Printing.PrintingPermissionLevel)">
      <summary>지정된 인쇄 액세스 권한 수준을 사용하여 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="printingLevel">
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 액세스 권한을 사용하여 <see cref="T:System.Drawing.Printing.PrintingPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />은 유효한 <see cref="T:System.Security.Permissions.PermissionState" />이 아닙니다.</exception>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Copy">
      <summary>현재 권한 개체의 동일한 복사본을 만들어 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="element">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Intersect(System.Security.IPermission)">
      <summary>현재 권한 개체와 대상 권한 개체의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 권한 개체와 형식이 동일한 권한 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 현재 권한 개체와 다른 형식의 개체인 경우</exception>
      <returns>현재 개체와 지정된 대상 개체의 교집합에 해당하는 개체를 나타내는 새 권한 개체입니다. 공통 부분이 비어 있으면 이 개체는 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 권한 개체가 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 대상 권한 개체입니다. 이 개체는 현재 권한 개체와 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 현재 권한 개체와 다른 형식의 개체인 경우</exception>
      <returns>현재 권한 개체가 <paramref name="target" />의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.IsUnrestricted">
      <summary>사용 권한이 무제한인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermission.Union(System.Security.IPermission)">
      <summary>사용 권한 개체와 대상 사용 권한 개체를 결합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 권한 개체와 형식이 동일한 권한 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 현재 권한 개체와 다른 형식의 개체인 경우</exception>
      <returns>현재 사용 권한 개체와 지정된 사용 권한 개체의 합집합에 해당하는 개체를 나타내는 새 사용 권한 개체입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermission.Level">
      <summary>해당 코드의 인쇄 액세스 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionAttribute">
      <summary>선언적 인쇄 권한 검사를 허용합니다.</summary>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Drawing.Printing.PrintingPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Drawing.Printing.PrintingPermissionAttribute.CreatePermission">
      <summary>해당 특성에 있는 <see cref="P:System.Drawing.Printing.PrintingPermissionAttribute.Level" /> 속성을 통해 설정되는 요청된 액세스 권한 수준에 따라 사용 권한을 만듭니다.</summary>
      <returns>만들어진 사용 권한을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.Drawing.Printing.PrintingPermissionAttribute.Level">
      <summary>허용되는 인쇄 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값이 <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 값 중 하나가 아닌 경우</exception>
      <returns>
        <see cref="T:System.Drawing.Printing.PrintingPermissionLevel" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Drawing.Printing.PrintingPermissionLevel">
      <summary>코드가 수행할 수 있는 인쇄 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting">
      <summary>전체 프린터에 대한 모든 액세스 권한을 제공합니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting">
      <summary>어느 정도 제한적인 대화 상자를 통해 안전하게 인쇄할 뿐 아니라 프로그래밍 방식으로 기본 프린터에 인쇄합니다. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />은 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" />의 하위 집합입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting">
      <summary>프린터에 액세스할 수 없도록 합니다. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.NoPrinting" />은 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />의 하위 집합입니다.</summary>
    </member>
    <member name="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting">
      <summary>제한적인 대화 상자에서만 인쇄하도록 합니다. <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" />은 <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" />의 하위 집합입니다.</summary>
    </member>
    <member name="T:System.Net.DnsPermission">
      <summary>네트워크의 DNS(Domain Name System) 서버에 액세스할 권한을 제어합니다.</summary>
    </member>
    <member name="M:System.Net.DnsPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>무제한 DNS 액세스를 허용하거나 DNS 액세스를 허용하지 않는 <see cref="T:System.Net.DnsPermission" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />는 유효한 <see cref="T:System.Security.Permissions.PermissionState" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Copy">
      <summary>현재 사용 권한 인스턴스의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 인스턴스의 동일한 복사본인 <see cref="T:System.Net.DnsPermission" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩에서 <see cref="T:System.Net.DnsPermission" /> 인스턴스를 다시 생성합니다.</summary>
      <param name="securityElement">
        <see cref="T:System.Net.DnsPermission" /> 인스턴스를 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />가 <see cref="T:System.Net.DnsPermission" /> 요소가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.DnsPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 인스턴스와 지정된 사용 권한 인스턴스의 교집합에 해당하는 사용 권한 인스턴스를 만듭니다.</summary>
      <param name="target">현재 인스턴스와 교집합을 구할 <see cref="T:System.Net.DnsPermission" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.DnsPermission" /> 또는 <see langword="null" />이 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Net.DnsPermission" /> 인스턴스와 지정된 <see cref="T:System.Net.DnsPermission" /> 인스턴스의 교집합에 해당하는 부분을 나타내는 <see cref="T:System.Net.DnsPermission" /> 인스턴스이거나 교집합이 비어 있는 경우에는 <see langword="null" />입니다. 현재 인스턴스와 <paramref name="target" />이 모두 무제한이면, 이 메서드는 무제한인 새 <see cref="T:System.Net.DnsPermission" /> 인스턴스를 반환하고, 그렇지 않으면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한 인스턴스가 지정된 사용 권한 인스턴스의 하위 집합인지 여부를 결정합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 두 번째 <see cref="T:System.Net.DnsPermission" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.DnsPermission" /> 또는 <see langword="null" />이 아닌 경우</exception>
      <returns>현재 인스턴스가 무제한이고 <paramref name="target" />이 <see langword="false" /> 또는 무제한이면 <see langword="null" />이고, 그렇지 않으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.IsUnrestricted">
      <summary>개체의 전체 사용 권한 상태를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Net.DnsPermission" /> 인스턴스를 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />를 사용하여 만들었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.ToXml">
      <summary>
        <see cref="T:System.Net.DnsPermission" /> 인스턴스 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하여 보안 개체의 XML 인코딩 표현이 들어 있는 <see cref="T:System.Security.SecurityElement" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 인스턴스와 지정된 사용 권한 인스턴스를 통합하는 사용 권한 인스턴스를 만듭니다.</summary>
      <param name="target">현재 인스턴스와 결합할 <see cref="T:System.Net.DnsPermission" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.DnsPermission" /> 또는 <see langword="null" />이 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Net.DnsPermission" /> 인스턴스와 지정된 <see cref="T:System.Net.DnsPermission" /> 인스턴스를 통합하는 <see cref="T:System.Net.DnsPermission" /> 인스턴스입니다. <paramref name="target" />이 <see langword="null" />이면, 이 메서드는 현재 인스턴스의 복사본을 반환합니다. 현재 인스턴스나 <paramref name="target" />이 무제한이면, 이 메서드는 무제한인 <see cref="T:System.Net.DnsPermission" /> 인스턴스를 반환하고, 그렇지 않으면 제한된 <see cref="T:System.Net.DnsPermission" /> 인스턴스를 반환합니다.</returns>
    </member>
    <member name="T:System.Net.DnsPermissionAttribute">
      <summary>도메인 이름 서버에서 정보를 요청하는 권한을 지정합니다.</summary>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Net.DnsPermissionAttribute" /> 값을 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.SecurityAction" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.DnsPermission" /> 클래스의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>보안 선언에 해당하는 <see cref="T:System.Net.DnsPermission" />입니다.</returns>
    </member>
    <member name="T:System.Net.EndpointPermission">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> 인스턴스가 권한을 부여한 엔드포인트를 정의합니다.</summary>
    </member>
    <member name="M:System.Net.EndpointPermission.Equals(System.Object)">
      <summary>지정한 <see langword="Object" />가 현재 <see langword="Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Object" />과 비교할 <see langword="Object" />입니다.</param>
      <returns>지정된 <see langword="true" />가 현재<see langword="Object" />와 같으면 <see langword="Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.EndpointPermission.GetHashCode">
      <summary>특정 유형에 대한 해시 함수로 사용합니다.</summary>
      <returns>현재 <see cref="T:System.Object" />의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Hostname">
      <summary>이 엔드포인트와 관련된 서버의 DNS 호스트 이름이나 IP 주소를 가져옵니다.</summary>
      <returns>서버의 DNS 호스트 이름이나 IP 주소가 들어 있는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Port">
      <summary>이 엔드포인트와 관련된 네트워크 포트 번호를 가져옵니다.</summary>
      <returns>이 요청 또는 <see cref="F:System.Net.SocketPermission.AllPorts" />와 관련된 네트워크 포트 번호입니다.</returns>
    </member>
    <member name="P:System.Net.EndpointPermission.Transport">
      <summary>이 엔드포인트와 관련된 전송 종류를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.TransportType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpAccess">
      <summary>SMTP(Simple Mail Transport Protocol) 서버에 허용되는 액세스 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.Connect">
      <summary>기본 포트(포트 25)에서 SMTP 호스트에 연결합니다.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.ConnectToUnrestrictedPort">
      <summary>모든 포트에서 SMTP 호스트에 연결합니다.</summary>
    </member>
    <member name="F:System.Net.Mail.SmtpAccess.None">
      <summary>SMTP 호스트에 액세스할 수 없습니다.</summary>
    </member>
    <member name="T:System.Net.Mail.SmtpPermission">
      <summary>SMTP(Simple Mail Transport Protocol) 서버에 대한 액세스를 제어합니다.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Boolean)">
      <summary>지정한 상태를 사용하여 <see cref="T:System.Net.Mail.SmtpPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="unrestricted">새 사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Net.Mail.SmtpAccess)">
      <summary>지정된 액세스 수준을 사용하여 <see cref="T:System.Net.Mail.SmtpPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 사용 권한 상태 값을 사용하여 <see cref="T:System.Net.Mail.SmtpPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.AddPermission(System.Net.Mail.SmtpAccess)">
      <summary>지정된 액세스 수준 값을 사용 권한에 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.Mail.SmtpAccess" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한과 동일한 <see cref="T:System.Net.Mail.SmtpPermission" />입니다.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.FromXml(System.Security.SecurityElement)">
      <summary>지정된 XML 인코딩을 사용하여 사용 권한의 상태를 설정합니다.</summary>
      <param name="securityElement">현재 사용 권한의 상태를 설정하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />이 <see cref="T:System.Net.Mail.SmtpPermission" /> 개체를 설명하지 않는 경우  
  
또는 
 <paramref name="securityElement" />에 사용 권한을 다시 생성하는 데 필요한 상태 정보가 들어 있지 않은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 요소를 추출할 <see cref="T:System.Security.IPermission" />입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.Mail.SmtpPermission" />이 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합을 나타내는 <see cref="T:System.Net.Mail.SmtpPermission" />입니다. 교집합이 비어 있거나 <paramref name="target" />이 <see langword="null" />이면 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="target">하위 집합 관계에 대해 테스트할 <see cref="T:System.Security.IPermission" />입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.Mail.SmtpPermission" />이 아닌 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.ToXml">
      <summary>사용 권한 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>현재 사용 권한의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합시킬 <see cref="T:System.Security.IPermission" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Net.Mail.SmtpPermission" />이 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 나타내는 새 <see cref="T:System.Net.Mail.SmtpPermission" /> 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermission.Access">
      <summary>사용 권한으로 제어되는 SMTP 서버에 대한 액세스 수준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpAccess" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.Mail.SmtpPermissionAttribute">
      <summary>SMTP(Simple Mail Transport Protocol) 서버에 대한 액세스를 제어합니다.</summary>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Net.Mail.SmtpPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">사용 권한 동작을 지정하는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" />은 유효한 <see cref="T:System.Security.Permissions.SecurityAction" />이 아닙니다.</exception>
    </member>
    <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
      <summary>어셈블리의 메타데이터에 <see cref="T:System.Security.Permissions.SecurityAction" />과 함께 저장할 수 있는 사용 권한 개체를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Net.Mail.SmtpPermission" /> 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.Mail.SmtpPermissionAttribute.Access">
      <summary>특성으로 제어되는 SMTP 서버에 대한 액세스 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.String" /> 값입니다. 유효한 값은 "Connect"와 "None"입니다.</returns>
    </member>
    <member name="T:System.Net.NetworkAccess">
      <summary>네트워크 액세스 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Accept">
      <summary>로컬 리소스에 있는 인터넷에서 애플리케이션에 연결할 수 있음을 나타냅니다. 이것은 로컬 리소스(주소/포트)에 대한 액세스 권한을 부여하기 위해 Accept를 사용하는 로컬 호스트를 보호하기 위한 것입니다. 소켓에서 이 로컬 리소스에 바인딩하려고 할 때 해당 리소스에 Accept가 있는지 여부를 확인하기 위해 사용 권한 검사가 수행됩니다.</summary>
    </member>
    <member name="F:System.Net.NetworkAccess.Connect">
      <summary>애플리케이션을 특정 인터넷 리소스에 연결할 수 있음을 나타냅니다. 원격 호스트 리소스의 경우 Connect 권한이 있는지 확인하지 않습니다. 연결하는 원격 호스트의 포트를 알 수 없고 적합한 사용 권한을 미리 만들 수 없기 때문입니다. 수신 대기 중인 소켓에 연결하려는 원격 호스트의 사용 권한은 애플리케이션에서 확인해야 합니다.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationAccess">
      <summary>네트워크 인터페이스 및 트래픽 통계에 대한 정보에 액세스할 수 있는 사용 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.None">
      <summary>네트워크 정보에 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping">
      <summary>네트워크 정보에 대한 ping 권한을 갖습니다.</summary>
    </member>
    <member name="F:System.Net.NetworkInformation.NetworkInformationAccess.Read">
      <summary>네트워크 정보에 대한 읽기 권한을 갖습니다.</summary>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermission">
      <summary>로컬 컴퓨터의 네트워크 정보 및 트래픽 통계에 대한 액세스를 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>지정된 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 값을 사용하여 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.AddPermission(System.Net.NetworkInformation.NetworkInformationAccess)">
      <summary>이 사용 권한에 지정된 값을 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
      <summary>이 사용 권한의 동일한 복사본을 만들어 반환합니다.</summary>
      <returns>현재 사용 권한과 동일한 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.FromXml(System.Security.SecurityElement)">
      <summary>지정된 XML 인코딩을 사용하여 이 사용 권한의 상태를 설정합니다.</summary>
      <param name="securityElement">현재 사용 권한의 상태를 설정하는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />가 사용 권한 인코딩이 아닌 경우  
  
또는 
 <paramref name="securityElement" />가 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 인코딩이 아닌 경우  
  
또는 
 <paramref name="securityElement" />에 잘못된 <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 값이 있는 경우</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 요소를 추출할 <see cref="T:System.Security.IPermission" />입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이(가) <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />가 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합을 나타내는 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />입니다. 교집합이 비어 있거나 <paramref name="target" />이 <see langword="null" />이면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계에 대해 테스트할 <see cref="T:System.Security.IPermission" />입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.ToXml">
      <summary>이 사용 권한 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>현재 사용 권한의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
      <summary>이 사용 권한과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 사용 권한입니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermission.Access">
      <summary>이 사용 권한으로 제어되는 네트워크 정보에 대한 액세스 수준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationAccess" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute">
      <summary>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Net.NetworkInformation.NetworkInformationPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">사용 권한 동작을 지정하는 <see cref="T:System.Security.Permissions.SecurityAction" /> 값입니다.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" /> 개체를 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Net.NetworkInformation.NetworkInformationPermission" />입니다.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.Access">
      <summary>네트워크 정보의 액세스 수준을 가져오거나 설정합니다.</summary>
      <returns>액세스 수준을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission">
      <summary>
        <see cref="N:System.Net.PeerToPeer.Collaboration" /> 개체 권한을 정의하거나 이 권한에 사용되는 값을 지정합니다.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />의 새 인스턴스를 초기화합니다. 이 인스턴스에 대한 초기 <see cref="T:System.Security.Permissions.PermissionState" />이 생성자가 호출될 때 전달됩니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 열거형에 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Copy">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />의 복사본을 만들어 반환합니다.</summary>
      <returns>
        <see cref="T:System.Object" />의 현재 인스턴스에 대한 복사본을 포함하는 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)">
      <summary>보안 개체를 인코딩하기 위한 XML 개체 모델을 나타냅니다.</summary>
      <param name="e">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">매개 변수가 올바른 권한 요소가 아닌 경우

또는

매개 변수가 올바른 형식 또는 클래스를 포함하지 않는 경우

또는

매개 변수의 버전 번호가 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)" />할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 권한의 교집합을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 지정된 <paramref name="target" /> 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <returns>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 지정된 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsUnrestricted">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />이 무제한인지 여부를 지정하는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.ToXml">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" /> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />과 지정된 <paramref name="target" /> 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <returns>현재 <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)" />과 지정된 사용 권한의 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute">
      <summary>
        <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값을 지정합니다.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.IPermission" />을 만들어 반환합니다.</summary>
      <returns>새 <see cref="T:System.Security.IPermission" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermission">
      <summary>
        <see cref="N:System.Net.PeerToPeer" /> 개체 권한에 사용되는 값을 지정합니다.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>제공된 초기 권한 상태를 사용하여 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 열거형에 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />의 동일한 복사본을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">매개 변수가 올바른 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 요소가 아닙니다.

또는

매개 변수의 버전 번호가 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
      <returns>
        <see cref="T:System.Net.PeerToPeer.PnrpPermission" />의 현재 인스턴스 복사본이 인스턴스에 포함된 IPermission 인터페이스를 갖는 개체입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">매개 변수가 올바른 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 요소가 아닙니다.

또는

매개 변수의 버전 번호가 지원되지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)인 경우</exception>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 교집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 교집합을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">target 매개 변수가 <see langword="null" /> 참조(Visual Basic의 경우 <see langword="Nothing" />)가 아니며 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 지정된 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />이 무제한인지 여부를 지정하는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <summary>
        <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보와 함께 사용 권한의 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 잘못되었습니다.</exception>
      <returns>현재 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />과 지정된 사용 권한의 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <summary>
        <see cref="T:System.Net.PeerToPeer.PnrpPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.IPermission" />을 만들어 반환합니다.</summary>
      <returns>새 <see cref="T:System.Security.IPermission" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Net.PeerToPeer.PnrpScope">
      <summary>PNRP 클라우드의 다양한 범위를 지정합니다.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.All">
      <summary>모든 IP 주소를 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />에 등록할 수 있습니다. 즉, 등록되는 범위에 제한이 없습니다.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.Global">
      <summary>전역 범위이므로 유효한 모든 IP 주소를 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />에 등록할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <summary>링크 로컬 범위이므로 로컬 영역 서브넷에 정의된 IP 주소만 PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />에 등록할 수 있습니다.</summary>
    </member>
    <member name="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <summary>사이트 로컬 범위이므로 사이트에 정의된 IP 주소만 PNRP에 등록할 수 있습니다.</summary>
    </member>
    <member name="T:System.Net.SocketPermission">
      <summary>전송 주소에 대해 연결을 만들거나 허용하는 권한을 제어합니다.</summary>
    </member>
    <member name="F:System.Net.SocketPermission.AllPorts">
      <summary>모든 포트를 나타내는 상수를 정의합니다.</summary>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>지정된 사용 권한을 사용하여 주어진 전송 주소에 대한 <see cref="T:System.Net.SocketPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> 값 중 하나입니다.</param>
      <param name="transport">
        <see cref="T:System.Net.TransportType" /> 값 중 하나입니다.</param>
      <param name="hostName">전송 주소에 대한 호스트 이름입니다.</param>
      <param name="portNumber">전송 주소에 대한 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.SocketPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Net.SocketPermission" />에 대한 무제한 액세스를 허용하거나 <see cref="T:System.Net.Sockets.Socket" />에 대한 액세스를 허용하지 않는 <see cref="T:System.Net.Sockets.Socket" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
      <summary>전송 주소에 대한 사용 권한 집합에 사용 권한을 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Net.NetworkAccess" /> 값 중 하나입니다.</param>
      <param name="transport">
        <see cref="T:System.Net.TransportType" /> 값 중 하나입니다.</param>
      <param name="hostName">전송 주소에 대한 호스트 이름입니다.</param>
      <param name="portNumber">전송 주소에 대한 포트 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hostName" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Copy">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> 인스턴스의 복사본을 만듭니다.</summary>
      <returns>현재 인스턴스의 복사본인 <see cref="T:System.Net.SocketPermission" /> 클래스의 새 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.FromXml(System.Security.SecurityElement)">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> 인스턴스를 XML 인코딩으로 다시 만듭니다.</summary>
      <param name="securityElement">
        <see cref="T:System.Net.SocketPermission" /> 인스턴스를 다시 생성하는 데 사용하는 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />가 이 형식에 대한 사용 권한 요소가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.SocketPermission.Intersect(System.Security.IPermission)">
      <summary>두 <see cref="T:System.Net.SocketPermission" /> 인스턴스의 논리 교집합을 반환합니다.</summary>
      <param name="target">현재 인스턴스와 교집합을 구할 <see cref="T:System.Net.SocketPermission" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see cref="T:System.Net.SocketPermission" />이 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" />이 메서드 호출자에 부여되지 않은 경우</exception>
      <returns>두 <see cref="T:System.Net.SocketPermission" /> 인스턴스의 교집합에 해당하는 부분을 나타내는 <see cref="T:System.Net.SocketPermission" /> 인스턴스입니다. 교집합에 해당하는 부분이 없으면 메서드가 <see langword="null" />을 반환합니다. <paramref name="target" /> 매개 변수가 null 참조이면 메서드는 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계에 대해 테스트할 <see cref="T:System.Net.SocketPermission" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이(가) <see cref="T:System.Net.Sockets.SocketException" />가 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Net.DnsPermission" />이 메서드 호출자에 부여되지 않은 경우</exception>
      <returns>
        <paramref name="target" />이 <see langword="null" />인 경우, 이 메서드는 현재 인스턴스가 사용 권한을 정의하지 않으면 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다. <paramref name="target" />이 <see langword="null" />이 아닌 경우, 현재 인스턴스가 <paramref name="target" /> 사용 권한의 하위 집합을 정의하면 이 메서드가 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.IsUnrestricted">
      <summary>개체의 전체 사용 권한 상태를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Net.SocketPermission" /> 인스턴스를 <see cref="T:System.Security.Permissions.PermissionState" />의 <see langword="true" /> 값으로 만들었으면 <see langword="Unrestricted" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.ToXml">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> 인스턴스 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하여 <see cref="T:System.Security.SecurityElement" /> 인스턴스의 XML 인코딩 표현이 들어 있는 <see cref="T:System.Net.SocketPermission" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
      <summary>두 <see cref="T:System.Net.SocketPermission" /> 인스턴스의 논리합을 반환합니다.</summary>
      <param name="target">현재 인스턴스와 결합할 <see cref="T:System.Net.SocketPermission" /> 인스턴스입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이(가) <see cref="T:System.Net.SocketPermission" />가 아닌 경우</exception>
      <returns>두 <see cref="T:System.Net.SocketPermission" /> 인스턴스의 논리합을 나타내는 <see cref="T:System.Net.SocketPermission" /> 인스턴스입니다. <paramref name="target" /> 매개 변수가 <see langword="null" />이면 현재 인스턴스의 복사본을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.AcceptList">
      <summary>이 사용 권한 인스턴스 하에서 허용할 수 있는 엔드포인트를 식별하는 <see cref="T:System.Net.EndpointPermission" /> 인스턴스 목록을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 인스턴스가 들어 있는 <see cref="T:System.Net.EndpointPermission" /> 인터페이스를 구현하는 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermission.ConnectList">
      <summary>이 사용 권한 인스턴스 하에서 연결할 수 있는 엔드포인트를 식별하는 <see cref="T:System.Net.EndpointPermission" /> 인스턴스 목록을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 인스턴스가 들어 있는 <see cref="T:System.Net.EndpointPermission" /> 인터페이스를 구현하는 인스턴스입니다.</returns>
    </member>
    <member name="T:System.Net.SocketPermissionAttribute">
      <summary>보안 동작을 지정하여 <see cref="T:System.Net.Sockets.Socket" /> 연결을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Net.SocketPermissionAttribute" /> 값을 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" />는 유효한 <see cref="T:System.Security.Permissions.SecurityAction" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.SocketPermission" /> 클래스의 새 인스턴스를 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">하나 이상의 현재 인스턴스의 <see cref="P:System.Net.SocketPermissionAttribute.Access" />, <see cref="P:System.Net.SocketPermissionAttribute.Host" />, <see cref="P:System.Net.SocketPermissionAttribute.Transport" /> 또는 <see cref="P:System.Net.SocketPermissionAttribute.Port" /> 속성이 <see langword="null" />인 경우</exception>
      <returns>보안 선언에 해당하는 <see cref="T:System.Net.SocketPermission" /> 클래스의 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Access">
      <summary>이 <see cref="T:System.Net.SocketPermissionAttribute" />에서 허용하는 네트워크 액세스 메서드를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.SocketPermissionAttribute.Access" /> 속성이 <see langword="null" />이 아닌 경우. 둘 이상의 Access 메서드를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>이 <see cref="T:System.Net.SocketPermissionAttribute" /> 인스턴스에서 허용하는 네트워크 액세스 메서드를 포함하는 문자열입니다. 유효한 값은 "Accept"와 "Connect"입니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Host">
      <summary>이 <see cref="T:System.Net.SocketPermissionAttribute" />에서 지정하는 DNS 호스트 이름 또는 IP 주소를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.SocketPermissionAttribute.Host" />이 <see langword="null" />이 아닌 경우. 둘 이상의 호스트를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>이 <see cref="T:System.Net.SocketPermissionAttribute" /> 인스턴스와 관련된 DNS 호스트 이름이나 IP 주소를 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Port">
      <summary>이 <see cref="T:System.Net.SocketPermissionAttribute" />와 관련된 포트 번호를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.SocketPermissionAttribute.Port" /> 속성이 <see langword="null" />인 경우. 둘 이상의 포트를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>이 <see cref="T:System.Net.SocketPermissionAttribute" /> 인스턴스와 관련된 포트 번호를 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.SocketPermissionAttribute.Transport">
      <summary>이 <see cref="T:System.Net.TransportType" />에서 지정하는 <see cref="T:System.Net.SocketPermissionAttribute" />을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.SocketPermissionAttribute.Transport" />이 <see langword="null" />이 아닌 경우. 둘 이상의 전송 형식을 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>이 <see cref="T:System.Net.TransportType" />와 관련된 <see cref="T:System.Net.SocketPermissionAttribute" />을 포함하는 문자열입니다.</returns>
    </member>
    <member name="T:System.Net.TransportType">
      <summary>
        <see cref="T:System.Net.SocketPermission" />과 <see cref="T:System.Net.Sockets.Socket" /> 클래스에 대한 전송 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Net.TransportType.All">
      <summary>모든 전송 형식입니다.</summary>
    </member>
    <member name="F:System.Net.TransportType.Connectionless">
      <summary>전송 형식은 UDP와 같이 연결이 없습니다. 이 값을 지정하면 <see cref="F:System.Net.TransportType.Udp" />를 지정할 때와 같은 결과가 나타납니다.</summary>
    </member>
    <member name="F:System.Net.TransportType.ConnectionOriented">
      <summary>전송은 TCP와 같이 연결 지향입니다. 이 값을 지정하면 <see cref="F:System.Net.TransportType.Tcp" />를 지정할 때와 같은 결과가 나타납니다.</summary>
    </member>
    <member name="F:System.Net.TransportType.Tcp">
      <summary>TCP 전송입니다.</summary>
    </member>
    <member name="F:System.Net.TransportType.Udp">
      <summary>UDP 전송입니다.</summary>
    </member>
    <member name="T:System.Net.WebPermission">
      <summary>HTTP 인터넷 리소스에 액세스하는 권한을 제어합니다.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor">
      <summary>
        <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
      <summary>지정된 URI에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">지정된 URI에 대해 부여할 액세스 종류를 나타내는 NetworkAccess 값입니다. <see cref="F:System.Net.NetworkAccess.Accept" />는 로컬 리소스에 있는 인터넷에서 애플리케이션에 연결할 수 있음을 나타냅니다. <see cref="F:System.Net.NetworkAccess.Connect" />는 애플리케이션을 특정 인터넷 리소스에 연결할 수 있음을 나타냅니다.</param>
      <param name="uriString">액세스 권한이 부여되는 URI 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>지정된 URI 정규식에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">지정된 URI에 대해 부여할 액세스 종류를 나타내는 <see cref="T:System.Net.NetworkAccess" /> 값입니다. <see cref="F:System.Net.NetworkAccess.Accept" />는 로컬 리소스에 있는 인터넷에서 애플리케이션에 연결할 수 있음을 나타냅니다. <see cref="F:System.Net.NetworkAccess.Connect" />는 애플리케이션을 특정 인터넷 리소스에 연결할 수 있음을 나타냅니다.</param>
      <param name="uriRegex">액세스 권한이 부여될 URI를 설명하는 정규식입니다.</param>
    </member>
    <member name="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>모든 요청을 허용하거나 모든 요청을 거부하는 <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값입니다.</param>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
      <summary>현재 <see cref="T:System.Net.WebPermission" />에 대한 지정된 액세스 권한을 사용하여 지정된 URI 문자열을 추가합니다.</summary>
      <param name="access">URI에 대해 부여되는 액세스 권한을 지정하는 <see cref="T:System.Net.NetworkAccess" />입니다.</param>
      <param name="uriString">액세스 권한이 부여되는 URI를 설명하는 문자열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriString" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
      <summary>현재 <see cref="T:System.Net.WebPermission" />에 대한 지정된 액세스 권한을 사용하여 지정된 URI를 추가합니다.</summary>
      <param name="access">URI에 대해 부여되는 액세스 권한을 지정하는 NetworkAccess입니다.</param>
      <param name="uriRegex">액세스 권한이 부여되는 URI 집합을 설명하는 정규식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriRegex" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Net.WebPermission.Copy">
      <summary>
        <see cref="T:System.Net.WebPermission" />의 복사본을 만듭니다.</summary>
      <returns>원본과 같은 값을 가진 <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스입니다</returns>
    </member>
    <member name="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩에서 <see cref="T:System.Net.WebPermission" />을 다시 만듭니다.</summary>
      <param name="securityElement">
        <see cref="T:System.Net.WebPermission" />을 다시 만드는 데 사용되는 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />가 이 형식에 대한 사용 권한 요소가 아닌 경우</exception>
    </member>
    <member name="M:System.Net.WebPermission.Intersect(System.Security.IPermission)">
      <summary>두 <see cref="T:System.Net.WebPermission" /> 인스턴스의 논리 교집합을 반환합니다.</summary>
      <param name="target">현재 인스턴스와 비교할 <see cref="T:System.Net.WebPermission" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see langword="null" /> 또는 <see cref="T:System.Net.WebPermission" /> 형식이 아닌 경우</exception>
      <returns>현재 인스턴스와 <paramref name="target" /> 매개 변수의 교집합에 해당하는 부분을 나타내는 새 <see cref="T:System.Net.WebPermission" />입니다. 교집합에 해당하는 부분이 없으면 메서드가 <see langword="null" />을 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Net.WebPermission" />이 지정된 개체의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">현재 <see cref="T:System.Net.WebPermission" />와 비교할 <see cref="T:System.Net.WebPermission" />입니다.</param>
      <exception cref="T:System.ArgumentException">대상 매개 변수가 <see cref="T:System.Net.WebPermission" />의 인스턴스가 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">현재 인스턴스에 Regex로 인코딩된 권한이 포함되어 있지만 대상 인스턴스에 동일한 권한이 없는 경우</exception>
      <returns>현재 인스턴스가 <paramref name="target" /> 매개 변수의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 대상이 <see langword="null" />일 경우, 무제한이 아닌 비어 있는 현재 사용 권한에 대해서 메서드는 <see langword="true" />를 반환하고, 그렇지 않으면 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Net.WebPermission.IsUnrestricted">
      <summary>
        <see cref="T:System.Net.WebPermission" />의 전체 사용 권한 상태를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Net.WebPermission" />
        <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" />을 만들었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebPermission.ToXml">
      <summary>
        <see cref="T:System.Net.WebPermission" /> 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하여 <see cref="T:System.Security.SecurityElement" />의 XML 인코딩 표현이 들어 있는 <see cref="T:System.Net.WebPermission" />입니다.</returns>
    </member>
    <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
      <summary>
        <see cref="T:System.Net.WebPermission" /> 클래스의 두 인스턴스에 대한 논리합을 반환합니다.</summary>
      <param name="target">현재 <see cref="T:System.Net.WebPermission" />과 결합할 <see cref="T:System.Net.WebPermission" />입니다.</param>
      <exception cref="T:System.ArgumentException">대상이 <see langword="null" /> 또는 <see cref="T:System.Net.WebPermission" /> 형식이 아닌 경우</exception>
      <returns>현재 인스턴스와 <paramref name="target" /> 매개 변수의 합집합에 해당하는 부분을 나타내는 <see cref="T:System.Net.WebPermission" />입니다. <see langword="WebPermission" />이 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />이면 이 메서드는 <see cref="T:System.Net.WebPermission" />로 설정된 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />을 반환합니다. 대상이 <see langword="null" />이면 이 메서드는 현재 <see cref="T:System.Net.WebPermission" />의 복사본을 반환합니다.</returns>
    </member>
    <member name="P:System.Net.WebPermission.AcceptList">
      <summary>이 속성은 이 <see cref="T:System.Net.WebPermission" />이 보유한 단일 허용 권한의 열거형을 반환합니다. 반환된 열거형에 포함될 수 있는 개체 형식에는 <see cref="T:System.String" />과 <see cref="T:System.Text.RegularExpressions.Regex" />가 있습니다.</summary>
      <returns>허용 권한을 포함하는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스입니다.</returns>
    </member>
    <member name="P:System.Net.WebPermission.ConnectList">
      <summary>이 속성은 이 <see cref="T:System.Net.WebPermission" />이 보유한 단일 연결 권한의 열거형을 반환합니다. 반환된 열거형에 포함될 수 있는 개체 형식에는 <see cref="T:System.String" />과 <see cref="T:System.Text.RegularExpressions.Regex" />가 있습니다.</summary>
      <returns>연결 권한을 포함하는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스입니다.</returns>
    </member>
    <member name="T:System.Net.WebPermissionAttribute">
      <summary>인터넷 리소스에 액세스할 사용 권한을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>이 클래스에서 수행할 수 있는 보안 동작을 지정하는 값을 사용하여 <see cref="T:System.Net.WebPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" />는 유효한 <see cref="T:System.Security.Permissions.SecurityAction" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Net.WebPermission" /> 클래스의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>보안 선언에 해당하는 <see cref="T:System.Net.WebPermission" />입니다.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Accept">
      <summary>현재 <see cref="T:System.Net.WebPermissionAttribute" />에서 받아들이는 URI 문자열을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.WebPermissionAttribute.Accept" />이 <see langword="null" />이 아닌 경우. 둘 이상의 Access URI를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>현재 <see cref="T:System.Net.WebPermissionAttribute" />에서 받아들이는 URI를 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.AcceptPattern">
      <summary>현재 <see cref="T:System.Net.WebPermissionAttribute" />에서 받아들이는 URI를 설명하는 정규식 패턴을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.WebPermissionAttribute.AcceptPattern" />이 <see langword="null" />이 아닌 경우. 둘 이상의 Access URI를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>현재 <see cref="T:System.Net.WebPermissionAttribute" />에서 받아들이는 URI를 설명하는 정규식 패턴이 포함된 문자열입니다. 이 문자열은 <see cref="T:System.Text.RegularExpressions.Regex" /> 생성자 문자열을 인코딩하기 위한 규칙에 따라 이스케이프되어야 합니다.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.Connect">
      <summary>현재 <see cref="T:System.Net.WebPermissionAttribute" />에 의해 제어되는 URI 연결 문자열을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.WebPermissionAttribute.Connect" />이 <see langword="null" />이 아닌 경우. 둘 이상의 Connect URI를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>현재 <see cref="T:System.Net.WebPermissionAttribute" />에 의해 제어되는 URI 연결을 포함하는 문자열입니다.</returns>
    </member>
    <member name="P:System.Net.WebPermissionAttribute.ConnectPattern">
      <summary>현재 <see cref="T:System.Net.WebPermissionAttribute" />에 의해 제어되는 URI 연결을 설명하는 정규식 패턴을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값 설정 시 <see cref="P:System.Net.WebPermissionAttribute.ConnectPattern" />이 <see langword="null" />이 아닌 경우. 둘 이상의 Connect URI를 지정하려면 추가 특성 선언문을 사용합니다.</exception>
      <returns>현재 <see cref="T:System.Net.WebPermissionAttribute" />에 의해 제어되는 URI 연결을 설명하는 정규식 패턴이 포함된 문자열입니다.</returns>
    </member>
    <member name="T:System.Security.CodeAccessPermission">
      <summary>모든 코드 액세스 권한의 기본 구조를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.#ctor">
      <summary>
        <see cref="T:System.Security.CodeAccessPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Assert">
      <summary>스택의 상위 호출자에게 리소스에 액세스할 수 있는 권한이 부여되지 않더라도 호출 코드가 이 메서드를 호출하는 코드를 통해 사용 권한 요구로 보호되는 리소스에 액세스할 수 있음을 선언합니다. <see cref="M:System.Security.CodeAccessPermission.Assert" />를 사용하면 보안 문제가 발생할 수 있습니다.</summary>
      <exception cref="T:System.Security.SecurityException">호출 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Assertion" />이 없습니다.  
  
또는 
현재 프레임에 대해 활성 <see cref="M:System.Security.CodeAccessPermission.Assert" />가 이미 있습니다.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Copy">
      <summary>파생된 클래스에 의해 구현될 때 현재 권한 개체의 동일한 복사본을 만들어서 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Demand">
      <summary>현재 인스턴스에서 지정한 사용 권한이 호출 스택의 일부 상위 호출자에만 부여된 경우 런타임에 <see cref="T:System.Security.SecurityException" />을 강제로 발생시킵니다.</summary>
      <exception cref="T:System.Security.SecurityException">호출 스택의 상위 호출자는 현재 인스턴스가 지정한 권한이 없는 경우  
  
또는 
호출 스택의 상위 호출자가 현재 권한 개체의 <see cref="M:System.Security.CodeAccessPermission.Deny" />를 호출한 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Deny">
      <summary>호출 스택의 상위 호출자가 이 메서드를 호출하는 코드를 통해 현재 인스턴스에서 지정한 리소스에 액세스하지 못하게 합니다.</summary>
      <exception cref="T:System.Security.SecurityException">현재 프레임에 대해 활성 <see cref="M:System.Security.CodeAccessPermission.Deny" />가 이미 있습니다.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.CodeAccessPermission" /> 개체가 현재 <see cref="T:System.Security.CodeAccessPermission" />과 같은지 여부를 확인합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Security.CodeAccessPermission" />과 비교할 <see cref="T:System.Security.CodeAccessPermission" /> 개체입니다.</param>
      <returns>지정한 <see cref="T:System.Security.CodeAccessPermission" /> 개체가 현재 <see cref="T:System.Security.CodeAccessPermission" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
      <summary>파생된 클래스에서 재정의하는 경우 XML 인코딩으로 지정된 상태를 가진 보안 개체를 다시 생성합니다.</summary>
      <param name="elem">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 매개 변수에 현재 인스턴스와 동일한 형식의 인스턴스에 대한 XML 인코딩이 포함되어 있지 않은 경우  
  
또는 
<paramref name="elem" /> 매개 변수의 버전 번호가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.CodeAccessPermission" /> 개체에 대한 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.CodeAccessPermission" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한과 지정된 권한의 교집합에 해당하는 사용 권한을 만들고 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한이 지정된 권한의 하위 집합인지 여부를 결정합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.PermitOnly">
      <summary>호출 스택의 상위 호출자가 이 메서드를 호출하는 코드를 통해 현재 인스턴스에서 지정한 리소스를 제외한 모든 리소스에 액세스할 수 없게 합니다.</summary>
      <exception cref="T:System.Security.SecurityException">현재 프레임에 대해 활성 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />가 이미 있습니다.</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAll">
      <summary>현재 프레임의 모든 이전 재정의가 제거되어 더 이상 적용되지 않습니다.</summary>
      <exception cref="T:System.InvalidOperationException">현재 프레임에 대한 이전 <see cref="M:System.Security.CodeAccessPermission.Assert" />, <see cref="M:System.Security.CodeAccessPermission.Deny" /> 또는 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />가 없는 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertAssert">
      <summary>현재 프레임에 대한 이전의 모든 <see cref="M:System.Security.CodeAccessPermission.Assert" />를 제거하여 더 이상 적용되지 않도록 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">현재 프레임에 대한 이전 <see cref="M:System.Security.CodeAccessPermission.Assert" />가 없는 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertDeny">
      <summary>현재 프레임에 대한 이전의 모든 <see cref="M:System.Security.CodeAccessPermission.Deny" />를 제거하여 더 이상 적용되지 않도록 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">현재 프레임에 대한 이전 <see cref="M:System.Security.CodeAccessPermission.Deny" />가 없는 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.RevertPermitOnly">
      <summary>현재 프레임에 대한 이전의 모든 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />를 제거하여 더 이상 적용되지 않도록 합니다.</summary>
      <exception cref="T:System.InvalidOperationException">현재 프레임에 대한 이전 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" />가 없는 경우</exception>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToString">
      <summary>현재 권한 개체의 문자열 표현을 만들고 반환합니다.</summary>
      <returns>현재 권한 개체의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.ToXml">
      <summary>파생된 클래스에서 재정의되면 보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
      <summary>파생된 클래스에서 재정의되는 경우 현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="other" /> 매개 변수는 <see langword="null" />이 아닌 경우. 이 메서드는 <see langword="null" />을 전달한 경우 이 수준에서만 지원됩니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.HostProtectionException">
      <summary>거부된 호스트 리소스가 검색될 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Security.HostProtectionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>제공된 serialization 정보와 스트리밍 컨텍스트를 사용하여 <see cref="T:System.Security.HostProtectionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">소스 또는 대상에 대한 컨텍스트 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Security.HostProtectionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Security.HostProtectionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="e">현재 예외의 원인인 예외입니다. <c>innerException</c> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.#ctor(System.String,System.Security.Permissions.HostProtectionResource,System.Security.Permissions.HostProtectionResource)">
      <summary>지정된 오류 메시지, 보호되는 호스트 리소스, 예외를 throw한 호스트 리소스 등을 사용하여 <see cref="T:System.Security.HostProtectionException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="protectedResources">부분 신뢰 코드에 액세스할 수 없는 호스트 리소스를 지정하는 열거형 값의 비트 조합입니다.</param>
      <param name="demandedResources">요청된 호스트 리소스를 지정하는 열거형 값의 비트 조합입니다.</param>
    </member>
    <member name="M:System.Security.HostProtectionException.ToString">
      <summary>현재 호스트 보호 예외의 문자열 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.HostProtectionException" />의 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.DemandedResources">
      <summary>예외를 throw한 요청된 호스트 보호 리소스를 가져오거나 설정합니다.</summary>
      <returns>예외를 throw한 보호 리소스를 식별하는 <see cref="T:System.Security.Permissions.HostProtectionResource" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />입니다.</returns>
    </member>
    <member name="P:System.Security.HostProtectionException.ProtectedResources">
      <summary>부분 신뢰 코드에 액세스할 수 없는 호스트 보호 리소스를 가져오거나 설정합니다.</summary>
      <returns>액세스할 수 없는 호스트 보호 범주를 식별하는 <see cref="T:System.Security.Permissions.HostProtectionResource" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />입니다.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManager">
      <summary>애플리케이션 도메인에 대한 보안 동작을 제어하고 사용자 지정할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.#ctor">
      <summary>
        <see cref="T:System.Security.HostSecurityManager" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)">
      <summary>애플리케이션을 실행해야 하는지 여부를 결정합니다.</summary>
      <param name="applicationEvidence">활성화할 애플리케이션의 증명 정보입니다.</param>
      <param name="activatorEvidence">선택적 매개 변수로서 활성 애플리케이션 도메인의 증명 정보입니다.</param>
      <param name="context">신뢰 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="applicationEvidence" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">애플리케이션 증명 정보에서 찾을 수 없는 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 개체인 경우  
  
또는 
활성화 인수의 <see cref="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" /> 속성이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 권한 부여 집합에는 <see cref="T:System.ActivationContext" />에서 지정한 최소 요청 집합이 들어 있지 않습니다.</exception>
      <returns>애플리케이션에 대한 신뢰 정보가 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)">
      <summary>애플리케이션 도메인에 대한 특정 증명 정보 형식을 요청합니다.</summary>
      <param name="evidenceType">증명 정보 형식입니다.</param>
      <returns>요청된 애플리케이션 도메인 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)">
      <summary>어셈블리에 대한 특정 증명 정보 형식을 요청합니다.</summary>
      <param name="evidenceType">증명 정보 형식입니다.</param>
      <param name="assembly">대상 어셈블리입니다.</param>
      <returns>요청된 어셈블리 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes">
      <summary>요청 시 호스트가 애플리케이션 도메인에 제공할 수 있는 증명 정보 형식을 결정합니다.</summary>
      <returns>증명 정보 형식으로 이루어진 배열입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)">
      <summary>요청 시 호스트가 어셈블리에 제공할 수 있는 증명 정보 형식을 결정합니다.</summary>
      <param name="assembly">대상 어셈블리입니다.</param>
      <returns>증명 정보 형식으로 이루어진 배열입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)">
      <summary>로드되는 어셈블리에 대한 애플리케이션 도메인 증명 정보를 제공합니다.</summary>
      <param name="inputEvidence">
        <see cref="T:System.AppDomain" /> 증명 정보에 추가할 추가 증명 정보입니다.</param>
      <returns>
        <see cref="T:System.AppDomain" />에 사용할 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)">
      <summary>로드되는 어셈블리에 대한 어셈블리 증명 정보를 제공합니다.</summary>
      <param name="loadedAssembly">로드된 어셈블리입니다.</param>
      <param name="inputEvidence">어셈블리 증명 정보에 추가할 추가 증명 정보입니다.</param>
      <returns>어셈블리에 사용할 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</summary>
      <param name="evidence">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" />이(가) <see langword="null" />인 경우</exception>
      <returns>보안 시스템에서 부여할 수 있는 권한 집합입니다.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.DomainPolicy">
      <summary>파생 클래스에서 재정의된 경우 현재 애플리케이션 도메인에 대한 보안 정책을 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>현재 애플리케이션 도메인에 대한 보안 정책입니다. 기본값은 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.HostSecurityManager.Flags">
      <summary>호스트와 관련된 보안 정책 구성 요소를 나타내는 플래그를 가져옵니다.</summary>
      <returns>보안 정책 구성 요소를 지정하는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Security.HostSecurityManagerOptions.AllFlags" />입니다.</returns>
    </member>
    <member name="T:System.Security.HostSecurityManagerOptions">
      <summary>호스트 보안 관리자에 사용할 보안 정책 구성 요소를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.AllFlags">
      <summary>모든 보안 정책 구성 요소를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAppDomainEvidence">
      <summary>애플리케이션 도메인 증명 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostAssemblyEvidence">
      <summary>어셈블리 증명 정보를 사용합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostDetermineApplicationTrust">
      <summary>
        <see cref="M:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)" /> 메서드에 대한 호출을 <see cref="M:System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)" /> 메서드에 먼저 라우팅합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostPolicyLevel">
      <summary>
        <see cref="P:System.Security.HostSecurityManager.DomainPolicy" /> 속성에서 지정한 정책 수준을 사용합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.HostResolvePolicy">
      <summary>
        <see cref="M:System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)" /> 메서드를 사용하여 애플리케이션 증명을 확인합니다.</summary>
    </member>
    <member name="F:System.Security.HostSecurityManagerOptions.None">
      <summary>보안 정책 구성 요소를 사용하지 않습니다.</summary>
    </member>
    <member name="T:System.Security.IEvidenceFactory">
      <summary>개체의 <see cref="T:System.Security.Policy.Evidence" />를 가져옵니다.</summary>
    </member>
    <member name="P:System.Security.IEvidenceFactory.Evidence">
      <summary>현재 개체의 ID를 확인하는 <see cref="T:System.Security.Policy.Evidence" />를 가져옵니다.</summary>
      <returns>현재 개체 ID의 <see cref="T:System.Security.Policy.Evidence" />입니다.</returns>
    </member>
    <member name="T:System.Security.ISecurityPolicyEncodable">
      <summary>권한 개체와 XLM 요소 간의 표현을 변환하는 메서드를 지원합니다.</summary>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 설정 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
    </member>
    <member name="M:System.Security.ISecurityPolicyEncodable.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <param name="level">명명된 권한 설정 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <returns>정책 개체에 대한 XML 표시의 루트 요소입니다.</returns>
    </member>
    <member name="T:System.Security.NamedPermissionSet">
      <summary>관련된 이름 및 설명이 포함된 권한 집합을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)">
      <summary>명명된 다른 권한 집합에서 가져온 <see cref="T:System.Security.NamedPermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permSet">새 인스턴스를 만들 명명된 권한 집합입니다.</param>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String)">
      <summary>지정된 이름을 사용하여 <see cref="T:System.Security.NamedPermissionSet" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</summary>
      <param name="name">새 명명된 권한 집합의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)">
      <summary>무제한 또는 완전 제한 상태에서 지정된 이름을 사용하여 <see cref="T:System.Security.NamedPermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">새 명명된 권한 집합의 이름입니다.</param>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)">
      <summary>권한 집합에서 지정된 이름을 사용하여 <see cref="T:System.Security.NamedPermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">명명된 권한 집합의 이름입니다.</param>
      <param name="permSet">명명된 새 권한 집합의 값을 가져올 권한 집합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy">
      <summary>명명된 권한 집합에서 권한 집합 복사본을 만듭니다.</summary>
      <returns>명명된 권한 집합의 권한 복사본인 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Copy(System.String)">
      <summary>이름은 다르지만 같은 권한을 가지는 명명된 권한 집합의 복사본을 만듭니다.</summary>
      <param name="name">새 명명된 권한 집합의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      <returns>새 이름이 포함된 명명된 권한 집합의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.NamedPermissionSet" /> 개체가 현재 <see cref="T:System.Security.NamedPermissionSet" />과 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.NamedPermissionSet" />과 비교할 <see cref="T:System.Security.NamedPermissionSet" /> 개체입니다.</param>
      <returns>지정된<see langword="true" /> 가 현재 <see cref="T:System.Security.NamedPermissionSet" /> 과 같으면 <see cref="T:System.Security.NamedPermissionSet" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩에서 지정된 상태를 사용하여 명명된 권한 집합을 다시 생성합니다.</summary>
      <param name="et">명명된 권한 집합의 XML 표현이 포함된 보안 요소입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 매개 변수가 명명된 권한 집합의 유효한 표현이 아닌 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.NamedPermissionSet.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.NamedPermissionSet" /> 개체에 대한 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.NamedPermissionSet" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.NamedPermissionSet.ToXml">
      <summary>명명된 권한 집합의 XML 요소 설명을 만듭니다.</summary>
      <returns>명명된 권한 집합의 XML 표현입니다.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Description">
      <summary>현재 명명된 권한 집합의 텍스트 설명을 가져오거나 설정합니다.</summary>
      <returns>명명된 권한 집합에 대한 텍스트 설명입니다.</returns>
    </member>
    <member name="P:System.Security.NamedPermissionSet.Name">
      <summary>현재 명명된 권한 집합의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">이름이 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
      <returns>명명된 권한 집합의 이름입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermission">
      <summary>암호화된 데이터와 메모리에 액세스하는 기능을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.DataProtectionPermissionFlags)">
      <summary>지정된 사용 권한 플래그를 사용하여 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 가 유효한 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 값의 조합이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 사용 권한 상태를 사용하여 <see cref="T:System.Security.Permissions.DataProtectionPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />는 유효한 <see cref="T:System.Security.Permissions.PermissionState" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩에서 특정 상태를 가진 사용 권한을 다시 생성합니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용된 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 가 올바른 사용 권한 요소가 아닙니다.  
  
또는 
<paramref name="securityElement" />의 버전 번호가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermission.Flags">
      <summary>데이터 및 메모리 보호 플래그를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">지정된 값이 <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 값의 유효한 조합이 아닙니다.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.DataProtectionPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.DataProtectionPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.DataProtectionPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.DataProtectionPermission" />을 만들어 반환합니다.</summary>
      <returns>특성에 해당하는 <see cref="T:System.Security.Permissions.DataProtectionPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.Flags">
      <summary>데이터 보호 권한을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.DataProtectionPermissionFlags" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedData" /> 클래스를 사용하여 데이터를 암호화할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>데이터를 암호화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectMemory">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 클래스를 사용하여 메모리를 암호화할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메모리를 암호화할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedData" /> 클래스를 사용하여 데이터의 암호를 해독할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>데이터의 암호를 해독할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectMemory">
      <summary>
        <see cref="T:System.Security.Cryptography.ProtectedMemory" /> 클래스를 사용하여 메모리의 암호를 해독할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>메모리의 암호를 해독할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.DataProtectionPermissionFlags">
      <summary>데이터와 메모리를 암호화하기 위한 액세스 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.AllFlags">
      <summary>데이터 암호화, 메모리 암호화, 데이터 암호 해독 및 메모리 암호 해독 기능입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.NoFlags">
      <summary>보호 기능이 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectData">
      <summary>데이터를 암호화하는 기능입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.ProtectMemory">
      <summary>메모리를 암호화하는 기능입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectData">
      <summary>데이터의 암호를 해독하는 기능입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.DataProtectionPermissionFlags.UnprotectMemory">
      <summary>메모리의 암호를 해독하는 기능입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermission">
      <summary>시스템 및 사용자 환경 변수에 대한 액세스를 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>지정된 환경 변수에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">액세스 권한이 부여된 환경 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 매개 변수가 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.EnvironmentPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>지정된 환경 변수 이름에 대한 액세스 권한을 사용 권한의 기존 상태에 추가합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">환경 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 매개 변수가 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)">
      <summary>지정된 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />를 갖는 모든 환경 변수를 가져옵니다.</summary>
      <param name="flag">단일 유형의 환경 변수 액세스를 나타내는 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" />는 유효한 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값이 아닙니다.  
  
또는 
 <paramref name="flag" /> 가 둘 이상의 환경 변수 액세스 유형을 나타내는 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />이거나 모든 환경 변수 액세스 유형을 나타내지는 않는 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />입니다.</exception>
      <returns>선택한 플래그에 대한 환경 변수 목록(세미콜론으로 구분)입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)">
      <summary>지정된 환경 변수에 대한 지정된 액세스 권한을 사용 권한의 기존 상태로 설정합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">환경 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 매개 변수가 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAccess">
      <summary>환경 변수에 대한 액세스 권한을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess">
      <summary>
        <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /> 및 <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Write" />는 환경 변수에 액세스합니다. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess" />는 다중 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값을 나타내며, 단일 값이 필요한 <see cref="T:System.ArgumentException" /> 메서드에 대한 <paramref name="flag" /> 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess">
      <summary>환경 변수에 액세스하지 않습니다. <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess" />는 유효한 <see cref="T:System.Security.Permissions.EnvironmentPermissionAccess" /> 값을 나타내지 않으며, 단일 값이 필요한 <see cref="T:System.ArgumentException" />에 대한 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Read">
      <summary>환경 변수에 대한 읽기 권한만 지정됩니다. 이 액세스 수준에 환경 변수 변경, 삭제 및 만들기 권한은 포함되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.EnvironmentPermissionAccess.Write">
      <summary>환경 변수에 대한 쓰기 권한만 허용됩니다. 쓰기 권한은 기존 값을 변경할 뿐 아니라 환경 변수를 만들고 삭제합니다. 읽기 환경 변수는 이 액세스 수준에 포함되지 않습니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.EnvironmentPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.EnvironmentPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.EnvironmentPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 매개 변수가 <see cref="T:System.Security.Permissions.SecurityAction" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.EnvironmentPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.EnvironmentPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.EnvironmentPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.All">
      <summary>문자열 값으로 지정된 환경 변수에 대해 모든 권한을 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">이 속성에는 get 메서드가 지원되지 않습니다.</exception>
      <returns>모든 권한이 있는 환경 변수 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Read">
      <summary>문자열 값으로 지정된 환경 변수에 대해 읽기 권한을 가져오거나 설정합니다.</summary>
      <returns>읽기 권한이 있는 환경 변수 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.EnvironmentPermissionAttribute.Write">
      <summary>이 문자열 값으로 지정된 환경 변수에 대해 쓰기 권한을 가져오거나 설정합니다.</summary>
      <returns>쓰기 권한이 있는 환경 변수 목록입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermission">
      <summary>파일 대화 상자를 통해 파일이나 폴더에 액세스할 수 있는 기능을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)">
      <summary>지정한 액세스를 사용하여 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 값의 유효한 조합이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.FileDialogPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값(<see langword="Unrestricted" /> 또는 <see langword="None" />) 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">권한을 다시 생성하는 데 사용되는 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermission.Access">
      <summary>파일에 대한 허용된 액세스를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수를 <see cref="T:System.Security.Permissions.FileDialogPermissionAccess" /> 값의 유효한 조합이 아닌 값으로 설정하려고 합니다.</exception>
      <returns>파일에 대한 허용된 액세스입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAccess">
      <summary>파일 대화 상자에서 허용되는 파일에 대한 액세스 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.None">
      <summary>파일 대화 상자에서 파일에 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Open">
      <summary>파일 대화 상자에서 파일을 열 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.OpenSave">
      <summary>파일 대화 상자에서 파일을 열고 저장할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileDialogPermissionAccess.Save">
      <summary>파일 대화 상자에서 파일을 저장할 수 있습니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileDialogPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.FileDialogPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.FileDialogPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.FileDialogPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.FileDialogPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Open">
      <summary>파일 대화 상자에 파일 열기 권한이 선언되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>파일 대화 상자에 파일 열기 권한이 선언되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileDialogPermissionAttribute.Save">
      <summary>파일 대화 상자에 파일 저장 권한이 선언되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>파일 대화 상자에 파일 저장 권한이 선언되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermission">
      <summary>파일 및 폴더에 액세스하는 기능을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>지정된 파일 또는 디렉터리에 대한 지정된 액세스 권한과 파일 제어 정보에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.FileIOPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 열거형 값의 비트 조합입니다.</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 열거형 값의 비트 조합입니다.</param>
      <param name="path">파일 또는 디렉터리의 절대 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 올바른 문자열이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 파일 또는 디렉터리에 대한 절대 경로를 지정하지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String[])">
      <summary>지정된 파일 및 디렉터리에 대한 지정된 액세스 권한과 파일 제어 정보에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.FileIOPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 열거형 값의 비트 조합입니다.</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 열거형 값의 비트 조합입니다.</param>
      <param name="pathList">파일 및 디렉터리의 절대 경로를 포함하는 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 배열의 엔트리가 유효한 문자열이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>지정한 파일 또는 디렉터리를 사용하여 <see cref="T:System.Security.Permissions.FileIOPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 열거형 값의 비트 조합입니다.</param>
      <param name="path">파일 또는 디렉터리의 절대 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 올바른 문자열이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 파일 또는 디렉터리에 대한 절대 경로를 지정하지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>지정한 파일 및 디렉터리를 사용하여 <see cref="T:System.Security.Permissions.FileIOPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 열거형 값의 비트 조합입니다.</param>
      <param name="pathList">파일 및 디렉터리의 절대 경로를 포함하는 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 배열의 엔트리가 유효한 문자열이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.FileIOPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>지정된 파일 또는 디렉터리에 대한 액세스 권한을 사용 권한의 기존 상태에 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다.</param>
      <param name="path">파일 또는 디렉터리의 절대 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 올바른 문자열이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 파일이나 디렉터리의 절대 경로를 지정하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> 매개 변수의 형식이 잘못되었습니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.AddPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>지정된 파일 및 디렉터리에 대한 액세스 권한을 사용 권한의 기존 상태에 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다.</param>
      <param name="pathList">파일 및 디렉터리의 절대 경로를 포함하는 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 배열의 항목은 유효하지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pathList" /> 배열의 항목 형식이 올바르지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pathList" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.Permissions.FileIOPermission" /> 개체가 현재 <see cref="T:System.Security.Permissions.FileIOPermission" />과 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Permissions.FileIOPermission" />과 비교할 <see cref="T:System.Security.Permissions.FileIOPermission" /> 개체입니다.</param>
      <returns>지정된<see langword="true" /> 가 현재 <see cref="T:System.Security.Permissions.FileIOPermission" /> 과 같으면 <see cref="T:System.Security.Permissions.FileIOPermission" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">권한을 다시 생성하는 데 사용되는 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 호환되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.Permissions.FileIOPermission" /> 개체에 대한 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Permissions.FileIOPermission" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)">
      <summary>지정된 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 모든 파일 및 디렉터리를 가져옵니다.</summary>
      <param name="access">단일 유형의 파일 액세스를 나타내는 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" />는 유효한 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값이 아닙니다.  
  
또는 
 <paramref name="access" /> 가 둘 이상의 파일 액세스 유형을 나타내는 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />이거나 모든 파일 액세스 유형을 나타내지는 않는 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />입니다.</exception>
      <returns>
        <paramref name="access" /> 매개 변수에서 지정한 액세스 권한이 부여되는 파일과 디렉터리의 경로를 포함하는 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String)">
      <summary>지정된 파일이나 디렉터리에 대한 지정된 액세스를 설정하여 사용 권한의 기존 상태를 바꿉니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다.</param>
      <param name="path">파일 또는 디렉터리의 절대 경로입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 올바른 문자열이 아닙니다.  
  
또는 
<paramref name="path" /> 매개 변수가 파일이나 디렉터리의 절대 경로를 지정하지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.SetPathList(System.Security.Permissions.FileIOPermissionAccess,System.String[])">
      <summary>지정된 파일 및 디렉터리에 대한 지정된 액세스 권한을 설정하여 지정된 액세스에 대한 현재 상태를 새 경로 집합으로 바꿉니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다.</param>
      <param name="pathList">파일 및 디렉터리의 절대 경로를 포함하는 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수의 엔트리가 유효한 문자열이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllFiles">
      <summary>모든 파일에 대한 허용된 액세스를 가져오거나 설정합니다.</summary>
      <returns>모든 파일에 대한 파일 I/O 플래그 집합입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermission.AllLocalFiles">
      <summary>모든 로컬 파일에 대한 허용된 액세스를 가져오거나 설정합니다.</summary>
      <returns>모든 로컬 파일에 대한 파일 I/O 플래그 집합입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAccess">
      <summary>요청된 파일 액세스 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess">
      <summary>
        <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 및 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />는 파일 또는 디렉터리에 액세스합니다. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" />는 다중 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값을 나타내며, 단일 값이 필요한 <see cref="T:System.ArgumentException" /> 메서드에 대한 <paramref name="access" /> 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Append">
      <summary>파일이나 디렉터리에 추가할 수 있는 액세스입니다. <see langword="FileIOPermissionAccess.Append" /> 액세스에는 새 파일 또는 디렉터리를 만들 수 있는 기능이 포함됩니다. 파일을 만들려면 코드에 <see langword="Append" /> 및 <see langword="Write" /> 또는 <see langword="Read" /> 권한이 모두 허용되어야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess">
      <summary>파일 또는 디렉터리에 액세스하지 않습니다. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />는 유효한 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값을 나타내지 않으며, 단일 값이 필요한 <see cref="T:System.ArgumentException" />에 대한 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery">
      <summary>
        <para>경로 자체의 정보에 대한 액세스입니다. 이 값은 사용자 이름처럼 경로에 포함된 중요한 정보 및 경로에 표시된 디렉터리 구조에 대한 정보를 보호합니다. 그러나 이 값이 경로로 표시된 파일이나 폴더에 대한 액세스 권한을 부여하지는 않습니다.</para>
        <para>성능상의 이유로 <see langword="PathDiscovery" />를 파일이 아닌 디렉터리에만 부여해야 합니다. 예를 들어 <see langword="PathDiscovery" /> 권한은 C:\test\example.txt가 아닌 C:\test 및 C:\test\와 같은 경로에 부여해야 합니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Read">
      <summary>파일이나 디렉터리에서 읽을 수 있는 액세스입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.FileIOPermissionAccess.Write">
      <summary>파일 또는 디렉터리를 쓰거나 삭제하려는 액세스입니다. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 액세스에는 파일 또는 디렉터리를 삭제하고 덮어쓰는 기능이 포함됩니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.FileIOPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.FileIOPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.FileIOPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.SecurityAction" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.FileIOPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.FileIOPermission" />을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">액세스를 보호해야 할 파일 또는 디렉터리의 경로 정보에 잘못된 문자나 와일드카드 지정자가 포함된 경우</exception>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.FileIOPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.All">
      <summary>문자열 값으로 지정된 파일이나 디렉터리에 대한 모든 액세스 권한을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">이 속성에는 get 메서드가 지원되지 않습니다.</exception>
      <returns>모든 액세스 권한이 설정되는 파일이나 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllFiles">
      <summary>모든 파일에 대한 허용된 액세스를 가져오거나 설정합니다.</summary>
      <returns>모든 파일에 대한 사용 권한을 나타내는 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.AllLocalFiles">
      <summary>모든 로컬 파일에 대한 허용된 액세스를 가져오거나 설정합니다.</summary>
      <returns>모든 로컬 파일에 대한 사용 권한을 나타내는 <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Append">
      <summary>문자열 값으로 지정된 파일이나 디렉터리에 대한 추가 액세스 권한을 가져오거나 설정합니다.</summary>
      <returns>추가 액세스 권한이 설정되는 파일이나 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ChangeAccessControl">
      <summary>액세스 제어 정보를 변경할 수 있는 파일 또는 디렉터리를 가져오거나 설정합니다.</summary>
      <returns>액세스 제어 정보를 변경할 수 있는 파일 또는 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery">
      <summary>경로 검색 권한을 부여할 파일이나 디렉터리를 가져오거나 설정합니다.</summary>
      <returns>파일 또는 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Read">
      <summary>문자열 값으로 지정된 파일이나 디렉터리에 대한 읽기 권한을 가져오거나 설정합니다.</summary>
      <returns>읽기 권한이 설정되는 파일이나 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAccessControl">
      <summary>액세스 제어 정보를 볼 수 있는 파일 또는 디렉터리를 가져오거나 설정합니다.</summary>
      <returns>액세스 제어 정보를 볼 수 있는 파일 또는 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.ViewAndModify">
      <summary>파일 데이터를 보고 수정할 수 있는 파일 또는 디렉터리를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see langword="get" /> 접근자가 호출된 경우. 접근자는 C# 컴파일러 호환성을 위해서만 제공됩니다.</exception>
      <returns>파일 데이터를 보고 수정할 수 있는 파일 또는 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.FileIOPermissionAttribute.Write">
      <summary>문자열 값으로 지정된 파일이나 디렉터리에 대한 쓰기 권한을 가져오거나 설정합니다.</summary>
      <returns>쓰기 권한이 설정되는 파일이나 디렉터리의 절대 경로입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermission">
      <summary>전역 어셈블리 캐시에서 시작된 파일에 대한 ID 권한을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>완전 제한된 <see cref="T:System.Security.Permissions.GacIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />는 유효한 <see cref="T:System.Security.Permissions.PermissionState" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩에서 사용 권한을 만듭니다.</summary>
      <param name="securityElement">사용 권한을 만드는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 가 올바른 사용 권한 요소가 아닙니다.  
  
또는 
<paramref name="securityElement" />의 버전 번호가 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 이 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 나타냅니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 권한 개체입니다. 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 이 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 사용 권한의 XML 인코딩을 나타내는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 이 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.GacIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.GacIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.GacIdentityPermissionAttribute" /> 값을 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.SecurityAction" /> 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.GacIdentityPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.GacIdentityPermission" /> 개체를 만듭니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.GacIdentityPermission" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionAttribute">
      <summary>선언적 보안 동작의 사용을 허용하여 호스트 보호 요구 사항을 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.HostProtectionAttribute" /> 값을 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" />이 <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />가 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.HostProtectionAttribute.CreatePermission">
      <summary>새 호스트 보호 권한을 만들고 반환합니다.</summary>
      <returns>현재 특성에 해당하는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalProcessMgmt">
      <summary>자체적으로 영향을 미치는 프로세스 관리가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>외부 프로세스 관리가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.ExternalThreading">
      <summary>외부 스레딩이 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>외부 스레딩이 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.MayLeakOnAbort">
      <summary>작업이 종료되면 리소스에서 메모리가 누수될 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>종료 시 리소스에서 메모리가 누수될 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Resources">
      <summary>호스트에 좋지 않은 영향을 줄 수 있는 기능의 범주를 지정하는 플래그를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.HostProtectionResource" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.HostProtectionResource.None" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SecurityInfrastructure">
      <summary>보안 인프라가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>보안 인프라가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingProcessMgmt">
      <summary>자체 영향 프로세스 관리가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>자체 영향 프로세스 관리가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SelfAffectingThreading">
      <summary>자체 영향 스레딩이 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>자체 영향 스레딩이 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.SharedState">
      <summary>공유 상태가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>공유 상태가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.Synchronization">
      <summary>동기화가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>동기화가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.HostProtectionAttribute.UI">
      <summary>사용자 인터페이스가 노출되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>사용자 인터페이스가 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.HostProtectionResource">
      <summary>메서드나 클래스에 의해 호출되는 경우 호스트를 손상시킬 가능성이 있는 기능의 범주를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.All">
      <summary>모든 호스트 리소스를 노출합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalProcessMgmt">
      <summary>다른 프로세스를 만들거나 소멸시킬 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.ExternalThreading">
      <summary>해당 스레드를 제외하고 호스트를 손상시킬 수 있는 스레드를 만들거나 조작합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.MayLeakOnAbort">
      <summary>안전한 핸들이나 다른 리소스 해제 방법을 사용하여 보호되지 않은 상태에서 종료하면 리소스 누수가 발생할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.None">
      <summary>호스트 리소스를 노출하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SecurityInfrastructure">
      <summary>보안 인프라를 노출합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingProcessMgmt">
      <summary>현재 프로세스를 끝내고 서버를 종료시킬 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SelfAffectingThreading">
      <summary>사용자 코드에만 영향을 주는 방법으로 스레드를 조작합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.SharedState">
      <summary>스레드 사이에서 공유할 수 있는 상태를 노출합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.Synchronization">
      <summary>동기화를 노출합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.HostProtectionResource.UI">
      <summary>사용자 인터페이스를 노출합니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageContainment">
      <summary>격리된 스토리지에 허용되는 용도를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser">
      <summary>사용자 저장소에 대한 무한 관리 기능입니다. 전체 사용자 저장소를 찾아 삭제할 수는 있지만 사용자의 고유한 도메인/어셈블리 ID 이외는 읽을 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByMachine">
      <summary>스토리지는 먼저 컴퓨터별로 격리된 다음 애플리케이션별로 격리됩니다. 이 경우 모든 도메인 컨텍스트에서 액세스할 수 있는 애플리케이션의 데이터 저장소가 만들어집니다. 애플리케이션별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 이러한 데이터 컴파트먼트에는 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByRoamingUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음 애플리케이션 증명 정보별로 격리됩니다. Windows 사용자 데이터 로밍이 가능하도록 설정되어 있으면 스토리지가 로밍됩니다. 이 경우 모든 도메인 컨텍스트에서 액세스할 수 있는 애플리케이션의 데이터 저장소가 만들어집니다. 애플리케이션별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 이러한 데이터 컴파트먼트에는 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.ApplicationIsolationByUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음 애플리케이션별로 격리됩니다. 스토리지는 컴퓨터별로 격리되기도 합니다. 이 경우 모든 도메인 컨텍스트에서 액세스할 수 있는 애플리케이션의 데이터 저장소가 만들어집니다. 애플리케이션별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 이러한 데이터 컴파트먼트에는 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByMachine">
      <summary>스토리지는 먼저 컴퓨터별로 격리된 다음, 코드 어셈블리별로 격리됩니다. 이 멤버는 모든 도메인 컨텍스트에서 액세스할 수 있는 어셈블리에 대한 데이터 저장소를 제공합니다. 어셈블리별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 어셈블리별 데이터 컴파트먼트에 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByRoamingUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음, 어셈블리 증명 정보별로 격리됩니다. Windows 사용자 데이터 로밍이 가능하도록 설정되어 있으면 스토리지가 로밍됩니다. 이 멤버는 모든 도메인 컨텍스트에서 액세스할 수 있는 어셈블리에 대한 데이터 저장소를 제공합니다. 어셈블리별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 어셈블리별 데이터 컴파트먼트에 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음, 코드 어셈블리별로 격리됩니다. 스토리지는 컴퓨터별로 격리되기도 합니다. 이 멤버는 모든 도메인 컨텍스트에서 액세스할 수 있는 어셈블리에 대한 데이터 저장소를 제공합니다. 어셈블리별 데이터 컴파트먼트는 특정 웹 사이트에서 애플리케이션의 격리된 데이터를 노출시킬 수 있는 "터널"을 애플리케이션 간에 제공할 수 있으므로 어셈블리별 데이터 컴파트먼트에 트러스트를 추가해야 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByMachine">
      <summary>스토리지는 먼저 컴퓨터별로 격리된 다음, 도메인과 어셈블리별로 격리됩니다. 같은 컴퓨터에서 실행하는 경우에만 같은 애플리케이션의 컨텍스트에서 데이터에 액세스할 수 있습니다. 이는 타사 어셈블리에서 프라이빗 데이터 저장소를 유지하려고 할 때 유용합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByRoamingUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음, 도메인과 어셈블리별로 격리됩니다. Windows 사용자 데이터 로밍이 가능하도록 설정되어 있으면 스토리지가 로밍됩니다. 데이터는 같은 애플리케이션의 컨텍스트 안에서 같은 사용자가 실행할 때에만 액세스할 수 있습니다. 이는 타사 어셈블리에서 프라이빗 데이터 저장소를 유지하려고 할 때 유용합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser">
      <summary>스토리지는 먼저 사용자별로 격리된 다음, 도메인과 어셈블리별로 격리됩니다. 스토리지는 컴퓨터별로 격리되기도 합니다. 데이터는 같은 애플리케이션의 컨텍스트 안에서 같은 사용자가 실행할 때에만 액세스할 수 있습니다. 이는 타사 어셈블리에서 프라이빗 데이터 저장소를 유지하려고 할 때 유용합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.None">
      <summary>격리된 스토리지를 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.IsolatedStorageContainment.UnrestrictedIsolatedStorage">
      <summary>격리된 스토리지를 제한 없이 사용할 수 있습니다. 도메인 또는 어셈블리의 ID에 관계 없이 사용자 저장소의 모든 부분에 대한 모든 액세스 권한이 코드에 있습니다. 격리된 스토리지의 이러한 용도에는 격리된 스토리지 데이터 저장소의 콘텐츠를 열거하는 기능이 포함됩니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermission">
      <summary>프라이빗 가상 파일 시스템을 사용할 수 있는 용도를 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStorageFilePermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.IsolatedStorageFilePermission" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermission">
      <summary>일반 격리된 스토리지 기능에 대한 액세스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.IsolatedStoragePermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UsageAllowed">
      <summary>허용되는 격리된 스토리지 포함 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermission.UserQuota">
      <summary>각 사용자가 총 저장할 수 있는 전체 크기에 대한 할당량을 가져오거나 설정합니다.</summary>
      <returns>사용자에게 할당된 리소스의 크기(바이트)입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.IsolatedStoragePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.IsolatedStoragePermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.IsolatedStoragePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.IsolatedStoragePermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UsageAllowed">
      <summary>선언해야 할 격리된 스토리지의 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.IsolatedStorageContainment" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.IsolatedStoragePermissionAttribute.UserQuota">
      <summary>최대 사용자 스토리지 할당량을 가져오거나 설정합니다.</summary>
      <returns>최대 사용자 스토리지 할당량 크기(바이트)입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.IUnrestrictedPermission">
      <summary>제한되지 않은 상태를 노출하기 위한  사용 권한을 허용합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
      <summary>사용 권한으로 보호되는 리소스에 대한 무제한 액세스가 허용되는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>사용 권한으로 보호되는 리소스에 대한 무제한 액세스를 허용하면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermission">
      <summary>키 컨테이너에 액세스하는 기능을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>지정한 액세스를 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> 가 유효한 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 조합이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])">
      <summary>지정된 전역 액세스 및 특정 키 컨테이너 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</param>
      <param name="accessList">특정 키 컨테이너 액세스 권한을 식별하는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체의 배열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flags" /> 가 유효한 <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 조합이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessList" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />는 유효한 <see cref="T:System.Security.Permissions.PermissionState" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용된 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 가 올바른 사용 권한 요소가 아닙니다.  
  
또는 
<paramref name="securityElement" />의 버전 번호가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.IsUnrestricted">
      <summary>현재 사용 권한이 무제한인지 여부를 확인합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함하는 권한의 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 는 <see langword="null" /> 가 아니며 현재 사용 권한과 동일한 유형의 사용 권한을 지정하지 않습니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.AccessEntries">
      <summary>현재 권한에 연결된 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체의 컬렉션을 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Security.Permissions.KeyContainerPermission" />에 대한 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체가 포함된 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermission.Flags">
      <summary>사용 권한과 관련된 모든 키 컨테이너에 적용되는 키 컨테이너 권한 플래그를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
      <summary>특정 키 컨테이너에 대한 액세스 권한을 지정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>지정된 CSP(암호화 서비스 공급자) 매개 변수와 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters">CSP(암호화 서비스 공급자) 매개 변수가 들어 있는 <see cref="T:System.Security.Cryptography.CspParameters" /> 개체입니다.</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>지정된 키 컨테이너 이름과 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyContainerName">키 컨테이너의 이름입니다.</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)">
      <summary>지정된 속성 값을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyStore">키 저장소의 이름입니다.</param>
      <param name="providerName">공급자의 이름입니다.</param>
      <param name="providerType">공급자의 형식 코드입니다. 값은 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType" /> 속성을 참조하십시오.</param>
      <param name="keyContainerName">키 컨테이너의 이름입니다.</param>
      <param name="keySpec">키 사양입니다. 값은 <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec" /> 속성을 참조하십시오.</param>
      <param name="flags">
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체가 현재 인스턴스와 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 인스턴스와 비교할 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</param>
      <returns>지정된<see langword="true" /> 가 현재 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 과 같으면 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode">
      <summary>해시 테이블 같은 데이터 구조 및 해시 알고리즘에 적합한 현재 인스턴스의 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags">
      <summary>키 컨테이너 권한을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName">
      <summary>키 컨테이너 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
      <returns>키 컨테이너의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec">
      <summary>키 사양을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
      <returns>Wincrypt.h 헤더 파일에 정의된 AT_ 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore">
      <summary>키 저장소의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
      <returns>키 저장소의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName">
      <summary>공급자 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
      <returns>공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType">
      <summary>공급자 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">생성되는 항목이 무제한 액세스 권한을 가질 경우</exception>
      <returns>Wincrypt.h 헤더 파일에 정의된 PROV_ 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Add(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>컬렉션에 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체를 추가합니다.</summary>
      <param name="accessEntry">추가할 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" />이(가) <see langword="null" />인 경우</exception>
      <returns>새 요소가 삽입된 인덱스입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Clear">
      <summary>컬렉션에서 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Array,System.Int32)">
      <summary>특정 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />에서 복사한 요소의 대상인 1차원 배열입니다. 배열에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.CopyTo(System.Security.Permissions.KeyContainerPermissionAccessEntry[],System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 컬렉션의 요소를 호환 가능한 1차원 배열에 복사합니다.</summary>
      <param name="array">현재 컬렉션에서 복사한 요소의 대상인 1차원 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 배열입니다.</param>
      <param name="index">복사를 시작할 <paramref name="array" />의 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한값보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
컬렉션의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.GetEnumerator">
      <summary>컬렉션에서 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 개체를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IndexOf(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>지정된 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체가 컬렉션에 있는 경우 해당 개체의 인덱스를 가져옵니다.</summary>
      <param name="accessEntry">찾을 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</param>
      <returns>컬렉션에 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체의 인덱스이거나 일치하는 항목이 없는 경우 –1입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Remove(System.Security.Permissions.KeyContainerPermissionAccessEntry)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체를 제거합니다.</summary>
      <param name="accessEntry">제거할 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="accessEntry" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션에서 개체를 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 개체를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Count">
      <summary>컬렉션의 항목 수를 가져옵니다.</summary>
      <returns>컬렉션의 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체 수입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.IsSynchronized">
      <summary>컬렉션이 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.Item(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 있는 항목을 가져옵니다.</summary>
      <param name="index">액세스할 요소의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션 개수보다 크거나 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" />가 음수입니다.</exception>
      <returns>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 의 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />개체에 대한 열거자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext">
      <summary>컬렉션의 다음 요소로 이동합니다.</summary>
      <returns>열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset">
      <summary>열거자를 컬렉션의 시작 부분을 가리키도록 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current">
      <summary>컬렉션의 현재 항목을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 속성은 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 메서드를 처음 호출하기 전에 액세스합니다. 커서가 컬렉션의 첫 번째 개체 앞에 배치되는 경우  
  
또는 
<see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> 속성은 <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> 메서드를 호출하여 커서가 컬렉션의 마지막 개체 뒤에 배치됨을 나타내는 <see langword="false" />를 반환한 후 액세스합니다.</exception>
      <returns>컬렉션에 있는 현재 <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current">
      <summary>컬렉션의 현재 개체를 가져옵니다.</summary>
      <returns>컬렉션의 현재 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.KeyContainerPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 보안 동작을 사용하여 <see cref="T:System.Security.Permissions.KeyContainerPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.KeyContainerPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.KeyContainerPermission" />을 만들어 반환합니다.</summary>
      <returns>특성에 해당하는 <see cref="T:System.Security.Permissions.KeyContainerPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.Flags">
      <summary>키 컨테이너 권한을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.KeyContainerPermissionFlags" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyContainerName">
      <summary>키 컨테이너의 이름을 가져오거나 설정합니다.</summary>
      <returns>키 컨테이너의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeySpec">
      <summary>키 사양을 가져오거나 설정합니다.</summary>
      <returns>Wincrypt.h 헤더 파일에 정의된 AT_ 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.KeyStore">
      <summary>키 저장소의 이름을 가져오거나 설정합니다.</summary>
      <returns>키 저장소의 이름입니다. 기본값은 "*"입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderName">
      <summary>공급자 이름을 가져오거나 설정합니다.</summary>
      <returns>공급자의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.KeyContainerPermissionAttribute.ProviderType">
      <summary>공급자 형식을 가져오거나 설정합니다.</summary>
      <returns>Wincrypt.h 헤더 파일에 정의된 PROV_ 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.KeyContainerPermissionFlags">
      <summary>허용되는 키 컨테이너 액세스 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags">
      <summary>키 컨테이너를 만들고 삭제하거나 열고, 키 컨테이너의 암호를 해독하고, 키를 내보내거나 가져오고, 키를 사용하여 파일에 서명하고, 키 컨테이너의 액세스 제어 목록을 보거나 변경합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl">
      <summary>키 컨테이너의 ACL(액세스 제어 목록)을 변경합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Create">
      <summary>
        <para>키 컨테이너를 만듭니다.</para>
        <para>키 컨테이너를 만들면 디스크에 파일이 생성됩니다. 생성된 키 컨테이너는 더 이상 사용되지 않는 경우 제거해야 합니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt">
      <summary>
        <para>키 컨테이너의 암호를 해독합니다.</para>
        <para>암호 해독은 프라이빗 키를 사용하므로 권한이 필요한 작업입니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete">
      <summary>
        <para>키 컨테이너를 삭제합니다.</para>
        <para>키 컨테이너를 삭제하면 키로 암호화 또는 서명된 파일을 사용할 수 없게 되므로 서비스 거부 공격이 발생할 수 있습니다. 따라서 삭제에는 권한이 필요합니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Export">
      <summary>
        <para>키 컨테이너에서 키를 내보냅니다.</para>
        <para>키 내보내기 기능은 키의 독점성을 제거하므로 위험할 수 있습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Import">
      <summary>
        <para>키를 키 컨테이너로 가져옵니다.</para>키 가져오기 기능은 키를 명명된 키 컨테이너로 가져오면 기존 키를 대체하게 되므로 컨테이너 삭제 기능만큼 위험할 수 있습니다.<para></para></summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.NoFlags">
      <summary>키 컨테이너에 액세스할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Open">
      <summary>
        <para>키 컨테이너를 열고 공개 키를 사용합니다.</para>
        <para>
          <see langword="Open" />은 프라이빗 키를 사용하여 파일에 서명하거나 암호를 해독할 수 있는 권한을 제공하지 않지만, 사용자는 이 기능을 사용하여 파일 시그니처를 확인하고 파일을 암호화할 수 있습니다. 키의 소유자만 프라이빗 키를 사용하여 해당 파일의 암호를 해독할 수 있습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign">
      <summary>
        <para>키를 사용하여 파일에 서명합니다.</para>
        <para>파일 서명 기능을 이용하면 다른 사용자의 키를 사용하여 파일에 서명할 수 있으므로 위험할 수 있습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl">
      <summary>키 컨테이너의 ACL(액세스 제어 목록)을 봅니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermission">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" />은 부분 신뢰 WPF(Windows Presentation Foundation) 애플리케이션에서 오디오, 이미지 및 비디오 미디어가 작동되는 능력을 제어하는 보안 사용 권한 집합을 설명합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio)">
      <summary>오디오 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionAudio,System.Security.Permissions.MediaPermissionVideo,System.Security.Permissions.MediaPermissionImage)">
      <summary>오디오, 비디오 및 이미지 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAudio">
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 열거형 값입니다.</param>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 열거형 값입니다.</param>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionImage)">
      <summary>이미지 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionImage">
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.MediaPermissionVideo)">
      <summary>비디오 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionVideo">
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>사용 권한 상태를 지정하여 <see cref="T:System.Security.Permissions.MediaPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>두 사용 권한의 공통 사용 권한은 두 사용 권한이 모두 공통으로 설명하는 상태를 설명하는 사용 권한입니다. 원래의 두 사용 권한을 모두 전달하는 요구만 공통 사용 권한에 대해 유효합니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>오디오, 이미지 및 비디오 사용 권한에 제한이 없으면<see langword="true" /> 이고, 제한이 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.MediaPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Audio">
      <summary>오디오 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>오디오 권한 수준입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Image">
      <summary>이미지 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>이미지 권한 수준입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermission.Video">
      <summary>비디오 권한 수준의 현재 값을 가져옵니다.</summary>
      <returns>미디어 권한 수준입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.MediaPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.MediaPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Audio">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />에 대한 오디오 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionAudio" />의 상태입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Image">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />에 대한 이미지 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionImage" />의 상태입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.MediaPermissionAttribute.Video">
      <summary>
        <see cref="T:System.Security.Permissions.MediaPermissionAttribute" />에 대한 오디오 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.MediaPermissionVideo" />의 상태입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionAudio">
      <summary>오디오에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.AllAudio">
      <summary>오디오 재생을 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.NoAudio">
      <summary>모든 오디오 재생을 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SafeAudio">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 오디오 재생을 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionAudio.SiteOfOriginAudio">
      <summary>애플리케이션의 원본 사이트에 있는 파일에 대한 오디오 재생만 허용하는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionImage">
      <summary>이미지에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.AllImage">
      <summary>이미지 표시를 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.NoImage">
      <summary>모든 이미지 표시를 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SafeImage">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 이미지 표시를 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionImage.SiteOfOriginImage">
      <summary>애플리케이션의 원본 사이트에 있는 이미지만 표시할 수 있는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.MediaPermissionVideo">
      <summary>비디오 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.AllVideo">
      <summary>비디오 재생을 제한하지 않는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.NoVideo">
      <summary>모든 비디오 재생을 거부하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SafeVideo">
      <summary>이미지 파일에 대한 스트림 액세스를 거부하는 권한을 비롯하여 제한적인 안전한 비디오 재생을 허용하는 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.MediaPermissionVideo.SiteOfOriginVideo">
      <summary>애플리케이션의 원본 사이트에 있는 파일에 대한 비디오 재생만 허용하는 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.PermissionSetAttribute">
      <summary>선언적 보안을 사용하여 <see cref="T:System.Security.PermissionSet" />에 대한 보안 동작을 코드에 적용할 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 보안 동작을 사용하여 <see cref="T:System.Security.Permissions.PermissionSetAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">보안 작업을 지정하는 열거형 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermission">
      <summary>이 메서드가 사용되지 않습니다.</summary>
      <returns>모든 경우의 null 참조(Visual Basic의 경우<see langword="nothing" /> )입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PermissionSetAttribute.CreatePermissionSet">
      <summary>이 권한 집합 특성 개체를 기반으로 새 권한 집합을 만들어 반환합니다.</summary>
      <returns>새 권한 집합입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.File">
      <summary>선언할 사용자 지정 권한 집합의 XML 표현이 포함된 파일을 가져오거나 설정합니다.</summary>
      <returns>권한 집합의 XML 표현이 포함된 파일에 대한 실제 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Hex">
      <summary>XML로 인코딩된 권한 집합의 16진수 표현을 가져오거나 설정합니다.</summary>
      <returns>XML로 인코딩된 권한 집합의 16진수 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.Name">
      <summary>권한 집합의 이름을 가져오거나 설정합니다.</summary>
      <returns>변경할 수 없는 <see cref="T:System.Security.NamedPermissionSet" />(기본 정책에 포함된 여러 권한 집합 중 하나이며 변경할 수 없음)의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded">
      <summary>
        <see cref="P:System.Security.Permissions.PermissionSetAttribute.File" />에서 지정한 파일이 유니코드로 인코딩되었는지 아니면 ASCII로 인코딩되었는지를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>파일이 유니코드로 인코딩되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PermissionSetAttribute.XML">
      <summary>권한 집합의 XML 표현을 가져오거나 설정합니다.</summary>
      <returns>권한 집합의 XML 표현입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermission">
      <summary>선언적 보안 및 명령적 보안 동작 둘 다에 대해 정의된 언어 구문을 사용하여 현재 보안 주체를 확인할 수 있도록 합니다( <see cref="T:System.Security.Principal.IPrincipal" />참조). 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PrincipalPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.PermissionState" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String)">
      <summary>지정된 <paramref name="name" /> 및 <paramref name="role" />에 대한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 이름입니다.</param>
      <param name="role">
        <see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 역할(예: 관리자)입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.#ctor(System.String,System.String,System.Boolean)">
      <summary>지정된 <paramref name="name" />, <paramref name="role" /> 및 인증 상태에 대한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">
        <see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 이름입니다.</param>
      <param name="role">
        <see cref="T:System.Security.Principal.IPrincipal" /> 개체 사용자의 역할(예: 관리자)입니다.</param>
      <param name="isAuthenticated">사용자가 인증되었음을 나타내려면<see langword="true" /> 이고, 나타내지 않으려면 <see langword="false" />입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Demand">
      <summary>런타임에 현재 보안 주체가 현재 사용 권한이 지정하는 보안 주체와 일치하는지 여부를 확인합니다.</summary>
      <exception cref="T:System.Security.SecurityException">현재 보안 주체가 현재 사용 권한이 지정하는 보안 주체에 대한 보안 검사를 통과하지 못한 경우  
  
또는 
현재 <see cref="T:System.Security.Principal.IPrincipal" /> 가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체가 현재 <see cref="T:System.Security.Permissions.PrincipalPermission" />과 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Permissions.PrincipalPermission" />과 비교할 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체입니다.</param>
      <returns>지정된<see langword="true" /> 가 현재 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 과 같으면 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="elem">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="elem" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체에 대한 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Permissions.PrincipalPermission" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 동일한 클래스의 인스턴스가 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 공통 사용 권한이 없으면 이 새 사용 권한이 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 현재 사용 권한과 다른 형식의 개체인 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToString">
      <summary>현재 사용 권한을 나타내는 문자열을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 매개 변수가 현재 사용 권한과 다른 형식의 개체인 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.PrincipalPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.PrincipalPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.PrincipalPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.PrincipalPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.PrincipalPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Authenticated">
      <summary>현재 보안 주체가 기본 역할 기반 보안 공급자에 의해 인증되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>현재 보안 주체가 인증되었으면 <see langword="true" />이고, 인증되지 않았으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Name">
      <summary>현재 사용자와 관련된 ID 이름을 가져오거나 설정합니다.</summary>
      <returns>내부 역할 기반 보안 공급자에서 제공하는 이름과 일치시키려는 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PrincipalPermissionAttribute.Role">
      <summary>지정된 보안 역할에서 멤버를 가져오거나 설정합니다.</summary>
      <returns>내부 역할 기반 보안 공급자의 역할 이름입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermission">
      <summary>소프트웨어 게시자의 ID를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>지정된 Authenticode X.509v3 인증서를 사용하여 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate">소프트웨어 게시자의 ID를 나타내는 X.509 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="certificate" /> 매개 변수가 유효한 인증서가 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
두 사용 권한이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermission.Certificate">
      <summary>소프트웨어 게시자의 ID를 나타내는 Authenticode X.509v3 인증서를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Permissions.PublisherIdentityPermission.Certificate" />는 올바른 인증서가 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">ID가 모호하기 때문에 속성을 설정할 수 없습니다.</exception>
      <returns>소프트웨어 게시자의 ID를 나타내는 X.509 인증서입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.PublisherIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.PublisherIdentityPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.PublisherIdentityPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.CertFile">
      <summary>Authenticode X.509v3 인증서를 포함하는 인증 파일을 가져오거나 설정합니다.</summary>
      <returns>일반적으로 확장명이 .cer인 X.509 인증서 파일의 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.SignedFile">
      <summary>Authenticode X.509v3 인증서를 추출할 서명된 파일을 가져오거나 설정합니다.</summary>
      <returns>Authenticode 서명으로 서명된 파일의 경로입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.PublisherIdentityPermissionAttribute.X509Certificate">
      <summary>호출 코드의 게시자를 식별하는 Authenticode X.509v3 인증서를 가져오거나 설정합니다.</summary>
      <returns>X.509 인증서의 16진 표현입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermission">
      <summary>
        <see cref="N:System.Reflection" /> API를 통해 public이 아닌 형식 및 멤버에 대한 액세스를 제어합니다. <see cref="N:System.Reflection.Emit" /> API의 일부 기능을 제어합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.#ctor(System.Security.Permissions.ReflectionPermissionFlag)">
      <summary>지정한 액세스를 사용하여 <see cref="T:System.Security.Permissions.ReflectionPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 매개 변수가 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermission.Flags">
      <summary>현재 사용 권한에 대해 허용된 리플렉션 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">이 속성을 잘못된 값으로 설정하려고 합니다. 유효한 값에 대해서는 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 를 참조하세요.</exception>
      <returns>현재 사용 권한의 설정 플래그입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.ReflectionPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.ReflectionPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.ReflectionPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.ReflectionPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.ReflectionPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.Flags">
      <summary>현재 사용할 수 있는 리플렉션의 용도를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">이 속성을 잘못된 값으로 설정하려고 합니다. 유효한 값에 대해서는 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 를 참조하세요.</exception>
      <returns>비트 OR을 사용하여 결합된 하나 이상의 <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> 값입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.MemberAccess">
      <summary>public이 아닌 멤버에 대한 작업을 호출할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>public이 아닌 멤버에 대한 작업을 호출할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.ReflectionEmit">
      <summary>디버그 기호 내보내기 등의 특정 <see cref="N:System.Reflection.Emit" /> 기능을 사용할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>해당 기능을 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.RestrictedMemberAccess">
      <summary>public이 아닌 멤버를 제한적으로 호출할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다. 여기에서 제한적인 호출은 호출되는 public이 아닌 멤버가 들어 있는 어셈블리의 권한 부여 집합이 호출하는 어셈블리의 권한 부여 집합과 같거나 그 하위 집합이어야 한다는 의미입니다.</summary>
      <returns>public이 아닌 멤버를 제한적으로 호출할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ReflectionPermissionAttribute.TypeInformation">
      <summary>보이지 않는 멤버에 대한 리플렉션이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>보이지 않는 멤버에 대한 리플렉션이 허용되는 경우 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ReflectionPermissionFlag">
      <summary>
        <see cref="N:System.Reflection" /> 및 <see cref="N:System.Reflection.Emit" /> 네임스페이스에 허용되는 용도를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags">
      <summary>
        <see langword="TypeInformation" />, <see langword="MemberAccess" /> 및 <see langword="ReflectionEmit" />이 설정됩니다. <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.AllFlags" />는 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess" />를 포함하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess">
      <summary>권한 부여 설정에 관계없이 모든 멤버에 대해 호출 작업이 허용됩니다. 이 플래그를 설정하지 않으면 볼 수 있는 멤버에 대해서만 호출 작업이 허용됩니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags">
      <summary>형식 및 멤버에 대한 열거가 허용됩니다. 호출 작업은 볼 수 있는 형식 및 멤버에 대해 허용됩니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit">
      <summary>디버그 기호 내보내기가 허용됩니다. .NET Framework 2.0 서비스 팩 1부터 코드를 내보낼 때 이 플래그가 더 이상 필요하지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess">
      <summary>부분적으로 신뢰할 수 있는 코드에 대해 제한된 멤버 액세스 권한이 제공됩니다. 액세스하는 public이 아닌 형식 및 멤버를 포함하는 어셈블리에 대한 권한 부여 설정의 모든 권한이 부분적으로 신뢰할 수 있는 코드에 대한 권한 부여 설정에 포함되어 있는 경우에만 부분적으로 신뢰할 수 있는 코드에서 public이 아닌 형식 및 멤버에 액세스할 수 있습니다. 이 플래그는 .NET Framework 2.0 SP1에서 새로 추가되었습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ReflectionPermissionFlag.TypeInformation">
      <summary>이 플래그는 사용되지 않습니다. 형식과 멤버를 열거하고 해당 메타데이터를 검사하는 데에는 플래그가 필요하지 않습니다. 대신 <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.NoFlags" />를 사용하세요.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermission">
      <summary>레지스트리 변수에 액세스하는 기능을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.RegistryPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>지정된 레지스트리 변수에 대해 지정된 액세스 권한 및 레지스트리 제어 정보에 대해 지정된 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.RegistryPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="control">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 값의 비트 조합입니다.</param>
      <param name="pathList">액세스 권한이 부여된 레지스트리 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수가 올바른 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>지정된 레지스트리 변수에 대한 지정된 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.RegistryPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">액세스 권한이 부여된 레지스트리 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수가 올바른 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)">
      <summary>지정된 레지스트리 변수에 대한 액세스를 사용 권한의 기존 상태에 추가하고 레지스트리 권한 액세스 및 액세스 제어 동작을 지정합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="actions">
        <see cref="T:System.Security.AccessControl.AccessControlActions" /> 값 중 하나입니다.</param>
      <param name="pathList">레지스트리 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수가 올바른 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>지정된 레지스트리 변수 이름에 대한 액세스 권한을 사용 권한의 기존 상태에 추가합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">레지스트리 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수가 올바른 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="elem">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="elem" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)">
      <summary>지정된 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />를 갖는 모든 레지스트리 변수에 대한 경로를 가져옵니다.</summary>
      <param name="access">단일 유형의 레지스트리 변수 액세스를 나타내는 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" />는 유효한 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값이 아닙니다.  
  
또는 
 <paramref name="access" /> 가 둘 이상의 레지스트리 변수 액세스 유형을 나타내는 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />이거나 모든 레지스트리 변수 액세스 유형을 나타내지는 않는 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />입니다.</exception>
      <returns>지정된 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />를 갖는 레지스트리 변수 목록(세미콜론으로 구분)입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)">
      <summary>지정된 레지스트리 변수 이름에 대한 새 액세스 권한을 사용 권한의 기존 상태로 설정합니다.</summary>
      <param name="access">
        <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="pathList">레지스트리 변수 목록(세미콜론으로 구분)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="access" /> 매개 변수가 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" />의 유효한 값이 아닙니다.  
  
또는 
<paramref name="pathList" /> 매개 변수가 올바른 문자열이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="other">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAccess">
      <summary>레지스트리 키와 값에 허용된 액세스를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess">
      <summary>
        <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /> 및 <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />는 레지스트리 변수에 액세스합니다. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.AllAccess" />는 다중 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값을 나타내며, 단일 값이 필요한 <see cref="T:System.ArgumentException" /> 메서드에 대한 <paramref name="access" /> 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Create">
      <summary>레지스트리 변수에 대한 만들기 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess">
      <summary>레지스트리 변수에 대한 권한이 없습니다. <see cref="F:System.Security.Permissions.RegistryPermissionAccess.NoAccess" />는 유효한 <see cref="T:System.Security.Permissions.RegistryPermissionAccess" /> 값을 나타내지 않으며, 단일 값이 필요한 <see cref="T:System.ArgumentException" />에 대한 매개 변수로 사용될 때 <see cref="M:System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)" />을 발생시킵니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Read">
      <summary>레지스트리 변수에 대한 읽기 권한입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.RegistryPermissionAccess.Write">
      <summary>레지스트리 변수에 대한 쓰기 권한입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.RegistryPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.RegistryPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.RegistryPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="action" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.SecurityAction" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.RegistryPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.RegistryPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.RegistryPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.All">
      <summary>지정된 레지스트리 키에 대한 모든 권한을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">get 접근자가 호출된 경우. C# 컴파일러 호환성을 위해서만 제공됩니다.</exception>
      <returns>전체 액세스 권한에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ChangeAccessControl">
      <summary>지정된 레지스트리 키에 대한 변경 액세스 제어를 가져오거나 설정합니다.</summary>
      <returns>변경 액세스 제어에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다. .</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Create">
      <summary>지정된 레지스트리 키에 대한 만들기 수준 권한을 가져오거나 설정합니다.</summary>
      <returns>만들기 수준 권한에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Read">
      <summary>지정된 레지스트리 키에 대한 읽기 권한을 가져오거나 설정합니다.</summary>
      <returns>읽기 권한에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAccessControl">
      <summary>지정된 레지스트리 키에 대한 보기 액세스 제어를 가져오거나 설정합니다.</summary>
      <returns>보기 액세스 제어에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.ViewAndModify">
      <summary>확인 및 수정할 수 있는 지정된 레지스트리 키 집합을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">get 접근자가 호출된 경우. C# 컴파일러 호환성을 위해서만 제공됩니다.</exception>
      <returns>만들기, 읽기 및 쓰기 권한에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.RegistryPermissionAttribute.Write">
      <summary>지정된 레지스트리 키에 대한 쓰기 권한을 가져오거나 설정합니다.</summary>
      <returns>쓰기 권한에 대한 레지스트리 키 경로를 세미콜론으로 구분한 목록입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBase">
      <summary>코드 액세스 보안 권한을 제어할 수 있도록 합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Any">
      <summary>와일드카드 문자를 나타내는 데 사용할 문자를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.ResourcePermissionBase.Local">
      <summary>지역 참조를 나타내는 데 사용할 문자를 지정합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.#ctor(System.Security.Permissions.PermissionState)">
      <summary>리소스를 만들 때 리소스에 지정된 액세스 권한 수준을 사용하여 <see cref="T:System.Security.Permissions.ResourcePermissionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>사용 권한에 사용 권한 항목을 추가합니다.</summary>
      <param name="entry">추가할 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">지정된 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 속성의 요소 수가 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 속성의 요소 수와 같지 않은 경우  
  
또는 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />가 이미 권한에 포함되어 있는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Clear">
      <summary>추가된 사용 권한 항목의 사용 권한을 지웁니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
      <summary>현재 권한 개체의 동일한 복사본을 만들어 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="securityElement">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="securityElement" /> 매개 변수의 버전 번호가 지원되지 않는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries">
      <summary>이 사용 권한에 추가된 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 개체의 배열을 반환합니다.</summary>
      <returns>이 사용 권한에 추가된 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 개체의 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)">
      <summary>현재 권한 개체와 대상 권한 개체의 교집합에 해당하는 권한 개체를 만들어 반환합니다.</summary>
      <param name="target">현재 권한 개체와 형식이 동일한 권한 개체입니다.</param>
      <exception cref="T:System.ArgumentException">대상 권한 개체의 형식이 현재 권한 개체의 형식과 동일하지 않은 경우</exception>
      <returns>현재 개체와 지정된 대상 개체의 교집합에 해당하는 개체를 나타내는 새 권한 개체입니다. 공통 부분이 비어 있으면 이 개체는 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 권한 개체가 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 대상 권한 개체입니다.</param>
      <returns>현재 사용 권한 개체가 지정된 사용 권한 개체의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted">
      <summary>사용 권한이 무제한인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>사용 권한이 무제한이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
      <summary>사용 권한에서 사용 권한 항목을 제거합니다.</summary>
      <param name="entry">제거할 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">지정된 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />는 <see langword="null" />입니다.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 속성의 요소 수가 <see cref="P:System.Security.Permissions.ResourcePermissionBase.TagNames" /> 속성의 요소 수와 같지 않은 경우  
  
또는 
<see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" />가 사용 권한에 없는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.ToXml">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 만들어 반환합니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)">
      <summary>현재 권한 개체와 대상 권한 개체를 결합하는 권한 개체를 만듭니다.</summary>
      <param name="target">현재 권한 개체와 통합할 권한 개체입니다. 이 사용 권한 개체는 현재 사용 권한 개체와 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 권한 개체의 형식이 현재 권한 개체의 형식과 동일하지 않은 경우</exception>
      <returns>현재 사용 권한 개체와 지정된 사용 권한 개체의 합집합에 해당하는 개체를 나타내는 새 사용 권한 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.PermissionAccessType">
      <summary>리소스에 지정한 액세스 형식을 설명하는 열거형 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">속성 값이 열거형 값이 아닌 경우</exception>
      <returns>
        <see cref="T:System.Type" />에서 파생되고 리소스에 지정한 액세스 형식을 설명하는 열거형 값입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBase.TagNames">
      <summary>보호하는 리소스를 확인하는 문자열의 배열을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">배열의 길이가 0인 경우</exception>
      <returns>보호할 리소스를 확인하는 문자열의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ResourcePermissionBaseEntry">
      <summary>코드 액세스 보안 권한 집합의 최소 단위를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
      <summary>지정된 사용 권한과 사용 권한 경로를 사용하여 <see cref="T:System.Security.Permissions.ResourcePermissionBaseEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">사용 권한 수준 열거형 값의 정수 표현입니다. <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <param name="permissionAccessPath">보호하는 리소스를 확인하는 문자열의 배열입니다. <see cref="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">지정된 <paramref name="permissionAccessPath" />는 <see langword="null" />입니다.</exception>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccess">
      <summary>액세스 수준 열거형 값의 정수 표현을 가져옵니다.</summary>
      <returns>액세스 수준 열거형 값입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ResourcePermissionBaseEntry.PermissionAccessPath">
      <summary>보호하는 리소스를 확인하는 문자열의 배열을 가져옵니다.</summary>
      <returns>보호하는 리소스를 확인하는 문자열의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.SecurityPermission">
      <summary>코드에 적용되는 보안 권한 집합을 설명합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.SecurityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.#ctor(System.Security.Permissions.SecurityPermissionFlag)">
      <summary>지정된 플래그의 초기 설정 상태를 사용하여 <see cref="T:System.Security.Permissions.SecurityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />로 정의된 모든 사용 권한 비트의 조합 또는 비트로 나타내는 사용 권한의 초기 상태입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" /> 매개 변수가 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 지원되지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 나타내는 새 사용 권한 개체입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SecurityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.SecurityPermission.Flags">
      <summary>보안 권한 플래그를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">이 속성을 잘못된 값으로 설정하려고 합니다. 유효한 값에 대해서는 <see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> 를 참조하세요.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />로 정의된 모든 사용 권한 비트의 조합 또는 비트로 나타내는 현재 사용 권한의 상태입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermission">
      <summary>코드가 발생되는 웹 사이트의 ID 권한을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.SiteIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)">
      <summary>지정된 사이트 ID를 나타내는 <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="site">사이트 이름 또는 와일드카드 식입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> 매개 변수가 유효한 문자열이 아니거나 유효한 와일드카드 사이트 이름과 일치하지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
사용 권한이 다르고 한 사용 권한이 다른 사용 권한의 하위 집합이 아닌 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermission.Site">
      <summary>현재 사이트를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">모호한 ID가 있기 때문에 사이트 ID를 검색할 수 없는 경우</exception>
      <returns>현재 사이트입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.SiteIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.SiteIdentityPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.SiteIdentityPermission" />의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.SiteIdentityPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.SiteIdentityPermissionAttribute.Site">
      <summary>호출 코드의 사이트 이름을 가져오거나 설정합니다.</summary>
      <returns>보안 공급자가 지정한 사이트 이름과 비교할 사이트 이름입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermission">
      <summary>X.509 인증서가 들어 있는 저장소에 대한 액세스를 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>완전 제한 또는 무제한 권한을 사용하여 <see cref="T:System.Security.Permissions.StorePermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />는 유효한 <see cref="T:System.Security.Permissions.PermissionState" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)">
      <summary>지정한 액세스를 사용하여 <see cref="T:System.Security.Permissions.StorePermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 값의 비트 조합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="flag" />
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 값의 유효한 조합이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 만드는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" /> 가 올바른 사용 권한 요소가 아닙니다.  
  
또는 
<paramref name="securityElement" />의 버전 번호가 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 가 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트하는 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 이 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 권한의 XML 인코딩을 포함하는 <see cref="T:System.Security.SecurityElement" /> 입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 이 <see langword="null" /> 이 아니고, 현재 사용 권한과 동일한 형식이 아닙니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermission.Flags">
      <summary>현재 사용 권한에 의해 허용된 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 액세스의 형식을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">이 속성을 잘못된 값으로 설정하려고 합니다. 유효한 값에 대해서는 <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 를 참조하세요.</exception>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.StorePermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 보안 동작을 사용하여 <see cref="T:System.Security.Permissions.StorePermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.StorePermission" />을 만들어 반환합니다.</summary>
      <returns>특성에 해당하는 <see cref="T:System.Security.Permissions.StorePermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.AddToStore">
      <summary>코드에서 저장소에 추가하는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>저장소에 추가하는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.CreateStore">
      <summary>코드에서 저장소를 만드는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>저장소를 만드는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.DeleteStore">
      <summary>코드에서 저장소를 삭제하는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>저장소를 삭제하는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateCertificates">
      <summary>코드에서 저장소에 인증서를 열거하는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인증서를 열거하는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.EnumerateStores">
      <summary>코드에서 저장소를 열거하는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>저장소를 열거하는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.Flags">
      <summary>저장소 권한을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.StorePermissionFlags" /> 값의 비트 조합입니다. 기본값은 <see cref="F:System.Security.Permissions.StorePermissionFlags.NoFlags" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.OpenStore">
      <summary>코드에서 저장소를 여는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>저장소를 여는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StorePermissionAttribute.RemoveFromStore">
      <summary>코드에서 인증서를 저장소에서 제거하는 기능이 허용되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>인증서를 저장소에서 제거하는 기능이 허용되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.StorePermissionFlags">
      <summary>X.509 인증서 저장소에 대해 허용되는 액세스를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AddToStore">
      <summary>
        <para>저장소에 인증서를 추가하는 기능입니다.</para>
        <para>보안상의 이유로 이 기능은 완전히 신뢰할 수 있는 코드에만 부여해야 합니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.AllFlags">
      <summary>모든 인증서 및 저장소 작업을 수행하는 기능입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.CreateStore">
      <summary>
        <para>새 저장소를 만드는 기능입니다.</para>
        <para>새 저장소는 <see cref="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)" /> 메서드를 호출하여 만듭니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.DeleteStore">
      <summary>
        <para>저장소를 삭제하는 기능입니다.</para>
        <para>이 기능은 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 클래스에 의해 노출되지 않습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateCertificates">
      <summary>
        <para>저장소에 인증서를 열거하는 기능입니다.</para>
        <para>개인 정보 보호를 위해 이 기능은 완전히 신뢰할 수 있는 코드에만 부여해야 합니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.EnumerateStores">
      <summary>
        <para>컴퓨터에 저장소를 열거하는 기능입니다.</para>
        <para>이 기능은 <see cref="T:System.Security.Cryptography.X509Certificates.X509Store" /> 클래스에 의해 노출되지 않습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.NoFlags">
      <summary>인증서나 저장소 작업을 수행하기 위한 권한이 부여되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.OpenStore">
      <summary>
        <para>저장소를 여는 기능입니다.</para>
        <para>저장소를 여는 기능에는 인증서를 열거하거나(개인 정보 보호 문제를 일으킴) 인증서를 추가 또는 제거하는(보안 문제를 일으킴) 기능이 포함되지 않습니다.</para>
      </summary>
    </member>
    <member name="F:System.Security.Permissions.StorePermissionFlags.RemoveFromStore">
      <summary>
        <para>저장소에서 인증서를 제거하는 기능입니다.</para>
        <para>인증서를 제거하면 서비스 거부가 발생할 수 있으므로 이 기능은 완전히 신뢰할 수 있는 코드에만 부여해야 합니다.</para>
      </summary>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermission">
      <summary>강력한 이름에 대한 ID 권한을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>지정된 강력한 이름 ID에 대해 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="blob">강력한 이름 ID 네임스페이스를 정의하는 공용 키입니다.</param>
      <param name="name">강력한 이름 ID 중 단순한 이름 부분입니다. 이것은 어셈블리의 이름에 해당합니다.</param>
      <param name="version">ID의 버전 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 빈 문자열("")입니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="e">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="e" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 공통 사용 권한을 나타내는 새로운 사용 권한이거나, 공통 사용 권한이 없으면 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
두 사용 권한이 다르고 한 사용 권한이 다른 사용 권한의 하위 집합인 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Name">
      <summary>강력한 이름 ID의 단순한 이름 부분을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값이 빈 문자열("")인 경우</exception>
      <exception cref="T:System.NotSupportedException">모호한 ID가 포함되어 있어 속성 값을 검색할 수 없는 경우</exception>
      <returns>ID의 단순한 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey">
      <summary>강력한 이름 ID 네임스페이스를 정의하는 공개 키 blob을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />로 설정되어 있습니다.</exception>
      <exception cref="T:System.NotSupportedException">모호한 ID가 포함되어 있어 속성 값을 검색할 수 없는 경우</exception>
      <returns>ID의 공개 키가 들어 있는 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 이거나, 키가 없으면 <see langword="null" /> 입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermission.Version">
      <summary>ID의 버전 번호를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">모호한 ID가 포함되어 있어 속성 값을 검색할 수 없는 경우</exception>
      <returns>ID의 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.StrongNameIdentityPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.StrongNameIdentityPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">키가 <see langword="null" />이기때문에 메서드가 실패한 경우</exception>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Name">
      <summary>강력한 이름 ID의 이름을 가져오거나 설정합니다.</summary>
      <returns>보안 공급자가 지정한 이름과 비교할 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.PublicKey">
      <summary>16진 문자열로 표현된 강력한 이름 ID의 공개 키 값을 가져오거나 설정합니다.</summary>
      <returns>16진 문자열로 표현된 강력한 이름 ID의 공개 키 값입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.StrongNameIdentityPermissionAttribute.Version">
      <summary>강력한 이름 ID의 버전 번호를 가져오거나 설정합니다.</summary>
      <returns>강력한 이름 ID의 버전 번호입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.StrongNamePublicKeyBlob">
      <summary>강력한 이름의 blob이라는 공개 키 정보를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])">
      <summary>공개 키 blob의 원시 바이트를 사용하여 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="publicKey">원시 공개 키 데이터를 나타내는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)">
      <summary>현재 공개 키 blob이 지정된 공개 키 blob과 같은지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <param name="o">공개 키 blob을 포함하는 개체입니다.</param>
      <returns>현재 개체의 공개 키 blob이 <paramref name="o" /> 매개 변수의 공개 키 blob과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode">
      <summary>공개 키에 기초한 해시 코드를 반환합니다.</summary>
      <returns>공개 키에 기초한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.StrongNamePublicKeyBlob.ToString">
      <summary>공개 키 blob의 문자열 표현을 만들어 반환합니다.</summary>
      <returns>공개 키 blob의 16진 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermission">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" /> 클래스에 대한 부분 신뢰 액세스를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">요청할 <see cref="T:System.Security.Permissions.PermissionState" />입니다. <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 및 <see cref="F:System.Security.Permissions.PermissionState.None" />만 유효합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />가 유효한 사용 권한 상태가 아닙니다. <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> 및 <see cref="F:System.Security.Permissions.PermissionState.None" />만 유효합니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.#ctor(System.Security.Permissions.TypeDescriptorPermissionFlags)">
      <summary>지정된 사용 권한 플래그를 사용하여 <see cref="T:System.Security.Permissions.TypeDescriptorPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="flag">요청할 권한 플래그입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
      <summary>파생된 클래스에 의해 구현될 때 현재 권한 개체의 동일한 복사본을 만들어서 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.FromXml(System.Security.SecurityElement)">
      <summary>파생된 클래스에서 재정의하는 경우 XML 인코딩으로 지정된 상태를 가진 보안 개체를 다시 생성합니다.</summary>
      <param name="securityElement">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Intersect(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한과 지정된 권한의 교집합에 해당하는 사용 권한을 만들고 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한이 지정된 권한의 하위 집합인지 여부를 결정합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.IsUnrestricted">
      <summary>부분 신뢰 코드에서 형식 설명자를 호출할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="P:System.Security.Permissions.TypeDescriptorPermission.Flags" /> 속성이 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.ToXml">
      <summary>파생된 클래스에서 재정의되면 보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermission.Union(System.Security.IPermission)">
      <summary>파생된 클래스에서 재정의되는 경우 현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermission.Flags">
      <summary>형식 설명자에 대한 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />를 가져오거나 설정합니다.</summary>
      <returns>형식 설명자에 대한 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionAttribute">
      <summary>
        <see cref="T:System.ComponentModel.TypeDescriptor" />에 적용할 권한 플래그를 결정합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.TypeDescriptorPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
      <summary>파생 클래스에서 재정의된 경우 권한 개체를 만듭니다. 이 개체는 생성된 후 이진 형식으로 직렬화되고 어셈블리 메타데이터의 <see cref="T:System.Security.Permissions.SecurityAction" />과 함께 영구적으로 저장될 수 있습니다.</summary>
      <returns>직렬화할 수 있는 권한 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags">
      <summary>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />의 <see cref="T:System.ComponentModel.TypeDescriptor" />를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.TypeDescriptorPermissionFlags" />에 대한 <see cref="T:System.ComponentModel.TypeDescriptor" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess">
      <summary>부분 신뢰에서 형식 설명자에 액세스할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>부분 신뢰에서 형식 설명자에 액세스할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.TypeDescriptorPermissionFlags">
      <summary>형식 설명자에 대한 권한 설정을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.NoFlags">
      <summary>형식 설명자에 대한 권한 플래그가 설정되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess">
      <summary>부분 신뢰 코드에서 형식 설명자를 호출할 수 있습니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermission">
      <summary>사용자 인터페이스 및 클립보드와 관련된 권한을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 대로 완전 제한 또는 무제한 액세스 권한을 사용하여 <see cref="T:System.Security.Permissions.UIPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.PermissionState" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)">
      <summary>클립보드에 대해 지정된 사용 권한을 사용하고, 창에 대한 액세스 권한 없이 <see cref="T:System.Security.Permissions.UIPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="clipboardFlag">열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="clipboardFlag" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)">
      <summary>창에 대해 사용 권한을 사용하고, 클립보드에 대한 액세스 권한 없이 <see cref="T:System.Security.Permissions.UIPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="windowFlag">열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)">
      <summary>창 및 클립보드에 대해 지정된 사용 권한을 사용하여 <see cref="T:System.Security.Permissions.UIPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="windowFlag">열거형 값 중 하나입니다.</param>
      <param name="clipboardFlag">열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="windowFlag" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 값이 아닌 경우  
  
또는 
<paramref name="clipboardFlag" /> 매개 변수가 유효한 <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 값이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">권한을 다시 생성하는 데 사용되는 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>현재 사용 권한이 제한되지 않은 경우<see langword="true" /> 이고, 제한되는 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)">
      <summary>사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Clipboard">
      <summary>사용 권한이 나타내는 클립보드 액세스를 가져오거나 설정 합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermission.Window">
      <summary>사용 권한이 나타내는 창 액세스를 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.UIPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.UIPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.UIPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.UIPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.UIPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Clipboard">
      <summary>허용되는 클립보드에 대한 액세스 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UIPermissionAttribute.Window">
      <summary>허용되는 창 리소스에 대한 액세스 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionClipboard">
      <summary>호출 코드에 허용되는 클립보드 액세스의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard">
      <summary>클립보드는 제한 없이 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.NoClipboard">
      <summary>클립보드를 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard">
      <summary>데이터를 클립보드에 두는 <see langword="Copy" /> 및 <see langword="Cut" /> 기능은 자유롭게 사용할 수 있습니다. 텍스트 상자와 같이 <see langword="Paste" />를 허용하는 내장 컨트롤은 클립보드 데이터를 허용할 수 있지만, 클립보드를 프로그래밍 방식으로 읽어야 하는 사용자 정의 컨트롤은 이 데이터를 허용할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.UIPermissionWindow">
      <summary>코드 사용이 허용되는 창 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.AllWindows">
      <summary>사용자는 모든 창과 사용자 입력 이벤트를 제한 없이 사용할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.NoWindows">
      <summary>사용자가 창이나 사용자 인터페이스 이벤트를 사용할 수 없습니다. 사용자 인터페이스를 사용할 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows">
      <summary>사용자는 그리기 작업을 수행할 때 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />만 사용할 수 있으며 해당 하위 창 내의 사용자 인터페이스에 대해서는 사용자 입력 이벤트만 사용할 수 있습니다. <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />의 예로는 <see cref="T:System.Windows.Forms.MessageBox" />, 공용 대화 상자 컨트롤 및 브라우저에 표시되는 컨트롤 등이 있습니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows">
      <summary>사용자는 그리기 작업을 수행할 때 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" />와 <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />만 사용할 수 있으며 해당 최상위 창 및 하위 창 내의 사용자 인터페이스에 대해서는 사용자 입력 이벤트만 사용할 수 있습니다. 자세한 내용은 설명 부분을 참조하세요.</summary>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermission">
      <summary>코드가 발생되는 URL의 ID 권한을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)">
      <summary>
        <paramref name="site" />에서 설명하는 URL ID를 나타내기 위해 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 클래스의 새 인스턴스를 초기합니다.</summary>
      <param name="site">URL 또는 와일드카드 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.FormatException">
        <paramref name="site" /> 매개 변수의 길이가 0인 경우</exception>
      <exception cref="T:System.ArgumentException">URL, 디렉터리 또는 <paramref name="site" /> 매개 변수의 사이트 일부가 유효하지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
Url 속성이 올바른 URL이 아닙니다.</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
Url 속성이 올바른 URL이 아닙니다.</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
<see cref="P:System.Security.Permissions.UrlIdentityPermission.Url" /> 속성이 올바른 URL이 아닙니다.  
  
또는 
두 사용 권한이 같지 않으며 하나가 다른 사용 권한의 하위 집합이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">권한이 여러 ID를 나타내므로 작업이 모호합니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermission.Url">
      <summary>인터넷 코드의 ID를 나타내는 URL을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">모호한 ID가 있어 URL을 검색할 수 없는 경우</exception>
      <returns>인터넷 코드의 ID를 나타내는 URL입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.UrlIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.UrlIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.UrlIdentityPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.UrlIdentityPermissionAttribute.Url">
      <summary>호출 코드의 전체 URL을 가져오거나 설정합니다.</summary>
      <returns>호스트에서 지정한 URL과 일치하는 URL입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 개체는 WebBrowser 컨트롤을 만드는 기능을 제어합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>사용 권한 상태를 지정하여 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)">
      <summary>웹 브라우저 사용 권한 수준을 지정하여 <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="webBrowserPermissionLevel">
        <see cref="T:System.Security.Permissions.WebBrowserPermissionLevel" />의 열거형 값입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>두 사용 권한의 공통 사용 권한은 두 사용 권한이 모두 공통으로 설명하는 상태를 설명하는 사용 권한입니다. 원래의 두 사용 권한을 모두 전달하는 요구만 공통 사용 권한에 대해 유효합니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted">
      <summary>현재 사용 권한이 제한되지 않았는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>
        <see cref="P:System.Security.Permissions.WebBrowserPermission.Level" /> 속성이 <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted" />로 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermission.Level">
      <summary>웹 브라우저 권한 수준의 현재 값을 가져오거나 설정합니다.</summary>
      <returns>웹 브라우저 권한 수준의 현재 값입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermission" /> 클래스의 새 인스턴스를 만들어 반환합니다.</summary>
      <returns>보안 선언에 해당하는 <see cref="T:System.Security.Permissions.WebBrowserPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.WebBrowserPermissionAttribute.Level">
      <summary>
        <see cref="T:System.Security.Permissions.WebBrowserPermissionAttribute" />에 대한 현재 웹 브라우저 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>현재 웹 브라우저 권한 수준의 상태입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.WebBrowserPermissionLevel">
      <summary>웹 브라우저에 대한 사용 권한 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.None">
      <summary>프레임에서 HTML을 탐색할 수 없는 웹 브라우저입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe">
      <summary>프레임에서 안전하게 HTML을 탐색할 수 있지만 몇 가지 제한이 적용되는 웹 브라우저입니다.</summary>
    </member>
    <member name="F:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted">
      <summary>제한 없이 탐색할 수 있는 웹 브라우저입니다.</summary>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermission">
      <summary>코드가 발생되는 영역의 ID 권한을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />를 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)">
      <summary>지정된 영역 ID를 나타내는 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="zone">영역 식별자입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="esd">사용 권한을 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="esd" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="esd" /> 매개 변수가 올바른 사용 권한 요소가 아닌 경우  
  
또는 
<paramref name="esd" /> 매개 변수의 버전 번호가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. 이 사용 권한은 현재 사용 권한과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고, 이 사용 권한이 <see cref="F:System.Security.SecurityZone.NoZone" /> 보안 영역을 나타내지 않으며, 지정된 사용 권한이 현재 사용 권한과 같지 않은 경우</exception>
      <returns>현재 사용 권한이 지정된 사용 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.ToXml">
      <summary>사용 권한 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 사용 권한의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> 매개 변수가 <see langword="null" />이 아니고 현재 사용 권한과 형식이 다른 경우  
  
또는 
두 사용 권한이 같지 않고 현재 사용 권한이 <see cref="F:System.Security.SecurityZone.NoZone" /> 보안 영역을 나타내지 않습니다.</exception>
      <returns>현재 사용 권한 및 지정한 사용 권한의 합을 나타내는 새 사용 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermission.SecurityZone">
      <summary>현재 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />이 나타내는 영역을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">매개 변수 값이 <see cref="T:System.Security.SecurityZone" />의 유효한 값이 아닙니다.</exception>
      <returns>
        <see cref="T:System.Security.SecurityZone" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Permissions.ZoneIdentityPermissionAttribute">
      <summary>
        <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Security.Permissions.ZoneIdentityPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Permissions.ZoneIdentityPermissionAttribute.CreatePermission">
      <summary>새 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />을 만들어 반환합니다.</summary>
      <returns>이 특성에 해당하는 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" />입니다.</returns>
    </member>
    <member name="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone">
      <summary>속성 값으로 지정한 콘텐츠 영역의 멤버 자격을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.SecurityZone" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.AllMembershipCondition">
      <summary>모든 코드와 일치하는 멤버 자격 조건을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.AllMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <returns>항상 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.Equals(System.Object)">
      <summary>지정된 멤버 자격 조건이 <see cref="T:System.Security.Policy.AllMembershipCondition" />인지 여부를 확인합니다.</summary>
      <param name="o">
        <see cref="T:System.Security.Policy.AllMembershipCondition" />과 비교할 개체입니다.</param>
      <returns>지정된 멤버 자격 조건이 <see cref="T:System.Security.Policy.AllMembershipCondition" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <returns>멤버 자격 조건의 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.AllMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectory">
      <summary>정책 평가를 위한 증명 정보로 애플리케이션 디렉터리를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.#ctor(System.String)">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">애플리케이션 디렉터리의 경로입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Copy">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" />의 새 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" />의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.Equals(System.Object)">
      <summary>동일한 형식인 증명 정보 개체의 인스턴스가 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 증명 정보 개체와 같은 형식의 개체입니다.</param>
      <returns>두 인스턴스가 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.GetHashCode">
      <summary>현재 애플리케이션 디렉터리의 해시 코드를 가져옵니다.</summary>
      <returns>현재 애플리케이션 디렉터리의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectory.ToString">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 증명 정보 개체의 상태에 대한 문자열 표현을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationDirectory" /> 증명 정보 개체의 상태에 대한 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationDirectory.Directory">
      <summary>애플리케이션 디렉터리의 경로를 가져옵니다.</summary>
      <returns>애플리케이션 디렉터리의 경로입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationDirectoryMembershipCondition">
      <summary>어셈블리의 애플리케이션 디렉터리를 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.Equals(System.Object)">
      <summary>지정된 멤버 자격 조건이 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />인지 여부를 확인합니다.</summary>
      <param name="o">
        <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />과 비교할 개체입니다.</param>
      <returns>지정된 멤버 자격 조건이 <see cref="T:System.Security.Policy.ApplicationDirectoryMembershipCondition" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 애플리케이션 디렉터리 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 애플리케이션 디렉터리 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <returns>멤버 자격 조건의 상태에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationDirectoryMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrust">
      <summary>애플리케이션에 대한 보안 결정을 캡슐화합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.ApplicationIdentity)">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" />를 사용하여 <see cref="T:System.ApplicationIdentity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="identity">애플리케이션을 고유하게 식별하는 <see cref="T:System.ApplicationIdentity" />입니다.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
      <summary>완전 신뢰 어셈블리의 제공된 권한 부여 설정과 컬렉션을 사용하여 <see cref="T:System.Security.Policy.ApplicationTrust" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="defaultGrantSet">특정 권한이 없는 모든 어셈블리에 부여된 기본 권한 집합입니다.</param>
      <param name="fullTrustAssemblies">애플리케이션 도메인에서 완전히 신뢰할 수 있는 것으로 간주해야 하는 어셈블리를 나타내는 강력한 이름의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fullTrustAssemblies" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="fullTrustAssemblies" />에는 <see cref="T:System.Security.Policy.StrongName" />이 없는 어셈블리가 있습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체를 다시 생성합니다.</summary>
      <param name="element">
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체를 다시 생성하는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="element" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" />에 사용된 XML 인코딩이 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체 및 해당 개체의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity">
      <summary>애플리케이션 트러스트 개체의 애플리케이션 ID를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> 값이 있기 때문에 <see cref="T:System.ApplicationIdentity" />를 설정할 수 없는 경우</exception>
      <returns>애플리케이션 트러스트 개체의 <see cref="T:System.ApplicationIdentity" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.DefaultGrantSet">
      <summary>기본 권한 부여 집합을 정의하는 정책 문을 가져오거나 설정합니다.</summary>
      <returns>기본 권한 부여 집합을 설명하는 <see cref="T:System.Security.Policy.PolicyStatement" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.ExtraInfo">
      <summary>애플리케이션에 대한 추가 보안 정보를 가져오거나 설정합니다.</summary>
      <returns>애플리케이션에 대한 추가 보안 정보가 들어 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.FullTrustAssemblies">
      <summary>이 애플리케이션 신뢰의 완전 신뢰 어셈블리 목록을 가져옵니다.</summary>
      <returns>완전 신뢰 어셈블리 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun">
      <summary>애플리케이션에 필요한 사용 권한이 부여되었으며 실행되도록 신뢰되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>애플리케이션이 실행되도록 신뢰되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrust.Persist">
      <summary>애플리케이션 트러스트 정보가 보관될지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>애플리케이션 트러스트 정보가 보관되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustCollection">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체의 컬렉션을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)">
      <summary>컬렉션에 요소를 추가합니다.</summary>
      <param name="trust">추가할 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" />에 지정된 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" />의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 속성이 <see langword="null" />인 경우</exception>
      <returns>새 요소가 삽입된 인덱스입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])">
      <summary>지정된 <see cref="T:System.Security.Policy.ApplicationTrust" /> 배열의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="trusts">컬렉션에 추가할 개체를 포함하는 <see cref="T:System.Security.Policy.ApplicationTrust" /> 형식의 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" />에 지정된 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" />의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 속성이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>지정된 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />의 요소를 컬렉션의 끝에 복사합니다.</summary>
      <param name="trusts">컬렉션에 추가할 개체를 포함하는 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" />에 지정된 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" />의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 속성이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Clear">
      <summary>컬렉션에서 애플리케이션 트러스트를 모두 제거합니다.</summary>
      <exception cref="T:System.ArgumentException">컬렉션에 있는 항목의 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 속성이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)">
      <summary>대상 배열의 지정한 인덱스에서 시작하여 전체 컬렉션을 호환 가능한 1차원 배열에 복사합니다.</summary>
      <param name="array">현재 컬렉션에서 복사된 요소의 대상인 <see cref="T:System.Security.Policy.ApplicationTrust" /> 형식의 1차원 배열입니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 하한값보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
<see cref="T:System.Security.Policy.ApplicationTrustCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>지정된 애플리케이션 ID와 일치하는 컬렉션의 애플리케이션 트러스트를 가져옵니다.</summary>
      <param name="applicationIdentity">찾을 애플리케이션을 설명하는 <see cref="T:System.ApplicationIdentity" /> 개체입니다.</param>
      <param name="versionMatch">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 값 중 하나입니다.</param>
      <returns>일치하는 모든 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 개체가 들어 있는 <see cref="T:System.Security.Policy.ApplicationTrust" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.GetEnumerator">
      <summary>컬렉션에서 반복하는 데 사용할 수 있는 개체를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Policy.ApplicationTrustEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)">
      <summary>컬렉션에서 지정된 조건과 일치하는 모든 애플리케이션 트러스트 개체를 제거합니다.</summary>
      <param name="applicationIdentity">제거될 <see cref="T:System.ApplicationIdentity" /> 개체의 <see cref="T:System.Security.Policy.ApplicationTrust" />입니다.</param>
      <param name="versionMatch">
        <see cref="T:System.Security.Policy.ApplicationVersionMatch" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)">
      <summary>컬렉션에서 지정된 애플리케이션 트러스트를 제거합니다.</summary>
      <param name="trust">제거할 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trust" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="trust" />로 지정된 <see cref="P:System.Security.Policy.ApplicationTrust.ApplicationIdentity" /> 개체의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 속성이 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])">
      <summary>컬렉션에서 지정된 배열의 애플리케이션 트러스트 개체를 제거합니다.</summary>
      <param name="trusts">현재 컬렉션에서 제거할 항목이 들어 있는 <see cref="T:System.Security.Policy.ApplicationTrust" /> 형식의 1차원 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)">
      <summary>컬렉션에서 지정된 컬렉션의 애플리케이션 트러스트 개체를 제거합니다.</summary>
      <param name="trusts">현재 컬렉션에서 제거할 항목이 들어 있는 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="trusts" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>지정된 <see cref="T:System.Collections.ICollection" /> 인덱스부터 시작하여 <see cref="T:System.Array" />의 요소를 지정된 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Collections.ICollection" />입니다. <see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우  
  
또는 
소스 <see cref="T:System.Collections.ICollection" />의 요소 수가 대상 <paramref name="array" />의 <paramref name="index" />부터 끝까지 사용 가능한 공간보다 큽니다.</exception>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션에서 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Count">
      <summary>컬렉션에 포함된 항목의 수를 가져옵니다.</summary>
      <returns>컬렉션에 포함된 항목의 수입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체를 가져옵니다.</summary>
      <param name="index">컬렉션 내의 개체의 인덱스(0부터 시작)를 반환합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 개체 수보다 크거나 같은 경우</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="index" />가 음수입니다.</exception>
      <returns>컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.Item(System.String)">
      <summary>지정된 애플리케이션에 대한 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체를 가져옵니다.</summary>
      <param name="appFullName">애플리케이션의 전체 이름입니다.</param>
      <returns>지정된 애플리케이션의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체이거나 개체를 찾을 수 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스를 동기화하는 데 사용되는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationTrustEnumerator">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 <see cref="T:System.Security.Policy.ApplicationTrust" /> 개체에 대한 열거자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.MoveNext">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns>열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ApplicationTrustEnumerator.Reset">
      <summary>열거자를 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 컬렉션의 시작 부분을 가리키도록 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.Current">
      <summary>
        <see cref="T:System.Security.Policy.ApplicationTrust" /> 컬렉션에서 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.ApplicationTrust" />의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Object" /> 컬렉션의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Object" />의 현재 <see cref="T:System.Security.Policy.ApplicationTrustCollection" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ApplicationVersionMatch">
      <summary>컬렉션에서 애플리케이션 트러스트를 찾을 때 버전을 일치시키는 방법을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchAllVersions">
      <summary>모든 버전과 일치합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.ApplicationVersionMatch.MatchExactVersion">
      <summary>정확한 버전과 일치합니다.</summary>
    </member>
    <member name="T:System.Security.Policy.CodeConnectAccess">
      <summary>코드에 부여된 네트워크 리소스 액세스를 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.AnyScheme">
      <summary>체계 와일드카드를 나타내는 문자열 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.DefaultPort">
      <summary>기본 포트를 나타내는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginPort">
      <summary>원본 코드가 있는 URI의 포트 값을 나타내는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.CodeConnectAccess.OriginScheme">
      <summary>원본 코드가 있는 URL의 체계를 나타내는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)">
      <summary>
        <see cref="T:System.Security.Policy.CodeConnectAccess" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="allowScheme">현재 인스턴스가 나타내는 URI 체계입니다.</param>
      <param name="allowPort">현재 인스턴스가 나타내는 포트입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowScheme" />이(가) <see langword="null" />인 경우  
  
또는 
 <paramref name="allowScheme" />가 빈 문자열("")인 경우  
  
또는 
 <paramref name="allowScheme" />이 체계에 허용되지 않는 문자를 포함하는 경우  
  
또는 
 <paramref name="allowPort" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="allowPort" />가 65,535보다 큽니다.</exception>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)">
      <summary>임의의 체계를 사용하여 지정된 포트에 액세스하는 것을 나타내는 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 인스턴스를 반환합니다.</summary>
      <param name="allowPort">반환된 인스턴스가 나타내는 포트입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="allowPort" />가 65,535보다 큽니다.</exception>
      <returns>지정된 포트에 대한 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)">
      <summary>코드의 원래 체계를 사용하여 지정된 포트에 액세스하는 것을 나타내는 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 인스턴스를 반환합니다.</summary>
      <param name="allowPort">반환된 인스턴스가 나타내는 포트입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="allowPort" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="allowPort" />가 65,535보다 큽니다.</exception>
      <returns>지정된 포트에 대한 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)">
      <summary>두 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 개체가 같은 체계와 포트를 나타내는지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 개체와 비교할 개체입니다.</param>
      <returns>두 개체가 같은 체계와 포트를 나타내면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeConnectAccess.GetHashCode">
      <summary>특정 유형에 대한 해시 함수로 사용합니다.</summary>
      <returns>현재 <see cref="T:System.Object" />의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Port">
      <summary>현재 인스턴스가 나타내는 포트를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 속성과 함께 사용되는 컴퓨터 포트를 식별하는 <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> 값입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeConnectAccess.Scheme">
      <summary>현재 인스턴스가 나타내는 URI 체계를 가져옵니다.</summary>
      <returns>소문자로 변환된 URI 체계를 식별하는 <see cref="T:System.String" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.CodeGroup">
      <summary>모든 코드 그룹 구현이 파생해야 하는 추상 기본 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.CodeGroup" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="membershipCondition">이 코드 그룹에 정책이 적용되는지 여부를 결정하는 증명 정보를 테스트하는 멤버 자격 조건입니다.</param>
      <param name="policy">멤버 자격 조건과 일치하는 코드를 부여하는 권한 집합 및 특성 형식인 코드 그룹의 정책 문입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 매개 변수의 형식이 올바르지 않은 경우  
  
또는 
<paramref name="policy" /> 매개 변수의 형식이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
      <summary>현재 코드 그룹에 자식 코드 그룹을 추가합니다.</summary>
      <param name="group">자식으로 추가할 코드 그룹입니다. 이 새 자식 코드 그룹은 목록의 끝에 추가됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="group" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> 매개 변수가 잘못된 코드 그룹인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Copy">
      <summary>파생 클래스에서 재정의된 경우 현재 코드 그룹의 전체 복사본을 만듭니다.</summary>
      <returns>해당 멤버 자격 조건과 자식 코드 그룹을 포함한 현재 코드 그룹의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>파생 클래스에서 재정의된 경우 파생 코드 그룹에 관련된 속성 및 내부 상태를 serialize하여 지정된 <see cref="T:System.Security.SecurityElement" />에 serialization을 추가합니다.</summary>
      <param name="element">serialization이 추가될 XML 인코딩입니다.</param>
      <param name="level">코드 그룹이 존재하는 정책 수준입니다.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
      <summary>지정된 코드 그룹이 현재 코드 그룹과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 코드 그룹과 비교할 코드 그룹입니다.</param>
      <returns>지정된 코드 그룹이 현재 코드 그룹과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
      <summary>지정된 코드 그룹이 현재 코드 그룹과 동일한지 여부를 확인합니다. 지정된 경우에는 자식 코드 그룹도 확인합니다.</summary>
      <param name="cg">현재 코드 그룹과 비교할 코드 그룹입니다.</param>
      <param name="compareChildren">자식 코드 그룹도 비교하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <returns>지정된 코드 그룹이 현재 코드 그룹과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>보안 개체를 XML을 인코딩하여 지정한 상태 및 정책 수준으로 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">코드 그룹이 존재하는 정책 수준입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.GetHashCode">
      <summary>현재 코드 그룹의 해시 코드를 가져옵니다.</summary>
      <returns>현재 코드 그룹의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>파생 클래스에서 재정의된 경우 지정된 <see cref="T:System.Security.SecurityElement" />에서 파생된 코드 그룹에 관련된 속성 및 내부 상태를 다시 생성합니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">코드 그룹이 존재하는 정책 수준입니다.</param>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
      <summary>지정된 자식 코드 그룹을 제거합니다.</summary>
      <param name="group">제거할 자식 코드 그룹입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="group" /> 매개 변수가 현재 코드 그룹의 바로 아래 자식 코드 그룹이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>파생 클래스에서 재정의된 경우 코드 그룹의 정책과 증명 정보 집합의 정책 하위 항목을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <returns>선택적 특성이 있는 코드 그룹에서 부여한 권한으로 이루어진 정책 문이거나, 코드 그룹이 적용되지 않는 경우, 즉 멤버 자격 조건이 지정된 증명 정보와 일치하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>파생 클래스에서 재정의된 경우 일치하는 코드 그룹을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <returns>일치하는 코드 그룹 트리의 루트인 <see cref="T:System.Security.Policy.CodeGroup" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체, 해당 개체의 현재 상태 및 코드가 존재하는 정책 수준에 대한 XML 인코딩을 만듭니다.</summary>
      <param name="level">코드 그룹이 존재하는 정책 수준입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.AttributeString">
      <summary>코드 그룹에 대한 정책 문의 특성을 나타내는 문자열 표현을 가져옵니다.</summary>
      <returns>코드 그룹에 대한 정책 문의 특성을 나타내는 문자열 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Children">
      <summary>코드 그룹의 자식 코드 그룹에 대한 순서 있는 목록을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">해당 속성을 <see langword="null" />로 설정하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Security.Policy.CodeGroup" /> 개체가 아닌 자식 목록을 사용하여 이 속성을 설정하려고 한 경우</exception>
      <returns>자식 코드 그룹 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Description">
      <summary>코드 그룹의 설명을 가져오거나 설정합니다.</summary>
      <returns>코드 그룹에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MembershipCondition">
      <summary>코드 그룹의 멤버 자격 조건을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">해당 매개 변수를 <see langword="null" />로 설정하려고 한 경우</exception>
      <returns>코드 그룹에 적용할 수 있는 증명 정보를 결정하는 멤버 자격 조건입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.MergeLogic">
      <summary>파생 클래스에서 재정의된 경우 코드 그룹에 대한 병합 논리를 가져옵니다.</summary>
      <returns>코드 그룹의 병합 논리에 대한 설명입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.Name">
      <summary>코드 그룹의 이름을 가져오거나 설정합니다.</summary>
      <returns>코드 그룹의 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PermissionSetName">
      <summary>코드 그룹에 대한 명명된 권한 집합의 이름을 가져옵니다.</summary>
      <returns>정책 수준의 명명된 권한 집합 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.CodeGroup.PolicyStatement">
      <summary>코드 그룹과 관련된 정책 문을 가져오거나 설정합니다.</summary>
      <returns>코드 그룹에 대한 정책 문입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.Evidence">
      <summary>보안 정책 결정의 입력을 구성하는 정보 집합을 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.Evidence" /> 클래스의 비어 있는 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])">
      <summary>호스트 및 어셈블리 증명 정보의 여러 집합에서 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hostEvidence">새 인스턴스를 만들 호스트 증명 정보입니다.</param>
      <param name="assemblyEvidence">새 인스턴스를 만들 어셈블리 증명 정보입니다.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)">
      <summary>기존 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 단순 복사본에서 해당 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="evidence">새 인스턴스를 만들 <see cref="T:System.Security.Policy.Evidence" /> 인스턴스입니다. 해당 인스턴스는 전체 복사본이 아닙니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 매개 변수가 <see cref="T:System.Security.Policy.Evidence" />의 올바른 인스턴스가 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])">
      <summary>호스트 및 어셈블리 증명 정보의 여러 집합에서 <see cref="T:System.Security.Policy.Evidence" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hostEvidence">새 인스턴스를 만들 호스트 증명 정보입니다.</param>
      <param name="assemblyEvidence">새 인스턴스를 만들 어셈블리 증명 정보입니다.</param>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
      <summary>지정된 어셈블리 증명 정보를 증명 정보 집합에 추가합니다.</summary>
      <param name="id">모든 증명 정보 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" />는 직렬화할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
      <summary>지정된 형식의 증명 정보 개체를 어셈블리에서 제공한 증명 정보 목록에 추가합니다.</summary>
      <param name="evidence">추가할 어셈블리 증명 정보입니다.</param>
      <typeparam name="T">
        <paramref name="evidence" />에 있는 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">형식 <paramref name="T" />의 증명 정보가 이미 목록에 있습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" />는 직렬화할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
      <summary>호스트에서 제공한 지정된 증명 정보를 증명 정보 집합에 추가합니다.</summary>
      <param name="id">모든 증명 정보 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="id" />는 직렬화할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
      <summary>지정된 형식의 호스트 증명 정보를 호스트 증명 정보 컬렉션에 추가합니다.</summary>
      <param name="evidence">추가할 호스트 증명 정보입니다.</param>
      <typeparam name="T">
        <paramref name="evidence" />에 있는 개체의 형식입니다.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">형식 <paramref name="T" />의 증명 정보가 이미 목록에 있습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clear">
      <summary>호스트 및 어셈블리 증명 정보를 증명 정보 집합에서 제거합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Evidence.Clone">
      <summary>이 증명 정보 개체의 복사본을 반환합니다.</summary>
      <returns>이 증명 정보 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)">
      <summary>증명 정보 개체를 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">증명 정보 개체를 복사할 대상 배열입니다.</param>
      <param name="index">배열에서 0부터 시작하는 위치로 증명 정보 개체의 복사가 시작되는 위치입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 대상 배열의 범위를 벗어납니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
      <summary>어셈블리에서 제공한 증명 정보를 나열합니다.</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 메서드를 통해 추가된 증명 정보의 열거자입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
      <summary>지정된 형식의 어셈블리 증명 정보를 컬렉션에서 가져옵니다.</summary>
      <typeparam name="T">가져올 증명 정보 형식입니다.</typeparam>
      <returns>어셈블리 증명 정보 컬렉션에 있는 <paramref name="T" /> 형식의 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetEnumerator">
      <summary>모든 증명 정보, 즉 호스트에서 제공한 증명 정보와 어셈블리에서 제공한 증명 정보를 집합으로 나열합니다.</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 메서드 및 <see cref="M:System.Security.Policy.Evidence.AddAssembly(System.Object)" /> 메서드에서 추가한 증명 정보의 열거자입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
      <summary>호스트에서 제공한 증명 정보를 나열합니다.</summary>
      <returns>
        <see cref="M:System.Security.Policy.Evidence.AddHost(System.Object)" /> 메서드를 통해 추가된 증명 정보의 열거자입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
      <summary>지정된 형식의 호스트 증명 정보를 컬렉션에서 가져옵니다.</summary>
      <typeparam name="T">가져올 증명 정보 형식입니다.</typeparam>
      <returns>호스트 증명 정보 컬렉션에 있는 <paramref name="T" /> 형식의 증명 정보입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보 집합을 현재 증명 정보 집합에 병합합니다.</summary>
      <param name="evidence">현재 증명 정보 집합에 병합될 증명 정보 집합입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="evidence" /> 매개 변수가 <see cref="T:System.Security.Policy.Evidence" />의 올바른 인스턴스가 아닌 경우</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="P:System.Security.Policy.Evidence.Locked" />가 <see langword="true" />이고 해당 메서드를 호출한 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />가 없으며 <paramref name="evidence" /> 매개 변수에 비어 있지 않은 호스트 목록이 있는 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
      <summary>지정한 형식의 증명 정보를 호스트 및 어셈블리 열거형에서 제거합니다.</summary>
      <param name="t">제거될 증명 정보의 유형입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="t" />가 null입니다.</exception>
    </member>
    <member name="P:System.Security.Policy.Evidence.Count">
      <summary>증명 정보 집합의 증명 정보 개체 수를 가져옵니다.</summary>
      <returns>증명 정보 집합의 증명 정보 개체 수입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsReadOnly">
      <summary>증명 정보 집합이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>읽기 전용 증명 정보 집합은 지원되지 않으므로 항상 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.IsSynchronized">
      <summary>증명 정보 집합이 스레드로부터 안전한지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>스레드로부터 안전한 증명 정보 집합은 지원되지 않으므로 항상 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.Locked">
      <summary>증명 정보가 잠겨 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>증명 정보가 잠겨 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Evidence.SyncRoot">
      <summary>동기화 루트를 가져옵니다.</summary>
      <returns>증명 정보 집합의 동기화는 지원되지 않으므로 항상 <see langword="this" />(Visual Basic의 경우 <see langword="Me" />)입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.EvidenceBase">
      <summary>증명 정보로 사용할 모든 개체가 파생되어야 하는 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.EvidenceBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <exception cref="T:System.InvalidOperationException">증명 정보로 사용할 개체는 직렬화되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Policy.EvidenceBase.Clone">
      <summary>현재 인스턴스의 전체 복사본인 새 개체를 만듭니다.</summary>
      <returns>이 증명 정보 개체의 복사본입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.FileCodeGroup">
      <summary>멤버 자격 조건과 일치하는 코드 어셈블리에 해당 코드 어셈블리에 있는 파일을 조작하는 권한을 부여합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Permissions.FileIOPermissionAccess)">
      <summary>
        <see cref="T:System.Security.Policy.FileCodeGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="membershipCondition">이 코드 그룹에 정책이 적용되는지 여부를 결정하는 증명 정보를 테스트하는 멤버 자격 조건입니다.</param>
      <param name="access">
        <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> 값 중 하나입니다. 이 값은 부여된 <see cref="T:System.Security.Permissions.FileIOPermission" />을 생성하는 데 사용됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 매개 변수의 형식이 올바르지 않은 경우  
  
또는 
<paramref name="access" /> 매개 변수의 형식이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Copy">
      <summary>현재 코드 그룹의 전체 복사본을 만듭니다.</summary>
      <returns>해당 멤버 자격 조건과 자식 코드 그룹을 포함한 현재 코드 그룹의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Equals(System.Object)">
      <summary>지정된 코드 그룹이 현재 코드 그룹과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 코드 그룹과 비교할 코드 그룹입니다.</param>
      <returns>지정된 코드 그룹이 현재 코드 그룹과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.GetHashCode">
      <summary>현재 코드 그룹의 해시 코드를 가져옵니다.</summary>
      <returns>현재 코드 그룹의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>코드 그룹의 정책과 증명 정보 집합에 대한 정책의 하위 항목을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Policy.PolicyException">현재 정책이 <see langword="null" />인 경우  
  
또는 
부모 코드 그룹과 모든 자식 그룹을 포함한 두 개 이상의 코드 그룹이 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />로 표시되어 있는 경우</exception>
      <returns>선택적 특성이 있는 코드 그룹에서 부여한 권한으로 이루어진 정책 문이거나, 코드 그룹이 적용되지 않는 경우, 즉 멤버 자격 조건이 지정된 증명 정보와 일치하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FileCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>일치하는 코드 그룹을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>일치하는 코드 그룹 트리의 루트인 <see cref="T:System.Security.Policy.CodeGroup" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.AttributeString">
      <summary>코드 그룹에 대한 정책 문의 특성을 나타내는 문자열 표현을 가져옵니다.</summary>
      <returns>항상 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.MergeLogic">
      <summary>병합 논리를 가져옵니다.</summary>
      <returns>"Union" 문자열입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.FileCodeGroup.PermissionSetName">
      <summary>코드 그룹에 대한 명명된 권한 집합의 이름을 가져옵니다.</summary>
      <returns>"동일한 디렉터리 FileIO-" 문자열과 액세스 형식의 연결입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.FirstMatchCodeGroup">
      <summary>코드 그룹의 정책 문 및 일치하는 첫 번째 자식 코드 그룹의 정책 문을 통합하여 보안 정책을 정의할 수 있도록 합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.FirstMatchCodeGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="membershipCondition">이 코드 그룹에 정책이 적용되는지 여부를 결정하는 증명 정보를 테스트하는 멤버 자격 조건입니다.</param>
      <param name="policy">멤버 자격 조건과 일치하는 코드를 부여하는 권한 집합 및 특성 형식인 코드 그룹의 정책 문입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 매개 변수의 형식이 올바르지 않은 경우  
  
또는 
<paramref name="policy" /> 매개 변수의 형식이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Copy">
      <summary>코드 그룹의 전체 복사본을 만듭니다.</summary>
      <returns>해당 멤버 자격 조건과 자식 코드 그룹을 포함한 코드 그룹의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>코드 그룹의 정책과 증명 정보 집합에 대한 정책의 하위 항목을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Policy.PolicyException">부모 코드 그룹과 모든 자식 그룹을 포함한 두 개 이상의 코드 그룹이 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />로 표시되어 있는 경우</exception>
      <returns>선택적 특성이 있는 코드 그룹에서 부여한 권한으로 이루어진 정책 문이거나, 코드 그룹이 적용되지 않는 경우, 즉 멤버 자격 조건이 지정된 증명 정보와 일치하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>일치하는 코드 그룹을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>일치하는 코드 그룹 트리의 루트인 <see cref="T:System.Security.Policy.CodeGroup" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.FirstMatchCodeGroup.MergeLogic">
      <summary>병합 논리를 가져옵니다.</summary>
      <returns>"처음 일치" 문자열입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.GacInstalled">
      <summary>코드 어셈블리가 정책 평가를 위한 증명 정보로 GAC(전역 어셈블리 캐시)에서 시작되는지 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.GacInstalled" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Copy">
      <summary>현재 개체의 동일한 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.GacInstalled" />의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>현재 개체에 해당하는 새 ID 권한을 만듭니다.</summary>
      <param name="evidence">ID 권한을 만들 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <returns>현재 개체에 해당하는 새 ID 권한입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.Equals(System.Object)">
      <summary>현재 개체가 지정된 개체와 같은지 여부를 나타냅니다.</summary>
      <param name="o">현재 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="o" />가 <see cref="T:System.Security.Policy.GacInstalled" /> 개체이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.GetHashCode">
      <summary>현재 개체의 해시 코드를 반환합니다.</summary>
      <returns>현재 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacInstalled.ToString">
      <summary>현재 개체의 문자열 표현을 반환합니다.</summary>
      <returns>현재 개체의 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.GacMembershipCondition">
      <summary>전역 어셈블리 캐시 멤버 자격을 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.GacMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 나타냅니다.</summary>
      <param name="evidence">테스트할 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <returns>새 <see cref="T:System.Security.Policy.GacMembershipCondition" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.Equals(System.Object)">
      <summary>현재 개체가 지정된 개체와 같은지 여부를 나타냅니다.</summary>
      <param name="o">현재 개체와 비교할 개체입니다.</param>
      <returns>
        <paramref name="o" />가 <see cref="T:System.Security.Policy.GacMembershipCondition" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>지정된 XML 인코딩을 사용하여 보안 개체를 다시 생성합니다.</summary>
      <param name="e">보안 개체를 다시 생성하는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" />가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>지정된 XML 인코딩을 사용하여 지정된 정책 수준 컨텍스트로 보안 개체를 다시 생성합니다.</summary>
      <param name="e">보안 개체를 다시 생성하는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" />가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건에 대한 해시 코드를 가져옵니다.</summary>
      <returns>0(영)입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 반환합니다.</summary>
      <returns>멤버 자격 조건의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 보안 개체의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.GacMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>지정된 정책 수준 컨텍스트를 사용하여 보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <returns>상태 정보를 포함한 보안 개체의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.Hash">
      <summary>어셈블리의 해시 값에 대한 증명 정보를 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Hash.#ctor(System.Reflection.Assembly)">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="assembly">해시 값을 계산할 어셈블리입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assembly" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="assembly" />는 런타임 <see cref="T:System.Reflection.Assembly" /> 개체가 아닙니다.</exception>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateMD5(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> 해시 값이 들어 있는 <see cref="T:System.Security.Cryptography.MD5" /> 개체를 만듭니다.</summary>
      <param name="md5">
        <see cref="T:System.Security.Cryptography.MD5" /> 해시 값이 들어 있는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="md5" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="md5" /> 매개 변수에서 제공한 해시 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA1(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> 해시 값이 들어 있는 <see cref="T:System.Security.Cryptography.SHA1" /> 개체를 만듭니다.</summary>
      <param name="sha1">
        <see cref="T:System.Security.Cryptography.SHA1" /> 해시 값이 들어 있는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha1" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="sha1" /> 매개 변수에서 제공한 해시 값이 들어 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.CreateSHA256(System.Byte[])">
      <summary>
        <see cref="T:System.Security.Policy.Hash" /> 해시 값이 들어 있는 <see cref="T:System.Security.Cryptography.SHA256" /> 개체를 만듭니다.</summary>
      <param name="sha256">
        <see cref="T:System.Security.Cryptography.SHA256" /> 해시 값이 들어 있는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sha256" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>
        <paramref name="sha256" /> 매개 변수에서 제공한 해시 값이 들어 있는 해시 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GenerateHash(System.Security.Cryptography.HashAlgorithm)">
      <summary>지정된 해시 알고리즘을 사용하여 어셈블리에 대한 해시 값을 계산합니다.</summary>
      <param name="hashAlg">어셈블리에 대한 해시 값을 계산하는 데 사용할 해시 알고리즘입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.SecurityException">어셈블리에 대한 해시 값을 생성할 수 없습니다.</exception>
      <returns>어셈블리에 대한 해시 값을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Hash.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>매개 변수 이름 및 추가 예외 정보를 사용하여 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 개체를 가져옵니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Security.Policy.Hash.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.Hash" />의 문자열 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.Hash" />의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.MD5">
      <summary>어셈블리에 대한 <see cref="T:System.Security.Cryptography.MD5" /> 해시 값을 가져옵니다.</summary>
      <returns>어셈블리에 대한 <see cref="T:System.Security.Cryptography.MD5" /> 해시 값을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA1">
      <summary>어셈블리에 대한 <see cref="T:System.Security.Cryptography.SHA1" /> 해시 값을 가져옵니다.</summary>
      <returns>어셈블리에 대한 <see cref="T:System.Security.Cryptography.SHA1" /> 해시 값을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Hash.SHA256">
      <summary>어셈블리에 대한 <see cref="T:System.Security.Cryptography.SHA256" /> 해시 값을 가져옵니다.</summary>
      <returns>어셈블리에 대한 <see cref="T:System.Security.Cryptography.SHA256" /> 해시 값을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.HashMembershipCondition">
      <summary>어셈블리의 해시 값을 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.#ctor(System.Security.Cryptography.HashAlgorithm,System.Byte[])">
      <summary>멤버를 확인하는 해시 알고리즘 및 해시 값을 사용하여 <see cref="T:System.Security.Policy.HashMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="hashAlg">어셈블리에 대한 해시 값을 계산하는 데 사용할 해시 알고리즘입니다.</param>
      <param name="value">테스트할 해시 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlg" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="value" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlg" /> 매개 변수가 잘못된 해시 알고리즘인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.Equals(System.Object)">
      <summary>지정된 개체의 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 및 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" />이 현재 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" />에 포함된 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 및 <see cref="T:System.Security.Policy.HashMembershipCondition" />과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.HashMembershipCondition" />과 비교할 개체입니다.</param>
      <returns>지정된 개체의 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" /> 및 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" />이 현재 <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" />에 포함된 <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" /> 및 <see cref="T:System.Security.Policy.HashMembershipCondition" />과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>전체 개체 그래프가 역직렬화될 때 실행됩니다.</summary>
      <param name="sender">콜백을 시작한 개체입니다. 이 매개 변수의 기능은 현재 구현되지 않았습니다.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>대상 개체를 직렬화하는 데 필요한 데이터로 <see cref="T:System.Runtime.Serialization.SerializationInfo" />를 채웁니다.</summary>
      <param name="info">데이터로 채울 <see cref="T:System.Runtime.Serialization.SerializationInfo" />입니다.</param>
      <param name="context">이 serialization의 대상 <see cref="T:System.Runtime.Serialization.StreamingContext" />입니다.</param>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <returns>멤버 자격 조건의 상태에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.HashMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm">
      <summary>멤버 자격 조건에 사용할 해시 알고리즘을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.HashMembershipCondition.HashAlgorithm" />를 <see langword="null" />로 설정하려고 한 경우</exception>
      <returns>멤버 자격 조건에 사용할 해시 알고리즘입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.HashMembershipCondition.HashValue">
      <summary>멤버 자격 조건에서 테스트할 해시 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.HashMembershipCondition.HashValue" />를 <see langword="null" />로 설정하려고 한 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 해시 값입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.IIdentityPermissionFactory">
      <summary>새 ID 권한을 만드는 메서드를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.IIdentityPermissionFactory.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보에 대한 새 ID 권한을 만듭니다.</summary>
      <param name="evidence">새 ID 권한을 만들 증명 정보입니다.</param>
      <returns>새 ID 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.IMembershipCondition">
      <summary>코드 어셈블리가 코드 그룹의 멤버인지 여부를 확인하는 테스트를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Object" />가 현재 <see cref="T:System.Object" />와 같은지 여부를 확인합니다.</summary>
      <param name="obj">현재 <see cref="T:System.Object" />과 비교할 <see cref="T:System.Object" />입니다.</param>
      <returns>지정된 <see langword="true" />가 현재<see cref="T:System.Object" />와 같으면 <see cref="T:System.Object" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.IMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <returns>현재 멤버 자격 조건의 상태에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.NetCodeGroup">
      <summary>어셈블리를 다운로드한 사이트에 웹 권한을 부여합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme">
      <summary>알 수 없거나 인식할 수 없는 원래 체계를 사용하여 코드에 대한 연결 액세스를 지정하는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme">
      <summary>지정되지 않은 다른 원래 체계를 지정하는 데 사용되는 값을 포함합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)">
      <summary>
        <see cref="T:System.Security.Policy.NetCodeGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="membershipCondition">이 코드 그룹에 코드 액세스 보안 정책이 적용되는지 여부를 결정하는 증명 정보를 테스트하는 멤버 자격 조건입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="membershipCondition" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 매개 변수의 형식이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)">
      <summary>지정된 연결 액세스를 현재 코드 그룹에 추가합니다.</summary>
      <param name="originScheme">코드의 체계와 일치하는지 비교할 체계가 포함된 <see cref="T:System.String" />입니다.</param>
      <param name="connectAccess">코드에서 원래 서버에 다시 연결하는 데 사용할 수 있는 체계와 포트를 지정하는 <see cref="T:System.Security.Policy.CodeConnectAccess" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="originScheme" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="originScheme" />이 체계에 허용되지 않는 문자를 포함하는 경우  
  
또는 
 <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />이고 <paramref name="connectAccess" />가 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />을 체계로 지정합니다.</exception>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Copy">
      <summary>현재 코드 그룹의 전체 복사본을 만듭니다.</summary>
      <returns>해당 멤버 자격 조건과 자식 코드 그룹을 포함한 현재 코드 그룹의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)">
      <summary>지정된 코드 그룹이 현재 코드 그룹과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 코드 그룹과 비교할 <see cref="T:System.Security.Policy.NetCodeGroup" /> 개체입니다.</param>
      <returns>지정된 코드 그룹이 현재 코드 그룹과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules">
      <summary>현재 코드 그룹에 대한 연결 액세스 정보를 가져옵니다.</summary>
      <returns>연결 액세스 정보가 포함된 <see cref="T:System.Collections.DictionaryEntry" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.GetHashCode">
      <summary>현재 코드 그룹의 해시 코드를 가져옵니다.</summary>
      <returns>현재 코드 그룹의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess">
      <summary>현재 코드 그룹에 대한 연결 액세스 정보를 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>코드 그룹의 정책과 증명 정보 집합에 대한 정책의 하위 항목을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Policy.PolicyException">부모 코드 그룹과 모든 자식 그룹을 포함한 두 개 이상의 코드 그룹이 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />로 표시되어 있는 경우</exception>
      <returns>선택적 특성이 있는 코드 그룹에서 부여한 권한으로 이루어진 <see cref="T:System.Security.Policy.PolicyStatement" />이거나, 코드 그룹이 적용되지 않는 경우, 즉 멤버 자격 조건이 지정된 증명 정보와 일치하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>일치하는 코드 그룹을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>증명 정보를 통해 일치된 전체 코드 그룹 집합입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.AttributeString">
      <summary>코드 그룹에 대한 정책 문의 특성을 나타내는 문자열 표현을 가져옵니다.</summary>
      <returns>항상 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.MergeLogic">
      <summary>그룹 병합에 사용할 논리를 가져옵니다.</summary>
      <returns>"Union" 문자열입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.NetCodeGroup.PermissionSetName">
      <summary>코드 그룹에 대한 <see cref="T:System.Security.NamedPermissionSet" /> 이름을 가져옵니다.</summary>
      <returns>항상 "사이트 웹이 같습니다." 문자열입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.PermissionRequestEvidence">
      <summary>권한 요청을 나타내는 증명 정보를 정의합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)">
      <summary>코드 어셈블리의 권한 요청을 사용하여 <see cref="T:System.Security.Policy.PermissionRequestEvidence" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="request">코드를 실행하는 데 필요한 최소 권한입니다.</param>
      <param name="optional">코드에서 필요하지는 않지만 부여된 경우 사용할 수 있는 권한입니다.</param>
      <param name="denied">부여되지 않도록 코드에서 명시적으로 요청하는 권한입니다.</param>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.Copy">
      <summary>현재 <see cref="T:System.Security.Policy.PermissionRequestEvidence" />의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.PermissionRequestEvidence" />의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PermissionRequestEvidence.ToString">
      <summary>
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" />의 상태에 대한 문자열 표현을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.PermissionRequestEvidence" />의 상태에 대한 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.DeniedPermissions">
      <summary>부여되지 않도록 코드에서 명시적으로 요청하는 권한을 가져옵니다.</summary>
      <returns>부여되지 않도록 코드에서 명시적으로 요청하는 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.OptionalPermissions">
      <summary>코드에서 필요하지는 않지만 부여된 경우 사용할 수 있는 권한을 가져옵니다.</summary>
      <returns>코드에서 필요하지는 않지만 부여된 경우 사용할 수 있는 권한입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PermissionRequestEvidence.RequestedPermissions">
      <summary>코드를 실행하는 데 필요한 최소 권한을 가져옵니다.</summary>
      <returns>코드를 실행하는 데 필요한 최소 권한입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyException">
      <summary>정책에 의해 코드를 실행할 수 없을 때 throw되는 예외입니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.Security.Policy.PolicyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>serialize된 데이터를 사용하여 <see cref="T:System.Security.Policy.PolicyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="info">serialize된 개체 데이터를 보유하는 개체입니다.</param>
      <param name="context">원본 또는 대상에 대한 컨텍스트 정보입니다.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Security.Policy.PolicyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Security.Policy.PolicyException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="exception">현재 예외의 원인인 예외입니다. <paramref name="exception" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.Security.Policy.PolicyLevel">
      <summary>공용 언어 런타임의 보안 정책 수준을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>어셈블리가 확인해서는 안 될 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 개체의 목록에 지정된 <see cref="T:System.Security.Policy.StrongName" />에 해당하는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />을 추가합니다.</summary>
      <param name="sn">어셈블리가 확인해서는 안 될 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongName" /> 개체의 목록에 추가할 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />을 만들기 위해 사용하는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sn" /> 매개 변수에서 지정한 <see cref="T:System.Security.Policy.StrongName" />가 이미 완전히 신뢰된 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>어셈블리가 확인해서는 안 될 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 개체의 목록에 지정된 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />을 추가합니다.</summary>
      <param name="snMC">어셈블리가 확인해서는 안 될 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 개체의 목록에 추가할 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snMC" /> 매개 변수에서 지정한 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />가 이미 완전히 신뢰된 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>현재 정책 수준에 <see cref="T:System.Security.NamedPermissionSet" />를 추가합니다.</summary>
      <param name="permSet">현재 정책 수준에 추가할 <see cref="T:System.Security.NamedPermissionSet" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="permSet" /> 매개 변수의 이름이 <see cref="T:System.Security.NamedPermissionSet" />에 있는 기존 <see cref="T:System.Security.Policy.PolicyLevel" />와 같은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)">
      <summary>현재 정책 수준에 있는 <see cref="T:System.Security.NamedPermissionSet" />를 지정된 <see cref="T:System.Security.PermissionSet" />로 바꿉니다.</summary>
      <param name="name">바꿀 <see cref="T:System.Security.NamedPermissionSet" />의 이름입니다.</param>
      <param name="pSet">
        <paramref name="name" /> 매개 변수에서 지정한 <see cref="T:System.Security.PermissionSet" />을 바꾸는 <see cref="T:System.Security.NamedPermissionSet" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="pSet" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 예약된 권한 집합의 이름과 같은 경우  
  
또는 
<paramref name="pSet" /> 매개 변수에서 지정한 <see cref="T:System.Security.PermissionSet" />가 없는 경우</exception>
      <returns>바꾼 <see cref="T:System.Security.NamedPermissionSet" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.CreateAppDomainLevel">
      <summary>애플리케이션 도메인 정책 수준에 사용할 새 정책 수준을 만듭니다.</summary>
      <returns>새로 만든 <see cref="T:System.Security.Policy.PolicyLevel" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수에서 지정한 <see cref="T:System.Security.SecurityElement" />가 잘못된 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)">
      <summary>지정된 이름의 현재 정책 수준에 있는 <see cref="T:System.Security.NamedPermissionSet" />를 반환합니다.</summary>
      <param name="name">찾을 <see cref="T:System.Security.NamedPermissionSet" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>지정된 이름의 현재 정책 수준에 <see cref="T:System.Security.NamedPermissionSet" />가 있으면 이를 반환하고, 없으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Recover">
      <summary>이 <see cref="T:System.Security.Policy.PolicyLevel" />의 구성 파일을 마지막으로 저장하기 이전의 정책 상태를 반영하는 마지막 백업으로 바꾸고 마지막으로 저장한 상태로 되돌립니다.</summary>
      <exception cref="T:System.Security.Policy.PolicyException">정책 수준에 유효한 구성 파일이 없는 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)">
      <summary>정책 수준이 정책을 확인하는 데 사용하는 어셈블리 목록에서 지정된 <see cref="T:System.Security.Policy.StrongName" />의 어셈블리를 제거합니다.</summary>
      <param name="sn">정책을 확인하는 데 사용되는 어셈블리 목록에서 제거할 어셈블리의 <see cref="T:System.Security.Policy.StrongName" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sn" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sn" /> 매개 변수에서 지정한 <see cref="T:System.Security.Policy.StrongName" />의 어셈블리가 완전히 신뢰되지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)">
      <summary>정책 수준이 정책을 확인하는 데 사용하는 어셈블리 목록에서 지정된 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />의 어셈블리를 제거합니다.</summary>
      <param name="snMC">정책을 확인하는 데 사용되는 어셈블리 목록에서 제거할 어셈블리의 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="snMC" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="snMC" /> 매개 변수에서 지정한 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />이 완전히 신뢰되지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)">
      <summary>현재 정책 수준에서 지정된 <see cref="T:System.Security.NamedPermissionSet" />를 제거합니다.</summary>
      <param name="permSet">현재 정책 수준에서 제거할 <see cref="T:System.Security.NamedPermissionSet" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="permSet" /> 매개 변수에서 지정한 <see cref="T:System.Security.NamedPermissionSet" />가 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permSet" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>제거된 <see cref="T:System.Security.NamedPermissionSet" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)">
      <summary>현재 정책 수준에서 지정된 이름의 <see cref="T:System.Security.NamedPermissionSet" />를 제거합니다.</summary>
      <param name="name">제거할 <see cref="T:System.Security.NamedPermissionSet" />의 이름입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 예약된 권한 집합의 이름과 같은 경우  
  
또는 
지정된 이름의 <see cref="T:System.Security.NamedPermissionSet" />가 없는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>제거된 <see cref="T:System.Security.NamedPermissionSet" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Reset">
      <summary>현재 정책 수준을 기본 상태로 되돌립니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)">
      <summary>정책 수준에 대한 증명 정보를 기반으로 하여 정책을 확인하고 결과 <see cref="T:System.Security.Policy.PolicyStatement" />를 반환합니다.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" />을 확인하는 데 사용되는 <see cref="T:System.Security.Policy.PolicyLevel" />입니다.</param>
      <exception cref="T:System.Security.Policy.PolicyException">정책 수준에 단독으로 표시된 여러 코드 그룹이 일치하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>결과 <see cref="T:System.Security.Policy.PolicyStatement" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>정책 수준에서 정책을 확인하고 증명 정보와 일치하는 코드 그룹 트리의 루트를 반환합니다.</summary>
      <param name="evidence">정책을 확인하는 데 사용되는 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <exception cref="T:System.Security.Policy.PolicyException">정책 수준에 단독으로 표시된 여러 코드 그룹이 일치하는 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>지정된 증명 정보와 일치하는 코드 그룹 트리의 루트를 나타내는 <see cref="T:System.Security.Policy.CodeGroup" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyLevel.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.FullTrustAssemblies">
      <summary>어셈블리가 보안 정책을 확인하기 위해 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 개체의 목록을 가져옵니다.</summary>
      <returns>어셈블리가 보안 정책을 확인하기 위해 어셈블리 그룹의 멤버인지 여부를 확인하는 데 사용되는 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 개체의 목록입니다. 목록에 없는 어셈블리의 보안 정책을 확인하는 동안 이러한 어셈블리를 완전히 신뢰합니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Label">
      <summary>정책 수준에 대한 설명 레이블을 가져옵니다.</summary>
      <returns>정책 수준과 관련된 레이블입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.NamedPermissionSets">
      <summary>정책 수준에 대해 정의한 명명된 권한 집합의 목록을 가져옵니다.</summary>
      <returns>정책 수준에 대해 정의한 명명된 권한 집합의 목록입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.RootCodeGroup">
      <summary>정책 수준에 대한 루트 코드 그룹을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PolicyLevel.RootCodeGroup" />의 값이 <see langword="null" />인 경우</exception>
      <returns>정책 수준 코드 그룹 트리의 루트인 <see cref="T:System.Security.Policy.CodeGroup" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.StoreLocation">
      <summary>정책 파일이 저장되는 경로를 가져옵니다.</summary>
      <returns>정책 파일이 저장되는 경로 또는 <see langword="null" />(<see cref="T:System.Security.Policy.PolicyLevel" />의 스토리지 위치가 없는 경우)입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyLevel.Type">
      <summary>정책 수준의 형식을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.PolicyLevelType" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatement">
      <summary>특정 증명 정보 집합이 있는 코드에 적용되는 권한과 기타 정보를 설명하는 <see cref="T:System.Security.Policy.CodeGroup" />의 설명을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)">
      <summary>지정된 <see cref="T:System.Security.Policy.PolicyStatement" />를 사용하여 <see cref="T:System.Security.PermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permSet">새 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Security.PermissionSet" />입니다.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)">
      <summary>지정된 <see cref="T:System.Security.Policy.PolicyStatement" /> 및 특성을 사용하여 <see cref="T:System.Security.PermissionSet" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permSet">새 인스턴스를 초기화하는 데 사용할 <see cref="T:System.Security.PermissionSet" />입니다.</param>
      <param name="attributes">
        <see cref="T:System.Security.Policy.PolicyStatementAttribute" /> 값의 비트 조합입니다.</param>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Copy">
      <summary>현재 정책 설명의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.PolicyStatement" />와 동일한 <see cref="P:System.Security.Policy.PolicyStatement.PermissionSet" /> 및 <see cref="P:System.Security.Policy.PolicyStatement.Attributes" />가 있는 <see cref="T:System.Security.Policy.PolicyStatement" />의 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.Equals(System.Object)">
      <summary>지정한 <see cref="T:System.Security.Policy.PolicyStatement" /> 개체가 현재 <see cref="T:System.Security.Policy.PolicyStatement" />과 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.PolicyStatement" />과 비교할 <see cref="T:System.Security.Policy.PolicyStatement" /> 개체입니다.</param>
      <returns>지정된<see langword="true" /> 가 현재 <see cref="T:System.Security.Policy.PolicyStatement" /> 과 같으면 <see cref="T:System.Security.Policy.PolicyStatement" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 보안 개체를 다시 만듭니다.</summary>
      <param name="et">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 매개 변수가 유효한 <see cref="T:System.Security.Policy.PolicyStatement" /> 인코딩이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 보안 개체를 다시 만듭니다.</summary>
      <param name="et">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 값의 조회를 위한 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="et" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="et" /> 매개 변수가 유효한 <see cref="T:System.Security.Policy.PolicyStatement" /> 인코딩이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 사용하기 적합한 <see cref="T:System.Security.Policy.PolicyStatement" /> 개체에 대한 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.PolicyStatement" /> 개체의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 값의 조회를 위한 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.Attributes">
      <summary>정책 설명의 특성을 가져오거나 설정합니다.</summary>
      <returns>정책 설명의 특성입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.AttributeString">
      <summary>정책 설명 특성에 대한 문자열 표현을 가져옵니다.</summary>
      <returns>정책 설명 특성을 나타내는 텍스트 문자열입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PolicyStatement.PermissionSet">
      <summary>정책 설명의 <see cref="T:System.Security.PermissionSet" />를 가져오거나 설정합니다.</summary>
      <returns>정책 설명의 <see cref="T:System.Security.PermissionSet" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.PolicyStatementAttribute">
      <summary>코드 그룹의 보안 정책에 대한 특수 특성 플래그를 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.All">
      <summary>모든 특성 플래그가 설정됩니다.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Exclusive">
      <summary>단독 코드 그룹 플래그입니다. 코드 그룹에 이 플래그 집합이 있으면 코드 그룹과 관련된 권한만 해당 코드 그룹에 속한 코드에 부여됩니다. 지정된 코드 조각과 일치하는 하나의 코드 그룹만 단독으로 설정될 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.LevelFinal">
      <summary>정책 수준이 하위 수준을 효과적으로 재정의하도록 하여 하위 정책 수준이 확인 작업의 일부로 평가되지 않도록 하는 정책 설명을 나타내는 플래그입니다.</summary>
    </member>
    <member name="F:System.Security.Policy.PolicyStatementAttribute.Nothing">
      <summary>플래그가 설정되지 않습니다.</summary>
    </member>
    <member name="T:System.Security.Policy.Publisher">
      <summary>코드 어셈블리의 Authenticode X.509v3 디지털 서명을 정책 평가의 증명 정보로 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Publisher.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>게시자의 공개 키가 들어 있는 Authenticode X.509v3 인증서를 사용하여 <see cref="T:System.Security.Policy.Publisher" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="cert">소프트웨어 게시자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cert" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Publisher.Copy">
      <summary>
        <see cref="T:System.Security.Policy.Publisher" />의 동일한 복사본을 만듭니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.Publisher" />의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Publisher" /> 클래스의 현재 인스턴스에 해당하는 ID 권한을 만듭니다.</summary>
      <param name="evidence">ID 권한을 만들 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <returns>지정된 <see cref="T:System.Security.Permissions.PublisherIdentityPermission" />에 대한 <see cref="T:System.Security.Policy.Publisher" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Security.Policy.Publisher" />가 지정된 개체와 같은지 비교합니다.</summary>
      <param name="o">현재 개체와 같은지 테스트할 <see cref="T:System.Security.Policy.Publisher" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> 매개 변수가 <see cref="T:System.Security.Policy.Publisher" /> 개체가 아닌 경우</exception>
      <returns>
        <see cref="T:System.Security.Policy.Publisher" /> 클래스의 두 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.GetHashCode">
      <summary>현재 <see cref="P:System.Security.Policy.Publisher.Certificate" />의 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="P:System.Security.Policy.Publisher.Certificate" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Publisher.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.Publisher" />의 문자열 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.Publisher" />의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Publisher.Certificate">
      <summary>게시자의 Authenticode X.509v3 인증서를 가져옵니다.</summary>
      <returns>게시자의 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.PublisherMembershipCondition">
      <summary>어셈블리의 소프트웨어 게시자의 Authenticode X.509v3 인증서를 테스트하여 해당 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>멤버를 확인하는 Authenticode X.509v3 인증서를 사용하여 <see cref="T:System.Security.Policy.PublisherMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate">소프트웨어 게시자의 공개 키가 들어 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.Equals(System.Object)">
      <summary>지정된 개체의 게시자 인증서가 현재 <see cref="T:System.Security.Policy.PublisherMembershipCondition" />에 들어 있는 게시자 인증서와 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.PublisherMembershipCondition" />과 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>지정된 개체의 게시자 인증서가 현재 <see cref="T:System.Security.Policy.PublisherMembershipCondition" />에 포함된 게시자 인증서와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToString">
      <summary>
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" />의 문자열 표현을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>
        <see cref="T:System.Security.Policy.PublisherMembershipCondition" />의 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.PublisherMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.PublisherMembershipCondition.Certificate" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.PublisherMembershipCondition.Certificate">
      <summary>멤버 자격 조건에서 테스트할 Authenticode X.509v3 인증서를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">속성 값이 <see langword="null" />인 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.Site">
      <summary>코드 어셈블리의 원본 웹 사이트를 정책 평가의 증명 정보로 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Site.#ctor(System.String)">
      <summary>코드 어셈블리의 원본 웹 사이트를 사용하여 <see cref="T:System.Security.Policy.Site" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">관련된 코드 어셈블리의 원본 웹 사이트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Site.Copy">
      <summary>
        <see cref="T:System.Security.Policy.Site" /> 개체의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.Site" /> 개체와 동일한 새 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateFromUrl(System.String)">
      <summary>지정된 URL에서 새 <see cref="T:System.Security.Policy.Site" /> 개체를 만듭니다.</summary>
      <param name="url">새 <see cref="T:System.Security.Policy.Site" /> 개체를 만들 URL입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> 매개 변수가 잘못된 URL인 경우  
  
또는 
<paramref name="url" /> 매개 변수가 파일 이름인 경우</exception>
      <returns>새 사이트 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>현재 <see cref="T:System.Security.Policy.Site" /> 개체에 해당하는 ID 권한을 만듭니다.</summary>
      <param name="evidence">ID 권한을 만들 증명 정보입니다.</param>
      <returns>현재 <see cref="T:System.Security.Policy.Site" /> 개체에 대한 사이트 ID 권한입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Security.Policy.Site" />가 지정된 개체와 같은지 비교합니다.</summary>
      <param name="o">현재 개체와 같은지 테스트할 개체입니다.</param>
      <returns>
        <see cref="T:System.Security.Policy.Site" /> 클래스의 두 인스턴스가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.GetHashCode">
      <summary>현재 웹 사이트 이름의 해시 코드를 반환합니다.</summary>
      <returns>현재 웹 사이트 이름의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Site.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.Site" /> 개체의 문자열 표현을 반환합니다.</summary>
      <returns>현재 사이트의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Site.Name">
      <summary>코드 어셈블리의 원본 웹 사이트를 가져옵니다.</summary>
      <returns>코드 어셈블리가 발생한 사이트의 이름입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.SiteMembershipCondition">
      <summary>어셈블리의 원본 사이트를 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.#ctor(System.String)">
      <summary>멤버를 확인하는 사이트의 이름을 사용하여 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="site">사이트 이름 또는 와일드카드 식입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="site" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="site" /> 매개 변수가 유효한 <see cref="T:System.Security.Policy.Site" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.Equals(System.Object)">
      <summary>지정된 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 개체의 원본 사이트가 현재 <see cref="T:System.Security.Policy.SiteMembershipCondition" />에 포함된 사이트와 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.SiteMembershipCondition" />과 비교할 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentException">현재 개체 또는 지정된 개체의 <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성이 <see langword="null" />인 경우</exception>
      <returns>지정된 <see cref="T:System.Security.Policy.SiteMembershipCondition" /> 개체의 원본 사이트가 현재 <see cref="T:System.Security.Policy.SiteMembershipCondition" />에 포함된 사이트와 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>멤버 자격 조건의 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.SiteMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.SiteMembershipCondition.Site">
      <summary>멤버 자격 조건에서 테스트할 사이트를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" />를 <see langword="null" />로 설정하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.SiteMembershipCondition.Site" />를 잘못된 <see cref="T:System.Security.Policy.Site" />로 설정하려고 한 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 사이트입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongName">
      <summary>코드 어셈블리의 강력한 이름을 정책 평가의 증명 정보로 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongName.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>강력한 이름의 공개 키 blob, 이름 및 버전을 사용하여 <see cref="T:System.Security.Policy.StrongName" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="blob">소프트웨어 게시자의 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />입니다.</param>
      <param name="name">강력한 이름 중 단순한 이름 부분입니다.</param>
      <param name="version">강력한 이름의 <see cref="T:System.Version" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="version" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 빈 문자열("")입니다.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongName.Copy">
      <summary>현재 <see cref="T:System.Security.Policy.StrongName" />의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.StrongName" />의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>현재 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />에 해당하는 <see cref="T:System.Security.Policy.StrongName" />을 만듭니다.</summary>
      <param name="evidence">
        <see cref="T:System.Security.Policy.Evidence" />을 만들 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />입니다.</param>
      <returns>지정된 <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />에 대한 <see cref="T:System.Security.Policy.StrongName" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.Equals(System.Object)">
      <summary>지정된 강력한 이름이 현재 강력한 이름과 같은지 여부를 확인합니다.</summary>
      <param name="o">현재 강력한 이름과 비교할 강력한 이름입니다.</param>
      <returns>지정된 강력한 이름이 현재 강력한 이름과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Policy.StrongName" />의 해시 코드를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.StrongName" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongName.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.StrongName" />의 문자열 표현을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.StrongName" />의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Name">
      <summary>현재 <see cref="T:System.Security.Policy.StrongName" />의 단순한 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.StrongName" />의 단순한 이름 부분입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.PublicKey">
      <summary>현재 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />의 <see cref="T:System.Security.Policy.StrongName" />를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />의 <see cref="T:System.Security.Policy.StrongName" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongName.Version">
      <summary>현재 <see cref="T:System.Version" />의 <see cref="T:System.Security.Policy.StrongName" />를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Version" />의 <see cref="T:System.Security.Policy.StrongName" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.StrongNameMembershipCondition">
      <summary>어셈블리의 강력한 이름을 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)">
      <summary>멤버를 확인하는 강력한 이름의 공개 키 blob, 이름 및 버전 번호를 사용하여 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="blob">소프트웨어 게시자의 강력한 이름 공개 키 blob입니다.</param>
      <param name="name">강력한 이름 중 단순한 이름 부분입니다.</param>
      <param name="version">강력한 이름의 버전 번호입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="blob" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우  
  
또는 
<paramref name="name" /> 매개 변수가 빈 문자열("")입니다.</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 <see cref="T:System.Security.Policy.Evidence" />입니다.</param>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Copy">
      <summary>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />의 동일한 복사본을 만듭니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.Equals(System.Object)">
      <summary>지정된 개체의 <see cref="T:System.Security.Policy.StrongName" />이 현재 <see cref="T:System.Security.Policy.StrongName" />에 포함된 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />과 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentException">현재 개체 또는 지정된 개체의 <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 속성이 <see langword="null" />인 경우</exception>
      <returns>지정된 개체의 <see cref="T:System.Security.Policy.StrongName" />이 현재 <see cref="T:System.Security.Policy.StrongName" />에 포함된 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.GetHashCode">
      <summary>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />에 대한 해시 코드를 반환합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />에 대한 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />의 문자열 표현을 만들고 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.StrongNameMembershipCondition" />의 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.StrongNameMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">
        <see cref="T:System.Security.Policy.PolicyLevel" /> 참조를 확인하는 데 사용되는 <see cref="T:System.Security.NamedPermissionSet" /> 컨텍스트입니다.</param>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Name">
      <summary>멤버 자격 조건에서 테스트할 <see cref="T:System.Security.Policy.StrongName" />의 단순한 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">값이 <see langword="null" />인 경우  
  
또는 
값이 빈 문자열("")인 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 <see cref="T:System.Security.Policy.StrongName" />의 단순한 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey">
      <summary>멤버 자격 조건에서 테스트할 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />의 <see cref="T:System.Security.Policy.StrongName" />을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.StrongNameMembershipCondition.PublicKey" />를 <see langword="null" />로 설정하려고 한 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />의 <see cref="T:System.Security.Policy.StrongName" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.StrongNameMembershipCondition.Version">
      <summary>멤버 자격 조건에서 테스트할 <see cref="T:System.Version" />의 <see cref="T:System.Security.Policy.StrongName" />을 가져오거나 설정합니다.</summary>
      <returns>멤버 자격 조건에서 테스트할 <see cref="T:System.Version" />의 <see cref="T:System.Security.Policy.StrongName" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerContext">
      <summary>애플리케이션을 실행하도록 결정할 때와 애플리케이션을 실행할 새 <see cref="T:System.AppDomain" />에 보안을 설정할 때 고려할 트러스트 관리자의 컨텍스트를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor">
      <summary>
        <see cref="T:System.Security.Policy.TrustManagerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Policy.TrustManagerContext.#ctor(System.Security.Policy.TrustManagerUIContext)">
      <summary>지정된 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 개체를 사용하여 <see cref="T:System.Security.Policy.TrustManagerContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="uiContext">사용할 트러스트 관리자 사용자 인터페이스의 형식을 지정하는 <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 값 중 하나입니다.</param>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.IgnorePersistedDecision">
      <summary>애플리케이션 보안 관리자가 유지된 결정을 모두 무시하고 트러스트 관리자를 호출해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>트러스트 관리자를 호출하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.KeepAlive">
      <summary>나중에 애플리케이션 트러스트 확인을 손쉽게 요청할 수 있도록 트러스트 관리자가 이 애플리케이션의 상태를 캐시해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>상태 데이터를 캐시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.NoPrompt">
      <summary>트러스트 관리자가 사용자에게 신뢰 결정에 대해 묻는 메시지를 표시해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>사용자에게 메시지를 표시하지 않으려면 <see langword="true" />이고, 메시지를 표시하려면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.Persist">
      <summary>동의 대화 상자에 대한 사용자의 응답을 유지해야 하는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>상태 데이터를 캐시하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="true" />입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.PreviousApplicationIdentity">
      <summary>이전 애플리케이션 ID의 ID를 가져오거나 설정합니다.</summary>
      <returns>이전 <see cref="T:System.ApplicationIdentity" />를 나타내는 <see cref="T:System.ApplicationIdentity" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.TrustManagerContext.UIContext">
      <summary>트러스트 관리자가 표시해야 하는 사용자 인터페이스의 형식을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Security.Policy.TrustManagerUIContext" /> 값 중 하나입니다. 기본값은 <see cref="F:System.Security.Policy.TrustManagerUIContext.Run" />입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.TrustManagerUIContext">
      <summary>트러스트 관리자가 신뢰 결정에 사용해야 하는 UI(사용자 인터페이스) 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Install">
      <summary>설치 UI입니다.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Run">
      <summary>실행 UI입니다.</summary>
    </member>
    <member name="F:System.Security.Policy.TrustManagerUIContext.Upgrade">
      <summary>업그레이드 UI입니다.</summary>
    </member>
    <member name="T:System.Security.Policy.UnionCodeGroup">
      <summary>현재 코드 그룹의 정책 문과 일치하는 모든 자식 코드 그룹의 정책 문을 통합한 정책 문을 갖는 코드 그룹을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
      <summary>
        <see cref="T:System.Security.Policy.UnionCodeGroup" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="membershipCondition">이 코드 그룹에 정책이 적용되는지 여부를 결정하는 증명 정보를 테스트하는 멤버 자격 조건입니다.</param>
      <param name="policy">멤버 자격 조건과 일치하는 코드를 부여하는 권한 집합 및 특성 형식인 코드 그룹의 정책 문입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="membershipCondition" /> 매개 변수의 형식이 올바르지 않은 경우  
  
또는 
<paramref name="policy" /> 매개 변수의 형식이 올바르지 않은 경우</exception>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Copy">
      <summary>현재 코드 그룹의 전체 복사본을 만듭니다.</summary>
      <returns>해당 멤버 자격 조건과 자식 코드 그룹을 포함한 현재 코드 그룹의 동일한 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)">
      <summary>코드 그룹의 정책과 증명 정보 집합에 대한 정책의 하위 항목을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Policy.PolicyException">부모 코드 그룹과 모든 자식 그룹을 포함한 두 개 이상의 코드 그룹이 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />로 표시되어 있는 경우</exception>
      <returns>선택적 특성이 있는 코드 그룹에서 부여한 권한으로 이루어진 정책 문이거나, 코드 그룹이 적용되지 않는 경우, 즉 멤버 자격 조건이 지정된 증명 정보와 일치하지 않는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
      <summary>일치하는 코드 그룹을 확인합니다.</summary>
      <param name="evidence">어셈블리에 대한 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>증명 정보를 통해 일치된 전체 코드 그룹 집합입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.UnionCodeGroup.MergeLogic">
      <summary>병합 논리를 가져옵니다.</summary>
      <returns>항상 "통합" 문자열입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.Url">
      <summary>코드 어셈블리의 원본 URL을 정책 평가의 증명 정보로 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Url.#ctor(System.String)">
      <summary>코드 어셈블리의 원본 URL을 사용하여 <see cref="T:System.Security.Policy.Url" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="name">관련된 코드 어셈블리의 원본 URL입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Url.Copy">
      <summary>증명 정보 개체의 새 복사본을 만듭니다.</summary>
      <returns>증명 정보 개체의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Url" /> 증명 정보 클래스의 현재 인스턴스에 해당하는 ID 권한을 만듭니다.</summary>
      <param name="evidence">ID 권한을 만들 증명 정보 집합입니다.</param>
      <returns>지정된 <see cref="T:System.Security.Permissions.UrlIdentityPermission" /> 증명 정보에 대한 <see cref="T:System.Security.Policy.Url" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Security.Policy.Url" /> 증명 정보 개체가 지정된 개체와 같은지 비교합니다.</summary>
      <param name="o">현재 개체와 같은지 테스트할 <see cref="T:System.Security.Policy.Url" /> 증명 정보 개체입니다.</param>
      <returns>두 <see cref="T:System.Security.Policy.Url" /> 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.GetHashCode">
      <summary>현재 URL의 해시 코드를 가져옵니다.</summary>
      <returns>현재 URL의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Url.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.Url" />의 문자열 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.Url" />의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Url.Value">
      <summary>코드 어셈블리의 원본 URL을 가져옵니다.</summary>
      <returns>코드 어셈블리의 원본 URL입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.UrlMembershipCondition">
      <summary>어셈블리의 URL을 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.#ctor(System.String)">
      <summary>멤버를 확인하는 URL을 사용하여 <see cref="T:System.Security.Policy.UrlMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="url">테스트할 URL입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" />은 절대 URL이어야 합니다.</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.Equals(System.Object)">
      <summary>지정된 개체의 URL이 현재 <see cref="T:System.Security.Policy.UrlMembershipCondition" />에 포함된 URL과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.UrlMembershipCondition" />과 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">현재 개체 또는 지정된 개체의 <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성이 <see langword="null" />인 경우</exception>
      <returns>지정된 개체의 URL이 현재 <see cref="T:System.Security.Policy.UrlMembershipCondition" />에 포함된 URL과 동일하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>멤버 자격 조건의 상태에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.UrlMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" /> 속성은 <see langword="null" />입니다.</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.UrlMembershipCondition.Url">
      <summary>멤버 자격 조건에서 테스트할 URL을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.UrlMembershipCondition.Url" />를 <see langword="null" />로 설정하려고 한 경우</exception>
      <exception cref="T:System.ArgumentException">값이 절대 URL이 아닙니다.</exception>
      <returns>멤버 자격 조건에서 테스트할 URL입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.Zone">
      <summary>코드 어셈블리의 보안 영역을 정책 평가의 증명 정보로 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.Zone.#ctor(System.Security.SecurityZone)">
      <summary>코드 어셈블리의 원본 영역을 사용하여 <see cref="T:System.Security.Policy.Zone" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="zone">관련된 코드 어셈블리의 원본 영역입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> 매개 변수가 유효한 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.Zone.Copy">
      <summary>증명 정보 개체의 동일한 복사본을 만듭니다.</summary>
      <returns>증명 정보 개체의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateFromUrl(System.String)">
      <summary>지정된 URL에서 새 영역을 만듭니다.</summary>
      <param name="url">영역을 만들 URL입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>지정된 URL의 새 영역입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.CreateIdentityPermission(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.Security.Policy.Zone" /> 증명 정보 클래스의 현재 인스턴스에 해당하는 ID 권한을 만듭니다.</summary>
      <param name="evidence">ID 권한을 만들 증명 정보 집합입니다.</param>
      <returns>지정된 <see cref="T:System.Security.Permissions.ZoneIdentityPermission" /> 증명 정보에 대한 <see cref="T:System.Security.Policy.Zone" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.Equals(System.Object)">
      <summary>현재 <see cref="T:System.Security.Policy.Zone" /> 증명 정보 개체가 지정된 개체와 같은지 비교합니다.</summary>
      <param name="o">현재 개체와 같은지 테스트할 <see cref="T:System.Security.Policy.Zone" /> 증명 정보 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> 매개 변수가 <see cref="T:System.Security.Policy.Zone" /> 개체가 아닌 경우</exception>
      <returns>두 <see cref="T:System.Security.Policy.Zone" /> 개체가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.GetHashCode">
      <summary>현재 영역의 해시 코드를 가져옵니다.</summary>
      <returns>현재 영역의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.Zone.ToString">
      <summary>현재 <see cref="T:System.Security.Policy.Zone" />의 문자열 표현을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Policy.Zone" />의 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.Zone.SecurityZone">
      <summary>코드 어셈블리의 원본 영역을 가져옵니다.</summary>
      <returns>코드 어셈블리의 원본 영역입니다.</returns>
    </member>
    <member name="T:System.Security.Policy.ZoneMembershipCondition">
      <summary>어셈블리의 원본 영역을 테스트하여 어셈블리가 코드 그룹에 속하는지 여부를 확인합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.#ctor(System.Security.SecurityZone)">
      <summary>멤버를 확인하는 영역을 사용하여 <see cref="T:System.Security.Policy.ZoneMembershipCondition" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="zone">테스트할 <see cref="T:System.Security.SecurityZone" />입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="zone" /> 매개 변수가 유효한 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Check(System.Security.Policy.Evidence)">
      <summary>지정된 증명 정보가 멤버 자격 조건에 맞는지 여부를 확인합니다.</summary>
      <param name="evidence">테스트할 증명 정보 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>지정된 증명 정보가 멤버 자격 조건에 맞으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Copy">
      <summary>멤버 자격 조건의 동일한 복사본을 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>현재 멤버 자격 조건의 동일한 새 복사본입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.Equals(System.Object)">
      <summary>지정된 개체의 영역이 현재 <see cref="T:System.Security.Policy.ZoneMembershipCondition" />에 포함된 영역과 동일한지 여부를 확인합니다.</summary>
      <param name="o">현재 <see cref="T:System.Security.Policy.ZoneMembershipCondition" />과 비교할 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">현재 개체 또는 지정된 개체의 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">현재 개체 또는 지정된 개체의 <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>지정된 개체의 영역이 현재 <see cref="T:System.Security.Policy.ZoneMembershipCondition" />에 포함된 영역과 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="e">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> 매개 변수가 잘못된 멤버 자격 조건 요소인 경우</exception>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.GetHashCode">
      <summary>현재 멤버 자격 조건의 해시 코드를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>현재 멤버 자격 조건의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToString">
      <summary>멤버 자격 조건의 문자열 표현을 만들어 반환합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>멤버 자격 조건의 상태에 대한 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Security.Policy.ZoneMembershipCondition.ToXml(System.Security.Policy.PolicyLevel)">
      <summary>보안 개체 및 해당 보안 개체의 현재 상태에 대한 XML 인코딩을 지정된 <see cref="T:System.Security.Policy.PolicyLevel" />로 만듭니다.</summary>
      <param name="level">명명된 권한 집합 참조를 확인하는 데 사용하는 정책 수준 컨텍스트입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성은 <see langword="null" />입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" /> 속성이 올바른 <see cref="T:System.Security.SecurityZone" />이 아닌 경우</exception>
      <returns>모든 상태 정보를 포함하는 보안 개체의 XML 인코딩입니다.</returns>
    </member>
    <member name="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone">
      <summary>멤버 자격 조건에서 테스트할 영역을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">값이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Security.Policy.ZoneMembershipCondition.SecurityZone" />를 잘못된 <see cref="T:System.Security.SecurityZone" />로 설정하려고 한 경우</exception>
      <returns>멤버 자격 조건에서 테스트할 영역입니다.</returns>
    </member>
    <member name="T:System.Security.PolicyLevelType">
      <summary>관리 코드 정책 수준의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.AppDomain">
      <summary>애플리케이션에 있는 모든 관리 코드에 대한 보안 정책입니다.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Enterprise">
      <summary>엔터프라이즈 내에 있는 모든 관리 코드에 대한 보안 정책입니다.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.Machine">
      <summary>컴퓨터에서 실행되는 모든 관리 코드에 대한 보안 정책입니다.</summary>
    </member>
    <member name="F:System.Security.PolicyLevelType.User">
      <summary>사용자가 실행하는 모든 관리 코드에 대한 보안 정책입니다.</summary>
    </member>
    <member name="T:System.Security.SecurityContext">
      <summary>여러 스레드 사이에 전송되는 실행 컨텍스트에 대한 모든 보안 관련 데이터를 캡슐화하여 전파합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.Capture">
      <summary>현재 스레드에 대한 보안 컨텍스트를 캡처합니다.</summary>
      <returns>현재 스레드에 대한 보안 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.CreateCopy">
      <summary>현재 보안 컨텍스트의 복사본을 만듭니다.</summary>
      <exception cref="T:System.InvalidOperationException">현재 보안 컨텍스트가 이전에 사용된 적이 있거나, 여러 애플리케이션 도메인 사이에 마샬링되었거나, <see cref="M:System.Security.SecurityContext.Capture" /> 메서드를 통해 가져오지 못한 경우</exception>
      <returns>현재 스레드에 대한 보안 컨텍스트입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.Dispose">
      <summary>
        <see cref="T:System.Security.SecurityContext" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityContext.IsFlowSuppressed">
      <summary>보안 컨텍스트 흐름이 억제되었는지 여부를 확인합니다.</summary>
      <returns>흐름이 억제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.IsWindowsIdentityFlowSuppressed">
      <summary>현재 보안 컨텍스트의 Windows ID 부분의 흐름이 억제되었는지 여부를 확인합니다.</summary>
      <returns>흐름이 억제되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.RestoreFlow">
      <summary>여러 비동기 스레드 사이의 보안 컨텍스트 흐름을 복원합니다.</summary>
      <exception cref="T:System.InvalidOperationException">보안 컨텍스트가 <see langword="null" /> 또는 빈 문자열인 경우</exception>
    </member>
    <member name="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)">
      <summary>현재 스레드의 지정한 보안 컨텍스트에서 지정한 메서드를 실행합니다.</summary>
      <param name="securityContext">설정할 보안 컨텍스트입니다.</param>
      <param name="callback">지정한 보안 컨텍스트에서 실행할 메서드를 나타내는 대리자입니다.</param>
      <param name="state">콜백 메서드로 전달할 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="securityContext" />이(가) <see langword="null" />인 경우  
  
또는 
 캡처 작업을 통해 <paramref name="securityContext" />를 가져오지 않은 경우  
  
또는 
 <paramref name="securityContext" />가 이미 <see cref="M:System.Security.SecurityContext.Run(System.Security.SecurityContext,System.Threading.ContextCallback,System.Object)" /> 메서드 호출에 대한 인수로 사용된 경우</exception>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlow">
      <summary>여러 비동기 스레드 사이의 보안 컨텍스트 흐름을 억제합니다.</summary>
      <returns>흐름을 복원하기 위한 <see cref="T:System.Threading.AsyncFlowControl" /> 구조체입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityContext.SuppressFlowWindowsIdentity">
      <summary>여러 비동기 스레드 사이에서 현재 보안 컨텍스트의 Windows ID 부분의 흐름을 억제합니다.</summary>
      <returns>흐름을 복원하기 위한 구조체입니다.</returns>
    </member>
    <member name="T:System.Security.SecurityContextSource">
      <summary>보안 컨텍스트의 소스를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAppDomain">
      <summary>현재 애플리케이션 도메인이 보안 컨텍스트의 소스입니다.</summary>
    </member>
    <member name="F:System.Security.SecurityContextSource.CurrentAssembly">
      <summary>현재 어셈블리가 보안 컨텍스트의 소스입니다.</summary>
    </member>
    <member name="T:System.Security.SecurityManager">
      <summary>보안 시스템과 상호 작용하는 클래스에 대한 주 액세스 지점을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture">
      <summary>나중 시점에 현재 스레드의 보안 상태를 다시 만들어야 하는 경우 현재 스레드에서 보안 컨텍스트 캡처를 요구할지 여부를 결정합니다.</summary>
      <returns>스택에 부분적으로 신뢰할 수 있는 애플리케이션 도메인, 부분적으로 신뢰할 수 있는 어셈블리 및 현재 활성인 <see cref="M:System.Security.CodeAccessPermission.PermitOnly" /> 또는 <see cref="M:System.Security.CodeAccessPermission.Deny" /> 한정자가 포함되어 있으면 <see langword="false" />이고, 공용 언어 런타임에서 스택에 이러한 한정자가 포함되어 있지 않음을 보장할 수 없으면 <see langword="true" />입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)">
      <summary>제공된 증명 정보가 있는 애플리케이션에 부여하는 데 안전한 권한 집합을 가져옵니다.</summary>
      <param name="evidence">권한 집합에 일치시킬 호스트 증명 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="evidence" />이(가) <see langword="null" />인 경우</exception>
      <returns>제공된 증명 정보가 있는 애플리케이션에 대한 권한 부여 설정으로 사용 가능한 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)">
      <summary>현재 어셈블리에 부여된 영역 ID 및 URL ID 권한 집합을 가져옵니다.</summary>
      <param name="zone">부여된 <see cref="T:System.Collections.ArrayList" /> 개체의 <see cref="P:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone" />가 들어 있는 출력 매개 변수입니다.</param>
      <param name="origin">부여된 <see cref="T:System.Collections.ArrayList" /> 개체의 <see cref="T:System.Security.Permissions.UrlIdentityPermission" />가 들어 있는 출력 매개 변수입니다.</param>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" />에 대한 요청이 실패한 경우</exception>
    </member>
    <member name="M:System.Security.SecurityManager.IsGranted(System.Security.IPermission)">
      <summary>호출자에 사용 권한을 부여했는지 여부를 확인합니다.</summary>
      <param name="perm">호출자 부여에 대하여 검사할 사용 권한입니다.</param>
      <returns>
        <paramref name="perm" /> 권한 등의 사용 권한이 호출자에게 부여되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)">
      <summary>지정된 파일에서 <see cref="T:System.Security.Policy.PolicyLevel" />을 로드합니다.</summary>
      <param name="path">보안 정책 정보를 포함하는 파일에 대한 실제 파일 경로입니다.</param>
      <param name="type">로드할 정책 수준 유형을 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> 매개 변수가 나타내는 파일이 없습니다.</exception>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.  
  
또는 
이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />가 없습니다.  
  
또는 
이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />가 없습니다.  
  
또는 
이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />가 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>로드된 정책 수준입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)">
      <summary>지정된 문자열에서 <see cref="T:System.Security.Policy.PolicyLevel" />을 로드합니다.</summary>
      <param name="str">구성 파일에 나타나는 것과 같은 형식으로 된 보안 정책 수준의 XML 표현입니다.</param>
      <param name="type">로드할 정책 수준 유형을 지정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="str" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="str" /> 매개 변수가 잘못된 경우</exception>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
      <returns>로드된 정책 수준입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.PolicyHierarchy">
      <summary>컴퓨터 정책 및 사용자 정책과 같은 보안 정책 계층 구조에 수준별로 액세스하기 위한 열거자를 제공합니다.</summary>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
      <returns>보안 정책 계층 구조를 구성하는 <see cref="T:System.Security.Policy.PolicyLevel" /> 개체에 대한 열거자입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)">
      <summary>지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</summary>
      <param name="evidence">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>보안 시스템에서 부여할 수 있는 사용 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)">
      <summary>지정한 증명 정보 및 요청에 따라 코드에 부여할 권한을 결정합니다.</summary>
      <param name="evidence">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</param>
      <param name="reqdPset">코드를 실행하는 데 필요한 권한입니다.</param>
      <param name="optPset">부여될 경우에 사용되지만 코드가 실행되는 데 필요하지는 않은 선택적 권한입니다.</param>
      <param name="denyPset">정책에서 허용하는 경우에도 코드에 절대 부여되지 않아야 하는 거부된 권한입니다.</param>
      <param name="denied">부여되지 않은 사용 권한 집합을 포함하는 출력 매개 변수입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <exception cref="T:System.Security.Policy.PolicyException">정책이 <paramref name="reqdPset" /> 매개 변수로 지정된 최소 필수 권한을 부여하지 못하는 경우</exception>
      <returns>보안 시스템에서 부여하는 사용 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])">
      <summary>지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</summary>
      <param name="evidences">정책을 평가하는 데 사용되는 증명 정보 개체의 배열입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>제공된 모든 증명 정보에 적합한 사용 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)">
      <summary>지정한 증명 정보와 일치하는 코드 그룹의 컬렉션을 가져옵니다.</summary>
      <param name="evidence">정책이 평가되는 증명 정보 집합입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>증명 정보와 일치하는 코드 그룹 집합의 열거형입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)">
      <summary>
        <see cref="T:System.AppDomain" /> 수준의 정책을 제외하고 지정한 증명 정보에 따라 코드에 부여할 권한을 결정합니다.</summary>
      <param name="evidence">정책을 평가하는 데 사용되는 증명 정보 집합입니다.</param>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <returns>보안 시스템에서 부여할 수 있는 사용 권한 집합입니다.</returns>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicy">
      <summary>수정된 보안 정책 상태를 저장합니다.</summary>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
    </member>
    <member name="M:System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)">
      <summary>
        <see cref="M:System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)" />을 사용하여 로드된 수정된 보안 정책 수준을 저장합니다.</summary>
      <param name="level">저장할 정책 수준 개체입니다.</param>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
      <exception cref="T:System.NotSupportedException">이 메서드는 .NET Framework 4에서 더 이상 사용되지 않는 CAS(코드 액세스 보안) 정책을 사용합니다. 이전 버전의 .NET Framework와의 호환성에 대한 CAS 정책을 사용하도록 설정하려면 &lt;legacyCasPolicy&gt; 요소를 사용합니다.</exception>
    </member>
    <member name="P:System.Security.SecurityManager.CheckExecutionRights">
      <summary>코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />이 있어야 실행할 수 있는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
      <returns>코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" />이 있어야 실행할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.SecurityManager.SecurityEnabled">
      <summary>보안의 활성화 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.Security.SecurityException">이 메서드를 호출하는 코드에 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" />가 없습니다.</exception>
      <returns>보안이 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.SecurityState">
      <summary>
        <see cref="T:System.AppDomainManager" /> 개체에서 작업의 보안 상태를 요청하기 위한 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityState.#ctor">
      <summary>
        <see cref="T:System.Security.SecurityState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityState.EnsureState">
      <summary>파생 클래스에서 재정의되는 경우 <see cref="T:System.Security.SecurityState" />가 나타내는 상태를 호스트에서 사용할 수 있는지 확인합니다.</summary>
    </member>
    <member name="M:System.Security.SecurityState.IsStateAvailable">
      <summary>이 <see cref="T:System.Security.SecurityState" /> 클래스의 구현에 대한 상태를 현재 호스트에서 사용할 수 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>상태를 사용할 수 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.SecurityZone">
      <summary>보안 정책에 사용된 보안 영역에 해당하는 정수 값을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Internet">
      <summary>인터넷 영역은 다른 영역에 속하지 않는 인터넷 상의 웹 사이트에 사용됩니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Intranet">
      <summary>로컬 인트라넷 영역은 회사 인트라넷 상의 콘텐츠에 사용됩니다. 서버 및 정보는 회사의 방화벽 안에 있으므로 사용자 또는 회사에서는 인트라넷 상의 콘텐츠에 더 높은 신뢰 수준을 할당할 수 있습니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.MyComputer">
      <summary>로컬 컴퓨터 영역은 사용자의 컴퓨터에 있는 콘텐츠에 사용되는 암시적 영역입니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.NoZone">
      <summary>지정된 영역이 없습니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Trusted">
      <summary>신뢰할 수 있는 사이트 영역은 인터넷의 다른 사이트보다 더 신뢰할 수 있는 웹 사이트 상의 콘텐츠에 사용됩니다. 사용자가 이 영역을 사용하여 이러한 사이트에 보다 높은 수준의 신뢰를 할당하면 인증 요청의 수를 최소화할 수 있습니다. 신뢰할 수 있는 이러한 웹 사이트의 URL을 사용자가 이 영역으로 매핑해야 합니다.</summary>
    </member>
    <member name="F:System.Security.SecurityZone.Untrusted">
      <summary>제한된 사이트 영역은 다운로드할 때 문제가 발생할 수 있거나 이전에 문제를 발생시킨 콘텐츠를 포함한 웹 사이트에 사용됩니다. 신뢰할 수 없는 이러한 웹 사이트의 URL은 사용자에 의해 이 영역으로 매핑되어야 합니다.</summary>
    </member>
    <member name="T:System.Security.XmlSyntaxException">
      <summary>XML 분석에 구문 오류가 있을 때 throw되는 예외입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor">
      <summary>기본 속성을 사용하여 <see cref="T:System.Security.XmlSyntaxException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32)">
      <summary>예외가 발견된 줄 번호를 사용하여 <see cref="T:System.Security.XmlSyntaxException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lineNumber">XML 구문 오류가 발견된 XML 스트림의 줄 번호입니다.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.Int32,System.String)">
      <summary>지정된 오류 메시지와 예외가 발견된 줄 번호를 사용하여 <see cref="T:System.Security.XmlSyntaxException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="lineNumber">XML 구문 오류가 발견된 XML 스트림의 줄 번호입니다.</param>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String)">
      <summary>지정된 오류 메시지를 사용하여 <see cref="T:System.Security.XmlSyntaxException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
    </member>
    <member name="M:System.Security.XmlSyntaxException.#ctor(System.String,System.Exception)">
      <summary>지정된 오류 메시지와 해당 예외의 원인인 내부 예외에 대한 참조를 사용하여 <see cref="T:System.Security.XmlSyntaxException" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="message">예외에 대한 이유를 설명하는 오류 메시지입니다.</param>
      <param name="inner">현재 예외의 원인인 예외입니다. <paramref name="inner" /> 매개 변수가 <see langword="null" />이 아니면 현재 예외는 내부 예외를 처리하는 <see langword="catch" /> 블록에서 발생합니다.</param>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermission">
      <summary>서비스 컨트롤러의 코드 액세스 보안 권한을 제어할 수 있습니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>리소스에 대한 지정된 액세스를 사용하여 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" /> 매개 변수가 <see cref="T:System.Security.Permissions.PermissionState" />의 유효한 값이 아닙니다.</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>지정된 권한 액세스 수준, 서비스가 상주하는 컴퓨터 이름, 시스템에서 서비스를 식별하는 약식 이름을 사용하여 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="machineName">서비스가 상주하는 컴퓨터 이름입니다.</param>
      <param name="serviceName">시스템에서 서비스를 식별하는 약식 이름입니다.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermission.#ctor(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>지정된 권한 항목을 사용하여 <see cref="T:System.ServiceProcess.ServiceControllerPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccessEntries">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체의 배열입니다. <see cref="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries" /> 속성은 이 값으로 설정되어 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permissionAccessEntries" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermission.PermissionEntries">
      <summary>이 사용 권한 요청에 대한 사용 권한 항목의 컬렉션을 가져옵니다.</summary>
      <returns>이 권한 요청에 대한 사용 권한 항목을 포함하는 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />입니다.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAccess">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" /> 권한 클래스에서 사용되는 액세스 수준을 정의합니다.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Browse">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" />는 기존 서비스에 연결할 수 있지만 제어할 수는 없습니다.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.Control">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" />는 기존 서비스에 연결하고 제어할 수 있습니다.</summary>
    </member>
    <member name="F:System.ServiceProcess.ServiceControllerPermissionAccess.None">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" />는 권한이 없습니다.</summary>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionAttribute">
      <summary>선언적 서비스 컨트롤러 권한을 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionAttribute.CreatePermission">
      <summary>해당 특성의 <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess" /> 속성을 통해 설정되는 요청된 액세스 수준에 따라 권한을 만듭니다.</summary>
      <returns>만들어진 사용 권한을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName">
      <summary>서비스가 상주하는 컴퓨터의 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.MachineName" /> 구문이 잘못된 경우</exception>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceController" />와 관련된 서비스를 실행하고 있는 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.PermissionAccess">
      <summary>권한 요청에 사용할 액세스 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName">
      <summary>시스템의 서비스를 식별하는 약식 이름을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" />이 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.ServiceProcess.ServiceControllerPermissionAttribute.ServiceName" /> 속성의 구문이 잘못된 경우</exception>
      <returns>서비스의 이름입니다.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntry">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceController" />에 대해 설정된 코드 액세스 보안 권한의 최소 단위를 정의합니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntry.#ctor(System.ServiceProcess.ServiceControllerPermissionAccess,System.String,System.String)">
      <summary>지정된 권한 액세스 수준, 컴퓨터 이름, 서비스를 식별하는 약식 이름을 사용하여 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="permissionAccess">
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 값 중 하나입니다.</param>
      <param name="machineName">서비스가 상주하는 컴퓨터 이름입니다.</param>
      <param name="serviceName">시스템에서 서비스를 식별하는 약식 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="machineName" />가 잘못된 경우  
  
또는 
 <paramref name="serviceName" />가 잘못된 경우</exception>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.MachineName">
      <summary>서비스가 상주하는 컴퓨터의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceController" />와 관련된 서비스를 실행하고 있는 컴퓨터의 이름입니다.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.PermissionAccess">
      <summary>권한 요청에 사용하는 액세스 수준을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionAccess" /> 값의 비트 조합입니다.</returns>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntry.ServiceName">
      <summary>시스템에서 서비스를 식별하는 약식 이름을 가져옵니다.</summary>
      <returns>서비스의 이름입니다.</returns>
    </member>
    <member name="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection">
      <summary>
        <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체의 강력한 형식의 컬렉션을 포함합니다.</summary>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Add(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>지정된 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" />를 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체입니다.</param>
      <returns>추가된 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체의 인덱스(0부터 시작)입니다.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntry[])">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 형식의 개체 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.AddRange(System.ServiceProcess.ServiceControllerPermissionEntryCollection)">
      <summary>지정된 사용 권한 항목 집합을 이 컬렉션에 추가합니다.</summary>
      <param name="value">추가할 사용 권한 항목을 포함하는 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntryCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Contains(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>이 컬렉션에 특정 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체가 들어 있는지 여부를 확인합니다.</summary>
      <param name="value">찾을 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체입니다.</param>
      <returns>지정된 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체가 이 컬렉션에 속하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.CopyTo(System.ServiceProcess.ServiceControllerPermissionEntry[],System.Int32)">
      <summary>배열의 특정 인덱스에서 시작하여 이 컬렉션에서 배열로 사용 권한 항목을 복사합니다.</summary>
      <param name="array">복사한 권한 항목을 받는 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 형식의 배열입니다.</param>
      <param name="index">사용 권한 항목의 복사를 시작할 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.IndexOf(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목의 인덱스를 확인합니다.</summary>
      <param name="value">검색할 사용 권한 항목입니다.</param>
      <returns>지정된 사용 권한 항목의 인덱스(0부터 시작)이거나 사용 권한 항목이 컬렉션에 없으면 -1입니다.</returns>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Insert(System.Int32,System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>이 컬렉션의 지정된 인덱스에 사용 권한 항목을 삽입합니다.</summary>
      <param name="index">사용 권한 항목을 삽입할 컬렉션의 인덱스(0부터 시작)입니다.</param>
      <param name="value">이 컬렉션에 삽입할 사용 권한 항목입니다.</param>
    </member>
    <member name="M:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Remove(System.ServiceProcess.ServiceControllerPermissionEntry)">
      <summary>이 컬렉션에서 지정된 사용 권한 항목을 제거합니다.</summary>
      <param name="value">제거할 사용 권한 항목입니다.</param>
    </member>
    <member name="P:System.ServiceProcess.ServiceControllerPermissionEntryCollection.Item(System.Int32)">
      <summary>지정된 인덱스에서 개체를 가져오거나 설정합니다.</summary>
      <param name="index">컬렉션에 포함된 인덱스(0부터 시작)입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.ServiceProcess.ServiceControllerPermissionEntry" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermission">
      <summary>트랜잭션 관리가 MSDTC로 에스컬레이션될 때 <see cref="N:System.Transactions" />에서 요구하는 사용 권한입니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>
        <see cref="T:System.Transactions.DistributedTransactionPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Copy">
      <summary>현재 사용 권한의 동일한 복사본을 만들고 반환합니다.</summary>
      <returns>현재 사용 권한의 복사본입니다.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 사용 권한을 다시 만듭니다.</summary>
      <param name="securityElement">권한을 다시 생성하는 데 사용되는 XML 인코딩입니다.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Intersect(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정된 사용 권한의 공통 권한을 만들어 반환합니다.</summary>
      <param name="target">현재 사용 권한과 공통되는 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합에 해당하는 권한을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="target">하위 집합 관계를 테스트하는 사용 권한입니다. 이 사용 권한은 현재 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 <see cref="T:System.Security.IPermission" />이 지정된 <see cref="T:System.Security.IPermission" />의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.IsUnrestricted">
      <summary>현재 사용 권한으로 보호되는 리소스에 대한 무제한 액세스가 허용되는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>사용 권한으로 보호되는 리소스에 대한 무제한 액세스를 허용하면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.ToXml">
      <summary>보안 개체 및 현재 상태의 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 보안 개체의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <returns>현재 사용 권한과 지정된 사용 권한의 합집합을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="T:System.Transactions.DistributedTransactionPermissionAttribute">
      <summary>
        <see cref="T:System.Transactions.DistributedTransactionPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>지정된 <see cref="T:System.Transactions.DistributedTransactionPermissionAttribute" />를 사용하여 <see cref="T:System.Security.Permissions.SecurityAction" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Transactions.DistributedTransactionPermissionAttribute.CreatePermission">
      <summary>이진 형식으로 serialize된 다음 어셈블리의 메타데이터에 <see cref="T:System.Security.Permissions.SecurityAction" />과 함께 영구적으로 저장될 수 있는 사용 권한 개체를 만듭니다.</summary>
      <returns>직렬화할 수 있는 권한 개체입니다.</returns>
    </member>
    <member name="P:System.Transactions.DistributedTransactionPermissionAttribute.Unrestricted">
      <summary>해당 특성에 의해 보호되는 리소스에 대해 전체(무제한) 권한이 선언되는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>보호되는 리소스에 대한 전체 권한이 선언된 경우 <see langword="true" />이고, 그렇지 않은 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermission">
      <summary>ASP.NET 호스팅 환경에서 액세스 권한을 제어합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>지정된 <see cref="T:System.Web.AspNetHostingPermission" /> 열거형 값을 사용하여 <see cref="T:System.Security.Permissions.PermissionState" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 열거 값입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="state" />가 <see cref="T:System.Security.Permissions.PermissionState" /> 열거형 값 중 하나로 설정되지 않은 경우</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)">
      <summary>지정된 사용 권한 수준으로 <see cref="T:System.Web.AspNetHostingPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="level">
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 열거형 값입니다.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Copy">
      <summary>파생된 클래스에 의해 구현될 때 현재 권한 개체의 동일한 복사본을 만들어서 반환합니다.</summary>
      <returns>현재 권한 개체의 복사본입니다.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩을 사용하여 지정된 상태로 사용 권한 개체를 다시 생성합니다.</summary>
      <param name="securityElement">사용 권한 개체를 다시 생성하는 데 사용할 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="securityElement" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="securityElement" />의 <see cref="P:System.Security.SecurityElement.Tag" /> 속성이 "IPermission"과 다를 경우  
  
또는 
<paramref name="securityElement" />의 <see cref="M:System.Security.SecurityElement.Attribute(System.String)" /> 클래스가 <see langword="null" />이거나 빈 문자열("")인 경우</exception>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
      <summary>파생 클래스에서 구현할 때 현재 권한과 지정된 권한의 교집합에 해당하는 사용 권한을 만들고 반환합니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Web.AspNetHostingPermission" />이 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 교집합을 나타내는 <see cref="T:System.Security.IPermission" />이며, 교집합이 비어 있는 경우에는 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 사용 권한이 지정된 사용 권한의 하위 집합인지 여부를 나타내는 값을 반환합니다.</summary>
      <param name="target">현재 사용 권한과 결합시킬 <see cref="T:System.Security.IPermission" />입니다. 이 사용 권한은 현재 <see cref="T:System.Security.IPermission" />과 형식이 같아야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Web.AspNetHostingPermission" />이 아닌 경우</exception>
      <returns>현재 <see cref="T:System.Security.IPermission" />이 지정된 <see cref="T:System.Security.IPermission" />의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.IsUnrestricted">
      <summary>현재 사용 권한으로 보호되는 리소스에 대한 무제한 액세스가 허용되는지 여부를 나타내는 값을 반환합니다.</summary>
      <returns>사용 권한으로 보호되는 리소스에 대한 무제한 액세스를 허용하면<see langword="true" /> 이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.ToXml">
      <summary>사용 권한 개체 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 사용 권한 개체의 XML 인코딩이 들어 있는 <see cref="T:System.Security.SecurityElement" />입니다.</returns>
    </member>
    <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
      <summary>현재 사용 권한 및 지정한 사용 권한을 합한 사용 권한을 만듭니다.</summary>
      <param name="target">현재 사용 권한과 결합할 사용 권한입니다. 현재 사용 권한과 동일한 형식이어야 합니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />이 <see cref="T:System.Web.AspNetHostingPermission" />이 아닌 경우</exception>
      <returns>현재 사용 권한과 지정된 사용 권한의 합집합을 나타내는 <see cref="T:System.Security.IPermission" />입니다.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermission.Level">
      <summary>ASP.NET 애플리케이션의 현재 호스팅 사용 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionAttribute">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermission" />에 대한 보안 동작이 선언적 보안을 사용하여 코드에 적용될 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>
        <see cref="T:System.Web.AspNetHostingPermissionAttribute" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="action">
        <see cref="T:System.Security.Permissions.SecurityAction" /> 열거형 값 중 하나입니다.</param>
    </member>
    <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
      <summary>이전에 <see cref="T:System.Web.AspNetHostingPermission" /> 속성에 의해 설정된 사용 권한 수준으로 새 <see cref="P:System.Web.AspNetHostingPermissionAttribute.Level" />을 만듭니다.</summary>
      <returns>새 <see cref="T:System.Security.IPermission" />인 <see cref="T:System.Web.AspNetHostingPermission" />입니다.</returns>
    </member>
    <member name="P:System.Web.AspNetHostingPermissionAttribute.Level">
      <summary>현재 호스팅 권한 수준을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Web.AspNetHostingPermissionLevel" /> 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.Web.AspNetHostingPermissionLevel">
      <summary>ASP.NET 웹 애플리케이션에 부여되는 신뢰 수준을 지정합니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.High">
      <summary>
        <see langword="High" /> 신뢰 수준보다 작거나 같은 수준에 대한 요청으로 보호된 기능이 성공적으로 수행될 것임을 나타냅니다. 이 수준은 부분적으로 신뢰할 수 있는 액세스를 지원하는 관리되는 권한 대부분을 사용해야 하는 완전히 신뢰할 수 있는 관리되는 코드 애플리케이션을 위한 것입니다. 가장 높은 권한 중 일부(예: 네이티브 코드 호출 기능)는 부여하지 않지만 최소 권한의 신뢰할 수 있는 애플리케이션을 실행하거나 완전히 신뢰할 수 있는 애플리케이션에 대한 일정 수준의 제약 조건을 제공하는 방법은 제공합니다. 구성 파일의 trust 섹션에서 적어도 <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> 신뢰 수준을 구성함으로써 이 신뢰 수준이 허가됩니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Low">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 수준보다 작거나 같은 수준에 대한 요청으로 보호된 기능이 성공적으로 수행될 것임을 나타냅니다. 이 수준은 제한된 환경에서 제한된 리소스에 대해 읽기 전용 액세스를 허용하도록 합니다. 구성 파일의 trust 섹션에서 <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> 신뢰 수준을 지정하여 이 신뢰 수준을 허가합니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Medium">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 수준보다 작거나 같은 수준에 대한 요청으로 보호된 기능이 성공적으로 수행될 것임을 나타냅니다. 구성 파일의 trust 섹션에서 적어도 <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> 신뢰 수준을 구성함으로써 이 신뢰 수준이 허가됩니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Minimal">
      <summary>
        <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 수준에 대한 요청으로 보호된 기능이 성공적으로 수행될 것임을 나타냅니다. 이 수준에서는 코드를 실행할 수 있지만 시스템에 있는 리소스와 상호 작용할 수 없습니다. 구성 파일의 trust 섹션을 사용하여 적어도 <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> 신뢰 수준을 구성함으로써 이 신뢰 수준을 부여합니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.None">
      <summary>부여된 권한이 없음을 나타냅니다. <see cref="T:System.Web.AspNetHostingPermission" />에 대한 모든 요청은 실패합니다.</summary>
    </member>
    <member name="F:System.Web.AspNetHostingPermissionLevel.Unrestricted">
      <summary>애플리케이션의 모든 기능을 사용하기 위한 권한에 대한 모든 요구가 허가될 것임을 나타냅니다. 구성 파일의 trust 섹션에서 <see langword="Full" /> 신뢰 수준을 허가하는 것과 같습니다.</summary>
    </member>
    <member name="T:System.Xaml.Permissions.XamlLoadPermission">
      <summary>XAML 판독기 또는 작성기에서 사용하는 어셈블리에서 형식을 로드하기 위한 사용 권한을 선언합니다.</summary>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})">
      <summary>열거 가능한 특정 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 값 집합을 사용하여 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="allowedAccess">열거 가능한 특정 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 값의 집합입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="allowedAccess" />에 null 항목과 같은 잘못된 정보가 포함되어 있습니다.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>기존 사용 권한을 사용하여 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="state">
        <see cref="T:System.Security.Permissions.PermissionState" /> 열거 값입니다.</param>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>단일 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 값을 사용하여 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="allowedAccess">정의하는 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="allowedAccess" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Copy">
      <summary>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 동일한 복사본을 만들어 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 복사본입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Equals(System.Object)">
      <param name="obj" />
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)">
      <summary>XML 인코딩의 지정된 상태를 사용하여 보안 개체를 다시 만듭니다.</summary>
      <param name="elem">보안 개체를 다시 만드는 데 사용할 XML 인코딩입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elem" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elem" />에 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />에 대한 XML 인코딩이 포함되어 있지 않습니다.  
  
또는 
<paramref name="elem" /> 내의 버전 특성은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.GetHashCode" />
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)">
      <summary>이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 목록에 지정된 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />이 포함되는지 여부를 반환합니다.</summary>
      <param name="requestedAccess">확인할 특정 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestedAccess" />가 null입니다.</exception>
      <returns>
        <paramref name="requestedAccess" />가 현재 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />의 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 목록에 있으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 지정된 사용 권한의 교집합에 해당하는 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />을 만들어 반환합니다.</summary>
      <param name="target">현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 공통되는 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />입니다. <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />가 <see langword="null" />이 아니거나 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 아닙니다.</exception>
      <returns>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 지정된 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 교집합을 나타내는 새 사용 권한입니다. 교집합이 비어 있으면 새 사용 권한은 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 지정된 사용 권한의 하위 집합인지 여부를 확인합니다.</summary>
      <param name="target">하위 집합 관계를 테스트할 사용 권한입니다. <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" />가 <see langword="null" />이 아니거나 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 아닙니다.</exception>
      <returns>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 지정된 권한의 하위 집합이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted">
      <summary>이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 무제한의 사용 권한을 나타내는지 여부를 확인합니다.</summary>
      <returns>이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 무제한의 사용 권한을 나타내면 <see langword="true" />입니다. 이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />에서 특정 액세스 수준 제한이 있거나 권한이 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.ToXml">
      <summary>이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 및 해당 사용 권한의 현재 상태에 대한 XML 인코딩을 만듭니다.</summary>
      <returns>상태 정보를 포함한 이 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 XML 인코딩입니다.</returns>
    </member>
    <member name="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)">
      <summary>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 지정된 사용 권한의 합집합에 해당하는 사용 권한을 만듭니다.</summary>
      <param name="other">현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 결합할 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />입니다. <see langword="null" />일 수 있습니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="other" />가 <see langword="null" />이 아니거나 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />이 아닙니다.</exception>
      <returns>현재 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />과 지정된 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />의 합집합 부분을 나타내는 새 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />입니다.</returns>
    </member>
    <member name="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess">
      <summary>이 <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />이 나타내는 모든 <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> 값의 목록을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> 값의 읽기 전용 목록이나 <see langword="null" />입니다.</returns>
    </member>
  </members>
</doc>