<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Packaging</name>
  </assembly>
  <members>
    <member name="T:System.IO.FileFormatException">
      <summary>应该符合一定文件格式规范的输入文件或数据流的格式不正确时引发的异常。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor">
      <summary>创建 <see cref="T:System.IO.FileFormatException" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化数据创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例，并对其进行初始化。 在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</summary>
      <param name="info">承载序列化对象数据的对象。</param>
      <param name="context">关于来源和目标的上下文信息</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String)">
      <summary>使用指定的错误消息创建 <see cref="T:System.IO.FileFormatException" /> 类的新实例。</summary>
      <param name="message">一个表示错误消息的<see cref="T:System.String" />值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="message">一个表示错误消息的<see cref="T:System.String" />值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri)">
      <summary>使用源 URI 值创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.Exception)">
      <summary>使用源 URI 值和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String)">
      <summary>使用源 URI 值和指定的错误消息创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">一个表示错误消息的<see cref="T:System.String" />值。</param>
    </member>
    <member name="M:System.IO.FileFormatException.#ctor(System.Uri,System.String,System.Exception)">
      <summary>使用源 URI 值、指定的错误消息和异常类型创建 <see cref="T:System.IO.FileFormatException" /> 类的一个新实例。</summary>
      <param name="sourceUri">导致此错误的文件的 <see cref="T:System.Uri" /> 值。</param>
      <param name="message">一个表示错误消息的<see cref="T:System.String" />值。</param>
      <param name="innerException">
        <see cref="P:System.Exception.InnerException" /> 属性的值，表示当前异常的原因。</param>
    </member>
    <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>设置带有文件名和附加异常信息的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</summary>
      <param name="info">承载序列化对象数据的对象。</param>
      <param name="context">关于来源和目标的上下文信息</param>
    </member>
    <member name="P:System.IO.FileFormatException.SourceUri">
      <summary>获取导致 <see cref="T:System.IO.FileFormatException" /> 的文件的名称。</summary>
      <returns>一个 <see cref="T:System.Uri" />，表示导致此异常的文件的名称。</returns>
    </member>
    <member name="T:System.IO.Packaging.CompressionOption">
      <summary>为 <see cref="T:System.IO.Packaging.PackagePart" /> 中存储的内容指定压缩级别。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Fast">
      <summary>已针对性能优化了压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Maximum">
      <summary>已针对大小优化了压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.Normal">
      <summary>优化压缩以在大小和性能之间保持平衡。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.NotCompressed">
      <summary>已关闭压缩。</summary>
    </member>
    <member name="F:System.IO.Packaging.CompressionOption.SuperFast">
      <summary>优化压缩以获得高性能。</summary>
    </member>
    <member name="T:System.IO.Packaging.EncryptionOption">
      <summary>为 <see cref="T:System.IO.Packaging.Package" /> 中的部分指定加密选项。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.None">
      <summary>无加密。</summary>
    </member>
    <member name="F:System.IO.Packaging.EncryptionOption.RightsManagement">
      <summary>通过权限管理支持的加密。</summary>
    </member>
    <member name="T:System.IO.Packaging.Package">
      <summary>表示一个可以存储多个数据对象的容器。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.#ctor(System.IO.FileAccess)">
      <summary>初始化使用给定的 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="T:System.IO.FileAccess" /> 类的新实例。</summary>
      <param name="openFileAccess">包的文件 IO 权限。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="openFileAccess" /> 的值无效。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Close">
      <summary>保存并关闭包和所有基础部件流。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
      <summary>使用给定的 URI 和内容类型创建新的未压缩部件。</summary>
      <param name="partUri">新部件的统一资源标识符 (URI)。</param>
      <param name="contentType">数据流的内容类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.InvalidOperationException">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读的（无法添加新部件）。</exception>
      <returns>新创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>使用给定的 URI、内容类型和压缩选项创建新部件。</summary>
      <param name="partUri">新部件的 URI。</param>
      <param name="contentType">数据流的内容类型。</param>
      <param name="compressionOption">数据流的压缩选项、<see cref="F:System.IO.Packaging.CompressionOption.NotCompressed" /> 或 <see cref="F:System.IO.Packaging.CompressionOption.Normal" /> 压缩。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 或 <paramref name="contentType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">包中已存在具有指定的 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值无效。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读的（无法添加新部件）。</exception>
      <returns>新创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>在派生类中重写时，会在包中创建一个新部件。</summary>
      <param name="partUri">正在创建的部件的统一资源标识符 (URI)。</param>
      <param name="contentType">数据流的内容类型。</param>
      <param name="compressionOption">数据流的压缩选项。</param>
      <returns>创建的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>使用给定的 URI、目标模式和关系类型创建与部件的包级别关系。</summary>
      <param name="targetUri">目标部件的统一资源标识符 (URI)。</param>
      <param name="targetMode">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定义关系的角色的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值无效。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读。</exception>
      <returns>与指定部件的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>使用给定的 URI、目标模式、关系类型和 标识符 (ID) 创建与部件的包级别关系。</summary>
      <param name="targetUri">目标部件的统一资源标识符 (URI)。</param>
      <param name="targetMode">指示目标部件对包来说是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 还是 <see cref="F:System.IO.Packaging.TargetMode.External" />。</param>
      <param name="relationshipType">唯一定义关系的角色的 URI。</param>
      <param name="id">唯一 XML 标识符。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="targetUri" /> 部件为 <see cref="T:System.IO.Packaging.PackageRelationship" />，或 <paramref name="targetMode" /> 为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，而 <paramref name="targetUri" /> 为绝对 URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 的值无效。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符；或者包中已存在具有指定的 <paramref name="id" /> 的部件。</exception>
      <returns>与指定部件的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
      <summary>使用包中给定的 URI 删除部件。</summary>
      <param name="partUri">要删除的部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
      <summary>在派生类中重写时，会使用给定的 URI 删除部件。</summary>
      <param name="partUri">要删除的 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
      <summary>删除包级别关系。</summary>
      <param name="id">要删除的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.Dispose(System.Boolean)">
      <summary>刷新并保存所有部件和关系的内容，关闭包，并释放所有资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="M:System.IO.Packaging.Package.Flush">
      <summary>保存包中包含的所有部件和关系的内容。</summary>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包为只读的，无法进行修改。</exception>
    </member>
    <member name="M:System.IO.Packaging.Package.FlushCore">
      <summary>在派生类中重写时，会将所有部件和关系的内容保存到派生类存储区中。</summary>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
      <summary>返回具有给定 URI 的部件。</summary>
      <param name="partUri">要返回的部件的统一资源标识符 (URI)。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.InvalidOperationException">包中不存在具有指定 <paramref name="partUri" /> 的部件。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>具有指定 <paramref name="partUri" /> 的部件。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
      <summary>在派生类中重写时，会返回由给定 URI 寻址的部件。</summary>
      <param name="partUri">要检索的部件的统一资源标识符 (URI)。</param>
      <returns>请求的部件；或者，如果包中不存在具有指定 <paramref name="partUri" /> 的部件，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetParts">
      <summary>返回包中所有部件的集合。</summary>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>包中包含的所有 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetPartsCore">
      <summary>在派生类中重写时，会返回包中所有部件的数组。</summary>
      <returns>包中包含的所有部件的数组。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
      <summary>返回具有给定标识符的包级别关系。</summary>
      <param name="id">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.InvalidOperationException">包中不存在具有指定 <paramref name="id" /> 的关系。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>具有指定 <paramref name="id" /> 的包级别关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationships">
      <summary>返回所有包级别关系的集合。</summary>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>包中包含的所有包级别关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
      <summary>返回与给定的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 匹配的所有包级别关系的集合。</summary>
      <param name="relationshipType">在集合中匹配和返回的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>与指定的 <paramref name="relationshipType" /> 匹配的包级别关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
      <summary>在给定的 IO 流上打开包。</summary>
      <param name="stream">在其上打开包的 IO 流。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
      <summary>使用给定的 IO 流和文件模式打开包。</summary>
      <param name="stream">在其上打开包的 IO 流。</param>
      <param name="packageMode">用于打开包的文件模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 值无效。</exception>
      <exception cref="T:System.IO.IOException">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用给定的 IO 流、文件模式和文件访问设置打开包。</summary>
      <param name="stream">在其上打开包的 IO 流。</param>
      <param name="packageMode">用于打开包的文件模式。</param>
      <param name="packageAccess">用于打开包的文件访问。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</exception>
      <exception cref="T:System.IO.IOException">要打开的包需要读权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的；或者，要打开的包需要写权限或读/写权限，且指定的 <paramref name="stream" /> 是只写的。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String)">
      <summary>打开位于给定路径和文件名的包。</summary>
      <param name="path">包的路径和文件名。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
      <summary>使用给定的文件模式打开位于给定路径的包。</summary>
      <param name="path">包的路径和文件名。</param>
      <param name="packageMode">用于打开包的文件模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 的值无效。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <summary>使用给定的文件模式和文件访问设置打开位于给定路径的包。</summary>
      <param name="path">包的路径和文件名。</param>
      <param name="packageMode">用于打开包的文件模式。</param>
      <param name="packageAccess">用于打开包的文件访问。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" /> 或 <paramref name="packageAccess" /> 的值无效。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
      <summary>使用给定的文件模式、文件访问和文件共享设置打开位于给定路径的包。</summary>
      <param name="path">包的路径和文件名。</param>
      <param name="packageMode">用于打开包的文件模式。</param>
      <param name="packageAccess">用于打开包的文件访问。</param>
      <param name="packageShare">用于打开包的文件共享模式。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="packageMode" />、<paramref name="packageAccess" /> 或 <paramref name="packageShare" /> 的值无效。</exception>
      <returns>打开的包。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
      <summary>指示具有给定 URI 的部件是否在包中。</summary>
      <param name="partUri">要检查的部件的 <see cref="T:System.Uri" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> 统一资源标识符 (URI)。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的（无法读取信息）。</exception>
      <returns>如果具有指定的 <paramref name="partUri" /> 的部件在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
      <summary>指示具有给定 ID 的包级别关系是否包含在包中。</summary>
      <param name="id">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的。</exception>
      <returns>如果具有指定的 <paramref name="id" /> 的包级别关系在包中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.Package.System#IDisposable#Dispose">
      <summary>此成员支持 Windows Presentation Foundation (WPF) 基础结构，不是为应用程序使用而设计的。  改用类型安全的 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 方法。</summary>
    </member>
    <member name="P:System.IO.Packaging.Package.FileOpenAccess">
      <summary>获取包的文件访问设置。</summary>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns>
        <see cref="T:System.IO.FileAccess" /> 值之一：<see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.Package.PackageProperties">
      <summary>获取包的核心属性。</summary>
      <exception cref="T:System.ObjectDisposedException">包未打开（已调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns>包的核心属性。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePart">
      <summary>为存储在 <see cref="T:System.IO.Packaging.Package" /> 中的部分提供基类。  此类为抽象类。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
      <summary>使用指定的父 <see cref="T:System.IO.Packaging.PackagePart" /> 和部件 URI 初始化 <see cref="P:System.IO.Packaging.PackagePart.Package" /> 类的新实例。</summary>
      <param name="package">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
      <summary>使用指定的父 <see cref="P:System.IO.Packaging.PackagePart.Package" />、部件 URI 和 MIME 内容类型初始化 <see cref="T:System.IO.Packaging.PackagePart" /> 类的新实例。</summary>
      <param name="package">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <param name="contentType">部分数据流的 MIME 内容类型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
      <summary>使用指定的父 <see cref="P:System.IO.Packaging.PackagePart.Package" />、部件 URI、MIME 内容类型和 <see cref="T:System.IO.Packaging.CompressionOption" /> 初始化 <see cref="T:System.IO.Packaging.PackagePart" /> 类的新实例。</summary>
      <param name="package">此部分的父 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="partUri">部件的 URI，它相对于父 <see cref="T:System.IO.Packaging.Package" /> 根。</param>
      <param name="contentType">部分的数据流的 MIME 内容类型。</param>
      <param name="compressionOption">部分数据流的压缩选项。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 或 <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="compressionOption" /> 值无效。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
      <summary>创建此 <see cref="T:System.IO.Packaging.PackagePart" /> 与指定目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</summary>
      <param name="targetUri">目标部件的 URI。</param>
      <param name="targetMode">枚举值之一。 例如，如果目标部分在 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的内部，则为 <see cref="T:System.IO.Packaging.Package" />；如果目标是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的资源，则为 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">关系的角色。</param>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 参数不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 标识的部分是关系（关系的目标不能是另一个关系）。  
  
- 或 - 
 将 <paramref name="targetMode" /> 指定为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一个绝对外部 URI。</exception>
      <exception cref="T:System.IO.IOException">包是只读的（无法添加新关系）。</exception>
      <returns>此 <see cref="T:System.IO.Packaging.PackagePart" /> 与目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
      <summary>创建此 <see cref="T:System.IO.Packaging.PackagePart" /> 与指定目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</summary>
      <param name="targetUri">目标部件的 URI。</param>
      <param name="targetMode">枚举值之一。 例如，如果目标部分在 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 的内部，则为 <see cref="T:System.IO.Packaging.Package" />；如果目标是 <see cref="F:System.IO.Packaging.TargetMode.External" /> 外部的资源，则为 <see cref="T:System.IO.Packaging.Package" />。</param>
      <param name="relationshipType">关系的角色。</param>
      <param name="id">关系的唯一 ID。</param>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetUri" /> 或 <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="targetMode" /> 参数不是有效的 <see cref="T:System.IO.Packaging.TargetMode" /> 枚举值。</exception>
      <exception cref="T:System.ArgumentException">由 <paramref name="targetUri" /> 标识的部分是关系（关系的目标不能是另一个关系）。  
  
- 或 - 
 将 <paramref name="targetMode" /> 指定为 <see cref="F:System.IO.Packaging.TargetMode.Internal" />，但 <paramref name="targetUri" /> 是一个绝对外部 URI。</exception>
      <exception cref="T:System.IO.IOException">包是只读的（无法添加新关系）。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。  
  
- 或 - 
已存在具有指定 <paramref name="id" /> 的部分。</exception>
      <returns>此 <see cref="T:System.IO.Packaging.PackagePart" /> 与目标 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源之间的部分级关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
      <summary>删除指定的部分级 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="id">要删除的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.IO.IOException">包是只读的（无法删除关系）。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetContentTypeCore">
      <summary>当在派生类中重写时，返回部分内容的 MIME 类型。</summary>
      <exception cref="T:System.NotSupportedException">派生类不为 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法提供所需的重写实现。</exception>
      <returns>部分内容的 MIME 类型。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
      <summary>返回具有指定 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的关系。</summary>
      <param name="id">要返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。  
  
- 或 - 
包中不存在具有指定 <paramref name="id" /> 的关系。</exception>
      <exception cref="T:System.IO.IOException">包是只写的（无法读取关系信息）。</exception>
      <returns>与指定 <paramref name="id" /> 相匹配的关系。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
      <summary>返回此部分拥有的所有关系的集合。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的（无法读取关系信息）。</exception>
      <returns>此部分拥有的所有关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
      <summary>返回与指定 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 相匹配的关系的集合。</summary>
      <param name="relationshipType">要在集合中查找并返回的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipType" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipType" /> 是一个空字符串。</exception>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的（无法读取关系信息）。</exception>
      <returns>与指定 <paramref name="relationshipType" /> 相匹配的关系的集合。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream">
      <summary>返回部分内容数据流。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns>此部分的内容数据流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
      <summary>返回在指定 I/O <see cref="T:System.IO.FileMode" /> 中打开的内容流。</summary>
      <param name="mode">打开内容流时采用的 I/O 模式。</param>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 参数不是有效的 <see cref="T:System.IO.FileMode" /> 枚举值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 参数与包和部分流不兼容。  
  
- 或 - 
派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns>此部分的内容流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
      <summary>返回使用指定 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 打开的部分内容流。</summary>
      <param name="mode">打开内容流时采用的 I/O 模式。</param>
      <param name="access">打开内容流时使用的访问权限。</param>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="mode" /> 参数不是有效的 <see cref="T:System.IO.FileMode" /> 枚举值。  
  
- 或 - 
<paramref name="access" /> 参数不是有效的 <see cref="T:System.IO.FileAccess" /> 枚举值。</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="mode" /> 或 <paramref name="access" /> 与包和部分流不兼容。  
  
- 或 - 
<paramref name="access" /> 参数指定为 <see cref="F:System.IO.FileAccess.Read" />，但 <paramref name="mode" /> 参数需要写访问权。  （<see cref="T:System.IO.FileMode" />、<see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 和 <see cref="F:System.IO.FileMode.Truncate" /> 的 <see cref="F:System.IO.FileMode.Append" /> 值需要 <see cref="F:System.IO.FileAccess.Write" /> 或 <see cref="F:System.IO.FileAccess.ReadWrite" /> 访问权限。） 
- 或 - 
派生子类的 <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> 方法返回的流对象是 <see langword="null" />。</exception>
      <returns>此部分的内容流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
      <summary>当在派生类中重写时，返回使用指定的 <see cref="T:System.IO.FileMode" /> 和 <see cref="T:System.IO.FileAccess" /> 打开的部分内容流。</summary>
      <param name="mode">打开内容流时采用的 I/O 模式。</param>
      <param name="access">打开内容流时使用的访问权限。</param>
      <returns>此部分的内容数据流。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
      <summary>返回一个值，指示此部分是否拥有具有指定 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 的关系。</summary>
      <param name="id">要检查的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.Id" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="id" /> 不是有效的 XML 标识符。</exception>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <exception cref="T:System.IO.IOException">包是只写的（无法读取关系信息）。</exception>
      <returns>如果此部分拥有具有指定 <paramref name="id" /> 的关系，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.CompressionOption">
      <summary>获取部分内容流的压缩选项。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns>部分内容流的压缩选项。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.ContentType">
      <summary>获取内容流的 MIME 类型。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。  
  
- 或 - 
派生类 <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> 方法返回的字符串为空。</exception>
      <returns>部分的内容数据流的 MIME 类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Package">
      <summary>获取此部分的父 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns>此部分的父包。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackagePart.Uri">
      <summary>获取部件的 URI。</summary>
      <exception cref="T:System.InvalidOperationException">已删除此部分。  
  
- 或 - 
<see cref="P:System.IO.Packaging.PackagePart.Package" /> 没有打开（调用了 <see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> 或 <see cref="M:System.IO.Packaging.Package.Close" />）。</exception>
      <returns>相对于包根的部件的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackagePartCollection">
      <summary>表示 <see cref="T:System.IO.Packaging.PackagePart" /> 对象集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
      <summary>返回用于循环访问集合中的部件一个枚举器。</summary>
      <returns>用于循环访问集合中的 <see cref="T:System.IO.Packaging.PackagePart" /> 元素的枚举器。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
      <summary>返回一个循环访问集合的枚举器。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.Generic.IEnumerator`1" /> 对象。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</summary>
      <returns>一个可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageProperties">
      <summary>表示 <see cref="T:System.IO.Packaging.Package" /> 的核心属性。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.#ctor">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageProperties" /> 类的新实例。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose">
      <summary>释放 <see cref="T:System.IO.Packaging.PackageProperties" /> 实例使用的所有资源。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageProperties.Dispose(System.Boolean)">
      <summary>释放由 <see cref="T:System.IO.Packaging.PackageProperties" /> 实例使用的非托管资源，并选择释放托管资源。</summary>
      <param name="disposing">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</param>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Category">
      <summary>当在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的类别。</summary>
      <returns>包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类别。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentStatus">
      <summary>在派生类中重写时，获取或设置一个值，该值表示 <see cref="T:System.IO.Packaging.Package" /> 的状态。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 内容的状态。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.ContentType">
      <summary>在派生类中重写时，获取或设置一个值，该值表示包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类型。</summary>
      <returns>包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Created">
      <summary>在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的创建日期和时间。</summary>
      <returns>最初创建 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Creator">
      <summary>在派生类中重写时，获取或设置一个值，该值标识创建了 <see cref="T:System.IO.Packaging.Package" /> 及其内容的个体或实体。</summary>
      <returns>创建了 <see cref="T:System.IO.Packaging.Package" /> 及其内容的个体或实体。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Description">
      <summary>在派生类中重写时，获取或设置包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的说明。</summary>
      <returns>包含在 <see cref="T:System.IO.Packaging.Package" /> 中的内容的说明。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Identifier">
      <summary>在派生类中重写时，获取或设置一个值，该值明确标识 <see cref="T:System.IO.Packaging.Package" /> 及其内容。</summary>
      <returns>明确标识 <see cref="T:System.IO.Packaging.Package" /> 及其内容的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Keywords">
      <summary>在派生类中重写时，获取或设置一个值，该值定义界定的关键字集来支持搜索和索引 <see cref="T:System.IO.Packaging.Package" /> 及其内容。</summary>
      <returns>支持搜索和索引 <see cref="T:System.IO.Packaging.Package" /> 及其内容的界定关键字集。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Language">
      <summary>在派生类中重写时，获取或设置一个值，该值标识 <see cref="T:System.IO.Packaging.Package" /> 内容的语言。</summary>
      <returns>标识 <see cref="T:System.IO.Packaging.Package" /> 内容语言的值。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastModifiedBy">
      <summary>在派生类中重写时，获取或设置一个值，该值标识上次修改 <see cref="T:System.IO.Packaging.Package" /> 内容的用户。</summary>
      <returns>上次修改 <see cref="T:System.IO.Packaging.Package" /> 内容的用户。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.LastPrinted">
      <summary>在派生类中重写时，获取或设置上次打印 <see cref="T:System.IO.Packaging.Package" /> 内容的日期和时间。</summary>
      <returns>上次打印 <see cref="T:System.IO.Packaging.Package" /> 内容的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Modified">
      <summary>在派生类中重写时，获取或设置上次更改 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</summary>
      <returns>上次更改 <see cref="T:System.IO.Packaging.Package" /> 的日期和时间。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Revision">
      <summary>在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的修订号。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的修订号。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Subject">
      <summary>当在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 内容的主题。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 内容的主题。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Title">
      <summary>在派生类中重写时，获取或设置为 <see cref="T:System.IO.Packaging.Package" /> 及其内容指定的名称。</summary>
      <returns>为 <see cref="T:System.IO.Packaging.Package" /> 及其内容指定的名称。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageProperties.Version">
      <summary>在派生类中重写时，获取或设置 <see cref="T:System.IO.Packaging.Package" /> 的版本号。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" /> 的版本号。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationship">
      <summary>表示源 <see cref="T:System.IO.Packaging.Package" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 与可以为 <see cref="T:System.IO.Packaging.PackagePart" /> 或外部资源的目标对象之间的关联。</summary>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Id">
      <summary>获取标识关系的字符串。</summary>
      <returns>标识关系的字符串。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.Package">
      <summary>获取包含此关系的 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>包含此关系的包。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.RelationshipType">
      <summary>获取关系的限定类型名称。</summary>
      <returns>关系的限定类型名称。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.SourceUri">
      <summary>获取拥有关系的包或部分的 URI。</summary>
      <returns>
        <see cref="T:System.IO.Packaging.Package" />拥有关系的或的 URI <see cref="T:System.IO.Packaging.PackagePart" /> 。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetMode">
      <summary>获取一个值，该值指示关系的目标是 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" /> 指向 <see cref="T:System.IO.Packaging.Package" />。</summary>
      <returns>一个枚举值，它指示 <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> 是否引用指向 <see cref="T:System.IO.Packaging.Package" /> 的 <see cref="F:System.IO.Packaging.TargetMode.Internal" /> 或 <see cref="F:System.IO.Packaging.TargetMode.External" />。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationship.TargetUri">
      <summary>获取关系的目标资源的 URI。</summary>
      <returns>目标资源的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipCollection">
      <summary>表示为给定的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 或 <see cref="T:System.IO.Packaging.PackagePart" /> 所拥有的 <see cref="T:System.IO.Packaging.Package" /> 元素的集合。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
      <summary>返回一个用于循环访问集合中的关系的枚举器。</summary>
      <returns>用于循环访问集合中的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 元素的枚举器。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>此类型或成员支持 Windows Presentation Foundation 基础结构，且不应在代码中直接使用。</summary>
      <returns>请勿使用 - 使用 <see cref="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelector">
      <summary>定义 <see cref="T:System.IO.Packaging.PackageRelationship" /> 条件来选择部分级或包级关系。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
      <summary>初始化 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 类的新实例。</summary>
      <param name="sourceUri">拥有关系的 <see cref="T:System.IO.Packaging.PackagePart" /> 或 <see cref="T:System.IO.Packaging.Package" /> (<c>SourceUri</c>="/") 的统一资源标识符 (URI)。</param>
      <param name="selectorType">
        <paramref name="selectionCriteria" /> 的类型，要么按关系 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" />，要么按关系 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" />。</param>
      <param name="selectionCriteria">用来基于 <paramref name="selectorType" /> 选择关系的限定字符串。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceUri" /> 或 <paramref name="selectionCriteria" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="selectorType" /> 参数无效。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="selectorType" />参数为， <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 但 <paramref name="selectionCriteria" /> 不是有效的 XML 架构定义 (XSD) 标识符 (ID) 。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="selectionCriteria" /> 对于指定的 <paramref name="selectorType" /> 无效。

- 或 -

<paramref name="sourceUri" /> 不是 <see cref="T:System.IO.Packaging.Package" /> 根（“/”），也不是有效的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</exception>
    </member>
    <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
      <summary>返回与定义的 <see cref="T:System.IO.Packaging.PackageRelationship" />、<see cref="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri" /> 和 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 相匹配的 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria" /> 对象的列表。</summary>
      <param name="package">要基于选择条件从中选择关系的包。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="package" /> 为 <see langword="null" />。</exception>
      <returns>与指定给 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 构造函数的选择参数相匹配的关系的列表。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectionCriteria">
      <summary>获取指定给 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 构造函数的选择条件。</summary>
      <returns>基于指定给 <see cref="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType" /> 构造函数的 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 或 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的选择条件。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SelectorType">
      <summary>获取为 <see cref="T:System.IO.Packaging.PackageRelationshipSelectorType" /> 构造函数指定的 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns>指定给 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Id" /> 构造函数的 <see cref="F:System.IO.Packaging.PackageRelationshipSelectorType.Type" /> 或 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" /> 的选择器类型。</returns>
    </member>
    <member name="P:System.IO.Packaging.PackageRelationshipSelector.SourceUri">
      <summary>获取指定给 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 构造函数、作为关系所有者的根包 URI ("/") 或部分 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</summary>
      <returns>指定给 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 构造函数、作为关系所有者的根包 URI ("/") 或部分 <see cref="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)" />。</returns>
    </member>
    <member name="T:System.IO.Packaging.PackageRelationshipSelectorType">
      <summary>指定用于通过 <see cref="T:System.IO.Packaging.PackageRelationship" /> 匹配并返回 <see cref="T:System.IO.Packaging.PackageRelationshipSelector" /> 选择的选择条件的类型。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Id">
      <summary>按 <see cref="T:System.IO.Packaging.PackageRelationship" /> 进行 <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> 选择。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackageRelationshipSelectorType.Type">
      <summary>按 <see cref="T:System.IO.Packaging.PackageRelationship" /> 进行 <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> 选择。</summary>
    </member>
    <member name="T:System.IO.Packaging.PackUriHelper">
      <summary>提供实用工具方法来撰写和分析 pack URI 对象。</summary>
    </member>
    <member name="F:System.IO.Packaging.PackUriHelper.UriSchemePack">
      <summary>定义 pack URI 方案名称“pack”。</summary>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)">
      <summary>返回一个值，该值指示两个包 URI 是否等效。</summary>
      <param name="firstPackUri">第一个包 URI。</param>
      <param name="secondPackUri">第二个包 URI。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不是绝对 URI。

- 或 -

<paramref name="firstPackUri" /> 或 <paramref name="secondPackUri" /> 不以“pack://”方案开头。</exception>
      <returns>一个带符号整数，指示 <paramref name="firstPackUri" /> 和 <paramref name="secondPackUri" /> 之间的关系。

 <list type="table"><listheader><term> 值</term><description> 含义</description></listheader><item><term> 小于 0</term><description><paramref name="firstPackUri" /> 小于 <paramref name="secondPackUri" />。</description></item><item><term> 0</term><description><paramref name="firstPackUri" /> 等效于 <paramref name="secondPackUri" />。</description></item><item><term> 大于 0</term><description><paramref name="firstPackUri" /> 大于 <paramref name="secondPackUri" />。</description></item></list></returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)">
      <summary>返回一个值，该值指示两个包部件 URI 是否相等。</summary>
      <param name="firstPartUri">第一个 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="secondPartUri">第二个 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="firstPartUri" /> 或 <paramref name="secondPartUri" /> 不是有效的部件 URI 语法。</exception>
      <returns>一个值，指示 <paramref name="firstPartUri" /> 和 <paramref name="secondPartUri" /> 之间的关系。

 <list type="table"><listheader><term> 值</term><description> 含义</description></listheader><item><term> 小于 0</term><description><paramref name="firstPartUri" /> 小于 <paramref name="secondPartUri" />。</description></item><item><term> 0</term><description><paramref name="firstPartUri" /> 等效于 <paramref name="secondPartUri" />。</description></item><item><term> 大于 0</term><description><paramref name="firstPartUri" /> 大于 <paramref name="secondPartUri" />。</description></item></list></returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
      <summary>创建一个指向包的新包 URI。</summary>
      <param name="packageUri">引用的 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是绝对 URI。</exception>
      <returns>由给定的 <paramref name="packageUri" /> 引用的 <see cref="T:System.IO.Packaging.Package" /> 的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
      <summary>在给定 <see cref="T:System.IO.Packaging.Package" /> URI 和包中部件的 URI 的情况下创建包 URI。</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <param name="partUri">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是绝对 URI。

- 或 -

 <paramref name="partUri" /> 不是有效的部件 URI 语法。</exception>
      <returns>给定 <see cref="T:System.IO.Packaging.PackagePart" /> 的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
      <summary>在给定 <see cref="T:System.IO.Packaging.Package" /> URI、包中部件的 URI 以及要追加的“#”片段的情况下创建包 URI。</summary>
      <param name="packageUri">
        <see cref="T:System.IO.Packaging.Package" /> 的 URI。</param>
      <param name="partUri">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <param name="fragment">标识包部件中的元素的“#”引用。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packageUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packageUri" /> 不是绝对 URI。

- 或 -

 <paramref name="partUri" /> 不是有效的部件 URI 语法。

- 或 -

 <paramref name="fragment" /> 为空或不以“#”开头。</exception>
      <returns>标识指定包、包部件和片段的包 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
      <summary>创建格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
      <param name="partUri">包中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 不是绝对 <see cref="T:System.Uri" />。</exception>
      <returns>格式化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
      <summary>返回指定 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的规范化形式。</summary>
      <param name="partUri">要规范化的 <see cref="T:System.IO.Packaging.PackagePart" /> URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 没有有效的 <see cref="T:System.Uri" /> 语法。</exception>
      <returns>给定 <paramref name="partUri" /> 的规范化形式。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
      <summary>返回指向所指定包 URI 的整个程序包的内部 URI。</summary>
      <param name="packUri">从中返回 <see cref="T:System.IO.Packaging.Package" /> URI 的包 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="packUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="packUri" /> 不是绝对 <see cref="T:System.Uri" />。</exception>
      <returns>来自指定 <paramref name="packUri" /> 的 <see cref="T:System.IO.Packaging.Package" /> 的 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
      <summary>返回指定包 URI 内的 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI。</summary>
      <param name="packUri">从中返回 <see cref="T:System.IO.Packaging.PackagePart" /> URI 的包 URI。</param>
      <exception cref="T:System.ArgumentNullException">如果 <paramref name="packUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">如果 <paramref name="packUri" /> 不是绝对 <see cref="T:System.Uri" />。

- 或 -

<paramref name="packUri" /> 不具有“pack://”方案。

- 或 -

从 <paramref name="packUri" /> 中提取的 partUri 不符合有效 partUri 语法。</exception>
      <returns>给定 <paramref name="packUri" /> 中 <see cref="T:System.IO.Packaging.PackagePart" /> 的 URI，如果 <paramref name="packUri" /> 指向包而不是 <see cref="T:System.IO.Packaging.PackagePart" />，则为 <see langword="null" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
      <summary>返回与指定的 <see cref="T:System.IO.Packaging.PackagePart" /> 关联的关系部件的 URI。</summary>
      <param name="partUri">要返回关联 <see cref="P:System.IO.Packaging.PackagePart.Uri" /> 的 URI 的 <see cref="T:System.IO.Packaging.PackagePart" /> 的 <see cref="T:System.IO.Packaging.PackageRelationship" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 语法对于包部件 URI 无效。

- 或 -

 <paramref name="partUri" /> 为绝对 URI。

- 或 -

 <paramref name="partUri" /> 引用关系部件。</exception>
      <returns>与由 <paramref name="partUri" /> 标识的 <see cref="T:System.IO.Packaging.PackageRelationship" /> 关联的 <see cref="T:System.IO.Packaging.PackagePart" /> 部件的 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
      <summary>返回两个指定的 <see cref="T:System.IO.Packaging.PackagePart" /> URI 之间的相对 URI。</summary>
      <param name="sourcePartUri">源部件的 URI。</param>
      <param name="targetPartUri">目标部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetPartUri" /> 没有有效的 <see cref="T:System.Uri" /> 语法。</exception>
      <returns>从 <paramref name="sourcePartUri" /> 到 <paramref name="targetPartUri" /> 的相对 URI。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
      <summary>使用指定的 URI 从 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 中返回 <see cref="T:System.IO.Packaging.PackageRelationship" />。</summary>
      <param name="relationshipPartUri">要从中返回 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的关系部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relationshipPartUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="relationshipPartUri" /> 为绝对 URI。

- 或 -

 <paramref name="relationshipPartUri" /> 语法对于 <see cref="T:System.IO.Packaging.PackagePart" /> 无效。

- 或 -

 <paramref name="relationshipPartUri" /> 不引用关系部件。

- 或 -

关系部件的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 会引用其他关系部件（无效）。</exception>
      <returns>来自于具有指定 <paramref name="relationshipPartUri" /> 的关系的 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> 的 <see cref="T:System.IO.Packaging.PackagePart" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
      <summary>返回一个值，它指示指定的 URI 是否为 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件的 URI。</summary>
      <param name="partUri">用于检查 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件的 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="partUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="partUri" /> 为绝对 URI。

- 或 -

 <paramref name="partUri" /> 是无效的 <see cref="T:System.IO.Packaging.PackagePart" /> 语法。</exception>
      <returns>如果 <paramref name="partUri" /> 标识 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部件，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
    </member>
    <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
      <summary>返回部件 URI，给定源部件 URI 和带有指向目标部件的相对路径的 URI。</summary>
      <param name="sourcePartUri">源部件的 URI，或指定 <see cref="T:System.IO.Packaging.Package" /> 根的“/”。</param>
      <param name="targetUri">到目标部件的相对 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourcePartUri" /> 或 <paramref name="targetUri" /> 为 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="sourcePartUri" /> 不是有效的部件 URI。

- 或 -

 <paramref name="targetUri" /> 不是有效的相对 URI。</exception>
      <returns>指定 <paramref name="SourcePartUri" /> 和 <paramref name="targetUri" /> 参数之间解析的目标部件的 URI。</returns>
    </member>
    <member name="T:System.IO.Packaging.TargetMode">
      <summary>指定 <see cref="T:System.IO.Packaging.PackageRelationship" /> 的目标是在 <see cref="T:System.IO.Packaging.Package" /> 的内部还是外部。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.External">
      <summary>关系引用包外部的资源。</summary>
    </member>
    <member name="F:System.IO.Packaging.TargetMode.Internal">
      <summary>关系引用包内部的部分。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackage">
      <summary>实现抽象 <see cref="T:System.IO.Packaging.Package" /> 基类的派生子类 - <see cref="T:System.IO.Packaging.ZipPackage" /> 类将 ZIP 存档用作容器存储。 此类不能被继承。</summary>
    </member>
    <member name="T:System.IO.Packaging.ZipPackagePart">
      <summary>表示存储在 <see cref="T:System.IO.Packaging.ZipPackage" /> 中的部分。</summary>
    </member>
  </members>
</doc>