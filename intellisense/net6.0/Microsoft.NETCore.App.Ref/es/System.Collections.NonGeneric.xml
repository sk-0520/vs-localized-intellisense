<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.NonGeneric</name>
  </assembly>
  <members>
    <member name="T:System.Collections.CaseInsensitiveComparer">
      <summary>Compara dos objetos para ver la equivalencia omitiendo la distinción entre mayúsculas y minúsculas de las cadenas.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveComparer" /> mediante la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveComparer" /> utilizando la clase <see cref="T:System.Globalization.CultureInfo" /> especificada.</summary>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que debe usarse para el nuevo objeto <see cref="T:System.Collections.CaseInsensitiveComparer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)">
      <summary>Realiza una comparación sin distinguir mayúsculas y minúsculas de dos objetos del mismo tipo y devuelve un valor que indica si uno es menor, igual o mayor que el otro.</summary>
      <param name="a">Primer objeto que se va a comparar.</param>
      <param name="b">Segundo objeto que se va a comparar.</param>
      <exception cref="T:System.ArgumentException">Ni <paramref name="a" /> ni <paramref name="b" /> implementan la interfaz <see cref="T:System.IComparable" />.  
  
o bien 
 <paramref name="a" /> y <paramref name="b" /> son de tipos diferentes.</exception>
      <returns>Entero con signo que indica los valores relativos de <paramref name="a" /> y <paramref name="b" />, como se muestra en la tabla siguiente.  
  
 <list type="table"><listheader><term> Valor</term><description> Significado</description></listheader><item><term> Menor que cero</term><description><paramref name="a" /> es menor que cero <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item><item><term> Cero</term><description><paramref name="a" /> es igual que <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item><item><term> Mayor que cero</term><description><paramref name="a" /> es mayor que cero <paramref name="b" /> si no se distingue entre mayúsculas y minúsculas.</description></item></list></returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.Default">
      <summary>Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual y que siempre está disponible.</summary>
      <returns>Una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant">
      <summary>Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> y que siempre está disponible.</summary>
      <returns>Una instancia de <see cref="T:System.Collections.CaseInsensitiveComparer" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CaseInsensitiveHashCodeProvider">
      <summary>Proporciona un código hash para un objeto y utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> mediante la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</summary>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> utilizando la clase <see cref="T:System.Globalization.CultureInfo" /> especificada.</summary>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" /> que debe usarse para el nuevo objeto <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="culture" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)">
      <summary>Devuelve un código hash para el objeto dado y utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> para el que se va a devolver un código hash.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="obj" /> es <see langword="null" />.</exception>
      <returns>Código hash para el objeto dado que utiliza un algoritmo hash que no distingue entre mayúsculas y minúsculas en las cadenas.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.Default">
      <summary>Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual y que siempre está disponible.</summary>
      <returns>Una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Threading.Thread.CurrentCulture" /> del subproceso actual.</returns>
    </member>
    <member name="P:System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant">
      <summary>Obtiene una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> y que siempre está disponible.</summary>
      <returns>Una instancia de <see cref="T:System.Collections.CaseInsensitiveHashCodeProvider" /> que está asociada a la propiedad <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</returns>
    </member>
    <member name="T:System.Collections.CollectionBase">
      <summary>Proporciona la clase base <see langword="abstract" /> para una colección fuertemente tipada.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CollectionBase" /> con la funcionalidad inicial predeterminada.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.CollectionBase" /> con la capacidad especificada.</summary>
      <param name="capacity">Número de elementos que puede almacenar inicialmente la lista nueva.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.Clear">
      <summary>Elimina todos los objetos de la instancia de <see cref="T:System.Collections.CollectionBase" />. Este método no se puede invalidar.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClear">
      <summary>Realiza procesos personalizados adicionales al borrar el contenido de la instancia <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnClearComplete">
      <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se va a insertar <paramref name="value" />.</param>
      <param name="value">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
      <summary>Realiza procesos de personalización adicionales al quitar un elemento de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de quitar un elemento de la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="value" />.</param>
      <param name="value">Valor del elemento que se va a quitar de <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de establecer un valor en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de base cero en el que se puede encontrar <paramref name="oldValue" />.</param>
      <param name="oldValue">Valor que se va a reemplazar por <paramref name="newValue" />.</param>
      <param name="newValue">Nuevo valor del elemento situado en <paramref name="index" />.</param>
    </member>
    <member name="M:System.Collections.CollectionBase.OnValidate(System.Object)">
      <summary>Realiza procesos de personalización adicionales al validar un valor.</summary>
      <param name="value">Objeto que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.RemoveAt(System.Int32)">
      <summary>Quita el elemento que se encuentra en el índice especificado de la instancia de <see cref="T:System.Collections.CollectionBase" />. Este método no se puede reemplazar.</summary>
      <param name="index">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia la totalidad de <see cref="T:System.Collections.CollectionBase" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.CollectionBase" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.CollectionBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Collections.CollectionBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)">
      <summary>Agrega un objeto al final de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a agregar al final de la colección <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
      <returns>Índice de <see cref="T:System.Collections.CollectionBase" /> en el que se ha agregado <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)">
      <summary>Determina si <see cref="T:System.Collections.CollectionBase" /> contiene un elemento específico.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Collections.CollectionBase" /> contiene el objeto <paramref name="value" /> especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)">
      <summary>Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la primera aparición en toda la colección <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.CollectionBase" />.</param>
      <returns>Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <see cref="T:System.Collections.CollectionBase" />, si se encuentra; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserta un elemento en <see cref="T:System.Collections.CollectionBase" /> en el índice especificado.</summary>
      <param name="index">Índice basado en cero en el que debe insertarse <paramref name="value" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)">
      <summary>Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="value">
        <see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.CollectionBase" />.</param>
      <exception cref="T:System.ArgumentException">No se ha encontrado el parámetro <paramref name="value" /> en el objeto <see cref="T:System.Collections.CollectionBase" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="P:System.Collections.CollectionBase.Capacity">
      <summary>Obtiene o establece el número de elementos que puede contener <see cref="T:System.Collections.CollectionBase" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Collections.CollectionBase.Capacity" /> se establece en un valor que es menor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay memoria suficiente en el sistema.</exception>
      <returns>Número de elementos que puede contener <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.Count">
      <summary>Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.CollectionBase" />. Esta propiedad no se puede invalidar.</summary>
      <returns>El número de elementos contenidos en la instancia de <see cref="T:System.Collections.CollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.InnerList">
      <summary>Obtiene una colección <see cref="T:System.Collections.ArrayList" /> que contiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> que representa la propia instancia de <see cref="T:System.Collections.CollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.List">
      <summary>Obtiene una colección <see cref="T:System.Collections.IList" /> que contiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IList" /> que representa la propia instancia de <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.CollectionBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.CollectionBase" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.CollectionBase" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.CollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize">
      <summary>Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo.</summary>
      <returns>
        <see langword="true" /> si la <see cref="T:System.Collections.CollectionBase" /> tiene un tamaño fijo; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly">
      <summary>Obtiene un valor que indica si <see cref="T:System.Collections.CollectionBase" /> es de solo lectura.</summary>
      <returns>Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.CollectionBase" /> es de solo lectura; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)">
      <summary>Obtiene o establece el elemento en el índice especificado.</summary>
      <param name="index">Índice de base cero del elemento que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
      <returns>Elemento en el índice especificado.</returns>
    </member>
    <member name="T:System.Collections.DictionaryBase">
      <summary>Proporciona la clase base <see langword="abstract" /> para una colección de pares clave-valor fuertemente tipada.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.Clear">
      <summary>Borra el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Collections.DictionaryBase" /> a una <see cref="T:System.Array" /> unidimensional en el índice especificado.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que es el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de la instancia de <see cref="T:System.Collections.DictionaryBase" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.DictionaryBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Collections.DictionaryBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.GetEnumerator">
      <summary>Devuelve un <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClear">
      <summary>Ejecuta procesos personalizados adicionales antes de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnClearComplete">
      <summary>Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)">
      <summary>Obtiene el elemento con la clave y valor especificados en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a obtener.</param>
      <param name="currentValue">Valor actual del elemento asociado a <paramref name="key" />.</param>
      <returns>
        <see cref="T:System.Object" /> que contiene el elemento con la clave y el valor especificados.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a insertar.</param>
      <param name="value">Valor del elemento que se va a insertar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a insertar.</param>
      <param name="value">Valor del elemento que se va a insertar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <param name="value">Valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <param name="value">Valor del elemento que se va a quitar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a buscar.</param>
      <param name="oldValue">Antiguo valor del elemento asociado a <paramref name="key" />.</param>
      <param name="newValue">Nuevo valor del elemento asociado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)">
      <summary>Realiza procesos personalizados adicionales después de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a buscar.</param>
      <param name="oldValue">Antiguo valor del elemento asociado a <paramref name="key" />.</param>
      <param name="newValue">Nuevo valor del elemento asociado a <paramref name="key" />.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)">
      <summary>Ejecuta procesos personalizados adicionales al validar el elemento con la clave y valor especificados.</summary>
      <param name="key">Clave del elemento que se va a validar.</param>
      <param name="value">Valor del elemento que se va a validar.</param>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Agrega un elemento con la clave y el valor especificados a <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con la misma clave en <see cref="T:System.Collections.DictionaryBase" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina si <see cref="T:System.Collections.DictionaryBase" /> contiene una clave específica.</summary>
      <param name="key">Clave que se buscará en <see cref="T:System.Collections.DictionaryBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si la colección <see cref="T:System.Collections.DictionaryBase" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Quita el elemento con la clave especificada de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Count">
      <summary>Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>El número de elementos contenidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.Dictionary">
      <summary>Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.InnerHashtable">
      <summary>Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.Hashtable" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize">
      <summary>Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly">
      <summary>Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)">
      <summary>Obtiene o establece el valor asociado a la clave especificada.</summary>
      <param name="key">Clave cuyo valor se va a obtener o a establecer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La propiedad está establecida y <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.  
  
o bien 
La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</exception>
      <returns>Valor asociado a la clave especificada. Si no se encuentra la clave especificada, al intentar obtenerla se devuelve <see langword="null" /> y al intentar establecerla se crea una nueva entrada con la clave especificada.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys">
      <summary>Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values">
      <summary>Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</returns>
    </member>
    <member name="T:System.Collections.Queue">
      <summary>Representa una colección de objetos de tipo primero en entrar, primero en salir.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial predeterminada y utiliza el factor de crecimiento predeterminado.</summary>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Collections.ICollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que contiene elementos copiados de la colección especificada, tiene la misma capacidad inicial que el número de elementos copiados y utiliza el factor de crecimiento predeterminado.</summary>
      <param name="col">
        <see cref="T:System.Collections.ICollection" /> de donde se van a copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial especificada y utiliza el factor de crecimiento predeterminado.</summary>
      <param name="capacity">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Collections.Queue.#ctor(System.Int32,System.Single)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Queue" /> que está vacía, tiene la capacidad inicial especificada y utiliza el factor de crecimiento especificado.</summary>
      <param name="capacity">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Queue" />.</param>
      <param name="growFactor">Factor de aumento de la capacidad de <see cref="T:System.Collections.Queue" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> es menor que cero.  
  
o bien 
 <paramref name="growFactor" /> es menor que 1,0 o mayor que 10,0.</exception>
    </member>
    <member name="M:System.Collections.Queue.Clear">
      <summary>Quita todos los objetos de la colección <see cref="T:System.Collections.Queue" />.</summary>
    </member>
    <member name="M:System.Collections.Queue.Clone">
      <summary>Crea una copia superficial de la colección <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Copia superficial de la colección <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Contains(System.Object)">
      <summary>Determina si un elemento se encuentra en <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.Queue" />. El valor puede ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> se encuentra en la matriz <see cref="T:System.Collections.Queue" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de <see cref="T:System.Collections.Queue" /> en una <see cref="T:System.Array" /> unidimensional existente, a partir del índice especificado de la matriz.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Queue" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
O bien 
El número de elementos de la <see cref="T:System.Collections.Queue" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.ArrayTypeMismatchException">El tipo de la <see cref="T:System.Collections.Queue" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.Queue.Dequeue">
      <summary>Quita y devuelve el objeto al comienzo de <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.InvalidOperationException">La colección <see cref="T:System.Collections.Queue" /> está vacía.</exception>
      <returns>Objeto que se quita del principio de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Enqueue(System.Object)">
      <summary>Agrega un objeto al final de <see cref="T:System.Collections.Queue" />.</summary>
      <param name="obj">Objeto que se va a agregar a <see cref="T:System.Collections.Queue" />. El valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Queue.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Peek">
      <summary>Devuelve un objeto al principio de <see cref="T:System.Collections.Queue" /> sin eliminarlo.</summary>
      <exception cref="T:System.InvalidOperationException">La colección <see cref="T:System.Collections.Queue" /> está vacía.</exception>
      <returns>Objeto situado al principio de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.Synchronized(System.Collections.Queue)">
      <summary>Devuelve un nuevo <see cref="T:System.Collections.Queue" /> que contiene la cola original y es seguro para subprocesos.</summary>
      <param name="queue">
        <see cref="T:System.Collections.Queue" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="queue" /> es <see langword="null" />.</exception>
      <returns>Contenedor de<see cref="T:System.Collections.Queue" /> que está sincronizado (es seguro para subprocesos).</returns>
    </member>
    <member name="M:System.Collections.Queue.ToArray">
      <summary>Copia los elementos <see cref="T:System.Collections.Queue" /> en una matriz nueva.</summary>
      <returns>Nueva matriz que contiene elementos copiados de <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="M:System.Collections.Queue.TrimToSize">
      <summary>Establece la capacidad en el número real de elementos que hay en <see cref="T:System.Collections.Queue" />.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Queue" /> es de solo lectura.</exception>
    </member>
    <member name="P:System.Collections.Queue.Count">
      <summary>Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Número de elementos contenidos en <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.Queue" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.Queue" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Queue.SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Queue" />.</summary>
      <returns>Un objeto que se puede usar para sincronizar el acceso a la clase <see cref="T:System.Collections.Queue" />.</returns>
    </member>
    <member name="T:System.Collections.ReadOnlyCollectionBase">
      <summary>Proporciona la clase base <see langword="abstract" /> para una colección fuertemente tipada de solo lectura no genérica.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator">
      <summary>Devuelve un enumerador que recorre en iteración la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia la totalidad de <see cref="T:System.Collections.ReadOnlyCollectionBase" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.Count">
      <summary>Obtiene el número de elementos contenidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>El número de elementos contenidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />. La recuperación del valor de esta propiedad es una operación O(1).</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.InnerList">
      <summary>Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>
        <see cref="T:System.Collections.ArrayList" /> que representa la propia instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</summary>
      <returns>Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</returns>
    </member>
    <member name="T:System.Collections.SortedList">
      <summary>Representa una colección de pares de clave y valor ordenados por claves a los que se puede tener acceso por clave y por índice.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial predeterminada y está ordenada en función de la interfaz <see cref="T:System.IComparable" /> implementada por cada clave agregada al objeto <see cref="T:System.Collections.SortedList" />.</summary>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial predeterminada y está ordenada de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial especificada y está ordenada de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="comparer">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
      <param name="capacity">Número inicial de elementos que puede contener el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> es menor que cero.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible para crear un objeto <see cref="T:System.Collections.SortedList" /> con el parámetro <paramref name="capacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que contiene elementos copiados del diccionario especificado, tiene la misma capacidad inicial que el número de elementos copiados y se ordena de acuerdo con la interfaz <see cref="T:System.IComparable" /> implementada por cada clave.</summary>
      <param name="d">Implementación de <see cref="T:System.Collections.IDictionary" /> que se va a copiar en un nuevo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">Uno o más elementos de la <paramref name="d" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que contiene elementos copiados del diccionario especificado, tiene la misma capacidad inicial que el número de elementos copiados y se ordena de acuerdo con la interfaz <see cref="T:System.Collections.IComparer" /> especificada.</summary>
      <param name="d">Implementación de <see cref="T:System.Collections.IDictionary" /> que se va a copiar en un nuevo objeto <see cref="T:System.Collections.SortedList" />.</param>
      <param name="comparer">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar claves.  
  
o bien 
 <see langword="null" /> para usar la implementación de <see cref="T:System.IComparable" /> para cada una de las claves.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">
        <paramref name="comparer" /> es <see langword="null" /> y uno o más elementos de la <paramref name="d" /> no implementan la interfaz de <see cref="T:System.IComparable" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.SortedList" /> que está vacía, tiene la capacidad inicial especificada y está ordenada en función de la interfaz <see cref="T:System.IComparable" /> implementada por cada clave agregada al objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="initialCapacity">Número inicial de elementos que puede contener el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> es menor que cero.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible para crear un objeto <see cref="T:System.Collections.SortedList" /> con el parámetro <paramref name="initialCapacity" /> especificado.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Add(System.Object,System.Object)">
      <summary>Agrega un elemento con la clave y el valor especificados a un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clave del elemento que se va a agregar.</param>
      <param name="value">Valor del elemento que se va a agregar. El valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Ya existe un elemento con el parámetro <paramref name="key" /> especificado en el objeto <see cref="T:System.Collections.SortedList" />.  
  
o bien 
Se establece <see cref="T:System.Collections.SortedList" /> para utilizar la interfaz <see cref="T:System.IComparable" /> y <paramref name="key" /> no implementa la interfaz <see cref="T:System.IComparable" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible para agregar el elemento al objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">El comparador produce una excepción.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clear">
      <summary>Quita todos los elementos de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Clone">
      <summary>Crea una copia superficial de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Copia superficial del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Contains(System.Object)">
      <summary>Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene una clave específica.</summary>
      <param name="key">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El comparador produce una excepción.</exception>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="key" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsKey(System.Object)">
      <summary>Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene una clave específica.</summary>
      <param name="key">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El comparador produce una excepción.</exception>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="key" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.ContainsValue(System.Object)">
      <summary>Determina si un objeto <see cref="T:System.Collections.SortedList" /> contiene un valor específico.</summary>
      <param name="value">Valor que se va a buscar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> contiene un elemento con el parámetro <paramref name="value" /> especificado; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos <see cref="T:System.Collections.SortedList" /> en un objeto <see cref="T:System.Array" /> unidimensional, empezando en el índice especificado de la matriz.</summary>
      <param name="array">Objeto <see cref="T:System.Array" /> unidimensional que constituye el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.SortedList" />. <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="arrayIndex">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
O bien 
El número de elementos del objeto <see cref="T:System.Collections.SortedList" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final del parámetro <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Collections.SortedList" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.SortedList.GetByIndex(System.Int32)">
      <summary>Obtiene el valor que se encuentra en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Índice de base cero del valor que se va a obtener.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <returns>Valor que se encuentra en el índice especificado del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKey(System.Int32)">
      <summary>Obtiene la clave que se encuentra en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Índice de base cero de la clave que se va a obtener.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <returns>Clave que se encuentra en el índice especificado del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetKeyList">
      <summary>Obtiene las claves de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.IList" /> que contiene las claves del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.GetValueList">
      <summary>Obtiene los valores de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.IList" /> que contiene los valores del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfKey(System.Object)">
      <summary>Devuelve el índice de base cero de la clave especificada en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clave que se buscará en el objeto <see cref="T:System.Collections.SortedList" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El comparador produce una excepción.</exception>
      <returns>Índice de base cero del parámetro <paramref name="key" />, si <paramref name="key" /> se encuentra en el objeto <see cref="T:System.Collections.SortedList" />; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.SortedList.IndexOfValue(System.Object)">
      <summary>Devuelve el índice de base cero de la primera aparición del valor especificado en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="value">Valor que se va a buscar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <returns>Índice de base cero de la primera aparición del parámetro <paramref name="value" />, si <paramref name="value" /> se encuentra en el objeto <see cref="T:System.Collections.SortedList" />; en caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.SortedList.Remove(System.Object)">
      <summary>Quita el elemento con la clave especificada de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clave del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.RemoveAt(System.Int32)">
      <summary>Quita el elemento en el índice especificado de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Índice de base cero del elemento que se va a quitar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)">
      <summary>Reemplaza el valor de un índice especificado en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="index">Índice de base cero en el que se guarda <paramref name="value" />.</param>
      <param name="value">
        <see cref="T:System.Object" /> que se va a guardar en el objeto <see cref="T:System.Collections.SortedList" />. El valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> está fuera del intervalo de índices válidos para el objeto <see cref="T:System.Collections.SortedList" />.</exception>
    </member>
    <member name="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)">
      <summary>Devuelve un contenedor sincronizado (seguro para subprocesos) para un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="list">Objeto <see cref="T:System.Collections.SortedList" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> es <see langword="null" />.</exception>
      <returns>Contenedor sincronizado (seguro para subprocesos) para el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="M:System.Collections.SortedList.TrimToSize">
      <summary>Establece la capacidad en el número real de elementos de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.NotSupportedException">El objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
<see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
    </member>
    <member name="P:System.Collections.SortedList.Capacity">
      <summary>Obtiene o establece la capacidad de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor asignado es menor que el número actual de elementos del objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay memoria suficiente en el sistema.</exception>
      <returns>Número de elementos que el objeto <see cref="T:System.Collections.SortedList" /> puede contener.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Count">
      <summary>Obtiene el número de elementos incluidos en un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Número de elementos incluidos en el objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsFixedSize">
      <summary>Obtiene un valor que indica si un objeto <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</summary>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsReadOnly">
      <summary>Obtiene un valor que indica si un objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.SortedList" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.SortedList" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Item(System.Object)">
      <summary>Obtiene o establece el valor asociado a una clave específica de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <param name="key">Clave asociada al valor que se va a obtener o establecer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La propiedad está establecida y el objeto <see cref="T:System.Collections.SortedList" /> es de solo lectura.  
  
o bien 
La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.SortedList" /> tiene un tamaño fijo.</exception>
      <exception cref="T:System.OutOfMemoryException">No hay suficiente memoria disponible para agregar el elemento al objeto <see cref="T:System.Collections.SortedList" />.</exception>
      <exception cref="T:System.InvalidOperationException">El comparador produce una excepción.</exception>
      <returns>Valor asociado al parámetro <paramref name="key" /> del objeto <see cref="T:System.Collections.SortedList" /> si se encuentra <paramref name="key" />; en caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Keys">
      <summary>Obtiene las claves de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.SyncRoot">
      <summary>Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="P:System.Collections.SortedList.Values">
      <summary>Obtiene los valores de un objeto <see cref="T:System.Collections.SortedList" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.SortedList" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.CollectionsUtil">
      <summary>Crea colecciones que omiten las mayúsculas y minúsculas en las cadenas.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Specialized.CollectionsUtil" />.</summary>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Crea una nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial predeterminada.</summary>
      <returns>Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial predeterminada.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
      <summary>Copia las entradas del diccionario especificado a una nueva instancia que no distingue entre mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la misma capacidad inicial que el número de entradas copiadas.</summary>
      <param name="d">
        <see cref="T:System.Collections.IDictionary" /> que debe copiarse en un nuevo <see cref="T:System.Collections.Hashtable" /> que no distinga entre mayúsculas y minúsculas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="d" /> es <see langword="null" />.</exception>
      <returns>Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> que contiene las entradas del <see cref="T:System.Collections.IDictionary" /> especificado.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
      <summary>Crea una nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial especificada.</summary>
      <param name="capacity">Número aproximado de entradas que <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> es menor que cero.</exception>
      <returns>Nueva instancia que no tiene en cuenta el uso de mayúsculas y minúsculas de la clase <see cref="T:System.Collections.Hashtable" /> con la capacidad inicial especificada.</returns>
    </member>
    <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
      <summary>Crea una nueva instancia de la clase <see cref="T:System.Collections.SortedList" />, que omite el uso de mayúsculas y minúsculas en las cadenas.</summary>
      <returns>Nueva instancia de la clase <see cref="T:System.Collections.SortedList" />, que omite el uso de mayúsculas y minúsculas en las cadenas.</returns>
    </member>
    <member name="T:System.Collections.Stack">
      <summary>Representa una colección de objetos no genérica de último en entrar es el primero en salir (LIFO).</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que está vacía y tiene la capacidad inicial predeterminada.</summary>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que contiene elementos copiados de la colección especificada y tiene la misma capacidad inicial que el número de elementos copiados.</summary>
      <param name="col">
        <see cref="T:System.Collections.ICollection" /> de donde se van a copiar elementos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Stack.#ctor(System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Stack" /> que está vacía y tiene la capacidad inicial especificada o la capacidad inicial predeterminada, la que sea mayor.</summary>
      <param name="initialCapacity">Número inicial de elementos que puede contener la colección <see cref="T:System.Collections.Stack" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="initialCapacity" /> es menor que cero.</exception>
    </member>
    <member name="M:System.Collections.Stack.Clear">
      <summary>Quita todos los objetos de la colección <see cref="T:System.Collections.Stack" />.</summary>
    </member>
    <member name="M:System.Collections.Stack.Clone">
      <summary>Crea una copia superficial de la colección <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Copia superficial de la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Contains(System.Object)">
      <summary>Determina si un elemento se encuentra en <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj">Objeto que se va a buscar en <see cref="T:System.Collections.Stack" />. El valor puede ser <see langword="null" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> se encuentra en la matriz <see cref="T:System.Collections.Stack" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
      <summary>Copia el <see cref="T:System.Collections.Stack" /> a un <see cref="T:System.Array" /> unidimensional existente, empezando por el índice especificado de la matriz.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.Stack" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multidimensional.  
  
o bien 
El número de elementos de la <see cref="T:System.Collections.Stack" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Collections.Stack" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Collections.Stack.GetEnumerator">
      <summary>Devuelve una interfaz <see cref="T:System.Collections.IEnumerator" /> para la interfaz <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Peek">
      <summary>Devuelve el objeto situado al principio de <see cref="T:System.Collections.Stack" /> sin eliminarlo.</summary>
      <exception cref="T:System.InvalidOperationException">La colección <see cref="T:System.Collections.Stack" /> está vacía.</exception>
      <returns>
        <see cref="T:System.Object" /> situado al principio de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Pop">
      <summary>Quita y devuelve el objeto situado al principio de <see cref="T:System.Collections.Stack" />.</summary>
      <exception cref="T:System.InvalidOperationException">La colección <see cref="T:System.Collections.Stack" /> está vacía.</exception>
      <returns>
        <see cref="T:System.Object" /> eliminado del principio de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.Push(System.Object)">
      <summary>Inserta un objeto al principio de <see cref="T:System.Collections.Stack" />.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> a insertar en la <see cref="T:System.Collections.Stack" />. El valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
      <summary>Devuelve un contenedor sincronizado (seguro para subprocesos) para la clase <see cref="T:System.Collections.Stack" />.</summary>
      <param name="stack">
        <see cref="T:System.Collections.Stack" /> que se va a sincronizar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stack" /> es <see langword="null" />.</exception>
      <returns>Contenedor sincronizado de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="M:System.Collections.Stack.ToArray">
      <summary>Copia <see cref="T:System.Collections.Stack" /> en una nueva matriz.</summary>
      <returns>Nueva matriz que contiene copias de los elementos de <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.Count">
      <summary>Obtiene el número de elementos incluidos en <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Número de elementos contenidos en <see cref="T:System.Collections.Stack" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.Stack" /> está sincronizado (es seguro para subprocesos).</summary>
      <returns>Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.Stack" /> está sincronizado (es seguro para la ejecución de subprocesos); en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Stack.SyncRoot">
      <summary>Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Stack" />.</summary>
      <returns>Objeto <see cref="T:System.Object" /> que se puede utilizar para sincronizar el acceso a la colección <see cref="T:System.Collections.Stack" />.</returns>
    </member>
  </members>
</doc>