<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.HttpListener</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemeSelector">
      <summary>Seleziona lo schema di autenticazione per un'istanza di <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="httpRequest">Istanza di <see cref="T:System.Net.HttpListenerRequest" /> per la quale selezionare uno schema di autenticazione.</param>
      <returns>Uno dei valori <see cref="T:System.Net.AuthenticationSchemes" /> che indicano il metodo di autenticazione da utilizzare per la richiesta del client specificata.</returns>
    </member>
    <member name="T:System.Net.HttpListener">
      <summary>Fornisce un listener semplice del protocollo HTTP controllato a livello di codice. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Net.HttpListener.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListener" />.</summary>
      <exception cref="T:System.PlatformNotSupportedException">La classe non può essere utilizzata nel sistema operativo corrente. Per utilizzare le istanze di questa classe è necessario Windows Server 2003 o Windows XP SP2.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Abort">
      <summary>Arresta immediatamente l'oggetto <see cref="T:System.Net.HttpListener" /> annullando tutte le richieste correntemente accodate.</summary>
    </member>
    <member name="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
      <summary>Inizia il recupero di una richiesta in ingresso in modo asincrono.</summary>
      <param name="callback">Delegato <see cref="T:System.AsyncCallback" /> che fa riferimento al metodo da richiamare quando è disponibile una richiesta del client.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione. Questo oggetto viene passato al delegato <paramref name="callback" /> al completamento dell'operazione.</param>
      <exception cref="T:System.Net.HttpListenerException">Errore di una chiamata di funzione Win32. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione.</exception>
      <exception cref="T:System.InvalidOperationException">Questo oggetto non è stato avviato o è attualmente interrotto.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> che indica lo stato dell'operazione asincrona.</returns>
    </member>
    <member name="M:System.Net.HttpListener.Close">
      <summary>Chiude <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
      <summary>Completa un'operazione asincrona per recuperare una richiesta del client in ingresso.</summary>
      <param name="asyncResult">Oggetto <see cref="T:System.IAsyncResult" /> ottenuto all'avvio dell'operazione asincrona.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato ottenuto chiamando il metodo <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Errore di una chiamata di funzione Win32. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione.</exception>
      <exception cref="T:System.InvalidOperationException">Il metodo <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> era già stato chiamato per l'oggetto <paramref name="asyncResult" /> specificato.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Oggetto <see cref="T:System.Net.HttpListenerContext" /> che rappresenta la richiesta del client.</returns>
    </member>
    <member name="M:System.Net.HttpListener.GetContext">
      <summary>Attende una richiesta in ingresso e restituisce un risultato quando ne viene ricevuta una.</summary>
      <exception cref="T:System.Net.HttpListenerException">Errore di una chiamata di funzione Win32. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione.</exception>
      <exception cref="T:System.InvalidOperationException">Questo oggetto non è stato avviato o è attualmente interrotto.  
  
-oppure- 
La classe <see cref="T:System.Net.HttpListener" /> non dispone di alcun prefisso URI a cui rispondere.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Oggetto <see cref="T:System.Net.HttpListenerContext" /> che rappresenta una richiesta del client.</returns>
    </member>
    <member name="M:System.Net.HttpListener.GetContextAsync">
      <summary>Attende una richiesta in ingresso come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto attività restituisce un oggetto <see cref="T:System.Net.HttpListenerContext" /> che rappresenta una richiesta del client.</returns>
    </member>
    <member name="M:System.Net.HttpListener.Start">
      <summary>Consente a questa istanza di ricevere le richieste in ingresso.</summary>
      <exception cref="T:System.Net.HttpListenerException">Errore di una chiamata di funzione Win32. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
    </member>
    <member name="M:System.Net.HttpListener.Stop">
      <summary>Fa in modo che questa istanza interrompa la ricezione delle nuove richieste in ingresso e termina l'elaborazione di tutte le richieste in corso.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
    </member>
    <member name="M:System.Net.HttpListener.System#IDisposable#Dispose">
      <summary>Rilascia le risorse contenute nell'oggetto <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemes">
      <summary>Ottiene o imposta lo schema usato per autenticare i client.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>Combinazione bit per bit dei valori dell'enumerazione <see cref="T:System.Net.AuthenticationSchemes" /> che indica come autenticare i client. Il valore predefinito è <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
      <summary>Ottiene o imposta il delegato chiamato per determinare il protocollo usato per autenticare i client.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>Delegato <see cref="T:System.Net.AuthenticationSchemeSelector" /> che richiama il metodo usato per selezionare un protocollo di autenticazione. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.DefaultServiceNames">
      <summary>Ottiene un elenco predefinito di nomi di provider di servizi come determinato dai prefissi registrati.</summary>
      <returns>Oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> che contiene un elenco di nomi di provider di servizi.</returns>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionPolicy">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> da usare per la protezione estesa di una sessione.</summary>
      <exception cref="T:System.ArgumentException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />, ma la proprietà <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> non è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> su <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> dopo la chiamata al metodo <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La proprietà <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> è stata impostata su <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> in una piattaforma che non supporta la protezione estesa.</exception>
      <returns>Oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> che specifica i criteri da usare per la protezione estesa.</returns>
    </member>
    <member name="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
      <summary>Ottiene o imposta il delegato chiamato per determinare l'oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> da usare per ogni richiesta.</summary>
      <exception cref="T:System.ArgumentException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />, ma la proprietà <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> deve essere <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> su <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Si è tentato di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> dopo la chiamata al metodo <see cref="M:System.Net.HttpListener.Start" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <exception cref="T:System.PlatformNotSupportedException">È stato eseguito un tentativo di impostare la proprietà <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> su una piattaforma che non supporta la protezione estesa.</exception>
      <returns>Oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> che specifica i criteri da usare per la protezione estesa.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IgnoreWriteExceptions">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che specifica se l'applicazione riceve le eccezioni che si verificano quando un oggetto <see cref="T:System.Net.HttpListener" /> invia la risposta al client.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>
        <see langword="true" /> Se l' <see cref="T:System.Net.HttpListener" /> oggetto non deve restituire le eccezioni che si verificano durante l'invio della risposta al client; in caso contrario, <see langword="false" /> . Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IsListening">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Net.HttpListener" /> è stato avviato.</summary>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Net.HttpListener" /> è stato avviato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.IsSupported">
      <summary>Ottiene un valore che indica se l'oggetto <see cref="T:System.Net.HttpListener" /> può essere usato con il sistema operativo corrente.</summary>
      <returns>
        <see langword="true" /> su tutte le piattaforme.</returns>
    </member>
    <member name="P:System.Net.HttpListener.Prefixes">
      <summary>Ottiene i prefissi URI (Uniform Resource Identifier) gestiti dall'oggetto <see cref="T:System.Net.HttpListener" />.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>Oggetto <see cref="T:System.Net.HttpListenerPrefixCollection" /> che contiene i prefissi URI per la cui gestione è configurato l'oggetto <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.Realm">
      <summary>Ottiene o imposta l'area di autenticazione, o partizione di risorsa, associata all'oggetto <see cref="T:System.Net.HttpListener" />.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>Valore <see cref="T:System.String" /> che contiene il nome dell'area di autenticazione associata all'oggetto <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.TimeoutManager">
      <summary>Gestore di timeout per questa istanza di <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Gestore di timeout per questa istanza di <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
      <summary>Ottiene o imposta un valore <see cref="T:System.Boolean" /> che controlla se è necessario autenticare altre richieste che usano la stessa connessione TCP (Transmission Control Protocol), quando viene usato NTLM.</summary>
      <exception cref="T:System.ObjectDisposedException">L'oggetto è stato chiuso.</exception>
      <returns>
        <see langword="true" /> se l'interfaccia <see cref="T:System.Security.Principal.IIdentity" /> della prima richiesta verrà utilizzata per le richieste successive sulla stessa connessione; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.HttpListener.ExtendedProtectionSelector">
      <summary>Delegato chiamato per determinare l'oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> da utilizzare per ogni richiesta <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="request">Oggetto <see cref="T:System.Net.HttpListenerRequest" /> per determinare i criteri di protezione estesa che l'istanza di <see cref="T:System.Net.HttpListener" /> utilizzerà per fornire la protezione estesa.</param>
      <returns>Oggetto <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> che specifica i criteri di protezione estesa da utilizzare per questa richiesta.</returns>
    </member>
    <member name="T:System.Net.HttpListenerBasicIdentity">
      <summary>Contiene il nome utente e la password di una richiesta di autenticazione di base.</summary>
    </member>
    <member name="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListenerBasicIdentity" /> utilizzando il nome utente e la password specificati.</summary>
      <param name="username">Nome utente.</param>
      <param name="password">Password.</param>
    </member>
    <member name="P:System.Net.HttpListenerBasicIdentity.Password">
      <summary>Indica la password di un tentativo di autenticazione di base.</summary>
      <returns>Oggetto <see cref="T:System.String" /> in cui è contenuta la password.</returns>
    </member>
    <member name="T:System.Net.HttpListenerContext">
      <summary>Fornisce accesso agli oggetti richiesta e risposta utilizzati dalla classe <see cref="T:System.Net.HttpListener" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
      <summary>Accettare una connessione di WebSocket come operazione asincrona.</summary>
      <param name="subProtocol">Protocollo secondario WebSocket supportato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> è una stringa vuota 
-oppure- 
 <paramref name="subProtocol" /> contiene caratteri non validi.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Si è verificato un errore durante l'invio della risposta per completare l'handshake di WebSocket.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto di attività restituisce un oggetto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
      <summary>Accettare una connessione di WebSocket che specifica il protocollo secondario supportato di WebSocket, che riceve la dimensione del buffer e l'intervallo keep-alive di WebSocket come operazione asincrona.</summary>
      <param name="subProtocol">Protocollo secondario WebSocket supportato.</param>
      <param name="receiveBufferSize">Dimensioni del buffer di ricezione in byte.</param>
      <param name="keepAliveInterval">Intervallo keep-alive, espresso in millisecondi, del protocollo WebSocket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> è una stringa vuota 
-oppure- 
 <paramref name="subProtocol" /> contiene caratteri non validi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="keepAliveInterval" /> è troppo piccolo.  
  
-oppure- 
 <paramref name="receiveBufferSize" /> è minore di 16 byte. 
-oppure- 
 <paramref name="receiveBufferSize" /> è maggiore di 64K byte.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Si è verificato un errore durante l'invio della risposta per completare l'handshake di WebSocket.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto di attività restituisce un oggetto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})">
      <summary>Accettare una connessione di WebSocket che specifica il protocollo secondario supportato di WebSocket e l'intervallo keep-alive di WebSocket come operazione asincrona.</summary>
      <param name="subProtocol">Protocollo secondario WebSocket supportato.</param>
      <param name="receiveBufferSize">Dimensioni del buffer di ricezione in byte.</param>
      <param name="keepAliveInterval">Intervallo keep-alive, espresso in millisecondi, del protocollo WebSocket.</param>
      <param name="internalBuffer">Un buffer interno da utilizzare per questa operazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> è una stringa vuota 
-oppure- 
 <paramref name="subProtocol" /> contiene caratteri non validi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="keepAliveInterval" /> è troppo piccolo.  
  
-oppure- 
 <paramref name="receiveBufferSize" /> è minore di 16 byte. 
-oppure- 
 <paramref name="receiveBufferSize" /> è maggiore di 64K byte.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Si è verificato un errore durante l'invio della risposta per completare l'handshake di WebSocket.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto di attività restituisce un oggetto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
      <summary>Accettare una connessione di WebSocket che specifica il protocollo secondario supportato di WebSocket e l'intervallo keep-alive di WebSocket come operazione asincrona.</summary>
      <param name="subProtocol">Protocollo secondario WebSocket supportato.</param>
      <param name="keepAliveInterval">Intervallo keep-alive, espresso in millisecondi, del protocollo WebSocket.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subProtocol" /> è una stringa vuota 
-oppure- 
 <paramref name="subProtocol" /> contiene caratteri non validi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di <paramref name="keepAliveInterval" /> è troppo piccolo.</exception>
      <exception cref="T:System.Net.WebSockets.WebSocketException">Si è verificato un errore durante l'invio della risposta per completare l'handshake di WebSocket.</exception>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> nell'oggetto di attività restituisce un oggetto <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.Request">
      <summary>Ottiene l'oggetto <see cref="T:System.Net.HttpListenerRequest" /> che rappresenta la richiesta di una risorsa da parte di un client.</summary>
      <returns>Oggetto <see cref="T:System.Net.HttpListenerRequest" /> che rappresenta la richiesta del client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.Response">
      <summary>Ottiene l'oggetto <see cref="T:System.Net.HttpListenerResponse" /> che verrà inviato al client in risposta alla richiesta.</summary>
      <returns>Oggetto <see cref="T:System.Net.HttpListenerResponse" /> utilizzato per inviare una risposta al client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerContext.User">
      <summary>Ottiene un oggetto utilizzato per ottenere informazioni relative all'identità, all'autenticazione e ai ruoli di sicurezza per il client la cui richiesta è rappresentata da questo oggetto <see cref="T:System.Net.HttpListenerContext" />.</summary>
      <returns>Oggetto <see cref="T:System.Security.Principal.IPrincipal" /> che descrive il client oppure <see langword="null" /> se la classe <see cref="T:System.Net.HttpListener" /> che ha fornito questo oggetto <see cref="T:System.Net.HttpListenerContext" /> non richiede autenticazione.</returns>
    </member>
    <member name="T:System.Net.HttpListenerException">
      <summary>Eccezione generata quando si verifica un errore durante l'elaborazione di una richiesta HTTP.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListenerException" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListenerException" /> utilizzando il codice di errore specificato.</summary>
      <param name="errorCode">Valore <see cref="T:System.Int32" /> che identifica l'errore che si è verificato.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Int32,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListenerException" /> utilizzando il codice di errore e il messaggio specificati.</summary>
      <param name="errorCode">Valore <see cref="T:System.Int32" /> che identifica l'errore che si è verificato.</param>
      <param name="message">Classe <see cref="T:System.String" /> che descrive l'errore che si è verificato.</param>
    </member>
    <member name="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Net.HttpListenerException" /> dalle istanze specificate delle classi <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> in cui sono contenute le informazioni richieste per deserializzare il nuovo oggetto <see cref="T:System.Net.HttpListenerException" />.</param>
      <param name="streamingContext">Un oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Net.HttpListenerException.ErrorCode">
      <summary>Ottiene un valore che identifica l'errore che si è verificato.</summary>
      <returns>Valore <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerPrefixCollection">
      <summary>Rappresenta l'insieme utilizzato per memorizzare i prefissi URI (Uniform Resource Identifier) per gli oggetti <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
      <summary>Aggiunge un prefisso URI (Uniform Resource Identifier) alla raccolta.</summary>
      <param name="uriPrefix">Oggetto <see cref="T:System.String" /> che identifica le informazioni sull'URI confrontate nelle richieste in arrivo. Il prefisso deve terminare con una barra ("/").</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="uriPrefix" /> non usa lo schema http:// o https://. Questi sono gli unici schemi supportati per gli oggetti <see cref="T:System.Net.HttpListener" />.  
  
-oppure- 
 Il parametro <paramref name="uriPrefix" /> non è un prefisso URI formattato correttamente. Assicurarsi che la stringa termini con una barra "/".</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.HttpListener" /> associato a questa raccolta è chiuso.</exception>
      <exception cref="T:System.Net.HttpListenerException">Si è verificato un errore durante una chiamata a una funzione Windows. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione. Questa eccezione viene generata se un'altra classe <see cref="T:System.Net.HttpListener" /> ha già aggiunto il prefisso <paramref name="uriPrefix" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Clear">
      <summary>Rimuove tutti i prefissi URI (Uniform Resource Identifier) dall'insieme.</summary>
      <exception cref="T:System.Net.HttpListenerException">Si è verificato un errore durante una chiamata a una funzione Windows. Verificare la proprietà <see cref="P:System.Net.HttpListenerException.ErrorCode" /> dell'eccezione per determinare la causa dell'eccezione.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.HttpListener" /> associato a questa raccolta è chiuso.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
      <summary>Restituisce un valore <see cref="T:System.Boolean" /> che indica se il prefisso specificato è compreso nell'insieme.</summary>
      <param name="uriPrefix">Classe <see cref="T:System.String" /> contenente il prefisso URI (Uniform Resource Identifier) da verificare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'insieme contiene il prefisso specificato dal parametro <paramref name="uriPrefix" />; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia il contenuto di una classe <see cref="T:System.Net.HttpListenerPrefixCollection" /> in una matrice specificata.</summary>
      <param name="array">Classe unidimensionale <see cref="T:System.Array" /> che riceve le stringhe di prefisso URI (Uniform Resource Identifier) in questo insieme.</param>
      <param name="offset">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="array" /> presenta più di una dimensione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Questo insieme contiene più elementi che possono essere memorizzati nel parametro <paramref name="array" /> a partire dal parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.HttpListener" /> associato a questa raccolta è chiuso.</exception>
      <exception cref="T:System.InvalidCastException">Il parametro <paramref name="array" /> non può memorizzare valori di stringa.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copia il contenuto di una classe <see cref="T:System.Net.HttpListenerPrefixCollection" /> in una matrice di stringa specificata.</summary>
      <param name="array">Matrice di stringa unidimensionale che riceve le stringhe di prefisso URI (Uniform Resource Identifier) in questo insieme.</param>
      <param name="offset">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="array" /> presenta più di una dimensione.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Questo insieme contiene più elementi che possono essere memorizzati nel parametro <paramref name="array" /> a partire dal parametro <paramref name="offset" />.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.HttpListener" /> associato a questa raccolta è chiuso.</exception>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
      <summary>Restituisce un oggetto che può essere utilizzato per scorrere l'insieme.</summary>
      <returns>Oggetto che implementa l'interfaccia <see cref="T:System.Collections.IEnumerator" /> e fornisce accesso alle stringhe in questo insieme.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
      <summary>Rimuove l'URI (Uniform Resource Identifier) specificato dall'elenco di prefissi gestiti dall'oggetto <see cref="T:System.Net.HttpListener" />.</summary>
      <param name="uriPrefix">Classe <see cref="T:System.String" /> che contiene il prefisso URI da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Net.HttpListenerException">Si è verificato un errore durante una chiamata a una funzione Windows. Per determinare la causa dell'eccezione, controllare il codice di errore dell'eccezione.</exception>
      <exception cref="T:System.ObjectDisposedException">L'oggetto <see cref="T:System.Net.HttpListener" /> associato a questa raccolta è chiuso.</exception>
      <returns>
        <see langword="true" /> se <paramref name="uriPrefix" /> è stato individuato in <see cref="T:System.Net.HttpListenerPrefixCollection" /> ed è stato rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un oggetto che può essere utilizzato per scorrere l'insieme.</summary>
      <returns>Oggetto che implementa l'interfaccia <see cref="T:System.Collections.IEnumerator" /> e fornisce accesso alle stringhe in questo insieme.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.Count">
      <summary>Ottiene il numero di prefissi contenuti nell'insieme.</summary>
      <returns>Struttura <see cref="T:System.Int32" /> contenente il numero di prefissi in questo insieme.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsReadOnly">
      <summary>Ottiene un valore che indica se l'accesso all'insieme è di sola lettura.</summary>
      <returns>Restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerPrefixCollection.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>Questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerRequest">
      <summary>Descrive una richiesta HTTP in arrivo a un oggetto <see cref="T:System.Net.HttpListener" />. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
      <summary>Consente di avviare una richiesta asincrona per il certificato X.509 v.3 del client.</summary>
      <param name="requestCallback">Delegato <see cref="T:System.AsyncCallback" /> cui fa riferimento il metodo da richiamare al completamento dell'operazione.</param>
      <param name="state">Oggetto definito dall'utente che contiene informazioni sull'operazione. L'oggetto viene passato al delegato di callback al completamento dell'operazione.</param>
      <returns>Interfaccia <see cref="T:System.IAsyncResult" /> indicante lo stato dell'operazione.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
      <summary>Consente di terminare una richiesta asincrona per il certificato X.509 v.3 del client.</summary>
      <param name="asyncResult">La richiesta in sospeso per un certificato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> non è stato ottenuto chiamando <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e" />.</exception>
      <exception cref="T:System.InvalidOperationException">Questo metodo è già stato chiamato per l'operazione identificata da <paramref name="asyncResult" />.</exception>
      <returns>Oggetto <see cref="T:System.IAsyncResult" /> restituito all'avvio dell'operazione.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificate">
      <summary>Consente di recuperare il certificato X.509 v.3 del client.</summary>
      <exception cref="T:System.InvalidOperationException">È in corso una chiamata a questo metodo per recuperare il certificato X.509 v.3 del client, pertanto non è possibile effettuarne un'altra.</exception>
      <returns>Oggetto <see cref="N:System.Security.Cryptography.X509Certificates" /> contenente il certificato X.509 v.3 del client.</returns>
    </member>
    <member name="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
      <summary>Recupera il certificato X.509 v.3 del client come operazione asincrona.</summary>
      <returns>Oggetto dell'attività che rappresenta l'operazione asincrona. La proprietà <see cref="P:System.Threading.Tasks.Task`1.Result" /> sull'oggetto attività restituisce un oggetto <see cref="N:System.Security.Cryptography.X509Certificates" /> che contiene il certificato X.509 v.3 del client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.AcceptTypes">
      <summary>Ottiene i tipi MIME accettati dal client.</summary>
      <returns>Matrice <see cref="T:System.String" /> che contiene i nomi di tipo specificati nell'intestazione <see langword="Accept" /> della richiesta o <see langword="null" /> se la richiesta del client non include un'intestazione <see langword="Accept" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ClientCertificateError">
      <summary>Ottiene un codice di errore che identifica un problema con la classe <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> fornita dal client.</summary>
      <exception cref="T:System.InvalidOperationException">Il certificato client non è stato ancora inizializzato da una chiamata ai metodi <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> o <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> 
-oppure- 
L'operazione è ancora in corso.</exception>
      <returns>Valore <see cref="T:System.Int32" /> contenente un codice di errore di Windows.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentEncoding">
      <summary>Ottiene la codifica del contenuto che può essere usata con i dati inviati con la richiesta.</summary>
      <returns>Oggetto <see cref="T:System.Text.Encoding" /> adatto per l'utilizzo con i dati nella proprietà <see cref="P:System.Net.HttpListenerRequest.InputStream" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentLength64">
      <summary>Ottiene la lunghezza dei dati del corpo inclusi nella richiesta.</summary>
      <returns>Valore dell'intestazione <see langword="Content-Length" /> della richiesta. Se la lunghezza del contenuto non è nota, il valore è uguale a -1.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ContentType">
      <summary>Ottiene il tipo MIME dei dati del corpo inclusi nella richiesta.</summary>
      <returns>Classe <see cref="T:System.String" /> contenente il testo dell'intestazione <see langword="Content-Type" /> della richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Cookies">
      <summary>Ottiene i cookie inviati con la richiesta.</summary>
      <returns>Classe <see cref="T:System.Net.CookieCollection" /> contenente i cookie associati alla richiesta. Da questa proprietà viene restituito un insieme vuoto se nella richiesta non sono contenuti cookie.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HasEntityBody">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se alla richiesta sono associati i dati del corpo.</summary>
      <returns>
        <see langword="true" /> se alla richiesta sono associati i dati del corpo; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Headers">
      <summary>Ottiene un insieme delle coppie nome/valore di intestazione inviate nella risposta.</summary>
      <returns>Classe <see cref="T:System.Net.WebHeaderCollection" /> contenente le intestazioni HTTP incluse nella richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.HttpMethod">
      <summary>Ottiene il metodo HTTP specificato dal client.</summary>
      <returns>Classe <see cref="T:System.String" /> contenente il metodo utilizzato nella richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.InputStream">
      <summary>Ottiene un flusso contenente i dati del corpo inviati dal client.</summary>
      <returns>Oggetto <see cref="T:System.IO.Stream" /> leggibile contenente i byte inviati dal client nel corpo della richiesta. Da questa proprietà viene restituito <see cref="F:System.IO.Stream.Null" /> se non viene inviato alcun dato con la richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsAuthenticated">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se il client che invia la richiesta è autenticato.</summary>
      <returns>
        <see langword="true" /> se il client è stato autenticato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsLocal">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se la richiesta proviene dal computer locale.</summary>
      <returns>
        <see langword="true" /> se la richiesta ha avuto origine sullo stesso computer dell'oggetto <see cref="T:System.Net.HttpListener" /> che ha fornito la richiesta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsSecureConnection">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se la connessione TCP utilizzata per inviare la richiesta utilizza il protocollo SSL (Secure Sockets Layer).</summary>
      <returns>
        <see langword="true" /> se la connessione TCP utilizza il protocollo SSL; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.IsWebSocketRequest">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se la connessione TCP era una richiesta a WebSocket.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> se la connessione TCP è una richiesta di WebSocket; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.KeepAlive">
      <summary>Ottiene un valore <see cref="T:System.Boolean" /> che indica se dal client viene richiesta una connessione permanente.</summary>
      <returns>
        <see langword="true" /> se la connessione deve essere mantenuta attiva; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.LocalEndPoint">
      <summary>Ottiene l'indirizzo IP e il numero di porta del server a cui è diretta la richiesta.</summary>
      <returns>Classe <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'indirizzo IP a cui viene inviata la richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ProtocolVersion">
      <summary>Ottiene la versione HTTP utilizzata dal client richiedente.</summary>
      <returns>Classe <see cref="T:System.Version" /> che identifica la versione HTTP del client</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.QueryString">
      <summary>Ottiene la stringa di query inclusa nella richiesta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenente i dati della query inclusi nella richiesta <see cref="P:System.Net.HttpListenerRequest.Url" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RawUrl">
      <summary>Ottiene le informazioni sull'URL (senza host e porta) richieste dal client.</summary>
      <returns>Classe <see cref="T:System.String" /> contenente l'URL non elaborato per questa richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RemoteEndPoint">
      <summary>Ottiene l'indirizzo IP e il numero di porta del client da cui ha avuto origine la richiesta.</summary>
      <returns>Classe <see cref="T:System.Net.IPEndPoint" /> che rappresenta l'indirizzo IP e il numero di porta da cui ha avuto origine la richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.RequestTraceIdentifier">
      <summary>Ottiene l'identificatore di richiesta della richiesta HTTP in ingresso.</summary>
      <returns>Oggetto <see cref="T:System.Guid" /> contenente l'identificatore della richiesta HTTP.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.ServiceName">
      <summary>Ottiene il nome del provider di servizi inviato dal client alla richiesta.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il nome del provider di servizi inviato dal client alla richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.TransportContext">
      <summary>Ottiene l'oggetto <see cref="T:System.Net.TransportContext" /> per la richiesta del client.</summary>
      <returns>Oggetto <see cref="T:System.Net.TransportContext" /> relativo alla richiesta del client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.Url">
      <summary>Ottiene l'oggetto <see cref="T:System.Uri" /> richiesto dal client.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> che identifica la risorsa richiesta dal client.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UrlReferrer">
      <summary>Ottiene l'URI della risorsa che ha associato il client al server.</summary>
      <returns>Oggetto <see cref="T:System.Uri" /> contenente il testo dell'intestazione <see cref="F:System.Net.HttpRequestHeader.Referer" /> della richiesta oppure <see langword="null" /> se l'intestazione non era inclusa nella richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserAgent">
      <summary>Ottiene l'agente utente presentato dal client.</summary>
      <returns>Oggetto <see cref="T:System.String" /> contenente il testo dell'intestazione <see langword="User-Agent" /> della richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostAddress">
      <summary>Ottiene l'indirizzo IP e il numero di porta del server a cui è diretta la richiesta.</summary>
      <returns>Classe <see cref="T:System.String" /> contenente le informazioni sull'indirizzo host.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserHostName">
      <summary>Ottiene il nome DNS e, se fornito, il numero di porta specificato dal client.</summary>
      <returns>Valore di <see cref="T:System.String" /> contenente il testo dell'intestazione <see langword="Host" /> della richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerRequest.UserLanguages">
      <summary>Ottiene i linguaggi naturali preferiti per la risposta.</summary>
      <returns>Matrice <see cref="T:System.String" /> contenente i linguaggi specificati nell'intestazione <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> della richiesta o <see langword="null" /> se nella richiesta del client non è inclusa un'intestazione <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />.</returns>
    </member>
    <member name="T:System.Net.HttpListenerResponse">
      <summary>Rappresenta la risposta a una richiesta gestita da un oggetto <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Abort">
      <summary>Chiude la connessione al client senza inviare una risposta.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AddHeader(System.String,System.String)">
      <summary>Aggiunge l'intestazione e il valore specificati alle intestazioni HTTP per questa risposta.</summary>
      <param name="name">Nome dell'intestazione HTTP da impostare.</param>
      <param name="value">Valore dell'intestazione <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> è <see langword="null" /> o è una stringa vuota ("").</exception>
      <exception cref="T:System.ArgumentException">Non è consentito specificare un valore per l'intestazione specificata.  
  
-oppure- 
 <paramref name="name" /> oppure <paramref name="value" /> contengono caratteri non validi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Solo .NET Framework e .NET Core versioni 2.0-3.1: la lunghezza di <paramref name="value" /> è maggiore di 65.535 caratteri.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
      <summary>Aggiunge la classe <see cref="T:System.Net.Cookie" /> specificata alla raccolta di cookie per la risposta.</summary>
      <param name="cookie">
        <see cref="T:System.Net.Cookie" /> da aggiungere alla raccolta da inviare con la risposta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.AppendHeader(System.String,System.String)">
      <summary>Aggiunge un valore all'intestazione HTTP specificata da inviare con la risposta.</summary>
      <param name="name">Nome dell'intestazione HTTP da aggiungere a <paramref name="value" />.</param>
      <param name="value">Valore da aggiungere all'intestazione <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> è <see langword="null" /> o è una stringa vuota ("").  
  
-oppure- 
Non è consentito specificare un valore per l'intestazione specificata.  
  
-oppure- 
 <paramref name="name" /> oppure <paramref name="value" /> contengono caratteri non validi.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Solo .NET Framework e .NET Core versioni 2.0-3.1: la lunghezza di <paramref name="value" /> è maggiore di 65.535 caratteri.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close">
      <summary>Invia la risposta al client e rilascia le risorse contenute nell'istanza di <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
      <summary>Invia la matrice di byte specificata al client e rilascia le risorse contenute nell'istanza di <see cref="T:System.Net.HttpListenerResponse" />.</summary>
      <param name="responseEntity">Matrice <see cref="T:System.Byte" /> che contiene la risposta da inviare al client.</param>
      <param name="willBlock">
        <see langword="true" /> per bloccare l'esecuzione durante la cancellazione del flusso verso il client; in caso contrario<see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="responseEntity" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
      <summary>Copia le proprietà dalla classe <see cref="T:System.Net.HttpListenerResponse" /> specificata in questa risposta.</summary>
      <param name="templateResponse">Istanza di <see cref="T:System.Net.HttpListenerResponse" /> da copiare.</param>
    </member>
    <member name="M:System.Net.HttpListenerResponse.Redirect(System.String)">
      <summary>Configura la risposta per reindirizzare il client all'URL specificato.</summary>
      <param name="url">URL che il client deve utilizzare per individuare la risorsa richiesta.</param>
    </member>
    <member name="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
      <summary>Aggiunge o aggiorna una classe <see cref="T:System.Net.Cookie" /> nell'insieme di cookie inviati con questa risposta.</summary>
      <param name="cookie">Classe <see cref="T:System.Net.Cookie" /> per questa risposta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il cookie esiste già nell'insieme e non può essere sostituito.</exception>
    </member>
    <member name="M:System.Net.HttpListenerResponse.System#IDisposable#Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Net.HttpListenerResponse" />.</summary>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentEncoding">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.Text.Encoding" /> per la proprietà <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> di questa risposta.</summary>
      <returns>Oggetto <see cref="T:System.Text.Encoding" /> che può essere utilizzato con i dati della proprietà <see cref="P:System.Net.HttpListenerResponse.OutputStream" /> oppure <see langword="null" /> se non è stata specificata alcuna codifica.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentLength64">
      <summary>Ottiene o imposta il numero di byte dei dati del corpo inclusi nella risposta.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore specificato per un'operazione di impostazione è minore di zero.</exception>
      <exception cref="T:System.InvalidOperationException">La risposta è già stata inviata.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Valore dell'intestazione <see langword="Content-Length" /> della risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ContentType">
      <summary>Ottiene o imposta il tipo MIME del contenuto restituito.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione di impostazione è una stringa vuota ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Istanza <see cref="T:System.String" /> contenente il testo dell'intestazione <see langword="Content-Type" /> della risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Cookies">
      <summary>Ottiene o imposta l'insieme di cookie restituito con la risposta.</summary>
      <returns>Classe <see cref="T:System.Net.CookieCollection" /> che contiene i cookie che accompagnano la risposta. L'insieme è vuoto se nessun cookie è stato aggiunto alla risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.Headers">
      <summary>Ottiene o imposta un insieme di coppie nome/valore di intestazione restituite dal server.</summary>
      <exception cref="T:System.InvalidOperationException">L'istanza di <see cref="T:System.Net.WebHeaderCollection" /> specificata per un'operazione di impostazione non è valida per una risposta.</exception>
      <returns>Istanza di <see cref="T:System.Net.WebHeaderCollection" /> contenente tutte le intestazioni HTTP impostate in modo esplicito da includere nella risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.KeepAlive">
      <summary>Ottiene o imposta un valore che indica se il server richiede una connessione permanente.</summary>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>
        <see langword="true" /> se il server richiede una connessione permanente; in caso contrario, <see langword="false" />. Il valore predefinito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.OutputStream">
      <summary>Ottiene un oggetto <see cref="T:System.IO.Stream" /> nel quale è possibile scrivere una risposta.</summary>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Oggetto <see cref="T:System.IO.Stream" /> nel quale è possibile scrivere una risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.ProtocolVersion">
      <summary>Ottiene o imposta la versione HTTP utilizzata per la risposta.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione di impostazione non ha la proprietà <see cref="P:System.Version.Major" /> impostata su 1 oppure non ha la proprietà <see cref="P:System.Version.Minor" /> impostata su 0 o 1.</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Oggetto <see cref="T:System.Version" /> indicante la versione di HTTP utilizzata durante la risposta al client. Si noti che questa proprietà è attualmente obsoleta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.RedirectLocation">
      <summary>Ottiene o imposta il valore dell'intestazione HTTP <see langword="Location" /> in questa risposta.</summary>
      <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione di impostazione è una stringa vuota ("").</exception>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <returns>Classe <see cref="T:System.String" /> contenente l'URL assoluto da inviare al client nell'intestazione <see langword="Location" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.SendChunked">
      <summary>Ottiene o imposta l'eventuale utilizzo di una codifica di trasferimento in blocchi.</summary>
      <returns>
        <see langword="true" /> se la risposta è impostata per utilizzare codifica di trasferimento in blocchi; in caso contrario <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusCode">
      <summary>Ottiene o imposta il codice di stato HTTP che deve essere restituito al client.</summary>
      <exception cref="T:System.ObjectDisposedException">Questo oggetto è chiuso.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">Il valore specificato per un'operazione di impostazione non è valido. I valori validi sono compresi fra 100 e 999 inclusi.</exception>
      <returns>Valore <see cref="T:System.Int32" /> che specifica il codice di stato HTTP per la risorsa richiesta. L'impostazione predefinita è l'enumerazione <see cref="F:System.Net.HttpStatusCode.OK" />, che indica che il server ha elaborato correttamente la richiesta del client e ha incluso la risorsa richiesta nel corpo della risposta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerResponse.StatusDescription">
      <summary>Ottiene o imposta una descrizione del testo del codice di stato HTTP restituito al client.</summary>
      <exception cref="T:System.ArgumentNullException">Il valore specificato per un'operazione set è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il valore specificato per un'operazione Set contiene caratteri non stampabili.</exception>
      <returns>Descrizione del testo del codice di stato HTTP restituito al client. L'impostazione predefinita è la descrizione di RFC 2616 per il valore della proprietà <see cref="P:System.Net.HttpListenerResponse.StatusCode" /> oppure una stringa vuota ("") se la descrizione RFC 2616 non esiste.</returns>
    </member>
    <member name="T:System.Net.HttpListenerTimeoutManager">
      <summary>Gestore di timeout da utilizzare per un oggetto <see cref="T:System.Net.HttpListener" />.</summary>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody">
      <summary>Ottiene o imposta il tempo di attesa consentito all'elemento <see cref="T:System.Net.HttpListener" /> per svuotare il corpo dell'entità in una connessione keep-alive.</summary>
      <returns>Tempo consentito all'oggetto <see cref="T:System.Net.HttpListener" /> per svuotare il corpo dell'entità in una connessione keep-alive.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.EntityBody">
      <summary>Ottiene o imposta il tempo di attesa consentito per l'arrivo del corpo dell'entità della richiesta.</summary>
      <returns>Tempo consentito per l'arrivo del corpo dell'entità di richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.HeaderWait">
      <summary>Ottiene o imposta il tempo consentito all'oggetto <see cref="T:System.Net.HttpListener" /> per analizzare l'intestazione della richiesta.</summary>
      <returns>Tempo consentito all'oggetto <see cref="T:System.Net.HttpListener" /> per analizzare l'intestazione della richiesta.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.IdleConnection">
      <summary>Ottiene o imposta il tempo consentito per una connessione inattiva.</summary>
      <returns>Tempo consentito per una connessione inattiva.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond">
      <summary>Ottiene o imposta la frequenza di invio minima per la risposta, espressa in byte al secondo.</summary>
      <returns>Frequenza di invio minima per la risposta, espressa in byte al secondo.</returns>
    </member>
    <member name="P:System.Net.HttpListenerTimeoutManager.RequestQueue">
      <summary>Ottiene o imposta il tempo consentito alla richiesta per rimanere in coda prima che sia selezionata dall'oggetto <see cref="T:System.Net.HttpListener" />.</summary>
      <returns>Tempo consentito per la richiesta di rimanere nella coda di richieste prima che lo <see cref="T:System.Net.HttpListener" /> prelevi.</returns>
    </member>
    <member name="T:System.Net.WebSockets.HttpListenerWebSocketContext">
      <summary>Fornisce l'accesso alle informazioni ricevute dalla classe <see cref="T:System.Net.HttpListener" /> durante l'accettazione delle connessioni di WebSocket.</summary>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.CookieCollection">
      <summary>Ottiene il cookie ricevuto dall'oggetto <see cref="T:System.Net.HttpListener" /> durante l'handshake di apertura di WebSocket.</summary>
      <returns>Cookie ricevuti dall'oggetto <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Headers">
      <summary>Ottiene le intestazioni HTTP ricevute dall'oggetto <see cref="T:System.Net.HttpListener" /> durante l'handshake di apertura di WebSocket.</summary>
      <returns>Intestazioni HTTP ricevute dall'oggetto <see cref="T:System.Net.HttpListener" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsAuthenticated">
      <summary>Ottiene un valore che indica se il client WebSocket è autenticato.</summary>
      <returns>
        <see langword="true" /> Se il client di WebSocket è autenticato; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsLocal">
      <summary>Ottiene un valore che indica se il client WebSocket si è connesso dal computer locale.</summary>
      <returns>
        <see langword="true" /> Se il client WebSocket si è connesso dal computer locale; in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.IsSecureConnection">
      <summary>Ottiene un valore che indica se la connessione WebSocket è protetta mediante SSL (Secure Sockets Layer).</summary>
      <returns>
        <see langword="true" /> Se la connessione WebSocket è protetta tramite SSL. in caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.Origin">
      <summary>Ottiene il valore dell'intestazione HTTP di origine inclusa nell'handshake di apertura WebSocket.</summary>
      <returns>Valore dell'intestazione HTTP di origine.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.RequestUri">
      <summary>Ottiene l'URI richiesto dal client WebSocket.</summary>
      <returns>URI richiesto dal client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketKey">
      <summary>Ottiene il valore dell'intestazione HTTP di SecWebSocketKey inclusa nell'handshake di apertura WebSocket.</summary>
      <returns>Valore dell'intestazione HTTP SecWebSocketKey.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketProtocols">
      <summary>Ottiene l'elenco dei protocolli WebSocket Secure inclusi nell'handshake di apertura di WebSocket.</summary>
      <returns>Elenco dei protocolli WebSocket Secure.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.SecWebSocketVersion">
      <summary>Ottiene l'elenco dei sottoprotocolli richiesti dal client WebSocket.</summary>
      <returns>L'elenco dei sottoprotocolli richiesti dal client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.User">
      <summary>Ottiene un oggetto utilizzato per ottenere identità, informazioni di autenticazione e ruoli di sicurezza per il client WebSocket.</summary>
      <returns>Identità, informazioni di autenticazione e ruoli di sicurezza per il client WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.HttpListenerWebSocketContext.WebSocket">
      <summary>Ottiene l'istanza di <see cref="T:System.Net.WebSockets.WebSocket" /> usata per inviare e ricevere dati sulla connessione <see cref="T:System.Net.WebSockets.WebSocket" />.</summary>
      <returns>
        <see cref="T:System.Net.WebSockets.WebSocket" />Istanza di utilizzata per inviare e ricevere dati tramite la <see cref="T:System.Net.WebSockets.WebSocket" /> connessione.</returns>
    </member>
  </members>
</doc>