<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Channels</name>
  </assembly>
  <members>
    <member name="T:System.Threading.Channels.BoundedChannelFullMode">
      <summary>Specifica il comportamento da usare per la scrittura in un canale con vincoli che è già pieno.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropNewest">
      <summary>Rimuove e ignora l'elemento più recente nel canale per liberare spazio per l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropOldest">
      <summary>Rimuove e ignora l'elemento meno recente nel canale per liberare spazio per l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.DropWrite">
      <summary>Trascina l'elemento in corso di scrittura.</summary>
    </member>
    <member name="F:System.Threading.Channels.BoundedChannelFullMode.Wait">
      <summary>Attende che ci sia spazio disponibile per completare l'operazione di scrittura.</summary>
    </member>
    <member name="T:System.Threading.Channels.BoundedChannelOptions">
      <summary>Opzioni che controllano il comportamento delle istanze <see cref="T:System.Threading.Channels.Channel`1" /> associate.</summary>
    </member>
    <member name="M:System.Threading.Channels.BoundedChannelOptions.#ctor(System.Int32)">
      <summary>Inizializza le opzioni.</summary>
      <param name="capacity">Numero massimo di elementi che possono essere archiviati nel canale con vincoli.</param>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.Capacity">
      <summary>Ottiene o imposta il numero massimo di elementi che possono essere archiviati nel canale con vincoli.</summary>
    </member>
    <member name="P:System.Threading.Channels.BoundedChannelOptions.FullMode">
      <summary>Ottiene o imposta il comportamento determinato dalle operazioni di scrittura quando il canale è pieno.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel">
      <summary>Fornisce i metodi statici per la creazione dei canali.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Int32)">
      <summary>Crea un canale con la capacità massima specificata.</summary>
      <param name="capacity">Numero massimo di elementi che possono essere archiviati nel canale.</param>
      <typeparam name="T">Specifica il tipo di dati nel canale.</typeparam>
      <returns>Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateBounded``1(System.Threading.Channels.BoundedChannelOptions)">
      <summary>Crea un canale con la capacità massima specificata.</summary>
      <param name="options">Opzioni che influiscono sul comportamento del canale.</param>
      <typeparam name="T">Specifica il tipo di dati nel canale.</typeparam>
      <returns>Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1">
      <summary>Crea un canale senza vincoli utilizzabile contemporaneamente da qualsiasi numero di lettori e writer.</summary>
      <typeparam name="T">Tipo di dati nel canale.</typeparam>
      <returns>Canale creato.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel.CreateUnbounded``1(System.Threading.Channels.UnboundedChannelOptions)">
      <summary>Crea un canale senza vincoli soggetto alle opzioni specificate.</summary>
      <param name="options">Opzioni che influiscono sul comportamento del canale.</param>
      <typeparam name="T">Specifica il tipo di dati nel canale.</typeparam>
      <returns>Canale creato.</returns>
    </member>
    <member name="T:System.Threading.Channels.Channel`1">
      <summary>Fornisce una classe di base per i canali che supportano gli elementi di lettura e scrittura di tipo <typeparamref name="T" />.</summary>
      <typeparam name="T">Specifica il tipo di dati leggibili e scrivibili nel canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`1.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Threading.Channels.Channel`1" />.</summary>
    </member>
    <member name="T:System.Threading.Channels.Channel`2">
      <summary>Fornisce una classe di base per i canali che supportano gli elementi di lettura di tipo <typeparamref name="TRead" /> e gli elementi di scrittura di tipo <typeparamref name="TWrite" />.</summary>
      <typeparam name="TWrite">Specifica il tipo di dati che possono essere scritti nel canale.</typeparam>
      <typeparam name="TRead">Specifica il tipo di dati che possono essere letti dal canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Threading.Channels.Channel`2" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelReader{`1}">
      <summary>Cast implicito da <see cref="T:System.Threading.Channels.Channel`2" /> alla metà leggibile corrispondente.</summary>
      <param name="channel">Oggetto <see cref="T:System.Threading.Channels.Channel`2" /> di cui viene eseguito il cast.</param>
      <returns>Metà leggibile.</returns>
    </member>
    <member name="M:System.Threading.Channels.Channel`2.op_Implicit(System.Threading.Channels.Channel{`0,`1})~System.Threading.Channels.ChannelWriter{`0}">
      <summary>Cast implicito da <see cref="T:System.Threading.Channels.Channel`2" /> alla metà scrivibile corrispondente.</summary>
      <param name="channel">Oggetto <see cref="T:System.Threading.Channels.Channel`2" /> di cui viene eseguito il cast.</param>
      <returns>Metà scrivibile.</returns>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Reader">
      <summary>Ottiene la metà leggibile del canale.</summary>
    </member>
    <member name="P:System.Threading.Channels.Channel`2.Writer">
      <summary>Ottiene la metà scrivibile del canale.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelClosedException">
      <summary>Eccezione generata quando si usa un canale dopo che è stato chiuso.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="innerException">Eccezione che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" /> con dati serializzati.</summary>
      <param name="info">Oggetto che contiene i dati oggetto serializzati.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="M:System.Threading.Channels.ChannelClosedException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.ChannelClosedException" />.</summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
      <param name="innerException">Eccezione che rappresenta la causa dell'eccezione corrente.</param>
    </member>
    <member name="T:System.Threading.Channels.ChannelOptions">
      <summary>Fornisce opzioni che controllano il comportamento delle istanze del canale.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelOptions.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Threading.Channels.ChannelOptions" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.AllowSynchronousContinuations">
      <summary>Restituisce <see langword="true" /> se le operazioni eseguite in un canale richiamano in modo sincrono continuazioni che hanno sottoscritto notifiche di operazioni asincrone in sospeso. Restituisce <see langword="false" /> se tutte le continuazioni devono essere richiamate in modo asincrono.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleReader">
      <summary>
        <see langword="true" /> i lettori del canale garantiscono che non ci sarà mai più di una operazione di lettura alla volta; <see langword="false" /> se non è garantito un vincolo di questo genere.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelOptions.SingleWriter">
      <summary>
        <see langword="true" /> i writer del canale garantiscono che non ci sarà mai più di una operazione di scrittura alla volta; <see langword="false" /> se non è garantito un vincolo di questo genere.</summary>
    </member>
    <member name="T:System.Threading.Channels.ChannelReader`1">
      <summary>Fornisce una classe di base per la lettura da un canale.</summary>
      <typeparam name="T">Specifica il tipo di dati che possono essere letti dal canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Threading.Channels.ChannelReader`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAllAsync(System.Threading.CancellationToken)">
      <summary>Crea un elemento <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> che consente la lettura di tutti i dati dal canale.</summary>
      <param name="cancellationToken">Token di annullamento usato per annullare l'enumerazione.</param>
      <returns>Elemento asincrono creato enumerabile.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.ReadAsync(System.Threading.CancellationToken)">
      <summary>Legge in modo asincrono un elemento dal canale.</summary>
      <param name="cancellationToken">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di lettura.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask`1" /> che rappresenta l'operazione di lettura asincrona.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.TryRead(`0@)">
      <summary>Tenta di leggere un elemento dal canale.</summary>
      <param name="item">Elemento letto o un valore predefinito se non è stato possibile leggere alcun elemento.</param>
      <returns>
        <see langword="true" /> se è stato letto un elemento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelReader`1.WaitToReadAsync(System.Threading.CancellationToken)">
      <summary>Restituisce un <see cref="T:System.Threading.Tasks.ValueTask`1" /> che verrà completato quando sono disponibili i dati per la lettura.</summary>
      <param name="cancellationToken">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di attesa.</param>
      <returns>
        <para>
          <see cref="T:System.Threading.Tasks.ValueTask`1" /> che verrà completato con un risultato <see langword="true" /> quando sono disponibili i dati per la lettura o con un risultato <see langword="false" /> quando non sono disponibili altri dati perché il canale viene completato correttamente.</para>
        <para>Se il canale viene completato con un'eccezione, anche l'attività verrà completata con un'eccezione.</para>
      </returns>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.CanCount">
      <summary>Ottiene un valore che indica se la proprietà <see cref="P:System.Threading.Channels.ChannelReader`1.Count" /> è disponibile per l'uso in questa istanza di <see cref="T:System.Threading.Channels.ChannelReader`1" />.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Completion">
      <summary>Ottiene un <see cref="T:System.Threading.Tasks.Task" /> che viene completato quando nessun altro dato è disponibile per la lettura da questo canale.</summary>
    </member>
    <member name="P:System.Threading.Channels.ChannelReader`1.Count">
      <summary>Ottiene il numero corrente di elementi disponibili da questo reader di canale.</summary>
      <exception cref="T:System.NotSupportedException">Il conteggio non è supportato in questa istanza.</exception>
    </member>
    <member name="T:System.Threading.Channels.ChannelWriter`1">
      <summary>Fornisce una classe di base per la scrittura in un canale.</summary>
      <typeparam name="T">Specifica il tipo di dati che possono essere scritti nel canale.</typeparam>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Threading.Channels.ChannelWriter`1" />.</summary>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.Complete(System.Exception)">
      <summary>Contrassegnare il canale come completo, per indicare che non saranno scritti altri elementi.</summary>
      <param name="error">Eccezione facoltativa che indica un errore che causa il completamento del canale.</param>
      <exception cref="T:System.InvalidOperationException">Il canale è già stato contrassegnato come completo.</exception>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryComplete(System.Exception)">
      <summary>Tenta di contrassegnare il canale come completato, per indicare che non saranno scritti altri dati.</summary>
      <param name="error">
        <see cref="T:System.Exception" /> che indica l'errore che causa l'impossibilità di scrivere altri dati oppure null in caso di esito positivo.</param>
      <returns>
        <see langword="true" /> se questa operazione comporta il corretto completamento del canale; in caso contrario, <see langword="false" /> se non è stato possibile contrassegnare il canale per il completamento, ad esempio perché è già stato contrassegnato come tale o perché non supporta il completamento.
.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.TryWrite(`0)">
      <summary>Tenta di scrivere l'elemento specificato nel canale.</summary>
      <param name="item">Elemento da scrivere.</param>
      <returns>
        <see langword="true" /> se l'elemento è stato scritto; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WaitToWriteAsync(System.Threading.CancellationToken)">
      <summary>Restituisce un <see cref="T:System.Threading.Tasks.ValueTask`1" /> che verrà completato quando è disponibile lo spazio per scrivere un elemento.</summary>
      <param name="cancellationToken">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di attesa.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask`1" /> che verrà completato con un risultato <see langword="true" /> quando è disponibile lo spazio per scrivere un elemento o con un risultato <see langword="false" /> quando non sono consentite altre operazioni di scrittura.</returns>
    </member>
    <member name="M:System.Threading.Channels.ChannelWriter`1.WriteAsync(`0,System.Threading.CancellationToken)">
      <summary>Scrive in modo asincrono un elemento nel canale.</summary>
      <param name="item">Valore da scrivere nel canale.</param>
      <param name="cancellationToken">
        <see cref="T:System.Threading.CancellationToken" /> usato per annullare l'operazione di scrittura.</param>
      <returns>
        <see cref="T:System.Threading.Tasks.ValueTask" /> che rappresenta l'operazione di scrittura asincrona.</returns>
    </member>
    <member name="T:System.Threading.Channels.UnboundedChannelOptions">
      <summary>Opzioni che controllano il comportamento delle istanze <see cref="T:System.Threading.Channels.Channel`1" /> non associate.</summary>
    </member>
    <member name="M:System.Threading.Channels.UnboundedChannelOptions.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Threading.Channels.UnboundedChannelOptions" />.</summary>
    </member>
  </members>
</doc>