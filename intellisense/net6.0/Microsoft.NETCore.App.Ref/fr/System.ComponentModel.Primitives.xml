<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.BrowsableAttribute">
      <summary>Spécifie si une propriété ou un événement doivent être affichés dans une fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Default">
      <summary>Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.BrowsableAttribute" /> (<see cref="F:System.ComponentModel.BrowsableAttribute.Yes" />). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.No">
      <summary>Spécifie qu'une propriété ou un événement ne peut pas être modifié au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.BrowsableAttribute.Yes">
      <summary>Spécifie qu'une propriété ou un événement peut être modifié au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.BrowsableAttribute" />.</summary>
      <param name="browsable">
        <see langword="true" /> si une propriété ou un événement peut être modifié au moment du design ; sinon <see langword="false" />. La valeur par défaut est <see langword="true" />.</param>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.Equals(System.Object)">
      <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj">Autre objet de comparaison.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.BrowsableAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.BrowsableAttribute.Browsable">
      <summary>Obtient une valeur indiquant si un objet est consultable.</summary>
      <returns>
        <see langword="true" /> si l'objet est consultable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.CategoryAttribute">
      <summary>Spécifie le nom de la catégorie dans laquelle grouper la propriété ou l'événement lorsqu'ils s'affichent dans un contrôle <see cref="T:System.Windows.Forms.PropertyGrid" /> défini en mode Par catégorie.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CategoryAttribute" /> à l'aide du nom de catégorie Par défaut.</summary>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.CategoryAttribute" /> à l'aide du nom de catégorie spécifié.</summary>
      <param name="category">Nom de la catégorie.</param>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.CategoryAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour cet attribut.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
      <summary>Recherche le nom localisé de la catégorie spécifiée.</summary>
      <param name="value">Identificateur de la catégorie à consulter.</param>
      <returns>Nom localisé de la catégorie ou <see langword="null" /> s'il n'existe pas.</returns>
    </member>
    <member name="M:System.ComponentModel.CategoryAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Action">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Action.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie d'action.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Appearance">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Apparence.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie d'apparence.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Asynchronous">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Asynchrone.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie asynchrone.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Behavior">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Comportement.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de comportement.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Category">
      <summary>Obtient le nom de la catégorie pour la propriété ou l'événement auquel cet attribut est appliqué.</summary>
      <returns>Nom de la catégorie pour la propriété ou l'événement auquel cet attribut est appliqué.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Data">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Données.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de données.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Default">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Par défaut.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie par défaut.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Design">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Design.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de design.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.DragDrop">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Glisser-déplacer.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie glisser-déplacer.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Focus">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Focus.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de focus.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Format">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Format.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de format.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Key">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Clavier.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de clavier.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Layout">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Disposition.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie Disposition.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.Mouse">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Souris.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de souris.</returns>
    </member>
    <member name="P:System.ComponentModel.CategoryAttribute.WindowStyle">
      <summary>Obtient un <see cref="T:System.ComponentModel.CategoryAttribute" /> représentant la catégorie Style de fenêtre.</summary>
      <returns>
        <see cref="T:System.ComponentModel.CategoryAttribute" /> pour la catégorie de style de fenêtre.</returns>
    </member>
    <member name="T:System.ComponentModel.Component">
      <summary>Fournit l'implémentation de base pour l'interface <see cref="T:System.ComponentModel.IComponent" /> et permet le partage d'objets entre applications.</summary>
    </member>
    <member name="E:System.ComponentModel.Component.Disposed">
      <summary>Se produit lorsque le composant est supprimé par un appel à la méthode <see cref="M:System.ComponentModel.Component.Dispose" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose">
      <summary>Libère toutes les ressources utilisées par <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Component" /> et libère éventuellement les ressources managées.</summary>
      <param name="disposing">
        <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
    </member>
    <member name="M:System.ComponentModel.Component.Finalize">
      <summary>Libère les ressources non managées et exécute d’autres opérations de nettoyage avant la récupération du <see cref="T:System.ComponentModel.Component" /> par le garbage collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Component.GetService(System.Type)">
      <summary>Retourne un objet qui représente un service fourni par <see cref="T:System.ComponentModel.Component" /> ou par son <see cref="T:System.ComponentModel.Container" />.</summary>
      <param name="service">Service fourni par <see cref="T:System.ComponentModel.Component" />.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente un service fourni par <see cref="T:System.ComponentModel.Component" />, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> ne fournit pas le service spécifié.</returns>
    </member>
    <member name="M:System.ComponentModel.Component.ToString">
      <summary>Retourne un <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un. Cette méthode ne doit pas être remplacée.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> est sans nom.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.CanRaiseEvents">
      <summary>Obtient une valeur qui indique si le composant peut déclencher un événement.</summary>
      <returns>
        <see langword="true" /> si le composant peut déclencher des événements ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Container">
      <summary>Obtient le <see cref="T:System.ComponentModel.IContainer" /> qui contient la <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.IContainer" /> qui contient <see cref="T:System.ComponentModel.Component" />, éventuellement, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> n'est pas encapsulé dans <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.DesignMode">
      <summary>Obtient une valeur qui indique si <see cref="T:System.ComponentModel.Component" /> est actuellement en mode design.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.ComponentModel.Component" /> est en mode Design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Events">
      <summary>Obtient la liste des gestionnaires d'événements attachés à ce <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.EventHandlerList" /> qui fournit les délégués de ce composant.</returns>
    </member>
    <member name="P:System.ComponentModel.Component.Site">
      <summary>Obtient ou définit le <see cref="T:System.ComponentModel.ISite" /> de <see cref="T:System.ComponentModel.Component" />.</summary>
      <returns>
        <see cref="T:System.ComponentModel.ISite" /> associé à <see cref="T:System.ComponentModel.Component" />, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> n'est pas encapsulé dans <see cref="T:System.ComponentModel.IContainer" />, <see cref="T:System.ComponentModel.Component" /> n'a pas de <see cref="T:System.ComponentModel.ISite" /> associé, ou <see cref="T:System.ComponentModel.Component" /> est supprimé de son <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ComponentCollection">
      <summary>Fournit un conteneur en lecture seule pour une collection d’objets <see cref="T:System.ComponentModel.IComponent" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ComponentCollection" /> à l'aide du tableau de composants spécifié.</summary>
      <param name="components">Tableau d'objets <see cref="T:System.ComponentModel.IComponent" /> à utiliser pour initialiser la collection.</param>
    </member>
    <member name="M:System.ComponentModel.ComponentCollection.CopyTo(System.ComponentModel.IComponent[],System.Int32)">
      <summary>Copie la collection entière dans un tableau, en commençant à l'index spécifié du tableau.</summary>
      <param name="array">Tableau <see cref="T:System.ComponentModel.IComponent" /> dans lequel copier les objets figurant dans la collection.</param>
      <param name="index">Index du <paramref name="array" /> au niveau duquel la copie doit commencer.</param>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.Int32)">
      <summary>Obtient le <see cref="T:System.ComponentModel.Component" /> dans la collection à l'index spécifié de la collection.</summary>
      <param name="index">Index de la collection du <see cref="T:System.ComponentModel.Component" /> à obtenir.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Si l'index spécifié ne se trouve pas dans la plage d'index de la collection.</exception>
      <returns>
        <see cref="T:System.ComponentModel.IComponent" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
      <summary>Obtient n'importe quel composant de la collection correspondant au nom spécifié.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.ComponentModel.IComponent" /> à obtenir.</param>
      <returns>Composant dont le nom correspond au nom spécifié par le paramètre <paramref name="name" /> ou <see langword="null" />, si le composant nommé est introuvable dans la collection.</returns>
    </member>
    <member name="T:System.ComponentModel.DescriptionAttribute">
      <summary>Spécifie une description pour une propriété ou un événement.</summary>
    </member>
    <member name="F:System.ComponentModel.DescriptionAttribute.Default">
      <summary>Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DescriptionAttribute" /> (chaîne vide ("")). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> sans paramètres.</summary>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DescriptionAttribute" /> avec une description.</summary>
      <param name="description">Texte de la description.</param>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DescriptionAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute">
      <summary>Retourne une valeur qui indique s'il s'agit de l'instance <see cref="T:System.ComponentModel.DescriptionAttribute" /> par défaut.</summary>
      <returns>
        <see langword="true" /> s'il s'agit de l'instance <see cref="T:System.ComponentModel.DescriptionAttribute" /> par défaut ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.Description">
      <summary>Obtient la description stockée dans cet attribut.</summary>
      <returns>Description stockée dans cet attribut.</returns>
    </member>
    <member name="P:System.ComponentModel.DescriptionAttribute.DescriptionValue">
      <summary>Obtient ou définit la chaîne stockée comme description.</summary>
      <returns>Chaîne stockée comme description. La valeur par défaut est une chaîne vide ("").</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute">
      <summary>Indique un sérialiseur que le gestionnaire de sérialisation doit utiliser pour sérialiser les valeurs du type auquel s'applique cet attribut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName">Nom qualifié complet du type de données du sérialiseur.</param>
      <param name="baseSerializerTypeName">Nom qualifié complet du type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerTypeName">Nom qualifié complet du type de données du sérialiseur.</param>
      <param name="baseSerializerType">Type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />.</summary>
      <param name="serializerType">Type de données du sérialiseur.</param>
      <param name="baseSerializerType">Type de données de base du sérialiseur. Plusieurs sérialiseurs peuvent être fournis pour une classe, à condition qu'ils possèdent des types de base différents.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerBaseTypeName">
      <summary>Obtient le nom qualifié complet du type de base du sérialiseur.</summary>
      <returns>Nom qualifié complet du type de base du sérialiseur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.SerializerTypeName">
      <summary>Obtient le nom de type qualifié complet du sérialiseur.</summary>
      <returns>Nom de type qualifié complet du sérialiseur.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.TypeId">
      <summary>Indique un ID unique pour ce type d'attribut.</summary>
      <returns>ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerAttribute">
      <summary>Spécifie la classe utilisée pour implémenter des services au moment de la conception pour un composant.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du nom du type qui fournit des services de design.</summary>
      <param name="designerTypeName">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type de concepteur et de la classe de base du concepteur.</summary>
      <param name="designerTypeName">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
      <param name="designerBaseTypeName">Nom qualifié complet de la classe de base à associer à la classe de concepteur.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du nom de la classe de concepteur et de la classe de base associée au concepteur.</summary>
      <param name="designerTypeName">Concaténation du nom qualifié complet du type qui fournit les services de design pour le composant auquel cet attribut est lié et nom de l'assembly dans lequel réside ce type.</param>
      <param name="designerBaseType">
        <see cref="T:System.Type" /> représentant la classe de base à associer à <paramref name="designerTypeName" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type qui fournit des services de design.</summary>
      <param name="designerType">
        <see cref="T:System.Type" /> qui représente la classe qui fournit les services de design pour le composant auquel cet attribut est lié.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerAttribute" /> à l'aide du type du concepteur et de la classe de base du concepteur.</summary>
      <param name="designerType">
        <see cref="T:System.Type" /> qui représente la classe qui fournit les services de design pour le composant auquel cet attribut est lié.</param>
      <param name="designerBaseType">
        <see cref="T:System.Type" /> représentant la classe de base à associer à <paramref name="designerType" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignerAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerBaseTypeName">
      <summary>Obtient le nom du type de base de ce concepteur.</summary>
      <returns>Nom du type de base de ce concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.DesignerTypeName">
      <summary>Obtient le nom du type de concepteur associé à cet attribut de concepteur.</summary>
      <returns>Nom du type de concepteur associé à cet attribut de concepteur.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerAttribute.TypeId">
      <summary>Obtient un ID unique pour ce type d'attribut.</summary>
      <returns>ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerCategoryAttribute">
      <summary>Spécifie que le concepteur pour une classe appartient à une certaine catégorie.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Component">
      <summary>Spécifie qu'un composant de cette catégorie utilise un Concepteur de composants. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Default">
      <summary>Spécifie qu'un composant de cette catégorie ne peut pas utiliser de Concepteur de composants. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Form">
      <summary>Spécifie qu'un composant de cette catégorie utilise un Concepteur de formulaires. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerCategoryAttribute.Generic">
      <summary>Spécifie qu'un composant de cette catégorie utilise un concepteur générique. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> avec une chaîne vide ("").</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerCategoryAttribute" /> avec le nom de catégorie donné.</summary>
      <param name="category">Nom de la catégorie.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.Category">
      <summary>Obtient le nom de la catégorie.</summary>
      <returns>Nom de la catégorie.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerCategoryAttribute.TypeId">
      <summary>Obtient un identificateur unique pour cet attribut.</summary>
      <returns>
        <see cref="T:System.Object" /> qui est un identificateur unique pour l'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibility">
      <summary>Spécifie la visibilité d'une propriété par rapport au sérialiseur en mode Design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Content">
      <summary>Le générateur de code produit du code pour le contenu de l'objet plutôt que pour l'objet lui-même.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Hidden">
      <summary>Le générateur de code ne produit pas de code pour l'objet.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibility.Visible">
      <summary>Le générateur de code produit du code pour l'objet.</summary>
    </member>
    <member name="T:System.ComponentModel.DesignerSerializationVisibilityAttribute">
      <summary>Spécifie le type de persistance à utiliser lors de la sérialisation de la propriété d'un composant au moment du design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Content">
      <summary>Spécifie qu'un sérialiseur doit sérialiser le contenu de la propriété, plutôt que la propriété elle-même. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Default">
      <summary>Spécifie la valeur par défaut qui est <see cref="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" />, autrement dit, un concepteur visuel utilise des règles par défaut pour générer la valeur d'une propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden">
      <summary>Spécifie qu'un sérialiseur ne doit pas sérialiser la valeur de la propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible">
      <summary>Spécifie qu'un sérialiseur ne doit pas être autorisé à sérialiser la valeur de la propriété. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.#ctor(System.ComponentModel.DesignerSerializationVisibility)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> avec la valeur <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> spécifiée.</summary>
      <param name="visibility">Une des valeurs de l'objet <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</param>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals(System.Object)">
      <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj">Autre objet de comparaison.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour cet objet.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
      <summary>Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns>
        <see langword="true" /> si l'attribut a la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility">
      <summary>Obtient une valeur indiquant le mode de sérialisation de base qu'un sérialiseur doit utiliser lorsqu'il détermine si la valeur d'une propriété doit être rendue persistante et comment.</summary>
      <returns>Une des valeurs de l'objet <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />. La valeur par défaut est <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DesignOnlyAttribute">
      <summary>Spécifie si une propriété ne peut être définie qu'au moment du design.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Default">
      <summary>Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> (<see cref="F:System.ComponentModel.DesignOnlyAttribute.No" />). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.No">
      <summary>Spécifie qu'une propriété peut être définie au moment du design ou de l'exécution. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.DesignOnlyAttribute.Yes">
      <summary>Spécifie qu'une propriété ne peut être définie qu'au moment du design. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
      <param name="isDesignOnly">
        <see langword="true" /> si une propriété peut être définie seulement au moment du design, <see langword="false" /> si la propriété peut être définie au moment du design et de l'exécution.</param>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.DesignOnlyAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="M:System.ComponentModel.DesignOnlyAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DesignOnlyAttribute.IsDesignOnly">
      <summary>Obtient une valeur indiquant si une propriété ne peut être définie qu'au moment du design.</summary>
      <returns>
        <see langword="true" /> si une propriété peut être définie uniquement au moment du design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.DisplayNameAttribute">
      <summary>Spécifie le nom complet pour une propriété, un événement ou une méthode void publique qui ne prend pas d'arguments.</summary>
    </member>
    <member name="F:System.ComponentModel.DisplayNameAttribute.Default">
      <summary>Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.DisplayNameAttribute" />. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DisplayNameAttribute" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DisplayNameAttribute" /> à l'aide du nom complet.</summary>
      <param name="displayName">Le nom d’affichage.</param>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.Equals(System.Object)">
      <summary>Détermine si deux instances <see cref="T:System.ComponentModel.DisplayNameAttribute" /> sont égales.</summary>
      <param name="obj">
        <see cref="T:System.ComponentModel.DisplayNameAttribute" /> dont l'égalité de la valeur doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.ComponentModel.DisplayNameAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayName">
      <summary>Obtient le nom complet pour une propriété, un événement ou une méthode void publique qui ne prend pas d'arguments stockés dans cet attribut.</summary>
      <returns>Le nom d’affichage.</returns>
    </member>
    <member name="P:System.ComponentModel.DisplayNameAttribute.DisplayNameValue">
      <summary>Obtient ou définit le nom de l'affichage.</summary>
      <returns>Le nom d’affichage.</returns>
    </member>
    <member name="T:System.ComponentModel.EditorAttribute">
      <summary>Spécifie l’éditeur à utiliser pour modifier une propriété. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec l'éditeur par défaut, c'est-à-dire aucun éditeur.</summary>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le nom du type et du type de base de l'éditeur.</summary>
      <param name="typeName">Nom de type qualifié complet de l'éditeur.</param>
      <param name="baseTypeName">Obtient le nom qualifié complet du type de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le nom du type et le type de base.</summary>
      <param name="typeName">Nom de type qualifié complet de l'éditeur.</param>
      <param name="baseType">
        <see cref="T:System.Type" /> de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EditorAttribute" /> avec le type et le type de base.</summary>
      <param name="type">
        <see cref="T:System.Type" /> qui représente le type de l'éditeur.</param>
      <param name="baseType">
        <see cref="T:System.Type" /> de la classe ou de l'interface de base à utiliser comme clé de recherche pour l'éditeur. Cette classe doit être <see cref="T:System.Drawing.Design.UITypeEditor" />, ou en dériver.</param>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.EditorAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de l'objet actuel ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.EditorAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage d'un entier signé 32 bits.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
      <summary>Obtient le nom de la classe ou de l'interface de base qui sert de clé de recherche pour cet éditeur.</summary>
      <returns>Nom de la classe ou de l'interface de base qui sert de clé de recherche pour cet éditeur.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.EditorTypeName">
      <summary>Obtient le nom de la classe de l'éditeur au format <see cref="P:System.Type.AssemblyQualifiedName" />.</summary>
      <returns>Nom de la classe de l'éditeur au format <see cref="P:System.Type.AssemblyQualifiedName" />.</returns>
    </member>
    <member name="P:System.ComponentModel.EditorAttribute.TypeId">
      <summary>Obtient un ID unique pour ce type d'attribut.</summary>
      <returns>ID unique pour ce type d'attribut.</returns>
    </member>
    <member name="T:System.ComponentModel.EventHandlerList">
      <summary>Fournit une simple liste de délégués. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.EventHandlerList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)">
      <summary>Ajoute un délégué à la liste.</summary>
      <param name="key">Objet propriétaire de l'événement.</param>
      <param name="value">Délégué à ajouter à la liste.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
      <summary>Ajoute une liste de délégués à la liste actuelle.</summary>
      <param name="listToAddFrom">Liste à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.Dispose">
      <summary>Supprime la liste de délégués.</summary>
    </member>
    <member name="M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)">
      <summary>Supprime un délégué de la liste.</summary>
      <param name="key">Objet propriétaire de l'événement.</param>
      <param name="value">Délégué à supprimer de la liste.</param>
    </member>
    <member name="P:System.ComponentModel.EventHandlerList.Item(System.Object)">
      <summary>Obtient ou définit le délégué de l'objet spécifié.</summary>
      <param name="key">Objet à rechercher dans la liste.</param>
      <returns>Délégué de la clé spécifiée, ou <see langword="null" /> s'il n'existe aucun délégué.</returns>
    </member>
    <member name="T:System.ComponentModel.IComponent">
      <summary>Fournit les fonctionnalités requises par tous les composants.</summary>
    </member>
    <member name="E:System.ComponentModel.IComponent.Disposed">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.ComponentModel.IComponent.Disposed" /> d'un composant.</summary>
    </member>
    <member name="P:System.ComponentModel.IComponent.Site">
      <summary>Obtient ou définit le <see cref="T:System.ComponentModel.ISite" /> associé à <see cref="T:System.ComponentModel.IComponent" />.</summary>
      <returns>Objet <see cref="T:System.ComponentModel.ISite" /> associé au composant, ou <see langword="null" /> si le composant ne possède pas de site.</returns>
    </member>
    <member name="T:System.ComponentModel.IContainer">
      <summary>Fournit les fonctionnalités pour les conteneurs. Les conteneurs sont des objets qui contiennent logiquement zéro ou plusieurs composants.</summary>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)">
      <summary>Ajoute le <see cref="T:System.ComponentModel.IComponent" /> spécifié à <see cref="T:System.ComponentModel.IContainer" />, à la fin de la liste.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)">
      <summary>Ajoute le <see cref="T:System.ComponentModel.IComponent" /> spécifié à <see cref="T:System.ComponentModel.IContainer" />, à la fin de la liste, et assigne un nom au composant.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à ajouter.</param>
      <param name="name">Nom unique qui ne respecte pas la casse à assigner au composant.  
  
- ou - 
 <see langword="null" /> qui laisse le composant sans nom.</param>
    </member>
    <member name="M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)">
      <summary>Supprime un composant de <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <param name="component">
        <see cref="T:System.ComponentModel.IComponent" /> à supprimer.</param>
    </member>
    <member name="P:System.ComponentModel.IContainer.Components">
      <summary>Obtient tous les composants du <see cref="T:System.ComponentModel.IContainer" />.</summary>
      <returns>Collection d'objets <see cref="T:System.ComponentModel.IComponent" /> qui représente tous les composants de <see cref="T:System.ComponentModel.IContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ImmutableObjectAttribute">
      <summary>Spécifie qu'un objet ne possède aucune sous-propriété pouvant être modifiée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Default">
      <summary>Représente la valeur par défaut de <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.No">
      <summary>Spécifie qu'un objet possède au moins une sous-propriété pouvant être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ImmutableObjectAttribute.Yes">
      <summary>Spécifie qu'un objet ne possède aucune sous-propriété pouvant être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ImmutableObjectAttribute" />.</summary>
      <param name="immutable">
        <see langword="true" /> si l'objet est immuable ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)">
      <summary>Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</summary>
      <param name="obj">
        <see cref="T:System.Object" /> à comparer à cette instance ou une référence null (<see langword="Nothing" /> en Visual Basic).</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est égal au type et à la valeur de cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute">
      <summary>Indique si la valeur de cette instance est la valeur par défaut.</summary>
      <returns>
        <see langword="true" /> si cette instance est l’attribut par défaut de la classe ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ImmutableObjectAttribute.Immutable">
      <summary>Obtient une valeur indiquant si l'objet est immuable.</summary>
      <returns>
        <see langword="true" /> si l'objet est immuable ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.InitializationEventAttribute">
      <summary>Spécifie quel événement est déclenché à l'initialisation. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.ComponentModel.InitializationEventAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InitializationEventAttribute" />.</summary>
      <param name="eventName">Nom de l'événement d'initialisation.</param>
    </member>
    <member name="P:System.ComponentModel.InitializationEventAttribute.EventName">
      <summary>Obtient le nom de l'événement d'initialisation.</summary>
      <returns>Nom de l'événement d'initialisation.</returns>
    </member>
    <member name="T:System.ComponentModel.InvalidAsynchronousStateException">
      <summary>Levée lorsqu'un thread sur lequel une opération doit être exécutée n'existe plus ou n'a pas de boucle de messages.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" />.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec les <see cref="T:System.Runtime.Serialization.SerializationInfo" /> et <see cref="T:System.Runtime.Serialization.StreamingContext" /> donnés.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser pour la désérialisation.</param>
      <param name="context">Destination à utiliser pour la désérialisation.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec la description détaillée spécifiée.</summary>
      <param name="message">Description détaillée de l'erreur.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidAsynchronousStateException" /> avec la description détaillée spécifiée et l'exception spécifiée.</summary>
      <param name="message">Description détaillée de l'erreur.</param>
      <param name="innerException">Référence à l'exception interne à l'origine de cette exception.</param>
    </member>
    <member name="T:System.ComponentModel.InvalidEnumArgumentException">
      <summary>Exception levée en cas d'utilisation d'arguments non valides qui sont des énumérateurs.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> sans message.</summary>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> à l'aide des données et du contexte de sérialisation spécifiés.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à utiliser pour la désérialisation.</param>
      <param name="context">Destination à utiliser pour la désérialisation.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec le message spécifié.</summary>
      <param name="message">Message à afficher avec cette exception.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec la description détaillée spécifiée et l'exception spécifiée.</summary>
      <param name="message">Description détaillée de l'erreur.</param>
      <param name="innerException">Référence à l'exception interne à l'origine de cette exception.</param>
    </member>
    <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.InvalidEnumArgumentException" /> avec un message généré à partir de l'argument, de la valeur non valide et d'une classe d'énumération.</summary>
      <param name="argumentName">Nom de l'argument ayant provoqué l'exception.</param>
      <param name="invalidValue">Valeur de l'argument ayant échoué.</param>
      <param name="enumClass">
        <see cref="T:System.Type" /> représentant la classe d'énumération avec les valeurs valides.</param>
    </member>
    <member name="T:System.ComponentModel.ISite">
      <summary>Fournit les fonctionnalités requises par les sites.</summary>
    </member>
    <member name="P:System.ComponentModel.ISite.Component">
      <summary>Obtient le composant associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns>Instance de <see cref="T:System.ComponentModel.IComponent" /> associée à <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Container">
      <summary>Obtient le <see cref="T:System.ComponentModel.IContainer" /> associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns>Instance de <see cref="T:System.ComponentModel.IContainer" /> associée à <see cref="T:System.ComponentModel.ISite" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.DesignMode">
      <summary>Détermine si le composant est en mode design lorsqu'il est implémenté par une classe.</summary>
      <returns>
        <see langword="true" /> si le composant est en mode design ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ISite.Name">
      <summary>Obtient ou définit le nom du composant associé à <see cref="T:System.ComponentModel.ISite" /> lorsqu'il est implémenté par une classe.</summary>
      <returns>Nom du composant associé à <see cref="T:System.ComponentModel.ISite" />, ou <see langword="null" /> si aucun nom n'est assigné au composant.</returns>
    </member>
    <member name="T:System.ComponentModel.ISupportInitialize">
      <summary>Spécifie que cet objet prend en charge une notification simple traitée avec transaction pour l'initialisation batch.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.BeginInit">
      <summary>Signale à l'objet que l'initialisation démarre.</summary>
    </member>
    <member name="M:System.ComponentModel.ISupportInitialize.EndInit">
      <summary>Signale à l'objet que l'initialisation est terminée.</summary>
    </member>
    <member name="T:System.ComponentModel.ISynchronizeInvoke">
      <summary>Fournit un moyen d'exécuter un délégué de manière synchrone ou asynchrone.</summary>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])">
      <summary>Exécute le délégué de manière asynchrone sur le thread qui a créé cet objet.</summary>
      <param name="method">
        <see cref="T:System.Delegate" /> vers une méthode qui prend des paramètres du même nombre et du même type que ceux qui sont contenus dans <paramref name="args" />.</param>
      <param name="args">Tableau de type <see cref="T:System.Object" /> à passer comme arguments à la méthode donnée. Peut être <see langword="null" /> si aucun argument n'est nécessaire.</param>
      <returns>Interface <see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone lancée en appelant cette méthode.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
      <summary>Attend que le processus lancé en appelant <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> se termine puis retourne la valeur générée par le processus.</summary>
      <param name="result">Interface <see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone lancée en appelant <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur de retour générée par l'opération asynchrone.</returns>
    </member>
    <member name="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])">
      <summary>Exécute le délégué de manière synchrone sur le thread qui a créé cet objet et marshale l'appel au thread créateur.</summary>
      <param name="method">
        <see cref="T:System.Delegate" /> qui contient une méthode à appeler, dans le contexte du thread pour le contrôle.</param>
      <param name="args">Tableau de type <see cref="T:System.Object" /> qui représente les arguments à passer à la méthode donnée. Peut être <see langword="null" /> si aucun argument n'est nécessaire.</param>
      <returns>
        <see cref="T:System.Object" /> qui représente la valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</returns>
    </member>
    <member name="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired">
      <summary>Obtient une valeur indiquant si l'appelant doit appeler <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> lors de l'appel d'un objet implémentant cette interface.</summary>
      <returns>
        <see langword="true" /> si l'appelant doit appeler <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.LocalizableAttribute">
      <summary>Spécifie si une propriété doit être localisée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Default">
      <summary>Spécifie la valeur par défaut, à savoir <see cref="F:System.ComponentModel.LocalizableAttribute.No" />. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.No">
      <summary>Spécifie qu'une propriété ne doit pas être localisée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.LocalizableAttribute.Yes">
      <summary>Spécifie qu'une propriété doit être localisée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
      <param name="isLocalizable">
        <see langword="true" /> si une propriété doit être localisée, sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.Equals(System.Object)">
      <summary>Retourne une valeur indiquant si la valeur de l'objet donné est égale au <see cref="T:System.ComponentModel.LocalizableAttribute" /> en cours.</summary>
      <param name="obj">Objet dont l'égalité des valeurs doit être vérifiée.</param>
      <returns>
        <see langword="true" /> si la valeur de l'objet donné est égale à celle de la valeur actuelle ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.ComponentModel.LocalizableAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.LocalizableAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.LocalizableAttribute.IsLocalizable">
      <summary>Obtient une valeur indiquant si une propriété doit être localisée.</summary>
      <returns>
        <see langword="true" /> si une propriété doit être localisée, sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.MergablePropertyAttribute">
      <summary>Spécifie que cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Default">
      <summary>Spécifie la valeur par défaut, à savoir <see cref="F:System.ComponentModel.MergablePropertyAttribute.Yes" />, c'est-à-dire qu'une propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.No">
      <summary>Spécifie qu'une propriété ne peut pas être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.MergablePropertyAttribute.Yes">
      <summary>Spécifie qu'une propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.MergablePropertyAttribute" />.</summary>
      <param name="allowMerge">
        <see langword="true" /> si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)">
      <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="obj">Autre objet de comparaison.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.ComponentModel.MergablePropertyAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.MergablePropertyAttribute.AllowMerge">
      <summary>Obtient une valeur indiquant si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés.</summary>
      <returns>
        <see langword="true" /> si cette propriété peut être combinée avec des propriétés appartenant à d'autres objets dans une fenêtre Propriétés ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.NotifyParentPropertyAttribute">
      <summary>Indique que la propriété parente est avertie en cas de modification de la valeur de la propriété à laquelle s'applique cet attribut. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Default">
      <summary>Indique l'état par défaut de l'attribut : la propriété ne doit pas avertir la propriété parente des modifications apportées à sa valeur. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.No">
      <summary>Indique que la propriété parente n'est pas avertie des modifications apportées à la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.NotifyParentPropertyAttribute.Yes">
      <summary>Indique que la propriété parente est avertie des modifications apportées à la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.NotifyParentPropertyAttribute" /> utilisant la valeur spécifiée pour déterminer si la propriété parente est avertie des modifications apportées à la valeur de la propriété.</summary>
      <param name="notifyParent">
        <see langword="true" /> si le parent doit être averti des modifications ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.Equals(System.Object)">
      <summary>Obtient une valeur indiquant si l'objet spécifié est le même que l'objet en cours.</summary>
      <param name="obj">Objet dont la similitude doit être testée.</param>
      <returns>
        <see langword="true" /> si l'objet est le même que cet objet ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode">
      <summary>Obtient le code de hachage de cet objet.</summary>
      <returns>Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute">
      <summary>Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns>
        <see langword="true" /> si la valeur actuelle de l'attribut est sa valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.NotifyParentPropertyAttribute.NotifyParent">
      <summary>Obtient ou définit une valeur indiquant si la propriété parente doit être avertie des modifications apportées à la valeur de la propriété.</summary>
      <returns>
        <see langword="true" /> si la propriété parente doit être avertie des modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ParenthesizePropertyNameAttribute">
      <summary>Indique si le nom de la propriété associée s'affiche entre parenthèses dans la fenêtre Propriétés. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ParenthesizePropertyNameAttribute.Default">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> avec une valeur par défaut indiquant que la propriété associée ne doit pas s'afficher entre parenthèses. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> indiquant que la propriété associée ne doit pas s'afficher entre parenthèses.</summary>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ParenthesizePropertyNameAttribute" /> avec la valeur spécifiée pour indiquer si l'attribut s'affiche entre parenthèses.</summary>
      <param name="needParenthesis">
        <see langword="true" /> si le nom doit être entre parenthèses ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals(System.Object)">
      <summary>Compare l'objet spécifié à cet objet et teste sa similitude.</summary>
      <param name="obj" />
      <returns>
        <see langword="true" /> s'ils sont égaux ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.GetHashCode">
      <summary>Obtient le code de hachage de cet objet.</summary>
      <returns>Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.ParenthesizePropertyNameAttribute.IsDefaultAttribute">
      <summary>Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns>
        <see langword="true" /> si la valeur actuelle de l'attribut est sa valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ParenthesizePropertyNameAttribute.NeedParenthesis">
      <summary>Obtient une valeur indiquant si le nom de la propriété entre parenthèses dans la fenêtre Propriétés.</summary>
      <returns>
        <see langword="true" /> si la propriété s'affiche entre parenthèses ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.ComponentModel.ReadOnlyAttribute">
      <summary>Spécifie si la propriété à laquelle est lié cet attribut est en lecture seule ou en lecture/écriture. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Default">
      <summary>Spécifie la valeur par défaut de <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, à savoir <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (c'est-à-dire que la propriété à laquelle cet attribut est lié est en lecture/écriture). Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.No">
      <summary>Spécifie que la propriété à laquelle cet attribut est lié est en lecture/écriture et peut être modifiée. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.ReadOnlyAttribute.Yes">
      <summary>Spécifie que la propriété à laquelle cet attribut est lié est en lecture seule et ne peut pas être modifiée dans l'Explorateur de serveurs. Ce champ <see langword="static" /> est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</summary>
      <param name="isReadOnly">
        <see langword="true" /> pour indiquer que la propriété à laquelle est lié cet attribut est en lecture seule, <see langword="false" /> pour indiquer que la propriété est en lecture/écriture.</param>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)">
      <summary>Indique si cette instance et un objet spécifié sont égaux.</summary>
      <param name="value">Autre objet de comparaison.</param>
      <returns>
        <see langword="true" /> si <paramref name="value" /> est égal à cette instance ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode">
      <summary>Retourne le code de hachage de cette instance.</summary>
      <returns>Code de hachage du <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> actuel.</returns>
    </member>
    <member name="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute">
      <summary>Détermine si cet attribut est l'attribut par défaut.</summary>
      <returns>
        <see langword="true" /> si cet attribut est la valeur par défaut pour cette classe d'attributs ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly">
      <summary>Obtient une valeur indiquant si la propriété à laquelle est lié cet attribut est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si la propriété à laquelle est lié cet attribut est en lecture seule, <see langword="false" /> si la propriété est en lecture/écriture.</returns>
    </member>
    <member name="T:System.ComponentModel.RefreshProperties">
      <summary>Définit des identificateurs qui indiquent le type d'une actualisation de la fenêtre Propriétés.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.All">
      <summary>Les propriétés doivent être actualisées, de même que la vue.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.None">
      <summary>Aucune actualisation n'est nécessaire.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshProperties.Repaint">
      <summary>La vue doit être actualisée.</summary>
    </member>
    <member name="T:System.ComponentModel.RefreshPropertiesAttribute">
      <summary>Indique que la grille de propriétés doit s’actualiser lorsque la valeur de propriété associée change. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.All">
      <summary>Indique que toutes les propriétés sont interrogées de nouveau et actualisées si la valeur de la propriété est modifiée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Default">
      <summary>Indique qu'aucune autre propriété ne doit être actualisée en cas de modification de la valeur de la propriété. Ce champ est en lecture seule.</summary>
    </member>
    <member name="F:System.ComponentModel.RefreshPropertiesAttribute.Repaint">
      <summary>Indique que toutes les propriétés doivent être repeintes si la valeur de la propriété est modifiée. Ce champ est en lecture seule.</summary>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.#ctor(System.ComponentModel.RefreshProperties)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" />.</summary>
      <param name="refresh">Valeur <see cref="T:System.ComponentModel.RefreshProperties" /> indiquant la nature de l'actualisation.</param>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.Equals(System.Object)">
      <summary>Substitue la méthode <see cref="Overload:System.Object.Equals" /> de l'objet.</summary>
      <param name="obj" />
      <returns>
        <see langword="true" /> si l'objet spécifié est le même ; sinon <see langword="false" />.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.GetHashCode">
      <summary>Retourne le code de hachage pour cet objet.</summary>
      <returns>Code de hachage de l'objet auquel appartient l'attribut.</returns>
    </member>
    <member name="M:System.ComponentModel.RefreshPropertiesAttribute.IsDefaultAttribute">
      <summary>Obtient une valeur indiquant si la valeur actuelle de l'attribut est sa valeur par défaut.</summary>
      <returns>
        <see langword="true" /> si la valeur actuelle de l'attribut est la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.ComponentModel.RefreshPropertiesAttribute.RefreshProperties">
      <summary>Obtient les propriétés d'actualisation du membre.</summary>
      <returns>
        <see cref="T:System.ComponentModel.RefreshProperties" /> indiquant les propriétés d'actualisation en cours pour le membre.</returns>
    </member>
  </members>
</doc>