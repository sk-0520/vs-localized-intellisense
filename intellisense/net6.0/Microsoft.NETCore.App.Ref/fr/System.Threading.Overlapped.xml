<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Threading.Overlapped</name>
  </assembly>
  <members>
    <member name="T:System.Threading.IOCompletionCallback">
      <summary>Reçoit le code d'erreur, le nombre d'octets et le type valeur chevauché lorsqu'une opération d'E/S est effectuée sur le pool de threads.</summary>
      <param name="errorCode">Code d'erreur.</param>
      <param name="numBytes">Nombre d'octets transférés.</param>
      <param name="pOVERLAP">
        <see cref="T:System.Threading.NativeOverlapped" /> représentant un pointeur non managé vers le type valeur chevauché natif.</param>
    </member>
    <member name="T:System.Threading.NativeOverlapped">
      <summary>Fournit une disposition explicite qui est visible à partir de code non managé et qui aura la même disposition que la structure Win32 OVERLAPPED avec des champs réservés supplémentaires à la fin.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.EventHandle">
      <summary>Spécifie le handle vers un événement défini comme signalé lorsque l'opération est terminée. Le processus appelant doit affecter à ce membre la valeur zéro ou un handle d'événement valide avant l'appel à toute fonction avec chevauchement.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalHigh">
      <summary>Spécifie la longueur des données transférées. Réservé à l'usage du système d'exploitation.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.InternalLow">
      <summary>Spécifie un état dépendant du système. Réservé à l'usage du système d'exploitation.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetHigh">
      <summary>Spécifie la valeur haute de l'offset d'octet à partir duquel commencer le transfert.</summary>
    </member>
    <member name="F:System.Threading.NativeOverlapped.OffsetLow">
      <summary>Spécifie une position de fichier à partir de laquelle commencer le transfert.</summary>
    </member>
    <member name="T:System.Threading.Overlapped">
      <summary>Fournit une représentation managée d’une structure <c>OVERLAPPED</c> Win32, notamment les méthodes pour transférer des informations d’une instance <see cref="T:System.Threading.Overlapped" /> à une structure <see cref="T:System.Threading.NativeOverlapped" />.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor">
      <summary>Initialise une nouvelle instance vide de la classe <see cref="T:System.Threading.Overlapped" />.</summary>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Overlapped" /> avec la position de fichier spécifiée, le handle entier à 32 bits d'un événement qui est signalé lorsque l'opération d'E/S est terminée et une interface par le biais de laquelle retourner les résultats de l'opération.</summary>
      <param name="offsetLo">Mot bas de la position de fichier auquel démarrer le transfert.</param>
      <param name="offsetHi">Mot haut de la position de fichier auquel démarrer le transfert.</param>
      <param name="hEvent">Handle vers un événement qui est signalé lorsque l'opération d'E/S est terminée.</param>
      <param name="ar">Objet qui implémente l'interface <see cref="T:System.IAsyncResult" /> et fournit des informations d'état sur l'opération d'E/S.</param>
    </member>
    <member name="M:System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Overlapped" /> avec la position de fichier spécifiée, le handle d'un événement qui est signalé lorsque l'opération d'E/S est terminée et une interface par le biais de laquelle retourner les résultats de l'opération.</summary>
      <param name="offsetLo">Mot bas de la position de fichier auquel démarrer le transfert.</param>
      <param name="offsetHi">Mot haut de la position de fichier auquel démarrer le transfert.</param>
      <param name="hEvent">Handle vers un événement qui est signalé lorsque l'opération d'E/S est terminée.</param>
      <param name="ar">Objet qui implémente l'interface <see cref="T:System.IAsyncResult" /> et fournit des informations d'état sur l'opération d'E/S.</param>
    </member>
    <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
      <summary>Libère la mémoire non managée associée à une structure native chevauchée allouée par la méthode <see cref="Overload:System.Threading.Overlapped.Pack" />.</summary>
      <param name="nativeOverlappedPtr">Pointeur vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à libérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)">
      <summary>Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée.</summary>
      <param name="iocb">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier un délégué qui est appelé lorsque l'opération d'E/S asynchrone est terminée et un objet managé qui sert de mémoire tampon.</summary>
      <param name="iocb">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <param name="userData">Objet ou tableau d'objets représentant la mémoire tampon d'entrée ou de sortie pour l'opération. Chaque objet représente une mémoire tampon, par exemple un tableau d'octets.</param>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
      <summary>Décompacte la structure <see cref="T:System.Threading.NativeOverlapped" /> non managée spécifiée dans un objet <see cref="T:System.Threading.Overlapped" /> managé.</summary>
      <param name="nativeOverlappedPtr">Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nativeOverlappedPtr" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet <see cref="T:System.Threading.Overlapped" /> contenant les informations décompactées de la structure native.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)">
      <summary>Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée. Ne propage pas la pile appelante.</summary>
      <param name="iocb">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Threading.Overlapped" /> en cours a déjà été compressé.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="M:System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)">
      <summary>Comprime l'instance actuelle dans une structure <see cref="T:System.Threading.NativeOverlapped" /> pour spécifier le délégué à appeler lorsque l'opération d'E/S asynchrone est terminée et l'objet managé qui sert de mémoire tampon. Ne propage pas la pile appelante.</summary>
      <param name="iocb">Délégué <see cref="T:System.Threading.IOCompletionCallback" /> qui représente la méthode de rappel appelée lorsque l'opération asynchrone d'E/S est terminée.</param>
      <param name="userData">Objet ou tableau d'objets représentant la mémoire tampon d'entrée ou de sortie pour l'opération. Chaque objet représente une mémoire tampon, par exemple un tableau d'octets.</param>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Threading.Overlapped" /> en cours est déjà compacté.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.AsyncResult">
      <summary>Obtient ou définit l'objet qui fournit des informations d'état sur l'opération d'E/S.</summary>
      <returns>Objet qui implémente l'interface <see cref="T:System.IAsyncResult" />.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandle">
      <summary>Obtient ou définit le handle entier 32 bits comme étant un événement de synchronisation qui est signalé lorsque l'opération d'E/S est terminée.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> représentant le handle de l'événement de synchronisation.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.EventHandleIntPtr">
      <summary>Obtient ou définit le handle comme étant l'événement de synchronisation qui est signalé lorsque l'opération d'E/S est terminée.</summary>
      <returns>
        <see cref="T:System.IntPtr" /> représentant le handle de l'événement.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetHigh">
      <summary>Obtient ou définit le mot de poids fort de la position de fichier auquel démarrer le transfert. La position de fichier est un offset d'octet à partir du début du fichier.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> représentant le mot de poids fort de la position de fichier.</returns>
    </member>
    <member name="P:System.Threading.Overlapped.OffsetLow">
      <summary>Obtient ou définit le mot de poids faible de la position de fichier auquel démarrer le transfert. La position de fichier est un offset d'octet à partir du début du fichier.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> représentant le mot de poids faible de la position de fichier.</returns>
    </member>
    <member name="T:System.Threading.PreAllocatedOverlapped">
      <summary>Représente l’état préalloué pour les opérations d’E/S natives avec chevauchement.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.#ctor(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.PreAllocatedOverlapped" /> et spécifie un délégué à appeler quand chaque opération d’E/S asynchrone est terminée, un objet fourni par l’utilisateur qui fournit un contexte, et des objets gérés qui font office de mémoires tampons.</summary>
      <param name="callback">Délégué qui représente la méthode de rappel à appeler quand chaque opération d’E/S asynchrone se termine.</param>
      <param name="state">Objet fourni par l’utilisateur qui distingue l’instance de <see cref="T:System.Threading.NativeOverlapped" /> produite à partir de cet objet des autres instances de <see cref="T:System.Threading.NativeOverlapped" />. Sa valeur peut être <see langword="null" />.</param>
      <param name="pinData">Objet ou tableau d’objets qui représente la mémoire tampon d’entrée ou de sortie pour les opérations. Chaque objet représente une mémoire tampon, comme un tableau d’octets. Sa valeur peut être <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cette méthode a été appelée après la suppression de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Dispose">
      <summary>Libère les ressources associées à cette instance de <see cref="T:System.Threading.PreAllocatedOverlapped" />.</summary>
    </member>
    <member name="M:System.Threading.PreAllocatedOverlapped.Finalize">
      <summary>Libère les ressources non managées avant que l’instance active ne soit récupérée par le garbage collection.</summary>
    </member>
    <member name="T:System.Threading.ThreadPoolBoundHandle">
      <summary>Représente un handle d’E/S lié au pool de threads système et permet aux composants de bas niveau de recevoir des notifications pour les opérations d’E/S asynchrones.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)">
      <summary>Retourne un pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />, spécifiant un délégué appelé quand l’opération d’E/S asynchrone est terminée, un objet fourni par l’utilisateur qui fournit un contexte, et des objets gérés qui font office de mémoires tampons.</summary>
      <param name="callback">Délégué qui représente la méthode de rappel à appeler quand l’opération d’E/S asynchrone se termine.</param>
      <param name="state">Objet fourni par l’utilisateur qui distingue cette instance de <see cref="T:System.Threading.NativeOverlapped" /> des autres instances de <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <param name="pinData">Objet ou tableau d’objets qui représente la mémoire tampon d’entrée ou de sortie pour l’opération ou <see langword="null" />. Chaque objet représente une mémoire tampon, comme un tableau d’octets.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callback" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cette méthode a été appelée après la suppression de l’objet <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.PreAllocatedOverlapped)">
      <summary>Retourne un pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" /> à l’aide de l’état de rappel et des mémoires tampons associées à l’objet <see cref="T:System.Threading.PreAllocatedOverlapped" /> spécifié.</summary>
      <param name="preAllocated">Objet à partir duquel créer le pointeur <see cref="T:System.Threading.NativeOverlapped" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="preAllocated" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="preAllocated" /> est en cours d’utilisation pour une autre opération d’E/S.</exception>
      <exception cref="T:System.ObjectDisposedException">Cette méthode a été appelée après la suppression de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.  
  
- ou - 
Cette méthode a été appelée après la suppression de <paramref name="preAllocated" />.</exception>
      <returns>Pointeur non managé vers une structure <see cref="T:System.Threading.NativeOverlapped" />.</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.BindHandle(System.Runtime.InteropServices.SafeHandle)">
      <summary>Retourne un <see cref="T:System.Threading.ThreadPoolBoundHandle" /> pour le handle spécifié, qui est lié au pool de threads système.</summary>
      <param name="handle">Objet qui contient le handle du système d’exploitation. Le handle doit avoir été ouvert pour les E/S avec chevauchement dans le code non managé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="handle" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="handle" /> a été supprimé.  
  
- ou - 
 <paramref name="handle" /> ne fait pas référence à un handle d’E/S valide.  
  
- ou - 
 <paramref name="handle" /> fait référence à un handle qui n’a pas été ouvert pour des E/S avec chevauchement.  
  
- ou - 
 <paramref name="handle" /> fait référence à un handle qui a déjà été lié.</exception>
      <returns>
        <see cref="T:System.Threading.ThreadPoolBoundHandle" /> pour <paramref name="handle" />, qui est lié au pool de threads système.</returns>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.Dispose">
      <summary>Libère toutes les ressources non managées utilisées par l’instance de <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</summary>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.FreeNativeOverlapped(System.Threading.NativeOverlapped*)">
      <summary>Libère la mémoire associée à une structure <see cref="T:System.Threading.NativeOverlapped" /> allouée par la méthode <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</summary>
      <param name="overlapped">Pointeur non managé vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à libérer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="overlapped" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ObjectDisposedException">Cette méthode a été appelée après la suppression de l’objet <see cref="T:System.Threading.ThreadPoolBoundHandle" />.</exception>
    </member>
    <member name="M:System.Threading.ThreadPoolBoundHandle.GetNativeOverlappedState(System.Threading.NativeOverlapped*)">
      <summary>Retourne l’objet fourni par l’utilisateur qui a été spécifié quand l’instance de <see cref="T:System.Threading.NativeOverlapped" /> a été allouée en appelant la méthode <see cref="M:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped(System.Threading.IOCompletionCallback,System.Object,System.Object)" />.</summary>
      <param name="overlapped">Pointeur non managé vers la structure <see cref="T:System.Threading.NativeOverlapped" /> à partir de laquelle retourner l’objet fourni par l’utilisateur associé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="overlapped" /> a la valeur <see langword="null" />.</exception>
      <returns>Objet fourni par l’utilisateur qui distingue cette instance de <see cref="T:System.Threading.NativeOverlapped" /> des autres instances de <see cref="T:System.Threading.NativeOverlapped" />, ou <see langword="null" /> si aucun objet n’a été spécifié quand l’instance a été allouée en appelant la méthode <see cref="Overload:System.Threading.ThreadPoolBoundHandle.AllocateNativeOverlapped" />.</returns>
    </member>
    <member name="P:System.Threading.ThreadPoolBoundHandle.Handle">
      <summary>Obtient le handle de système d’exploitation lié.</summary>
      <returns>Objet qui contient le handle de système d’exploitation lié.</returns>
    </member>
  </members>
</doc>