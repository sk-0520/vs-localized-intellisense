<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Numerics.Vectors</name>
  </assembly>
  <members>
    <member name="T:System.Numerics.Matrix3x2">
      <summary>表示一個 3x2 矩陣。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M11">
      <summary>第一列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M12">
      <summary>第一列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M21">
      <summary>第二列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M22">
      <summary>第二列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M31">
      <summary>第三列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix3x2.M32">
      <summary>第三列的第二個元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix3x2.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>從指定的元件建立 3x2 矩陣。</summary>
      <param name="m11">要指派給第一列第一個元素的值。</param>
      <param name="m12">要指派給第一列第二個元素的值。</param>
      <param name="m21">要指派給第二列第一個元素的值。</param>
      <param name="m22">要指派給第二列第二個元素的值。</param>
      <param name="m31">要指派給第三列第一個元素的值。</param>
      <param name="m32">要指派給第三列第二個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Add(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single)">
      <summary>使用給定的旋轉建立一個旋轉矩陣，以弧度為單位。</summary>
      <param name="radians">旋轉的弧度。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateRotation(System.Single,System.Numerics.Vector2)">
      <summary>使用以弧度為單位的指定旋轉和中心點建立旋轉矩陣。</summary>
      <param name="radians">旋轉的弧度。</param>
      <param name="centerPoint">中心點。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2)">
      <summary>從指定的向量縮放比例建立縮放矩陣。</summary>
      <param name="scales">要使用的縮放比例。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>從指定的向量縮放比例和從指定中心點開始的位移，建立縮放矩陣。</summary>
      <param name="scales">要使用的縮放比例。</param>
      <param name="centerPoint">中心位移。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single)">
      <summary>建立縮放矩陣，會依據指定的縮放比例統一縮放。</summary>
      <param name="scale">要使用的統一縮放比例。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Numerics.Vector2)">
      <summary>建立縮放矩陣，會和指定的縮放比例及從指定中心開始的位移統一縮放。</summary>
      <param name="scale">要使用的統一縮放比例。</param>
      <param name="centerPoint">中心位移。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single)">
      <summary>從指定的 X 和 Y 元件建立縮放矩陣。</summary>
      <param name="xScale">在 X 軸上縮放所依據的值。</param>
      <param name="yScale">在 Y 軸上縮放所依據的值。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateScale(System.Single,System.Single,System.Numerics.Vector2)">
      <summary>建立依指定中心點位移的縮放矩陣。</summary>
      <param name="xScale">在 X 軸上縮放所依據的值。</param>
      <param name="yScale">在 Y 軸上縮放所依據的值。</param>
      <param name="centerPoint">中心點。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single)">
      <summary>從以弧度為單位的指定角度建立斜矩陣。</summary>
      <param name="radiansX">X 的角度，以弧度為單位。</param>
      <param name="radiansY">Y 的角度，以弧度為單位。</param>
      <returns>斜矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateSkew(System.Single,System.Single,System.Numerics.Vector2)">
      <summary>從以弧度為單位的指定角度和中心點建立斜矩陣。</summary>
      <param name="radiansX">X 的角度，以弧度為單位。</param>
      <param name="radiansY">Y 的角度，以弧度為單位。</param>
      <param name="centerPoint">中心點。</param>
      <returns>斜矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Numerics.Vector2)">
      <summary>從指定的二維向量建立轉移矩陣。</summary>
      <param name="position">轉移矩陣。</param>
      <returns>轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.CreateTranslation(System.Single,System.Single)">
      <summary>從指定的 X 和 Y 元件建立轉移矩陣。</summary>
      <param name="xPosition">X 位置。</param>
      <param name="yPosition">Y 位置。</param>
      <returns>轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Numerics.Matrix3x2)">
      <summary>傳回值，這個值指出此執行個體和另一個 3x2 矩陣是否相等。</summary>
      <param name="other">其他矩陣。</param>
      <returns>如果兩個矩陣相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetDeterminant">
      <summary>計算此矩陣的行列式。</summary>
      <returns>行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Invert(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2@)">
      <summary>反轉指定的矩陣。 指示作業是否成功的傳回值。</summary>
      <param name="matrix">要反轉的矩陣。</param>
      <param name="result">如果作業成功，則當此方法傳回時，此參數會包含反轉的矩陣。</param>
      <returns>如果 <paramref name="matrix" /> 轉換成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Lerp(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2,System.Single)">
      <summary>根據指定第二個矩陣之加權的值，執行從一個矩陣到第二個矩陣的線性插補。</summary>
      <param name="matrix1">第一個矩陣。</param>
      <param name="matrix2">第二個矩陣。</param>
      <param name="amount">
        <paramref name="matrix2" /> 的相對加權。</param>
      <returns>插補的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary>傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1">要縮放的矩陣。</param>
      <param name="value2">要使用的縮放比例值。</param>
      <returns>已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Negate(System.Numerics.Matrix3x2)">
      <summary>將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value">要變換正負號的矩陣。</param>
      <returns>已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Addition(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Equality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>傳回值，指出指定的矩陣是否相等。</summary>
      <param name="value1">要比較的第一個矩陣。</param>
      <param name="value2">要比較的第二個矩陣。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Inequality(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>傳回值，指出指定的矩陣是否不相等。</summary>
      <param name="value1">要比較的第一個矩陣。</param>
      <param name="value2">要比較的第二個矩陣。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Multiply(System.Numerics.Matrix3x2,System.Single)">
      <summary>傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1">要縮放的矩陣。</param>
      <param name="value2">要使用的縮放比例值。</param>
      <returns>已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_Subtraction(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.op_UnaryNegation(System.Numerics.Matrix3x2)">
      <summary>將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value">要變換正負號的矩陣。</param>
      <returns>已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.Subtract(System.Numerics.Matrix3x2,System.Numerics.Matrix3x2)">
      <summary>將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix3x2.ToString">
      <summary>傳回表示這個矩陣的字串。</summary>
      <returns>這個矩陣的字串表示。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Identity">
      <summary>取得乘法類單位矩陣。</summary>
      <returns>乘法類單位矩陣。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.IsIdentity">
      <summary>指出目前的矩陣是否為單位矩陣。</summary>
      <returns>如果目前的矩陣是單位矩陣，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix3x2.Translation">
      <summary>取得或設定此矩陣的轉移元件。</summary>
      <returns>目前執行個體的轉移元件。</returns>
    </member>
    <member name="T:System.Numerics.Matrix4x4">
      <summary>表示一個 4x4 矩陣。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M11">
      <summary>第一列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M12">
      <summary>第一列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M13">
      <summary>第一列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M14">
      <summary>第一列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M21">
      <summary>第二列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M22">
      <summary>第二列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M23">
      <summary>第二列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M24">
      <summary>第二列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M31">
      <summary>第三列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M32">
      <summary>第三列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M33">
      <summary>第三列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M34">
      <summary>第三列的第四個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M41">
      <summary>第四列的第一個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M42">
      <summary>第四列的第二個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M43">
      <summary>第四列的第三個元素。</summary>
    </member>
    <member name="F:System.Numerics.Matrix4x4.M44">
      <summary>第四列的第四個元素。</summary>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Numerics.Matrix3x2)">
      <summary>從指定的 <see cref="T:System.Numerics.Matrix3x2" /> 物件建立 <see cref="T:System.Numerics.Matrix4x4" /> 物件。</summary>
      <param name="value">3x2 矩陣。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>從指定的元件建立 4x4 矩陣。</summary>
      <param name="m11">要指派給第一列第一個元素的值。</param>
      <param name="m12">要指派給第一列第二個元素的值。</param>
      <param name="m13">要指派給第一列第三個元素的值。</param>
      <param name="m14">要指派給第一列第四個元素的值。</param>
      <param name="m21">要指派給第二列第一個元素的值。</param>
      <param name="m22">要指派給第二列第二個元素的值。</param>
      <param name="m23">要指派給第二列第三個元素的值。</param>
      <param name="m24">要指派給第二列第三個元素的值。</param>
      <param name="m31">要指派給第三列第一個元素的值。</param>
      <param name="m32">要指派給第三列第二個元素的值。</param>
      <param name="m33">要指派給第三列第三個元素的值。</param>
      <param name="m34">要指派給第三列第四個元素的值。</param>
      <param name="m41">要指派給第四列第一個元素的值。</param>
      <param name="m42">要指派給第四列第二個元素的值。</param>
      <param name="m43">要指派給第四列第三個元素的值。</param>
      <param name="m44">要指派給第四列第四個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Add(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>建立繞著指定物件位置旋轉的球面告示板。</summary>
      <param name="objectPosition">告示板繞著旋轉的物件位置。</param>
      <param name="cameraPosition">相機的位置。</param>
      <param name="cameraUpVector">相機的上向量。</param>
      <param name="cameraForwardVector">相機的前向量。</param>
      <returns>已建立的告示板。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateConstrainedBillboard(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>建立繞著指定的軸旋轉的圓柱告示板。</summary>
      <param name="objectPosition">告示板繞著旋轉的物件位置。</param>
      <param name="cameraPosition">相機的位置。</param>
      <param name="rotateAxis">要讓告示板繞著旋轉的軸。</param>
      <param name="cameraForwardVector">相機的前向量。</param>
      <param name="objectForwardVector">物件的前向量。</param>
      <returns>告示板矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary>建立繞著任意向量旋轉的矩陣。</summary>
      <param name="axis">要繞著選轉的軸。</param>
      <param name="angle">要讓 <paramref name="axis" /> 繞著旋轉的角度，以弧度為單位。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromQuaternion(System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值建立一個旋轉矩陣。</summary>
      <param name="quaternion">來源四元數。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary>依據指定的繞 Y 軸旋轉、繞 X 軸旋轉和滾動建立一個旋轉矩陣。</summary>
      <param name="yaw">繞著 Y 軸的旋轉角度，以弧度為單位。</param>
      <param name="pitch">繞著 X 軸的旋轉角度，以弧度為單位。</param>
      <param name="roll">繞著 Z 軸的旋轉角度，以弧度為單位。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateLookAt(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>建立檢視矩陣。</summary>
      <param name="cameraPosition">相機的位置。</param>
      <param name="cameraTarget">相機指向的目標。</param>
      <param name="cameraUpVector">從相機的觀點來看為「向上」的方向。</param>
      <returns>檢視矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
      <summary>依據指定的視圖體維度建立正視透視圖矩陣。</summary>
      <param name="width">視圖體的寬度。</param>
      <param name="height">視圖體的高度。</param>
      <param name="zNearPlane">視圖體最小的 Z 值。</param>
      <param name="zFarPlane">視圖體最大的 Z 值。</param>
      <returns>正視投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>建立自訂的正視投影矩陣。</summary>
      <param name="left">視圖體最小的 X 值。</param>
      <param name="right">視圖體最大的 X 值。</param>
      <param name="bottom">視圖體最小的 Y 值。</param>
      <param name="top">視圖體最大的 Y 值。</param>
      <param name="zNearPlane">視圖體最小的 Z 值。</param>
      <param name="zFarPlane">視圖體最大的 Z 值。</param>
      <returns>正視投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
      <summary>依據指定的視圖體維度建立透視圖投影矩陣。</summary>
      <param name="width">附近的檢視平面之視圖體寬度。</param>
      <param name="height">附近的檢視平面之視圖體高度。</param>
      <param name="nearPlaneDistance">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance">到遠離檢視平面的距離。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="nearPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
      <returns>透視圖投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
      <summary>根據視野、外觀比例以及附近的和遠離檢視平面距離來建立透視圖投影矩陣。</summary>
      <param name="fieldOfView">在 Y 方向的視野，以弧度為單位。</param>
      <param name="aspectRatio">外觀比例，定義為檢視空間寬度除以高度。</param>
      <param name="nearPlaneDistance">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance">到遠離檢視平面的距離。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="fieldOfView" /> 小於或等於零。  
  
-或- 
 <paramref name="fieldOfView" /> 大於或等於 <see cref="F:System.Math.PI" />。  
  
 <paramref name="nearPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
      <returns>透視圖投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>建立自訂的透視圖投影矩陣。</summary>
      <param name="left">附近的檢視平面之視圖體最小的 X 值。</param>
      <param name="right">附近的檢視平面之視圖體最大的 X 值。</param>
      <param name="bottom">附近的檢視平面之視圖體最小的 Y 值。</param>
      <param name="top">附近的檢視平面之視圖體最大的 Y 值。</param>
      <param name="nearPlaneDistance">到附近的檢視平面之距離。</param>
      <param name="farPlaneDistance">到遠離檢視平面的距離。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="nearPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="farPlaneDistance" /> 小於或等於零。  
  
-或- 
 <paramref name="nearPlaneDistance" /> 大於或等於 <paramref name="farPlaneDistance" />。</exception>
      <returns>透視圖投影矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateReflection(System.Numerics.Plane)">
      <summary>建立反映指定平面之座標系統的矩陣。</summary>
      <param name="value">用來建立反映的平面。</param>
      <returns>表示此反映的新矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single)">
      <summary>建立會讓點繞著 X 軸旋轉的矩陣。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 X 軸旋轉。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationX(System.Single,System.Numerics.Vector3)">
      <summary>建立會讓點從中心點繞著 X 軸旋轉的矩陣。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 X 軸旋轉。</param>
      <param name="centerPoint">中心點。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single)">
      <summary>建立會讓點繞著 Y 軸旋轉的矩陣。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 Y 軸旋轉。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationY(System.Single,System.Numerics.Vector3)">
      <summary>以弧度為單位的數量，從中心點依此弧度來繞著 Y 軸旋轉。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 Y 軸旋轉。</param>
      <param name="centerPoint">中心點。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single)">
      <summary>建立會讓點繞著 Z 軸旋轉的矩陣。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 Z 軸旋轉。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateRotationZ(System.Single,System.Numerics.Vector3)">
      <summary>建立會讓點從中心點繞著 Z 軸旋轉的矩陣。</summary>
      <param name="radians">以弧度為單位的數量，依此弧度來繞著 Z 軸旋轉。</param>
      <param name="centerPoint">中心點。</param>
      <returns>旋轉矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3)">
      <summary>從指定的向量縮放比例建立縮放矩陣。</summary>
      <param name="scales">要使用的縮放比例。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>針對中心點建立縮放矩陣。</summary>
      <param name="scales">包含在每個座標軸上縮放比例數量的向量。</param>
      <param name="centerPoint">中心點。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single)">
      <summary>建立統一的縮放矩陣，在每個座標軸上以相同比例縮放。</summary>
      <param name="scale">統一的縮放比例。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Numerics.Vector3)">
      <summary>建立統一的縮放矩陣，在每個座標軸上針對中心點以相同比例縮放。</summary>
      <param name="scale">統一的縮放比例。</param>
      <param name="centerPoint">中心點。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single)">
      <summary>從指定的 X、Y 和 Z 元件建立縮放矩陣。</summary>
      <param name="xScale">在 X 軸上縮放所依據的值。</param>
      <param name="yScale">在 Y 軸上縮放所依據的值。</param>
      <param name="zScale">在 Z 軸上縮放所依據的值。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateScale(System.Single,System.Single,System.Single,System.Numerics.Vector3)">
      <summary>建立依指定中心點位移的縮放矩陣。</summary>
      <param name="xScale">在 X 軸上縮放所依據的值。</param>
      <param name="yScale">在 Y 軸上縮放所依據的值。</param>
      <param name="zScale">在 Z 軸上縮放所依據的值。</param>
      <param name="centerPoint">中心點。</param>
      <returns>縮放矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateShadow(System.Numerics.Vector3,System.Numerics.Plane)">
      <summary>建立會將幾何簡維成指定平面的矩陣，就像從指定光源投射的陰影一樣。</summary>
      <param name="lightDirection">會投射陰影的光線所來自的方向。</param>
      <param name="plane">新矩陣會將幾何簡維到此平面上，以便投射陰影。</param>
      <returns>一個新矩陣，用來從指定的方向將幾何簡維到指定平面上。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Numerics.Vector3)">
      <summary>從指定的三維向量建立轉移矩陣。</summary>
      <param name="position">在每個座標軸上要轉移的數量。</param>
      <returns>轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateTranslation(System.Single,System.Single,System.Single)">
      <summary>從指定的 X、Y 和 Z 元件建立轉移矩陣。</summary>
      <param name="xPosition">在 X 軸上要轉移的數量。</param>
      <param name="yPosition">在 Y 軸上要轉移的數量。</param>
      <param name="zPosition">在 Z 軸上要轉移的數量。</param>
      <returns>轉移矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.CreateWorld(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>使用指定的參數建立世界矩陣。</summary>
      <param name="position">物件的位置。</param>
      <param name="forward">物件的向前方向。</param>
      <param name="up">物件的向上方向。 其值通常是 <c>[0, 1, 0]</c>。</param>
      <returns>世界矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Decompose(System.Numerics.Matrix4x4,System.Numerics.Vector3@,System.Numerics.Quaternion@,System.Numerics.Vector3@)">
      <summary>嘗試從指定的縮放、旋轉或轉移矩陣中擷取縮放、轉移和旋轉元件。 指示作業是否成功的傳回值。</summary>
      <param name="matrix">來源矩陣。</param>
      <param name="scale">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的縮放元件。</param>
      <param name="rotation">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的旋轉元件。</param>
      <param name="translation">如果作業成功，則當此方法傳回時，此參數會包含轉換矩陣的轉移元件。</param>
      <returns>如果已成功分解 <paramref name="matrix" />，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Numerics.Matrix4x4)">
      <summary>傳回值，這個值指出此執行個體和另一個 4x4 矩陣是否相等。</summary>
      <param name="other">其他矩陣。</param>
      <returns>如果兩個矩陣相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetDeterminant">
      <summary>計算目前的 4x4 矩陣的行列式。</summary>
      <returns>行列式。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Invert(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4@)">
      <summary>反轉指定的矩陣。 指示作業是否成功的傳回值。</summary>
      <param name="matrix">要反轉的矩陣。</param>
      <param name="result">如果作業成功，則當此方法傳回時，此參數會包含反轉的矩陣。</param>
      <returns>如果 <paramref name="matrix" /> 轉換成功，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Lerp(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4,System.Single)">
      <summary>根據指定第二個矩陣之加權的值，執行從一個矩陣到第二個矩陣的線性插補。</summary>
      <param name="matrix1">第一個矩陣。</param>
      <param name="matrix2">第二個矩陣。</param>
      <param name="amount">
        <paramref name="matrix2" /> 的相對加權。</param>
      <returns>插補的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary>傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1">要縮放的矩陣。</param>
      <param name="value2">要使用的縮放比例值。</param>
      <returns>已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Negate(System.Numerics.Matrix4x4)">
      <summary>將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value">要變換正負號的矩陣。</param>
      <returns>已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Addition(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>將一個矩陣的每個元素和第二個矩陣的相對應元素相加。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含加總值的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Equality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>傳回值，指出指定的矩陣是否相等。</summary>
      <param name="value1">要比較的第一個矩陣。</param>
      <param name="value2">要比較的第二個矩陣。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Inequality(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>傳回值，指出指定的矩陣是否不相等。</summary>
      <param name="value1">要比較的第一個矩陣。</param>
      <param name="value2">要比較的第二個矩陣。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>傳回兩個矩陣一起相乘所產生的矩陣。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>乘積的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Multiply(System.Numerics.Matrix4x4,System.Single)">
      <summary>傳回矩陣，該矩陣為依據純量因數縮放指定矩陣之所有元素而產生。</summary>
      <param name="value1">要縮放的矩陣。</param>
      <param name="value2">要使用的縮放比例值。</param>
      <returns>已縮放的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_Subtraction(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.op_UnaryNegation(System.Numerics.Matrix4x4)">
      <summary>將指定矩陣的所有值乘以 -1，對其變換正負號。</summary>
      <param name="value">要變換正負號的矩陣。</param>
      <returns>已變換正負號的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Subtract(System.Numerics.Matrix4x4,System.Numerics.Matrix4x4)">
      <summary>將第二個矩陣中的每個元素減去第一個矩陣中相對應的元素。</summary>
      <param name="value1">第一個矩陣。</param>
      <param name="value2">第二個矩陣。</param>
      <returns>包含值的矩陣，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.ToString">
      <summary>傳回表示這個矩陣的字串。</summary>
      <returns>這個矩陣的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transform(System.Numerics.Matrix4x4,System.Numerics.Quaternion)">
      <summary>套用指定的四元數旋轉來轉換指定的矩陣。</summary>
      <param name="value">要轉換的矩陣。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的矩陣。</returns>
    </member>
    <member name="M:System.Numerics.Matrix4x4.Transpose(System.Numerics.Matrix4x4)">
      <summary>轉置矩陣的列和行。</summary>
      <param name="matrix">要轉置的矩陣。</param>
      <returns>已轉置的矩陣。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Identity">
      <summary>取得乘法類單位矩陣。</summary>
      <returns>取得乘法類單位矩陣。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.IsIdentity">
      <summary>指出目前的矩陣是否為單位矩陣。</summary>
      <returns>如果目前的矩陣是單位矩陣，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Matrix4x4.Translation">
      <summary>取得或設定此矩陣的轉移元件。</summary>
      <returns>目前執行個體的轉移元件。</returns>
    </member>
    <member name="T:System.Numerics.Plane">
      <summary>表示立體空間中的平面。</summary>
    </member>
    <member name="F:System.Numerics.Plane.D">
      <summary>從原點到法線的平面距離。</summary>
    </member>
    <member name="F:System.Numerics.Plane.Normal">
      <summary>平面的法向量。</summary>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)">
      <summary>從指定的法線以及原點到法線的距離，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="normal">平面的法向量。</param>
      <param name="d">從原點到法向量的平面距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Numerics.Vector4)">
      <summary>從指定的四維向量，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="value">向量的前三個項目說明法向量，其 <see cref="F:System.Numerics.Vector4.W" /> 則定義從原點到法線的距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>從法線的 X、Y 和 Z 元件以及原點到該法線的距離，建立 <see cref="T:System.Numerics.Plane" /> 物件。</summary>
      <param name="x">法線的 X 元件。</param>
      <param name="y">法線的 Y 元件。</param>
      <param name="z">法線的 Z 元件。</param>
      <param name="d">從原點到法線的平面距離。</param>
    </member>
    <member name="M:System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>建立 <see cref="T:System.Numerics.Plane" /> 物件，其中包含三個指定的點。</summary>
      <param name="point1">第一個定義平面的點。</param>
      <param name="point2">第二個定義平面的點。</param>
      <param name="point3">第三個定義平面的點。</param>
      <returns>包含三個點的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)">
      <summary>計算平面和四維向量的內積。</summary>
      <param name="plane">平面。</param>
      <param name="value">四維向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary>傳回此平面的指定三維向量和法向量以及平面距離 (<see cref="F:System.Numerics.Plane.D" />) 值的內積。</summary>
      <param name="plane">平面。</param>
      <param name="value">三維向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)">
      <summary>傳回此平面的指定三維向量和 <see cref="F:System.Numerics.Plane.Normal" /> 值的內積。</summary>
      <param name="plane">平面。</param>
      <param name="value">三維向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Numerics.Plane)">
      <summary>傳回值，這個值指出此執行個體和另一個平面物件是否相等。</summary>
      <param name="other">其他平面。</param>
      <returns>當兩個平面相等時為 <see langword="true" />，否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Normalize(System.Numerics.Plane)">
      <summary>建立新 <see cref="T:System.Numerics.Plane" /> 物件，其法向量是標準化的來源平面法向量。</summary>
      <param name="value">來源向量。</param>
      <returns>標準化的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary>傳回值，這個值表示兩個平面是否相等。</summary>
      <param name="value1">要比較的第一個平面。</param>
      <param name="value2">要比較的第二個平面。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)">
      <summary>傳回值，這個值表示兩個平面是否不相等。</summary>
      <param name="value1">要比較的第一個平面。</param>
      <param name="value2">要比較的第二個平面。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Plane.ToString">
      <summary>傳回這個平面物件的字串表示。</summary>
      <returns>表示這個 <see cref="T:System.Numerics.Plane" /> 物件的字串。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)">
      <summary>將標準化的平面轉換成 4x4 矩陣。</summary>
      <param name="plane">要轉換的標準化平面。</param>
      <param name="matrix">要套用至 <paramref name="plane" /> 的轉換矩陣。</param>
      <returns>已轉換的平面。</returns>
    </member>
    <member name="M:System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)">
      <summary>將標準化的平面轉換成四元數旋轉。</summary>
      <param name="plane">要轉換的標準化平面。</param>
      <param name="rotation">要套用至平面的四元數旋轉。</param>
      <returns>套用四元數旋轉而產生的新平面。</returns>
    </member>
    <member name="T:System.Numerics.Quaternion">
      <summary>表示用來編碼三維實體旋轉的向量。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.W">
      <summary>四元數的旋轉元件。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.X">
      <summary>四元數之向量元件的 X 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Y">
      <summary>四元數之向量元件的 Y 值。</summary>
    </member>
    <member name="F:System.Numerics.Quaternion.Z">
      <summary>四元數之向量元件的 Z 值。</summary>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Numerics.Vector3,System.Single)">
      <summary>從指定的向量和旋轉部分建立四元數。</summary>
      <param name="vectorPart">四元數的向量部分。</param>
      <param name="scalarPart">四元數的旋轉部分。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>從指定的元件建構四元數。</summary>
      <param name="x">要指派給四元數的 X 元件值。</param>
      <param name="y">要指派給四元數的 Y 元件值。</param>
      <param name="z">要指派給四元數的 Z 元件值。</param>
      <param name="w">要指派給四元數的 W 元件值。</param>
    </member>
    <member name="M:System.Numerics.Quaternion.Add(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將一個四元數的每個元素和第二個四元數的相對應元素相加。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Concatenate(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>串連兩個四元數。</summary>
      <param name="value1">數列中的第一個四元數旋轉。</param>
      <param name="value2">數列中的第二個四元數旋轉。</param>
      <returns>表示 <paramref name="value1" /> 旋轉後接 <paramref name="value2" /> 旋轉之串連的新四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Conjugate(System.Numerics.Quaternion)">
      <summary>傳回指定四元數的共軛。</summary>
      <param name="value">四元數。</param>
      <returns>為 <see langword="value" /> 共軛的新四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromAxisAngle(System.Numerics.Vector3,System.Single)">
      <summary>從單位向量和對此向量旋轉的角度建立四元數。</summary>
      <param name="axis">要繞著選轉的單位向量。</param>
      <param name="angle">繞著向量旋轉的角度，以弧度為單位。</param>
      <returns>新建立的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromRotationMatrix(System.Numerics.Matrix4x4)">
      <summary>從指定的旋轉矩陣建立四元數。</summary>
      <param name="matrix">旋轉矩陣。</param>
      <returns>新建立的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
      <summary>依據指定的繞 Y 軸旋轉、繞 X 軸旋轉和滾動建立一個新四元數。</summary>
      <param name="yaw">繞 Y 軸旋轉的角度，以弧度為單位。</param>
      <param name="pitch">繞 X 軸旋轉的角度，以弧度為單位。</param>
      <param name="roll">繞 Z 軸滾動的角度，以弧度為單位。</param>
      <returns>產生的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Divide(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將一個四元數除以第二個四元數。</summary>
      <param name="value1">被除數。</param>
      <param name="value2">除數。</param>
      <returns>
        <paramref name="value1" /> 除以 <paramref name="value2" /> 所得到的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Dot(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>計算兩個四元數的內積。</summary>
      <param name="quaternion1">第一個四元數。</param>
      <param name="quaternion2">第二個四元數。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Numerics.Quaternion)">
      <summary>傳回值，這個值指出此執行個體和另一個四元數是否相等。</summary>
      <param name="other">其他四元數。</param>
      <returns>如果兩個四元數相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Inverse(System.Numerics.Quaternion)">
      <summary>傳回反四元數。</summary>
      <param name="value">四元數。</param>
      <returns>反四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Length">
      <summary>計算此四元數的長度。</summary>
      <returns>計算出的四元數長度。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.LengthSquared">
      <summary>計算此四元數的長度平方。</summary>
      <returns>此四元數的長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Lerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary>根據指定第二個四元數之加權的值，執行兩個四元數之間的線性插補。</summary>
      <param name="quaternion1">第一個四元數。</param>
      <param name="quaternion2">第二個四元數。</param>
      <param name="amount">在插補中 <paramref name="quaternion2" /> 的相對加權。</param>
      <returns>插補的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>傳回將兩個四元數一起相乘所產生的四元數。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>乘積的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Multiply(System.Numerics.Quaternion,System.Single)">
      <summary>傳回四元數，該四元數為依據純量因數縮放指定四元數之所有元件而產生。</summary>
      <param name="value1">來源四元數。</param>
      <param name="value2">純量值。</param>
      <returns>縮放的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Negate(System.Numerics.Quaternion)">
      <summary>將四元數的每個元件變換正負號。</summary>
      <param name="value">要變換正負號的四元數。</param>
      <returns>已變換正負號的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Normalize(System.Numerics.Quaternion)">
      <summary>將指定的 <see cref="T:System.Numerics.Quaternion" /> 之每個元件除以其長度。</summary>
      <param name="value">要正規化的四元數。</param>
      <returns>已正規化的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Addition(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將一個四元數的每個元素和第二個四元數的相對應元素相加。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>包含 <paramref name="value1" /> 和 <paramref name="value2" /> 加總值的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Division(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將一個四元數除以第二個四元數。</summary>
      <param name="value1">被除數。</param>
      <param name="value2">除數。</param>
      <returns>
        <paramref name="value1" /> 除以 <paramref name="value2" /> 所得到的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Equality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>傳回值，指出兩個四元數是否相等。</summary>
      <param name="value1">要比較的第一個四元數。</param>
      <param name="value2">要比較的第二個四元數。</param>
      <returns>如果兩個四元數相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Inequality(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>傳回值，指出兩個四元數是否不相等。</summary>
      <param name="value1">要比較的第一個四元數。</param>
      <param name="value2">要比較的第二個四元數。</param>
      <returns>如果 <paramref name="value1" /> 和 <paramref name="value2" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>傳回將兩個四元數一起相乘所產生的四元數。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>乘積的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Multiply(System.Numerics.Quaternion,System.Single)">
      <summary>傳回四元數，該四元數為依據純量因數縮放指定四元數之所有元件而產生。</summary>
      <param name="value1">來源四元數。</param>
      <param name="value2">純量值。</param>
      <returns>縮放的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_Subtraction(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將第二個四元數中的每個元素減去第一個四元數中相對應的元素。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>包含值的四元數，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.op_UnaryNegation(System.Numerics.Quaternion)">
      <summary>將四元數的每個元件變換正負號。</summary>
      <param name="value">要變換正負號的四元數。</param>
      <returns>已變換正負號的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Slerp(System.Numerics.Quaternion,System.Numerics.Quaternion,System.Single)">
      <summary>使用球面線性插補，在兩個四元數間進行插補。</summary>
      <param name="quaternion1">第一個四元數。</param>
      <param name="quaternion2">第二個四元數。</param>
      <param name="amount">在插補中第二個四元數的相對加權。</param>
      <returns>插補的四元數。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.Subtract(System.Numerics.Quaternion,System.Numerics.Quaternion)">
      <summary>將第二個四元數中的每個元素減去第一個四元數中相對應的元素。</summary>
      <param name="value1">第一個四元數。</param>
      <param name="value2">第二個四元數。</param>
      <returns>包含值的四元數，此值為從 <paramref name="value2" /> 中的每個元素減去 <paramref name="value1" /> 中相對應的元素所產生。</returns>
    </member>
    <member name="M:System.Numerics.Quaternion.ToString">
      <summary>傳回表示這個四元數的字串。</summary>
      <returns>此四元數的字串表示。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.Identity">
      <summary>取得表示沒有旋轉的四元數。</summary>
      <returns>四元數，其值為 <c> (0、0、0、1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Quaternion.IsIdentity">
      <summary>取得值，這個值表示目前執行個體是否為單位四元數。</summary>
      <returns>如果目前的執行個體是單位四元數，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Numerics.Vector">
      <summary>提供建立、操作、結合以及轉換泛型向量之靜態簡便方法的集合。</summary>
    </member>
    <member name="M:System.Numerics.Vector.Abs``1(System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素為指定向量之元素的絕對值。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Add``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的總和。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AndNot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>透過在兩個向量的每組對應元素上執行位元 And Not 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorByte``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成不帶正負號之位元組向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorDouble``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成雙精確度浮點向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt16``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成 16 位元整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt32``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorInt64``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成長整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSByte``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成帶正負號之位元組向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorSingle``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成單精確度浮點向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt16``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成不帶正負號之 16 位元整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt32``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成不帶正負號之整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.AsVectorUInt64``1(System.Numerics.Vector{``0})">
      <summary>將指定向量的位元轉換成不帶正負號之長整數向量的位元。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseAnd``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>透過在兩個向量的每對元素上執行位元 <see langword="And" /> 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.BitwiseOr``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>透過在兩個向量的每對元素上執行位元 <see langword="Or" /> 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Ceiling(System.Numerics.Vector{System.Double})">
      <summary>傳回新向量，其項目為大於或等於指定向量項目的最小整數值。</summary>
      <param name="value">來源向量。</param>
      <returns>向量，其項目為大於或等於指定向量項目的最小整數值。
如果值等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則傳回該值。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Ceiling(System.Numerics.Vector{System.Single})">
      <summary>傳回新向量，其項目為大於或等於指定向量項目的最小整數值。</summary>
      <param name="value">來源向量。</param>
      <returns>向量，其項目為大於或等於指定向量項目的最小整數值。
如果值等於 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.NegativeInfinity" /> 或 <see cref="F:System.Single.PositiveInfinity" />，則傳回該值。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>依據整數遮罩向量，使用在兩個指定單精確度來源向量之間所選取的元素，來建立新的單精確度向量。</summary>
      <param name="condition">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left">第一個來源向量。</param>
      <param name="right">第二個來源向量。</param>
      <returns>使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>依據整數遮罩向量，使用在兩個指定雙精確度來源向量之間所選取的元素，來建立新的雙精確度向量。</summary>
      <param name="condition">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left">第一個來源向量。</param>
      <param name="right">第二個來源向量。</param>
      <returns>使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConditionalSelect``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>依據整數遮罩向量，使用在兩個相同類型的指定來源向量之間所選取的元素，來建立新的指定類型向量。</summary>
      <param name="condition">整數遮罩向量，用來選擇磁碟機。</param>
      <param name="left">第一個來源向量。</param>
      <param name="right">第二個來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>使用依據遮照選取之元素的新向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.Int64})">
      <summary>將 <c>向量&lt;Int64&gt;</c> 轉換為 <c>向量&lt;Double&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToDouble(System.Numerics.Vector{System.UInt64})">
      <summary>將 <c>向量&lt;UInt64&gt;</c> 轉換為 <c>向量&lt;Double&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt32(System.Numerics.Vector{System.Single})">
      <summary>將 <c>向量&lt;Single&gt;</c> 轉換為 <c>向量&lt;Int32&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToInt64(System.Numerics.Vector{System.Double})">
      <summary>將 <c>向量&lt;Double&gt;</c> 轉換為 <c>向量&lt;Int64&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.Int32})">
      <summary>將 <c>向量&lt;Int32&gt;</c> 轉換為 <c>向量&lt;Single&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToSingle(System.Numerics.Vector{System.UInt32})">
      <summary>將 <c>向量&lt;UInt32&gt;</c> 轉換為 <c>向量&lt;Single&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt32(System.Numerics.Vector{System.Single})">
      <summary>將 <c>向量&lt;Single&gt;</c> 轉換為 <c>向量&lt;UInt32&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.ConvertToUInt64(System.Numerics.Vector{System.Double})">
      <summary>將 <c>向量&lt;Double&gt;</c> 轉換為 <c>向量&lt;UInt64&gt;</c>。</summary>
      <param name="value">來源向量。</param>
      <returns>轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Divide``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為第一個向量的元素除以第二個向量之對應元素的結果。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>相除的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Dot``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回兩個向量的內積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>傳回新的整數向量，其元素表示兩個指定雙精確度向量的元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>傳回新的整數向量，其元素表示兩個指定整數向量的元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>傳回新向量，其元素表示兩個指定長整數向量的元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>傳回新的整數向量，其元素表示兩個指定單精確度向量的元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Equals``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回指定類型的新向量，其元素表示兩個相同類型之指定向量的元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出指定向量的每對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 的所有元素都相等，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.EqualsAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出指定向量的任何一對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 中的任何元素組相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Floor(System.Numerics.Vector{System.Double})">
      <summary>傳回新向量，其項目為小於或等於指定向量項目的最大整數值。</summary>
      <param name="value">來源向量。</param>
      <returns>向量，其項目為小於或等於指定向量項目的最大整數值。
如果值等於 <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" /> 或 <see cref="F:System.Double.PositiveInfinity" />，則傳回該值。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Floor(System.Numerics.Vector{System.Single})">
      <summary>傳回新向量，其項目為小於或等於指定向量項目的最大整數值。</summary>
      <param name="value">來源向量。</param>
      <returns>向量，其項目為小於或等於指定向量項目的最大整數值。
如果值等於 <see cref="F:System.Single.NaN" />、<see cref="F:System.Single.NegativeInfinity" /> 或 <see cref="F:System.Single.PositiveInfinity" />，則傳回該值。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否大於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>傳回新的整數向量，其元素表示某個整數向量的元素是否大於第二個整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>傳回新的長整數向量，其元素表示某個長整數向量的元素是否大於第二個長整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>傳回新的整數向量，其元素表示某個單精確度浮點向量的元素是否大於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素表示某個指定類型向量的元素是否大於相同類型之第二個向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的所有元素是否大於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的所有元素大於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的任何元素是否大於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的任何元素大於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>傳回新的整數向量，其元素表示某個向量的元素是否大於或等於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>傳回新的整數向量，其元素表示某個整數向量的元素是否大於或等於第二個整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>傳回新的長整數向量，其元素表示某個長整數向量的元素是否大於或等於第二個長整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>傳回新的整數向量，其元素表示某個向量的元素是否大於或等於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素表示某個指定類型向量的元素是否大於或等於相同類型之第二個向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的所有元素是否大於或等於第二個向量的所有對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的所有元素大於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.GreaterThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的任何元素是否大於或等於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的任何元素大於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否小於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>傳回新的整數向量，其元素表示某個整數向量的元素是否小於第二個整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>傳回新的長整數向量，其元素表示某個長整數向量的元素是否小於第二個長整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>傳回新的整數向量，其元素表示某個單精確度向量的元素是否小於第二個單精確度向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThan``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回指定類型的新向量，其元素表示某個向量的元素是否小於第二個向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的所有元素是否小於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的所有元素小於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的任何元素是否小於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的任何元素小於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>傳回新的整數向量，其元素表示某個雙精確度浮點向量的元素是否小於或等於第二個雙精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>傳回新的整數向量，其元素表示某個整數向量的元素是否小於或等於第二個整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>傳回新的長整數向量，其元素表示某個長整數向量的元素是否小於或等於第二個長整數向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的長整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Single})">
      <summary>傳回新的整數向量，其元素表示某個單精確度浮點向量的元素是否小於或等於第二個單精確度浮點向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>產生的整數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqual``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素表示某個向量的元素是否小於或等於第二個向量中的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAll``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的所有元素是否小於或等於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的所有元素小於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.LessThanOrEqualAny``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回值，指出第一個向量的任何元素是否小於或等於第二個向量的對應元素。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>如果 <paramref name="left" /> 的任何元素小於或等於 <paramref name="right" /> 的對應元素，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Max``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的最大值。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>最大的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Min``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其元素為兩個指定向量之每對元素的最大值。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>最小的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(``0,System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為純量值乘以指定向量的每個值。</summary>
      <param name="left">純量值。</param>
      <param name="right">向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},``0)">
      <summary>傳回新的向量，其值為純量值乘以指定向量的每個值。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Multiply``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Double},System.Numerics.Vector{System.Double})">
      <summary>將兩個 <c>向量&lt;Double&gt;</c> 執行個體縮減成一個 <c>向量&lt;Single&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;Single&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int16})">
      <summary>將兩個 <c>向量&lt;Int16&gt;</c> 執行個體縮減成一個 <c>向量&lt;SByte&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;SByte&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int32})">
      <summary>將兩個 <c>向量&lt;Int32&gt;</c> 執行個體縮減成一個 <c>向量&lt;Int16&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;Int16&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.Int64},System.Numerics.Vector{System.Int64})">
      <summary>將兩個 <c>向量&lt;Int64&gt;</c> 執行個體縮減成一個 <c>向量&lt;Int32&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;Int32&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt16})">
      <summary>將兩個 <c>向量&lt;UInt16&gt;</c> 執行個體縮減成一個 <c>向量&lt;Byte&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;Byte&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt32})">
      <summary>將兩個 <c>向量&lt;UInt32&gt;</c> 執行個體縮減成一個 <c>向量&lt;UInt16&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;UInt16&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Narrow(System.Numerics.Vector{System.UInt64},System.Numerics.Vector{System.UInt64})">
      <summary>將兩個 <c>向量&lt;UInt64&gt;</c> 執行個體縮減成一個 <c>向量&lt;UInt32&gt;</c>。</summary>
      <param name="source1">第一個來源向量，其元素會變成傳回值的較低索引元素。</param>
      <param name="source2">第二個來源向量，其元素會變成傳回值的較高索引元素。</param>
      <returns>
        <c>向量&lt;UInt32&gt;</c>，其包含從來源向量縮小的項目。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Negate``1(System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素為指定向量之對應元素的否定。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.OnesComplement``1(System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素是擷取指定向量之元素的一補數而得。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.SquareRoot``1(System.Numerics.Vector{``0})">
      <summary>傳回新向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value">來源向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Subtract``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>傳回新的向量，其值為第二個向量的元素與第一個向量之對應元素的差異。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Byte},System.Numerics.Vector{System.UInt16}@,System.Numerics.Vector{System.UInt16}@)">
      <summary>將一個 <c>向量&lt;Byte&gt;</c> 擴大成兩個 <c>向量&lt;UInt16&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int16},System.Numerics.Vector{System.Int32}@,System.Numerics.Vector{System.Int32}@)">
      <summary>將一個 <c>向量&lt;Int16&gt;</c> 擴大成兩個 <c>向量&lt;Int32&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Int32},System.Numerics.Vector{System.Int64}@,System.Numerics.Vector{System.Int64}@)">
      <summary>將一個 <c>向量&lt;Int32&gt;</c> 擴大成兩個 <c>向量&lt;Int64&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.SByte},System.Numerics.Vector{System.Int16}@,System.Numerics.Vector{System.Int16}@)">
      <summary>將一個 <c>向量&lt;SByte&gt;</c> 擴大成兩個 <c>向量&lt;Int16&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.Single},System.Numerics.Vector{System.Double}@,System.Numerics.Vector{System.Double}@)">
      <summary>將一個 <c>向量&lt;Single&gt;</c> 擴大成兩個 <c>向量&lt;Double&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt16},System.Numerics.Vector{System.UInt32}@,System.Numerics.Vector{System.UInt32}@)">
      <summary>將一個 <c>向量&lt;UInt16&gt;</c> 擴大成兩個 <c>向量&lt;UInt32&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Widen(System.Numerics.Vector{System.UInt32},System.Numerics.Vector{System.UInt64}@,System.Numerics.Vector{System.UInt64}@)">
      <summary>將一個 <c>向量&lt;UInt32&gt;</c> 擴大成兩個 <c>向量&lt;UInt64&gt;</c> 執行個體。</summary>
      <param name="source">來源向量，其元素會擴大成輸出。</param>
      <param name="dest1">第一個輸出向量，其元素會包含從來源向量較低索引擴大的元素。</param>
      <param name="dest2">第二個輸出向量，其元素會包含從來源向量較高索引擴大的元素。</param>
    </member>
    <member name="M:System.Numerics.Vector.Xor``1(System.Numerics.Vector{``0},System.Numerics.Vector{``0})">
      <summary>透過在兩個向量的每對元素上執行位元互斥 Or (<see langword="XOr" />) 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
      <returns>產生的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector.IsHardwareAccelerated">
      <summary>取得值，指出向量運算是否受限於透過 JIT 內建支援的硬體加速。</summary>
      <returns>如果向量運算受限於硬體加速，即為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="T:System.Numerics.Vector`1">
      <summary>表示指定數值類型的單一向量，其適用於低層級的平行演算法最佳化。</summary>
      <typeparam name="T">向量類型。 <c>T</c> 可以是任何基本數數值型別。</typeparam>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0)">
      <summary>建立具有指定類型元件的向量。</summary>
      <param name="value">定義向量中元件類型的數字型別。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[])">
      <summary>從指定的陣列建立向量。</summary>
      <param name="values">要新增至向量作為 T 類型物件陣列的值。此陣列必須至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素，而且只會使用第一個 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
      <summary>從指定索引位置開始的指定陣列建立向量。</summary>
      <param name="values">要新增至向量作為 T 類型物件陣列的值。此陣列必須至少包含來自指定索引的 <see cref="P:System.Numerics.Vector`1.Count" /> 元素，而且只會使用第一個 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</param>
      <param name="index">要從中建立向量的開始索引位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小於零。  
  
-或- 
<paramref name="values" /> 的長度減 <paramref name="index" /> 小於 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{`0})">
      <summary>從指定的 <see cref="T:System.ReadOnlySpan`1" /> 建構向量。</summary>
      <param name="values">要新增至向量的值，其形式為 <see langword="T" /> 類型物件的唯讀範圍。 此範圍必須至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素，而且只會使用第一個 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="values" /> 未至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>從指定的唯讀位元組範圍建構向量。</summary>
      <param name="values">唯讀位元組範圍，其中包含要新增至向量的值。 此範圍必須至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素，而且只會使用第一個 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="values" /> 未至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.#ctor(System.Span{`0})">
      <summary>從指定的 <see cref="T:System.Span`1" /> 建構向量。</summary>
      <param name="values">要新增至向量作為 T 類型物件範圍的值。此範圍必須至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素，而且只會使用第一個 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="values" /> 未至少包含 <see cref="P:System.Numerics.Vector`1.Count" /> 元素。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[])">
      <summary>將向量執行個體複製到指定的目的陣列。</summary>
      <param name="destination">可接收向量值複本的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前向量中的項目數大於 <paramref name="destination" /> 陣列中所提供的項目數。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
      <summary>從指定的索引位置開始，將向量執行個體複製到目的陣列。</summary>
      <param name="destination">可接收向量值複本的陣列。</param>
      <param name="startIndex">要從中開始複製作業的 <paramref name="destination" /> 開始索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於 <paramref name="startIndex" /> 到 <paramref name="destination" /> 陣列結尾所提供的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零或大於 <paramref name="destination" /> 中的最後一個索引。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{`0})">
      <summary>將向量複製到指定的範圍。 執行個體時提供 SQL Server 登入。</summary>
      <param name="destination">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException">來源向量中的元素數大於目的地範圍中可用元素數。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.CopyTo(System.Span{System.Byte})">
      <summary>將向量複製到指定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.ArgumentException">來源向量中的元素數大於目的地範圍中可用元素數。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
      <summary>傳回值，這個值指出此執行個體是否與指定的向量相等。</summary>
      <param name="other">要與這個執行個體比較的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果目前的執行個體和 <paramref name="other" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體是否與指定的物件相等。</summary>
      <param name="obj">與這個執行個體相互比較的物件。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 為 null，或者，如果 <paramref name="obj" /> 與目前執行個體的向量類型不同，此方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>透過在兩個向量的每個元素上執行位元 <see langword="And" /> 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>由 <paramref name="left" /> 與 <paramref name="right" /> 進行位元 <see langword="And" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>透過在兩個向量的每個元素上執行位元 <see langword="Or" /> 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>由 <paramref name="left" /> 與 <paramref name="right" /> 的元素進行位元 <see langword="Or" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>傳回值，指出兩個指定向量的每對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>透過在兩個向量的每個元素上執行位元 <see langword="XOr" /> 運算，以傳回新的向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>由 <paramref name="left" /> 與 <paramref name="right" /> 的元素進行位元 <see langword="XOr" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Byte" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Double" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Int16" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Int32" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Int64" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.SByte" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.Single" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.UInt16" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.UInt32" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
      <summary>將指定向量的位元轉換成 <see cref="T:System.UInt64" /> 類型的向量。</summary>
      <param name="value">要轉換的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>傳回值，指出指定向量的任何一對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果 left 和 right 中的任何元素組相等，即為 <see langword="true" />。 如果沒有元素組相等，為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
      <summary>將向量乘以指定的純量值。</summary>
      <param name="factor">純量值。</param>
      <param name="value">來源向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
      <summary>將向量乘以指定的純量值。</summary>
      <param name="value">來源向量。</param>
      <param name="factor">純量值。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
      <summary>傳回新向量，其元素是擷取指定向量之元素的一補數而得。</summary>
      <param name="value">來源向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>一補數向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
      <summary>否定指定向量。</summary>
      <param name="value">要變換正負號的向量。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString">
      <summary>使用預設格式傳回此向量的字串表示。</summary>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>這個向量的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String)">
      <summary>使用指定格式字串來格式化個別元素，以傳回此向量的字串表示。</summary>
      <param name="format">定義個別項目的格式。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
      <summary>使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前此向量的字串表示。</summary>
      <param name="format">定義個別項目的格式。</param>
      <param name="formatProvider">格式提供者，提供特定文化特性格式資訊。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{`0})">
      <summary>嘗試將向量複製到指定的 <see cref="T:System.Span`1" />。</summary>
      <param name="destination">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果來源向量已成功複製到 <paramref name="destination" />，則為 <see langword="true" />。 如果 <paramref name="destination" /> 不夠大，無法包含來源向量，則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector`1.TryCopyTo(System.Span{System.Byte})">
      <summary>嘗試將向量複製到指定的位元組範圍。</summary>
      <param name="destination">要將值複製到其中的目的地範圍。 目的地範圍大小必須至少為 <see cref="P:System.Numerics.Vector`1.Count" />。</param>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>如果來源向量已成功複製到 <paramref name="destination" />，則為 <see langword="true" />。 如果 <paramref name="destination" /> 不夠大，無法包含來源向量，則為 <see langword="false" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Count">
      <summary>傳回向量中儲存的項目數。</summary>
      <exception cref="T:System.NotSupportedException">不支援透過反射屬性存取 getter 屬性。
        
-或- 
.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>向量中儲存的項目數。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Item(System.Int32)">
      <summary>取得位於指定索引上的項目。</summary>
      <param name="index">要傳回的項目索引。</param>
      <exception cref="T:System.IndexOutOfRangeException">
        <paramref name="index" /> 小於零。  
  
-或- 
 <paramref name="index" /> 大於或等於 <see cref="P:System.Numerics.Vector`1.Count" />。</exception>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>位於索引 <paramref name="index" /> 的項目。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.One">
      <summary>傳回包含所有一的向量。</summary>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>包含所有一的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector`1.Zero">
      <summary>傳回包含所有零的向量。</summary>
      <exception cref="T:System.NotSupportedException">.NET 5.0 和更新版本：不支援 <see langword="T" /> 類型。</exception>
      <returns>包含所有零的向量。</returns>
    </member>
    <member name="T:System.Numerics.Vector2">
      <summary>代表具有兩個單精確度浮點值的向量。</summary>
    </member>
    <member name="F:System.Numerics.Vector2.X">
      <summary>此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector2.Y">
      <summary>此向量的 Y 元件。</summary>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single)">
      <summary>建立新的 <see cref="T:System.Numerics.Vector2" /> 物件，其兩個元素具有相同的值。</summary>
      <param name="value">要指派給這兩個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.#ctor(System.Single,System.Single)">
      <summary>建立一個向量，其元素具有指定的值。</summary>
      <param name="x">要指派給 <see cref="F:System.Numerics.Vector2.X" /> 欄位的值。</param>
      <param name="y">要指派給 <see cref="F:System.Numerics.Vector2.Y" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector2.Abs(System.Numerics.Vector2)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value">一個向量。</param>
      <returns>絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Add(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Clamp(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>限制向量介於最小值和最大值之間。</summary>
      <param name="value1">要限制的向量。</param>
      <param name="min">最小值。</param>
      <param name="max">最大值。</param>
      <returns>受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[])">
      <summary>將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.CopyTo(System.Single[],System.Int32)">
      <summary>從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <param name="index">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector2.Distance(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.DistanceSquared(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Divide(System.Numerics.Vector2,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="divisor">純量值。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Dot(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回兩個向量的內積。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Numerics.Vector2)">
      <summary>傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other">其他向量。</param>
      <returns>當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Length">
      <summary>傳回向量的長度。</summary>
      <returns>向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.LengthSquared">
      <summary>傳回向量長度平方。</summary>
      <returns>向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Lerp(System.Numerics.Vector2,System.Numerics.Vector2,System.Single)">
      <summary>根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <param name="amount">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns>插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Max(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Min(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Numerics.Vector2,System.Single)">
      <summary>將向量乘以指定的純量。</summary>
      <param name="left">要相乘的向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Multiply(System.Single,System.Numerics.Vector2)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">已縮放的值。</param>
      <param name="right">向量。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Negate(System.Numerics.Vector2)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Normalize(System.Numerics.Vector2)">
      <summary>傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="value">要正規化的向量。</param>
      <returns>已正規化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Addition(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Division(System.Numerics.Vector2,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="value1">向量。</param>
      <param name="value2">純量值。</param>
      <returns>相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Equality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Inequality(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Numerics.Vector2,System.Single)">
      <summary>指定的向量乘以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Multiply(System.Single,System.Numerics.Vector2)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_Subtraction(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.op_UnaryNegation(System.Numerics.Vector2)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Reflect(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>傳回具有指定法線之向量在平面上的反射。</summary>
      <param name="vector">來源向量。</param>
      <param name="normal">已反射此平面的法線。</param>
      <returns>已反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.SquareRoot(System.Numerics.Vector2)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value">一個向量。</param>
      <returns>平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Subtract(System.Numerics.Vector2,System.Numerics.Vector2)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString">
      <summary>使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String)">
      <summary>使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.ToString(System.String,System.IFormatProvider)">
      <summary>使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider">格式提供者，提供特定文化特性格式資訊。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>依據指定的 3x2 矩陣轉換向量。</summary>
      <param name="position">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換向量。</summary>
      <param name="position">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值來轉換向量。</summary>
      <param name="value">要旋轉的向量。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix3x2)">
      <summary>依據指定的 3x2 矩陣轉換向量的法線。</summary>
      <param name="normal">來源向量。</param>
      <param name="matrix">矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector2.TransformNormal(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換向量的法線。</summary>
      <param name="normal">來源向量。</param>
      <param name="matrix">矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.One">
      <summary>取得其 2 個元素等於 1 的向量。</summary>
      <returns>向量，其兩個元素等於一個 (也就是說，它會傳回向量 <c> (1，1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitX">
      <summary>取得向量 (1,0)。</summary>
      <returns>向量 <c> (1，0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.UnitY">
      <summary>取得向量 (0,1)。</summary>
      <returns>向量 <c> (0，1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector2.Zero">
      <summary>傳回其 2 個元素等於 0 的向量。</summary>
      <returns>其兩個元素等於零的向量 (也就是說，它會傳回向量 <c> (0，0) </c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector3">
      <summary>代表具有三個單精確度浮點值的向量。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.X">
      <summary>此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Y">
      <summary>此向量的 Y 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector3.Z">
      <summary>此向量的 Z 元件。</summary>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Numerics.Vector2,System.Single)">
      <summary>從指定的 <see cref="T:System.Numerics.Vector2" /> 物件以及指定的值，建立新的 <see cref="T:System.Numerics.Vector3" /> 物件。</summary>
      <param name="value">具有兩個元素的向量。</param>
      <param name="z">要指派給 <see cref="F:System.Numerics.Vector3.Z" /> 欄位的其他值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single)">
      <summary>建立新的 <see cref="T:System.Numerics.Vector3" /> 物件，其三個元素具有相同的值。</summary>
      <param name="value">要指派給這全部三個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.#ctor(System.Single,System.Single,System.Single)">
      <summary>建立一個向量，其元素具有指定的值。</summary>
      <param name="x">要指派給 <see cref="F:System.Numerics.Vector3.X" /> 欄位的值。</param>
      <param name="y">要指派給 <see cref="F:System.Numerics.Vector3.Y" /> 欄位的值。</param>
      <param name="z">要指派給 <see cref="F:System.Numerics.Vector3.Z" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector3.Abs(System.Numerics.Vector3)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value">一個向量。</param>
      <returns>絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Add(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Clamp(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>限制向量介於最小值和最大值之間。</summary>
      <param name="value1">要限制的向量。</param>
      <param name="min">最小值。</param>
      <param name="max">最大值。</param>
      <returns>受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[])">
      <summary>將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.CopyTo(System.Single[],System.Int32)">
      <summary>從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <param name="index">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector3.Cross(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>計算兩個向量的外積。</summary>
      <param name="vector1">第一個向量。</param>
      <param name="vector2">第二個向量。</param>
      <returns>外積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Distance(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.DistanceSquared(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Divide(System.Numerics.Vector3,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="divisor">純量值。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Dot(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回兩個向量的內積。</summary>
      <param name="vector1">第一個向量。</param>
      <param name="vector2">第二個向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Numerics.Vector3)">
      <summary>傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other">其他向量。</param>
      <returns>當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Length">
      <summary>傳回這個向量物件的長度。</summary>
      <returns>向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.LengthSquared">
      <summary>傳回向量長度平方。</summary>
      <returns>向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Lerp(System.Numerics.Vector3,System.Numerics.Vector3,System.Single)">
      <summary>根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <param name="amount">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns>插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Max(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Min(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Numerics.Vector3,System.Single)">
      <summary>將向量乘以指定的純量。</summary>
      <param name="left">要相乘的向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Multiply(System.Single,System.Numerics.Vector3)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">已縮放的值。</param>
      <param name="right">向量。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Negate(System.Numerics.Vector3)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Normalize(System.Numerics.Vector3)">
      <summary>傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="value">要正規化的向量。</param>
      <returns>已正規化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Addition(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Division(System.Numerics.Vector3,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="value1">向量。</param>
      <param name="value2">純量值。</param>
      <returns>相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Equality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Inequality(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Numerics.Vector3,System.Single)">
      <summary>指定的向量乘以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Multiply(System.Single,System.Numerics.Vector3)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_Subtraction(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.op_UnaryNegation(System.Numerics.Vector3)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Reflect(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>傳回具有指定法線之向量在平面上的反射。</summary>
      <param name="vector">來源向量。</param>
      <param name="normal">已反射此平面的法線。</param>
      <returns>已反射的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.SquareRoot(System.Numerics.Vector3)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value">一個向量。</param>
      <returns>平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Subtract(System.Numerics.Vector3,System.Numerics.Vector3)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString">
      <summary>使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String)">
      <summary>使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.ToString(System.String,System.IFormatProvider)">
      <summary>使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider">格式提供者，提供特定文化特性格式資訊。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換向量。</summary>
      <param name="position">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值來轉換向量。</summary>
      <param name="value">要旋轉的向量。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector3.TransformNormal(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換向量的法線。</summary>
      <param name="normal">來源向量。</param>
      <param name="matrix">矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.One">
      <summary>取得其 3 個元素等於 1 的向量。</summary>
      <returns>向量，其三個元素等於一個 (也就是說，它會傳回向量 <c> (1，1，1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitX">
      <summary>取得向量 (1,0,0)。</summary>
      <returns>向量 <c> (1，0，0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitY">
      <summary>取得向量 (0,1,0)。</summary>
      <returns>向量 <c> (0，1，0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.UnitZ">
      <summary>取得向量 (0,0,1)。</summary>
      <returns>向量 <c> (0、0、1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector3.Zero">
      <summary>取得其 3 個元素等於 0 的向量。</summary>
      <returns>向量，其三個元素等於零 (也就是說，它會傳回向量 <c> (0、0、0) </c>。</returns>
    </member>
    <member name="T:System.Numerics.Vector4">
      <summary>代表具有四個單精確度浮點值的向量。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.W">
      <summary>此向量的 W 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.X">
      <summary>此向量的 X 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Y">
      <summary>此向量的 Y 元件。</summary>
    </member>
    <member name="F:System.Numerics.Vector4.Z">
      <summary>此向量的 Z 元件。</summary>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector2,System.Single,System.Single)">
      <summary>從指定的 <see cref="T:System.Numerics.Vector2" /> 物件以及 Z 和 W 元件，建立新的 <see cref="T:System.Numerics.Vector4" /> 物件。</summary>
      <param name="value">要針對 X 和 Y 元件使用的向量。</param>
      <param name="z">Z 元件。</param>
      <param name="w">W 元件。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Numerics.Vector3,System.Single)">
      <summary>從指定的 <see cref="T:System.Numerics.Vector3" /> 物件以及 W 元件，建構新的 <see cref="T:System.Numerics.Vector4" /> 物件。</summary>
      <param name="value">要針對 X、Y 和 Z 元件使用的向量。</param>
      <param name="w">W 元件。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single)">
      <summary>建立新的 <see cref="T:System.Numerics.Vector4" /> 物件，其四個元素具有相同的值。</summary>
      <param name="value">要指派給這全部四個元素的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>建立一個向量，其元素具有指定的值。</summary>
      <param name="x">要指派給 <see cref="F:System.Numerics.Vector4.X" /> 欄位的值。</param>
      <param name="y">要指派給 <see cref="F:System.Numerics.Vector4.Y" /> 欄位的值。</param>
      <param name="z">要指派給 <see cref="F:System.Numerics.Vector4.Z" /> 欄位的值。</param>
      <param name="w">要指派給 <see cref="F:System.Numerics.Vector4.W" /> 欄位的值。</param>
    </member>
    <member name="M:System.Numerics.Vector4.Abs(System.Numerics.Vector4)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的絕對值。</summary>
      <param name="value">一個向量。</param>
      <returns>絕對值的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Add(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Clamp(System.Numerics.Vector4,System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>限制向量介於最小值和最大值之間。</summary>
      <param name="value1">要限制的向量。</param>
      <param name="min">最小值。</param>
      <param name="max">最大值。</param>
      <returns>受限制的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[])">
      <summary>將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.CopyTo(System.Single[],System.Int32)">
      <summary>從指定的索引位置開始，將向量的元素複製到指定的陣列。</summary>
      <param name="array">目的陣列。</param>
      <param name="index">要複製此向量第一個元素的索引。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> 為 <see langword="null" />。</exception>
      <exception cref="T:System.ArgumentException">目前執行個體中的項目數大於陣列中的項目數。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> 小於零。  
  
-或- 
 <paramref name="index" /> 大於或等於陣列長度。</exception>
      <exception cref="T:System.RankException">
        <paramref name="array" /> 是多維的。</exception>
    </member>
    <member name="M:System.Numerics.Vector4.Distance(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>計算兩個指定的點之間的歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.DistanceSquared(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回兩個指定的點之間的平方歐幾里得距離。</summary>
      <param name="value1">第一個點。</param>
      <param name="value2">第二個點。</param>
      <returns>平方距離。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Divide(System.Numerics.Vector4,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="divisor">純量值。</param>
      <returns>相除所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Dot(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回兩個向量的內積。</summary>
      <param name="vector1">第一個向量。</param>
      <param name="vector2">第二個向量。</param>
      <returns>內積。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Numerics.Vector4)">
      <summary>傳回值，這個值指出此執行個體和另一個向量是否相等。</summary>
      <param name="other">其他向量。</param>
      <returns>當兩個向量相等時為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Equals(System.Object)">
      <summary>傳回值，這個值指出此執行個體和指定的物件是否相等。</summary>
      <param name="obj">要與目前執行個體比較的物件。</param>
      <returns>如果目前的執行個體和 <paramref name="obj" /> 相等則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="obj" /> 是 <see langword="null" />，則方法會傳回 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.GetHashCode">
      <summary>傳回這個執行個體的雜湊碼。</summary>
      <returns>雜湊碼。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Length">
      <summary>傳回這個向量物件的長度。</summary>
      <returns>向量的長度。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.LengthSquared">
      <summary>傳回向量長度平方。</summary>
      <returns>向量長度平方。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Lerp(System.Numerics.Vector4,System.Numerics.Vector4,System.Single)">
      <summary>根據給定的加權執行兩個向量之間的線性插補。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <param name="amount">介於 0 和 1 的值，表示 <paramref name="value2" /> 的加權。</param>
      <returns>插補的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Max(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最大值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最大化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Min(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回一個向量，其元素為兩個指定向量之每個成對元素的最小值。</summary>
      <param name="value1">第一個向量。</param>
      <param name="value2">第二個向量。</param>
      <returns>最小化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Numerics.Vector4,System.Single)">
      <summary>將向量乘以指定的純量。</summary>
      <param name="left">要相乘的向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Multiply(System.Single,System.Numerics.Vector4)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">已縮放的值。</param>
      <param name="right">向量。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Negate(System.Numerics.Vector4)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Normalize(System.Numerics.Vector4)">
      <summary>傳回與指定向量方向相同的向量，但長度為 1。</summary>
      <param name="vector">要正規化的向量。</param>
      <returns>已正規化的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Addition(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>將兩個向量一起相加。</summary>
      <param name="left">要相加的第一個向量。</param>
      <param name="right">要相加的第二個向量。</param>
      <returns>加總的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>將第一個向量除以第二個。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>
        <paramref name="left" /> 除以 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Division(System.Numerics.Vector4,System.Single)">
      <summary>指定的向量除以指定的純量值。</summary>
      <param name="value1">向量。</param>
      <param name="value2">純量值。</param>
      <returns>相除的結果。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Equality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回值，指出兩個指定向量的每個成對元素是否相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Inequality(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回值，這個值表示兩個指定的向量是否不相等。</summary>
      <param name="left">要比較的第一個向量。</param>
      <param name="right">要比較的第二個向量。</param>
      <returns>如果 <paramref name="left" /> 和 <paramref name="right" /> 不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>傳回新的向量，其值為兩個指定向量之每對元素的乘積。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>元素智慧產品向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Numerics.Vector4,System.Single)">
      <summary>指定的向量乘以指定的純量值。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Multiply(System.Single,System.Numerics.Vector4)">
      <summary>將純量值乘以指定的向量。</summary>
      <param name="left">向量。</param>
      <param name="right">純量值。</param>
      <returns>已縮放的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_Subtraction(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>從 <paramref name="left" /> 減去 <paramref name="right" /> 所得到的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.op_UnaryNegation(System.Numerics.Vector4)">
      <summary>將指定的向量變換正負號。</summary>
      <param name="value">要變換正負號的向量。</param>
      <returns>已否定的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.SquareRoot(System.Numerics.Vector4)">
      <summary>傳回一個向量，其元素為指定向量之每個元素的平方根。</summary>
      <param name="value">一個向量。</param>
      <returns>平方根向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Subtract(System.Numerics.Vector4,System.Numerics.Vector4)">
      <summary>從第一個向量減去第二個向量。</summary>
      <param name="left">第一個向量。</param>
      <param name="right">第二個向量。</param>
      <returns>差異向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString">
      <summary>使用預設格式傳回目前執行個體的字串表示。</summary>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String)">
      <summary>使用指定格式字串來格式化個別項目，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.ToString(System.String,System.IFormatProvider)">
      <summary>使用指定格式字串來格式化個別項目，以及使用指定的格式提供者來定義特定文化特性的格式，傳回目前執行個體的字串表示。</summary>
      <param name="format">標準或自訂數值格式字串，其定義個別項目的格式。</param>
      <param name="formatProvider">格式提供者，提供特定文化特性格式資訊。</param>
      <returns>目前執行個體的字串表示。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換二維向量。</summary>
      <param name="position">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector2,System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值來轉換二維向量。</summary>
      <param name="value">要旋轉的向量。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換三維向量。</summary>
      <param name="position">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector3,System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值來轉換三維向量。</summary>
      <param name="value">要旋轉的向量。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Matrix4x4)">
      <summary>依據指定的 4x4 矩陣轉換四維向量。</summary>
      <param name="vector">要轉換的向量。</param>
      <param name="matrix">轉換矩陣。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="M:System.Numerics.Vector4.Transform(System.Numerics.Vector4,System.Numerics.Quaternion)">
      <summary>依據指定的四元數旋轉值來轉換四維向量。</summary>
      <param name="value">要旋轉的向量。</param>
      <param name="rotation">要套用的旋轉。</param>
      <returns>已轉換的向量。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.One">
      <summary>取得其 4 個元素等於 1 的向量。</summary>
      <returns>傳回 <see cref="T:System.Numerics.Vector4" />。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitW">
      <summary>取得向量 (0,0,0,1)。</summary>
      <returns>向量 <c> (0、0、0、1) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitX">
      <summary>取得向量 (1,0,0,0)。</summary>
      <returns>向量 <c> (1、0、0、0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitY">
      <summary>取得向量 (0,1,0,0)。</summary>
      <returns>向量 <c> (0，1，0，0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.UnitZ">
      <summary>取得向量 (0,0,1,0)。</summary>
      <returns>向量 <c> (0、0、1、0) </c>。</returns>
    </member>
    <member name="P:System.Numerics.Vector4.Zero">
      <summary>取得其 4 個元素等於 0 的向量。</summary>
      <returns>其四個元素等於零的向量 (也就是說，它會傳回向量 <c> (0、0、0、0) </c>。</returns>
    </member>
  </members>
</doc>