<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>Contiene un tipo y una colección de valores asociados a ese tipo.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> utilizando un atributo representado por el objeto <see cref="T:System.Security.Cryptography.Oid" /> especificado.</summary>
      <param name="oid">Atributo que se va a almacenar en este objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" />.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> utilizando un atributo representado por el objeto <see cref="T:System.Security.Cryptography.Oid" /> especificado y el conjunto de valores asociados a ese atributo representado por la colección <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> especificada.</summary>
      <param name="oid">Atributo que se va a almacenar en este objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" />.</param>
      <param name="values">Conjunto de valores asociados al atributo representado por el parámetro <paramref name="oid" />.</param>
      <exception cref="T:System.InvalidOperationException">La colección contiene un elementos duplicados.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.Oid" /> que especifica el identificador de objeto para el atributo.</summary>
      <returns>Identificador de objeto del atributo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>Obtiene la colección <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> que contiene el conjunto de valores que están asociados al atributo.</summary>
      <returns>Conjunto de valores asociados al atributo.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>Conjunto de objetos <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> agregando <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> a la colección especificada.</summary>
      <param name="attribute">Objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que se va a agregar a la colección.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>Agrega a la colección el objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> especificado.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <returns>
        <see langword="true" /> si el método devuelve el índice de base cero del elemento agregado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Agrega a la colección el objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> especificado.</summary>
      <param name="attribute">Objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que se va a agregar a la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">El elemento especificado ya existe en la colección.</exception>
      <returns>
        <see langword="true" /> si el método devuelve el índice de base cero del elemento agregado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>Copia la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> en una matriz de objetos <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" />.</summary>
      <param name="array">Una matriz de objetos <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> en la que se copia la colección.</param>
      <param name="index">El índice de base cero de la <paramref name="array" /> al que se va a copiar la colección.</param>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <exception cref="T:System.ArgumentNullException">Se pasó <see langword="null" /> a un método que no acepta este valor como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>Obtiene un <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> para la colección.</summary>
      <returns>
        <see langword="true" /> si el método devuelve un objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> que se puede utilizar para enumerar la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>Quita el objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> especificado de la colección.</summary>
      <param name="attribute">Objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que se va a quitar de la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia los elementos de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> en una matriz <see cref="T:System.Array" />, comenzando en un índice determinado.</summary>
      <param name="array">Matriz unidimensional <see cref="T:System.Array" /> que constituye el destino de los elementos copiados desde <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />. La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que itera por la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que se puede usar para iterar por la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>Obtiene el número de elementos de la colección.</summary>
      <returns>Número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>Obtiene un valor que indica si el acceso a la colección está sincronizado o seguro para la ejecución de subprocesos.</summary>
      <returns>Es <see langword="true" /> si el acceso a la colección es seguro para la ejecución de subprocesos; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> en el índice especificado de la colección.</summary>
      <param name="index">Un valor <see cref="T:System.Int32" /> que representa el índice de base cero del objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que se va a recuperar.</param>
      <returns>Objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> en el índice especificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>Obtiene un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección.</summary>
      <returns>Un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>Proporciona la funcionalidad de enumeración para la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>Desplaza la enumeración al siguiente objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
      <returns>Es <see langword="true" /> si la enumeración se desplazara correctamente al objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> siguiente; es <see langword="false" /> si el enumerador está al final de la enumeración.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>Restablece la enumeración en el primer objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> actual de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que representa el atributo criptográfico actual de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> actual de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> que representa el atributo criptográfico actual de la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> define el algoritmo que se utiliza para una operación criptográfica.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> utilizando un conjunto de parámetros predeterminados.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> con el identificador de algoritmo especificado.</summary>
      <param name="oid">Identificador de objeto para el algoritmo.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> con el identificador de algoritmo y la longitud de clave especificados.</summary>
      <param name="oid">Identificador de objeto para el algoritmo.</param>
      <param name="keyLength">Longitud, en bits, de la clave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> establece o recupera la longitud de la clave en bits. Esta propiedad no se utiliza para algoritmos que usan una longitud de clave fija.</summary>
      <returns>Un valor de tipo int que representa la longitud de la clave en bits.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> establece o recupera el objeto <see cref="T:System.Security.Cryptography.Oid" /> que especifica el identificador de objeto para el algoritmo.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> establece o recupera cualquier parámetro requerido por el algoritmo.</summary>
      <returns>Matriz de valores de tipo byte que especifica los parámetros requeridos por el algoritmo.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> define el destinatario de un mensaje CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inicializa una nueva instancia de la <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> clase con un certificado especificado y el tipo de identificador del destinatario, mediante el modo de cifrado predeterminado para el algoritmo de clave pública.</summary>
      <param name="recipientIdentifierType">Esquema que se va a usar para identificar el certificado del destinatario que se ha utilizado.</param>
      <param name="certificate">Certificado que se va a usar al cifrar para este destinatario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El valor <paramref name="recipientIdentifierType" /> no está admitido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> con un certificado RSA especificado, el relleno de cifrado RSA y el identificador del firmante.</summary>
      <param name="recipientIdentifierType">Esquema que se va a usar para identificar el certificado del destinatario que se ha utilizado.</param>
      <param name="certificate">Certificado que se va a usar al cifrar para este destinatario.</param>
      <param name="rsaEncryptionPadding">Modo de relleno RSA que se va a usar al cifrar para este destinatario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> o <paramref name="rsaEncryptionPadding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La clave pública del parámetro <paramref name="certificate" /> no se reconoce como una clave pública RSA.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> con un certificado especificado, mediante el modo de cifrado predeterminado para el algoritmo de clave pública y un identificador <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> del firmante.</summary>
      <param name="certificate">Certificado que se va a usar al cifrar para este destinatario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> con un certificado RSA especificado y el relleno de cifrado RSA, mediante un identificador <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> del firmante.</summary>
      <param name="certificate">Certificado que se va a usar al cifrar para este destinatario.</param>
      <param name="rsaEncryptionPadding">Modo de relleno RSA que se va a usar al cifrar para este destinatario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> o <paramref name="rsaEncryptionPadding" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La clave pública del parámetro <paramref name="certificate" /> no se reconoce como una clave pública RSA.

o bien

El valor <paramref name="recipientIdentifierType" /> no está admitido.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>Obtiene el certificado que se va a usar al cifrar para este destinatario.</summary>
      <returns>Certificado que se va a usar al cifrar para este destinatario.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>Obtiene el esquema que se va a usar para identificar el certificado del destinatario que se ha utilizado.</summary>
      <returns>Esquema que se va a usar para identificar el certificado del destinatario que se ha utilizado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary>Obtiene el modo de cifrado RSA que se va a usar al cifrar para este destinatario.</summary>
      <returns>Relleno de cifrado de RSA que se va a usar al cifrar para este destinatario.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> representa un conjunto de objetos <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> implementa la interfaz <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>El constructor de <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> y agrega el destinatario especificado.</summary>
      <param name="recipient">Instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que representa el destinatario CMS/PKCS #7 especificado.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>El constructor de <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> y agrega destinatarios tomando como base el identificador del sujeto especificado y el conjunto de certificados que identifican a los destinatarios.</summary>
      <param name="recipientIdentifierType">Miembro de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto.</param>
      <param name="certificates">Colección <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que contiene los certificados que identifican a los destinatarios.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> agrega un destinatario a la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <param name="recipient">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que representa el destinatario que se agrega a la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> es <see langword="null" />.</exception>
      <returns>Si el método se ejecuta correctamente, devuelve un valor <see cref="T:System.Int32" /> que representa la posición de base cero donde se insertará el destinatario.  
  
Si el método genera un error, se produce una excepción.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> a una matriz.</summary>
      <param name="array">Objeto <see cref="T:System.Array" /> en el que se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</param>
      <param name="index">Índice de base cero de <paramref name="array" /> donde se copia la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> no es suficientemente grande para contener los elementos especificados.  

o bien

<paramref name="array" /> no contiene el número apropiado de dimensiones.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> se encuentra fuera del intervalo de elementos en <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> a una matriz <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> donde se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</param>
      <param name="index">Índice de base cero para la matriz de objetos <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> en <paramref name="array" /> donde se copiará la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> no es suficientemente grande para contener los elementos especificados.  

o bien

<paramref name="array" /> no contiene el número apropiado de dimensiones.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de <paramref name="index" /> se encuentra fuera del intervalo de elementos en <paramref name="array" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> quita un destinatario de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <param name="recipient">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que representa el destinatario que se quita de la colección.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> recupera el número de elementos de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Valor de tipo <see cref="T:System.Int32" /> que representa el número de elementos de la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> recupera si el acceso a la colección está sincronizado o si es seguro para la ejecución de subprocesos. Esta propiedad siempre devuelve <see langword="false" /> lo que significa que la colección no es segura para la ejecución de subprocesos.</summary>
      <returns>Un valor <see langword="false" /> para <see cref="T:System.Boolean" />, que indica que la colección no es segura para la ejecución de subprocesos.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> situado en el índice especificado de la colección.</summary>
      <param name="index">Valor <see cref="T:System.Int32" /> que representa el índice de la colección. El índice es de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que se encuentra en el índice especificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> recupera un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> proporciona funciones de enumeración para la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> implementa la interfaz <see cref="T:System.Collections.IEnumerator" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> hace avanzar la enumeración al siguiente objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Es <see langword="true" /> si la enumeración se desplaza correctamente al objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> siguiente; es <see langword="false" /> si la enumeración se desplaza más allá del último elemento de la enumeración.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> restablece la enumeración al primer objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que representa el destinatario actual en la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> que representa el destinatario actual en la colección <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>Representa un firmante potencial para un mensaje firmado CMS/PKCS#7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> con valores predeterminados.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> a partir de una clave persistente.</summary>
      <param name="parameters">Parámetros de CSP para describir la clave de firma que se va a utilizar.</param>
      <exception cref="T:System.PlatformNotSupportedException">Solo .NET Core: este miembro no se admite.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> con un tipo de identificador de sujeto especificado.</summary>
      <param name="signerIdentifierType">Esquema que se va a usar para identificar el certificado de firma que se ha utilizado.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> con un certificado del firmante y un tipo de identificador de sujeto especificados.</summary>
      <param name="signerIdentifierType">Esquema que se va a usar para identificar el certificado de firma que se ha utilizado.</param>
      <param name="certificate">El certificado cuya clave privada se usará para firmar un mensaje.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> con un certificado del firmante, un tipo de identificador de sujeto y un objeto de clave privada especificados.</summary>
      <param name="signerIdentifierType">Uno de los valores de enumeración que especifica el esquema que se va a utilizar para identificar el certificado de firma que se ha utilizado.</param>
      <param name="certificate">El certificado cuya clave privada se usará para firmar un mensaje.</param>
      <param name="privateKey">Objeto de clave privada que se va a usar al firmar el mensaje.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Inicializa una instancia nueva de la clase <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> con un certificado del firmante especificado.</summary>
      <param name="certificate">El certificado cuya clave privada se usará para firmar un mensaje.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> establece o recupera el objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que representa el certificado de firma.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />Objeto que representa el certificado de firma.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>Obtiene una colección de certificados que se consideran con <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> y <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />.</summary>
      <returns>Colección de certificados que se consideran con <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> y <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> .</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>Obtiene o establece el identificador del algoritmo hash que se va a utilizar con la firma.</summary>
      <returns>Identificador del algoritmo hash que se va a usar con la firma.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>Obtiene o establece la opción que indica la porción de una cadena de certificados del certificado del firmante que se debe insertar en el mensaje firmado.</summary>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <returns>Uno de los valores de enumeración que indica la cantidad de una cadena de certificados del certificado del firmante que se debe incrustar en el mensaje firmado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary>Obtiene o establece el objeto de clave privada que se va a usar durante la firma.</summary>
      <returns>Clave privada que se va a usar durante la firma o <see langword="null" /> para usar la clave privada asociada a la <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> propiedad.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>Obtiene una colección de atributos que se van a asociar a esta firma y que también están protegidos por la firma.</summary>
      <returns>Colección de atributos que se van a asociar a esta firma y que también están protegidos por la firma.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>Obtiene el esquema que se va a usar para identificar el certificado de firma que se ha utilizado.</summary>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <returns>Esquema que se va a usar para identificar el certificado del destinatario que se ha utilizado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>Obtiene una colección de atributos que se van a asociar a esta firma y que no están protegidos por la firma.</summary>
      <returns>Colección de atributos que se van a asociar a esta firma y que no están protegidos por la firma.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> representa la estructura de datos de ContentInfo CMS/PKCS #7 como se define en el documento de estándares CMS/PKCS #7. Esta estructura es la base de todos los mensajes CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> usando una matriz de valores de byte como los datos y el <paramref name="object identifier" /> (OID) predeterminado que representa el tipo de contenido.</summary>
      <param name="content">Una matriz de valores de byte que representa los datos a partir de los que se crea el objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> usando el tipo de contenido especificado y una matriz de valores de byte como los datos.</summary>
      <param name="contentType">Un objeto <see cref="T:System.Security.Cryptography.Oid" /> que contiene un <c>identificador de objeto</c> (OID) que especifica el tipo de contenido del contenido. Éste puede estar formado por datos, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData o signedData.  Para más información, vea la sección Comentarios.</param>
      <param name="content">Una matriz de valores de byte que representa los datos a partir de los que se crea el objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" />.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>Recupera el tipo de contenido externo de un mensaje CMS ContentInfo codificado.</summary>
      <param name="encodedMessage">Una matriz de valores de byte que representa el mensaje CMS ContentInfo codificado del que recuperar el tipo de contenido externo.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="encodedMessage" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> no se puede descodificar como un valor CMS ContentInfo válido.</exception>
      <returns>El tipo de contenido externo del mensaje CMS ContentInfo codificado especificado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.ReadOnlySpan{System.Byte})">
      <summary>Recupera el tipo de contenido externo de un mensaje CMS ContentInfo codificado.</summary>
      <param name="encodedMessage">Un intervalo de solo lectura de valores de byte que representa el mensaje CMS ContentInfo codificado del que recuperar el tipo de contenido externo.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> no se puede descodificar como un valor CMS ContentInfo válido.</exception>
      <returns>El tipo de contenido externo del mensaje CMS ContentInfo codificado especificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> recupera el contenido del mensaje CMS/PKCS #7.</summary>
      <returns>Una matriz de valores de byte que representa los datos del contenido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> recupera el objeto <see cref="T:System.Security.Cryptography.Oid" /> que contiene el <paramref name="object identifier" /> (OID) del tipo de contenido del contenido interno del mensaje CMS/PKCS #7.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Oid" /> que contiene el valor del OID que representa el tipo de contenido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>Representa una estructura CMS/PKCS #7 para datos con doble cifrado.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> con valores predeterminados.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> con la información de contenido especificada.</summary>
      <param name="contentInfo">Contenido del mensaje que se va a cifrar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="contentInfo" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> con el algoritmo de cifrado simétrico especificado y la información de contenido.</summary>
      <param name="contentInfo">Contenido del mensaje que se va a cifrar.</param>
      <param name="encryptionAlgorithm">Identificador del algoritmo de cifrado simétrico que se va a usar al cifrar el contenido del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="contentInfo" /> o <paramref name="encryptionAlgorithm" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>Descodifica una matriz de bytes como un mensaje EnvelopedData CMS/PKCS#7.</summary>
      <param name="encodedMessage">Matriz de bytes que contiene la secuencia de bytes que se va a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="encodedMessage" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="encodedMessage" /> no se ha descodificado correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <summary>Descodifica los datos proporcionados como un mensaje EnvelopedData CMS/PKCS#7.</summary>
      <param name="encodedMessage">Datos que se van a descodificar.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="encodedMessage" /> no se ha descodificado correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>Descifra el contenido del mensaje con doble cifrado CMS/PKCS#7 descodificado a través de cualquier destinatario disponible. Para ello, busca en los almacenes de certificados una clave y un certificado que coincidan.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>Descifra el contenido del mensaje con doble cifrado CMS/PKCS#7 descodificado a través de la información de un destinatario especificado. Para ello, busca en los almacenes de certificados una clave y un certificado que coincidan.</summary>
      <param name="recipientInfo">Información del destinatario que se va a usar para el descifrado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="recipientInfo" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>Descifra el contenido del mensaje con doble cifrado CMS/PKCS#7 descodificado a través de la información de un destinatario especificado con una clave privada especificada.</summary>
      <param name="recipientInfo">Información del destinatario que se va a usar para el descifrado.</param>
      <param name="privateKey">Clave privada que se va a usar para descifrar la información específica del destinatario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="recipientInfo" /> o <paramref name="privateKey" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Descifra el contenido del mensaje con doble cifrado CMS/PKCS#7 descodificado a través de la información de cualquier destinatario especificado. Para ello, busca en los almacenes de certificados y en una colección proporcionada una clave y un certificado que coincidan.</summary>
      <param name="recipientInfo">Información del destinatario que se va a usar para el descifrado.</param>
      <param name="extraStore">Colección de certificados que se van a usar, junto con los almacenes de certificados, para encontrar un certificado de destinatario y una clave privada.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="recipientInfo" /> o <paramref name="extraStore" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Descifra el contenido del mensaje con doble cifrado CMS/PKCS#7 descodificado a través de la información de cualquier destinatario disponible. Para ello, busca en los almacenes de certificados y en una colección proporcionada una clave y un certificado que coincidan.</summary>
      <param name="extraStore">Colección de certificados que se van a usar, junto con los almacenes de certificados, para encontrar un certificado de destinatario y una clave privada.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="extraStore" /> era <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>Codifica el contenido del mensaje con doble cifrado CMS/PKCS#7 y lo devuelve como una matriz de bytes.</summary>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      <returns>Matriz de bytes que representa el formato codificado del mensaje CMS/PKCS#7.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>Cifra el contenido del mensaje CMS/PKCS#7 para un solo destinatario especificado.</summary>
      <param name="recipient">Información del destinatario que describe el único destinatario de este mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="recipient" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>Cifra el contenido del mensaje CMS/PKCS#7 para uno o más destinatarios.</summary>
      <param name="recipients">Colección que describe los destinatarios del mensaje.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="recipients" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>Obtiene a colección de certificados asociados al mensaje con doble cifrado CMS/PKCS#7.</summary>
      <returns>La colección de certificados asociada con el mensaje con doble cifrado CMS/PKCS # 7.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>Obtiene el identificador del algoritmo de cifrado simétrico asociado a este mensaje.</summary>
      <returns>El identificador del algoritmo de cifrado simétrico asociado a este mensaje.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>Obtiene la información de contenido para el mensaje con doble cifrado CMS/PKCS#7.</summary>
      <returns>Información de contenido para el mensaje con doble cifrado CMS/PKCS # 7.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>Obtiene una colección que representa la lista de destinatarios de un mensaje descodificado. El valor predeterminado es una colección vacía.</summary>
      <returns>Una colección que representa la lista de destinatarios de un mensaje descodificado. El valor predeterminado es una colección vacía.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>Obtiene los atributos no protegidos (sin cifrar) asociados al mensaje con doble cifrado CMS/PKCS#7.</summary>
      <returns>Colección de atributos no protegidos (sin cifrar) asociados al mensaje con doble cifrado CMS/PKCS # 7.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>Obtiene la versión del mensaje con doble cifrado CMS/PKCS#7 descodificado.</summary>
      <returns>La versión del mensaje con doble cifrado CMS/PKCS # 7 descodificado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> define la información del destinatario relativa al acuerdo de claves. Los algoritmos de acuerdo de claves utilizan normalmente el algoritmo de acuerdo de claves de Diffie-Hellman, en el que las dos partes que establecen una clave criptográfica compartida participan en su generación y, por definición, se ponen acuerdo con respecto a dicha clave. Este tipo de algoritmos se diferencia de los algoritmos de transporte de claves en que, en el caso de estos últimos, una parte genera la clave unilateralmente y se la envía, o la transporta, a la otra parte.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> recupera la fecha y hora en que el originador inició el protocolo de acuerdo de claves.</summary>
      <exception cref="T:System.InvalidOperationException">El tipo de identificador de destinatario no es un identificador de clave de sujeto.</exception>
      <returns>Fecha y hora en que el originador inició el protocolo de acuerdo de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> recupera el material de claves cifrado del destinatario.</summary>
      <returns>Matriz de valores de byte que contienen el material de clave del destinatario cifrado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> recupera el algoritmo utilizado para realizar el acuerdo de claves.</summary>
      <returns>El valor del algoritmo utilizado para realizar el acuerdo de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> recupera información sobre el originador del acuerdo de claves para los algoritmos de acuerdo de claves que lo garantizan.</summary>
      <returns>Objeto que contiene información sobre el originador del acuerdo de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> recupera atributos del material de claves.</summary>
      <exception cref="T:System.InvalidOperationException">El tipo de identificador de destinatario no es un identificador de clave de sujeto.</exception>
      <returns>Los atributos del material para claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> recupera el identificador del destinatario.</summary>
      <returns>El identificador del destinatario.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> recupera la versión del destinatario del acuerdo de claves. La versión del destinatario se establece de forma automática para los objetos de esta clase y el valor implica que el destinatario está participando en un algoritmo de acuerdo de claves.</summary>
      <returns>La versión del objeto <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> define la información del destinatario para transporte de claves.        Los algoritmos de transporte de claves usan normalmente el algoritmo RSA, en el que un originador establece una clave criptográfica compartida con un destinatario generando esa clave y transportándola a continuación al destinatario. Por el contrario, en los algoritmos de acuerdo de claves, las dos partes que van a usar la clave criptográfica participan en su generación y acuerdan conjuntamente su uso.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> recupera la clave cifrada para el destinatario del transporte de esta clave.</summary>
      <returns>Matriz de valores de tipo byte que representa la clave cifrada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> recupera el algoritmo usado para cifrar la clave de cifrado de contenido.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />Objeto que almacena el identificador del algoritmo de cifrado de claves.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> recupera el identificador del sujeto asociado al contenido cifrado.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" />Objeto que almacena el identificador del destinatario que participa en el transporte de la clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> recupera la versión del destinatario del transporte de la clave. La versión del destinatario del transporte de la clave se establece automáticamente para los objetos de esta clase, y el valor implica que el destinatario está participando en un algoritmo de transporte de claves.</summary>
      <returns>Valor de tipo int que representa la versión del objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> de transporte de claves.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary>Permite la creación de valores de datos PFX de PKCS #12. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary>Inicializa un nuevo valor de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>Agregue contenido al PFX en una agrupación cifrada con una contraseña basada en bytes de una matriz de bytes.</summary>
      <param name="safeContents">Contenido que se agregará al PFX.</param>
      <param name="passwordBytes">Matriz de bytes que se usará como contraseña al cifrar el contenido.</param>
      <param name="pbeParameters">Parámetros de cifrado basado en contraseña (PBE) que se usarán al cifrar el contenido.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> o <paramref name="pbeParameters" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="safeContents" /> ya está cifrado.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> indica que debe usarse <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />, el cual requiere contraseñas basadas en <see cref="T:System.Char" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>Agregue contenido al PFX en una agrupación cifrada con una contraseña basada en bytes de un intervalo.</summary>
      <param name="safeContents">Contenido que se agregará al PFX.</param>
      <param name="passwordBytes">Intervalo de bytes que se usará como contraseña al cifrar el contenido.</param>
      <param name="pbeParameters">Parámetros de cifrado basado en contraseña (PBE) que se usarán al cifrar el contenido.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> o <paramref name="pbeParameters" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="safeContents" /> ya está cifrado.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> indica que debe usarse <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />, el cual requiere contraseñas basadas en <see cref="T:System.Char" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>Agregue contenido al PFX en una agrupación cifrada con una contraseña basada en caracteres de un intervalo.</summary>
      <param name="safeContents">Contenido que se agregará al PFX.</param>
      <param name="password">Intervalo que se usará como contraseña al cifrar el contenido.</param>
      <param name="pbeParameters">Parámetros de cifrado basado en contraseña (PBE) que se usarán al cifrar el contenido.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> o <paramref name="pbeParameters" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="safeContents" /> ya está cifrado.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>Agregue contenido al PFX en una agrupación cifrada con una contraseña basada en caracteres de una cadena.</summary>
      <param name="safeContents">Contenido que se agregará al PFX.</param>
      <param name="password">Cadena que se usará como contraseña al cifrar el contenido.</param>
      <param name="pbeParameters">Parámetros de cifrado basado en contraseña (PBE) que se usarán al cifrar el contenido.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> o <paramref name="pbeParameters" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="safeContents" /> ya está cifrado.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>Agregue contenido al PFX sin cifrarlo.</summary>
      <param name="safeContents">Contenido que se agregará al PFX.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary>Codifica el contenido de un PFX sellado y lo devuelve como una matriz de bytes.</summary>
      <exception cref="T:System.InvalidOperationException">El PFX no está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="false" />).</exception>
      <returns>Matriz de bytes que representa el formato codificado del PFX.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>Sella el PFX frente a otros cambios al aplicar un código de autenticación de mensajes (MAC) basado en contraseña en el contenido con una contraseña de un intervalo.</summary>
      <param name="password">Contraseña que se usará como clave al calcular el MAC.</param>
      <param name="hashAlgorithm">Algoritmo hash que se usará al calcular el MAC.</param>
      <param name="iterationCount">Recuento de iteraciones de la función de derivación de claves (KDF) usada al calcular el MAC.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="iterationCount" /> es menor o igual que 0.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>Sella el PFX frente a otros cambios al aplicar un código de autenticación de mensajes (MAC) basado en contraseña en el contenido con una contraseña de una cadena.</summary>
      <param name="password">Contraseña que se usará como clave al calcular el MAC.</param>
      <param name="hashAlgorithm">Algoritmo hash que se usará al calcular el MAC.</param>
      <param name="iterationCount">Recuento de iteraciones de la función de derivación de claves (KDF) usada al calcular el MAC.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="iterationCount" /> es menor o igual que 0.</exception>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary>Sella el PFX frente a otros cambios sin aplicar la protección contra modificaciones.</summary>
      <exception cref="T:System.InvalidOperationException">El PFX ya está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="true" />).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta codificar el contenido de un PFX sellado en un búfer proporcionado.</summary>
      <param name="destination">Intervalo de bytes para recibir los datos PFX de PKCS #12.</param>
      <param name="bytesWritten">El resultado que devuelve este método contiene un valor que indica el número de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.InvalidOperationException">El PFX no está sellado (<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" /> es <see langword="false" />).</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir la salida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary>Obtiene un valor que indica si los datos PFX se han sellado.</summary>
      <returns>Valor que indica si los datos PFX se han sellado.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary>Representa CertBag de PKCS#12. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> utilizando el tipo de certificado y la codificación especificados.</summary>
      <param name="certificateType">El identificador de objeto (OID) para el tipo de certificado.</param>
      <param name="encodedCertificate">El valor de certificado codificado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificateType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="encodedCertificate" /> no representa un único valor codificado con ASN.1 BER.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary>Obtiene el contenido de CertBag interpretado como un certificado de clave pública X.509.</summary>
      <exception cref="T:System.InvalidOperationException">El tipo de contenido no es el tipo de contenido del certificado de clave pública X.509.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El contenido no era válido para el tipo de contenido del certificado X.509.</exception>
      <returns>Un certificado descodificado del contenido de CertBag.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary>Obtiene el identificador de objeto (OID) que identifica el tipo de contenido del valor de certificado codificado.</summary>
      <returns>El identificador de objeto (OID) que identifica el tipo de contenido del valor de certificado codificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary>Obtiene el contenido del certificado no interpretado de CertSafeBag.</summary>
      <returns>El contenido del certificado no interpretado de CertSafeBag.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary>Obtiene un valor que indica si el tipo de contenido del valor del certificado codificado es el tipo de contenido del certificado de clave pública X.509.</summary>
      <returns>
        <see langword="true" /> Si el tipo de contenido es el tipo de contenido de certificado de clave pública X. 509 (1.2.840.113549.1.9.22.1); en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary>Representa el tipo de cifrado asociado a un valor de SafeContents de PKCS#12.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary>El valor de SafeContents no está cifrado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary>El valor de SafeContents está cifrado con una contraseña.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary>El valor de SafeContents está cifrado mediante criptografía de clave pública.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary>El tipo de cifrado que se aplica a SafeContents es desconocido o no se pudo establecer.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary>Representa los datos del contenido de PKCS#12 PFX. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>Lee los datos proporcionados como PKCS#12 PFX y devuelve una vista de objeto del contenido.</summary>
      <param name="encodedBytes">Los datos que se van a interpretar como PKCS#12 PFX.</param>
      <param name="bytesConsumed">El resultado que devuelve este método contiene un valor que indica el número de bytes de <paramref name="encodedBytes" /> leídos por este método. Este parámetro se trata como sin inicializar.</param>
      <param name="skipCopy">
        <see langword="true" /> para almacenar <paramref name="encodedBytes" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El contenido del parámetro <paramref name="encodedBytes" /> no se descodificó correctamente como PKCS#12 PFX.</exception>
      <returns>Una vista de objeto de PKCS#12 PFX descodificado a partir de la entrada.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary>Intenta comprobar la integridad del contenido de <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> con una contraseña representada por <c>System.ReadOnlySpan{System.Char}</c>.</summary>
      <param name="password">La contraseña que se va a usar para intentar verificar la integridad.</param>
      <exception cref="T:System.InvalidOperationException">El valor <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo identificar la opción de algoritmo hash especificada por el contenido de PKCS#12 PFX o no es compatible con esta plataforma.</exception>
      <returns>
        <see langword="true" /> si la contraseña verifica correctamente la integridad del contenido de <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />; <see langword="false" /> si la contraseña no es correcta o si se ha alterado el contenido.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary>Intenta verificar la integridad del contenido <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> con una contraseña representada por <see cref="T:System.String" />.</summary>
      <param name="password">La contraseña que se va a usar para intentar verificar la integridad.</param>
      <exception cref="T:System.InvalidOperationException">El valor <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo identificar la opción de algoritmo hash especificada por el contenido de PKCS#12 PFX o no es compatible con esta plataforma.</exception>
      <returns>
        <see langword="true" /> si la contraseña verifica correctamente la integridad del contenido de <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />; <see langword="false" /> si la contraseña no es correcta o si se ha alterado el contenido.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary>Obtiene una colección de solo lectura de los valores de SafeContents presentes en PFX AuthenticatedSafe.</summary>
      <returns>Una colección de solo lectura de los valores de SafeContents presentes en el AuthenticatedSafe PFX.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary>Obtiene un valor que indica el tipo de protección contra alteración proporcionada para el contenido de <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" />.</summary>
      <returns>Uno de los miembros de enumeración que indica el tipo de protección contra alteración proporcionada para el <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> contenido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary>Representa el tipo de protección contra alteraciones aplicado a un valor PFX de PKCS#12.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary>El valor PFX de PKCS#12 no está protegido contra alteraciones.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary>El valor PFX de PKCS#12 está protegido contra alteraciones con un código de autenticación de mensajes (MAC) con contraseña.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary>El valor PFX de PKCS#12 está protegido contra alteraciones con una firma digital mediante criptografía de clave pública.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary>No se conoce o no se pudo establecer el tipo de protección contra alteraciones aplicado al valor PFX de PKCS#12.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary>Representa el KeyBag de PKCS#12, un contenedor cuyo contenido es PrivateKeyInfo de PKCS#8. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> desde un valor PrivateKeyInfo de PKCS#8 con codificación existente.</summary>
      <param name="pkcs8PrivateKey">Un valor de PrivateKeyInfo de PKCS#8 codificado en BER.</param>
      <param name="skipCopy">
        <see langword="true" /> para almacenar <paramref name="pkcs8PrivateKey" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="pkcs8privateKey" /> no representa un único valor codificado con ASN.1 BER.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary>Obtiene un valor de memoria que contiene el valor de PrivateKeyInfo de PKCS#8 transportado por este contenedor.</summary>
      <returns>Un valor de memoria que contiene el valor PrivateKeyInfo de PKCS # 8 transportado por este contenedor.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary>Define el comportamiento básico de un valor SafeBag a partir de la especificación PKCS#12 y proporciona una base para las clases derivadas.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>Se llama desde constructores de clases derivadas para inicializar la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" />.</summary>
      <param name="bagIdValue">Identificador de objeto (OID), en formato decimal con puntos, que indica el tipo de datos de este SafeBag.</param>
      <param name="encodedBagValue">Valor codificado de ASN.1 BER del contenido de SafeBag.</param>
      <param name="skipCopy">
        <see langword="true" /> para almacenar <paramref name="encodedBagValue" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="bagIdValue" /> es <see langword="null" /> o la cadena vacía.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="encodedBagValue" /> no representa un único valor codificado con ASN.1 BER.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary>Codifica el valor de SafeBag y lo devuelve como una matriz de bytes.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El valor del identificador de objeto pasado al constructor no era válido.</exception>
      <returns>Matriz de bytes que representa el formato codificado del SafeBag.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary>Obtiene el identificador de objeto (OID) que identifica el tipo de contenido de este SafeBag.</summary>
      <returns>Identificador de objeto (OID) que identifica el tipo de contenido de este SafeBag.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta codificar el valor de SafeBag en un búfer proporcionado.</summary>
      <param name="destination">Intervalo de bytes que va a recibir el valor de SafeBag.</param>
      <param name="bytesWritten">El resultado que devuelve este método contiene un valor que indica el número de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El valor del identificador de objeto pasado al constructor no era válido.</exception>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir la salida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary>Obtiene la colección modificable de atributos que se va a codificar con el valor de SafeBag.</summary>
      <returns>Colección modificable de atributos que se va a codificar con el valor de SafeBag.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary>Obtiene la codificación ASN.1 BER del contenido de este SafeBag.</summary>
      <returns>La codificación ASN. 1 BER del contenido de este SafeBag.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary>Representa un valor de SafeContents de PKCS#12. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Agrega un certificado a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> nuevo y devuelve la instancia de contenedor recién creada.</summary>
      <param name="certificate">Certificado que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="certificate" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="certificate" /> no tiene un estado válido.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>Agrega una clave privada asimétrica a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" /> nuevo y devuelve la instancia de contenedor recién creada.</summary>
      <param name="key">La clave privada asimétrica que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Error al exportar la clave.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>Agrega un objeto SafeContents anidado a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" /> nuevo y devuelve la instancia de contenedor recién creada.</summary>
      <param name="safeContents">El contenido anidado que se va a agregar a SafeContents.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeContents" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="safeContents" /> está cifrado.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary>Agrega un objeto SafeBag a SafeContents.</summary>
      <param name="safeBag">El valor de SafeBag que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="safeBag" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>Agrega un valor con codificación ASN.1 BER con un identificador de tipo especificado a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" /> nuevo y devuelve la instancia de contenedor recién agregada.</summary>
      <param name="secretType">El identificador de objeto (OID) que define el tipo de datos del valor del secreto.</param>
      <param name="secretValue">El valor con codificación BER que representa el secreto que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="secretType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="secretValue" /> no representa un único valor codificado con ASN.1 BER.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>Agrega una clave privada asimétrica cifrada a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> nuevo desde una contraseña basada en bytes de una matriz y devuelve la instancia de contenedor recién creada.</summary>
      <param name="key">La clave privada asimétrica que se va a agregar.</param>
      <param name="passwordBytes">Bytes que se van a usar como contraseña al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Error al exportar la clave.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>Agrega una clave privada asimétrica cifrada a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> nuevo desde una contraseña basada en bytes en un intervalo y devuelve la instancia de contenedor recién creada.</summary>
      <param name="key">La clave privada asimétrica que se va a agregar.</param>
      <param name="passwordBytes">Bytes que se van a usar como contraseña al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Error al exportar la clave.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>Agrega una clave privada asimétrica cifrada a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> nuevo desde una contraseña basada en caracteres en un intervalo y devuelve la instancia de contenedor recién creada.</summary>
      <param name="key">La clave privada asimétrica que se va a agregar.</param>
      <param name="password">Contraseña que se va a usar al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Error al exportar la clave.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>Agrega una clave privada asimétrica cifrada a SafeContents a través de un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> nuevo desde una contraseña basada en caracteres en una cadena y devuelve la instancia de contenedor recién creada.</summary>
      <param name="key">La clave privada asimétrica que se va a agregar.</param>
      <param name="password">Contraseña que se va a usar al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="key" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La instancia es de solo lectura.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Error al exportar la clave.</exception>
      <returns>La instancia de contenedor que se agregó a SafeContents.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary>Descifra el contenido de este valor de SafeContents con una contraseña basada en bytes desde una matriz.</summary>
      <param name="passwordBytes">Los bytes que se usarán como contraseña para descifrar el contenido cifrado.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La contraseña es incorrecta.

o bien

El contenido no se descifró correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary>Descifra el contenido de este valor de SafeContents con una contraseña basada en bytes desde un intervalo.</summary>
      <param name="passwordBytes">Los bytes que se usarán como contraseña para descifrar el contenido cifrado.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La contraseña es incorrecta.

o bien

El contenido no se descifró correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary>Descifra el contenido de este valor de SafeContents con una contraseña basada en caracteres desde un intervalo.</summary>
      <param name="password">La contraseña que se usará para descifrar el contenido cifrado.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La contraseña es incorrecta.

o bien

El contenido no se descifró correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary>Descifra el contenido de este valor de SafeContents con una contraseña basada en caracteres desde una cadena.</summary>
      <param name="password">La contraseña que se usará para descifrar el contenido cifrado.</param>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> no es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La contraseña es incorrecta.

o bien

El contenido no se descifró correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary>Obtiene una representación enumerable de los valores de SafeBag contenidos dentro de SafeContents.</summary>
      <exception cref="T:System.InvalidOperationException">El contenido se cifra.</exception>
      <returns>Una representación enumerable de los valores de SafeBag contenidos dentro de SafeContents.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary>Obtiene un valor que indica el tipo de cifrado que se aplica al contenido.</summary>
      <returns>Uno de los valores de enumeración que indica el tipo de cifrado que se aplica al contenido. El valor predeterminado es <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary>Obtiene un valor que indica si el estado de esta instancia es de solo lectura.</summary>
      <returns>
        <see langword="true" /> Si este valor está en un estado de solo lectura; en caso contrario, <see langword="false" /> . El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary>Representa el elemento SafeContentsBag de PKCS #12, un contenedor con un valor PKCS #12 SafeContents. Esta clase no puede heredarse.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary>Obtiene el valor SafeContents incluido en este contenedor.</summary>
      <returns>El valor de SafeContents contenido dentro de este contenedor.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary>Representa el SecretBag de PKCS#12, un contenedor cuyo contenido son datos arbitrarios con un identificador de tipo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary>Obtiene el identificador de objeto (OID) que define el tipo de datos del valor del secreto.</summary>
      <returns>El identificador de objeto (OID) que define el tipo de datos del valor del secreto.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary>Obtiene un valor de memoria que contiene el contenido codificado en BER del contenedor.</summary>
      <returns>Valor de memoria que contiene el contenido codificado en BER del contenedor.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary>Representa el elemento ShroudedKeyBag de PKCS #12, un contenedor con un valor EncryptedPrivateKeyInfo de PKCS #8. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>Inicializa una nueva instancia del elemento <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" /> desde un valor PKCS #8 EncryptedPrivateKeyInfo con codificación existente.</summary>
      <param name="encryptedPkcs8PrivateKey">Valor PKCS #8 EncryptedPrivateKeyInfo con codificación BER.</param>
      <param name="skipCopy">
        <see langword="true" /> para almacenar <paramref name="encryptedPkcs8PrivateKey" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="encryptedPkcs8privateKey" /> no representa un único valor codificado con ASN.1 BER.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary>Obtiene un valor de memoria que contiene el valor PKCS #8 EncryptedPrivateKeyInfo transportado por este contenedor.</summary>
      <returns>Un valor de memoria que contiene el valor EncryptedPrivateKeyInfo de PKCS # 8 transportado por este contenedor.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary>Habilita la inspección y creación de los valores PKCS#8 PrivateKeyInfo y EncryptedPrivateKeyInfo. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" />.</summary>
      <param name="algorithmId">El identificador de objetos (OID) que identifica el algoritmo asimétrico al que corresponde esta clave.</param>
      <param name="algorithmParameters">Los parámetros de algoritmos codificados en BER asociados a esta clave, o <see langword="null" /> para omitir los parámetros de algoritmos al codificar.</param>
      <param name="privateKey">La clave privada codificada específica del algoritmo.</param>
      <param name="skipCopies">
        <see langword="true" /> para almacenar <paramref name="algorithmParameters" /> y <paramref name="privateKey" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="algorithmId" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="algorithmParameters" /> no es <see langword="null" />, no está vacío ni es un único valor codificado en BER.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>Exporta una clave especificada como un valor PKCS#8 PrivateKeyInfo y devuelve su interpretación descodificada.</summary>
      <param name="privateKey">La clave privada que se va a representar en un valor PKCS#8 PrivateKeyInfo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="privateKey" /> es <see langword="null" />.</exception>
      <returns>La interpretación descodificada del valor PKCS#8 PrivateKeyInfo exportado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>Lee los datos proporcionados como un valor PKCS#8 PrivateKeyInfo y devuelve una vista de objeto del contenido.</summary>
      <param name="source">Los datos que se van a interpretar como un valor PKCS#8 PrivateKeyInfo.</param>
      <param name="bytesRead">El resultado que devuelve este método contiene un valor que indica el número de bytes leídos de <paramref name="source" />. Este parámetro se trata como sin inicializar.</param>
      <param name="skipCopy">
        <see langword="true" /> para almacenar <paramref name="source" /> sin crear una copia defensiva; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El contenido del parámetro <paramref name="source" /> no se descodificó correctamente como un valor PKCS#8 PrivateKeyInfo.</exception>
      <returns>Una vista de objeto del contenido descodificado como un valor PKCS#8 PrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>Descifra los datos proporcionados mediante la contraseña basada en bytes proporcionada y descodifica el resultado en una vista de objeto del valor PKCS#8 PrivateKeyInfo.</summary>
      <param name="passwordBytes">Bytes que se van a usar como contraseña al descifrar el material de clave.</param>
      <param name="source">Los datos que se van a leer como una estructura PKCS#8 EncryptedPrivateKeyInfo con la codificación ASN.1-BER.</param>
      <param name="bytesRead">El resultado que devuelve este método contiene un valor que indica el número de bytes leídos de <paramref name="source" />. Este parámetro se trata como sin inicializar.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">La contraseña es incorrecta.

O bien

El contenido de <paramref name="source" /> indica que la función de derivación de claves (KDF) que se va a aplicar es la heredada de PKCS#12, que requiere contraseñas basadas en <see cref="T:System.Char" />.

O bien

El contenido de <paramref name="source" /> no representa una estructura EncryptedPrivateKeyInfo de PKCS#8 codificada con ASN.1-BER.</exception>
      <returns>Una vista de objeto del contenido descifrado como un valor PKCS#8 PrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>Descifra los datos proporcionados mediante la contraseña basada en caracteres proporcionada y descodifica el resultado en una vista de objeto del valor PKCS#8 PrivateKeyInfo.</summary>
      <param name="password">La contraseña que se va a usar al descifrar el material de clave.</param>
      <param name="source">Bytes de una estructura EncryptedPrivateKeyInfo de PKCS#8 en la codificación ASN.1-BER.</param>
      <param name="bytesRead">El resultado que devuelve este método contiene un valor que indica el número de bytes leídos de <paramref name="source" />. Este parámetro se trata como sin inicializar.</param>
      <returns>Una vista de objeto del contenido descifrado como un valor PKCS#8 PrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary>Codifica los datos de la propiedad de esta instancia como un valor PKCS#8 PrivateKeyInfo y devuelve la codificación como una matriz de bytes.</summary>
      <returns>Una matriz de bytes que representa el formato codificado del valor PKCS#8 PrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>Genera un valor PKCS#8 EncryptedPrivateKeyInfo a partir del contenido de la propiedad de este objeto después de cifrarlo con los parámetros de cifrado y la contraseña basada en bytes especificados.</summary>
      <param name="passwordBytes">Bytes que se van a usar como contraseña al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" /> indica que debe usarse <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />, el cual requiere contraseñas basadas en <see cref="T:System.Char" />.</exception>
      <returns>Una matriz de bytes que contiene el formato codificado del valor PKCS#8 EncryptedPrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>Genera un valor PKCS#8 EncryptedPrivateKeyInfo a partir del contenido de la propiedad de este objeto después de cifrarlo con los parámetros de cifrado y la contraseña basada en caracteres especificados.</summary>
      <param name="password">Contraseña que se va a usar al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <returns>Una matriz de bytes que contiene el formato codificado del valor PKCS#8 EncryptedPrivateKeyInfo.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta codificar los datos de la propiedad de esta instancia como un valor PKCS#8 PrivateKeyInfo y escribe los resultados en un búfer proporcionado.</summary>
      <param name="destination">Intervalo de bytes que va a recibir los datos de PrivateKeyInfo de PKCS#8.</param>
      <param name="bytesWritten">El resultado que devuelve este método contiene un valor que indica el número de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir la salida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>Intenta generar un valor PKCS#8 EncryptedPrivateKeyInfo a partir del contenido de la propiedad de este objeto después de cifrarlo con los parámetros de cifrado y la contraseña basada en bytes especificados y escribe los resultados en un búfer proporcionado.</summary>
      <param name="passwordBytes">Bytes que se van a usar como contraseña al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <param name="destination">Intervalo de bytes que va a recibir los datos de EncryptedPrivateKeyInfo de PKCS#8.</param>
      <param name="bytesWritten">El resultado que devuelve este método contiene un valor que indica el número de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir la salida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>Intenta generar un valor PKCS#8 EncryptedPrivateKeyInfo a partir del contenido de la propiedad de este objeto después de cifrarlo con los parámetros de cifrado y la contraseña basada en caracteres especificados y escribe los resultados en un búfer proporcionado.</summary>
      <param name="password">Contraseña que se va a usar al cifrar el material de clave.</param>
      <param name="pbeParameters">Parámetros de cifrado basados en contraseña (PBE) que se van a usar al cifrar el material de clave.</param>
      <param name="destination">Intervalo de bytes que va a recibir los datos de EncryptedPrivateKeyInfo de PKCS#8.</param>
      <param name="bytesWritten">El resultado que devuelve este método contiene un valor que indica el número de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <returns>
        <see langword="true" /> si <paramref name="destination" /> es lo suficientemente grande como para recibir la salida; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary>Obtiene el valor del identificador de objetos (OID) que identifica el algoritmo al que corresponde esta clave.</summary>
      <returns>El valor del identificador de objetos (OID) que identifica el algoritmo para el que es esta clave.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary>Obtiene un valor de memoria que contiene los parámetros de algoritmos codificados en BER asociados a esta clave.</summary>
      <returns>Valor de memoria que contiene los parámetros de algoritmos codificados en BER asociados a esta clave o <see langword="null" /> si no hay ningún parámetro presente.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary>Obtiene la colección modificable de atributos para esta clave privada.</summary>
      <returns>Colección modificable de atributos que se va a codificar con la clave privada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary>Obtiene un valor de memoria que representa la clave privada codificada específica del algoritmo.</summary>
      <returns>Valor de memoria que representa la clave privada codificada específica del algoritmo.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>Representa un atributo utilizado para las operaciones CMS/PKCS #7 y PKCS #9.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> utilizando un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> especificado como su valor y tipo de atributo.</summary>
      <param name="asnEncodedData">Objeto que contiene el valor y tipo de atributo PKCS #9 que se van a utilizar.</param>
      <exception cref="T:System.ArgumentException">La longitud del miembro <paramref name="Value" /> del miembro <paramref name="Oid" /> de <paramref name="asnEncodedData" /> es cero.</exception>
      <exception cref="T:System.ArgumentNullException">El miembro <paramref name="Oid" /> de <paramref name="asnEncodedData" /> es <see langword="null" />.  
  
o bien 
El miembro de <paramref name="Value" /> del miembro <paramref name="Oid" /> de <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> utilizando un objeto <see cref="T:System.Security.Cryptography.Oid" /> especificado como tipo de atributo y un dato codificado ASN.1 especificado como valor de atributo.</summary>
      <param name="oid">Objeto que representa el tipo de atributo PKCS #9.</param>
      <param name="encodedData">Matriz de valores de byte que representa el valor de atributo PKCS #9.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> utilizando una representación de cadena especificada de un identificador de objeto (OID) como tipo de atributo y un dato codificado ASN.1 especificado como valor de atributo.</summary>
      <param name="oid">La representación de cadena de un OID que representa el tipo de atributo PKCS #9.</param>
      <param name="encodedData">Matriz de valores de byte que contiene el valor de atributo PKCS #9.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia un tipo y valor de atributo PKCS #9 de este objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> desde el objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> especificado.</summary>
      <param name="asnEncodedData">Objeto que contiene el valor y tipo de atributo PKCS #9 que se van a utilizar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" /> no representa un tipo de atributo compatible.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>Obtiene un objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el tipo de atributo asociado a este objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" />.</summary>
      <returns>Objeto que representa el tipo de atributo asociado a este objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> define el tipo del contenido de un mensaje CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> del que se copia información.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> obtiene un objeto <see cref="T:System.Security.Cryptography.Oid" /> que contiene el tipo de contenido.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" />Objeto que contiene el tipo de contenido.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> define la descripción del contenido de un mensaje CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> utilizando la matriz especificada de valores de byte como descripción codificada del contenido de un mensaje CMS/PKCS #7.</summary>
      <param name="encodedDocumentDescription">Matriz de valores de byte que especifica la descripción codificada del mensaje CMS/PKCS #7.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> utilizando la descripción especificada del contenido de un mensaje CMS/PKCS #7.</summary>
      <param name="documentDescription">Instancia de la clase <see cref="T:System.String" /> que especifica la descripción del mensaje CMS/PKCS #7.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> del que se copia información.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> recupera la descripción del documento.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene la descripción del documento.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> define el nombre de un mensaje CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> utilizando la matriz especificada de valores de byte como nombre codificado del contenido de un mensaje CMS/PKCS #7.</summary>
      <param name="encodedDocumentName">Matriz de valores de byte que especifica el nombre codificado del mensaje CMS/PKCS #7.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> usando el nombre especificado para el mensaje CMS/PKCS #7.</summary>
      <param name="documentName">Objeto <see cref="T:System.String" /> que especifica el nombre del mensaje CMS/PKCS #7.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> del que se copia información.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> recupera el nombre del documento.</summary>
      <returns>Objeto <see cref="T:System.String" /> que contiene el nombre del documento.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary>Representa el atributo LocalKeyId de PKCS#9.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> con un valor de identificador de clave vacío.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> con un identificador clave especificado por una matriz de bytes.</summary>
      <param name="keyId">Una matriz de bytes que contiene el identificador clave.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> con un identificador clave especificado por un intervalo de bytes.</summary>
      <param name="keyId">Una matriz de bytes que contiene el identificador clave.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary>Obtiene un valor de memoria que contiene el identificador clave de este atributo.</summary>
      <returns>Valor de memoria que contiene el identificador de clave de este atributo.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> define la síntesis de un mensaje CMS/PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> del que se copia información.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> recupera la síntesis del mensaje.</summary>
      <returns>Una matriz de valores de byte que contiene la síntesis del mensaje.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> define la fecha y la hora en que se creó una firma. Un objeto <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> se puede usar como atributo autenticado de un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> cuando se va a acompañar una firma digital de una fecha y una hora autenticadas.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> .</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> mediante la matriz especificada de valores de byte como la fecha y hora codificadas de la firma del contenido de un mensaje CMS/PKCS #7.</summary>
      <param name="encodedSigningTime">Matriz de valores de byte que especifica la fecha y hora codificadas de la firma del mensaje CMS/PKCS #7.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> mediante la fecha y la hora de firma especificadas.</summary>
      <param name="signingTime">Estructura <see cref="T:System.DateTime" /> que representa la fecha y la hora en que se creó la signatura.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>Copia información de un objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" />.</summary>
      <param name="asnEncodedData">Objeto <see cref="T:System.Security.Cryptography.AsnEncodedData" /> del que se copia información.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> recupera una estructura <see cref="T:System.DateTime" /> que representa la fecha y la hora en que se firmó el mensaje.</summary>
      <returns>Estructura <see cref="T:System.DateTime" /> que contiene la fecha y la hora en que se firmó el documento.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> representa información asociada a una clave pública.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> recupera el identificador del algoritmo asociado a la clave pública.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> que representa el algoritmo.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> recupera el valor del componente público codificado del par de claves públicas.</summary>
      <returns>Matriz de valores de byte que representa el componente público codificado del par de claves públicas.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> representa información sobre el destinatario de un mensaje CMS/PKCS #7. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> es una clase abstracta heredada por las clases <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> y <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>La propiedad abstracta <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> recupera el material de clave del destinatario cifrado.</summary>
      <returns>Matriz de valores de byte que contienen el material de clave del destinatario cifrado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>La propiedad abstracta <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> recupera el algoritmo utilizado para realizar el establecimiento de clave.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> que contiene el valor del algoritmo utilizado para establecer la clave entre el autor y el destinatario del mensaje CMS/PKCS #7.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>La propiedad abstracta <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> recupera el identificador del destinatario.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> que contiene el identificador del destinatario.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> recupera el tipo del destinatario. El tipo del destinatario determina cuál de los dos protocolos principales ha de utilizarse para establecer una clave entre el autor y el destinatario de un mensaje CMS/PKCS #7.</summary>
      <returns>Valor de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> que define el tipo del destinatario.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>La propiedad abstracta <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> recupera la versión de la información de destinatario. Las clases derivadas establecen automáticamente esta propiedad para sus objetos, y el valor indica qué se está utilizando para la protección de mensajes: PKCS #7 o la sintaxis de mensajes criptográficos (CMS). La versión también implica que el objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" />, a la hora de establecer una clave criptográfica, utilice o un algoritmo de acuerdo de claves o uno de transporte de claves.</summary>
      <returns>Valor <see cref="T:System.Int32" /> que representa la versión del objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> representa una colección de objetos <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" />. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> implementa la interfaz <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> a una matriz.</summary>
      <param name="array">Objeto <see cref="T:System.Array" /> en el que se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</param>
      <param name="index">Índice de base cero de <paramref name="array" /> donde se copia la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</param>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> a una matriz <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" />.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> donde se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</param>
      <param name="index">Índice de base cero de <paramref name="array" /> donde se copia la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</param>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> recupera el número de elementos de la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Un valor entero que representa el número de elementos en la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> recupera si el acceso a la colección está sincronizado o si es seguro para la ejecución de subprocesos. Esta propiedad siempre devuelve <see langword="false" />, lo que significa que la colección no es segura para la ejecución de subprocesos.</summary>
      <returns>Un valor <see cref="T:System.Boolean" /> de <see langword="false" />, que significa que la colección no es segura para la ejecución de subprocesos.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> situado en el índice especificado de la colección.</summary>
      <param name="index">Un valor entero que representa el índice en la colección. El índice es de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> que se encuentra en el índice especificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> recupera un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> proporciona funciones de enumeración para la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> implementa la interfaz <see cref="T:System.Collections.IEnumerator" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> hace avanzar la enumeración al siguiente objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Este método devuelve un valor booleano que especifica si la enumeración avanzó correctamente. Si la enumeración se desplazó correctamente al siguiente objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" />, el método devuelve <see langword="true" />. Si la enumeración se desplazó más allá del último elemento de la enumeración, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> restablece la enumeración al primer objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> que representa la actual estructura de información del destinatario en la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> que representa la actual estructura de información del destinatario en la colección <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>La enumeración <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> define los tipos de información del destinatario.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>Información de destinatario del acuerdo de claves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>Información de destinatario del transporte de claves.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>No se conoce el tipo de la información del destinatario.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest">
      <summary>Representa una solicitud de marca de tiempo de IETF RFC 3161.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>Crea una solicitud de marca de tiempo aplicando un algoritmo hash especificado a los datos proporcionados.</summary>
      <param name="data">Datos para la marca de tiempo sobre los que este método aplicará el algoritmo hash.</param>
      <param name="hashAlgorithm">Algoritmo hash que se va a usar con esta solicitud de marca de tiempo.</param>
      <param name="requestedPolicyId">El identificador de objeto (OID) para una directiva de marca de tiempo que la autoridad de marca de tiempo (TSA) debe usar, o <see langword="null" /> para no expresar ninguna preferencia.</param>
      <param name="nonce">Un valor nonce (número utilizado una vez) opcional para identificar de forma única esta solicitud para emparejarla con la respuesta. El valor se interpreta como un entero sin firmar de big-endian y puede estar normalizado en el formato de codificación.</param>
      <param name="requestSignerCertificates">
        <see langword="true" /> para indicar que la autoridad de marca de tiempo (TSA) debe incluir el certificado de firma en el token emitido de marca de tiempo; en caso contrario, <see langword="false" />.</param>
      <param name="extensions">Colección opcional de extensiones que se van a incluir en la solicitud.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> no es un algoritmo hash conocido.</exception>
      <returns>Un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> que representa los valores elegidos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>Cree una solicitud de marca de tiempo con un valor hash calculado previamente y el nombre del algoritmo hash.</summary>
      <param name="hash">El valor de hash precalculado debe tener un valor de marca de tiempo.</param>
      <param name="hashAlgorithm">Algoritmo hash usado para producir <paramref name="hash" />.</param>
      <param name="requestedPolicyId">Identificador de objeto (OID) para una directiva de marca de tiempo que la autoridad de marca de tiempo (TSA) debe usar, o <see langword="null" /> para no expresar ninguna preferencia.</param>
      <param name="nonce">Valor opcional que se usa para hacer coincidir de forma única una solicitud con una respuesta o <see langword="null" /> para no incluir un valor de seguridad (nonce) en la solicitud.</param>
      <param name="requestSignerCertificates">
        <see langword="true" /> para indicar que la autoridad de marca de tiempo (TSA) debe incluir el certificado de firma en el token emitido de marca de tiempo; en caso contrario, <see langword="false" />.</param>
      <param name="extensions">Colección opcional de extensiones que se van a incluir en la solicitud.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> no es un algoritmo hash conocido.</exception>
      <returns>Un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> que representa los valores elegidos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>Cree una solicitud de marca de tiempo con un valor hash calculado previamente y el identificador de objeto para el algoritmo hash.</summary>
      <param name="hash">El valor de hash precalculado debe tener un valor de marca de tiempo.</param>
      <param name="hashAlgorithmId">El identificador de objeto (OID) del algoritmo hash que generó <paramref name="hash" /></param>
      <param name="requestedPolicyId">El identificador de objeto (OID) para una directiva de marca de tiempo que la autoridad de marca de tiempo (TSA) debe usar, o <see langword="null" /> para no expresar ninguna preferencia.</param>
      <param name="nonce">Un valor nonce (número utilizado una vez) opcional para identificar de forma única esta solicitud para emparejarla con la respuesta. El valor se interpreta como un entero sin firmar de big-endian y puede estar normalizado en el formato de codificación.</param>
      <param name="requestSignerCertificates">
        <see langword="true" /> para indicar que la autoridad de marca de tiempo (TSA) debe incluir el certificado de firma en el token emitido de marca de tiempo; en caso contrario, <see langword="false" />.</param>
      <param name="extensions">Colección opcional de extensiones que se van a incluir en la solicitud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlgorithmId" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithmId" />.<see cref="P:System.Security.Cryptography.Oid.Value" /> no es un OID válido.</exception>
      <returns>Un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> que representa los valores elegidos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>Crea una solicitud de marca de tiempo aplicando un algoritmo hash especificado a la firma del firmante proporcionado.</summary>
      <param name="signerInfo">Información del firmante de CMS para el que se va a crear una solicitud de marca de tiempo.</param>
      <param name="hashAlgorithm">Algoritmo hash que se va a usar con esta solicitud de marca de tiempo.</param>
      <param name="requestedPolicyId">Identificador de objeto (OID) para una directiva de marca de tiempo que la autoridad de marca de tiempo (TSA) debe usar, o <see langword="null" /> para no expresar ninguna preferencia.</param>
      <param name="nonce">Un valor nonce (número utilizado una vez) opcional para identificar de forma única esta solicitud para emparejarla con la respuesta. El valor se interpreta como un entero sin firmar de big-endian y puede estar normalizado en el formato de codificación.</param>
      <param name="requestSignerCertificates">
        <see langword="true" /> para indicar que la autoridad de marca de tiempo (TSA) debe incluir el certificado de firma en el token emitido de marca de tiempo; en caso contrario, <see langword="false" />.</param>
      <param name="extensions">Colección opcional de extensiones que se van a incluir en la solicitud.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" /> no es un algoritmo hash conocido.</exception>
      <returns>Un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" /> que representa los valores elegidos.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode">
      <summary>Codifica la solicitud de marca de tiempo y la devuelve como una matriz de bytes.</summary>
      <returns>Matriz de bytes que contiene la solicitud de marca de tiempo con codificación DER.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions">
      <summary>Obtiene una colección con una copia de las extensiones presentes en esta solicitud.</summary>
      <returns>Colección con una copia de las extensiones presentes en esta solicitud.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash">
      <summary>Obtiene el hash de datos para esta solicitud de marca de tiempo.</summary>
      <returns>Hash de datos para esta solicitud de marca de tiempo como valor de memoria de solo lectura.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce">
      <summary>Obtiene el valor nonce para esta solicitud de marca de tiempo.</summary>
      <returns>Valor nonce de esta solicitud de marca de tiempo como un valor de memoria de solo lectura, si hay alguno presente; de lo contrario, es <see langword="null" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>Combina una respuesta de marca de tiempo codificada con esta solicitud para producir una <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />.</summary>
      <param name="responseBytes">Respuesta de la marca de tiempo con codificación DER.</param>
      <param name="bytesConsumed">Cuando se devuelve este método, el número de bytes que se lee de <paramref name="responseBytes" />. Este parámetro se trata como sin inicializar.</param>
      <returns>Token de marca de tiempo de la respuesta que corresponde a esta solicitud.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <summary>Intentos para interpretar el contenido de <paramref name="encodedBytes" /> como una solicitud de marca de tiempo con codificación DER.</summary>
      <param name="encodedBytes">Búfer que contiene la solicitud de marca de tiempo con codificación DER.</param>
      <param name="request">Cuando se devuelve este método, la solicitud de marca de tiempo descodificada correctamente si la descodificación se realizó correctamente, o bien <see langword="null" /> si se produce un error en la descodificación. Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando se devuelve este método, el número de bytes que se lee de <paramref name="encodedBytes" />. Este parámetro se trata como sin inicializar.</param>
      <returns>Es <see langword="true" /> si <paramref name="encodedBytes" /> se interpreta correctamente como una solicitud de marca de tiempo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>Intenta codificar la instancia como una <c>TimeStampReq</c> IETF RFC 3161, escribiendo los bytes en el búfer proporcionado.</summary>
      <param name="destination">Búfer que va a recibir la solicitud codificada.</param>
      <param name="bytesWritten">Cuando este método devuelve un valor, el número total de bytes escritos en <paramref name="destination" />. Este parámetro se trata como sin inicializar.</param>
      <returns>Es <see langword="true" /> si <paramref name="destination" /> es lo suficientemente largo como para recibir la solicitud codificada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions">
      <summary>Indica si la solicitud tiene o no extensiones.</summary>
      <returns>
        <see langword="true" /> Si la solicitud tiene extensiones; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId">
      <summary>Obtiene el identificador de objeto (OID) del algoritmo hash asociado a la solicitud.</summary>
      <returns>Identificador de objeto (OID) del algoritmo hash asociado a la solicitud.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId">
      <summary>Obtiene el identificador de la directiva para la solicitud, o <see langword="null" /> si no se solicitó ningún identificador de directiva.</summary>
      <returns>El identificador de la Directiva para la solicitud o <see langword="null" /> cuando no se solicitó ningún identificador de directiva.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate">
      <summary>Obtiene un valor que indica si la solicitud indicó o no que el certificado de autoridad de la marca de tiempo debe estar en la respuesta.</summary>
      <returns>
        <see langword="true" /> Si la respuesta debe incluir el certificado de autoridad de la marca de tiempo; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version">
      <summary>Obtiene el número de versión del formato de datos para esta solicitud.</summary>
      <returns>El número de versión del formato de datos para esta solicitud.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken">
      <summary>Representa un token de marca de tiempo de IETF RFC 3161.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary>Obtiene una representación de la sintaxis de mensajes criptográficos (CMS) firmada del token de marca de tiempo RFC3161.</summary>
      <returns>La representación <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> del <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <summary>Intenta interpretar el contenido de <paramref name="encodedBytes" /> como un token de marca de tiempo con codificación DER.</summary>
      <param name="encodedBytes">Búfer que contiene un token de marca de tiempo con codificación DER.</param>
      <param name="token">Cuando se devuelve este método, el token de marca de tiempo descodificado correctamente si la descodificación se realizó correctamente, o bien <see langword="null" /> si se produce un error en la descodificación. Este parámetro se trata como sin inicializar.</param>
      <param name="bytesConsumed">Cuando se devuelve este método, el número de bytes que se lee de <paramref name="encodedBytes" />. Este parámetro se trata como sin inicializar.</param>
      <returns>Es <see langword="true" /> si <paramref name="encodedBytes" /> se interpreta correctamente como un token de marca de tiempo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Comprueba que el token actual es un token de marca de tiempo válido para los datos proporcionados.</summary>
      <param name="data">Los datos que se van a comprobar en este token de marca de tiempo.</param>
      <param name="signerCertificate">Cuando este método devuelve, el certificado de la autoridad de marca de tiempo (TSA) que firmó este token o <see langword="null" /> si no se puede determinar un certificado de firmante. Este parámetro se trata como sin inicializar.</param>
      <param name="extraCandidates">Colección opcional de certificados que se deben considerar como certificados de autoridad de marca de tiempo (TSA), además de los certificados que se puedan incluir en el token.</param>
      <returns>Es <see langword="true" /> si se ha encontrado el certificado de autoridad de marca de tiempo (TSA), la clave pública del certificado valida la firma del token y el token coincide con el hash de los datos proporcionados; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Comprueba que el token actual es un token de marca de tiempo válido para el hash y el identificador de algoritmo de los datos proporcionados.</summary>
      <param name="hash">Hash criptográfico que se va a comprobar en este token de marca de tiempo.</param>
      <param name="hashAlgorithm">Algoritmo que generó <paramref name="hash" />.</param>
      <param name="signerCertificate">Cuando este método devuelve, el certificado de la autoridad de marca de tiempo (TSA) que firmó este token o <see langword="null" /> si no se puede determinar un certificado de firmante. Este parámetro se trata como sin inicializar.</param>
      <param name="extraCandidates">Colección opcional de certificados que se deben considerar como certificados de autoridad de marca de tiempo (TSA), además de los certificados que se puedan incluir en el token.</param>
      <returns>Es <see langword="true" /> si se ha encontrado el certificado de autoridad de marca de tiempo (TSA), la clave pública del certificado valida la firma del token y el token coincide con el hash para el algoritmo y el hash de datos proporcionados; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Comprueba que el token actual es un token de marca de tiempo válido para el hash y el identificador de algoritmo de los datos proporcionados.</summary>
      <param name="hash">Hash criptográfico que se va a comprobar en este token de marca de tiempo.</param>
      <param name="hashAlgorithmId" />
      <param name="signerCertificate">Cuando este método devuelve, el certificado de la autoridad de marca de tiempo (TSA) que firmó este token o <see langword="null" /> si no se puede determinar un certificado de firmante. Este parámetro se trata como sin inicializar.</param>
      <param name="extraCandidates">Colección opcional de certificados que se deben considerar como certificados de autoridad de marca de tiempo (TSA), además de los certificados que se puedan incluir en el token.</param>
      <returns>Es <see langword="true" /> si se ha encontrado el certificado de autoridad de marca de tiempo (TSA), la clave pública del certificado valida la firma del token y el token coincide con el hash para el algoritmo y el hash de datos proporcionados; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Comprueba que el token actual es un token de marca de tiempo válido para la información <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> proporcionada.</summary>
      <param name="signerInfo">La información del firmante de CMS para comprobar la marca de tiempo para la que se compiló.</param>
      <param name="signerCertificate">Cuando este método devuelve, el certificado de la autoridad de marca de tiempo (TSA) que firmó este token o <see langword="null" /> si no se puede determinar un certificado de firmante. Este parámetro se trata como sin inicializar.</param>
      <param name="extraCandidates">Colección opcional de certificados que se deben considerar como certificados de autoridad de marca de tiempo (TSA), además de los certificados que se puedan incluir en el token.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si se ha encontrado el certificado de autoridad de marca de tiempo (TSA), la clave pública del certificado valida la firma del token y el token coincide con la firma de <paramref name="signerInfo" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo">
      <summary>Obtiene los detalles de este token de marca de tiempo como un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />.</summary>
      <returns>Los detalles de este token de marca de tiempo como un <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" /> .</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" />
      <param name="hashAlgorithmId" />
      <param name="messageHash" />
      <param name="serialNumber" />
      <param name="timestamp" />
      <param name="accuracyInMicroseconds" />
      <param name="isOrdering" />
      <param name="nonce" />
      <param name="timestampAuthorityName" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="timestampTokenInfo" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> habilita la firma y comprobación de mensajes CMS o PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando la información de contenido especificada como contenido interno.</summary>
      <param name="contentInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que especifica la información de contenido como contenido interno del mensaje <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el estado desasociado y la información de contenido especificada como contenido interno.</summary>
      <param name="contentInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que especifica la información de contenido como contenido interno del mensaje <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</param>
      <param name="detached">Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si <paramref name="detached" /> es <see langword="true" />, la firma está desasociada. Si <paramref name="detached" /> es <see langword="false" />, la firma no está desasociada.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para los firmantes.</summary>
      <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para firmantes y la información de contenido como contenido interno.</summary>
      <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
      <param name="contentInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que especifica la información de contenido como contenido interno del mensaje <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para firmantes y la información de contenido como contenido interno.</summary>
      <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
      <param name="contentInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que especifica la información de contenido como contenido interno del mensaje <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</param>
      <param name="detached">Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si <paramref name="detached" /> es <see langword="true" />, la firma está desasociada. Si detached es <see langword="false" />, la firma no está desasociada.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Agrega un certificado a la colección de certificados para el mensaje CMS/PKCS #7 codificado.</summary>
      <param name="certificate">El certificado que se va a agregar a la colección.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">El certificado ya existe en la colección.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> comprueba la integridad de los datos del mensaje CMS/PKCS #7. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> es un método especializado utilizado en aplicaciones de infraestructura de seguridad concretas que solo desean comprobar el hash del mensaje de CMS, en lugar de realizar una comprobación de la firma digital completa. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> no autentica el autor ni el remitente del mensaje porque este método no implica la comprobación de una firma digital. Para la comprobación de uso general de la integridad y autenticidad de un mensaje CMS o PKCS #7, utilice los métodos <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> o <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> comprueba las firmas digitales en el mensaje CMS o PKCS #7 firmado y, opcionalmente, valida los certificados de los firmantes.</summary>
      <param name="verifySignatureOnly">Valor <see cref="T:System.Boolean" /> que especifica si sólo se comprueban las firmas digitales sin los certificados de los firmantes que se están validando.  
  
Si <paramref name="verifySignatureOnly" /> es <see langword="true" />, sólo se comprueban las firmas digitales. Si es <see langword="false" />, se comprueban las firmas digitales, se validan los certificados de los firmantes y se validan los propósitos de los certificados. Los propósitos de un certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firmas digitales o no rechazo.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> comprueba las firmas digitales en el mensaje CMS o PKCS #7 firmado utilizando la colección especificada de certificados y, opcionalmente, valida los certificados de los firmantes.</summary>
      <param name="extraStore">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que se puede utilizar para validar la cadena de certificados. Si no se van a utilizar certificados adicionales para validar la cadena de certificados, utilice <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> en lugar de <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
      <param name="verifySignatureOnly">Valor <see cref="T:System.Boolean" /> que especifica si sólo se comprueban las firmas digitales sin los certificados de los firmantes que se están validando.  
  
Si <paramref name="verifySignatureOnly" /> es <see langword="true" />, sólo se comprueban las firmas digitales. Si es <see langword="false" />, se comprueban las firmas digitales, se validan los certificados de los firmantes y se validan los propósitos de los certificados. Los propósitos de un certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firmas digitales o no rechazo.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>Crea una firma y la agrega al mensaje CMS o PKCS #7.</summary>
      <exception cref="T:System.InvalidOperationException">.NET Framework (todas las versiones) y .NET Core 3.0 y versiones posteriores: el certificado de destinatario no se ha especificado.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core 2.2 y versiones anterior: no se ha proporcionado ningún certificado de firmante.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>Crea una firma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7.</summary>
      <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>Crea una firma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7.</summary>
      <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante.</param>
      <param name="silent">Solo .NET Core: <see langword="true" /> para solicitar la apertura de claves con solicitudes de PIN deshabilitadas cuando sea posible; de lo contrario, <see langword="false" />. En .NET Framework, este parámetro no se usa y siempre se muestra una solicitud de PIN, si se requiere.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="signer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Solo .NET Framework: no se ha especificado ningún certificado de firma.</exception>
      <exception cref="T:System.PlatformNotSupportedException">Solo .NET Core: no se ha especificado ningún certificado de firma.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>Descodifica un mensaje <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> codificado.</summary>
      <param name="encodedMessage">Matriz de valores de bytes que representa el mensaje CMS/PKCS#7 codificado que se va a descodificar.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="encodedMessage" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> no se pudo descodificar correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <param name="encodedMessage">Intervalo de solo lectura de valores de bytes que representa el mensaje CMS/PKCS#7 codificado que se va a descodificar.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> no se pudo descodificar correctamente.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> codifica la información del objeto en un mensaje CMS o PKCS #7.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      <returns>Matriz de valores de tipo byte que representa el mensaje codificado. El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> puede descodificar el mensaje codificado.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Quita el certificado especificado de la colección de certificados para el mensaje CMS/PKCS #7 codificado.</summary>
      <param name="certificate">El certificado que se va a quitar de la colección.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se encuentra el certificado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>Quita la firma situada en el índice especificado de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />.</summary>
      <param name="index">Índice de base cero de la firma que se va a quitar.</param>
      <exception cref="T:System.InvalidOperationException">Un mensaje CMS/PKCS #7 no está firmado e <paramref name="index" /> no es válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
O bien 
 <paramref name="index" /> es mayor que el recuento de la firma menos 1.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo quitar la firma.  
  
 O bien  
  
 Error criptográfico interno.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> quita la firma para el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> especificado.</summary>
      <param name="signerInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la contrafirma que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> recupera los certificados asociados al mensaje CMS o PKCS #7 codificado.</summary>
      <returns>Colección <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que representa el conjunto de certificados para el mensaje CMS o PKCS #7 codificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> recupera el contenido interno del mensaje CMS o PKCS #7 codificado.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que representa el contenido del mensaje CMS o PKCS #7 codificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> recupera un valor que indica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada.</summary>
      <returns>Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si esta propiedad es <see langword="true" />, la firma está desasociada. Si esta propiedad es <see langword="false" />, la firma no está desasociada.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> recupera la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> asociada al mensaje CMS o PKCS #7.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> que representa la información del firmante para el mensaje CMS o PKCS #7.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> recupera la versión del mensaje CMS o PKCS #7.</summary>
      <returns>Valor int que representa la versión del mensaje CMS o PKCS #7.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> representa a un firmante asociado a un objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> que representa un mensaje CMS o PKCS #7.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>Agrega el atributo especificado al documento actual.</summary>
      <param name="asnEncodedData">El atributo codificado ASN.1 que se va a agregar al documento.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se encuentra el firmante original.
        
 o bien

Datos ASN1 dañados.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> comprueba la integridad de los datos de la información del firmante del mensaje CMS/PKCS #7. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> es un método especializado que se emplea en determinadas aplicaciones de infraestructura de seguridad en las que el asunto usa el miembro HashOnly de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> al configurar un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> no autentica la información del firmante porque este método no implica la comprobación de una firma digital. Para la comprobación de uso general de la integridad y autenticidad de la información del firmante de un mensaje CMS o PKCS #7 y de las contrafirmas, utilice los métodos <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> o <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> comprueba la firma digital del mensaje y, opcionalmente, valida el certificado.</summary>
      <param name="verifySignatureOnly">Un valor booleano que especifica si sólo se comprueba la firma digital. Si <paramref name="verifySignatureOnly" /> es <see langword="true" />, sólo se comprueba la firma. Si <paramref name="verifySignatureOnly" /> es <see langword="false" />, se comprueba la firma digital, se valida la cadena de certificados y se validan los propósitos de los certificados. Los propósitos del certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firma digital o no rechazo.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> comprueba la firma digital del mensaje utilizando la colección especificada de certificados y, opcionalmente, valida el certificado.</summary>
      <param name="extraStore">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que se puede utilizar para validar la cadena. Si no se van a utilizar certificados adicionales para validar la cadena, use <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> en lugar de <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
      <param name="verifySignatureOnly">Un valor booleano que especifica si sólo se comprueba la firma digital. Si <paramref name="verifySignatureOnly" /> es <see langword="true" />, sólo se comprueba la firma. Si <paramref name="verifySignatureOnly" /> es <see langword="false" />, se comprueba la firma digital, se valida la cadena de certificados y se validan los propósitos de los certificados. Los propósitos del certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firma digital o no rechazo.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> pide al usuario que seleccione un certificado de firma, cree una contrafirma y agregue la firma al mensaje CMS o PKCS #7. Las contrafirmas se restringen a un nivel.</summary>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> crea una contrafirma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7. Las contrafirmas se restringen a un nivel.</summary>
      <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante de la contrafirma.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary>Recupera la firma del objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</summary>
      <returns>Firma del objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> quita la contrafirma correspondiente al índice especificado de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />.</summary>
      <param name="index">Índice de base cero de la contrafirma que se va a quitar.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> quita la contrafirma para el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> especificado.</summary>
      <param name="counterSignerInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la contrafirma que se va a quitar.</param>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>Quita el atributo especificado del documento actual.</summary>
      <param name="asnEncodedData">El atributo codificado ASN.1 que se va a quitar del documento.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">No se encuentra el firmante original.

 o bien

No se encontró el atributo.

 o bien
 
Datos ASN1 dañados.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> recupera el certificado de firma asociado a la información del firmante.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que representa el certificado de firma.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> recupera el conjunto de firmantes de contrafirma asociado a la información del firmante.</summary>
      <returns>Colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> que representa a los firmantes de contrafirma para la información del firmante. Si no existen firmantes de contrafirma, la propiedad es una colección vacía.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> recupera el objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el algoritmo hash utilizado en el cálculo de las firmas.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el algoritmo hash utilizado con la firma.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary>Obtiene el identificador del algoritmo de firma usado por el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</summary>
      <returns>Identificador del algoritmo de firma usado por el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> recupera la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> de atributos firmados que está asociada a la información del firmante. Los atributos firmados se firman junto con el resto del contenido del mensaje.</summary>
      <returns>Colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> que representa los atributos firmados. Si no existen atributos firmados, la propiedad es una colección vacía.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> recupera el identificador del certificado del firmante asociado a la información del firmante.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> que identifica de forma única el certificado asociado a la información del firmante.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> recupera la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> de atributos no firmados que está asociada a la información del contenido de <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />. Los atributos no firmados se pueden modificar sin invalidar la firma.</summary>
      <returns>Colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> que representa los atributos no firmados. Si no existen atributos no firmados, la propiedad es una colección vacía.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> recupera la versión de la información del firmante.</summary>
      <returns>Valor de tipo int que especifica la versión de la información del firmante.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> representa una colección de objetos <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> implementa la interfaz <see cref="T:System.Collections.ICollection" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> a una matriz.</summary>
      <param name="array">Objeto <see cref="T:System.Array" /> en el que se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</param>
      <param name="index">Índice de base cero de <paramref name="array" /> donde se copia la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</param>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> copia la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> a una matriz <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />.</summary>
      <param name="array">Matriz de objetos <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> donde se va a copiar la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</param>
      <param name="index">Índice de base cero de <paramref name="array" /> donde se copia la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</param>
      <exception cref="T:System.ArgumentException">Uno de los argumentos proporcionados a un método no era válido.</exception>
      <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> devuelve un objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> para la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> que se puede usar para enumerar la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> recupera el número de elementos de la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Un valor entero que representa el número de elementos en la colección.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> recupera si el acceso a la colección está sincronizado o si es seguro para la ejecución de subprocesos. Esta propiedad siempre devuelve <see langword="false" />, lo que significa que la colección no es segura para la ejecución de subprocesos.</summary>
      <returns>Un valor <see cref="T:System.Boolean" /> de <see langword="false" />, que significa que la colección no es segura para la ejecución de subprocesos.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> situado en el índice especificado de la colección.</summary>
      <param name="index">Un valor entero que representa el índice en la colección. El índice es de base cero.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />Objeto en el índice especificado.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> recupera un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Un objeto <see cref="T:System.Object" /> que se utiliza para sincronizar el acceso a la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> proporciona funciones de enumeración para la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> implementa la interfaz <see cref="T:System.Collections.IEnumerator" />.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> hace avanzar la enumeración al siguiente objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Este método devuelve un valor booleano que especifica si la enumeración avanzó correctamente. Si la enumeración se desplazó correctamente al siguiente objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />, el método devuelve <see langword="true" />. Si la enumeración se desplazó más allá del último elemento de la enumeración, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> restablece la enumeración al primer objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> de la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la estructura actual de información del firmante en la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> recupera el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual de la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</summary>
      <returns>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la estructura actual de información del firmante en la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> define el tipo del identificador de un sujeto, como <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> o <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />.  El emisor del certificado y el número de serie o la clave del sujeto pueden identificar el sujeto.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Verifica si el identificador del sujeto del certificado especificado coincide con la instancia del identificador de sujeto actual.</summary>
      <param name="certificate">El certificado que debe coincidir con la instancia del identificador de sujeto actual.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">Tipo de identificador de sujeto no válido.</exception>
      <returns>
        <see langword="true" /> si el identificador del certificado especificado coincide con la instancia del identificador de sujeto actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> recupera el tipo del identificador del sujeto. El emisor del certificado y el número de serie o la clave del sujeto pueden identificar el sujeto.</summary>
      <returns>Miembro de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que identifica el tipo del sujeto.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> recupera el valor del identificador del sujeto. Utilice la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> para determinar el tipo del identificador del sujeto y utilice la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> para recuperar el valor correspondiente.</summary>
      <returns>Un objeto <see cref="T:System.Object" /> que representa el valor del identificador del sujeto. Este <see cref="T:System.Object" /> puede ser uno de los objetos siguientes tal como determina la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" />.  
  
 <list type="table"><listheader><term>Propiedad<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /></term><description> Objeto</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> define el tipo del identificador de un sujeto, como <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> o <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" />.  El emisor del certificado y el número de serie, el hash de la clave del sujeto o la clave del sujeto.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> recupera el tipo de identificador del sujeto. El emisor del certificado y el número de serie, el hash de la clave del sujeto o la clave del sujeto.</summary>
      <returns>Miembro de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> que especifica el tipo de identificador del sujeto.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> recupera el valor del identificador del sujeto o la clave. Utilice la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> para determinar el tipo de identificador del sujeto o la clave, y utilice la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> para recuperar el valor correspondiente.</summary>
      <returns>Objeto <see cref="T:System.Object" /> que representa el valor del identificador del sujeto o la clave. Este <see cref="T:System.Object" /> puede ser uno de los objetos siguientes tal como determina la propiedad <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" />.  
  
 <list type="table"><listheader><term>Propiedad<see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /></term><description> Objeto</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item><item><term> PublicKeyInfo</term><description><see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>La enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> define cómo se identifica un sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>El emisor del certificado y el número de serie identifican el sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>La clave pública identifica el sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>El hash de la clave de sujeto identifica el sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>Se desconoce el tipo.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>La enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> define el tipo del identificador del sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>El emisor del certificado y el número de serie identifican el sujeto.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>El sujeto se identifica al formar parte de una operación de comprobación de integridad que utiliza sólo un algoritmo hash.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>El hash de la clave pública del sujeto identifica el sujeto. El conjunto de algoritmos de firma en el certificado del sujeto determina el algoritmo hash utilizado.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>No se conoce el tipo del identificador del sujeto.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>Representa el elemento &lt;<see langword="X509IssuerSerial" />&gt; de una firma digital XML.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>Obtiene o establece el nombre distintivo de un emisor de certificados X.509.</summary>
      <returns>El nombre distintivo de un emisor de certificados X.509.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>Obtiene o establece el número de serie de un emisor de certificados X.509.</summary>
      <returns>El número de serie de un emisor de certificados X.509.</returns>
    </member>
  </members>
</doc>