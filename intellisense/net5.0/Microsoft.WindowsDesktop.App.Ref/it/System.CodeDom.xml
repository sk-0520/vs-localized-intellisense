<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.CodeDom</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.CSharpCodeProvider">
      <summary>Fornisce l'accesso alle istanze del generatore e del compilatore di codice C#.</summary>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.CSharp.CSharpCodeProvider" />.</summary>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.CSharp.CSharpCodeProvider" /> tramite le opzioni del provider specificate.</summary>
      <param name="providerOptions">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> che contiene le opzioni del provider del file di configurazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.CreateCompiler">
      <summary>Ottiene un'istanza del compilatore di codice C#.</summary>
      <returns>Istanza dell'implementazione C# di <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</returns>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
      <summary>Ottiene un'istanza del generatore di codice C#.</summary>
      <returns>Istanza dell'implementazione C# di <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />.</returns>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera codice per il membro della classe specificato usando le opzioni del writer di testo e del generatore di codice specificate.</summary>
      <param name="member">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> per il quale deve essere generato il codice.</param>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> in cui scrivere.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> da usare per la generazione del codice.</param>
    </member>
    <member name="M:Microsoft.CSharp.CSharpCodeProvider.GetConverter(System.Type)">
      <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo di oggetto specificato.</summary>
      <param name="type">Tipo di oggetto per il quale recuperare un convertitore di tipi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</returns>
    </member>
    <member name="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension">
      <summary>Ottiene l'estensione di file da usare per la creazione di file di codice sorgente.</summary>
      <returns>Estensione di file da usare per i file di codice sorgente generati.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.VBCodeProvider">
      <summary>Fornisce l'accesso alle istanze del generatore e del compilatore di codice Visual Basic.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.VBCodeProvider" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:Microsoft.VisualBasic.VBCodeProvider" /> tramite le opzioni del provider specificate.</summary>
      <param name="providerOptions">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> che contiene le opzioni del provider del file di configurazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.CreateCompiler">
      <summary>Ottiene un'istanza del compilatore di codice Visual Basic.</summary>
      <returns>Istanza dell'implementazione di <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> di Visual Basic.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator">
      <summary>Ottiene un'istanza del generatore di codice Visual Basic.</summary>
      <returns>Istanza dell'implementazione di <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> di Visual Basic.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera codice per il membro della classe specificato usando le opzioni del writer di testo e del generatore di codice specificate.</summary>
      <param name="member">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> per il quale deve essere generato il codice.</param>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> in cui scrivere.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> da usare per la generazione del codice.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.VBCodeProvider.GetConverter(System.Type)">
      <summary>Ottiene un oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo di oggetto specificato.</summary>
      <param name="type">Tipo di oggetto per il quale recuperare un convertitore di tipi.</param>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension">
      <summary>Ottiene l'estensione di file da usare per la creazione di file di codice sorgente.</summary>
      <returns>Estensione di file da usare per i file di codice sorgente generati.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.VBCodeProvider.LanguageOptions">
      <summary>Ottiene un identificatore delle funzionalità del linguaggio.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> che indica speciali funzionalità del linguaggio.</returns>
    </member>
    <member name="T:System.CodeDom.CodeArgumentReferenceExpression">
      <summary>Rappresenta un riferimento al valore di un argomento passato a un metodo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArgumentReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArgumentReferenceExpression.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> con il nome del parametro specificato.</summary>
      <param name="parameterName">Nome del parametro cui fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeArgumentReferenceExpression.ParameterName">
      <summary>Ottiene o imposta il nome del parametro al quale fa riferimento questa espressione.</summary>
      <returns>Nome del parametro cui fare riferimento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeArrayCreateExpression">
      <summary>Rappresenta un'espressione che crea una matrice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il tipo di dati della matrice specificato e l'espressione di codice indicante il numero di indici della matrice.</summary>
      <param name="createType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della matrice da creare.</param>
      <param name="size">Espressione che indica il numero di indici della matrice da creare.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> con il tipo di dati e le espressioni di inizializzazione di matrice specificati.</summary>
      <param name="createType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della matrice da creare.</param>
      <param name="initializers">Matrice di espressioni da utilizzare per inizializzare la matrice.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il tipo di dati e il numero di indici della matrice specificati.</summary>
      <param name="createType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della matrice da creare.</param>
      <param name="size">Numero di indici della matrice da creare.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il nome del tipo di dati della matrice specificato e l'espressione di codice indicante il numero di indici della matrice.</summary>
      <param name="createType">Nome del tipo di dati della matrice da creare.</param>
      <param name="size">Espressione che indica il numero di indici della matrice da creare.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> con il nome del tipo di dati e gli inizializzatori di matrice specificati.</summary>
      <param name="createType">Nome del tipo di dati della matrice da creare.</param>
      <param name="initializers">Matrice di espressioni da utilizzare per inizializzare la matrice.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il nome del tipo di dati e il numero di indici della matrice specificati.</summary>
      <param name="createType">Nome del tipo di dati della matrice da creare.</param>
      <param name="size">Numero di indici della matrice da creare.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il tipo di dati della matrice specificato e l'espressione di codice indicante il numero di indici della matrice.</summary>
      <param name="createType">Tipo di dati della matrice da creare.</param>
      <param name="size">Espressione che indica il numero di indici della matrice da creare.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> con il tipo di dati e gli inizializzatori di matrice specificati.</summary>
      <param name="createType">Tipo di dati della matrice da creare.</param>
      <param name="initializers">Matrice di espressioni da utilizzare per inizializzare la matrice.</param>
    </member>
    <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> utilizzando il tipo di dati e il numero di indici della matrice specificati.</summary>
      <param name="createType">Tipo di dati della matrice da creare.</param>
      <param name="size">Numero di indici della matrice da creare.</param>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.CreateType">
      <summary>Ottiene o imposta il tipo di matrice da creare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo della matrice da creare.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.Initializers">
      <summary>Restituisce gli inizializzatori con i quali inizializzare la matrice.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che indica i valori di inizializzazione.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.Size">
      <summary>Ottiene o imposta il numero di indici della matrice.</summary>
      <returns>Numero di indici della matrice.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayCreateExpression.SizeExpression">
      <summary>Ottiene o imposta l'espressione che indica la dimensione della matrice.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica la dimensione della matrice.</returns>
    </member>
    <member name="T:System.CodeDom.CodeArrayIndexerExpression">
      <summary>Rappresenta un riferimento a un indice di una matrice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayIndexerExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayIndexerExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeArrayIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> utilizzando l'oggetto di destinazione e gli indici specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto su cui viene applicato l'indicizzatore.</param>
      <param name="indices">Indice o indici cui fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeArrayIndexerExpression.Indices">
      <summary>Ottiene o imposta l'indice o gli indici dell'espressione dell'indicizzatore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che indica l'indice o gli indici dell'espressione dell'indicizzatore.</returns>
    </member>
    <member name="P:System.CodeDom.CodeArrayIndexerExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto di destinazione dell'indicizzatore della matrice.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta la matrice da indicizzare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAssignStatement">
      <summary>Rappresenta un'istruzione di assegnazione semplice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAssignStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAssignStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAssignStatement" /> utilizzando le espressioni specificate.</summary>
      <param name="left">Variabile a cui assegnare un valore.</param>
      <param name="right">Il valore da assegnare.</param>
    </member>
    <member name="P:System.CodeDom.CodeAssignStatement.Left">
      <summary>Ottiene o imposta l'espressione che rappresenta l'oggetto o il riferimento al quale assegnare un valore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto o il riferimento al quale assegnare un valore.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAssignStatement.Right">
      <summary>Ottiene o imposta l'espressione che rappresenta l'oggetto o il riferimento da assegnare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto o il riferimento da assegnare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttachEventStatement">
      <summary>Rappresenta un'istruzione che consente di associare un delegato gestore eventi a un evento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttachEventStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttachEventStatement" /> utilizzando l'evento e il delegato specificati.</summary>
      <param name="eventRef">
        <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> che indica l'evento a cui associare un gestore eventi.</param>
      <param name="listener">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il nuovo gestore eventi.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttachEventStatement" /> utilizzando l'oggetto specificato che contiene l'evento, il nome dell'evento e il delegato gestore eventi.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene l'evento.</param>
      <param name="eventName">Nome dell'evento cui associare un gestore eventi.</param>
      <param name="listener">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il nuovo gestore eventi.</param>
    </member>
    <member name="P:System.CodeDom.CodeAttachEventStatement.Event">
      <summary>Ottiene o imposta l'evento al quale associare un delegato gestore eventi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> che indica l'evento a cui associare un gestore eventi.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttachEventStatement.Listener">
      <summary>Ottiene o imposta il nuovo delegato gestore eventi da associare all'evento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il nuovo gestore eventi da associare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeArgument">
      <summary>Rappresenta un argomento utilizzato in una dichiarazione di attributo dei metadati.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgument" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor(System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgument" /> tramite il valore specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta il valore dell'argomento.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgument.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgument" />con il nome e il valore specificati.</summary>
      <param name="name">Il nome della proprietà dell'attributo al quale si applica l'argomento.</param>
      <param name="value">
        <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta il valore dell'argomento.</param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgument.Name">
      <summary>Ottiene o imposta il nome dell'attributo.</summary>
      <returns>Il nome della proprietà dell'attributo al quale è destinato l'argomento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgument.Value">
      <summary>Ottiene o imposta il valore dell'argomento dell'attributo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il valore dell'attributo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeArgumentCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeAttributeArgument" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgument[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeAttributeArgument" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeAttributeArgument" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgumentCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgument[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeAttributeArgument" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgumentCollection)">
      <summary>Copia il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Contains(System.CodeDom.CodeAttributeArgument)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.CopyTo(System.CodeDom.CodeAttributeArgument[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza della <see cref="T:System.Array" /> unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.IndexOf(System.CodeDom.CodeAttributeArgument)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> da individuare nell'insieme.</param>
      <returns>Indice dell'oggetto specificato, se presente nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Insert(System.Int32,System.CodeDom.CodeAttributeArgument)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Remove(System.CodeDom.CodeAttributeArgument)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeAttributeArgumentCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeAttributeArgument" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeAttributeArgument" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeDeclaration">
      <summary>Rappresenta una dichiarazione di attributo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> utilizzando il riferimento al tipo di codice specificato.</summary>
      <param name="attributeType">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che identifica l'attributo.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeAttributeArgument[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> utilizzando il riferimento al tipo di codice e gli argomenti specificati.</summary>
      <param name="attributeType">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che identifica l'attributo.</param>
      <param name="arguments">Matrice di tipo <see cref="T:System.CodeDom.CodeAttributeArgument" /> che contiene gli argomenti dell'attributo.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.String)">
      <summary>Inizializza una nuova istanza per la classe <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> usando il nome specificato.</summary>
      <param name="name">Nome dell'attributo.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.String,System.CodeDom.CodeAttributeArgument[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclaration" />con il nome e gli argomenti specificati.</summary>
      <param name="name">Nome dell'attributo.</param>
      <param name="arguments">Matrice di tipo <see cref="T:System.CodeDom.CodeAttributeArgument" /> che contiene gli argomenti dell'attributo.</param>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.Arguments">
      <summary>Restituisce gli argomenti dell'attributo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeAttributeArgumentCollection" /> contenente gli argomenti dell'attributo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.AttributeType">
      <summary>Ottiene il riferimento al tipo di codice per la dichiarazione dell'attributo del codice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che identifica l'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclaration.Name">
      <summary>Ottiene o imposta il nome dell'attributo dichiarato.</summary>
      <returns>Nome dell'attributo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeAttributeDeclarationCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclaration[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeAttributeDeclaration" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Add(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Aggiunge all'insieme un oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> con il valore specificato.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclaration[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Copia il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Contains(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Ottiene o imposta un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> da individuare.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.CopyTo(System.CodeDom.CodeAttributeDeclaration[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza della <see cref="T:System.Array" /> unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.IndexOf(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> da individuare nell'insieme.</param>
      <returns>Indice nell'insieme dell'oggetto specificato, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeAttributeDeclaration)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Remove(System.CodeDom.CodeAttributeDeclaration)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeAttributeDeclarationCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeBaseReferenceExpression">
      <summary>Rappresenta un riferimento alla classe di base.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBaseReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeBaseReferenceExpression" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeBinaryOperatorExpression">
      <summary>Rappresenta un'espressione composta da un'operazione binaria tra due espressioni.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeBinaryOperatorExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> tramite i parametri specificati.</summary>
      <param name="left">
        <see cref="T:System.CodeDom.CodeExpression" /> a sinistra dell'operatore.</param>
      <param name="op">
        <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> che indica il tipo di operatore.</param>
      <param name="right">
        <see cref="T:System.CodeDom.CodeExpression" /> a destra dell'operatore.</param>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Left">
      <summary>Ottiene o imposta l'espressione del codice a sinistra dell'operatore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'operando di sinistra.</returns>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Operator">
      <summary>Ottiene o imposta l'operatore nell'espressione dell'operatore binario.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeBinaryOperatorType" /> che indica il tipo di operatore nell'espressione.</returns>
    </member>
    <member name="P:System.CodeDom.CodeBinaryOperatorExpression.Right">
      <summary>Ottiene o imposta l'espressione del codice a destra dell'operatore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'operando di destra.</returns>
    </member>
    <member name="T:System.CodeDom.CodeBinaryOperatorType">
      <summary>Definisce gli identificatori per gli operatori binari supportati.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Add">
      <summary>Operatore di addizione.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Assign">
      <summary>Operatore di assegnazione.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd">
      <summary>Operatore AND bit per bit.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr">
      <summary>Operatore OR bit per bit.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd">
      <summary>Operatore AND booleano. Rappresenta un operatore di corto circuito che calcola solo il numero di espressioni necessarie per restituire un valore corretto.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr">
      <summary>Operatore OR booleano. Rappresenta un operatore di corto circuito che calcola solo il numero di espressioni necessarie per restituire un valore corretto.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Divide">
      <summary>Operatore di divisione.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan">
      <summary>Operatore Greater than.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual">
      <summary>Operatore maggiore o uguale a.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality">
      <summary>Operatore di uguaglianza per identità.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality">
      <summary>Operatore di non uguaglianza per identità.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.LessThan">
      <summary>Operatore Less than.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual">
      <summary>Operatore minore o uguale a.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Modulus">
      <summary>Operatore di modulo.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Multiply">
      <summary>Operatore di moltiplicazione.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.Subtract">
      <summary>Operatore di sottrazione.</summary>
    </member>
    <member name="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality">
      <summary>Operatore di uguaglianza per valore.</summary>
    </member>
    <member name="T:System.CodeDom.CodeCastExpression">
      <summary>Rappresenta il cast di un'espressione in un tipo di dati o in un'interfaccia.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCastExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCastExpression" /> utilizzando il tipo di destinazione e l'espressione specificati.</summary>
      <param name="targetType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di destinazione del cast.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> da impostare.</param>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.String,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCastExpression" /> utilizzando il tipo di destinazione e l'espressione specificati.</summary>
      <param name="targetType">Nome del tipo di destinazione del cast.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> da impostare.</param>
    </member>
    <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCastExpression" /> utilizzando il tipo di destinazione e l'espressione specificati.</summary>
      <param name="targetType">Tipo di dati di destinazione del cast.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> da impostare.</param>
    </member>
    <member name="P:System.CodeDom.CodeCastExpression.Expression">
      <summary>Ottiene o imposta l'espressione di cui eseguire il cast.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il codice di cui eseguire il cast.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCastExpression.TargetType">
      <summary>Ottiene o imposta il tipo di destinazione del cast.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di destinazione sul quale eseguire il cast.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCatchClause">
      <summary>Rappresenta un blocco di eccezioni <see langword="catch" /> di un'istruzione <see langword="try/catch" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale specificato per l'eccezione.</summary>
      <param name="localName">Nome della variabile locale dichiarata nella clausola catch dell'eccezione. Questo indirizzo è facoltativo.</param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale per l'eccezione e il tipo di eccezione specificati.</summary>
      <param name="localName">Nome della variabile locale dichiarata nella clausola catch dell'eccezione. Questo indirizzo è facoltativo.</param>
      <param name="catchExceptionType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da intercettare.</param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClause" /> utilizzando il nome della variabile locale per l'eccezione, il tipo di eccezione e l'insieme di istruzioni specificati.</summary>
      <param name="localName">Nome della variabile locale dichiarata nella clausola catch dell'eccezione. Questo indirizzo è facoltativo.</param>
      <param name="catchExceptionType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da intercettare.</param>
      <param name="statements">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> che rappresentano il contenuto del blocco catch.</param>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.CatchExceptionType">
      <summary>Ottiene o imposta il tipo di eccezione da gestire con il blocco catch.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di eccezione da gestire.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.LocalName">
      <summary>Ottiene o imposta il nome della variabile dell'eccezione gestita dalla clausola <see langword="catch" />.</summary>
      <returns>Nome della variabile dell'eccezione gestita dalla clausola <see langword="catch" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCatchClause.Statements">
      <summary>Ottiene le istruzioni all'interno del blocco catch.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> contenente le istruzioni all'interno del blocco catch.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCatchClauseCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeCatchClause" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeCatchClause" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeCatchClause" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeCatchClause" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeCatchClause" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClauseCollection)">
      <summary>Copia il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.CopyTo(System.CodeDom.CodeCatchClause[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza della <see cref="T:System.Array" /> unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> da individuare nell'insieme.</param>
      <returns>Indice dell'oggetto specificato, se presente nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Insert(System.Int32,System.CodeDom.CodeCatchClause)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeCatchClauseCollection.Remove(System.CodeDom.CodeCatchClause)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeCatchClauseCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeCatchClause" /> in corrispondenza di ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeChecksumPragma">
      <summary>Rappresenta un'entità di codice pragma del checksum di un codice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeChecksumPragma.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeChecksumPragma" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeChecksumPragma.#ctor(System.String,System.Guid,System.Byte[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeChecksumPragma" /> utilizzando un nome file, un GUID che rappresenta l'algoritmo di checksum e un flusso di byte che rappresenta i dati di checksum.</summary>
      <param name="fileName">Percorso del file di checksum.</param>
      <param name="checksumAlgorithmId">
        <see cref="T:System.Guid" /> che identifica l'algoritmo di checksum da utilizzare.</param>
      <param name="checksumData">Matrice di byte che contiene i dati di checksum.</param>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.ChecksumAlgorithmId">
      <summary>Ottiene o imposta un GUID che identifica l'algoritmo di checksum da utilizzare.</summary>
      <returns>
        <see cref="T:System.Guid" /> che identifica l'algoritmo di checksum da utilizzare.</returns>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.ChecksumData">
      <summary>Ottiene o imposta il valore dei dati per il calcolo del checksum.</summary>
      <returns>Matrice di byte che contiene i dati per il calcolo del checksum.</returns>
    </member>
    <member name="P:System.CodeDom.CodeChecksumPragma.FileName">
      <summary>Ottiene o imposta il percorso del file di checksum.</summary>
      <returns>Percorso del file di checksum.</returns>
    </member>
    <member name="T:System.CodeDom.CodeComment">
      <summary>Rappresenta un commento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeComment" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeComment" /> utilizzando il testo specificato come contenuto.</summary>
      <param name="text">Contenuto del commento.</param>
    </member>
    <member name="M:System.CodeDom.CodeComment.#ctor(System.String,System.Boolean)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeComment" />  con il testo e il flag di documentazione tratta dal commento specificati.</summary>
      <param name="text">Contenuto del commento.</param>
      <param name="docComment">
        <see langword="true" /> se il commento è un commento relativo alla documentazione; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeComment.DocComment">
      <summary>Ottiene o imposta un valore che indica se il commento è relativo alla documentazione.</summary>
      <returns>
        <see langword="true" /> se il commento è un commento relativo alla documentazione; in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeComment.Text">
      <summary>Ottiene o imposta il testo del commento.</summary>
      <returns>Stringa contenente il testo del commento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCommentStatement">
      <summary>Rappresenta un'istruzione composta da un singolo commento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatement" /> con il commento specificato.</summary>
      <param name="comment">
        <see cref="T:System.CodeDom.CodeComment" /> che indica il commento.</param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatement" /> usando il testo specificato come contenuto.</summary>
      <param name="text">Contenuto del commento.</param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatement" />  con il testo e il flag di documentazione tratta dal commento specificati.</summary>
      <param name="text">Contenuto del commento.</param>
      <param name="docComment">
        <see langword="true" /> se il commento è un commento relativo alla documentazione; in caso contrario <see langword="false" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeCommentStatement.Comment">
      <summary>Ottiene o imposta il contenuto del commento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeComment" /> che indica il commento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCommentStatementCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeCommentStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatementCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatement[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeCommentStatement" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeCommentStatement" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Add(System.CodeDom.CodeCommentStatement)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatement[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeCommentStatement" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeCommentStatement" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Copia il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Contains(System.CodeDom.CodeCommentStatement)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.CopyTo(System.CodeDom.CodeCommentStatement[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme nella <see cref="T:System.Array" /> unidimensionale specificata partendo dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.IndexOf(System.CodeDom.CodeCommentStatement)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> da individuare.</param>
      <returns>Indice dell'oggetto specificato, se presente nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Insert(System.Int32,System.CodeDom.CodeCommentStatement)">
      <summary>Inserisce un oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> nell'insieme, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in cui inserire l'elemento.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeCommentStatementCollection.Remove(System.CodeDom.CodeCommentStatement)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeCommentStatementCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeCommentStatement" /> in corrispondenza di ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeCompileUnit">
      <summary>Fornisce un contenitore per un grafico di programma CodeDOM.</summary>
    </member>
    <member name="M:System.CodeDom.CodeCompileUnit.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes">
      <summary>Restituisce un insieme di attributi personalizzati per l'assembly generato.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica gli attributi personalizzati per l'assembly generato.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.EndDirectives">
      <summary>Ottiene un oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive finali.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive finali.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.Namespaces">
      <summary>Restituisce l'insieme degli spazi dei nomi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeNamespaceCollection" /> che indica gli spazi dei nomi utilizzati dall'unità di compilazione.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.ReferencedAssemblies">
      <summary>Restituisce gli assembly a cui si fa riferimento.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> che contiene i nomi file degli assembly cui si fa riferimento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeCompileUnit.StartDirectives">
      <summary>Ottiene un oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive iniziali.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive iniziali.</returns>
    </member>
    <member name="T:System.CodeDom.CodeConditionStatement">
      <summary>Rappresenta un'istruzione branch condizionale, normalmente rappresentata da un'istruzione <see langword="if" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeConditionStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeConditionStatement" /> con la condizione e le istruzioni specificate.</summary>
      <param name="condition">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione da valutare.</param>
      <param name="trueStatements">Matrice di tipo <see cref="T:System.CodeDom.CodeStatement" /> contenente le istruzioni da eseguire se la condizione è <see langword="true" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeConditionStatement" /> con la condizione e le istruzioni specificate.</summary>
      <param name="condition">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica la condizione da valutare.</param>
      <param name="trueStatements">Matrice di tipo <see cref="T:System.CodeDom.CodeStatement" /> contenente le istruzioni da eseguire se la condizione è <see langword="true" />.</param>
      <param name="falseStatements">Matrice di tipo <see cref="T:System.CodeDom.CodeStatement" /> contenente le istruzioni da eseguire se la condizione è <see langword="false" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.Condition">
      <summary>Ottiene o imposta l'espressione da valutare come <see langword="true" /> o <see langword="false" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> da valutare come <see langword="true" /> o <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.FalseStatements">
      <summary>Restituisce l'insieme di istruzioni da eseguire se l'espressione condizionale restituisce <see langword="false" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che contiene le istruzioni da eseguire se l'espressione condizionale restituisce <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConditionStatement.TrueStatements">
      <summary>Restituisce l'insieme di istruzioni da eseguire se l'espressione condizionale restituisce <see langword="true" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che contiene le istruzioni da eseguire se l'espressione condizionale restituisce <see langword="true" />.</returns>
    </member>
    <member name="T:System.CodeDom.CodeConstructor">
      <summary>Rappresenta una dichiarazione di un costruttore di istanze di un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeConstructor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeConstructor" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeConstructor.BaseConstructorArgs">
      <summary>Restituisce l'insieme degli argomenti del costruttore di base.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che contiene gli argomenti del costruttore base.</returns>
    </member>
    <member name="P:System.CodeDom.CodeConstructor.ChainedConstructorArgs">
      <summary>Restituisce l'insieme degli argomenti concatenati del costruttore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che contiene gli argomenti concatenati del costruttore.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDefaultValueExpression">
      <summary>Rappresenta un riferimento a un valore predefinito.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDefaultValueExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDefaultValueExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDefaultValueExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDefaultValueExpression" /> utilizzando il riferimento al tipo di codice specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che specifica il riferimento a un tipo di valore.</param>
    </member>
    <member name="P:System.CodeDom.CodeDefaultValueExpression.Type">
      <summary>Ottiene o imposta il riferimento al tipo di dati per un valore predefinito.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che rappresenta un tipo di dati a cui è associato un valore predefinito.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDelegateCreateExpression">
      <summary>Rappresenta un'espressione che crea un delegato.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateCreateExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDelegateCreateExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDelegateCreateExpression" />.</summary>
      <param name="delegateType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati del delegato.</param>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto contenente il metodo gestore eventi.</param>
      <param name="methodName">Nome del metodo gestore eventi.</param>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.DelegateType">
      <summary>Ottiene o imposta il tipo di dati del delegato.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati del delegato.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.MethodName">
      <summary>Ottiene o imposta il nome del metodo gestore eventi.</summary>
      <returns>Nome del metodo gestore eventi.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateCreateExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto che contiene il metodo gestore eventi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto contenente il metodo gestore eventi.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDelegateInvokeExpression">
      <summary>Rappresenta un'espressione che genera un evento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> con l'oggetto di destinazione specificato.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto di destinazione.</param>
    </member>
    <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> con l'oggetto di destinazione e i parametri specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto di destinazione.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indicano i parametri.</param>
    </member>
    <member name="P:System.CodeDom.CodeDelegateInvokeExpression.Parameters">
      <summary>Ottiene o imposta i parametri da passare ai metodi di gestione degli eventi associati all'evento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica i parametri da passare ai metodi di gestione degli eventi associati all'evento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDelegateInvokeExpression.TargetObject">
      <summary>Ottiene o imposta l'evento da richiamare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'evento da richiamare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDirectionExpression">
      <summary>Rappresenta un'espressione utilizzata come parametro di richiamo del metodo con un indicatore di direzione di riferimento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectionExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirectionExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectionExpression.#ctor(System.CodeDom.FieldDirection,System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirectionExpression" /> utilizzando l'espressione e la direzione del campo specificate.</summary>
      <param name="direction">
        <see cref="T:System.CodeDom.FieldDirection" /> che indica la direzione del campo dell'espressione.</param>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione del codice da rappresentare.</param>
    </member>
    <member name="P:System.CodeDom.CodeDirectionExpression.Direction">
      <summary>Ottiene o imposta la direzione del campo per questa espressione di direzione.</summary>
      <returns>
        <see cref="T:System.CodeDom.FieldDirection" /> che indica la direzione del campo dell'espressione di direzione.</returns>
    </member>
    <member name="P:System.CodeDom.CodeDirectionExpression.Expression">
      <summary>Ottiene o imposta l'espressione del codice da rappresentare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione da rappresentare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeDirective">
      <summary>Funge da classe base per le classi di direttive di codice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirective.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirective" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeDirectiveCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeDirective" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirectiveCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirective[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirectiveCollection" /> con gli oggetti della direttiva del codice nella matrice specificata.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeDirective" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirectiveCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeDirectiveCollection" /> con gli elementi nell'insieme della direttiva del codice specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Add(System.CodeDom.CodeDirective)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeDirective" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeDirective" /> da aggiungere.</param>
      <returns>Posizione di indice in corrispondenza della quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirective[])">
      <summary>Aggiunge una matrice di oggetti <see cref="T:System.CodeDom.CodeDirective" /> alla fine dell'insieme.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeDirective" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirectiveCollection)">
      <summary>Aggiunge il contenuto dell'oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> specificato alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente gli oggetti <see cref="T:System.CodeDom.CodeDirective" /> da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Contains(System.CodeDom.CodeDirective)">
      <summary>Restituisce un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeDirective" /> specificato.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeDirective" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.CopyTo(System.CodeDom.CodeDirective[],System.Int32)">
      <summary>Copia il contenuto dell'insieme in una matrice unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">Matrice di tipo <see cref="T:System.CodeDom.CodeDirective" /> che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice a partire dal quale iniziare l'inserimento degli oggetti dell'insieme.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi dell'oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificato dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.IndexOf(System.CodeDom.CodeDirective)">
      <summary>Ottiene l'indice nell'insieme dell'oggetto <see cref="T:System.CodeDom.CodeDirective" /> specificato, se esistente nell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeDirective" /> da individuare nell'insieme.</param>
      <returns>Posizione di indice nell'insieme dell'oggetto specificato, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Insert(System.Int32,System.CodeDom.CodeDirective)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeDirective" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Posizione di indice in base zero in corrispondenza della quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeDirective" /> da inserire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.CollectionBase.Count" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeDirectiveCollection.Remove(System.CodeDom.CodeDirective)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeDirective" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeDirective" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeDirectiveCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeDirective" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Posizione di indice alla quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo valido di posizioni di indice per l'insieme.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirective" /> in corrispondenza della posizione di indice.</returns>
    </member>
    <member name="T:System.CodeDom.CodeEntryPointMethod">
      <summary>Rappresenta il metodo del punto di ingresso di un eseguibile.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEntryPointMethod.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeEntryPointMethod" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeEventReferenceExpression">
      <summary>Rappresenta un riferimento a un evento.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEventReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeEventReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeEventReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> con l'oggetto di destinazione e il nome dell'evento specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene l'evento.</param>
      <param name="eventName">Nome dell'evento a cui fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeEventReferenceExpression.EventName">
      <summary>Ottiene o imposta il nome dell'evento.</summary>
      <returns>Nome dell'evento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeEventReferenceExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto che contiene l'evento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene l'evento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeExpression">
      <summary>Rappresenta un'espressione del codice. È una classe base per altri oggetti espressione del codice di cui non viene mai creata un'istanza.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpression" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeExpressionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpressionCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpressionCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeExpression" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpressionCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpressionCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Add(System.CodeDom.CodeExpression)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeExpression" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpression[])">
      <summary>Consente di copiare gli elementi della matrice specificata alla fine della raccolta.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeExpression" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpressionCollection)">
      <summary>Copia il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeExpressionCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeExpressionCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Contains(System.CodeDom.CodeExpression)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> da individuare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.CopyTo(System.CodeDom.CodeExpression[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza della <see cref="T:System.Array" /> unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeExpressionCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.IndexOf(System.CodeDom.CodeExpression)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> da individuare nell'insieme.</param>
      <returns>Indice dell'oggetto specificato, se presente nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Insert(System.Int32,System.CodeDom.CodeExpression)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeExpressionCollection.Remove(System.CodeDom.CodeExpression)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeExpressionCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeExpression" /> in corrispondenza di ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeExpressionStatement">
      <summary>Rappresenta un'istruzione costituita da un'unica espressione.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpressionStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeExpressionStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeExpressionStatement" /> utilizzando l'espressione specificata.</summary>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> per l'istruzione.</param>
    </member>
    <member name="P:System.CodeDom.CodeExpressionStatement.Expression">
      <summary>Ottiene o imposta l'espressione per l'istruzione.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione per l'istruzione.</returns>
    </member>
    <member name="T:System.CodeDom.CodeFieldReferenceExpression">
      <summary>Rappresenta un riferimento a un campo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeFieldReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeFieldReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeFieldReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeFieldReferenceExpression" /> con l'oggetto di destinazione e il nome di campo specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene il campo.</param>
      <param name="fieldName">Nome del campo.</param>
    </member>
    <member name="P:System.CodeDom.CodeFieldReferenceExpression.FieldName">
      <summary>Ottiene o imposta il nome del campo cui fare riferimento.</summary>
      <returns>Stringa contenente il nome del campo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeFieldReferenceExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto che contiene il campo cui fare riferimento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene il campo cui fare riferimento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeGotoStatement">
      <summary>Rappresenta un'istruzione <see langword="goto" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeGotoStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeGotoStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeGotoStatement.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.CodeDom.CodeGotoStatement" /> con il nome di etichetta specificato.</summary>
      <param name="label">Nome dell'etichetta in corrispondenza del quale proseguire l'esecuzione del programma.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Label" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.CodeDom.CodeGotoStatement.Label">
      <summary>Ottiene o imposta il nome dell'etichetta in corrispondenza della quale proseguire l'esecuzione del programma.</summary>
      <exception cref="T:System.ArgumentNullException">Non è possibile impostare l'etichetta perché <paramref name="value" /> è <see langword="null" /> o una stringa vuota.</exception>
      <returns>Stringa che indica il nome dell'etichetta in corrispondenza della quale proseguire l'esecuzione del programma.</returns>
    </member>
    <member name="T:System.CodeDom.CodeIndexerExpression">
      <summary>Rappresenta un riferimento a una proprietà indicizzatore di un oggetto.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIndexerExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeIndexerExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeIndexerExpression" /> con l'oggetto di destinazione e l'indice specificati.</summary>
      <param name="targetObject">Oggetto di destinazione.</param>
      <param name="indices">Indice o indici dell'espressione dell'indicizzatore.</param>
    </member>
    <member name="P:System.CodeDom.CodeIndexerExpression.Indices">
      <summary>Restituisce l'insieme di indici dell'espressione dell'indicizzatore.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che indica l'indice o gli indici dell'espressione dell'indicizzatore.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIndexerExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto di destinazione che può essere indicizzato.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto indicizzatore.</returns>
    </member>
    <member name="T:System.CodeDom.CodeIterationStatement">
      <summary>Rappresenta un'istruzione <see langword="for" /> o un ciclo in un blocco di istruzioni che utilizza un'espressione di test come condizione per la continuazione del ciclo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIterationStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeIterationStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeIterationStatement" /> tramite i parametri specificati.</summary>
      <param name="initStatement">
        <see cref="T:System.CodeDom.CodeStatement" /> che contiene l'istruzione di inizializzazione del ciclo.</param>
      <param name="testExpression">
        <see cref="T:System.CodeDom.CodeExpression" /> che contiene l'espressione da sottoporre a test per una condizione di uscita.</param>
      <param name="incrementStatement">
        <see cref="T:System.CodeDom.CodeStatement" /> che contiene l'istruzione di incremento per ciclo.</param>
      <param name="statements">Matrice di tipo <see cref="T:System.CodeDom.CodeStatement" /> che contiene le istruzioni all'interno del ciclo.</param>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.IncrementStatement">
      <summary>Ottiene o imposta l'istruzione che viene chiamata dopo ogni iterazione del ciclo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatement" /> che indica l'istruzione di incremento per ciclo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.InitStatement">
      <summary>Ottiene o imposta l'istruzione di inizializzazione del ciclo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatement" /> che indica l'istruzione di inizializzazione del ciclo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.Statements">
      <summary>Restituisce l'insieme di istruzioni da eseguire all'interno del ciclo.</summary>
      <returns>Matrice di tipo <see cref="T:System.CodeDom.CodeStatement" /> che indica le istruzioni all'interno del ciclo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeIterationStatement.TestExpression">
      <summary>Ottiene o imposta l'espressione da sottoporre a test come condizione per continuare il ciclo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione da sottoporre a test.</returns>
    </member>
    <member name="T:System.CodeDom.CodeLabeledStatement">
      <summary>Rappresenta un'istruzione con etichetta o un'etichetta autonoma.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeLabeledStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor(System.String)">
      <summary>Inizializza una nuova istanza di <see cref="T:System.CodeDom.CodeLabeledStatement" /> con il nome di etichetta specificato.</summary>
      <param name="label">Nome dell'etichetta.</param>
    </member>
    <member name="M:System.CodeDom.CodeLabeledStatement.#ctor(System.String,System.CodeDom.CodeStatement)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeLabeledStatement" /> utilizzando il nome dell'etichetta e l'istruzione specificati.</summary>
      <param name="label">Nome dell'etichetta.</param>
      <param name="statement">
        <see cref="T:System.CodeDom.CodeStatement" /> da associare all'etichetta.</param>
    </member>
    <member name="P:System.CodeDom.CodeLabeledStatement.Label">
      <summary>Ottiene o imposta il nome dell'etichetta.</summary>
      <returns>Nome dell'etichetta.</returns>
    </member>
    <member name="P:System.CodeDom.CodeLabeledStatement.Statement">
      <summary>Ottiene o imposta l'istruzione facoltativa associata.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatement" /> che indica l'istruzione associata all'etichetta.</returns>
    </member>
    <member name="T:System.CodeDom.CodeLinePragma">
      <summary>Rappresenta una posizione specifica all'interno di un determinato file.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLinePragma.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeLinePragma" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeLinePragma.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeLinePragma" />.</summary>
      <param name="fileName">Nome del file associato.</param>
      <param name="lineNumber">Numero della riga in cui memorizzare un riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeLinePragma.FileName">
      <summary>Ottiene o imposta il nome del file associato.</summary>
      <returns>Nome del file associato.</returns>
    </member>
    <member name="P:System.CodeDom.CodeLinePragma.LineNumber">
      <summary>Ottiene o imposta il numero di riga del riferimento associato.</summary>
      <returns>Numero di riga.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberEvent">
      <summary>Rappresenta una dichiarazione per un evento di un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberEvent.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberEvent" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.ImplementationTypes">
      <summary>Ottiene o imposta il tipo di dati implementati dall'evento membro.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che indica il tipo o i tipi di dati che l'evento membro implementa.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.PrivateImplementationType">
      <summary>Ottiene o imposta il tipo di dati implementati in modo privato, se presenti.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati che l'evento implementa in modo privato.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberEvent.Type">
      <summary>Ottiene o imposta il tipo di dati del tipo di delegato che gestisce l'evento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di delegato che gestisce l'evento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberField">
      <summary>Rappresenta una dichiarazione per un campo di un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberField" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberField" /> utilizzando il tipo e il nome di campo specificati.</summary>
      <param name="type">Oggetto che indica il tipo del campo.</param>
      <param name="name">Nome del campo.</param>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberField" /> utilizzando il tipo e il nome di campo specificati.</summary>
      <param name="type">Tipo del campo.</param>
      <param name="name">Nome del campo.</param>
    </member>
    <member name="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberField" /> utilizzando il tipo e il nome di campo specificati.</summary>
      <param name="type">Tipo del campo.</param>
      <param name="name">Nome del campo.</param>
    </member>
    <member name="P:System.CodeDom.CodeMemberField.InitExpression">
      <summary>Ottiene o imposta l'espressione di inizializzazione per il campo.</summary>
      <returns>Espressione di inizializzazione per il campo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberField.Type">
      <summary>Ottiene o imposta il tipo del campo.</summary>
      <returns>Tipo del campo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberMethod">
      <summary>Rappresenta una dichiarazione per un metodo di un tipo.</summary>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateImplementationTypes">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeMemberMethod.ImplementationTypes" />.</summary>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateParameters">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeMemberMethod.Parameters" />.</summary>
    </member>
    <member name="E:System.CodeDom.CodeMemberMethod.PopulateStatements">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeMemberMethod.Statements" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberMethod.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberMethod" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ImplementationTypes">
      <summary>Restituisce i tipi di dati delle interfacce implementate da questo metodo, a meno che si tratti dell'implementazione di un metodo privato, indicata dalla proprietà <see cref="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che indica le interfacce implementate da questo metodo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.Parameters">
      <summary>Restituisce le dichiarazioni dei parametri relativi al metodo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> che indica i parametri del metodo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.PrivateImplementationType">
      <summary>Ottiene o imposta il tipo di dati dell'interfaccia di cui il metodo, se privato, implementa un metodo, se esistente.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati dell'interfaccia con il metodo implementato dal metodo privato la cui dichiarazione è rappresentata da questo <see cref="T:System.CodeDom.CodeMemberMethod" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ReturnType">
      <summary>Ottiene o imposta il tipo di dati del valore restituito dal metodo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati del valore restituito dal metodo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes">
      <summary>Restituisce gli attributi personalizzati del tipo restituito dal metodo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica gli attributi personalizzati.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.Statements">
      <summary>Restituisce le istruzioni all'interno del metodo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che indica le istruzioni all'interno del metodo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberMethod.TypeParameters">
      <summary>Ottiene i parametri del tipo per il metodo generico corrente.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> che contiene i parametri del tipo del metodo generico.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMemberProperty">
      <summary>Rappresenta una dichiarazione di una proprietà di un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMemberProperty.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMemberProperty" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.GetStatements">
      <summary>Restituisce l'insieme delle istruzioni <see langword="get" /> della proprietà.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che contiene le istruzioni <see langword="get" /> per la proprietà del membro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.HasGet">
      <summary>Ottiene o imposta un valore che indica se la proprietà dispone di una funzione di accesso al metodo <see langword="get" />.</summary>
      <returns>
        <see langword="true" /> se la proprietà <see langword="Count" /> dell'insieme <see cref="P:System.CodeDom.CodeMemberProperty.GetStatements" /> è diversa da zero oppure se il valore di questa proprietà è stato impostato su <see langword="true" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.HasSet">
      <summary>Ottiene o imposta un valore che indica se la proprietà dispone di una funzione di accesso al metodo <see langword="set" />.</summary>
      <returns>
        <see langword="true" /> se la proprietà <see cref="P:System.Collections.CollectionBase.Count" /> dell'insieme <see cref="P:System.CodeDom.CodeMemberProperty.SetStatements" /> è diversa da zero; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.ImplementationTypes">
      <summary>Restituisce i tipi di dati di qualsiasi interfaccia implementata dalla proprietà.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che indica il tipo di dati implementato dalla proprietà.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.Parameters">
      <summary>Restituisce l'insieme delle espressioni di dichiarazione della proprietà.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> che indica le espressioni di dichiarazione per la proprietà.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.PrivateImplementationType">
      <summary>Ottiene o imposta il tipo di dati dell'interfaccia, se esistente, implementata da questa proprietà, se privata.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati dell'interfaccia, se esistente, implementata dalla proprietà, se privata.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.SetStatements">
      <summary>Restituisce l'insieme delle istruzioni <see langword="set" /> della proprietà.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che contiene le istruzioni <see langword="set" /> per la proprietà del membro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMemberProperty.Type">
      <summary>Ottiene o imposta il tipo di dati della proprietà.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della proprietà.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodInvokeExpression">
      <summary>Rappresenta un'espressione che richiama un metodo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodInvokeExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> con l'oggetto di destinazione, il nome del metodo e i parametri specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto di destinazione con il metodo da richiamare.</param>
      <param name="methodName">Nome del metodo da richiamare.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indicano i parametri con i quali richiamare il metodo.</param>
    </member>
    <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeMethodReferenceExpression,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodInvokeExpression" /> con i parametri e i metodi specificati.</summary>
      <param name="method">
        <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> che indica il metodo da richiamare.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indicano i parametri con i quali richiamare il metodo.</param>
    </member>
    <member name="P:System.CodeDom.CodeMethodInvokeExpression.Method">
      <summary>Ottiene o imposta il metodo da richiamare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> che indica il metodo da richiamare.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodInvokeExpression.Parameters">
      <summary>Restituisce i parametri con cui richiamare il metodo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che indica i parametri con cui richiamare il metodo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodReferenceExpression">
      <summary>Rappresenta un riferimento a un metodo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> con l'oggetto di destinazione e il nome del metodo specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto di destinazione.</param>
      <param name="methodName">Nome del metodo da chiamare.</param>
    </member>
    <member name="M:System.CodeDom.CodeMethodReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeTypeReference[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> utilizzando l'oggetto di destinazione, il nome del metodo e gli argomenti del tipo generici specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto di destinazione.</param>
      <param name="methodName">Nome del metodo da chiamare.</param>
      <param name="typeParameters">Matrice di valori <see cref="T:System.CodeDom.CodeTypeReference" /> che specificano gli argomenti <see cref="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments" /> per l'oggetto <see cref="T:System.CodeDom.CodeMethodReferenceExpression" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.MethodName">
      <summary>Ottiene o imposta il nome del metodo a cui fare riferimento.</summary>
      <returns>Nome del metodo a cui fare riferimento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.TargetObject">
      <summary>Ottiene o imposta l'espressione che indica il metodo a cui fare riferimento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta il metodo a cui fare riferimento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
      <summary>Ottiene gli argomenti del tipo per l'espressione di riferimento al metodo generico corrente.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che contiene gli argomenti del tipo dell'oggetto <see cref="T:System.CodeDom.CodeMethodReferenceExpression" /> del codice corrente.</returns>
    </member>
    <member name="T:System.CodeDom.CodeMethodReturnStatement">
      <summary>Rappresenta un'istruzione per la restituzione di valori.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReturnStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodReturnStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeMethodReturnStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeMethodReturnStatement" /> con l'espressione specificata.</summary>
      <param name="expression">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il valore restituito.</param>
    </member>
    <member name="P:System.CodeDom.CodeMethodReturnStatement.Expression">
      <summary>Ottiene o imposta il valore restituito.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il valore da restituire per l'istruzione return, oppure <see langword="null" /> se l'istruzione è parte di una subroutine.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespace">
      <summary>Rappresenta una dichiarazione dello spazio dei nomi.</summary>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateComments">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeNamespace.Comments" />.</summary>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateImports">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeNamespace.Imports" />.</summary>
    </member>
    <member name="E:System.CodeDom.CodeNamespace.PopulateTypes">
      <summary>Evento che verrà generato al primo accesso all'insieme <see cref="P:System.CodeDom.CodeNamespace.Types" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespace.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespace" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespace.#ctor(System.String)">
      <summary>Inizializza una nuova istanza per la classe <see cref="T:System.CodeDom.CodeNamespace" /> usando il nome specificato.</summary>
      <param name="name">Nome dello spazio dei nomi da dichiarare.</param>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Comments">
      <summary>Ottiene i commenti per lo spazio dei nomi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> che indica i commenti per lo spazio dei nomi.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Imports">
      <summary>Ottiene l'insieme delle direttive di importazione dello spazio dei nomi utilizzate dallo spazio dei nomi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeNamespaceImportCollection" /> che indica le direttive di importazione dello spazio dei nomi utilizzate dallo spazio dei nomi.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Name">
      <summary>Ottiene o imposta il nome dello spazio dei nomi.</summary>
      <returns>Nome dello spazio dei nomi.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespace.Types">
      <summary>Ottiene l'insieme dei tipi contenuti nello spazio dei nomi.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> che indica i tipi contenuti nello spazio dei nomi.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeNamespace" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespace[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeNamespace" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeNamespace" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">Uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespaceCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeNamespaceCollection" /> con la quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespace[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeNamespace" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeNamespace" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespaceCollection)">
      <summary>Aggiunge il contenuto dell'oggetto <see cref="T:System.CodeDom.CodeNamespaceCollection" /> specificato alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespaceCollection" /> che contiene gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Contains(System.CodeDom.CodeNamespace)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> è incluso nella raccolta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.CopyTo(System.CodeDom.CodeNamespace[],System.Int32)">
      <summary>Copia gli oggetti dell'insieme in un'istanza dell'oggetto <see cref="T:System.Array" /> unidimensionale, a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeNamespaceCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.IndexOf(System.CodeDom.CodeNamespace)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato in <see cref="T:System.CodeDom.CodeNamespaceCollection" />, se esistente.</summary>
      <param name="value">La classe <see cref="T:System.CodeDom.CodeNamespace" /> da individuare.</param>
      <returns>Indice dell'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato, se trovato nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Insert(System.Int32,System.CodeDom.CodeNamespace)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in cui inserire il nuovo elemento.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceCollection.Remove(System.CodeDom.CodeNamespace)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeNamespace" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeNamespaceCollection" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeNamespace" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceImport">
      <summary>Rappresenta una direttiva di importazione dello spazio dei nomi che indica uno spazio dei nomi da utilizzare.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImport.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceImport" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImport.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceImport" /> con lo spazio dei nomi specificato per l'importazione.</summary>
      <param name="nameSpace">Nome dello spazio dei nomi da importare.</param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImport.LinePragma">
      <summary>Ottiene o imposta la riga e il file in cui è presente l'istruzione.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeLinePragma" /> che indica il contesto dell'istruzione.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImport.Namespace">
      <summary>Ottiene o imposta lo spazio dei nomi da importare.</summary>
      <returns>Nome dello spazio dei nomi da importare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeNamespaceImportCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeNamespaceImport" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeNamespaceImportCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.Add(System.CodeDom.CodeNamespaceImport)">
      <summary>Aggiunge un oggetto <see cref="T:System.CodeDom.CodeNamespaceImport" /> alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeNamespaceImport" /> da aggiungere alla raccolta.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.AddRange(System.CodeDom.CodeNamespaceImport[])">
      <summary>Aggiunge un gruppo di oggetti <see cref="T:System.CodeDom.CodeNamespaceImport" /> alla raccolta.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeNamespaceImport" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.Clear">
      <summary>Consente di cancellare l'insieme di membri.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che enumera i membri dell'insieme.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> che indica i membri dell'insieme.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto unidimensionale <see cref="T:System.Array" /> che rappresenta la destinazione degli elementi copiati da <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che può scorrere una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un oggetto all'oggetto <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <returns>Posizione in cui il nuovo elemento è stato inserito.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.IList" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> se il valore è presente nell'elenco. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <returns>Indice di <paramref name="value" /> se si trova nell'elenco. In caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento nell'oggetto <see cref="T:System.Collections.IList" /> in corrispondenza della posizione specificata.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="value" /> deve essere inserito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da inserire in <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.</summary>
      <param name="value">Oggetto <see cref="T:System.Object" /> da rimuovere da <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.IList" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.Count">
      <summary>Restituisce il numero degli spazi dei nomi contenuti nell'insieme.</summary>
      <returns>Numero di spazi dei nomi nell'insieme.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeNamespaceImport" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeNamespaceImport" /> in corrispondenza di ciascun indice valido.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />. Questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Questa proprietà restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.IList" /> sono fisse; in caso contrario, <see langword="false" />.  Questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, <see langword="false" />.  Questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.CodeDom.CodeObject">
      <summary>Fornisce una classe base comune per la maggior parte degli oggetti CodeDOM (Code Document Object Model).</summary>
    </member>
    <member name="M:System.CodeDom.CodeObject.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeObject" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeObject.UserData">
      <summary>Ottiene i dati definibili dall'utente per l'oggetto corrente.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> che contiene i dati utente per l'oggetto corrente.</returns>
    </member>
    <member name="T:System.CodeDom.CodeObjectCreateExpression">
      <summary>Rappresenta un'espressione che consente di creare una nuova istanza di un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeObjectCreateExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> con i parametri e il tipo specificati.</summary>
      <param name="createType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati dell'oggetto da creare.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indica i parametri da utilizzare per creare l'oggetto.</param>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> con i parametri e il tipo specificati.</summary>
      <param name="createType">Nome del tipo di dati dell'oggetto da creare.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indica i parametri da utilizzare per creare l'oggetto.</param>
    </member>
    <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeObjectCreateExpression" /> con i parametri e il tipo specificati.</summary>
      <param name="createType">Tipo di dati dell'oggetto da creare.</param>
      <param name="parameters">Matrice di oggetti <see cref="T:System.CodeDom.CodeExpression" /> che indica i parametri da utilizzare per creare l'oggetto.</param>
    </member>
    <member name="P:System.CodeDom.CodeObjectCreateExpression.CreateType">
      <summary>Ottiene o imposta il tipo di oggetto da creare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati dell'oggetto da creare.</returns>
    </member>
    <member name="P:System.CodeDom.CodeObjectCreateExpression.Parameters">
      <summary>Ottiene o imposta i parametri da utilizzare nella creazione dell'oggetto.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpressionCollection" /> che indica i parametri da utilizzare per creare l'oggetto.</returns>
    </member>
    <member name="T:System.CodeDom.CodeParameterDeclarationExpression">
      <summary>Rappresenta una dichiarazione di parametro per un metodo, una proprietà o un costruttore.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> con il tipo e il nome di parametro specificati.</summary>
      <param name="type">Oggetto che indica il tipo del parametro da dichiarare.</param>
      <param name="name">Nome del parametro da dichiarare.</param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> con il tipo e il nome di parametro specificati.</summary>
      <param name="type">Tipo del parametro da dichiarare.</param>
      <param name="name">Nome del parametro da dichiarare.</param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> con il tipo e il nome di parametro specificati.</summary>
      <param name="type">Tipo del parametro da dichiarare.</param>
      <param name="name">Nome del parametro da dichiarare.</param>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes">
      <summary>Ottiene o imposta gli attributi personalizzati della dichiarazione di parametro.</summary>
      <returns>Oggetto che indica gli attributi personalizzati.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Direction">
      <summary>Ottiene o imposta la direzione del campo.</summary>
      <returns>Oggetto che indica la direzione del campo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Name">
      <summary>Ottiene o imposta il nome del parametro.</summary>
      <returns>Nome del parametro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpression.Type">
      <summary>Ottiene o imposta il tipo del parametro.</summary>
      <returns>Tipo del parametro.</returns>
    </member>
    <member name="T:System.CodeDom.CodeParameterDeclarationExpressionCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpression[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">uno o più oggetti della matrice sono <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Add(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpression[])">
      <summary>Consente di copiare gli elementi della matrice specificata alla fine della raccolta.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Aggiunge alla fine dell'insieme il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Contains(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Restituisce un valore che indica se l'insieme contiene l'argomento <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> da cercare all'interno dell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.CopyTo(System.CodeDom.CodeParameterDeclarationExpression[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza della <see cref="T:System.Array" /> unidimensionale a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.IndexOf(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Restituisce l'indice nell'insieme dell'oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> specificato, se esistente all'interno dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> da individuare nella raccolta.</param>
      <returns>Indice nell'insieme dell'oggetto specificato, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Insert(System.Int32,System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> specificato nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Remove(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeParameterDeclarationExpressionCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodePrimitiveExpression">
      <summary>Rappresenta un valore di tipo di dati primitivo.</summary>
    </member>
    <member name="M:System.CodeDom.CodePrimitiveExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodePrimitiveExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodePrimitiveExpression.#ctor(System.Object)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodePrimitiveExpression" /> utilizzando l'oggetto specificato.</summary>
      <param name="value">Oggetto da rappresentare.</param>
    </member>
    <member name="P:System.CodeDom.CodePrimitiveExpression.Value">
      <summary>Ottiene o imposta il tipo di dati primitivo da rappresentare.</summary>
      <returns>Istanza del tipo di dati primitivo di cui rappresentare il valore.</returns>
    </member>
    <member name="T:System.CodeDom.CodePropertyReferenceExpression">
      <summary>Rappresenta un riferimento al valore di una proprietà.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertyReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodePropertyReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertyReferenceExpression.#ctor(System.CodeDom.CodeExpression,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodePropertyReferenceExpression" /> con l'oggetto di destinazione e il nome di proprietà specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto contenente la proprietà a cui fare riferimento.</param>
      <param name="propertyName">Nome della proprietà cui fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodePropertyReferenceExpression.PropertyName">
      <summary>Ottiene o imposta il nome della proprietà cui fare riferimento.</summary>
      <returns>Nome della proprietà cui fare riferimento.</returns>
    </member>
    <member name="P:System.CodeDom.CodePropertyReferenceExpression.TargetObject">
      <summary>Ottiene o imposta l'oggetto che contiene la proprietà a cui fare riferimento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto contenente la proprietà a cui fare riferimento.</returns>
    </member>
    <member name="T:System.CodeDom.CodePropertySetValueReferenceExpression">
      <summary>Rappresenta l'argomento valore di una chiamata al metodo per l'impostazione di proprietà all'interno di un metodo per l'impostazione di proprietà.</summary>
    </member>
    <member name="M:System.CodeDom.CodePropertySetValueReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeRegionDirective">
      <summary>Specifica nome e modalità di una direttiva region del codice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRegionDirective.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeRegionDirective" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRegionDirective.#ctor(System.CodeDom.CodeRegionMode,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeRegionDirective" />, specificandone modalità e nome.</summary>
      <param name="regionMode">Uno dei valori di <see cref="T:System.CodeDom.CodeRegionMode" />.</param>
      <param name="regionText">Nome dell'area.</param>
    </member>
    <member name="P:System.CodeDom.CodeRegionDirective.RegionMode">
      <summary>Ottiene o imposta la modalità per la direttiva region.</summary>
      <returns>Uno dei valori di <see cref="T:System.CodeDom.CodeRegionMode" />. Il valore predefinito è <see cref="F:System.CodeDom.CodeRegionMode.None" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeRegionDirective.RegionText">
      <summary>Ottiene o imposta il nome dell'area.</summary>
      <returns>Il nome dell'area.</returns>
    </member>
    <member name="T:System.CodeDom.CodeRegionMode">
      <summary>Specifica l'inizio o la fine di un'area di codice.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.End">
      <summary>Fine dell'area.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.None">
      <summary>Non usato.</summary>
    </member>
    <member name="F:System.CodeDom.CodeRegionMode.Start">
      <summary>Inizio dell'area.</summary>
    </member>
    <member name="T:System.CodeDom.CodeRemoveEventStatement">
      <summary>Rappresenta un'istruzione che rimuove un gestore eventi.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeRemoveEventStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeRemoveEventStatement" /> con l'evento e il gestore eventi specificati.</summary>
      <param name="eventRef">
        <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> che indica l'evento da cui disconnettere il gestore eventi.</param>
      <param name="listener">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il gestore eventi da rimuovere.</param>
    </member>
    <member name="M:System.CodeDom.CodeRemoveEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeRemoveEventStatement" /> utilizzando l'oggetto di destinazione, il nome dell'evento e il gestore eventi specificati.</summary>
      <param name="targetObject">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'oggetto che contiene l'evento.</param>
      <param name="eventName">Nome dell'evento.</param>
      <param name="listener">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il gestore eventi da rimuovere.</param>
    </member>
    <member name="P:System.CodeDom.CodeRemoveEventStatement.Event">
      <summary>Ottiene o imposta l'evento dal quale rimuovere un listener.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> che indica l'evento da cui rimuovere un listener.</returns>
    </member>
    <member name="P:System.CodeDom.CodeRemoveEventStatement.Listener">
      <summary>Ottiene o imposta il gestore eventi da rimuovere.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica il gestore eventi da rimuovere.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetCompileUnit">
      <summary>Rappresenta un frammento di codice letterale che può essere compilato.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetCompileUnit.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetCompileUnit" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetCompileUnit.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetCompileUnit" />.</summary>
      <param name="value">Frammento di codice letterale da rappresentare.</param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetCompileUnit.LinePragma">
      <summary>Ottiene o imposta le informazioni sulla riga e sul file relative alla posizione del codice in un documento di codice sorgente.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeLinePragma" /> che indica la posizione del frammento di codice.</returns>
    </member>
    <member name="P:System.CodeDom.CodeSnippetCompileUnit.Value">
      <summary>Ottiene o imposta il frammento di codice letterale da rappresentare.</summary>
      <returns>Frammento di codice letterale.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetExpression">
      <summary>Rappresenta un'espressione letterale.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetExpression.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetExpression" /> con l'espressione letterale specificata.</summary>
      <param name="value">Espressione letterale da rappresentare.</param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetExpression.Value">
      <summary>Ottiene o imposta la stringa letterale di codice.</summary>
      <returns>Stringa letterale.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetStatement">
      <summary>Rappresenta un'istruzione con un frammento di codice letterale.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetStatement.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetStatement" /> con il frammento di codice specificato.</summary>
      <param name="value">Frammento di codice letterale dell'istruzione da rappresentare.</param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetStatement.Value">
      <summary>Ottiene o imposta l'istruzione con il frammento di codice letterale.</summary>
      <returns>Istruzione con il frammento di codice letterale.</returns>
    </member>
    <member name="T:System.CodeDom.CodeSnippetTypeMember">
      <summary>Rappresenta un membro di un tipo che utilizza un frammento di codice letterale.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetTypeMember.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetTypeMember" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> con il testo specificato.</summary>
      <param name="text">Frammento di codice letterale per il membro del tipo.</param>
    </member>
    <member name="P:System.CodeDom.CodeSnippetTypeMember.Text">
      <summary>Ottiene o imposta il frammento di codice letterale per il membro del tipo.</summary>
      <returns>Frammento di codice letterale per il membro del tipo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeStatement">
      <summary>Rappresenta la classe base <see langword="abstract" /> da cui derivano tutte le istruzioni di codice.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeStatement" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeStatement.EndDirectives">
      <summary>Ottiene un oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive finali.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive finali.</returns>
    </member>
    <member name="P:System.CodeDom.CodeStatement.LinePragma">
      <summary>Ottiene o imposta la riga in cui si verifica l'istruzione di codice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeLinePragma" /> che indica il contesto dell'istruzione di codice.</returns>
    </member>
    <member name="P:System.CodeDom.CodeStatement.StartDirectives">
      <summary>Ottiene un oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive iniziali.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive iniziali.</returns>
    </member>
    <member name="T:System.CodeDom.CodeStatementCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeStatementCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatement[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeStatementCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeStatement" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatementCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeStatementCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeExpression)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeExpression" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeExpression" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeStatement" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeStatement" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatement[])">
      <summary>Aggiunge un gruppo di oggetti <see cref="T:System.CodeDom.CodeStatement" /> alla raccolta.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> da aggiungere alla raccolta.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatementCollection)">
      <summary>Aggiunge il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Contains(System.CodeDom.CodeStatement)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeStatement" /> specificato.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeStatement" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.CopyTo(System.CodeDom.CodeStatement[],System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.CodeDom.CodeStatementCollection" /> in un'istanza di <see cref="T:System.Array" /> unidimensionale, a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeStatementCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.IndexOf(System.CodeDom.CodeStatement)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeStatement" /> specificato in <see cref="T:System.CodeDom.CodeStatementCollection" />, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> da individuare nella raccolta.</param>
      <returns>Indice dell'oggetto specificato, se trovato nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Insert(System.Int32,System.CodeDom.CodeStatement)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeStatement" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeStatementCollection.Remove(System.CodeDom.CodeStatement)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeStatement" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeStatementCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeStatement" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeStatement" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeThisReferenceExpression">
      <summary>Rappresenta un riferimento all'istanza della classe locale corrente.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThisReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeThisReferenceExpression" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeThrowExceptionStatement">
      <summary>Rappresenta un'istruzione che lancia un'eccezione.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThrowExceptionStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeThrowExceptionStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeThrowExceptionStatement.#ctor(System.CodeDom.CodeExpression)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeThrowExceptionStatement" /> con l'istanza del tipo di eccezione specificata.</summary>
      <param name="toThrow">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'eccezione da lanciare.</param>
    </member>
    <member name="P:System.CodeDom.CodeThrowExceptionStatement.ToThrow">
      <summary>Ottiene o imposta l'eccezione da generare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che rappresenta un'istanza dell'eccezione da generare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTryCatchFinallyStatement">
      <summary>Rappresenta un blocco <see langword="try" /> con un numero qualsiasi di clausole <see langword="catch" /> ed eventualmente un blocco <see langword="finally" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /> con le istruzioni specificate per le clausole try e catch.</summary>
      <param name="tryStatements">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> che indicano le istruzioni da provare.</param>
      <param name="catchClauses">Matrice di oggetti <see cref="T:System.CodeDom.CodeCatchClause" /> che indicano le clausole da intercettare.</param>
    </member>
    <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement" /> con le istruzioni specificate per le clausole try e catch e le istruzioni finally.</summary>
      <param name="tryStatements">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> che indicano le istruzioni da provare.</param>
      <param name="catchClauses">Matrice di oggetti <see cref="T:System.CodeDom.CodeCatchClause" /> che indicano le clausole da intercettare.</param>
      <param name="finallyStatements">Matrice di oggetti <see cref="T:System.CodeDom.CodeStatement" /> che indicano le istruzioni finally da utilizzare.</param>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.CatchClauses">
      <summary>Restituisce le clausole catch da utilizzare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeCatchClauseCollection" /> che indica le clausole catch da utilizzare.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.FinallyStatements">
      <summary>Restituisce le istruzioni finally da utilizzare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che indica le istruzioni finally.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTryCatchFinallyStatement.TryStatements">
      <summary>Restituisce le istruzioni da provare.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeStatementCollection" /> che indica le istruzioni da provare.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeConstructor">
      <summary>Rappresenta un costruttore statico per una classe.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeConstructor.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeConstructor" />.</summary>
    </member>
    <member name="T:System.CodeDom.CodeTypeDeclaration">
      <summary>Rappresenta una dichiarazione del tipo per una classe, una struttura, un'interfaccia o un'enumerazione.</summary>
    </member>
    <member name="E:System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes">
      <summary>Si verifica quando si accede per la prima volta all'insieme <see cref="P:System.CodeDom.CodeTypeDeclaration.BaseTypes" />.</summary>
    </member>
    <member name="E:System.CodeDom.CodeTypeDeclaration.PopulateMembers">
      <summary>Si verifica quando si accede per la prima volta all'insieme <see cref="P:System.CodeDom.CodeTypeDeclaration.Members" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclaration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDeclaration" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclaration.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDeclaration" /> con il nome specificato.</summary>
      <param name="name">Nome del nuovo tipo.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.BaseTypes">
      <summary>Ottiene i tipi di base del tipo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che indica i tipi di base del tipo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsClass">
      <summary>Ottiene o imposta un valore che indica se il tipo è una classe o un tipo di riferimento.</summary>
      <returns>
        <see langword="true" /> se il tipo è una classe o un tipo di riferimento; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsEnum">
      <summary>Ottiene o imposta un valore che indica se il tipo è un'enumerazione.</summary>
      <returns>
        <see langword="true" /> se il tipo è un'enumerazione; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsInterface">
      <summary>Ottiene o imposta un valore che indica se il tipo è un'interfaccia.</summary>
      <returns>
        <see langword="true" /> se il tipo è un'interfaccia; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsPartial">
      <summary>Ottiene o imposta un valore che indica se la dichiarazione del tipo è completa o parziale.</summary>
      <returns>
        <see langword="true" /> se la dichiarazione della classe o della struttura è una rappresentazione parziale dell'implementazione; <see langword="false" /> se la dichiarazione è un'implementazione completa della classe o della struttura. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.IsStruct">
      <summary>Ottiene o imposta un valore che indica se il tipo è un tipo di valore, ad esempio una struttura.</summary>
      <returns>
        <see langword="true" /> se il tipo è un tipo di valore; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.Members">
      <summary>Restituisce l'insieme dei membri della classe per il tipo rappresentato.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> che indica i membri della classe.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.TypeAttributes">
      <summary>Ottiene o imposta gli attributi del tipo.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.TypeAttributes" /> che indica gli attributi del tipo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclaration.TypeParameters">
      <summary>Ottiene i parametri del tipo per la dichiarazione del tipo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> che contiene i parametri del tipo per la dichiarazione del tipo.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeDeclarationCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeTypeDeclaration" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeTypeDeclaration" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeTypeDeclaration" /> con cui inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> con il quale inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> specificato alla raccolta.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])">
      <summary>Consente di copiare gli elementi della matrice specificata alla fine della raccolta.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeTypeDeclaration" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclarationCollection)">
      <summary>Aggiunge il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> specificato.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.CopyTo(System.CodeDom.CodeTypeDeclaration[],System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> in un'istanza di <see cref="T:System.Array" /> unidimensionale, a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> specificato in <see cref="T:System.CodeDom.CodeTypeDeclarationCollection" />, se esistente.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> da individuare nella raccolta.</param>
      <returns>Indice dell'oggetto specificato, se trovato nell'insieme, in caso contrario -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeTypeDeclaration)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Remove(System.CodeDom.CodeTypeDeclaration)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeTypeDeclarationCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeDeclaration" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeDelegate">
      <summary>Rappresenta una dichiarazione delegata.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDelegate.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDelegate" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeDelegate.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeDelegate" />.</summary>
      <param name="name">Nome del delegato.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeDelegate.Parameters">
      <summary>Restituisce i parametri del delegato.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" /> che indica i parametri del delegato.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeDelegate.ReturnType">
      <summary>Ottiene o imposta il tipo restituito del delegato.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo restituito del delegato.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeMember">
      <summary>Fornisce una classe base per un membro di un tipo. I membri di un tipo comprendono campi, metodi, proprietà, costruttori e tipi annidati.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMember.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeMember" />.</summary>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Attributes">
      <summary>Ottiene o imposta gli attributi del membro.</summary>
      <returns>Combinazione bit per bit dei valori <see cref="T:System.CodeDom.MemberAttributes" /> utilizzati per indicare gli attributi del membro. Il valore predefinito è <see cref="F:System.CodeDom.MemberAttributes.Private" /> | <see cref="F:System.CodeDom.MemberAttributes.Final" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Comments">
      <summary>Ottiene l'insieme di commenti per il membro del tipo.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> che indica i commenti per il membro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.CustomAttributes">
      <summary>Ottiene o imposta gli attributi personalizzati del membro.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica gli attributi personalizzati del membro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.EndDirectives">
      <summary>Ottiene le direttive finali per il membro.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive finali.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.LinePragma">
      <summary>Ottiene o imposta la riga in cui è contenuta l'istruzione per il membro del tipo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeLinePragma" /> che indica la posizione della dichiarazione del membro del tipo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.Name">
      <summary>Ottiene o imposta il nome del membro.</summary>
      <returns>Nome del membro.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeMember.StartDirectives">
      <summary>Ottiene le direttive iniziali per il membro.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeDirectiveCollection" /> contenente le direttive iniziali.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeMemberCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeTypeMember" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeMemberCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMember[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeTypeMember" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeTypeMember" /> con cui inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMemberCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> con il quale inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Add(System.CodeDom.CodeTypeMember)">
      <summary>Consente di aggiungere all'insieme un oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> con il valore specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMember[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeTypeMember" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeTypeMember" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMemberCollection)">
      <summary>Aggiunge alla fine dell'insieme il contenuto di un altro oggetto <see cref="T:System.CodeDom.CodeTypeMemberCollection" />.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Contains(System.CodeDom.CodeTypeMember)">
      <summary>Restituisce un valore che indica se l'insieme contiene l'argomento <see cref="T:System.CodeDom.CodeTypeMember" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'insieme contiene l'oggetto specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.CopyTo(System.CodeDom.CodeTypeMember[],System.Int32)">
      <summary>Consente di copiare gli oggetti dell'insieme in un'istanza di <see cref="T:System.Array" /> unidimensionale, a partire dall'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">La matrice di destinazione è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.IndexOf(System.CodeDom.CodeTypeMember)">
      <summary>Restituisce l'indice nell'insieme dell'oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> specificato, se esistente all'interno dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> da individuare nella raccolta.</param>
      <returns>Indice nell'insieme dell'oggetto specificato, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Insert(System.Int32,System.CodeDom.CodeTypeMember)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> specificato nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'oggetto specificato.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeMemberCollection.Remove(System.CodeDom.CodeTypeMember)">
      <summary>Rimuove dall'insieme un oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeTypeMemberCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeMember" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeOfExpression">
      <summary>Rappresenta un'espressione <see langword="typeof" /> che restituisce un oggetto <see cref="T:System.Type" /> per un nome di tipo specificato.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeOfExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeOfExpression" />.</summary>
      <param name="type">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati dell'espressione <see langword="typeof" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeOfExpression" /> utilizzando il tipo specificato.</summary>
      <param name="type">Nome del tipo di dati dell'espressione <see langword="typeof" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeOfExpression" /> utilizzando il tipo specificato.</summary>
      <param name="type">Tipo di dati del tipo di dati dell'espressione <see langword="typeof" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeOfExpression.Type">
      <summary>Ottiene o imposta il tipo di dati cui fa riferimento l'espressione <see langword="typeof" />.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati cui fa riferimento l'espressione <see langword="typeof" />. La proprietà non restituirà mai <see langword="null" /> e l'impostazione predefinita sarà il tipo <see cref="T:System.Void" />.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeParameter">
      <summary>Rappresenta un parametro del tipo di un tipo o metodo generico.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeParameter" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameter.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeParameter" /> con il nome del parametro del tipo specificato.</summary>
      <param name="name">Nome del parametro di tipo.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.Constraints">
      <summary>Ottiene i vincoli per il parametro del tipo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> che contiene i vincoli per il parametro del tipo.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.CustomAttributes">
      <summary>Ottiene gli attributi personalizzati per il parametro del tipo.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica gli attributi personalizzati del parametro del tipo. Il valore predefinito è <see langword="null" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.HasConstructorConstraint">
      <summary>Ottiene o imposta un valore che indica se al parametro del tipo è associato un vincolo constructor.</summary>
      <returns>
        <see langword="true" /> se al parametro del tipo è associato un vincolo constructor; altrimenti <see langword="false" />. Il valore predefinito è <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameter.Name">
      <summary>Ottiene o imposta il nome del parametro del tipo.</summary>
      <returns>Nome del parametro di tipo. Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeParameterCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeTypeParameter" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.CodeDom.CodeTypeParameterCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameter[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeTypeParameter" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeTypeParameter" /> con cui inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameterCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> con il quale inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Add(System.CodeDom.CodeTypeParameter)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> da aggiungere.</param>
      <returns>Indice a base zero in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Add(System.String)">
      <summary>Aggiunge all'insieme l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato utilizzando il nome del tipo di dati specificato.</summary>
      <param name="value">Nome di un tipo di dati per il quale aggiungere l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> all’insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameter[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeTypeParameter" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeTypeParameter" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameterCollection)">
      <summary>Copia gli elementi della classe <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> contenente gli oggetti <see cref="T:System.CodeDom.CodeTypeParameter" /> da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Contains(System.CodeDom.CodeTypeParameter)">
      <summary>Determina se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> è incluso nell'insieme, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.CopyTo(System.CodeDom.CodeTypeParameter[],System.Int32)">
      <summary>Consente di copiare gli elementi nell'insieme nella <see cref="T:System.Array" /> unidimensionale specificata in corrispondenza dell'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
Il numero degli elementi dell'oggetto <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificato dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.IndexOf(System.CodeDom.CodeTypeParameter)">
      <summary>Ottiene l'indice nell'insieme dell'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato, se esistente nell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> da individuare nell'insieme.</param>
      <returns>Indice a base zero dell'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato dell'insieme, se trovato; altrimenti -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Insert(System.Int32,System.CodeDom.CodeTypeParameter)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale inserire l'elemento.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeParameterCollection.Remove(System.CodeDom.CodeTypeParameter)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeTypeParameterCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> nella raccolta, in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice a base zero dell'oggetto Collection al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReference">
      <summary>Rappresenta un riferimento a un tipo.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il parametro del tipo di codice specificato.</summary>
      <param name="typeParameter">Oggetto <see cref="T:System.CodeDom.CodeTypeParameter" /> che rappresenta il tipo del parametro del tipo.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il tipo matrice e il numero di dimensioni specificati.</summary>
      <param name="arrayType">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo della matrice da creare.</param>
      <param name="rank">Numero di dimensioni nella matrice.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il nome del tipo specificato.</summary>
      <param name="typeName">Il nome del tipo al quale fare riferimento.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il nome del tipo e gli argomenti del tipo specificati.</summary>
      <param name="typeName">Il nome del tipo al quale fare riferimento.</param>
      <param name="typeArguments">Matrice di valori <see cref="T:System.CodeDom.CodeTypeReference" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il nome del tipo e l'opzione di riferimento al tipo di codice specificati.</summary>
      <param name="typeName">Il nome del tipo al quale fare riferimento.</param>
      <param name="codeTypeReferenceOption">Opzione di riferimento al tipo di codice, vale a dire uno dei valori di <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il nome del tipo matrice e il numero di dimensioni specificati.</summary>
      <param name="baseType">Nome del tipo degli elementi della matrice.</param>
      <param name="rank">Numero di dimensioni della matrice.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> a cui fare riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReference" /> utilizzando il tipo e il riferimento al tipo di codice specificati.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> a cui fare riferimento.</param>
      <param name="codeTypeReferenceOption">Opzione di riferimento al tipo di codice, vale a dire uno dei valori di <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.ArrayElementType">
      <summary>Ottiene o imposta il tipo degli elementi della matrice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo degli elementi della matrice.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.ArrayRank">
      <summary>Ottiene o imposta il rango della matrice.</summary>
      <returns>Numero di dimensioni della matrice.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.BaseType">
      <summary>Ottiene o imposta il nome del tipo al quale viene fatto riferimento.</summary>
      <returns>Nome del tipo a cui si fa riferimento.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.Options">
      <summary>Ottiene o imposta l'opzione di riferimento al tipo di codice.</summary>
      <returns>Combinazione bit per bit dei valori di <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />.</returns>
    </member>
    <member name="P:System.CodeDom.CodeTypeReference.TypeArguments">
      <summary>Ottiene gli argomenti del tipo per il riferimento al tipo generico corrente.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> contenente gli argomenti del tipo per l'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> corrente.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReference[])">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.CodeTypeReference" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.CodeTypeReference" /> con cui inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReferenceCollection)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> contenente gli elementi dell'insieme di origine specificato.</summary>
      <param name="value">
        <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> con il quale inizializzare l'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.CodeDom.CodeTypeReference)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato alla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.String)">
      <summary>Consente di aggiungere un oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> all’insieme utilizzando il nome del tipo di dati specificato.</summary>
      <param name="value">Nome di un tipo di dati per il quale aggiungere un <see cref="T:System.CodeDom.CodeTypeReference" /> all’insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.Type)">
      <summary>Consente di aggiungere un <see cref="T:System.CodeDom.CodeTypeReference" /> all'insieme utilizzando il tipo di dati specificato.</summary>
      <param name="value">Tipo di dati per il quale aggiungere un <see cref="T:System.CodeDom.CodeTypeReference" /> all'insieme.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReference[])">
      <summary>Copia gli elementi della matrice di oggetti <see cref="T:System.CodeDom.CodeTypeReference" /> specificata alla fine dell'insieme.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.CodeTypeReference" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReferenceCollection)">
      <summary>Consente di aggiungere alla fine dell'insieme il contenuto dell'oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Contains(System.CodeDom.CodeTypeReference)">
      <summary>Restituisce un valore che indica se l'insieme contiene l'argomento <see cref="T:System.CodeDom.CodeTypeReference" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> da cercare nell'insieme.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> è incluso nella raccolta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.CopyTo(System.CodeDom.CodeTypeReference[],System.Int32)">
      <summary>Consente di copiare gli elementi nell'insieme nella <see cref="T:System.Array" /> unidimensionale specificata in corrispondenza dell'indice specificato.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione dei valori copiati dall'insieme.</param>
      <param name="index">Indice della matrice da cui iniziare l'inserimento.</param>
      <exception cref="T:System.ArgumentException">Il parametro <paramref name="array" /> è multidimensionale.  
  
-oppure- 
Il numero degli elementi in <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> è maggiore dello spazio disponibile tra l'indice della matrice di destinazione specificata dal parametro <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore dell'indice minimo della matrice di destinazione.</exception>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.IndexOf(System.CodeDom.CodeTypeReference)">
      <summary>Restituisce l'indice nell'insieme dell'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato, se esistente all'interno dell'insieme.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> da individuare nella raccolta.</param>
      <returns>Indice dell'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato nell'insieme, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Insert(System.Int32,System.CodeDom.CodeTypeReference)">
      <summary>Inserisce un oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> nella raccolta in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in cui inserire l'elemento.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceCollection.Remove(System.CodeDom.CodeTypeReference)">
      <summary>Rimuove l'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato dalla raccolta.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> da rimuovere dalla raccolta.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.CodeTypeReferenceCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice dell'insieme al quale accedere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> non è compreso nell'intervallo valido di indici per la raccolta.</exception>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceExpression">
      <summary>Rappresenta un riferimento a un tipo di dati.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.CodeDom.CodeTypeReference)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> utilizzando il tipo specificato.</summary>
      <param name="type">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati al quale fare riferimento.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceExpression" />  con il nome del tipo di dati specificato.</summary>
      <param name="type">Nome del tipo di dati a cui fare riferimento.</param>
    </member>
    <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.Type)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeTypeReferenceExpression" /> con il tipo di dati specificato.</summary>
      <param name="type">Istanza del tipo di dati al quale fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeTypeReferenceExpression.Type">
      <summary>Ottiene o imposta il tipo di dati al quale fare riferimento.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati al quale fare riferimento.</returns>
    </member>
    <member name="T:System.CodeDom.CodeTypeReferenceOptions">
      <summary>Specifica come risolvere il riferimento al tipo di codice.</summary>
    </member>
    <member name="F:System.CodeDom.CodeTypeReferenceOptions.GenericTypeParameter">
      <summary>Risolve il tipo dal parametro di tipo.</summary>
    </member>
    <member name="F:System.CodeDom.CodeTypeReferenceOptions.GlobalReference">
      <summary>Risolve il tipo dallo spazio dei nomi di primo livello.</summary>
    </member>
    <member name="T:System.CodeDom.CodeVariableDeclarationStatement">
      <summary>Rappresenta una dichiarazione di variabile.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il tipo e il nome specificati.</summary>
      <param name="type">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della variabile.</param>
      <param name="name">Nome della variabile.</param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.CodeDom.CodeTypeReference,System.String,System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il tipo di dati, il nome di variabile e l'espressione di inizializzazione specificati.</summary>
      <param name="type">
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo della variabile.</param>
      <param name="name">Nome della variabile.</param>
      <param name="initExpression">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione di inizializzazione per la variabile.</param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il nome del tipo di dati e il nome di variabile specificati.</summary>
      <param name="type">Nome del tipo di dati della variabile.</param>
      <param name="name">Nome della variabile.</param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.String,System.String,System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il tipo di dati, il nome di variabile e l'espressione di inizializzazione specificati.</summary>
      <param name="type">Nome del tipo di dati della variabile.</param>
      <param name="name">Nome della variabile.</param>
      <param name="initExpression">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione di inizializzazione per la variabile.</param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il tipo di dati e il nome di variabile specificati.</summary>
      <param name="type">Tipo di dati della variabile.</param>
      <param name="name">Nome della variabile.</param>
    </member>
    <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableDeclarationStatement" /> con il tipo di dati, il nome di variabile e l'espressione di inizializzazione specificati.</summary>
      <param name="type">Tipo di dati della variabile.</param>
      <param name="name">Nome della variabile.</param>
      <param name="initExpression">
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione di inizializzazione per la variabile.</param>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.InitExpression">
      <summary>Ottiene o imposta l'espressione di inizializzazione per la variabile.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione di inizializzazione per la variabile.</returns>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.Name">
      <summary>Ottiene o imposta il nome della variabile.</summary>
      <returns>Nome della variabile.</returns>
    </member>
    <member name="P:System.CodeDom.CodeVariableDeclarationStatement.Type">
      <summary>Ottiene o imposta il tipo di dati della variabile.</summary>
      <returns>
        <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo di dati della variabile.</returns>
    </member>
    <member name="T:System.CodeDom.CodeVariableReferenceExpression">
      <summary>Rappresenta un riferimento a una variabile locale.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableReferenceExpression.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableReferenceExpression" />.</summary>
    </member>
    <member name="M:System.CodeDom.CodeVariableReferenceExpression.#ctor(System.String)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.CodeDom.CodeVariableReferenceExpression" />con il nome di variabile locale specificato.</summary>
      <param name="variableName">Il nome della variabile locale a cui fare riferimento.</param>
    </member>
    <member name="P:System.CodeDom.CodeVariableReferenceExpression.VariableName">
      <summary>Ottiene o imposta il nome della variabile locale alla quale fare riferimento.</summary>
      <returns>Il nome della variabile locale a cui fare riferimento.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeCompiler">
      <summary>Fornisce un'implementazione di esempio dell'interfaccia <see cref="T:System.CodeDom.Compiler.ICodeCompiler" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeCompiler" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.CmdArgsFromParameters(System.CodeDom.Compiler.CompilerParameters)">
      <summary>Ottiene gli argomenti di comando che devono essere passati al compilatore dall'oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni di compilazione.</param>
      <returns>Argomenti di comando.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>Compila l'unità di compilazione specificata utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compila le unità di compilazione specificate utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="ea">Matrice di oggetti <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="ea" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compila il file specificato utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="fileName">Nome del file da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fileName" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila i file specificati utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="fileNames">Matrice di stringhe che indica i nomi dei file da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="fileNames" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compila la stringa di codice sorgente specificata utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="source">Stringa di codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila le stringhe di codice sorgente specificate utilizzando le opzioni selezionate e restituisce i risultati della compilazione.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="sources">Matrice di stringhe contenente il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="sources" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.GetResponseFileCmdArgs(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Ottiene gli argomenti di comando da utilizzare quando viene richiamato il compilatore per generare un file di risposta.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="cmdArgs">Stringa di argomenti di comando.</param>
      <returns>Gli argomenti di comando utilizzati per generare un file di risposta oppure <see langword="null" />, in assenza di argomenti relativi al file di risposta.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.JoinStringArray(System.String[],System.String)">
      <summary>Unisce le matrici di stringhe specificate.</summary>
      <param name="sa">Matrice di stringhe da unire.</param>
      <param name="separator">Il separatore da utilizzare.</param>
      <returns>Stringa concatenata.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.ProcessCompilerOutputLine(System.CodeDom.Compiler.CompilerResults,System.String)">
      <summary>Elabora la riga specificata dell'oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> indicato.</summary>
      <param name="results">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</param>
      <param name="line">Riga da elaborare.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="ea">Matrice di oggetti <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice sorgente da compilare.</param>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="fileName">Nome del file da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="fileNames">Matrice di stringhe che indica i nomi dei file da compilare.</param>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="source">Oggetto che indica il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Per una descrizione di questo membro, vedere <see cref="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])" />.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le opzioni del compilatore.</param>
      <param name="sources">Matrice di stringhe che indica il codice sorgente da compilare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="options" /> è <see langword="null" />.</exception>
      <returns>Risultati della compilazione.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeCompiler.CompilerName">
      <summary>Ottiene il nome dell'eseguibile del compilatore.</summary>
      <returns>Nome dell'eseguibile del compilatore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeCompiler.FileExtension">
      <summary>Ottiene l'estensione del nome file da utilizzare per i file di origine.</summary>
      <returns>Estensione del nome file da utilizzare per i file di origine.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeDomProvider">
      <summary>Fornisce una classe base per le implementazioni di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />. Questa classe è astratta.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compila un assembly in base alle strutture ad albero <see cref="N:System.CodeDom" /> contenute nella matrice di oggetti <see cref="T:System.CodeDom.CodeCompileUnit" /> specificata utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="compilationUnits">Matrice di tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice da compilare.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila un assembly dal codice sorgente contenuto nei file specificati, utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="fileNames">Matrice dei nomi dei file da compilare.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila un assembly dalla matrice di stringhe specificata contenente il codice sorgente utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni del compilatore per la compilazione.</param>
      <param name="sources">Matrice di stringhe del codice sorgente da compilare.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler">
      <summary>Quando è sottoposto a override in una classe derivata, crea un nuovo compilatore di codice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.ICodeCompiler" /> che può essere utilizzato per compilare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
      <summary>Crea un identificatore di escape per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere creato un identificatore di escape.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Identificatore di escape per il valore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
      <summary>Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.IO.TextWriter)">
      <summary>Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice utilizzando per l'output l'oggetto <see cref="T:System.IO.TextWriter" /> specificato.</summary>
      <param name="output">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator(System.String)">
      <summary>Quando è sottoposto a override in una classe derivata, crea un nuovo generatore di codice utilizzando per l'output il nome file specificato.</summary>
      <param name="fileName">Nome file da utilizzare per l'output.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> che può essere utilizzato per generare rappresentazioni del codice sorgente basate su <see cref="N:System.CodeDom" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
      <summary>Quando è sottoposto a override in una classe derivata, crea un nuovo parser di codice.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.ICodeParser" /> che può essere utilizzato per analizzare il codice sorgente. L'implementazione di base restituisce sempre <see langword="null" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
      <summary>Ottiene un'istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per il linguaggio specificato.</summary>
      <param name="language">Nome di linguaggio.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="language" /> non è associato a un provider configurato nel computer.</exception>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="language" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>Provider CodeDOM implementato per il nome di linguaggio specificato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Ottiene un'istanza di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per le opzioni della lingua e del provider specificate.</summary>
      <param name="language">Nome di linguaggio.</param>
      <param name="providerOptions">Insieme di opzioni del provider del file di configurazione.</param>
      <returns>Provider CodeDOM implementato per il nome di linguaggio indicato e per le opzioni specificate.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
      <summary>Crea un identificatore valido per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere generato un identificatore valido.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Identificatore valido per il valore specificato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'unità di compilazione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="compileUnit">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> per il quale deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'espressione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="expression">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per la dichiarazione di membro CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="member">Oggetto <see cref="T:System.CodeDom.CodeTypeMember" /> che indica il membro per il quale deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Il metodo non viene sottoposto a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per lo spazio dei nomi CodeDOM (Code Document Object Model) specificato e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="codeNamespace">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> che indica lo spazio dei nomi per il quale deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'istruzione CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="statement">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> contenente gli elementi CodeDOM per i quali deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per la dichiarazione di tipo CodeDOM (Code Document Object Model) specificata e lo invia al writer di testo indicato utilizzando le opzioni selezionate.</summary>
      <param name="codeType">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> che indica il tipo per il quale deve essere generato il codice.</param>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> a cui viene inviato il codice di output.</param>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo">
      <summary>Restituisce le impostazioni di configurazione del compilatore e del provider del linguaggio per il computer.</summary>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>Una matrice di tipo <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> che rappresenta le impostazioni di tutte le implementazioni di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurate.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
      <summary>Restituisce le impostazioni di configurazione del compilatore e del provider del linguaggio per il linguaggio specificato.</summary>
      <param name="language">Nome di linguaggio.</param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="language" /> non è associato a un provider configurato nel computer.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'elemento <paramref name="language" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> in cui sono inserite le impostazioni dell'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurata.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
      <summary>Ottiene un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo di dati specificato.</summary>
      <param name="type">Tipo di oggetto per il quale recuperare un convertitore di tipi.</param>
      <returns>Un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato oppure <see langword="null" /> se non è possibile trovare un <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
      <summary>Restituisce un nome di linguaggio associato all'estensione di file specificata, in base alle impostazioni nella sezione di configurazione del compilatore <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</summary>
      <param name="extension">Estensione di file.</param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="extension" /> non è associato a un provider configurato nel computer.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'elemento <paramref name="extension" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>Nome di linguaggio associato all'estensione di file, in base alle impostazioni di configurazione del compilatore <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Ottiene il tipo indicato dall'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo da restituire.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Rappresentazione testo del tipo specificato, formattata per il linguaggio in cui viene generato il codice dal generatore di codice. In Visual Basic ad esempio se si passa un oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> per il tipo <see cref="T:System.Int32" /> viene restituito "Integer".</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
      <summary>Verifica se un'estensione di file è associata a un'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurata nel computer.</summary>
      <param name="extension">Estensione di file.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="extension" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>
        <see langword="true" /> se un'implementazione di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> è configurata per l'estensione di file specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
      <summary>Verifica se per un linguaggio è configurata un'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> nel computer.</summary>
      <param name="language">Nome di linguaggio.</param>
      <exception cref="T:System.ArgumentNullException">L'elemento <paramref name="language" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Il chiamante non dispone dell'autorizzazione richiesta.</exception>
      <returns>
        <see langword="true" /> se un'implementazione di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> è configurata per il linguaggio specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsValidIdentifier(System.String)">
      <summary>Restituisce un valore che indica se il valore specificato rappresenta un identificatore valido per il linguaggio corrente.</summary>
      <param name="value">Valore di cui verificare la validità come identificatore.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è un identificatore valido, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
      <summary>Compila il codice letto dal flusso di testo specificato in un oggetto <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="codeStream">Oggetto <see cref="T:System.IO.TextReader" /> utilizzato per leggere il codice da analizzare.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che contiene una rappresentazione del codice analizzato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeDomProvider.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Restituisce un valore che indica se viene fornito il supporto per la generazione di codice specificato.</summary>
      <param name="generatorSupport">Oggetto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> che indica il tipo di supporto per la generazione di codice da verificare.</param>
      <exception cref="T:System.NotImplementedException">Né questo metodo né il metodo <see cref="M:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator" /> vengono sottoposti a override in una classe derivata.</exception>
      <returns>
        <see langword="true" /> se viene fornito il supporto specificato per la generazione di codice, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
      <summary>Ottiene l'estensione del nome file predefinita da utilizzare per i file di origine nel linguaggio corrente.</summary>
      <returns>Estensione del nome file corrispondente all'estensione dei file di origine del linguaggio corrente. L'implementazione di base restituisce sempre <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeDomProvider.LanguageOptions">
      <summary>Ottiene un identificatore delle funzionalità del linguaggio.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.LanguageOptions" /> che indica speciali funzionalità del linguaggio.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeGenerator">
      <summary>Fornisce un'implementazione di esempio dell'interfaccia <see cref="T:System.CodeDom.Compiler.ICodeGenerator" />. Questa classe è astratta.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeGenerator" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
      <summary>Genera un carattere di continuazione di riga e restituisce la stringa specificata su una nuova riga.</summary>
      <param name="st">Stringa da scrivere sulla nuova riga.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
      <summary>Crea un identificatore di escape per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere creato un identificatore di escape.</param>
      <returns>Identificatore di escape per il valore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
      <summary>Crea un identificatore valido per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere creato un identificatore valido.</param>
      <returns>Identificatore valido per il valore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a un argomento.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
      <summary>Genera il codice per l'espressione specificata di creazione di una matrice.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeArrayCreateExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
      <summary>Genera il codice per l'espressione specificata dell'indicizzatore di matrici.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeArrayIndexerExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
      <summary>Genera il codice per l'istruzione di assegnazione specificata.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeAssignStatement" /> che indica l'istruzione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
      <summary>Genera il codice per l'istruzione specificata relativa all'evento di collegamento.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeAttachEventStatement" /> che indica l'istruzione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Genera il codice per la fine specificata del blocco di attributi.</summary>
      <param name="attributes">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica la fine del blocco di attributi per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Genera il codice per l'inizio specificato del blocco di attributi.</summary>
      <param name="attributes">Oggetto <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> che indica l'inizio del blocco di attributi per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento di base.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeBaseReferenceExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
      <summary>Genera il codice per l'espressione specificata dell'operatore binario.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
      <summary>Genera il codice per l'espressione specificata di cast.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeCastExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera codice per il membro della classe specificato usando le opzioni del writer di testo e del generatore di codice specificate.</summary>
      <param name="member">Membro della classe per cui generare il codice.</param>
      <param name="writer">Writer di testo a cui restituire il codice.</param>
      <param name="options">Opzioni da utilizzare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">La proprietà <see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /> non è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
      <summary>Genera il codice per il commento specificato.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeComment" /> per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
      <summary>Genera il codice per l'istruzione di commento specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
      <exception cref="T:System.ArgumentException">La proprietà <see cref="P:System.CodeDom.CodeCommentStatement.Comment" /> di <paramref name="e" /> non è impostata.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
      <summary>Genera il codice per le istruzioni di commento specificate.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
      <summary>Genera il codice per l'unità di compilazione specificata.</summary>
      <param name="e">Unità di compilazione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
      <summary>Genera il codice per la fine di un'unità di compilazione.</summary>
      <param name="e">Unità di compilazione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
      <summary>Genera il codice per l'inizio di un'unità di compilazione.</summary>
      <param name="e">Unità di compilazione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
      <summary>Genera il codice per l'istruzione condizionale specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per il costruttore specificato.</summary>
      <param name="e">Costruttore per cui generare il codice.</param>
      <param name="c">Tipo dell'oggetto costruito da questo costruttore.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
      <summary>Genera il codice per il valore decimale specificato.</summary>
      <param name="d">Valore decimale per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
      <summary>Genera il codice per il riferimento specificato a un valore predefinito.</summary>
      <param name="e">Riferimento per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
      <summary>Genera il codice per l'espressione specificata di creazione dei delegati.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
      <summary>Genera il codice per l'espressione specificata di chiamata del delegato.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
      <summary>Genera il codice per l'espressione di direzione specificata.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
      <summary>Genera il codice per le direttive di codice specificate.</summary>
      <param name="directives">Direttive di codice per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
      <summary>Genera il codice per un numero in virgola mobile e precisione doppia.</summary>
      <param name="d">Valore per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per il metodo del punto di ingresso specificato.</summary>
      <param name="e">Punto di ingresso del codice.</param>
      <param name="c">Codice che dichiara il tipo.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per l'evento specificato.</summary>
      <param name="e">Evento del membro per cui generare il codice.</param>
      <param name="c">Tipo dell'oggetto in cui si verifica questo evento.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a un evento.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
      <summary>Genera il codice per l'espressione specificata di codice.</summary>
      <param name="e">Espressione di codice per cui generare il codice.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> non è un oggetto <see cref="T:System.CodeDom.CodeStatement" /> valido.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
      <summary>Genera il codice per l'istruzione di espressione specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
      <summary>Genera il codice per il campo membro specificato.</summary>
      <param name="e">Campo per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a un campo.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
      <summary>Genera il codice per l'istruzione <see langword="goto" /> specificata.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
      <summary>Genera il codice per l'espressione specificata dell'indicizzatore.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
      <summary>Genera il codice per l'istruzione specificata di reiterazione.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
      <summary>Genera il codice per l'istruzione con etichetta specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
      <summary>Genera il codice per la fine specificata del pragma di linea.</summary>
      <param name="e">Pragma di fine della riga per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
      <summary>Genera il codice per l'inizio specificato del pragma di linea.</summary>
      <param name="e">Pragma di inizio della riga per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per il metodo specificato.</summary>
      <param name="e">Metodo del membro per cui generare il codice.</param>
      <param name="c">Tipo dell'oggetto in cui si verifica questo metodo.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
      <summary>Genera il codice per l'espressione specificata di chiamata del metodo.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a un metodo.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
      <summary>Genera il codice per l'istruzione return specificata relativa a un metodo.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
      <summary>Genera il codice per lo spazio dei nomi specificato.</summary>
      <param name="e">Spazio dei nomi per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
      <summary>Genera il codice per la fine di uno spazio dei nomi.</summary>
      <param name="e">Spazio dei nomi per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
      <summary>Genera il codice per l'importazione dello spazio dei nomi specificato.</summary>
      <param name="e">Importazione dello spazio dei nomi per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
      <summary>Genera il codice per l'importazione dello spazio dei nomi specificato.</summary>
      <param name="e">Importazione dello spazio dei nomi per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
      <summary>Genera il codice per gli spazi dei nomi dell'unità di compilazione specificata.</summary>
      <param name="e">Unità di compilazione per cui generare lo spazio dei nomi.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
      <summary>Genera il codice per l'inizio di uno spazio dei nomi.</summary>
      <param name="e">Spazio dei nomi per il quale deve essere generato il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
      <summary>Genera il codice per l'espressione specificata di creazione di oggetti.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
      <summary>Genera il codice per l'espressione specificata di dichiarazione di parametri.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
      <summary>Genera il codice per l'espressione primaria specificata.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> utilizza un tipo di dati non valido. Solo i seguenti tipi di dati sono validi: 
-   string 
-   char 
-   byte 
-   Int16 
-   Int32 
-   Int64 
-   Single 
-   Double 
-   Decimal</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per la proprietà specificata.</summary>
      <param name="e">Proprietà per cui generare il codice.</param>
      <param name="c">Tipo dell'oggetto in cui si verifica questa proprietà.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a una proprietà.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a un valore di un insieme di proprietà.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
      <summary>Genera il codice per l'istruzione specificata relativa all'evento di rimozione.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
      <summary>Genera il codice per un numero in virgola mobile e precisione singola.</summary>
      <param name="s">Valore per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
      <summary>Restituisce il codice dell'unità di compilazione specificata del frammento di codice letterale.</summary>
      <param name="e">Unità di compilazione del frammento di codice letterale per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
      <summary>Restituisce il codice dell'espressione specificata del frammento di codice letterale.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
      <summary>Restituisce il codice del membro di classe specificato del frammento di codice letterale.</summary>
      <param name="e">Membro per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
      <summary>Restituisce il codice dell'istruzione specificata del frammento di codice letterale.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
      <summary>Genera il codice per l'istruzione specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="e" /> non è un oggetto <see cref="T:System.CodeDom.CodeStatement" /> valido.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
      <summary>Genera il codice per l'insieme di istruzioni specificato.</summary>
      <param name="stmts" />
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata del riferimento this.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
      <summary>Genera il codice per l'istruzione specificata di generazione di un'eccezione.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
      <summary>Genera il codice per l'istruzione <c>try-catch-finally</c> specificata.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
      <summary>Genera il codice per il costruttore specificato della classe.</summary>
      <param name="e">Costruttore della classe per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per la fine della classe specificata.</summary>
      <param name="e">Fine della classe per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
      <summary>Genera il codice per il tipo di espressione specificato.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento al tipo.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
      <summary>Genera il codice per lo spazio dei nomi specificato e per le classi che questo contiene.</summary>
      <param name="e">Spazio dei nomi per cui generare le classi.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
      <summary>Genera il codice per l'inizio della classe specificata.</summary>
      <param name="e">Inizio della classe per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
      <summary>Genera il codice per l'istruzione specificata di dichiarazione delle variabili.</summary>
      <param name="e">Istruzione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
      <summary>Genera il codice per l'espressione specificata di riferimento a una variabile.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Ottiene il nome del tipo di dati specificato.</summary>
      <param name="value">Tipo di cui verrà restituito il nome.</param>
      <returns>Nome del riferimento al tipo di dati.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
      <summary>Ottiene un valore che indica se il valore specificato è un identificatore valido.</summary>
      <param name="value">Il valore di cui verificare l'assenza di conflitti con identificatori validi.</param>
      <returns>
        <see langword="true" /> se il valore è un identificatore valido, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
      <summary>Ottiene un valore che indica se la stringa specificata è un identificatore valido.</summary>
      <param name="value">Stringa di cui deve essere eseguito il test della validità.</param>
      <returns>
        <see langword="true" /> se la stringa specificata è un identificatore valido, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
      <summary>Restituisce un argomento in un blocco di attributi.</summary>
      <param name="arg">Argomento dell'attributo per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>Genera il codice per l'insieme specificato di dichiarazioni di attributo.</summary>
      <param name="attributes">Attributi per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
      <summary>Genera il codice per l'oggetto <see cref="T:System.CodeDom.FieldDirection" /> specificato.</summary>
      <param name="dir">Uno dei valori di enumerazione che indica l'attributo del campo.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
      <summary>Genera il codice per l'elenco di espressioni specificato.</summary>
      <param name="expressions">Espressioni per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
      <summary>Genera il codice per l'elenco di espressioni specificato.</summary>
      <param name="expressions">Espressioni per cui generare il codice.</param>
      <param name="newlineBetweenItems">
        <see langword="true" /> per inserire una nuova riga dopo ciascun elemento, in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
      <summary>Restituisce un modificatore di ambito del campo corrispondente agli attributi specificati.</summary>
      <param name="attributes">Uno dei valori di enumerazione che specifica gli attributi.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
      <summary>Restituisce l'identificatore specificato.</summary>
      <param name="ident">Identificatore che deve essere restituito.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
      <summary>Genera il codice per il modificatore specificato di accesso del membro.</summary>
      <param name="attributes">Uno dei valori di enumerazione che indica il modificatore di accesso del membro per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
      <summary>Genera il codice per il modificatore specificato di ambito del membro.</summary>
      <param name="attributes">Uno dei valori di enumerazione che indica il modificatore di ambito del membro per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
      <summary>Genera il codice per l'operatore specificato.</summary>
      <param name="op">Operatore per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
      <summary>Genera il codice per i parametri specificati.</summary>
      <param name="parameters">Espressioni di dichiarazione di parametro per cui generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
      <summary>Genera il codice per il tipo specificato.</summary>
      <param name="typeRef">Tipo per il quale generare il codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
      <summary>Genera il codice per gli attributi di tipo specificati.</summary>
      <param name="attributes">Uno dei valori di enumerazione che indica gli attributi di tipo per cui generare il codice.</param>
      <param name="isStruct">
        <see langword="true" /> se il tipo corrisponde a una struttura, in caso contrario <see langword="false" />.</param>
      <param name="isEnum">
        <see langword="true" /> se il tipo corrisponde a un'enumerazione, in caso contrario <see langword="false" />.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
      <summary>Genera il codice per la coppia di nomi e per il tipo di oggetto specificati.</summary>
      <param name="typeRef">Tipo.</param>
      <param name="name">Nome dell'oggetto.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
      <summary>Converte la stringa specificata formattandola con codici di escape.</summary>
      <param name="value">Stringa da convertire.</param>
      <returns>Stringa convertita.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Ottiene un valore che indica se viene fornito il supporto specificato per la generazione di codice.</summary>
      <param name="support">Tipo di supporto alla generazione di codice per cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se viene fornito il supporto specificato per la generazione di codice, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
      <summary>Crea un identificatore di escape per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere creato un identificatore di escape.</param>
      <returns>Identificatore di escape per il valore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
      <summary>Crea un identificatore valido per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere generato un identificatore valido.</param>
      <returns>Identificatore valido per il valore specificato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'unità di compilazione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Unità di compilazione CodeDOM per la quale generare il codice.</param>
      <param name="w">Writer di testo a cui restituire il codice.</param>
      <param name="o">Opzioni da usare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> non è disponibile. <paramref name="w" /> potrebbe essere stato chiuso prima della chiamata al metodo.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'espressione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato.</summary>
      <param name="e">Espressione per cui generare il codice.</param>
      <param name="w">Writer di testo a cui restituire il codice.</param>
      <param name="o">Opzioni da usare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> non è disponibile. <paramref name="w" /> potrebbe essere stato chiuso prima della chiamata al metodo.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per lo spazio dei nomi Code Document Object Model (CodeDOM) specificato e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Spazio dei nomi per il quale deve essere generato il codice.</param>
      <param name="w">Writer di testo a cui restituire il codice.</param>
      <param name="o">Opzioni da usare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> non è disponibile. <paramref name="w" /> potrebbe essere stato chiuso prima della chiamata al metodo.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'istruzione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Istruzione che contiene gli elementi CodeDOM da convertire.</param>
      <param name="w">Writer di testo a cui restituire il codice.</param>
      <param name="o">Opzioni da usare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> non è disponibile. <paramref name="w" /> potrebbe essere stato chiuso prima della chiamata al metodo.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per la dichiarazione di tipo CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Tipo per il quale generare il codice.</param>
      <param name="w">Writer di testo a cui restituire il codice.</param>
      <param name="o">Opzioni da usare per la generazione del codice.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="w" /> non è disponibile. <paramref name="w" /> potrebbe essere stato chiuso prima della chiamata al metodo.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Ottiene il tipo indicato dall'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato.</summary>
      <param name="type">Tipo da restituire.</param>
      <returns>Nome del riferimento al tipo di dati.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
      <summary>Ottiene un valore che indica se il valore specificato costituisce un identificatore valido per il linguaggio utilizzato.</summary>
      <param name="value">Valore su cui eseguire il test.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è un identificatore valido, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Ottiene un valore che indica se il generatore fornisce supporto per le funzionalità del linguaggio rappresentate dall'oggetto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> specificato.</summary>
      <param name="support">Capacità di cui verificare il supporto nel generatore.</param>
      <returns>
        <see langword="true" /> se sono supportate le funzionalità specificate, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
      <summary>Genera un'eccezione se il valore specificato non è un identificatore valido.</summary>
      <param name="value">Identificatore da convalidare.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
      <summary>Genera un'eccezione se la stringa specificata non è un identificatore valido.</summary>
      <param name="value">Identificatore del quale deve essere eseguito il test della validità come identificatore.</param>
      <exception cref="T:System.ArgumentException">Se l'identificatore non è valido o è in conflitto con parole chiave riservate o di linguaggio.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
      <summary>Tenta di convalidare ogni campo dell'identificatore contenuto nell'oggetto <see cref="T:System.CodeDom.CodeObject" /> specificato o nella struttura ad albero <see cref="N:System.CodeDom" />.</summary>
      <param name="e">Oggetto per il test degli identificatori non validi.</param>
      <exception cref="T:System.ArgumentException">Nell'oggetto <see cref="T:System.CodeDom.CodeObject" /> specificato è contenuto un identificatore non valido.</exception>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
      <summary>Ottiene la dichiarazione del tipo di codice per la classe corrente.</summary>
      <returns>Dichiarazione del tipo di codice per la classe corrente.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
      <summary>Ottiene il membro corrente della classe.</summary>
      <returns>Membro corrente della classe.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
      <summary>Ottiene il nome del membro corrente.</summary>
      <returns>Nome del membro corrente.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
      <summary>Ottiene il nome della classe corrente.</summary>
      <returns>Nome della classe corrente.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Indent">
      <summary>Ottiene o imposta il numero di spazi per ciascun livello di rientro.</summary>
      <returns>Numero di spazi per ciascun livello di rientro.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
      <summary>Ottiene un valore che indica se l'oggetto corrente da generare è una classe.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente è una classe, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
      <summary>Ottiene un valore che indica se l'oggetto corrente da generare è un delegato.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente è un delegato, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
      <summary>Ottiene un valore che indica se l'oggetto corrente da generare è un'enumerazione.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente è un'enumerazione, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
      <summary>Ottiene un valore che indica se l'oggetto corrente da generare è un'interfaccia.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente è un'interfaccia, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
      <summary>Ottiene un valore che indica se l'oggetto corrente da generare è un tipo valore o una struttura.</summary>
      <returns>
        <see langword="true" /> se l'oggetto corrente è un tipo valore o una struttura, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
      <summary>Ottiene il token che rappresenta <see langword="null" />.</summary>
      <returns>Token che rappresenta <see langword="null" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Options">
      <summary>Ottiene le opzioni che verranno utilizzate dal generatore di codice.</summary>
      <returns>Oggetto che indica le opzioni che verranno utilizzate dal generatore di codice.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGenerator.Output">
      <summary>Ottiene il writer di testo da utilizzare per l'output.</summary>
      <returns>Writer di testo da utilizzare per l'output.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeGeneratorOptions">
      <summary>Rappresenta un insieme di opzioni utilizzate da un generatore di codice.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeGeneratorOptions.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers">
      <summary>Ottiene o imposta un valore che indica se inserire righe vuote tra i membri.</summary>
      <returns>
        <see langword="true" /> se devono essere inserite righe vuote, in caso contrario <see langword="false" />. Il valore predefinito di questa proprietà è <see langword="true" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle">
      <summary>Ottiene o imposta lo stile da utilizzare per le parentesi graffe.</summary>
      <returns>Stringa contenente lo stile da utilizzare per le parentesi graffe.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing">
      <summary>Ottiene o imposta un valore che indica se aggiungere un blocco <see langword="else" />, <see langword="catch" /> o <see langword="finally" />, comprese le parentesi quadre, alla fine della riga di chiusura di ciascun blocco <see langword="if" /> o <see langword="try" /> precedente.</summary>
      <returns>
        <see langword="true" /> se deve essere aggiunto un blocco else, in caso contrario <see langword="false" />. Il valore predefinito di questa proprietà è <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString">
      <summary>Ottiene o imposta lo stile da utilizzare per il rientro.</summary>
      <returns>Stringa contenente i caratteri da utilizzare per il rientro.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)">
      <summary>Ottiene o imposta l'oggetto in corrispondenza dell'indice specificato.</summary>
      <param name="index">Nome associato all'oggetto da recuperare.</param>
      <returns>Oggetto associato al nome specificato. Se nell'insieme non esiste alcun oggetto associato al nome specificato, sarà <see langword="null" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder">
      <summary>Ottiene o imposta un valore che indica se generare i membri nell'ordine in cui compaiono nell'insieme dei membri.</summary>
      <returns>
        <see langword="true" /> per generare i membri nell'ordine in cui compaiono nell'insieme dei membri, <see langword="false" />, in caso contrario. Il valore predefinito di questa proprietà è <see langword="false" />.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CodeParser">
      <summary>Fornisce un'implementazione vuota dell'interfaccia <see cref="T:System.CodeDom.Compiler.ICodeParser" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeParser.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CodeParser" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CodeParser.Parse(System.IO.TextReader)">
      <summary>Compila il flusso di testo specificato in un oggetto <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="codeStream">Un <see cref="T:System.IO.TextReader" /> utilizzato per leggere il codice da analizzare.</param>
      <returns>
        <see cref="T:System.CodeDom.CodeCompileUnit" /> contenente il modello di codice prodotto dall'analisi del codice.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerError">
      <summary>Rappresenta un avviso o un errore di compilazione.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerError" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.#ctor(System.String,System.Int32,System.Int32,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerError" /> utilizzando il nome file, la riga, la colonna, il numero e il testo di errore specificati.</summary>
      <param name="fileName">Nome del file che era in compilazione quando il compilatore ha rilevato l'errore.</param>
      <param name="line">Riga in cui è stato generato l'errore.</param>
      <param name="column">Colonna in cui è stato generato l'errore.</param>
      <param name="errorNumber">Numero dell'errore.</param>
      <param name="errorText">Testo del messaggio di errore.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerError.ToString">
      <summary>Fornisce un'implementazione del metodo <see cref="M:System.Object.ToString" /> dell'oggetto.</summary>
      <returns>Rappresentazione in forma di stringa dell'errore del compilatore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.Column">
      <summary>Ottiene o imposta il numero della colonna in cui è stato generato l'errore.</summary>
      <returns>Numero della colonna del file di origine in cui il compilatore ha rilevato l'errore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.ErrorNumber">
      <summary>Ottiene o imposta il numero di errore.</summary>
      <returns>Numero di errore in formato stringa.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.ErrorText">
      <summary>Ottiene o imposta il testo del messaggio di errore.</summary>
      <returns>Il testo del messaggio di errore,</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.FileName">
      <summary>Ottiene o imposta il nome del file di origine in cui è contenuto il codice che ha causato l'errore.</summary>
      <returns>Nome del file di origine in cui è contenuto il codice che ha causato l'errore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.IsWarning">
      <summary>Ottiene o imposta un valore che indica se l'errore corrisponde a un avviso.</summary>
      <returns>
        <see langword="true" /> se l'errore corrisponde a un avviso, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerError.Line">
      <summary>Ottiene o imposta il numero di riga in cui è stato generato l'errore.</summary>
      <returns>Numero di riga del file di origine in cui il compilatore ha rilevato l'errore.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerErrorCollection">
      <summary>Rappresenta una raccolta di oggetti <see cref="T:System.CodeDom.Compiler.CompilerError" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])">
      <summary>Inzializza una nuova istanza di <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> contenente la matrice specificata di oggetti <see cref="T:System.CodeDom.Compiler.CompilerError" />.</summary>
      <param name="value">Matrice di oggetti <see cref="T:System.CodeDom.Compiler.CompilerError" /> con cui inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> contenente il contenuto dell'oggetto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> con il quale inizializzare l'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)">
      <summary>Aggiunge l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specificato all'insieme di errori.</summary>
      <param name="value">L'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> da aggiungere.</param>
      <returns>L'indice in corrispondenza del quale è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])">
      <summary>Copia gli elementi di una matrice alla fine dell'insieme di errori.</summary>
      <param name="value">Matrice di tipo <see cref="T:System.CodeDom.Compiler.CompilerError" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)">
      <summary>Aggiunge alla fine dell'insieme di errori il contenuto dell'insieme di errori di compilazione specificato.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> contenente gli oggetti da aggiungere all'insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)">
      <summary>Ottiene un valore che indica se l'insieme contiene l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specificato.</summary>
      <param name="value">La classe <see cref="T:System.CodeDom.Compiler.CompilerError" /> da individuare.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> è incluso nella raccolta; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)">
      <summary>Copia i valori dell'insieme in un'istanza di un oggetto <see cref="T:System.Array" /> unidimensionale in corrispondenza dell'indice specificato.</summary>
      <param name="array">Istanza unidimensionale di <see cref="T:System.Array" /> destinazione dei valori copiati da <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</param>
      <param name="index">Indice nella matrice in corrispondenza della quale iniziare a eseguire la copia.</param>
      <exception cref="T:System.ArgumentException">La matrice indicata dal parametro <paramref name="array" /> è multidimensionale.  
  
-oppure- 
Il numero degli elementi dell'oggetto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> è maggiore dello spazio disponibile tra il valore di indice del parametro <paramref name="arrayIndex" /> della matrice indicata dal parametro <paramref name="array" /> e la fine della matrice indicata dal parametro <paramref name="array" />.</exception>
      <exception cref="T:System.ArgumentNullException">Il valore del parametro <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Il parametro <paramref name="index" /> è minore del limite inferiore della matrice indicata dal parametro <paramref name="array" />.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)">
      <summary>Ottiene l'indice dell'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specificato nell'insieme, se esistente.</summary>
      <param name="value">La classe <see cref="T:System.CodeDom.Compiler.CompilerError" /> da individuare.</param>
      <returns>Indice dell'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specificato incluso in <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />, se presente. In caso contrario è -1.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)">
      <summary>Inserisce l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specificato nell'insieme in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice con inizio zero in cui viene inserito l'errore di compilazione.</param>
      <param name="value">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> da inserire.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)">
      <summary>Rimuove dall'insieme un oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> specifico.</summary>
      <param name="value">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> da rimuovere da <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" />.</param>
      <exception cref="T:System.ArgumentException">Impossibile trovare l'oggetto specificato nell'insieme.</exception>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.HasErrors">
      <summary>Ottiene un valore che indica se l'insieme contiene errori.</summary>
      <returns>
        <see langword="true" /> se l'insieme contiene errori, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.HasWarnings">
      <summary>Ottiene un valore che indica se l'insieme contiene avvisi.</summary>
      <returns>
        <see langword="true" /> se l'insieme contiene avvisi, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerErrorCollection.Item(System.Int32)">
      <summary>Ottiene o imposta l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerError" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">L'indice in base zero della voce da individuare all'interno della raccolta.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Il valore di indice specificato dal parametro <paramref name="index" /> non è compreso nell'intervallo di indici validi per l'insieme.</exception>
      <returns>
        <see cref="T:System.CodeDom.Compiler.CompilerError" /> in ciascun indice valido.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerInfo">
      <summary>Rappresenta le impostazioni di configurazione di un provider del linguaggio. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters">
      <summary>Ottiene le impostazioni del compilatore configurate per l'implementazione del provider del linguaggio.</summary>
      <returns>Istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> in sola lettura che contiene le opzioni e le impostazioni del compilatore configurate per il provider del linguaggio.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider">
      <summary>Restituisce un'istanza della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per le impostazioni del provider del linguaggio correnti.</summary>
      <returns>Provider CodeDOM associato alla configurazione del provider del linguaggio.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Restituisce un'istanza di <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> per le impostazioni del provider del linguaggio correnti e le opzioni specificate.</summary>
      <param name="providerOptions">Insieme di opzioni del provider del file di configurazione.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="providerOptions" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Il provider non supporta opzioni.</exception>
      <returns>Provider CodeDOM associato alla configurazione e alle opzioni del provider del linguaggio specificate.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato rappresenta le stesse impostazioni del compilatore e del provider di linguaggio di quelle della classe <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> corrente.</summary>
      <param name="o">Oggetto da confrontare con l'oggetto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> corrente.</param>
      <returns>
        <see langword="true" /> se <paramref name="o" /> è un oggetto <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> con lo stesso valore di questa istanza. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions">
      <summary>Restituisce le estensioni di file supportate dal provider del linguaggio.</summary>
      <returns>Matrice di estensioni di file supportate dal provider del linguaggio.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza corrente.</summary>
      <returns>Codice hash di interi con segno a 32 bit per l'istanza corrente della classe <see cref="T:System.CodeDom.Compiler.CompilerInfo" />, utilizzabile in algoritmi di hash e in strutture di dati, ad esempio una tabella hash.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages">
      <summary>Ottiene i nomi di linguaggio supportati dal provider del linguaggio.</summary>
      <returns>Matrice di nomi di linguaggio supportati dal provider del linguaggio.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType">
      <summary>Ottiene il tipo dell'implementazione della classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> configurata.</summary>
      <exception cref="T:System.Configuration.ConfigurationException">Il provider del linguaggio non è configurato nel computer.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossibile trovare il tipo perché è un valore <see langword="null" /> o una stringa vuota.  
  
-oppure- 
Impossibile trovare il tipo perché il nome perché la classe <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> non è stata trovata nel file di configurazione.</exception>
      <returns>Istanza della classe <see cref="T:System.Type" /> in sola lettura che rappresenta il tipo di provider del linguaggio configurato.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid">
      <summary>Restituisce un valore che indica se l'implementazione del provider del linguaggio è configurata nel computer.</summary>
      <returns>
        <see langword="true" /> se il tipo di implementazione del provider del linguaggio è configurata nel computer; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerParameters">
      <summary>Rappresenta i parametri utilizzati per richiamare un compilatore.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" />con i nomi degli assembly specificati.</summary>
      <param name="assemblyNames">Nomi degli assembly a cui fare riferimento.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
      <summary>Consente di inizializzare una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> con i nomi degli assembly e il nome del file di output specificati.</summary>
      <param name="assemblyNames">Nomi degli assembly a cui fare riferimento.</param>
      <param name="outputName">Nome file di output.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> utilizzando i nomi degli assembly e il nome del file di output specificati nonché un valore che indica se includere informazioni di debug.</summary>
      <param name="assemblyNames">Nomi degli assembly a cui fare riferimento.</param>
      <param name="outputName">Nome file di output.</param>
      <param name="includeDebugInformation">
        <see langword="true" /> per includere informazioni di debug; <see langword="false" /> per escludere informazioni di debug.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
      <summary>Ottiene o imposta gli argomenti opzionali della riga di comando da utilizzare quando viene invocato il compilatore.</summary>
      <returns>Argomenti della riga di comando aggiuntiva per il compilatore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
      <summary>Ottiene o imposta il nome dell'assembly principale o standard contenente i tipi di base come <see cref="T:System.Object" />, <see cref="T:System.String" /> o <see cref="T:System.Int32" />.</summary>
      <returns>Nome dell'assembly principale contenente i tipi di base.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
      <summary>Ottiene i file di risorse .NET Framework da includere durante la compilazione dell'output dell'assembly.</summary>
      <returns>Raccolta che contiene i percorsi dei file delle risorse .NET Framework da includere nell'assembly generato.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
      <summary>Ottiene o imposta un valore che indica se deve essere generato un eseguibile.</summary>
      <returns>
        <see langword="true" /> se è necessario che venga generato un eseguibile, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
      <summary>Ottiene o imposta un valore che indica se deve essere generato output in memoria.</summary>
      <returns>
        <see langword="true" /> se il compilatore deve generare l'output in memoria, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation">
      <summary>Ottiene o imposta un valore che indica se includere le informazioni di debug nell'eseguibile compilato.</summary>
      <returns>
        <see langword="true" /> se devono essere generate informazioni di debug, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
      <summary>Ottiene i file di risorse .NET Framework a cui viene fatto riferimento nell'origine corrente.</summary>
      <returns>Raccolta che contiene i percorsi dei file delle risorse .NET Framework a cui viene fatto riferimento dall'origine.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
      <summary>Ottiene o imposta il nome della classe principale.</summary>
      <returns>Nome della classe principale.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
      <summary>Ottiene o imposta il nome dell'assembly di output.</summary>
      <returns>Nome dell'assembly di output.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
      <summary>Ottiene gli assembly cui fa riferimento il progetto corrente.</summary>
      <returns>Raccolta che contiene i nomi di assembly cui viene fatto riferimento dall'origine da compilare.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
      <summary>Ottiene o imposta l'insieme che contiene i file temporanei.</summary>
      <returns>Raccolta contenente i file temporanei.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
      <summary>Ottiene o imposta un valore che indica se gli avvisi devono essere considerati come errori.</summary>
      <returns>
        <see langword="true" /> se gli avvisi devono essere gestiti come errori, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.UserToken">
      <summary>Ottiene o imposta il token utente da utilizzare durante la creazione del processo di compilazione.</summary>
      <returns>Token utente da utilizzare.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
      <summary>Ottiene o imposta il livello di avviso in corrispondenza del quale il compilatore interrompe la compilazione.</summary>
      <returns>Livello di avviso in corrispondenza del quale il compilatore interrompe la compilazione.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
      <summary>Ottiene o imposta il nome di un file di risorse Win32 da collegare nell'assembly compilato.</summary>
      <returns>File di risorse Win32 che verrà collegato nell'assembly compilato.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.CompilerResults">
      <summary>Rappresenta i risultati della compilazione restituiti da un compilatore.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.CompilerResults.#ctor(System.CodeDom.Compiler.TempFileCollection)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che utilizza i file temporanei specificati.</summary>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.CompiledAssembly">
      <summary>Ottiene o imposta l'assembly compilato.</summary>
      <returns>Oggetto <see cref="T:System.Reflection.Assembly" /> che indica l'assembly compilato.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.Errors">
      <summary>Ottiene l'insieme degli errori e degli avvisi del compilatore.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerErrorCollection" /> che indica gli eventuali errori e avvisi risultanti dalla compilazione.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.NativeCompilerReturnValue">
      <summary>Ottiene o imposta il valore restituito dal compilatore.</summary>
      <returns>Valore restituito dal compilatore.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.Output">
      <summary>Ottiene i messaggi di output del compilatore.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Specialized.StringCollection" /> che contiene i messaggi di output.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.PathToAssembly">
      <summary>Ottiene o imposta il percorso dell'assembly compilato.</summary>
      <returns>Percorso dell'assembly o <see langword="null" /> se l'assembly è stato generato nella memoria.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.CompilerResults.TempFiles">
      <summary>Ottiene o imposta l'insieme dei file temporanei da utilizzare.</summary>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.Executor">
      <summary>Fornisce funzioni di esecuzione dei comandi per richiamare i compilatori. La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)">
      <summary>Esegue il comando usando i file temporanei specificati e attende la chiamata da restituire.</summary>
      <param name="cmd">Comando da eseguire.</param>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Esegue il comando specificato utilizzando i file temporanei e il token utente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
      <param name="userToken">Token con cui deve essere avviato il processo di compilazione.</param>
      <param name="cmd">Comando da eseguire.</param>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
      <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
      <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
      <returns>Valore restituito dal compilatore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Esegue il comando specificato utilizzando i file temporanei, la directory corrente e il token utente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
      <param name="userToken">Token con cui deve essere avviato il processo di compilazione.</param>
      <param name="cmd">Comando da eseguire.</param>
      <param name="currentDir">Directory in cui deve essere avviato il processo.</param>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
      <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
      <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
      <returns>Valore restituito dal compilatore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Esegue il comando specificato utilizzando i file temporanei specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
      <param name="cmd">Comando da eseguire.</param>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
      <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
      <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
      <returns>Valore restituito dal compilatore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
      <summary>Esegue il comando specificato utilizzando i file temporanei e la directory corrente specificati e attende il risultato della chiamata, memorizzando le informazioni sugli errori e l'output generati dal compilatore nelle stringhe specificate.</summary>
      <param name="cmd">Comando da eseguire.</param>
      <param name="currentDir">La directory corrente.</param>
      <param name="tempFiles">Oggetto <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con cui gestire e archiviare i riferimenti a file intermedi generati durante la compilazione.</param>
      <param name="outputName">Riferimento a una stringa in cui verrà memorizzato l'output di messaggi generato dal compilatore.</param>
      <param name="errorName">Riferimento a una stringa in cui verrà memorizzato il nome dell'errore o degli errori riscontrati.</param>
      <returns>Valore restituito dal compilatore.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.GeneratorSupport">
      <summary>Definisce gli identificatori utilizzati per stabilire se un generatore di codice supporta determinati tipi di elementi di codice.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ArraysOfArrays">
      <summary>Indica che il generatore supporta le matrici di matrici.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.AssemblyAttributes">
      <summary>Indica che il generatore supporta gli attributi di assembly.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ChainedConstructorArguments">
      <summary>Indica che il generatore supporta gli argomenti concatenati del costruttore.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ComplexExpressions">
      <summary>Indica che il generatore supporta le espressioni complesse.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates">
      <summary>Indica che il generatore supporta le dichiarazioni delegate.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareEnums">
      <summary>Indica che il generatore supporta le dichiarazioni di enumerazione.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareEvents">
      <summary>Indica che il generatore supporta le dichiarazioni di evento.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareIndexerProperties">
      <summary>Indica che il generatore supporta la dichiarazione di proprietà di indicizzatore.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces">
      <summary>Indica che il generatore supporta le dichiarazioni di interfaccia.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes">
      <summary>Indica che il generatore supporta le dichiarazioni di tipi di valore.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.EntryPointMethod">
      <summary>Indica che il generatore supporta una designazione del metodo del punto di ingresso del programma. Utilizzato nella compilazione di eseguibili.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GenericTypeDeclaration">
      <summary>Indica che il generatore supporta le dichiarazioni di tipi generici.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GenericTypeReference">
      <summary>Indica che il generatore supporta riferimenti a tipi generici.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.GotoStatements">
      <summary>Indica che il generatore supporta le istruzioni goto.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.MultidimensionalArrays">
      <summary>Indica che il generatore supporta il riferimento a matrici multidimensionali. Non è attualmente possibile utilizzare CodeDom per creare istanze di matrici multidimensionali.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.MultipleInterfaceMembers">
      <summary>Indica che il generatore supporta la dichiarazione di membri che implementano più interfacce.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.NestedTypes">
      <summary>Indica che il generatore supporta la dichiarazione di tipi annidati.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ParameterAttributes">
      <summary>Indica che il generatore supporta gli attributi di parametro.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.PartialTypes">
      <summary>Indica che il generatore supporta le dichiarazioni di tipi parziali.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.PublicStaticMembers">
      <summary>Indica che il generatore supporta membri statici pubblici.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ReferenceParameters">
      <summary>Indica che il generatore supporta i parametri reference e out.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.Resources">
      <summary>Indica che il generatore supporta la compilazione con risorse .NET Framework, che possono essere risorse predefinite compilate direttamente in un assembly oppure risorse a cui viene fatto riferimento in un assembly satellite.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.ReturnTypeAttributes">
      <summary>Indica che il generatore supporta le dichiarazioni di attributi di tipi restituiti.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.StaticConstructors">
      <summary>Indica che il generatore supporta i costruttori statici.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.TryCatchStatements">
      <summary>Indica che il generatore supporta le istruzioni <c>try-catch</c> .</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.GeneratorSupport.Win32Resources">
      <summary>Indica che il generatore supporta la compilazione con risorse Win32.</summary>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeCompiler">
      <summary>Definisce un'interfaccia per richiamare mediante un compilatore specifico la compilazione di codice sorgente o una struttura ad albero CodeDOM.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
      <summary>Compila un assembly dalla struttura ad albero <see cref="N:System.CodeDom" /> contenuta nella <see cref="T:System.CodeDom.CodeCompileUnit" /> specificata utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="compilationUnit">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
      <summary>Compila un assembly in base alle strutture ad albero <see cref="N:System.CodeDom" /> contenute nella matrice di oggetti <see cref="T:System.CodeDom.CodeCompileUnit" /> specificata utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="compilationUnits">Matrice di tipo <see cref="T:System.CodeDom.CodeCompileUnit" /> che indica il codice da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compila un assembly dal codice sorgente contenuto nel file specificato utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="fileName">Nome del file contenente il codice sorgente da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila un assembly dal codice sorgente contenuto nei file specificati utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="fileNames">Nomi dei file da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
      <summary>Compila un assembly dalla stringa specificata contenente il codice sorgente utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="source">Codice sorgente da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
      <summary>Compila un assembly dalla matrice di stringhe specificata contenente il codice sorgente utilizzando le impostazioni del compilatore specificato.</summary>
      <param name="options">Oggetto <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> che indica le impostazioni per la compilazione.</param>
      <param name="sources">Stringhe di codice sorgente da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.Compiler.CompilerResults" /> che indica i risultati della compilazione.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeGenerator">
      <summary>Definisce un'interfaccia per la generazione di codice.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)">
      <summary>Crea un identificatore di escape per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere creato un identificatore di escape.</param>
      <returns>Identificatore di escape per il valore.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)">
      <summary>Crea un identificatore valido per il valore specificato.</summary>
      <param name="value">Stringa per la quale deve essere generato un identificatore valido.</param>
      <returns>Identificatore valido per il valore specificato.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'unità di compilazione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> per il quale deve essere generato il codice.</param>
      <param name="w">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice.</param>
      <param name="o">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'espressione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeExpression" /> che indica l'espressione per la quale deve essere generato il codice.</param>
      <param name="w">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice.</param>
      <param name="o">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per lo spazio dei nomi Code Document Object Model (CodeDOM) specificato e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeNamespace" /> che indica lo spazio dei nomi per il quale deve essere generato il codice.</param>
      <param name="w">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice.</param>
      <param name="o">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per l'istruzione CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeStatement" /> contenente gli elementi CodeDOM da convertire.</param>
      <param name="w">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice.</param>
      <param name="o">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
      <summary>Genera il codice per la dichiarazione di tipo CodeDOM (Code Document Object Model) specificata e lo restituisce al writer di testo specificato in base alle opzioni impostate.</summary>
      <param name="e">Oggetto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> che indica il tipo per il quale deve essere generato il codice.</param>
      <param name="w">Oggetto <see cref="T:System.IO.TextWriter" /> nel quale deve essere restituito il codice.</param>
      <param name="o">Oggetto <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> che indica le opzioni da utilizzare per la generazione del codice.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
      <summary>Ottiene il tipo indicato dall'oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.CodeDom.CodeTypeReference" /> che indica il tipo da restituire.</param>
      <returns>Rappresentazione testo del tipo specificato per il linguaggio in cui il generatore di codice è progettato per generare codice. In Visual Basic ad esempio se si passa il tipo System.Int32, verrà restituito "Integer".</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)">
      <summary>Ottiene un valore che indica se il valore specificato costituisce un identificatore valido per il linguaggio utilizzato.</summary>
      <param name="value">Valore di cui verificare la validità come identificatore.</param>
      <returns>
        <see langword="true" /> se il parametro <paramref name="value" /> è un identificatore valido, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
      <summary>Ottiene un valore che indica se il generatore fornisce supporto per le funzionalità del linguaggio rappresentate dall'oggetto <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> specificato.</summary>
      <param name="supports">Capacità di cui verificare il supporto nel generatore.</param>
      <returns>
        <see langword="true" /> se sono supportate le funzionalità specificate, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)">
      <summary>Genera un'eccezione se il valore specificato non è un identificatore valido.</summary>
      <param name="value">Identificatore da convalidare.</param>
      <exception cref="T:System.ArgumentException">L'identificatore non è valido.</exception>
    </member>
    <member name="T:System.CodeDom.Compiler.ICodeParser">
      <summary>Definisce un'interfaccia per l'analisi del codice in un'<see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.ICodeParser.Parse(System.IO.TextReader)">
      <summary>Quando implementato in una classe derivata, compila il flusso di testo specificato in un'<see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <param name="codeStream">Oggetto <see cref="T:System.IO.TextReader" /> che può essere utilizzato per la lettura del codice da compilare.</param>
      <returns>Oggetto <see cref="T:System.CodeDom.CodeCompileUnit" /> che contiene una rappresentazione del codice analizzato.</returns>
    </member>
    <member name="T:System.CodeDom.Compiler.LanguageOptions">
      <summary>Definisce gli identificatori che indicano speciali funzionalità di un linguaggio.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.LanguageOptions.CaseInsensitive">
      <summary>Il linguaggio non rileva la distinzione tra maiuscole e minuscole.</summary>
    </member>
    <member name="F:System.CodeDom.Compiler.LanguageOptions.None">
      <summary>Il linguaggio dispone di caratteristiche predefinite.</summary>
    </member>
    <member name="T:System.CodeDom.Compiler.TempFileCollection">
      <summary>Rappresenta una raccolta di file temporanei.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> con i valori predefiniti.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String)">
      <summary>Per impostazione predefinita, inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> utilizzando la directory temporanea specificata impostata per l'eliminazione dei file temporanei dopo che sono stati generati e utilizzati.</summary>
      <param name="tempDir">Percorso della directory temporanea da utilizzare per la memorizzazione dei file temporanei.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.#ctor(System.String,System.Boolean)">
      <summary>Per impostazione predefinita, inizializza una nuova istanza della classe <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> utilizzando la directory temporanea specificata e il valore specificato che indica se conservare o eliminare i file temporanei dopo che sono stati generati e utilizzati.</summary>
      <param name="tempDir">Percorso della directory temporanea da utilizzare per la memorizzazione dei file temporanei.</param>
      <param name="keepFiles">
        <see langword="true" /> se i file temporanei devono essere conservati dopo l'utilizzo, <see langword="false" /> se devono essere eliminati.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)">
      <summary>Aggiunge all'insieme un nome file con l'estensione specificata.</summary>
      <param name="fileExtension">Estensione del nome di file temporaneo generato automaticamente da aggiungere all'insieme.</param>
      <returns>Nuovo nome file con l'estensione specificata aggiunto all'insieme.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)">
      <summary>Aggiunge all'insieme un nome file con l'estensione specificata, utilizzando il valore specificato che indica se il file debba essere eliminato o conservato.</summary>
      <param name="fileExtension">Estensione del nome di file temporaneo generato automaticamente da aggiungere all'insieme.</param>
      <param name="keepFile">
        <see langword="true" /> se il file deve essere conservato dopo l'utilizzo, <see langword="false" /> se deve essere eliminato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileExtension" /> è <see langword="null" /> o una stringa vuota.</exception>
      <returns>Nuovo nome file con l'estensione specificata aggiunto all'insieme.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)">
      <summary>Aggiunge all'insieme il file specificato, utilizzando il valore specificato che indica se il file debba essere conservato quando l'insieme viene eliminato o quando viene chiamato il metodo <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" />.</summary>
      <param name="fileName">Nome del file da aggiungere all'insieme.</param>
      <param name="keepFile">
        <see langword="true" /> se il file deve essere conservato dopo l'utilizzo, <see langword="false" /> se deve essere eliminato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="fileName" /> è <see langword="null" /> o una stringa vuota.  
  
-oppure- 
 <paramref name="fileName" /> è un duplicato.</exception>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copia i membri dell'insieme nella stringa specificata, a partire dall'indice specificato.</summary>
      <param name="fileNames">Matrice di stringhe in cui deve essere effettuata la copia.</param>
      <param name="start">Indice della matrice in corrispondenza del quale deve iniziare la copiatura.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Delete">
      <summary>Elimina dall'insieme i file temporanei non contrassegnati per la conservazione.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Dispose(System.Boolean)">
      <summary>Rilascia le risorse non gestite usate da <see cref="T:System.CodeDom.Compiler.TempFileCollection" /> e, facoltativamente, le risorse gestite.</summary>
      <param name="disposing">
        <see langword="true" /> per rilasciare sia le risorse gestite sia quelle non gestite; <see langword="false" /> per rilasciare solo le risorse non gestite.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.Finalize">
      <summary>Tenta di eliminare i file temporanei prima che questo oggetto venga recuperato dalla procedura di Garbage Collection.</summary>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator">
      <summary>Ottiene un enumeratore in grado di enumerare i membri dell'insieme.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che contiene i membri dell'insieme.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'insieme in una matrice, iniziando dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="start">Indice in base zero nella matrice in corrispondenza del quale ha inizio la copia.</param>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.CodeDom.Compiler.TempFileCollection.System#IDisposable#Dispose">
      <summary>Esegue attività definite dall'applicazione, come rilasciare o reimpostare risorse non gestite.</summary>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.BasePath">
      <summary>Ottiene il percorso completo del nome di file di base privo di estensione nel percorso della directory temporanea utilizzata per generare nomi di file temporanei per l'insieme.</summary>
      <exception cref="T:System.Security.SecurityException">Se la proprietà <see cref="P:System.CodeDom.Compiler.TempFileCollection.BasePath" /> non è stata impostata o è impostata su <see langword="null" /> e <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> non è concesso per la directory temporanea indicata dalla proprietà <see cref="P:System.CodeDom.Compiler.TempFileCollection.TempDir" />.</exception>
      <returns>Percorso completo del nome di file di base privo di estensione nel percorso della directory temporanea utilizzata per generare nomi di file temporanei per l'insieme.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.Count">
      <summary>Ottiene il numero di file nell'insieme.</summary>
      <returns>Numero dei file inclusi nell'insieme.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.KeepFiles">
      <summary>Per impostazione predefinita, ottiene o imposta un valore che indica se conservare i file quando viene chiamato il metodo <see cref="M:System.CodeDom.Compiler.TempFileCollection.Delete" /> o viene eliminato l'insieme.</summary>
      <returns>
        <see langword="true" /> se i file devono essere conservati, in caso contrario <see langword="false" /> .</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#Count">
      <summary>Ottiene il numero di elementi contenuti nella raccolta.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso alla raccolta è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso alla raccolta.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.CodeDom.Compiler.TempFileCollection.TempDir">
      <summary>Ottiene la directory temporanea in cui devono essere memorizzati i file temporanei.</summary>
      <returns>Directory temporanea in cui devono essere memorizzati i file temporanei.</returns>
    </member>
    <member name="T:System.CodeDom.FieldDirection">
      <summary>Definisce gli identificatori utilizzati per indicare la direzione delle dichiarazioni di parametri e argomenti.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.In">
      <summary>Campo in ingresso.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.Out">
      <summary>Campo in uscita.</summary>
    </member>
    <member name="F:System.CodeDom.FieldDirection.Ref">
      <summary>Campo per riferimento.</summary>
    </member>
    <member name="T:System.CodeDom.MemberAttributes">
      <summary>Definisce gli identificatori degli attributi dei membri per i membri della classe.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Abstract">
      <summary>Membro astratto.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.AccessMask">
      <summary>Maschera di accesso.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Assembly">
      <summary>Membro accessibile a qualsiasi classe all'interno dello stesso assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Const">
      <summary>Membro costante.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Family">
      <summary>Membro accessibile all'interno della famiglia della propria classe e delle classi derivate.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.FamilyAndAssembly">
      <summary>Membro accessibile all'interno della propria classe e delle classi derivate nello stesso assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.FamilyOrAssembly">
      <summary>Membro accessibile all'interno della propria classe, delle classi derivate in qualsiasi assembly e di qualsiasi classe nello stesso assembly.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Final">
      <summary>Membro che non può essere sottoposto a override in una classe derivata.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.New">
      <summary>Nuovo membro.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Overloaded">
      <summary>Membro di overload. In alcuni linguaggi, come Visual Basic, è necessario indicare in modo esplicito i membri di overload.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Override">
      <summary>Membro che esegue l'override di un membro di classe base.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Private">
      <summary>Membro privato.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Public">
      <summary>Membro pubblico.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.ScopeMask">
      <summary>Maschera di ambito.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.Static">
      <summary>Membro statico. In Visual Basic, è equivalente alla parola chiave <see langword="Shared" />.</summary>
    </member>
    <member name="F:System.CodeDom.MemberAttributes.VTableMask">
      <summary>Maschera VTable.</summary>
    </member>
  </members>
</doc>