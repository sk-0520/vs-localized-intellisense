<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Security.Cryptography.Pkcs</name>
  </assembly>
  <members>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObject">
      <summary>형식과 해당 형식과 관련된 값의 컬렉션이 들어 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체가 나타내는 특성을 사용하여 <see cref="T:System.Security.Cryptography.Oid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid">이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에 저장할 특성입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObject.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedDataCollection)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에서 나타내는 특성과 지정된 <see cref="T:System.Security.Cryptography.Oid" /> 컬렉션에서 나타내는 해당 특성의 관련 값 집합을 사용하여 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid">이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체에 저장할 특성입니다.</param>
      <param name="values">
        <paramref name="oid" /> 매개 변수로 나타내는 특성과 관련된 값 집합입니다.</param>
      <exception cref="T:System.InvalidOperationException">컬렉션에 중복되는 항목이 들어 있습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Oid">
      <summary>특성에 대한 개체 식별자를 지정하는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 가져옵니다.</summary>
      <returns>특성에 대한 개체 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObject.Values">
      <summary>특성과 관련된 값 집합이 포함된 <see cref="T:System.Security.Cryptography.AsnEncodedDataCollection" /> 컬렉션을 가져옵니다.</summary>
      <returns>특성과 관련된 값 집합입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체 집합을 포함합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.#ctor(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" />를 컬렉션에 추가하여 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="attribute">컬렉션에 추가되는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.AsnEncodedData)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="asnEncodedData">컬렉션에 추가할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <returns>메서드가 추가된 항목의 인덱스(0부터 시작)를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Add(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 컬렉션에 추가합니다.</summary>
      <param name="attribute">컬렉션에 추가할 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">지정된 항목이 이미 컬렉션에 있는 경우</exception>
      <returns>메서드가 추가된 항목의 인덱스(0부터 시작)를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.CopyTo(System.Security.Cryptography.CryptographicAttributeObject[],System.Int32)">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체 배열에 복사합니다.</summary>
      <param name="array">컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체 배열입니다.</param>
      <param name="index">컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" />을 유효한 인수로 받아들이지 않는 메서드에 null이 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.GetEnumerator">
      <summary>컬렉션에 대한 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 개체를 가져옵니다.</summary>
      <returns>메서드가 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator" /> 개체를 반환하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.Remove(System.Security.Cryptography.CryptographicAttributeObject)">
      <summary>컬렉션에서 지정된 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 제거합니다.</summary>
      <param name="attribute">컬렉션에서 제거할 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="attribute" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>특정 인덱스부터 이 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션의 요소를 <see cref="T:System.Array" /> 배열에 복사합니다.</summary>
      <param name="array">이 <see cref="T:System.Array" />에서 복사한 요소의 대상인 1차원 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 배열입니다. <see cref="T:System.Array" /> 배열의 인덱스는 0부터 시작해야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 0부터 시작하는 인덱스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션에서 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> 컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Count">
      <summary>컬렉션의 항목 수를 가져옵니다.</summary>
      <returns>컬렉션의 항목 수입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.IsSynchronized">
      <summary>해당 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>컬렉션에 대한 액세스가 스레드로부터 안전하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.Item(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 해당하는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체를 가져옵니다.</summary>
      <param name="index">검색할 <see cref="T:System.Int32" /> 개체의 인덱스(0부터 시작)를 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 값입니다.</param>
      <returns>지정된 인덱스의 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectCollection.SyncRoot">
      <summary>컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Object" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Object" />컬렉션에 대 한 액세스를 동기화 하는 데 사용 되는 개체 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.CryptographicAttributeObjectEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션의 열거 기능을 제공합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.MoveNext">
      <summary>열거형을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체로 이동합니다.</summary>
      <returns>열거형을 다음 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 개체로 이동하면 <see langword="true" />이고, 열거자가 열거형의 끝에 있으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Reset">
      <summary>열거형을 <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.Current">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 현재 암호화 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.CryptographicAttributeObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.CryptographicAttributeObject" /> 컬렉션의 현재 암호화 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스는 암호화 작업에 사용되는 알고리즘을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor" /> 생성자는 기본 매개 변수 집합을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid)" /> 생성자는 지정된 알고리즘 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="oid">알고리즘에 대한 개체 식별자입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.#ctor(System.Security.Cryptography.Oid,System.Int32)" /> 생성자는 지정된 알고리즘 식별자와 키 길이를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="oid">알고리즘에 대한 개체 식별자입니다.</param>
      <param name="keyLength">키의 길이(비트 단위)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.KeyLength" /> 속성은 키 길이(비트 단위)를 설정하거나 검색합니다. 고정된 키 길이를 사용하는 알고리즘에서는 이 속성이 사용되지 않습니다.</summary>
      <returns>키 길이(비트 단위)를 나타내는 int 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Oid" /> 속성은 알고리즘에 대한 개체 식별자를 지정하는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 설정하거나 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" />알고리즘을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.AlgorithmIdentifier.Parameters" /> 속성은 알고리즘에 필요한 모든 매개 변수를 설정하거나 검색합니다.</summary>
      <returns>알고리즘에 필요한 모든 매개 변수를 지정하는 바이트 값 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipient">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스는 CMS/PKCS #7 메시지의 수신자를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>공개 키 알고리즘에 대해 기본 암호화 모드를 사용하여 지정된 인증서와 수신자 식별자 유형으로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="recipientIdentifierType">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</param>
      <param name="certificate">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="recipientIdentifierType" /> 값은 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>지정된 RSA 인증서, RSA 암호화 패딩 및 주제 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="recipientIdentifierType">사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</param>
      <param name="certificate">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <param name="rsaEncryptionPadding">이 수신자에 맞게 암호화할 때 사용할 RSA 패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 또는 <paramref name="rsaEncryptionPadding" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 매개 변수 공개 키가 RSA 공개 키로 인식되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>공개 키 알고리즘과 <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 주체 식별자에 대해 기본 암호화 모드를 사용하여 지정된 인증서로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipient.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.RSAEncryptionPadding)">
      <summary>
        <see cref="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber" /> 주제 식별자를 사용하여 지정된 RSA 인증서와 RSA 암호화 패딩으로 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate">이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</param>
      <param name="rsaEncryptionPadding">이 수신자에 맞게 암호화할 때 사용할 RSA 패딩 모드입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 또는 <paramref name="rsaEncryptionPadding" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 매개 변수 공개 키가 RSA 공개 키로 인식되지 않습니다.

또는

<paramref name="recipientIdentifierType" /> 값은 지원되지 않습니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.Certificate">
      <summary>이 수신자에 맞게 암호화할 때 사용할 인증서를 가져옵니다.</summary>
      <returns>이 수신자에게 맞게 암호화할 때 사용할 인증서입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RecipientIdentifierType">
      <summary>사용된 수신자 인증서를 식별하는 데 사용할 체계를 가져옵니다.</summary>
      <returns>사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipient.RSAEncryptionPadding">
      <summary>이 수신자에 맞게 암호화할 때 사용할 RSA 암호화 패딩을 가져옵니다.</summary>
      <returns>이 수신자에 대해 암호화할 때 사용할 RSA 암호화 패딩입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체 집합을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만들고 지정된 수신자를 추가합니다.</summary>
      <param name="recipient">지정된 CMS/PKCS #7 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 클래스의 인스턴스를 만들고 수신자를 식별하는 인증서 집합과 지정된 주체 식별자를 기준으로 수신자를 추가합니다.</summary>
      <param name="recipientIdentifierType">주체 식별자의 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형의 멤버입니다.</param>
      <param name="certificates">수신자를 식별하는 인증서가 포함된 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 컬렉션입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Add(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에 수신자를 추가합니다.</summary>
      <param name="recipient">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에 추가할 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" />이(가) <see langword="null" />인 경우</exception>
      <returns>메서드가 성공하면 이 메서드는 수신자의 삽입 위치(0부터 시작)를 나타내는 <see cref="T:System.Int32" /> 값을 반환합니다.  
  
메서드가 실패하면 예외가 throw됩니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />이(가) 지정된 요소를 보유할 수 있을 정도로 크지 않습니다.  

또는

<paramref name="array" />의 차원 수가 적절하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 요소 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.CopyTo(System.Security.Cryptography.Pkcs.CmsRecipient[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체의 배열입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션이 복사되는 <paramref name="array" />에 포함된 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체의 배열에 대한 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />이(가) 지정된 요소를 보유할 수 있을 정도로 크지 않습니다.  

또는

<paramref name="array" />의 차원 수가 적절하지 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 <paramref name="array" />의 요소 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Remove(System.Security.Cryptography.Pkcs.CmsRecipient)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에서 수신자를 제거합니다.</summary>
      <param name="recipient">컬렉션에서 제거할 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns>컬렉션의 항목 수를 나타내는 <see cref="T:System.Int32" /> 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 컬렉션이 스레드로부터 안전하지 않음을 나타내는 <see langword="false" />를 반환합니다.</summary>
      <returns>컬렉션이 스레드로부터 안전하지 않음을 나타내는 <see langword="false" />의 <see cref="T:System.Boolean" /> 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체를 검색합니다.</summary>
      <param name="index">컬렉션의 인덱스를 나타내는 <see cref="T:System.Int32" /> 값입니다. 인덱스는 0부터 시작합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체로 이동합니다.</summary>
      <returns>열거형을 다음 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 개체로 이동했으면 <see langword="true" />이고, 열거형의 마지막 항목을 지났으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsRecipientEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 컬렉션에서 현재 수신자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipientCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.CmsSigner">
      <summary>CMS/PKCS#7 서명된 메시지의 잠재적 서명자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.CspParameters)">
      <summary>지속 키에서 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="parameters">사용할 서명 키를 설명하는 CSP 매개 변수입니다.</param>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core만 해당: 이 멤버는 지원되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>지정된 주체 식별자 유형을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType">사용된 서명 인증서를 식별하는 데 사용하는 체계입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>지정된 서명자 인증서 및 주제 식별자 유형을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType">사용된 서명 인증서를 식별하는 데 사용하는 체계입니다.</param>
      <param name="certificate">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>지정된 서명자 인증서, 주제 식별자 유형 및 프라이빗 키 개체를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="signerIdentifierType">사용된 서명 인증서를 식별하는 데 사용할 체계를 지정하는 열거형 값 중 하나입니다.</param>
      <param name="certificate">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
      <param name="privateKey">메시지에 서명할 때 사용할 프라이빗 키 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.CmsSigner.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>지정된 서명자 인증서가 있는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificate">메시지에 서명하는 데 사용할 프라이빗 키가 있는 인증서입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> 속성은 서명 인증서를 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체를 설정하거나 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />서명 인증서를 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificates">
      <summary>
        <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /> 및<see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" />로 간주되는 인증서의 컬렉션을 가져옵니다.</summary>
      <returns>및로 간주 되는 인증서 컬렉션입니다 <see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.WholeChain" /><see cref="F:System.Security.Cryptography.X509Certificates.X509IncludeOption.ExcludeRoot" /> .</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.DigestAlgorithm">
      <summary>시그니처와 함께 사용할 해시 알고리즘의 알고리즘 식별자를 가져오거나 설정합니다.</summary>
      <returns>서명과 함께 사용할 해시 알고리즘의 알고리즘 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption">
      <summary>서명된 메시지에 포함되어야 하는 서명자 인증서의 인증서 체인 크기를 나타내는 옵션을 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <returns>서명 된 메시지에 포함 되어야 하는 서명자 인증서의 인증서 체인 크기를 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.PrivateKey">
      <summary>서명하는 동안 사용할 프라이빗 키 개체를 가져오거나 설정합니다.</summary>
      <returns>서명 하는 동안 사용할 개인 키 이거나, <see langword="null" /> 속성과 연결 된 개인 키를 사용 하는 경우입니다 <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> .</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes">
      <summary>이 시그니처와 연결하고, 시그니처로도 보호되는 특성의 컬렉션을 가져옵니다.</summary>
      <returns>서명으로도 보호 되는이 시그니처와 연결할 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.SignerIdentifierType">
      <summary>사용된 서명 인증서를 식별하는 데 사용하는 체계를 가져옵니다.</summary>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <returns>사용된 수신자 인증서를 식별하는 데 사용할 체계입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.CmsSigner.UnsignedAttributes">
      <summary>이 시그니처와 연결하지만, 시그니처로 보호되지 않는 특성의 컬렉션을 가져옵니다.</summary>
      <returns>서명으로 보호 되지 않는이 시그니처와 연결할 특성의 컬렉션입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.ContentInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스는 CMS/PKCS #7 표준 문서에 정의된 대로 CMS/PKCS #7 ContentInfo 데이터 구조체를 나타냅니다. 이 데이터 구조체는 모든 CMS/PKCS #7 메시지의 기초로 사용됩니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Byte[])" /> 생성자는 바이트 배열 값을 콘텐츠 형식을 나타내는 기본 <paramref name="object identifier" />(OID)와 데이터로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="content">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체를 만드는 데 사용되는 데이터를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 해당 참조가 전달되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.ContentInfo.#ctor(System.Security.Cryptography.Oid,System.Byte[])" /> 생성자는 지정된 콘텐츠 형식과 바이트 값 배열을 데이터로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentType">콘텐츠의 콘텐츠 형식을 지정하는 <c>개체 식별자</c>(OID)가 포함된 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다. 이 개체는 data, digestedData, encryptedData, envelopedData, hashedData, signedAndEnvelopedData 또는 signedData일 수 있습니다.  자세한 내용은 설명을 참조하세요.</param>
      <param name="content">
        <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체를 만드는 데 사용되는 데이터를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 해당 참조가 전달되었습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.Byte[])">
      <summary>인코딩된 CMS ContentInfo 메시지의 외부 콘텐츠 형식을 검색합니다.</summary>
      <param name="encodedMessage">외부 콘텐츠 형식을 검색할 인코딩된 CMS ContentInfo 메시지를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" />이(가) <see langword="null" />인 경우.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">유효한 CMS ContentInfo 값으로 <paramref name="encodedMessage" />를 디코딩할 수 없습니다.</exception>
      <returns>인코딩된 지정 CMS ContentInfo 메시지의 외부 콘텐츠 형식입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.ContentInfo.GetContentType(System.ReadOnlySpan{System.Byte})">
      <summary>인코딩된 CMS ContentInfo 메시지의 외부 콘텐츠 형식을 검색합니다.</summary>
      <param name="encodedMessage">외부 콘텐츠 형식을 검색할 인코딩된 CMS ContentInfo 메시지를 나타내는 바이트 값의 읽기 전용 범위입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">유효한 CMS ContentInfo 값으로 <paramref name="encodedMessage" />를 디코딩할 수 없습니다.</exception>
      <returns>인코딩된 지정 CMS ContentInfo 메시지의 외부 콘텐츠 형식입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.Content">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.Content" /> 속성은 CMS/PKCS #7 메시지의 콘텐츠를 검색합니다.</summary>
      <returns>콘텐츠 데이터를 나타내는 바이트 값 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.ContentInfo.ContentType" /> 속성은 CMS/PKCS #7 메시지의 내부 콘텐츠에 대한 콘텐츠 형식의 <paramref name="object identifier" />(OID)가 포함된 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Oid" />내용 유형을 나타내는 OID 값을 포함 하는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.EnvelopedCms">
      <summary>엔벌로프된 데이터에 대한 CMS/PKCS#7 구조체를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor">
      <summary>기본값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>지정된 콘텐츠 정보를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contentInfo">암호화할 메시지 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Security.Cryptography.Pkcs.AlgorithmIdentifier)">
      <summary>지정된 대칭 암호화 알고리즘 및 콘텐츠 정보를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.EnvelopedCms" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="contentInfo">암호화할 메시지 콘텐츠입니다.</param>
      <param name="encryptionAlgorithm">메시지 콘텐츠를 암호화할 때 사용할 대칭 암호화 알고리즘의 식별자입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="contentInfo" /> 또는 <paramref name="encryptionAlgorithm" /> 매개 변수가 <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.Byte[])">
      <summary>바이트 배열을 CMS/PKCS#7 EnvelopedData 메시지로 디코딩합니다.</summary>
      <param name="encodedMessage">디코딩할 바이트 시퀀스를 포함하는 바이트 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 매개 변수가 디코딩되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <summary>제공된 데이터를 CMS/PKCS#7 EnvelopedData 메시지로 디코딩합니다.</summary>
      <param name="encodedMessage">디코딩할 데이터입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" /> 매개 변수가 디코딩되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt">
      <summary>인증서 저장소에서 일치하는 인증서 및 키를 검색하여 사용 가능한 모든 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo)">
      <summary>인증서 저장소에서 일치하는 인증서 및 키를 검색하여 지정된 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>지정된 프라이빗 키를 사용하여 지정된 수신자 정보를 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <param name="privateKey">받는 사람 관련 정보를 해독하는 데 사용할 프라이빗 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 또는 <paramref name="privateKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.Pkcs.RecipientInfo,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>인증서 저장소와 제공된 컬렉션에서 일치하는 인증서 및 키를 검색하여 지정된 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="recipientInfo">암호 해독에 사용할 받는 사람 정보입니다.</param>
      <param name="extraStore">받는 사람 인증서와 프라이빗 키를 찾기 위해 인증서 저장소와 함께 사용할 인증서 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipientInfo" /> 또는 <paramref name="extraStore" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Decrypt(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>인증서 저장소와 제공된 컬렉션에서 일치하는 인증서 및 키를 검색하여 사용 가능한 모든 받는 사람을 통해 디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 해독합니다.</summary>
      <param name="extraStore">받는 사람 인증서와 프라이빗 키를 찾기 위해 인증서 저장소와 함께 사용할 인증서 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extraStore" /> 매개 변수가 <see langword="null" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encode">
      <summary>엔벌로프된 CMS/PKCS#7 메시지의 콘텐츠를 인코딩하여 바이트 배열로 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
      <returns>CMS/PKCS#7 메시지의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipient)">
      <summary>지정된 단일 받는 사람에 대해 CMS/PKCS#7 메시지의 콘텐츠를 암호화합니다.</summary>
      <param name="recipient">이 메시지의 단일 수신자를 설명하는 받는 사람 정보입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipient" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.EnvelopedCms.Encrypt(System.Security.Cryptography.Pkcs.CmsRecipientCollection)">
      <summary>한 명 이상의 받는 사람에 대해 CMS/PKCS#7 메시지의 콘텐츠를 암호화합니다.</summary>
      <param name="recipients">메시지의 받는 사람을 설명하는 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="recipients" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Certificates">
      <summary>엔벌로프된 CMS/PKCS#7 메시지와 관련된 인증서 컬렉션을 가져옵니다.</summary>
      <returns>엔벌로프된 CMS/PKCS # 7 메시지와 연결 된 인증서의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentEncryptionAlgorithm">
      <summary>이 메시지와 연결된 대칭 암호화 알고리즘의 식별자를 가져옵니다.</summary>
      <returns>이 메시지와 연결 된 대칭 암호화 알고리즘의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.ContentInfo">
      <summary>엔벌로프된 CMS/PKCS#7 메시지에 대한 콘텐츠 정보를 가져옵니다.</summary>
      <returns>엔벌로프된 CMS/PKCS # 7 메시지에 대 한 콘텐츠 정보입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.RecipientInfos">
      <summary>디코딩된 메시지의 받는 사람 목록을 나타내는 컬렉션을 가져옵니다. 기본값은 빈 컬렉션입니다.</summary>
      <returns>디코딩된 메시지의 받는 사람 목록을 나타내는 컬렉션입니다. 기본값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.UnprotectedAttributes">
      <summary>엔벌로프된 CMS/PKCS#7 메시지와 관련된 보호(암호화)되지 않은 특성 컬렉션을 가져옵니다.</summary>
      <returns>엔벌로프된 CMS/PKCS # 7 메시지와 연결 된 보호 되지 않는 (암호화 되지 않은) 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.EnvelopedCms.Version">
      <summary>디코딩되고 엔벌로프된 CMS/PKCS#7 메시지의 버전을 가져옵니다.</summary>
      <returns>디코딩된 엔벌로프된 CMS/PKCS # 7 메시지의 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 클래스는 키 계약 수신자에 대한 정보를 정의합니다. 키 계약 알고리즘에는 일반적으로 Diffie-Hellman 키 계약 알고리즘이 사용됩니다. 이 알고리즘에서는 공유 암호화 키를 설정하는 두 당사자가 모두 키 생성에 참여하고 해당 키에 대해 합의해야 합니다. 이 알고리즘은 한쪽 관련자가 일방적으로 키를 생성하고 이를 다른 관련자에게 보내는 키 전송 알고리즘과 반대입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Date" /> 속성은 발신자에 따른 키 계약 프로토콜의 시작 날짜와 시간을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException">받는 사람 식별자 형식은 주체 키 식별자가 아닙니다.</exception>
      <returns>발신자에 따른 키 계약 프로토콜의 시작 날짜와 시간입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.EncryptedKey" /> 속성은 암호화된 수신자 키 재료를 검색합니다.</summary>
      <returns>암호화된 수신자 키 재료가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.KeyEncryptionAlgorithm" /> 속성은 키 계약을 수행하는 데 사용되는 알고리즘을 검색합니다.</summary>
      <returns>키 계약을 수행하는 데 사용되는 알고리즘의 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OriginatorIdentifierOrKey" /> 속성은 이를 보증하는 키 계약 알고리즘에 대한 키 계약 발신자와 관련된 정보를 검색합니다.</summary>
      <returns>키 계약 발신자에 대한 정보가 포함된 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.OtherKeyAttribute" /> 속성은 키 재료의 특성을 검색합니다.</summary>
      <exception cref="T:System.InvalidOperationException">받는 사람 식별자 형식은 주체 키 식별자가 아닙니다.</exception>
      <returns>키 재료의 특성입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.RecipientIdentifier" /> 속성은 수신자의 식별자를 검색합니다.</summary>
      <returns>받는 사람의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo.Version" /> 속성은 키 계약 수신자의 버전을 검색합니다. 이 버전은 이 클래스에서 개체에 대해 자동으로 설정됩니다. 이 값은 수신자가 키 계약 알고리즘에 참여하고 있음을 의미합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 개체의 버전입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 클래스는 키 전송 수신자에 대한 정보를 정의합니다.        키 전송 알고리즘에는 일반적으로 RSA 알고리즘이 사용됩니다. 이 알고리즘에서는 송신자가 공유 암호화 키를 생성하고 수신자에게 전송하여 수신자와의 공유 암호화 키를 설정합니다. 이 알고리즘은 암호화 키를 사용할 두 당사자가 모두 키 생성에 참여하여 해당 키에 대해 서로 합의해야 하는 키 규약 알고리즘과 반대입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.EncryptedKey" /> 속성은 이 키의 전송 수신자에 대한 암호화된 키를 검색합니다.</summary>
      <returns>암호화된 키를 나타내는 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.KeyEncryptionAlgorithm" /> 속성은 내용 암호화 키를 암호화하는 데 사용되는 키 암호화 알고리즘을 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />키 암호화 알고리즘 식별자를 저장 하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.RecipientIdentifier" /> 속성은 암호화된 내용과 관련된 주체 식별자를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" />키 전송에 참여 하는 받는 사람의 식별자를 저장 하는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo.Version" /> 속성은 키 전송 수신자의 버전을 검색합니다. 키 전송 수신자의 버전은 이 클래스의 개체에 대해 자동으로 설정됩니다. 이 값은 수신자가 키 전송 알고리즘에 참여하고 있음을 의미합니다.</summary>
      <returns>키 전송 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체의 버전을 나타내는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Builder">
      <summary>PKCS#12 PFX 데이터 값을 만들 수 있습니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12Builder" /> 클래스의 새 값을 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>바이트 배열에서 바이트 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents">PFX에 추가할 콘텐츠입니다.</param>
      <param name="passwordBytes">콘텐츠를 암호화할 때 암호로 사용할 바이트 배열입니다.</param>
      <param name="pbeParameters">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>범위에서 바이트 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents">PFX에 추가할 콘텐츠입니다.</param>
      <param name="passwordBytes">콘텐츠를 암호화할 때 암호로 사용할 바이트 범위입니다.</param>
      <param name="pbeParameters">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>범위에서 문자 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents">PFX에 추가할 콘텐츠입니다.</param>
      <param name="password">콘텐츠를 암호화할 때 암호로 사용할 범위입니다.</param>
      <param name="pbeParameters">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsEncrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>문자열에서 문자 기반 암호를 사용하여 암호화된 번들의 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents">PFX에 추가할 콘텐츠입니다.</param>
      <param name="password">콘텐츠를 암호화할 때 암호로 사용할 문자열입니다.</param>
      <param name="pbeParameters">콘텐츠를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 또는 <paramref name="pbeParameters" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 매개 변수 값이 이미 암호화되어 있습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.AddSafeContentsUnencrypted(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>암호화하지 않고 PFX에 콘텐츠를 추가합니다.</summary>
      <param name="safeContents">PFX에 추가할 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.Encode">
      <summary>봉인된 PFX의 콘텐츠를 인코딩하고 바이트 배열로 반환합니다.</summary>
      <exception cref="T:System.InvalidOperationException">PFX가 봉인되어 있지 않습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />가 <see langword="false" />임).</exception>
      <returns>PFX의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.ReadOnlySpan{System.Char},System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>범위에 있는 암호를 사용하여 콘텐츠에 대해 암호 기반 MAC(메시지 인증 코드)를 적용하여 PFX를 추가 변경 내용으로부터 봉인합니다.</summary>
      <param name="password">MAC를 컴퓨팅하기 위한 키로 사용할 암호입니다.</param>
      <param name="hashAlgorithm">MAC를 컴퓨팅할 때 사용할 해시 알고리즘입니다.</param>
      <param name="iterationCount">MAC를 컴퓨팅하는 데 사용하는 KDF(키 파생 함수)의 반복 횟수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 매개 변수가 0보다 작거나 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithMac(System.String,System.Security.Cryptography.HashAlgorithmName,System.Int32)">
      <summary>문자열의 암호를 사용하여 콘텐츠에 대해 암호 기반 MAC(메시지 인증 코드)를 적용하여 PFX를 추가 변경 내용으로부터 봉인합니다.</summary>
      <param name="password">MAC를 컴퓨팅하기 위한 키로 사용할 암호입니다.</param>
      <param name="hashAlgorithm">MAC를 컴퓨팅할 때 사용할 해시 알고리즘입니다.</param>
      <param name="iterationCount">MAC를 컴퓨팅하는 데 사용하는 KDF(키 파생 함수)의 반복 횟수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="iterationCount" /> 매개 변수가 0보다 작거나 같습니다.</exception>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.SealWithoutIntegrity">
      <summary>변조 방지를 적용하지 않고 추가 변경 내용으로부터 PFX를 봉인합니다.</summary>
      <exception cref="T:System.InvalidOperationException">PFX가 이미 봉인되어 있습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />는 <see langword="true" />임).</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Builder.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>봉인된 PFX의 콘텐츠를 제공된 버퍼로 인코딩하려고 시도합니다.</summary>
      <param name="destination">PKCS#12 PFX 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.InvalidOperationException">PFX가 봉인되어 있지 않습니다(<see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed" />가 <see langword="false" />임).</exception>
      <returns>
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Builder.IsSealed">
      <summary>PFX 데이터가 봉인되었는지를 나타내는 값을 가져옵니다.</summary>
      <returns>PFX 데이터가 봉인 되었는지 여부를 나타내는 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag">
      <summary>PKCS#12 CertBag를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.#ctor(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>지정된 인증서 형식 및 인코딩을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="certificateType">인증서 형식의 OID(개체 식별자)입니다.</param>
      <param name="encodedCertificate">인코딩된 인증서 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificateType" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedCertificate" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificate">
      <summary>X.509 퍼블릭 키 인증서로 해석된 CertBag 콘텐츠를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">콘텐츠 형식이 x.509 퍼블릭 키 인증서 콘텐츠 형식이 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">X.509 인증서 콘텐츠 형식의 콘텐츠가 유효하지 않습니다.</exception>
      <returns>CertBag의 콘텐츠에서 디코딩된 인증서입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12CertBag.GetCertificateType">
      <summary>인코딩된 인증서 값의 데이터 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns>인코딩된 인증서 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.EncodedCertificate">
      <summary>CertSafeBag의 해석되지 않은 인증서 콘텐츠를 가져옵니다.</summary>
      <returns>CertSafeBag의 해석 되지 않은 인증서 내용입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12CertBag.IsX509Certificate">
      <summary>인코딩된 인증서 값의 콘텐츠 형식이 X.509 퍼블릭 키 인증서 콘텐츠 형식인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 콘텐츠 형식이 x.509 공개 키 인증서 콘텐츠 형식 (1.2.840.113549.1.9.22.1) 이면이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode">
      <summary>PKCS#12 SafeContents 값과 연결된 암호화 종류를 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None">
      <summary>SafeContents 값은 암호화되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password">
      <summary>SafeContents 값은 암호로 암호화됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.PublicKey">
      <summary>SafeContents 값은 퍼블릭 키 암호화를 사용하여 암호화됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Unknown">
      <summary>SafeContents에 적용된 암호화 종류를 알 수 없거나 확인할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12Info">
      <summary>PKCS#12 PFX 콘텐츠의 데이터를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>제공된 데이터를 PKCS#12 PFX로 읽고 콘텐츠의 개체 보기를 반환합니다.</summary>
      <param name="encodedBytes">PKCS#12 PFX로 해석할 데이터입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 이 메서드를 통해 읽은 <paramref name="encodedBytes" />의 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipCopy">방어 복사본을 만들지 않고 <paramref name="encodedBytes" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBytes" /> 매개 변수의 콘텐츠가 PKCS#12 PFX로 디코딩되지 않았습니다.</exception>
      <returns>입력에서 디코딩된 PKCS#12 PFX의 개체 보기입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.ReadOnlySpan{System.Char})">
      <summary>
        <c>System.ReadOnlySpan{System.Char}</c>로 표시된 암호를 사용하여 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하려고 합니다.</summary>
      <param name="password">무결성을 확인하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 값이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />가 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 콘텐츠로 지정된 해시 알고리즘 옵션을 식별할 수 없거나 이 플랫폼에서 지원하지 않습니다.</exception>
      <returns>암호를 통해 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하는 데 성공하면 <see langword="true" />이고, 암호가 올바르지 않거나 콘텐츠가 변경된 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12Info.VerifyMac(System.String)">
      <summary>
        <see cref="T:System.String" />로 표시된 암호를 사용하여 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하려고 합니다.</summary>
      <param name="password">무결성을 확인하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode" /> 값이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password" />가 아닙니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">PKCS#12 PFX 콘텐츠로 지정된 해시 알고리즘 옵션을 식별할 수 없거나 이 플랫폼에서 지원하지 않습니다.</exception>
      <returns>암호를 통해 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠의 무결성을 확인하는 데 성공하면 <see langword="true" />이고, 암호가 올바르지 않거나 콘텐츠가 변경된 경우 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe">
      <summary>PFX AuthenticatedSafe에 있는 SafeContents 값의 읽기 전용 컬렉션을 가져옵니다.</summary>
      <returns>PFX AuthenticatedSafe에 있는 SafeContents 값의 읽기 전용 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12Info.IntegrityMode">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> 콘텐츠에 대해 제공된 변조 방지의 형식을 나타내는 값을 가져옵니다.</summary>
      <returns>콘텐츠에 대해 제공 된 변조 방지의 유형을 나타내는 열거형 멤버 중 하나입니다 <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12Info.AuthenticatedSafe" /> .</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode">
      <summary>PKCS#12 PFX 값에 적용되는 변조 방지의 유형을 나타냅니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.None">
      <summary>PKCS#12 PFX 값에는 변조 방지가 적용되지 않습니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Password">
      <summary>PKCS#12 PFX 값에는 암호로 키가 지정된 MAC(메시지 인증 코드)로 변조 방지가 적용됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.PublicKey">
      <summary>PKCS#12 PFX 값에는 퍼블릭 키 암호화를 사용하는 디지털 시그니처로 변조 방지가 적용됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.Pkcs12IntegrityMode.Unknown">
      <summary>PKCS#12 PFX에 적용되는 변조 방지의 유형을 알 수 없거나 확인할 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag">
      <summary>PKCS#8 PrivateKeyInfo를 콘텐츠로 포함하는 컨테이너인 PKCS#12의 KeyBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>인코딩된 기존 PKCS#8 PrivateKeyInfo 값에서 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="pkcs8PrivateKey">BER 인코딩된 PKCS#8 PrivateKeyInfo 값입니다.</param>
      <param name="skipCopy">방어 복사본을 만들지 않고 <paramref name="pkcs8PrivateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pkcs8privateKey" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12KeyBag.Pkcs8PrivateKey">
      <summary>이 모음을 통해 전송된 PKCS#8 PrivateKeyInfo 값을 포함하는 메모리 값을 가져옵니다.</summary>
      <returns>이 모음에서 전송한 PKCS # 8 PrivateKeyInfo 값을 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag">
      <summary>PKCS#12 사양에서 SafeBag 값의 핵심 동작을 정의하고 파생 클래스의 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.#ctor(System.String,System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeBag" /> 클래스를 초기화하기 위해 파생 클래스의 생성자에서 호출됩니다.</summary>
      <param name="bagIdValue">이 SafeBag의 데이터 형식을 나타내는 점으로 구분된 10진수 형식의 OID(개체 식별자)입니다.</param>
      <param name="encodedBagValue">SafeBag 콘텐츠의 ASN.1 BER로 인코딩된 값입니다.</param>
      <param name="skipCopy">방어 복사본을 만들지 않고 <paramref name="encodedBagValue" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bagIdValue" /> 매개 변수가 <see langword="null" />이거나 빈 문자열인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedBagValue" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Encode">
      <summary>SafeBag 값을 인코딩하고 바이트 배열로 반환합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">생성자에 전달된 개체 식별자 값이 잘못되었습니다.</exception>
      <returns>SafeBag의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.GetBagId">
      <summary>이 SafeBag의 콘텐츠 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns>이 SafeBag의 콘텐츠 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>SafeBag 값을 제공된 버퍼로 인코딩하려고 시도합니다.</summary>
      <param name="destination">인코딩된 SafeBag 값을 받을 바이트 범위입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">생성자에 전달된 개체 식별자 값이 잘못되었습니다.</exception>
      <returns>
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.Attributes">
      <summary>SafeBag 값으로 인코딩할 특성의 수정 가능한 컬렉션을 가져옵니다.</summary>
      <returns>SafeBag 값으로 인코딩할 수정할 수 있는 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeBag.EncodedBagValue">
      <summary>이 SafeBag 콘텐츠의 ASN.1 BER 인코딩을 가져옵니다.</summary>
      <returns>이 SafeBag의 콘텐츠를 asn.1로 인코딩한 것입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents">
      <summary>PKCS#12 SafeContents 값을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContents" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12CertBag" />를 통해 SafeContents에 인증서를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="certificate">추가할 인증서입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="certificate" /> 매개 변수의 상태가 잘못되었습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddKeyUnencrypted(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12KeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key">추가할 비대칭 프라이빗 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보내지 못했습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddNestedContents(System.Security.Cryptography.Pkcs.Pkcs12SafeContents)">
      <summary>새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag" />를 통해 SafeContents에 중첩된 SafeContents를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="safeContents">SafeContents에 추가할 중첩된 콘텐츠입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeContents" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safeContents" /> 매개 변수가 암호화됩니다.</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSafeBag(System.Security.Cryptography.Pkcs.Pkcs12SafeBag)">
      <summary>SafeContents에 SafeBag를 추가합니다.</summary>
      <param name="safeBag">추가할 SafeBag 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safeBag" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddSecret(System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte})">
      <summary>새로운 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag" />를 통해 지정된 형식 식별자를 사용하는 ASN.1 BER로 인코딩된 값을 SafeContents에 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="secretType">비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</param>
      <param name="secretValue">추가할 비밀을 나타내는 BER로 인코딩된 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="secretType" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="secretValue" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.Byte[],System.Security.Cryptography.PbeParameters)">
      <summary>배열의 바이트 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="passwordBytes">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보내지 못했습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>범위의 바이트 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="passwordBytes">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보내지 못했습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>범위의 문자 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="password">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보내지 못했습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.AddShroudedKey(System.Security.Cryptography.AsymmetricAlgorithm,System.String,System.Security.Cryptography.PbeParameters)">
      <summary>문자열의 문자 기반 암호에서 새 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />를 통해 SafeContents에 비대칭 프라이빗 키를 추가하고 새로 만든 모음 인스턴스를 반환합니다.</summary>
      <param name="key">추가할 비대칭 프라이빗 키입니다.</param>
      <param name="password">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">인스턴스는 읽기 전용입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">키를 내보내지 못했습니다.</exception>
      <returns>SafeContents에 추가된 모음 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.Byte[])">
      <summary>배열의 바이트 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="passwordBytes">암호화된 콘텐츠의 암호를 해독하기 위해 암호로 사용할 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호가 잘못되었습니다.

또는

콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Byte})">
      <summary>범위에서 바이트 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="passwordBytes">암호화된 콘텐츠의 암호를 해독하기 위해 암호로 사용할 바이트입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호가 잘못되었습니다.

또는

콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.ReadOnlySpan{System.Char})">
      <summary>범위에서 문자 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="password">암호화된 콘텐츠의 암호를 해독하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호가 잘못되었습니다.

또는

콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.Decrypt(System.String)">
      <summary>문자열에서 문자 기반 암호를 사용하여 이 SafeContents 값의 콘텐츠를 해독합니다.</summary>
      <param name="password">암호화된 콘텐츠의 암호를 해독하는 데 사용할 암호입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode" /> 속성이 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.Password" />이 아닌 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호가 잘못되었습니다.

또는

콘텐츠의 암호를 해독하지 못했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.GetBags">
      <summary>SafeContents 내에 포함된 SafeBag 값의 열거 가능 표현을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">콘텐츠가 암호화됩니다.</exception>
      <returns>SafeContents 내에 포함된 SafeBag 값의 열거 가능 표현입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.ConfidentialityMode">
      <summary>콘텐츠에 적용되는 암호화 형식을 나타내는 값을 가져옵니다.</summary>
      <returns>내용에 적용 되는 암호화 유형을 나타내는 열거형 값 중 하나입니다. 기본값은 <see cref="F:System.Security.Cryptography.Pkcs.Pkcs12ConfidentialityMode.None" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContents.IsReadOnly">
      <summary>이 인스턴스가 읽기 전용 상태인지 아닌지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 이 값이 읽기 전용 상태 이면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다. 기본값은 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag">
      <summary>PKCS#12 SafeContents 값이 콘텐츠로 포함되어 있는 컨테이너인 PKCS#12의 SafeContentsBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SafeContentsBag.SafeContents">
      <summary>이 모음 내에 포함된 SafeContents 값을 가져옵니다.</summary>
      <returns>이 모음 내에 포함 된 SafeContents 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12SecretBag">
      <summary>형식 식별자가 있는 임의 데이터를 콘텐츠로 갖고 있는 컨테이너인 PKCS#12의 SecretBag를 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.GetSecretType">
      <summary>비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)를 가져옵니다.</summary>
      <returns>비밀 값의 데이터 형식을 식별하는 OID(개체 식별자)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12SecretBag.SecretValue">
      <summary>모음의 BER 인코딩된 콘텐츠를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns>모음의 BER 인코딩된 콘텐츠를 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag">
      <summary>PKCS#8 EncryptedPrivateKeyInfo를 콘텐츠로 포함하는 컨테이너인 PKCS#12의 ShroudedKeyBag을 나타냅니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.#ctor(System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>인코딩된 기존 PKCS#8 EncryptedPrivateKeyInfo 값에서 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag" />의 새 인스턴스를 초기화합니다.</summary>
      <param name="encryptedPkcs8PrivateKey">BER 인코딩된 PKCS#8 EncryptedPrivateKeyInfo 값입니다.</param>
      <param name="skipCopy">방어 복사본을 만들지 않고 <paramref name="encryptedPkcs8PrivateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encryptedPkcs8privateKey" /> 매개 변수가 단일 ASN.1 BER로 인코딩된 값을 나타내지 않는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs12ShroudedKeyBag.EncryptedPkcs8PrivateKey">
      <summary>이 모음을 통해 전송된 PKCS#8 EncryptedPrivateKeyInfo 값을 포함하는 메모리 값을 가져옵니다.</summary>
      <returns>이 모음에서 전송한 PKCS # 8 EncryptedPrivateKeyInfo 값을 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo">
      <summary>PKCS # 8 PrivateKeyInfo 및 EncryptedPrivateKeyInfo 값의 검사 및 생성을 사용하도록 설정합니다. 이 클래스는 상속될 수 없습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.#ctor(System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.ReadOnlyMemory{System.Byte},System.Boolean)">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="algorithmId">이 키를 사용할 비대칭 알고리즘을 식별하는 OID(개체 식별자)입니다.</param>
      <param name="algorithmParameters">이 키와 연결된 BER 인코딩된 알고리즘 매개 변수입니다. 또는 인코딩할 때 알고리즘 매개 변수를 생략하려면 <see langword="null" />입니다.</param>
      <param name="privateKey">알고리즘별로 인코딩된 프라이빗 키입니다.</param>
      <param name="skipCopies">방어 복사본을 만들지 않고 <paramref name="algorithmParameters" /> 및 <paramref name="privateKey" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="algorithmId" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="algorithmParameters" /> 매개 변수가 <see langword="null" />이 아니거나, 비어 있거나, 단일 BER 인코딩된 값입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Create(System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>지정된 키를 PKCS#8 PrivateKeyInfo로 내보내고 디코딩된 해석을 반환합니다.</summary>
      <param name="privateKey">PKCS#8 PrivateKeyInfo에 표시할 프라이빗 키입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="privateKey" /> 매개 변수가 <see langword="null" />인 경우</exception>
      <returns>내보낸 PKCS#8 PrivateKeyInfo의 디코딩된 해석입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Decode(System.ReadOnlyMemory{System.Byte},System.Int32@,System.Boolean)">
      <summary>제공된 데이터를 PKCS#8 PrivateKeyInfo로 읽고 콘텐츠의 개체 보기를 반환합니다.</summary>
      <param name="source">PKCS#8 PrivateKeyInfo 값으로 해석할 데이터입니다.</param>
      <param name="bytesRead">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="skipCopy">방어 복사본을 만들지 않고 <paramref name="source" />를 저장하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 기본값은 <see langword="false" />입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="source" /> 매개 변수의 콘텐츠가 PKCS#8 PrivateKeyInfo로 성공적으로 디코딩되지 않았습니다.</exception>
      <returns>PKCS#8 PrivateKeyInfo로 디코딩된 콘텐츠의 개체 보기입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Byte},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>제공된 바이트 기반 암호를 사용하여 제공된 데이터의 암호를 해독하고 출력을 PKCS#8 PrivateKeyInfo의 개체 보기로 디코딩합니다.</summary>
      <param name="passwordBytes">키 자료를 해독할 때 암호로 사용할 바이트입니다.</param>
      <param name="source">ASN.1-BER 인코딩에 있는 PKCS#8 EncryptedPrivateKeyInfo 구조체로 읽을 데이터입니다.</param>
      <param name="bytesRead">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호가 잘못되었습니다.

또는

<paramref name="source" />의 콘텐츠에서는 적용할 KDF(키 파생 함수)가 <see cref="T:System.Char" /> 기반 암호가 필요한 레거시 PKCS#12 KDF임을 나타냅니다.

또는

<paramref name="source" />의 콘텐츠에서 ASN.1-BER-encoded PKCS#8 EncryptedPrivateKeyInfo 구조체를 나타내지 않습니다.</exception>
      <returns>PKCS#8 PrivateKeyInfo로 디코딩된 암호 해독된 콘텐츠의 개체 보기입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.DecryptAndDecode(System.ReadOnlySpan{System.Char},System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>제공된 문자 기반 암호를 사용하여 제공된 데이터의 암호를 해독하고 출력을 PKCS#8 PrivateKeyInfo의 개체 보기로 디코딩합니다.</summary>
      <param name="password">키 자료를 암호 해독할 때 사용할 암호입니다.</param>
      <param name="source">ASN.1-BER 인코딩에 있는 PKCS#8 EncryptedPrivateKeyInfo 구조체의 바이트입니다.</param>
      <param name="bytesRead">이 메서드가 반환될 때 <paramref name="source" />에서 읽은 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>PKCS#8 PrivateKeyInfo로 디코딩된 암호 해독된 콘텐츠의 개체 보기입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encode">
      <summary>이 인스턴스의 속성 데이터를 PKCS#8 PrivateKeyInfo로 인코딩하고 인코딩을 바이트 배열로 반환합니다.</summary>
      <returns>PKCS#8 PrivateKeyInfo의 인코딩된 형식을 나타내는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters)">
      <summary>지정된 바이트 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성합니다.</summary>
      <param name="passwordBytes">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="pbeParameters" />는 <see cref="T:System.Char" /> 기반 암호가 필요한 <see cref="F:System.Security.Cryptography.PbeEncryptionAlgorithm.TripleDes3KeyPkcs12" />를 사용해야 함을 나타냅니다.</exception>
      <returns>PKCS#8 EncryptedPrivateKeyInfo의 인코딩된 형식을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Encrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters)">
      <summary>지정된 문자 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성합니다.</summary>
      <param name="password">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <returns>PKCS#8 EncryptedPrivateKeyInfo의 인코딩된 형식을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>이 인스턴스의 속성 데이터를 PKCS#8 PrivateKeyInfo로 인코딩하고 그 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="destination">PKCS # 8 PrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>지정된 바이트 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성하고, 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="passwordBytes">키 자료를 암호화할 때 암호로 사용할 바이트입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <param name="destination">PKCS#8 EncryptedPrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.TryEncrypt(System.ReadOnlySpan{System.Char},System.Security.Cryptography.PbeParameters,System.Span{System.Byte},System.Int32@)">
      <summary>지정된 문자 기반 암호 및 암호화 매개 변수를 사용하여 암호화한 후 이 개체의 속성 콘텐츠에서 PKCS#8 EncryptedPrivateKeyInfo를 생성하고, 결과를 제공된 버퍼에 씁니다.</summary>
      <param name="password">키 자료를 암호화할 때 사용할 암호입니다.</param>
      <param name="pbeParameters">키 자료를 암호화할 때 사용할 PBE(암호 기반 암호화) 매개 변수입니다.</param>
      <param name="destination">PKCS#8 EncryptedPrivateKeyInfo 데이터를 받을 바이트 범위입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 때 <paramref name="destination" />에 쓴 바이트 수를 나타내는 값을 포함합니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="destination" />이 출력을 받을 충분한 크기이면 <see langword="true" />, 아니면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmId">
      <summary>이 키를 사용할 알고리즘을 식별하는 OID(개체 식별자) 값을 가져옵니다.</summary>
      <returns>이 키가 있는 알고리즘을 식별 하는 OID (개체 식별자) 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.AlgorithmParameters">
      <summary>이 키와 연결된 BER 인코딩된 알고리즘 매개 변수를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns>이 키와 연결 된 BER 인코딩된 알고리즘 매개 변수를 포함 하는 메모리 값 <see langword="null" /> 입니다. 매개 변수가 없는 경우입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.Attributes">
      <summary>이 프라이빗 키의 수정 가능한 특성 컬렉션을 가져옵니다.</summary>
      <returns>개인 키를 사용 하 여 인코딩할 수정할 수 있는 특성의 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs8PrivateKeyInfo.PrivateKeyBytes">
      <summary>알고리즘별로 인코딩된 프라이빗 키를 나타내는 메모리 값을 가져옵니다.</summary>
      <returns>알고리즘과 인코딩된 개인 키를 나타내는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject">
      <summary>CMS/PKCS #7 및 PKCS #9 작업에 사용되는 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.AsnEncodedData)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 해당 특성 형식과 값으로 사용하여 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="asnEncodedData">사용할 PKCS #9 특성 형식과 값이 포함된 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="Value" />의 <paramref name="Oid" /> 멤버의 <paramref name="asnEncodedData" />  멤버 길이는 0입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Oid" />의 <paramref name="asnEncodedData" /> 멤버는 <see langword="null" />입니다.  
  
또는 
이 <paramref name="Value" /> 멤버의 <paramref name="Oid" />인 경우 <paramref name="asnEncodedData" />의 멤버는 <see langword="null" />입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.Security.Cryptography.Oid,System.Byte[])">
      <summary>지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 특성 형식으로 사용하고 지정된 ASN.1 인코딩 데이터를 특성 값으로 사용하여 <see cref="T:System.Security.Cryptography.Oid" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid">PKCS #9 특성 형식을 나타내는 개체입니다.</param>
      <param name="encodedData">PKCS #9 특성 값을 나타내는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.#ctor(System.String,System.Byte[])">
      <summary>OID(개체 식별자)에 대한 지정된 문자열 표현을 특성 형식으로 사용하고 지정된 ASN.1 인코딩 데이터를 특성 값으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="oid">PKCS #9 특성 형식을 나타내는 OID의 문자열 표현입니다.</param>
      <param name="encodedData">PKCS #9 특성 값이 포함된 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>지정된 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체에서 이 <see cref="T:System.Security.Cryptography.AsnEncodedData" />에 대한 PKCS #9 특성 형식과 값을 복사합니다.</summary>
      <param name="asnEncodedData">사용할 PKCS #9 특성 형식과 값이 포함된 개체입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asnEncodeData" />는 호환되는 특성 형식을 나타내지는 않습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asnEncodedData" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject.Oid">
      <summary>이 <see cref="T:System.Security.Cryptography.Oid" /> 개체와 관련된 특성의 형식을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체를 가져옵니다.</summary>
      <returns>이 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9AttributeObject" /> 개체와 관련된 특성의 형식을 나타내는 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 클래스는 CMS/PKCS #7 메시지의 내용 형식을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9ContentType" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9ContentType.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9ContentType.ContentType" /> 속성은 내용 형식이 들어 있는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 가져옵니다.</summary>
      <returns>내용 형식이 들어 있는 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스는 CMS/PKCS #7 메시지의 내용에 대한 설명을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값의 배열을 CMS/PKCS #7 메시지의 내용에 대한 인코딩된 설명으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedDocumentDescription">CMS/PKCS #7 메시지에 대한 인코딩된 설명을 지정하는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.#ctor(System.String)" /> 생성자는 CMS/PKCS #7 메시지의 내용에 대한 지정된 설명을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="documentDescription">CMS/PKCS #7 메시지에 대한 설명을 지정하는 <see cref="T:System.String" /> 클래스의 인스턴스입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription.DocumentDescription" /> 속성은 문서 설명을 검색합니다.</summary>
      <returns>문서 설명이 들어 있는 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스는 CMS/PKCS #7 메시지의 이름을 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값의 배열을 CMS/PKCS #7 메시지의 내용에 대한 인코딩된 이름으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedDocumentName">CMS/PKCS #7 메시지에 대한 인코딩된 이름을 지정하는 바이트 값의 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.#ctor(System.String)" /> 생성자는 CMS/PKCS #7 메시지에 대한 지정된 이름을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9DocumentName" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="documentName">CMS/PKCS #7 메시지에 대한 이름을 지정하는 <see cref="T:System.String" /> 개체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9DocumentName.DocumentName" /> 속성은 문서 이름을 검색합니다.</summary>
      <returns>문서 이름이 들어 있는 <see cref="T:System.String" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId">
      <summary>PKCS#9의 LocalKeyId 특성을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor">
      <summary>빈 키 식별자 값을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.Byte[])">
      <summary>바이트 배열에 지정된 키 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyId">키 식별자를 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>바이트 범위에 지정된 키 식별자를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="keyId">키 식별자를 포함하는 바이트 배열입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9LocalKeyId.KeyId">
      <summary>이 특성에서 키 식별자를 포함하는 메모리 값을 가져옵니다.</summary>
      <returns>이 특성의 키 식별자를 포함 하는 메모리 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 클래스는 CMS/PKCS #7 메시지의 메시지 다이제스트를 정의합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체에서 정보를 복사합니다.</summary>
      <param name="asnEncodedData">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest.MessageDigest" /> 속성은 메시지 다이제스트를 검색합니다.</summary>
      <returns>메시지 다이제스트가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스는 서명의 서명 날짜와 시간을 정의합니다. 인증된 날짜와 시간을 디지털 서명과 함께 사용하는 경우 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 개체를 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체의 인증된 특성으로 사용할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.Byte[])" /> 생성자는 지정된 바이트 값 배열을 CMS/PKCS #7 메시지의 콘텐츠에 대한 인코딩된 서명 날짜와 시간으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="encodedSigningTime">CMS/PKCS #7 메시지의 인코딩된 서명 날짜와 시간을 지정하는 바이트 값 배열입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.#ctor(System.DateTime)" /> 생성자는 지정된 서명 날짜와 시간을 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signingTime">서명의 서명 날짜와 시간을 나타내는 <see cref="T:System.DateTime" /> 구조체입니다.</param>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
      <summary>
        <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체의 정보를 복사합니다.</summary>
      <param name="asnEncodedData">정보를 복사할 <see cref="T:System.Security.Cryptography.AsnEncodedData" /> 개체입니다.</param>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.Pkcs9SigningTime.SigningTime" /> 속성은 메시지를 서명한 날짜와 시간을 나타내는 <see cref="T:System.DateTime" /> 구조체를 검색합니다.</summary>
      <returns>문서를 서명한 날짜와 시간이 들어 있는 <see cref="T:System.DateTime" /> 구조체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.PublicKeyInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /> 클래스는 공개 키와 관련된 정보를 나타냅니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.Algorithm" /> 속성은 공개 키와 관련된 알고리즘 식별자를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" />알고리즘을 나타내는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.PublicKeyInfo.KeyValue" /> 속성은 공개 키 쌍의 인코딩된 공개 구성 요소에 대한 값을 검색합니다.</summary>
      <returns>공개 키 쌍의 인코딩된 공개 구성 요소를 나타내는 바이트 값의 배열입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 클래스는 CMS/PKCS #7 메시지 수신자에 대한 정보를 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo" /> 및 <see cref="T:System.Security.Cryptography.Pkcs.KeyTransRecipientInfo" /> 클래스에 상속되는 추상 클래스입니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.EncryptedKey" /> 추상 속성은 암호화된 수신자 키 재료를 검색합니다.</summary>
      <returns>암호화된 수신자 키 재료가 포함된 바이트 값의 배열입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.KeyEncryptionAlgorithm" /> 추상 속성은 키 설정을 수행하는 데 사용된 알고리즘을 검색합니다.</summary>
      <returns>CMS/PKCS #7 메시지의 발신자와 수신자 사이에 키를 설정하는 데 사용된 알고리즘의 값이 들어 있는 <see cref="T:System.Security.Cryptography.Pkcs.AlgorithmIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.RecipientIdentifier" /> 추상 속성은 수신자의 식별자를 검색합니다.</summary>
      <returns>수신자의 식별자가 포함된 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Type" /> 속성은 수신자의 형식을 검색합니다. 수신자 형식은 CMS/PKCS #7 메시지의 발신자와 수신자 사이에 키를 설정하는 데 사용되는 두 가지 주요 프로토콜을 결정합니다.</summary>
      <returns>수신자 형식을 정의하는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 열거형의 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfo.Version" /> 추상 속성은 수신자 정보의 버전을 검색합니다. 파생된 클래스에서는 해당 개체에 대해 이 속성을 자동으로 설정합니다. 이 값은 메시지를 보호하기 위해 PKCS #7을 사용하는지 CMS(암호화 메시지 구문)를 사용하는지 나타냅니다. 또한 버전은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체에서 암호화 키를 설정하는 데 키 계약 알고리즘을 사용하는지 키 전송 알고리즘을 사용하는지 여부도 나타냅니다.</summary>
      <returns>
        <see cref="T:System.Int32" /> 개체의 버전을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체의 컬렉션을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.RecipientInfo[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체의 배열입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns>컬렉션의 항목 수를 나타내는 int 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 <see langword="false" />를 반환합니다. 이는 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미합니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 값입니다. 이 값은 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미하는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체를 검색합니다.</summary>
      <param name="index">컬렉션의 인덱스를 나타내는 int 값입니다. 인덱스는 0부터 시작합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <returns>지정한 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Object" />컬렉션에 대 한 액세스를 동기화 하는 데 사용 되는 개체 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체로 이동합니다.</summary>
      <returns>이 메서드는 열거형이 성공적으로 이동되었는지 여부를 나타내는 부울 값을 반환합니다. 열거형이 다음 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 개체에 성공적으로 전달되면 이 메서드는 <see langword="true" />를 반환합니다. 열거형이 열거형의 마지막 항목을 지나 이동하면 이 메서드는 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 수신자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.RecipientInfoEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfo" /> 컬렉션에서 현재 수신자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.RecipientInfoType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.RecipientInfoType" /> 열거형은 수신자 정보 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyAgreement">
      <summary>키 동의 수신자 정보입니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.KeyTransport">
      <summary>키 전송 수신자 정보입니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.RecipientInfoType.Unknown">
      <summary>수신자 정보 형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest">
      <summary>IETF RFC 3161의 타임스탬프 요청을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>지정된 알고리즘으로 제공된 데이터를 해시하여 타임스탬프 요청을 만듭니다.</summary>
      <param name="data">타임스탬프할 데이터이며 이 메서드로 해시됩니다.</param>
      <param name="hashAlgorithm">이 타임스탬프 요청과 사용할 해시 알고리즘입니다.</param>
      <param name="requestedPolicyId">TSA(타임스탬프 기관)에서 사용해야 하는 타임스탬프 정책의 OID(개체 식별자)입니다. 또는 기본 설정을 표시하지 않으려면 <see langword="null" />입니다.</param>
      <param name="nonce">요청을 응답과 연결하기 위해 해당 요청을 고유하게 식별하는 선택적 nonce(한 번 사용되는 숫자)입니다. 값은 부호 없는 big-endian 정수로 해석되며 인코딩 형식으로 정규화될 수 있습니다.</param>
      <param name="requestSignerCertificates">TSA(타임스탬프 기관)에서 발급한 타임스탬프 토큰에 서명 인증서가 포함되어야 함을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="extensions">요청에 포함할 선택적 확장 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /><see langword="null" /> 또는 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" />은 알려진 해시 알고리즘이 아닙니다.</exception>
      <returns>선택한 값을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>미리 계산된 해시 값 및 해시 알고리즘의 이름을 사용하여 타임스탬프 요청을 만듭니다.</summary>
      <param name="hash">타임스탬프가 적용될 미리 계산된 해시 값입니다.</param>
      <param name="hashAlgorithm">
        <paramref name="hash" />를 생성하는 데 사용되는 해시 알고리즘입니다.</param>
      <param name="requestedPolicyId">TSA(타임스탬프 인증 기관)에서 사용해야 하는 타임스탬프 정책의 OID(개체 식별자)입니다. 또는 기본 설정을 표시하지 않으려면 <see langword="null" />입니다.</param>
      <param name="nonce">요청을 응답에 고유하게 일치시키는 데 사용되는 선택적 값이거나, 요청에 nonce를 포함하지 않을 <see langword="null" />입니다.</param>
      <param name="requestSignerCertificates">TSA(타임스탬프 기관)에서 발급한 타임스탬프 토큰에 서명 인증서가 포함되어야 함을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="extensions">요청에 포함할 선택적 확장 컬렉션입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" />은 알려진 해시 알고리즘이 아닙니다.</exception>
      <returns>선택한 값을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromHash(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>미리 계산된 해시 값 및 해시 알고리즘의 개체 식별자를 사용하여 타임스탬프 요청을 만듭니다.</summary>
      <param name="hash">타임스탬프가 적용될 미리 계산된 해시 값입니다.</param>
      <param name="hashAlgorithmId">
        <paramref name="hash" />를 생성한 해시 알고리즘의 OID(개체 식별자)입니다.</param>
      <param name="requestedPolicyId">TSA(타임스탬프 기관)에서 사용해야 하는 타임스탬프 정책의 OID(개체 식별자)입니다. 또는 기본 설정을 표시하지 않으려면 <see langword="null" />입니다.</param>
      <param name="nonce">요청을 응답과 연결하기 위해 해당 요청을 고유하게 식별하는 선택적 nonce(한 번 사용되는 숫자)입니다. 값은 부호 없는 big-endian 정수로 해석되며 인코딩 형식으로 정규화될 수 있습니다.</param>
      <param name="requestSignerCertificates">TSA(타임스탬프 기관)에서 발급한 타임스탬프 토큰에 서명 인증서가 포함되어야 함을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="extensions">요청에 포함할 선택적 확장 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="hashAlgorithmId" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithmId" />.<see cref="P:System.Security.Cryptography.Oid.Value" /> 는 유효한 OID가 아닙니다.</exception>
      <returns>선택한 값을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.CreateFromSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.Oid,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Boolean,System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <summary>지정된 알고리즘으로 제공된 서명자의 서명을 해시하여 타임스탬프 요청을 만듭니다.</summary>
      <param name="signerInfo">타임스탬프 요청을 빌드할 CMS 서명자 정보입니다.</param>
      <param name="hashAlgorithm">이 타임스탬프 요청과 사용할 해시 알고리즘입니다.</param>
      <param name="requestedPolicyId">TSA(타임스탬프 인증 기관)에서 사용해야 하는 타임스탬프 정책의 OID(개체 식별자)입니다. 또는 기본 설정을 표시하지 않으려면 <see langword="null" />입니다.</param>
      <param name="nonce">요청을 응답과 연결하기 위해 해당 요청을 고유하게 식별하는 선택적 nonce(한 번 사용되는 숫자)입니다. 값은 부호 없는 big-endian 정수로 해석되며 인코딩 형식으로 정규화될 수 있습니다.</param>
      <param name="requestSignerCertificates">TSA(타임스탬프 기관)에서 발급한 타임스탬프 토큰에 서명 인증서가 포함되어야 함을 나타내려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="extensions">요청에 포함할 선택적 확장 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /><see langword="null" /> 또는 <see cref="F:System.String.Empty" />입니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="hashAlgorithm" />은 알려진 해시 알고리즘이 아닙니다.</exception>
      <returns>선택한 값을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Encode">
      <summary>타임스탬프 요청을 인코딩하고 바이트 배열로 반환합니다.</summary>
      <returns>DER로 인코딩된 타임스탬프 요청을 포함하는 바이트 배열입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetExtensions">
      <summary>이 요청에 존재하는 확장의 복사본을 포함하는 컬렉션을 가져옵니다.</summary>
      <returns>이 요청에 존재하는 확장의 복사본을 포함하는 컬렉션입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetMessageHash">
      <summary>이 타임스탬프 요청의 데이터 해시를 가져옵니다.</summary>
      <returns>이 타임스탬프 요청의 데이터 해시를 읽기 전용 메모리 값으로 만듭니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.GetNonce">
      <summary>이 타임스탬프 요청의 nonce를 가져옵니다.</summary>
      <returns>이 타임스탬프 요청의 nonce(있는 경우)를 읽기 전용 메모리 값으로 가져옵니다. 그렇지 않으면 <see langword="null" />을 가져옵니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.ProcessResponse(System.ReadOnlyMemory{System.Byte},System.Int32@)">
      <summary>인코딩된 타임스탬프 응답과 이 요청을 결합하여 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />을 생성합니다.</summary>
      <param name="responseBytes">DER로 인코딩된 타임스탬프 응답입니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 <paramref name="responseBytes" />에서 읽힌 바이트 수입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>이 요청에 해당하는 응답의 타임스탬프 토큰입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest@,System.Int32@)">
      <summary>
        <paramref name="encodedBytes" />의 콘텐츠를 DER로 인코딩된 타임스탬프 요청으로 해석하려고 합니다.</summary>
      <param name="encodedBytes">DER로 인코딩된 타임스탬프 요청을 포함하는 버퍼입니다.</param>
      <param name="request">이 메서드가 반환될 때 디코딩에 성공하면 제대로 디코딩된 타임스탬프 요청이고, 디코딩에 실패한 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 <paramref name="encodedBytes" />에서 읽힌 바이트 수입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="encodedBytes" />가 제대로 타임스탬프 요청으로 해석되었으면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>인스턴스를 IETF RFC 3161 <c>TimeStampReq</c>로 인코딩하여 바이트를 제공된 버퍼에 쓰려고 합니다.</summary>
      <param name="destination">인코딩된 요청을 받을 버퍼입니다.</param>
      <param name="bytesWritten">이 메서드가 반환될 경우 <paramref name="destination" />에 기록되는 총 바이트 수입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="destination" />이 인코딩된 요청을 받을 수 있을 만큼 길면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HasExtensions">
      <summary>요청에 확장이 있는지 여부를 나타냅니다.</summary>
      <returns>
        <see langword="true" /> 요청에 확장이 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.HashAlgorithmId">
      <summary>요청과 관련된 해시 알고리즘의 OID(개체 식별자)를 가져옵니다.</summary>
      <returns>요청과 연결 된 해시 알고리즘의 OID (개체 식별자)입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestedPolicyId">
      <summary>요청의 정책 ID를 가져오거나, 정책 ID를 요청하지 않은 경우 <see langword="null" />을 가져옵니다.</summary>
      <returns>요청에 대 한 정책 ID 이거나, <see langword="null" /> 요청 된 정책 id가 없는 경우입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.RequestSignerCertificate">
      <summary>요청에서 타임스탬프 인증 기관 인증서가 응답에 있어야 함을 표시하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> 응답에 타임 스탬프 기관 인증서가 포함 되어야 하는 경우 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampRequest.Version">
      <summary>이 요청의 데이터 형식 버전 번호를 가져옵니다.</summary>
      <returns>이 요청에 대 한 데이터 형식 버전 번호입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken">
      <summary>IETF RFC 3161의 타임스탬프 토큰을 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.AsSignedCms">
      <summary>RFC3161 타임스탬프 토큰의 서명된 CMS(암호화 메시지 구문) 표현을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken" />의 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 표현입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampToken@,System.Int32@)">
      <summary>
        <paramref name="encodedBytes" />의 콘텐츠를 DER로 인코딩된 타임스탬프 토큰으로 해석하려고 합니다.</summary>
      <param name="encodedBytes">DER로 인코딩된 타임스탬프 토큰을 포함하는 버퍼입니다.</param>
      <param name="token">이 메서드가 반환될 때 디코딩에 성공하면 제대로 디코딩된 타임스탬프 토큰이고, 디코딩에 실패한 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="bytesConsumed">이 메서드가 반환될 때 <paramref name="encodedBytes" />에서 읽힌 바이트 수입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <returns>
        <paramref name="encodedBytes" />가 제대로 타임스탬프 토큰으로 해석되었으면 <see langword="true" />이고 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForData(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>현재 토큰이 제공된 데이터에 대해 유효한 타임스탬프 토큰인지 확인합니다.</summary>
      <param name="data">이 타임스탬프 토큰에 대해 확인할 데이터입니다.</param>
      <param name="signerCertificate">이 메서드가 반환될 때 이 토큰을 서명한 TSA(타임스탬프 기관)의 인증서이거나 서명자 인증서를 확인할 수 없는 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="extraCandidates">토큰에 포함된 인증서에 더해 TSA(타임스탬프 기관) 인증서로 간주해야 할 선택적인 인증서 컬렉션입니다.</param>
      <returns>TSA(타임스탬프 기관) 인증서가 있고, 인증서 퍼블릭 키가 토큰 서명의 유효성을 검사하며, 토큰이 제공된 데이터의 해시와 일치하면 <see langword="true" />이고 그렇지 않으며 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>현재 토큰이 제공된 데이터 해시 및 알고리즘 식별자에 대해 유효한 타임스탬프 토큰인지 확인합니다.</summary>
      <param name="hash">이 타임스탬프 토큰에 대해 확인할 암호화 해시입니다.</param>
      <param name="hashAlgorithm">
        <paramref name="hash" />를 생성한 알고리즘입니다.</param>
      <param name="signerCertificate">이 메서드가 반환될 때 이 토큰을 서명한 TSA(타임스탬프 기관)의 인증서이거나 서명자 인증서를 확인할 수 없는 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="extraCandidates">토큰에 포함된 인증서에 더해 TSA(타임스탬프 기관) 인증서로 간주해야 할 선택적인 인증서 컬렉션입니다.</param>
      <returns>TSA(타임스탬프 기관) 인증서가 있고, 인증서 퍼블릭 키가 토큰 서명의 유효성을 검사하며, 토큰이 제공된 데이터 해시 및 알고리즘의 해시와 일치하면 <see langword="true" />이고 그렇지 않으며 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForHash(System.ReadOnlySpan{System.Byte},System.Security.Cryptography.Oid,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>현재 토큰이 제공된 데이터 해시 및 알고리즘 식별자에 대해 유효한 타임스탬프 토큰인지 확인합니다.</summary>
      <param name="hash">이 타임스탬프 토큰에 대해 확인할 암호화 해시입니다.</param>
      <param name="hashAlgorithmId" />
      <param name="signerCertificate">이 메서드가 반환될 때 이 토큰을 서명한 TSA(타임스탬프 기관)의 인증서이거나 서명자 인증서를 확인할 수 없는 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="extraCandidates">토큰에 포함된 인증서에 더해 TSA(타임스탬프 기관) 인증서로 간주해야 할 선택적인 인증서 컬렉션입니다.</param>
      <returns>TSA(타임스탬프 기관) 인증서가 있고, 인증서 퍼블릭 키가 토큰 서명의 유효성을 검사하며, 토큰이 제공된 데이터 해시 및 알고리즘의 해시와 일치하면 <see langword="true" />이고 그렇지 않으며 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.VerifySignatureForSignerInfo(System.Security.Cryptography.Pkcs.SignerInfo,System.Security.Cryptography.X509Certificates.X509Certificate2@,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>현재 토큰이 제공된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />에 대해 유효한 타임스탬프 토큰인지 확인합니다.</summary>
      <param name="signerInfo">타임스탬프가 해당 서명자에 대해 빌드된 것이 맞는지 확인할 CMS 서명자 정보입니다.</param>
      <param name="signerCertificate">이 메서드가 반환될 때 이 토큰을 서명한 TSA(타임스탬프 기관)의 인증서이거나 서명자 인증서를 확인할 수 없는 경우 <see langword="null" />입니다. 이 매개 변수는 초기화되지 않은 것으로 처리됩니다.</param>
      <param name="extraCandidates">토큰에 포함된 인증서에 더해 TSA(타임스탬프 기관) 인증서로 간주해야 할 선택적인 인증서 컬렉션입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signerInfo" />이(가) <see langword="null" />인 경우</exception>
      <returns>TSA(타임스탬프 기관) 인증서가 있고, 인증서 퍼블릭 키가 토큰 서명의 유효성을 검사하며, 토큰이 <paramref name="signerInfo" />의 서명과 일치하면 <see langword="true" />이고 그렇지 않으며 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampToken.TokenInfo">
      <summary>이 타임스탬프 토큰의 세부 정보를 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />로 가져옵니다.</summary>
      <returns>이 타임 스탬프 토큰의 세부 정보 <see cref="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" /> 입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.Oid,System.ReadOnlyMemory{System.Byte},System.ReadOnlyMemory{System.Byte},System.DateTimeOffset,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Nullable{System.ReadOnlyMemory{System.Byte}},System.Security.Cryptography.X509Certificates.X509ExtensionCollection)">
      <param name="policyId" />
      <param name="hashAlgorithmId" />
      <param name="messageHash" />
      <param name="serialNumber" />
      <param name="timestamp" />
      <param name="accuracyInMicroseconds" />
      <param name="isOrdering" />
      <param name="nonce" />
      <param name="timestampAuthorityName" />
      <param name="extensions" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Encode" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetExtensions" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetMessageHash" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetNonce" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetSerialNumber" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.GetTimestampAuthorityName" />
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryDecode(System.ReadOnlyMemory{System.Byte},System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo@,System.Int32@)">
      <param name="encodedBytes" />
      <param name="timestampTokenInfo" />
      <param name="bytesConsumed" />
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.TryEncode(System.Span{System.Byte},System.Int32@)">
      <param name="destination" />
      <param name="bytesWritten" />
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.AccuracyInMicroseconds" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HasExtensions" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.HashAlgorithmId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.IsOrdering" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.PolicyId" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Timestamp" />
    <member name="P:System.Security.Cryptography.Pkcs.Rfc3161TimestampTokenInfo.Version" />
    <member name="T:System.Security.Cryptography.Pkcs.SignedCms">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스를 사용하면 CMS/PKCS #7 메시지에 서명하고 확인할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> 생성자는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> 생성자는 지정된 콘텐츠 정보를 내부 콘텐츠로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentInfo">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 생성자는 지정된 콘텐츠 정보를 내부 콘텐츠로 사용하고 분리 상태를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="contentInfo">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. <paramref name="detached" />가 <see langword="true" />이면 서명이 분리되며, <paramref name="detached" />가 <see langword="false" />이면 서명이 분리되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하고 콘텐츠 정보를 내부 콘텐츠로 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <param name="contentInfo">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> 생성자는 지정된 주체 식별자 형식을 서명자의 기본 주체 식별자 형식으로 사용하고 콘텐츠 정보를 내부 콘텐츠로 사용하며 분리 상태를 사용하여 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 클래스의 인스턴스를 만듭니다.</summary>
      <param name="signerIdentifierType">서명자의 기본 주체 식별자 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 멤버입니다.</param>
      <param name="contentInfo">콘텐츠 정보를 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 메시지의 내부 콘텐츠로 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체입니다.</param>
      <param name="detached">
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. <paramref name="detached" />가 <see langword="true" />이면 서명이 분리되며, detached가 <see langword="false" />이면 서명이 분리되지 않습니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.AddCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>인코딩된 CMS/PKCS #7 메시지의 인증서 컬렉션에 인증서를 추가합니다.</summary>
      <param name="certificate">컬렉션에 추가할 인증서입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인증서가 이미 컬렉션에 있습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> 메서드는 CMS/PKCS #7 메시지의 데이터 무결성을 확인합니다. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />는 전체 디지털 서명 확인을 수행하지 않고, CMS 메시지의 해시만 검사하려는 특정 보안 인프라 애플리케이션에 사용되는 특수화된 메서드입니다. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />는 메시지의 작성자나 송신자를 인증하지 않습니다. 이 메서드는 디지털 서명 확인 작업과 관련되지 않기 때문입니다. CMS/PKCS #7 메시지의 무결성과 인증을 검사하는 일반적인 목적으로는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 또는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드를 사용합니다.</summary>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> 메서드는 서명된 CMS/PKCS #7 메시지에서 디지털 서명의 안정성을 확인하며 필요에 따라 서명자 인증서의 유효성을 검사합니다.</summary>
      <param name="verifySignatureOnly">서명자 인증서의 유효성은 검사하지 않고 디지털 서명의 안정성만 확인할 것인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.  
  
<paramref name="verifySignatureOnly" />가 <see langword="true" />이면 디지털 서명의 안정성만 확인합니다. <see langword="false" />이면 디지털 서명의 안정성을 확인하고 서명자 인증서의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드는 지정된 인증서 컬렉션을 사용하여 서명된 CMS/PKCS #7 메시지에서 디지털 서명의 안정성을 확인하고 필요에 따라 서명자 인증서의 유효성을 검사합니다.</summary>
      <param name="extraStore">인증서 체인의 유효성을 검사하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다. 인증서 체인의 유효성을 검사하기 위해 추가 인증서를 사용해야 하는 경우 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />를 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 대신 사용합니다.</param>
      <param name="verifySignatureOnly">서명자 인증서의 유효성은 검사하지 않고 디지털 서명의 안정성만 확인할 것인지 여부를 지정하는 <see cref="T:System.Boolean" /> 값입니다.  
  
<paramref name="verifySignatureOnly" />가 <see langword="true" />이면 디지털 서명의 안정성만 확인합니다. <see langword="false" />이면 디지털 서명의 안정성을 확인하고 서명자 인증서의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature">
      <summary>서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <exception cref="T:System.InvalidOperationException">.NET Framework(모든 버전) 및 .NET Core 3.0 이상: 수신자 인증서는 지정되지 않습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core 버전 2.2 이전: 서명자 인증서가 제공되지 않았습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>지정된 서명자를 사용하여 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <param name="signer">서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)">
      <summary>지정된 서명자를 사용하여 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다.</summary>
      <param name="signer">서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <param name="silent">.NET Core에만 해당: PIN 프롬프트가 비활성화된 상태에서 열기 키를 요청하는 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. .NET Framework에서 이 매개 변수가 사용되지 않으며 필요한 경우 PIN 프롬프트가 항상 표시됩니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="signer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">.NET Framework만 해당: 서명 인증서가 지정되지 않습니다.</exception>
      <exception cref="T:System.PlatformNotSupportedException">.NET Core만 해당: 서명 인증서가 지정되지 않습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])">
      <summary>인코딩된 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 메시지를 디코딩합니다.</summary>
      <param name="encodedMessage">디코딩할 인코딩된 CMS/PKCS#7 메시지를 나타내는 바이트 값 배열입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encodedMessage" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" />를 성공적으로 디코딩할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.ReadOnlySpan{System.Byte})">
      <param name="encodedMessage">디코딩할 인코딩된 CMS/PKCS#7 메시지를 나타내는 바이트 값의 읽기 전용 범위입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="encodedMessage" />를 성공적으로 디코딩할 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.Encode">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> 메서드는 개체의 정보를 CMS/PKCS #7 메시지로 인코딩합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
      <returns>인코딩된 메시지를 나타내는 바이트 값의 배열입니다. 인코딩된 메시지는 <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> 메서드를 사용하여 디코딩할 수 있습니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>인코딩된 CMS/PKCS #7 메시지의 인증서 컬렉션에서 지정된 인증서를 제거합니다.</summary>
      <param name="certificate">컬렉션에서 제거할 인증서입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">인증서를 찾을 수 없습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 컬렉션의 지정한 인덱스에 있는 서명을 제거합니다.</summary>
      <param name="index">제거할 서명의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.InvalidOperationException">A CMS/PKCS #7 메시지가 서명되지 않았고 <paramref name="index" />가 잘못되었습니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우  
  
또는 
 <paramref name="index" />는 서명 개수 - 1보다 큽니다.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">서명을 제거할 수 없습니다.  
  
 또는  
  
 내부 암호화 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 메서드는 지정된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 대한 서명을 제거합니다.</summary>
      <param name="signerInfo">제거할 연대 서명을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> 속성은 인코딩된 CMS/PKCS #7 메시지와 관련된 인증서를 검색합니다.</summary>
      <returns>인코딩된 CMS/PKCS #7 메시지의 인증서 집합을 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> 속성은 인코딩된 CMS/PKCS #7 메시지의 내부 콘텐츠를 검색합니다.</summary>
      <returns>인코딩된 CMS/PKCS #7 메시지의 콘텐츠를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Detached">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체가 분리된 서명에 사용되는지 여부를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 개체가 분리된 서명에 사용되는지 여부를 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 값입니다. 이 속성이 <see langword="true" />이면 서명이 분리되며, 이 속성이 <see langword="false" />이면 서명이 분리되지 않습니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> 속성은 CMS/PKCS #7 메시지와 관련된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 검색합니다.</summary>
      <returns>CMS/PKCS #7 메시지의 서명자 정보를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignedCms.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> 속성은 CMS/PKCS #7 메시지의 버전을 검색합니다.</summary>
      <returns>CMS/PKCS #7 메시지의 버전을 나타내는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfo">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 클래스는 CMS/PKCS #7 메시지를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> 개체와 관련된 서명자를 나타냅니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.AddUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>지정된 특성을 현재 문서에 추가합니다.</summary>
      <param name="asnEncodedData">문서에 추가할 ASN.1 인코딩된 특성입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">원래 서명자를 찾을 수 없습니다.
        
 또는

ASN1 손상된 데이터입니다.</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> 메서드는 CMS/PKCS #7 메시지 서명자 정보의 데이터 무결성을 확인합니다. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체를 설정할 때 주체가 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형의 HashOnly 멤버를 사용하는 특정 보안 인프라 애플리케이션에서 사용되는 특수 메서드입니다. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />는 서명자 정보를 인증하지 않습니다. 이 메서드는 디지털 서명 확인 작업과 관련되지 않기 때문입니다. CMS/PKCS #7 메시지 서명자 정보와 연대 서명의 무결성과 인증을 검사하는 일반적인 목적으로는 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 또는 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드를 사용합니다.</summary>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> 메서드는 메시지의 디지털 서명 안정성을 확인하고 선택에 따라 인증서의 유효성을 검사합니다.</summary>
      <param name="verifySignatureOnly">디지털 서명의 안정성만 확인할지 지정하는 부울 값입니다. <paramref name="verifySignatureOnly" />가 <see langword="true" />이면 서명의 안정성만 확인합니다. <paramref name="verifySignatureOnly" />가 <see langword="false" />이면 디지털 서명의 안정성을 확인하고 인증서 체인의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 메서드는 지정된 인증서 컬렉션을 사용하여 메시지의 디지털 서명의 안정성을 확인하고 선택에 따라 인증서의 유효성을 검사합니다.</summary>
      <param name="extraStore">체인의 유효성을 검사하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> 개체입니다. 체인의 유효성을 검사하기 위해 추가 인증서를 사용해야 하는 경우 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" />를 <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> 대신 사용합니다.</param>
      <param name="verifySignatureOnly">디지털 서명의 안정성만 확인할지 지정하는 부울 값입니다. <paramref name="verifySignatureOnly" />가 <see langword="true" />이면 서명의 안정성만 확인합니다. <paramref name="verifySignatureOnly" />가 <see langword="false" />이면 디지털 서명의 안정성을 확인하고 인증서 체인의 유효성을 검사한 다음 인증서 용도의 유효성을 검사합니다. 인증서에 키 용도가 없거나 키 용도가 디지털 서명 또는 거부 불가능을 지원하는 경우 인증서 용도가 유효한 것으로 간주됩니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
      <exception cref="T:System.InvalidOperationException">개체의 현재 상태에서 메서드 호출을 사용할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> 메서드는 서명 인증서를 선택하고 연대 서명을 만든 다음 이 서명을 CMS/PKCS #7 메시지에 추가하도록 관련 메시지를 사용자에게 표시합니다. 연대 서명은 한 수준으로 제한됩니다.</summary>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> 메서드는 지정된 서명자를 사용하여 연대 서명을 만들고 이 서명을 CMS/PKCS #7 메시지에 추가합니다. 연대 서명은 한 수준으로 제한됩니다.</summary>
      <param name="signer">연대 서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature">
      <summary>현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 서명을 검색합니다.</summary>
      <returns>현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 서명입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> 메서드는 <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 컬렉션의 지정된 인덱스에서 연대 서명을 제거합니다.</summary>
      <param name="index">제거할 연대 서명의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> 메서드는 지정된 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 대한 연대 서명을 제거합니다.</summary>
      <param name="counterSignerInfo">제거할 연대 서명을 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">암호화 작업을 완료할 수 없는 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveUnsignedAttribute(System.Security.Cryptography.AsnEncodedData)">
      <summary>현재 문서에서 지정된 특성을 제거합니다.</summary>
      <param name="asnEncodedData">문서에서 제거할 ASN.1 인코딩된 특성입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">원래 서명자를 찾을 수 없습니다.

 또는

특성을 찾을 수 없습니다.

 또는
 
ASN1 손상된 데이터입니다.</exception>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> 속성은 서명자 정보와 관련된 서명 인증서를 검색합니다.</summary>
      <returns>서명 인증서를 나타내는 <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> 속성은 서명자 정보와 관련된 연대 서명자 집합을 검색합니다.</summary>
      <returns>서명자 정보에 대한 연대 서명자를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션입니다. 연대 서명자가 없으면 이 속성은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> 속성은 서명 계산에 사용되는 해시 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.Oid" /> 개체를 검색합니다.</summary>
      <returns>서명에 사용되는 해시 알고리즘을 나타내는 <see cref="T:System.Security.Cryptography.Oid" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm">
      <summary>현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에서 사용되는 서명 알고리즘의 식별자를 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에서 사용되는 서명 알고리즘의 식별자입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> 속성은 서명자 정보와 관련된 서명된 특성의 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션을 검색합니다. 서명된 특성은 메시지의 나머지 내용과 함께 서명됩니다.</summary>
      <returns>서명된 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션입니다. 서명된 특성이 없으면 속성 값은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> 속성은 서명자 정보와 관련된 서명자의 인증서 식별자를 검색합니다.</summary>
      <returns>서명자 정보와 관련된 인증서를 고유하게 식별하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> 속성은 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 내용과 관련된 서명되지 않은 특성의 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션을 검색합니다. 서명되지 않은 특성은 서명을 무효화하지 않고도 수정할 수 있습니다.</summary>
      <returns>서명되지 않은 특성을 나타내는 <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> 컬렉션입니다. 서명되지 않은 특성이 없으면 해당 속성은 빈 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfo.Version">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> 속성은 서명자 정보 버전을 검색합니다.</summary>
      <returns>서명자 정보 버전을 지정하는 int 값입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoCollection">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체의 컬렉션을 나타냅니다. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" />는 <see cref="T:System.Collections.ICollection" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Array,System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.CopyTo(System.Security.Cryptography.Pkcs.SignerInfo[],System.Int32)" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션이 복사되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체의 배열입니다.</param>
      <param name="index">
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션이 복사되는 <paramref name="array" />의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentException">메서드에 제공된 인수 중 하나가 잘못된 경우</exception>
      <exception cref="T:System.ArgumentNullException">null 참조를 유효한 인수로 사용하지 않는 메서드에 null 참조가 전달된 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoCollection.System#Collections#IEnumerable#GetEnumerator" /> 메서드는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션에 대한 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 컬렉션을 열거하는 데 사용할 수 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Count" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션의 항목 수를 검색합니다.</summary>
      <returns>컬렉션의 항목 수를 나타내는 int 값입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.IsSynchronized" /> 속성은 컬렉션에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 검색합니다. 이 속성은 항상 <see langword="false" />를 반환합니다. 이는 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미합니다.</summary>
      <returns>
        <see cref="T:System.Boolean" /> 값입니다. 이 값은 컬렉션이 스레드로부터 안전하게 보호되지 않음을 의미하는 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.Item(System.Int32)" /> 속성은 컬렉션의 지정된 인덱스에 있는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체를 검색합니다.</summary>
      <param name="index">컬렉션의 인덱스를 나타내는 int 값입니다. 인덱스는 0부터 시작합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">인수 값이 호출된 메서드로 정의한 허용 값 범위를 벗어난 경우</exception>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />지정 된 인덱스에 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoCollection.SyncRoot" /> 속성은 <see cref="T:System.Object" /> 컬렉션에 대한 액세스를 동기화하는 데 사용되는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Object" /> 개체는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션에 대한 액세스를 동기화하는 데 사용됩니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션에 대한 열거형 기능을 제공합니다. <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoEnumerator" />는 <see cref="T:System.Collections.IEnumerator" /> 인터페이스를 구현합니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.MoveNext" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 컬렉션의 다음 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체로 이동합니다.</summary>
      <returns>이 메서드는 열거형이 성공적으로 이동되었는지 여부를 나타내는 부울 값을 반환합니다. 열거형이 다음 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 개체에 성공적으로 전달되면 이 메서드는 <see langword="true" />를 반환합니다. 열거형이 열거형의 마지막 항목을 지나 이동하면 이 메서드는 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset">
      <summary>
        <see cref="M:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Reset" /> 메서드는 열거형을 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션의 첫 번째 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 서명자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SignerInfoEnumerator.System#Collections#IEnumerator#Current" /> 속성은 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체를 검색합니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> 컬렉션에서 현재 서명자 정보 구조를 나타내는 <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifier">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />나 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 같은 주체의 식별자 형식을 정의합니다.  주체는 인증서 발급자와 일련 번호 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
    </member>
    <member name="M:System.Security.Cryptography.Pkcs.SubjectIdentifier.MatchesCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>지정된 인증서의 주체 식별자가 현재 주체 식별자 인스턴스와 일치하는지 확인합니다.</summary>
      <param name="certificate">현재 주체 식별자 인스턴스와 일치하는 인증서입니다.</param>
      <exception cref="T:System.Security.Cryptography.CryptographicException">잘못된 주체 식별자 형식입니다.</exception>
      <returns>지정된 인증서의 식별자가 현재 주체 식별자 인스턴스와 일치하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성은 주체 식별자의 형식을 검색합니다. 주체는 인증서 발급자와 일련 번호 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />주체의 유형을 식별 하는 열거형의 멤버입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 속성은 주체 식별자의 값을 검색합니다. <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성을 사용하면 주체 식별자의 형식을 확인할 수 있고, <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Value" /> 속성을 사용하면 상응하는 값을 검색할 수 있습니다.</summary>
      <returns>주체 식별자의 값을 나타내는 <see cref="T:System.Object" /> 개체입니다. 이 <see cref="T:System.Object" />는 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성으로 확인한 다음과 같은 개체 중 하나가 될 수 있습니다.  
  
 <list type="table"><listheader><term><see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifier.Type" /> 속성</term><description> 개체</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey" /> 클래스는 <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />나 <see cref="T:System.Security.Cryptography.Pkcs.CmsRecipient" /> 같은 주체의 식별자 형식을 정의합니다.  주체는 인증서 발급자와 일련 번호, 주체 키의 해시 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성은 키나 주체 식별자의 형식을 검색합니다. 주체는 인증서 발급자와 일련 번호, 주체 키의 해시 또는 주체 키를 사용하여 식별할 수 있습니다.</summary>
      <returns>주체 식별자의 형식을 지정하는 <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 열거형의 멤버입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value">
      <summary>
        <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 속성은 키나 주체 식별자의 값을 검색합니다. <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성을 사용하면 키나 주체 식별자의 형식을 확인할 수 있고, <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Value" /> 속성을 사용하면 상응하는 값을 검색할 수 있습니다.</summary>
      <returns>키나 주체 식별자의 값을 나타내는 <see cref="T:System.Object" /> 개체입니다. 이 <see cref="T:System.Object" />는 <see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성으로 확인한 다음과 같은 개체 중 하나가 될 수 있습니다.  
  
 <list type="table"><listheader><term><see cref="P:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey.Type" /> 속성</term><description> 개체</description></listheader><item><term> IssuerAndSerialNumber</term><description><see cref="T:System.Security.Cryptography.Xml.X509IssuerSerial" /></description></item><item><term> SubjectKeyIdentifier</term><description><see cref="T:System.String" /></description></item><item><term> PublicKeyInfo</term><description><see cref="T:System.Security.Cryptography.Pkcs.PublicKeyInfo" /></description></item></list></returns>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType" /> 열거형은 주체를 식별하는 방법을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.IssuerAndSerialNumber">
      <summary>인증서 발급자와 일련 번호를 사용하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.PublicKeyInfo">
      <summary>공개 키로 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.SubjectKeyIdentifier">
      <summary>주체 키의 해시로 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType.Unknown">
      <summary>형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType">
      <summary>
        <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> 열거형은 주체 식별자의 형식을 정의합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.IssuerAndSerialNumber">
      <summary>인증서 발급자와 일련 번호를 사용하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.NoSignature">
      <summary>해시 알고리즘만 사용하는 무결성 검사 작업과 관련하여 주체를 식별합니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.SubjectKeyIdentifier">
      <summary>주체 공개 키의 해시를 사용하여 주체를 식별합니다. 사용되는 해시 알고리즘은 주체 인증서의 서명 알고리즘 집합을 통해 결정됩니다.</summary>
    </member>
    <member name="F:System.Security.Cryptography.Pkcs.SubjectIdentifierType.Unknown">
      <summary>주체 식별자의 형식을 알 수 없습니다.</summary>
    </member>
    <member name="T:System.Security.Cryptography.Xml.X509IssuerSerial">
      <summary>XML 디지털 서명의 &lt;<see langword="X509IssuerSerial" />&gt; 요소를 나타냅니다.</summary>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.IssuerName">
      <summary>X.509 인증서 발급자의 고유 이름을 가져오거나 설정합니다.</summary>
      <returns>X.509 인증서 발급자의 고유 이름입니다.</returns>
    </member>
    <member name="P:System.Security.Cryptography.Xml.X509IssuerSerial.SerialNumber">
      <summary>X.509 인증서 발급자의 일련 번호를 가져오거나 설정합니다.</summary>
      <returns>X.509 인증서 발급자의 일련 번호입니다.</returns>
    </member>
  </members>
</doc>