<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Configuration.ConfigurationManager</name>
  </assembly>
  <members>
    <member name="T:System.Configuration.ApplicationScopedSettingAttribute">
      <summary>Spécifie qu’une propriété de paramètres d’application a une valeur commune pour tous les utilisateurs d’une application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ApplicationScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsBase">
      <summary>Agit comme classe de base pour la dérivation des classes wrapper concrètes afin d'implémenter la fonctionnalité de paramètres d'application dans les applications Windows Forms.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <summary>Se produit après que la valeur d'une propriété de paramètres d'application a été modifiée.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <summary>Se produit avant que la valeur d'une propriété de paramètres d'application ait été modifiée.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <summary>Se produit après que les paramètres d'application ont été récupérés à partir du stockage.</summary>
    </member>
    <member name="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <summary>Se produit avant que des valeurs soient enregistrées dans le magasin de données.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> dans son état par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire fourni.</summary>
      <param name="owner">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide du composant propriétaire et de la clé de paramètres fournis.</summary>
      <param name="owner">Composant qui agira comme propriétaire de l'objet de paramètres d'application.</param>
      <param name="settingsKey">
        <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" /> à l'aide de la clé de paramètres fournie.</summary>
      <param name="settingsKey">
        <see cref="T:System.String" /> qui  identifie de manière unique des instances distinctes de la classe wrapper.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <summary>Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</summary>
      <param name="propertyName">
        <see cref="T:System.String" /> contenant le nom de la propriété de paramètres dont la valeur sera retournée.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">La propriété n'existe pas. Le compte de propriété est zéro ou la propriété est introuvable dans le magasin de données.</exception>
      <returns>
        <see cref="T:System.Object" /> contenant la valeur du <see cref="T:System.Configuration.SettingsProperty" /> spécifié s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary>Déclenche l’événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Source de l'événement.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reload">
      <summary>Actualise les valeurs de propriétés de paramètres d'application à partir du stockage persistant.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Reset">
      <summary>Restaure les valeurs de paramètre d'application persistantes à leurs propriétés par défaut correspondantes.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le fichier de configuration n'a pas pu être analysé.</exception>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Save">
      <summary>Stocke les valeurs actuelles des propriétés de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <summary>Met à jour des paramètres d'application de façon à refléter une installation plus récente de l'application.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le fichier de configuration n'a pas pu être analysé.</exception>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Context">
      <summary>Obtient le contexte de paramètres d'application associé au groupe de paramètres.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsContext" /> associé au groupe de paramètres.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <summary>Obtient ou définit la valeur de la propriété de paramètres d'application spécifiée.</summary>
      <param name="propertyName">
        <see cref="T:System.String" /> contenant le nom de la propriété à accéder.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Il n'y a pas de propriété associée au wrapper actuel ou la propriété spécifiée est introuvable.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Une tentative de définition de propriété en lecture seule a été effectuée.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">La valeur fournie est d'un type incompatible avec la propriété de paramètres, durant une opération de définition.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le fichier de configuration n'a pas pu être analysé.</exception>
      <returns>Si elle est trouvée, correspond au nom de la propriété de paramètres nommée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Properties">
      <summary>Obtient la collection de propriétés de paramètres dans le wrapper.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le fournisseur de paramètres associé est introuvable ou son instanciation a échoué.</exception>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProperty" /> utilisés dans le wrapper actuel.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <summary>Obtient une collection de valeurs de propriété.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> de valeurs de propriété.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.Providers">
      <summary>Obtient la collection de fournisseurs de paramètres d'application utilisée par le wrapper.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsProviderCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProvider" /> utilisés par les propriétés de paramètres du wrapper de paramètres actuel.</returns>
    </member>
    <member name="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <summary>Obtient ou définit la clé de paramètres pour le groupe de paramètres d'application.</summary>
      <returns>
        <see cref="T:System.String" /> contenant la clé de paramètres pour le groupe de paramètres actuel.</returns>
    </member>
    <member name="T:System.Configuration.ApplicationSettingsGroup">
      <summary>Représente un regroupement de sections de paramètres d’application connexes dans un fichier de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ApplicationSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.AppSettingsReader">
      <summary>Fournit une méthode permettant de lire les valeurs d'un type particulier dans la configuration.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.AppSettingsReader" />.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <summary>Obtient la valeur d'une clé spécifiée de la propriété <see cref="P:System.Configuration.ConfigurationSettings.AppSettings" /> et retourne un objet du type déterminé contenant la valeur de la configuration.</summary>
      <param name="key">Clé pour laquelle obtenir la valeur.</param>
      <param name="type">Type de l'objet à retourner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="type" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="key" /> n'existe pas dans la section de configuration <see langword="&lt;appSettings&gt;" />.  
  
- ou - 
La valeur présente dans la section de configuration <see langword="&lt;appSettings&gt;" /> pour <paramref name="key" /> n'est pas du type <paramref name="type" />.</exception>
      <returns>Valeur de la clé spécifiée.</returns>
    </member>
    <member name="T:System.Configuration.AppSettingsSection">
      <summary>Fournit une prise en charge du système de configuration pour la section de configuration <see langword="appSettings" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.AppSettingsSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.AppSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.File">
      <summary>Obtient ou définit un fichier de configuration qui fournit des paramètres supplémentaires ou substitue les paramètres spécifiés dans l’élément <see langword="appSettings" />.</summary>
      <returns>Fichier de configuration qui fournit des paramètres supplémentaires ou substitue les paramètres spécifiés dans l'élément <see langword="appSettings" />.</returns>
    </member>
    <member name="P:System.Configuration.AppSettingsSection.Settings">
      <summary>Obtient une collection de paires clé/valeur qui contient des paramètres d’application.</summary>
      <returns>Une collection de paires clé/valeur qui contient les paramètres d'application du fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.CallbackValidator">
      <summary>Fournit la validation dynamique d'un objet.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CallbackValidator" />.</summary>
      <param name="type">Type d'objet qui sera validé.</param>
      <param name="callback">
        <see cref="T:System.Configuration.ValidatorCallback" /> utilisé comme délégué.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <summary>Détermine si le type de l'objet peut être validé.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <see langword="type" /> correspond au type utilisé comme premier paramètre lors de la création d'une instance de <see cref="T:System.Configuration.CallbackValidator" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.CallbackValidatorAttribute">
      <summary>Spécifie un objet <see cref="T:System.Configuration.CallbackValidator" /> à utiliser pour la validation de code. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CallbackValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <summary>Obtient ou définit le nom de la méthode de rappel.</summary>
      <returns>Nom de la méthode à appeler.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.Type">
      <summary>Obtient ou définit le type du validateur.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'instance d'attribut du validateur actuelle.</returns>
    </member>
    <member name="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <summary>Obtient l’instance du validateur.</summary>
      <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Configuration.CallbackValidatorAttribute.Type" /> possède la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La valeur de la propriété <see cref="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" /> n’est pas une méthode public static void avec un seul paramètre d’objet.</exception>
      <returns>Instance actuelle de <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.ClientSettingsSection">
      <summary>Représente un groupe de paramètres d’application de portée utilisateur dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ClientSettingsSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ClientSettingsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ClientSettingsSection.Settings">
      <summary>Obtient la collection de paramètres client pour la section.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingElementCollection" /> contenant tous les paramètres client qui se trouvent dans la section de configuration actuelle.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollection">
      <summary>Représente une collection d’éléments de chaîne séparés par des virgules. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <summary>Ajoute une chaîne à la collection délimitée par des virgules.</summary>
      <param name="value">Valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <summary>Ajoute toutes les chaînes d'un tableau de chaînes à la collection.</summary>
      <param name="range">Tableau de chaînes à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <summary>Efface la collection.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <summary>Crée une copie de la collection.</summary>
      <returns>Copie de <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <summary>Ajoute un élément de chaîne à la collection au niveau de l'index spécifié.</summary>
      <param name="index">Index de la collection auquel le nouvel élément sera ajouté.</param>
      <param name="value">Valeur du nouvel élément à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <summary>Supprime un élément de chaîne de la collection.</summary>
      <param name="value">Chaîne à supprimer.</param>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <summary>Définit l'objet de la collection qui doit être en lecture seule.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <summary>Retourne une représentation de l'objet sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de l'objet.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <summary>Obtient une valeur qui spécifie si la collection a été modifiée.</summary>
      <returns>
        <see langword="true" /> en cas de modification de <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <summary>Obtient une valeur indiquant si l'objet de la collection est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'élément de chaîne spécifié dans le <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <summary>Obtient ou définit un élément de chaîne dans la collection en fonction de l'index.</summary>
      <param name="index">Index de l'élément de chaîne dans la collection.</param>
      <returns>Élément de chaîne dans la collection.</returns>
    </member>
    <member name="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <summary>Convertit une valeur de chaîne délimitée par des virgules en un objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" />, et vice versa. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.CommaDelimitedStringCollectionConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un objet <see cref="T:System.String" /> en objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</summary>
      <param name="ctx">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de types.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">
        <see cref="T:System.String" /> séparé par des virgules à convertir.</param>
      <returns>
        <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> contenant la valeur convertie.</returns>
    </member>
    <member name="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un objet <see cref="T:System.Configuration.CommaDelimitedStringCollection" /> en objet <see cref="T:System.String" />.</summary>
      <param name="ctx">
        <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de types.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur à convertir.</param>
      <param name="type">Type de conversion.</param>
      <returns>
        <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> converti, qui est un <see cref="T:System.Configuration.CommaDelimitedStringCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.Configuration">
      <summary>Représente un fichier de configuration applicable à un ordinateur, une application ou une ressource particulière. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.Configuration.GetSection(System.String)">
      <summary>Retourne l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="sectionName">Chemin d'accès de la section à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié ou <see langword="null" /> si la section demandée n’existe pas.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié.</summary>
      <param name="sectionGroupName">Nom du chemin d'accès du <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié ou <see langword="null" /> si le groupe de sections demandé n’existe pas.</returns>
    </member>
    <member name="M:System.Configuration.Configuration.Save">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d'écrire dans le fichier de configuration.  
  
- ou -
  
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <param name="saveMode">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d'écrire dans le fichier de configuration.  
  
- ou -
  
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML actuel.</summary>
      <param name="saveMode">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <param name="forceSaveAll">
        <see langword="true" /> à enregistrer même si la configuration n'a pas été modifiée ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d'écrire dans le fichier de configuration.  
  
- ou -
  
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String)">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d'écrire dans le fichier de configuration.  
  
- ou -
  
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <param name="saveMode">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d'écrire dans le fichier de configuration.  
  
- ou -
  
 Le fichier de configuration a changé.</exception>
    </member>
    <member name="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <summary>Écrit les paramètres de configuration contenus dans cet objet <see cref="T:System.Configuration.Configuration" /> dans le fichier de configuration XML spécifié.</summary>
      <param name="filename">Chemin d'accès et nom de fichier à utiliser pour enregistrer le fichier de configuration.</param>
      <param name="saveMode">Valeur <see cref="T:System.Configuration.ConfigurationSaveMode" /> qui détermine les valeurs de propriété à enregistrer.</param>
      <param name="forceSaveAll">
        <see langword="true" /> à enregistrer même si la configuration n'a pas été modifiée ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="P:System.Configuration.Configuration.AppSettings">
      <summary>Obtient la section de configuration de l'objet <see cref="T:System.Configuration.AppSettingsSection" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.AppSettingsSection" /> représentant la section de configuration <see langword="appSettings" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <summary>Spécifie un délégué de fonction utilisé pour transformer des chaînes d'assembly dans les fichiers de configuration.</summary>
      <returns>Délégué qui transforme des chaînes de type. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.ConnectionStrings">
      <summary>Obtient un objet de section de configuration <see cref="T:System.Configuration.ConnectionStringsSection" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Objet de section de configuration <see cref="T:System.Configuration.ConnectionStringsSection" /> représentant la section de configuration <see langword="connectionStrings" /> qui s'applique à cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.EvaluationContext">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.FilePath">
      <summary>Obtient le chemin d'accès physique du fichier de configuration représenté par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Chemin d'accès physique du fichier de configuration représenté par cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.HasFile">
      <summary>Indique si un fichier de configuration existe pour la ressource représentée par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>
        <see langword="true" /> s'il existe un fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Locations">
      <summary>Obtient les emplacements définis dans cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> contenant les emplacements définis dans cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.NamespaceDeclared">
      <summary>Obtient ou définit une valeur indiquant si le fichier de configuration a un espace de noms XML.</summary>
      <returns>
        <see langword="true" /> si le fichier de configuration a un espace de noms XML ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.RootSectionGroup">
      <summary>Obtient le <see cref="T:System.Configuration.ConfigurationSectionGroup" /> racine pour cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Groupe de sections racine pour cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.SectionGroups">
      <summary>Obtient la collection des groupes de sections définis par cette configuration.</summary>
      <returns>Collection <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> représentant la collection de groupes de sections pour cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.Sections">
      <summary>Obtient une collection des sections définies par cet objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <returns>Collection des sections définies par cet objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TargetFramework">
      <summary>Spécifie la version ciblée du .NET Framework lorsqu'une version antérieure à l'actuelle est ciblée.</summary>
      <returns>Nom de la version ciblée du .NET Framework. La valeur par défaut est <see langword="null" />, ce qui indique que la version actuelle est ciblée.</returns>
    </member>
    <member name="P:System.Configuration.Configuration.TypeStringTransformer">
      <summary>Spécifie un délégué de fonction utilisé pour transformer des chaînes de type dans les fichiers de configuration.</summary>
      <returns>Délégué qui transforme des chaînes de type. La valeur par défaut est <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowDefinition">
      <summary>Spécifie les emplacements dans la hiérarchie des fichiers de configuration qui peuvent définir ou substituer les propriétés contenues dans un objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini n'importe où.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut uniquement être défini dans le fichier Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, le fichier Web.config au niveau de l'ordinateur situé dans le même répertoire que Machine.config ou le fichier Web.config au niveau supérieur de l'application situé à la racine du répertoire virtuel, mais pas dans les sous-répertoires d'une racine virtuelle.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config ou le fichier Web.config au niveau de l'ordinateur situé dans le même répertoire que Machine.config, mais pas dans les fichiers Web.config de l'application.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationAllowExeDefinition">
      <summary>Spécifie les emplacements dans la hiérarchie des fichiers de configuration qui peuvent définir ou substituer les propriétés contenues dans un objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut uniquement être défini dans le fichier Machine.config.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config ou dans le fichier Exe.config du répertoire de l'application cliente. Valeur par défaut.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, dans le fichier Exe.config du répertoire de l'application cliente, dans le fichier User.config du répertoire de l'utilisateur itinérant ou dans le fichier User.config du répertoire de l'utilisateur local.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <summary>
        <see cref="T:System.Configuration.ConfigurationSection" /> peut être défini dans le fichier Machine.config, dans le fichier Exe.config du répertoire de l'application cliente ou dans le fichier User.config du répertoire de l'utilisateur itinérant.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationCollectionAttribute">
      <summary>Ordonne de manière déclarative au .NET Framework de créer une instance d'une collection d'éléments de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <param name="itemType">Type de la collection de propriétés à créer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemType" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <summary>Obtient ou définit le nom de l'élément de configuration <see langword="&lt;add&gt;" />.</summary>
      <returns>Nom qui remplace le nom standard "add" de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <summary>Obtient ou définit le nom de l'élément de configuration <see langword="&lt;clear&gt;" />.</summary>
      <returns>Nom qui remplace le nom standard "clear" de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <summary>Obtient ou définit le type de l'attribut <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</summary>
      <returns>Type de <see cref="T:System.Configuration.ConfigurationCollectionAttribute" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <summary>Obtient le type de l'élément de la collection.</summary>
      <returns>Type de l’élément de la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <summary>Obtient ou définit le nom de l'élément de configuration <see langword="&lt;remove&gt;" />.</summary>
      <returns>Nom qui remplace le nom standard "remove" de l'élément de configuration.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationConverterBase">
      <summary>Classe de base des types de convertisseurs de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationConverterBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si la conversion est autorisée.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="type">
        <see cref="T:System.Type" /> à partir duquel effectuer la conversion.</param>
      <returns>
        <see langword="true" /> si la conversion est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Détermine si la conversion est autorisée.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour la conversion de type.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see langword="true" /> si la conversion est autorisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElement">
      <summary>Représente un élément de configuration dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <summary>Lit du XML à partir du fichier de configuration.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> qui lit le fichier de configuration.</param>
      <param name="serializeCollectionKey">
        <see langword="true" /> pour sérialiser uniquement les propriétés clés de la collection ; sinon <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'élément à lire est verrouillé.  
  
- ou -
  
 Un attribut du nœud actuel n'est pas reconnu.  
  
- ou -
  
 L'état de verrouillage du nœud actuel ne peut pas être déterminé.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <summary>Compare l’instance de <see cref="T:System.Configuration.ConfigurationElement" /> actuelle à l’objet spécifié.</summary>
      <param name="compareTo">Objet avec lequel comparer.</param>
      <returns>
        <see langword="true" /> si l'objet à comparer équivaut à l'instance de <see cref="T:System.Configuration.ConfigurationElement" /> actuelle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetHashCode">
      <summary>Obtient une valeur unique représentant l'instance actuelle de <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>Valeur unique représentant l'instance actuelle de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <summary>Retourne la version transformée du nom de l'assembly spécifié.</summary>
      <param name="assemblyName">Nom de l'assembly.</param>
      <returns>Version transformée du nom de l'assembly. Si aucun transformateur n'est disponible, la valeur de paramètre <paramref name="assemblyName" /> est retournée inchangée. La valeur de la propriété <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> est <see langword="null" /> si aucun transformateur n'est disponible.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <summary>Retourne la version transformée du nom de type spécifié.</summary>
      <param name="typeName">Nom du type.</param>
      <returns>Version transformée du nom de type spécifié. Si aucun transformateur n'est disponible, la valeur de paramètre <paramref name="typeName" /> est retournée inchangée. La valeur de la propriété <see cref="P:System.Configuration.Configuration.TypeStringTransformer" /> est <see langword="null" /> si aucun transformateur n'est disponible.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Init">
      <summary>Rétablit l’état initial de l’objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <summary>Utilisé pour initialiser un jeu de valeurs par défaut pour l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsModified">
      <summary>Indique si cet élément de configuration a été modifié depuis son dernier enregistrement ou chargement lorsqu'il est implémenté dans une classe dérivée.</summary>
      <returns>
        <see langword="true" /> si l'élément a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <summary>Obtient une valeur indiquant si l’objet <see cref="T:System.Configuration.ConfigurationElement" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <summary>Ajoute les erreurs de propriété non valide dans cet objet <see cref="T:System.Configuration.ConfigurationElement" /> et dans tous les sous-éléments à la liste passée.</summary>
      <param name="errorList">Objet qui implémente l'interface <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>Obtient une valeur indiquant si un attribut inconnu est rencontré pendant la désérialisation.</summary>
      <param name="name">Nom de l'attribut non reconnu.</param>
      <param name="value">Valeur de l'attribut non reconnu.</param>
      <returns>
        <see langword="true" /> lorsqu'un attribut inconnu survient pendant la désérialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Obtient une valeur indiquant si un élément inconnu est rencontré pendant la désérialisation.</summary>
      <param name="elementName">Nom du sous-élément inconnu.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> utilisé pour la désérialisation.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'élément identifié par <paramref name="elementName" /> est verrouillé.  
  
- ou - 
Un ou plusieurs des attributs de l'élément sont verrouillés.  
  
- ou - 
 <paramref name="elementName" /> n'est pas reconnu, ou l'élément a un attribut non reconnu.  
  
- ou - 
L'élément a un attribut Boolean avec une valeur non valide.  
  
- ou - 
Une tentative a été effectuée pour désérialiser une propriété plusieurs fois.  
  
- ou - 
Une tentative a été effectuée pour désérialiser une propriété qui n'est pas un membre valide de l'élément.  
  
- ou - 
L'élément ne peut pas contenir un élément CDATA ou un élément de texte.</exception>
      <returns>
        <see langword="true" /> lorsqu'un élément inconnu est rencontré pendant la désérialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <summary>Lève une exception lorsqu'une propriété requise est introuvable.</summary>
      <param name="name">Nom de l'attribut requis qui n'a pas été trouvé.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Dans tous les cas.</exception>
      <returns>Aucun.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <summary>Appelé après la désérialisation.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <summary>Appelé avant la sérialisation.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> qui sera utilisé pour sérialiser <see cref="T:System.Configuration.ConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <summary>Rétablit l'état interne de l'objet <see cref="T:System.Configuration.ConfigurationElement" />, y compris les verrouillages et les collections de propriétés.</summary>
      <param name="parentElement">Nœud parent de l’élément de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.ResetModified">
      <summary>Réinitialise la valeur de la méthode <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> à <see langword="false" /> en cas d’implémentation dans une classe dérivée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Écrit le contenu de cet élément de configuration dans le fichier de configuration lorsqu'il est implémenté dans une classe dérivée.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> écrivant dans le fichier de configuration.</param>
      <param name="serializeCollectionKey">
        <see langword="true" /> pour sérialiser uniquement les propriétés clés de la collection ; sinon <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'attribut actuel est verrouillé à un niveau de configuration supérieur.</exception>
      <returns>
        <see langword="true" /> si les données ont été correctement sérialisées ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <summary>Écrit les balises extérieures de cet élément de configuration dans le fichier de configuration lorsqu'il est implémenté dans une classe dérivée.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> écrivant dans le fichier de configuration.</param>
      <param name="elementName">Nom de <see cref="T:System.Configuration.ConfigurationElement" /> qui doit être écrit.</param>
      <exception cref="T:System.Exception">L'élément a plusieurs éléments enfants.</exception>
      <returns>
        <see langword="true" /> si l'écriture a réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <summary>Affecte la valeur spécifiée à une propriété.</summary>
      <param name="prop">Propriété d'élément à définir.</param>
      <param name="value">Valeur à assigner à la propriété.</param>
      <param name="ignoreLocks">
        <see langword="true" /> si les verrous de la propriété doivent être ignorés ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produit si l'élément est en lecture seule ou que <paramref name="ignoreLocks" /> est <see langword="true" /> mais que les verrouillages ne peuvent pas être ignorés.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <summary>Définit la propriété <see cref="M:System.Configuration.ConfigurationElement.IsReadOnly" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElement" /> et tous les sous-éléments.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Modifie l'objet <see cref="T:System.Configuration.ConfigurationElement" /> pour supprimer toutes les valeurs qui ne doivent pas être enregistrées.</summary>
      <param name="sourceElement">
        <see cref="T:System.Configuration.ConfigurationElement" /> au niveau actuel contenant un affichage fusionné des propriétés.</param>
      <param name="parentElement">
        <see cref="T:System.Configuration.ConfigurationElement" /> parent, ou <see langword="null" /> s'il s'agit du niveau supérieur.</param>
      <param name="saveMode">Une des valeurs d’énumération qui détermine les valeurs de propriétés à inclure.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <summary>Obtient une référence à l'instance <see cref="T:System.Configuration.Configuration" /> de niveau supérieur qui représente la hiérarchie de configuration à laquelle l'instance <see cref="T:System.Configuration.ConfigurationElement" /> actuelle appartient.</summary>
      <returns>Instance <see cref="T:System.Configuration.Configuration" /> de niveau supérieur à laquelle l'instance <see cref="T:System.Configuration.ConfigurationElement" /> actuelle appartient.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementInformation">
      <summary>Obtient un objet <see cref="T:System.Configuration.ElementInformation" /> qui contient les fonctionnalités et informations non personnalisables de l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ElementInformation" /> qui contient les fonctionnalités et informations non personnalisables de <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.ElementProperty">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationElementProperty" /> qui représente l'objet <see cref="T:System.Configuration.ConfigurationElement" /> lui-même.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementProperty" /> qui représente le <see cref="T:System.Configuration.ConfigurationElement" /> lui-même.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ContextInformation" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'élément actuel n'est pas associé à un contexte.</exception>
      <returns>
        <see cref="T:System.Configuration.ContextInformation" /> pour <see cref="T:System.Configuration.ConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.HasContext">
      <summary>Obtient une valeur qui indique si la propriété <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> a la valeur <see langword="null" />.</summary>
      <returns>false si la propriété <see cref="P:System.Configuration.ConfigurationElement.CurrentConfiguration" /> est <see langword="null" /> ; sinon, <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <summary>Obtient ou définit une propriété ou un attribut de cet élément de configuration.</summary>
      <param name="prop">Propriété à laquelle accéder.</param>
      <exception cref="T:System.Configuration.ConfigurationException">
        <paramref name="prop" /> est <see langword="null" /> ou n'existe pas dans l'élément.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> est en lecture seule ou verrouillé.</exception>
      <returns>Propriété, attribut ou élément enfant spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <summary>Obtient ou définit une propriété, un attribut ou un élément enfant de cet élément de configuration.</summary>
      <param name="propertyName">Nom du <see cref="T:System.Configuration.ConfigurationProperty" /> auquel accéder.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="prop" /> est en lecture seule ou verrouillé.</exception>
      <returns>Propriété, attribut ou élément enfant spécifié</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <summary>Obtient la collection d'attributs verrouillés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'attributs (propriétés) verrouillés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <summary>Obtient la collection d'éléments verrouillés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'éléments verrouillés.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockAttributes">
      <summary>Obtient la collection d'attributs verrouillés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'attributs (propriétés) verrouillés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockElements">
      <summary>Obtient la collection d'éléments verrouillés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLockCollection" /> d'éléments verrouillés.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.LockItem">
      <summary>Obtient ou définit une valeur indiquant si l'élément est verrouillé.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'élément a déjà été verrouillé à un niveau de configuration supérieur.</exception>
      <returns>
        <see langword="true" /> si l'élément est verrouillé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElement.Properties">
      <summary>Obtient la collection de propriétés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propriétés de l'élément.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollection">
      <summary>Représente un élément de configuration contenant une collection d’éléments enfants.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="comparer">Comparateur <see cref="T:System.Collections.IComparer" /> à utiliser.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <summary>Ajoute un élément de configuration à <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <summary>Ajoute un élément de configuration à la collection d'éléments de configuration.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
      <param name="throwIfExists">
        <see langword="true" /> pour lever une exception si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié est déjà contenu dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Exception">Le <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter existe déjà dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> et le paramètre <paramref name="throwIfExists" /> est <see langword="true" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <summary>Ajoute un élément de configuration à la collection d'éléments de configuration.</summary>
      <param name="index">Emplacement d'index où ajouter le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</param>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <summary>Supprime tous les objets d'élément de configuration de la collection.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuration est en lecture seule.  
  
- ou -
  
 Un élément de collection a été verrouillé dans une configuration de niveau supérieur.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <summary>Obtient l'élément de configuration à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d’index du <see cref="T:System.Configuration.ConfigurationElement" /> à retourner.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> est inférieur à <see langword="0" />.  
  
- ou - 
Il n'y a pas de <see cref="T:System.Configuration.ConfigurationElement" /> au niveau du <paramref name="index" /> spécifié.</exception>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <summary>Retourne l'élément de configuration avec la clé spécifiée.</summary>
      <param name="key">Clé de l'élément à retourner.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <summary>Retourne un tableau des clés pour tous les éléments de configuration contenus dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Tableau qui contient les clés pour tous les objets <see cref="T:System.Configuration.ConfigurationElement" /> contenus dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <summary>Obtient la clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d'index pour <see cref="T:System.Configuration.ConfigurationElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="index" /> est inférieur à <see langword="0" />.  
  
- ou - 
Il n'y a pas de <see cref="T:System.Configuration.ConfigurationElement" /> au niveau du <paramref name="index" /> spécifié.</exception>
      <returns>Clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <summary>Indique l'index de l'élément <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> pour l'emplacement d'index spécifié.</param>
      <returns>Index du <see cref="T:System.Configuration.ConfigurationElement" /> spécifié ; sinon, -1.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <summary>Indique si l'élément <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée a été supprimé de la collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="key">Clé de l'élément à vérifier.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée a été supprimé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <summary>Supprime un <see cref="T:System.Configuration.ConfigurationElement" /> de la collection.</summary>
      <param name="key">Clé du <see cref="T:System.Configuration.ConfigurationElement" /> à supprimer.</param>
      <exception cref="T:System.Exception">Aucun <see cref="T:System.Configuration.ConfigurationElement" /> avec la clé spécifiée n'existe dans la collection, l'élément a déjà été supprimé ou l'élément ne peut pas être supprimé, car la valeur de son <see cref="P:System.Configuration.ConfigurationProperty.Type" /> n'est pas <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <summary>Supprime le <see cref="T:System.Configuration.ConfigurationElement" /> à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d'index du <see cref="T:System.Configuration.ConfigurationElement" /> à supprimer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuration est en lecture seule.  
  
- ou - 
 <paramref name="index" /> est inférieur à <see langword="0" /> ou supérieur au nombre d'objets <see cref="T:System.Configuration.ConfigurationElement" /> de la collection.  
  
- ou - 
L'objet <see cref="T:System.Configuration.ConfigurationElement" /> a déjà été supprimé.  
  
- ou - 
La valeur de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> a été verrouillée à un niveau supérieur.  
  
- ou - 
L'objet <see cref="T:System.Configuration.ConfigurationElement" /> est hérité.  
  
- ou - 
La valeur du <see cref="T:System.Configuration.ConfigurationElement" /> de l'objet <see cref="P:System.Configuration.ConfigurationProperty.Type" /> n'est ni <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" /> ni <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <summary>Copie le contenu de <see cref="T:System.Configuration.ConfigurationElementCollection" /> dans un tableau.</summary>
      <param name="array">Tableau dans lequel copier le contenu de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Emplacement d'index où commencer la copie.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <summary>En cas de substitution dans une classe dérivée, crée <see cref="T:System.Configuration.ConfigurationElement" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElement" /> qui vient d'être créé.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <summary>Crée un nouveau <see cref="T:System.Configuration.ConfigurationElement" /> en cas de substitution dans une classe dérivée.</summary>
      <param name="elementName">Nom du <see cref="T:System.Configuration.ConfigurationElement" /> à créer.</param>
      <returns>Nouveau <see cref="T:System.Configuration.ConfigurationElement" /> avec un nom spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <summary>Compare <see cref="T:System.Configuration.ConfigurationElementCollection" /> avec l'objet spécifié.</summary>
      <param name="compareTo">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l'objet à comparer équivaut à l'instance de <see cref="T:System.Configuration.ConfigurationElementCollection" /> actuelle ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Obtient la clé d'élément pour un élément de configuration spécifié en cas de substitution dans une classe dérivée.</summary>
      <param name="element">
        <see cref="T:System.Configuration.ConfigurationElement" /> pour lequel retourner la clé.</param>
      <returns>
        <see cref="T:System.Object" /> qui agit comme clé pour le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <summary>Obtient un <see cref="T:System.Collections.IEnumerator" /> utilisé pour itérer au sein de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> utilisé pour itérer au sein de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <summary>Obtient une valeur unique représentant l'instance de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <summary>Indique si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié existe dans <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="elementName">Nom de l'élément  à vérifier.</param>
      <returns>
        <see langword="true" /> si l'élément existe dans la collection ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <summary>Indique si l'élément <see cref="T:System.Configuration.ConfigurationElement" /> spécifié peut être supprimée de la collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <param name="element">Élément à vérifier.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationElement" /> spécifié peut être supprimé de cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <summary>Indique si cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> a été modifiée depuis son dernier enregistrement ou chargement en cas de substitution dans une classe dérivée.</summary>
      <returns>
        <see langword="true" /> si un élément contenu a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <summary>Indique si l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <summary>Fait en sorte que le système de configuration lève une exception.</summary>
      <param name="elementName">Nom de l'élément non reconnu.</param>
      <param name="reader">Flux d'entrée qui lit le code XML à partir du fichier de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'élément spécifié dans <paramref name="elementName" /> est l'élément <see langword="&lt;clear&gt;" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="elementName" /> commence par le préfixe réservé "config" ou "lock".</exception>
      <returns>
        <see langword="true" /> si l'élément non reconnu a été correctement désérialisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <summary>Réinitialise <see cref="T:System.Configuration.ConfigurationElementCollection" /> à son état non modifié en cas de substitution dans une classe dérivée.</summary>
      <param name="parentElement">
        <see cref="T:System.Configuration.ConfigurationElement" /> représentant l'élément parent de collection, le cas échéant ; sinon, <see langword="null" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <summary>Réinitialise la valeur de la propriété <see cref="M:System.Configuration.ConfigurationElementCollection.IsModified" /> à <see langword="false" /> en cas de substitution dans une classe dérivée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <summary>Écrit les données de configuration d'un élément XML dans le fichier de configuration en cas de substitution dans une classe dérivée.</summary>
      <param name="writer">Flux de sortie qui écrit le XML dans le fichier de configuration.</param>
      <param name="serializeCollectionKey">
        <see langword="true" /> pour sérialiser uniquement la clé de collection ; sinon <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">L'un des éléments de la collection a été ajouté ou remplacé, et commence par le préfixe réservé "config" ou "lock".</exception>
      <returns>
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationElementCollection" /> a été écrite avec succès dans le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <summary>Définit la propriété <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" /> pour l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> et pour tous les sous-éléments.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie <see cref="T:System.Configuration.ConfigurationElementCollection" /> dans un tableau.</summary>
      <param name="arr">Tableau dans lequel copier cette <see cref="T:System.Configuration.ConfigurationElementCollection" />.</param>
      <param name="index">Emplacement d'index où commencer la copie.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <summary>Inverse l'effet de la fusion des informations de configuration de différents niveaux de la hiérarchie de configuration.</summary>
      <param name="sourceElement">Objet <see cref="T:System.Configuration.ConfigurationElement" /> au niveau actuel contenant un affichage fusionné des propriétés.</param>
      <param name="parentElement">Objet <see cref="T:System.Configuration.ConfigurationElement" /> parent de l'élément actuel ou <see langword="null" /> s'il s'agit du niveau supérieur racine.</param>
      <param name="saveMode">Une des valeurs d’énumération qui détermine les valeurs de propriétés à inclure.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <summary>Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération d'ajout dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <exception cref="T:System.ArgumentException">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
      <returns>Nom de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <summary>Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération d'effacement dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <exception cref="T:System.ArgumentException">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
      <returns>Nom de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <summary>Obtient le type de <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de cette collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.Count">
      <summary>Obtient le nombre d’éléments de la collection.</summary>
      <returns>Nombre d'éléments dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <summary>Obtient le nom utilisé pour identifier cette collection d'éléments dans le fichier de configuration en cas de substitution dans une classe dérivée.</summary>
      <returns>Nom de la collection ; sinon, une chaîne vide. La valeur par défaut est une chaîne vide.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <summary>Obtient ou définit une valeur qui spécifie si la collection a été effacée.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La configuration est en lecture seule.</exception>
      <returns>
        <see langword="true" /> si la collection a été effacée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à la collection est synchronisé.</summary>
      <returns>
        <see langword="true" /> si l'accès à la <see cref="T:System.Configuration.ConfigurationElementCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <summary>Obtient ou définit le nom du <see cref="T:System.Configuration.ConfigurationElement" /> à associer à l'opération de suppression dans <see cref="T:System.Configuration.ConfigurationElementCollection" /> en cas de substitution dans une classe dérivée.</summary>
      <exception cref="T:System.ArgumentException">La valeur sélectionnée commence par le préfixe réservé "config" ou "lock".</exception>
      <returns>Nom de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <summary>Obtient un objet utilisé pour synchroniser l'accès à <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à la <see cref="T:System.Configuration.ConfigurationElementCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <summary>Obtient une valeur indiquant si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué à <see cref="T:System.Configuration.ConfigurationElementCollection" /> provoquera la levée d'une exception.</summary>
      <returns>
        <see langword="true" /> si une tentative d'ajout d'un <see cref="T:System.Configuration.ConfigurationElement" /> dupliqué à cette <see cref="T:System.Configuration.ConfigurationElementCollection" /> provoquera la levée d'une exception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationElementCollectionType">
      <summary>Spécifie le type d'un objet <see cref="T:System.Configuration.ConfigurationElementCollectionType" />.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <summary>Type par défaut de <see cref="T:System.Configuration.ConfigurationElementCollection" />. Les collections de ce type contiennent des éléments qui peuvent être fusionnés dans une hiérarchie de fichiers de configuration. Quel que soit le niveau d'une telle hiérarchie, les directives <see langword="add" />, <see langword="remove" /> et <see langword="clear" /> sont utilisées pour modifier des propriétés héritées et en spécifier de nouvelles.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <summary>Même que <see cref="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />, mais ce type permet à l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> de trier son contenu de telle manière que les éléments hérités soient répertoriés en dernier.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <summary>Les collections de ce type contiennent des éléments qui s'appliquent au niveau auquel ils sont spécifiés et à tous les niveaux enfants. Un niveau enfant ne peut pas modifier les propriétés spécifiées par un élément parent de ce type.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <summary>Même que <see cref="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />, mais ce type permet à l'objet <see cref="T:System.Configuration.ConfigurationElementCollection" /> de trier son contenu de telle manière que les éléments hérités soient répertoriés en dernier.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationElementProperty">
      <summary>Spécifie la propriété d’un élément de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationElementProperty" /> en fonction d’un paramètre fourni.</summary>
      <param name="validator">Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationElementProperty.Validator">
      <summary>Obtient un objet <see cref="T:System.Configuration.ConfigurationValidatorBase" /> utilisé pour valider l’objet <see cref="T:System.Configuration.ConfigurationElementProperty" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationErrorsException">
      <summary>Exception levée lorsqu'une erreur de configuration s'est produite.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="info">Objet qui contient les informations à désérialiser.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
      <exception cref="T:System.InvalidOperationException">Le type actuel n'est ni un <see cref="T:System.Configuration.ConfigurationException" /> ni un <see cref="T:System.Configuration.ConfigurationErrorsException" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner">Exception qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="filename">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="filename">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <param name="line">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationErrorsException" />.</summary>
      <param name="message">Message qui explique pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</param>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <summary>Obtient le chemin d'accès du fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</summary>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Chemin d'accès au fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <summary>Obtient le chemin d'accès au fichier de configuration que le <see cref="T:System.Xml.XmlReader" /> interne lisait lorsque cette exception de configuration a été levée.</summary>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Chemin du fichier de configuration auquel l'objet <see cref="T:System.Xml.XmlReader" /> interne accédait lorsque l'exception s'est produite.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <summary>Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlNode" /> interne représentait lorsque cette exception de configuration a été levée.</summary>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Numéro de ligne du fichier de configuration contenant l'objet <see cref="T:System.Xml.XmlNode" /> qui était analysé lorsque cette exception de configuration a été levée.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <summary>Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlReader" /> interne traitait lorsque cette exception de configuration a été levée.</summary>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" /> qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" />.</param>
      <returns>Numéro de ligne du fichier de configuration auquel l'objet <see cref="T:System.Xml.XmlReader" /> accédait lorsque l'exception s'est produite.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom de fichier et le numéro de ligne au niveau desquels cette exception de configuration s'est produite.</summary>
      <param name="info">Objet qui contient les informations à sérialiser.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <summary>Obtient une description expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns>Description de la raison pour laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Errors">
      <summary>Obtient une collection d'erreurs qui détaillent les raisons pour lesquelles cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</summary>
      <returns>Objet <see cref="T:System.Collections.ICollection" /> qui contient des erreurs qui identifient les raisons pour lesquelles cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Filename">
      <summary>Obtient le chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception.</summary>
      <returns>Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationErrorsException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Line">
      <summary>Obtient le numéro de la ligne du fichier de configuration dans laquelle cette exception de configuration a été levée.</summary>
      <returns>Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationErrorsException.Message">
      <summary>Obtient une description détaillée expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns>Description détaillée expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationErrorsException" /> a été levée.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationException">
      <summary>Exception levée lorsqu'une erreur de système de configuration s'est produite.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="info">Objet qui contient les informations à désérialiser.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
      <param name="filename">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="inner">Exception interne qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />, le cas échéant.</param>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de l'exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="filename">Chemin d'accès au fichier de configuration qui a provoqué la levée de cette <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <param name="line">Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationException" />.</summary>
      <param name="message">Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</param>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de l'exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec le nom de fichier et le numéro de ligne au niveau desquels cette exception de configuration s'est produite.</summary>
      <param name="info">Objet qui contient les informations à sérialiser.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <summary>Obtient le chemin d'accès du fichier de configuration à partir duquel l'objet <see cref="T:System.Xml.XmlNode" /> interne a été chargé lorsque cette exception de configuration a été levée.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>
        <see langword="string" /> représentant le nom de fichier du nœud.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <summary>Obtient le numéro de ligne du fichier de configuration que l'objet <see cref="T:System.Xml.XmlNode" /> interne représentait lorsque cette exception de configuration a été levée.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> qui entraîne la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</param>
      <returns>
        <see langword="int" /> représentant le numéro de ligne du nœud.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.BareMessage">
      <summary>Obtient une description expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns>Message expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Filename">
      <summary>Obtient le chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception.</summary>
      <returns>Chemin d'accès au fichier de configuration qui a provoqué la levée de cette exception <see cref="T:System.Configuration.ConfigurationException" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Line">
      <summary>Obtient le numéro de la ligne du fichier de configuration dans laquelle cette exception de configuration a été levée.</summary>
      <returns>Numéro de la ligne du fichier de configuration dans laquelle cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationException.Message">
      <summary>Obtient une description détaillée expliquant pourquoi cette exception de configuration a été levée.</summary>
      <returns>Description détaillée expliquant pourquoi cette exception <see cref="T:System.Configuration.ConfigurationException" /> a été levée.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationFileMap">
      <summary>Définit le mappage du fichier de configuration pour le fichier de configuration de l’ordinateur.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationFileMap" /> en fonction du paramètre fourni.</summary>
      <param name="machineConfigFilename">Nom du fichier de configuration de l’ordinateur.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationFileMap.Clone">
      <summary>Crée une copie de l’objet <see cref="T:System.Configuration.ConfigurationFileMap" /> existant.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <summary>Obtient ou définit le nom du fichier de configuration de l’ordinateur.</summary>
      <returns>Nom du fichier de configuration machine.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocation">
      <summary>Représente un élément <see langword="location" /> se trouvant dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <summary>Crée une instance d’un objet Configuration.</summary>
      <returns>Objet Configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLocation.Path">
      <summary>Obtient le chemin relatif à la ressource dont les paramètres de configuration sont représentés par cet objet <see cref="T:System.Configuration.ConfigurationLocation" />.</summary>
      <returns>Chemin d'accès relatif à la ressource dont les paramètres de configuration sont représentés par ce <see cref="T:System.Configuration.ConfigurationLocation" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLocationCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.ConfigurationLocationCollection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <summary>Obtient l’objet <see cref="T:System.Configuration.ConfigurationLocationCollection" /> à l’index spécifié.</summary>
      <param name="index">Emplacement d’index du <see cref="T:System.Configuration.ConfigurationLocationCollection" /> à retourner.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationLocationCollection" /> au niveau de l'index spécifié.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationLockCollection">
      <summary>Contient une collection d'objets de configuration verrouillés. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <summary>Verrouille un objet de configuration en l'ajoutant à la collection.</summary>
      <param name="name">Nom de l'objet de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produit lorsque le <paramref name="name" /> ne correspond pas à un objet de configuration existant dans la collection.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Clear">
      <summary>Efface tous les objets de configuration de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <summary>Vérifie si un objet de configuration spécifique est verrouillé.</summary>
      <param name="name">Nom de l'objet de configuration à vérifier.</param>
      <returns>
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationLockCollection" /> contient l'objet de configuration spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copie la totalité de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <summary>Obtient un objet <see cref="T:System.Collections.IEnumerator" />, qui est utilisé pour itérer au sein de cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <summary>Vérifie si un objet de configuration spécifique est en lecture seule.</summary>
      <param name="name">Nom de l'objet de configuration à vérifier.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">L'objet de configuration spécifié est introuvable dans la collection.</exception>
      <returns>
        <see langword="true" /> si l'objet de configuration spécifié dans la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <summary>Supprime un objet de configuration de la collection.</summary>
      <param name="name">Nom de l'objet de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produit lorsque le <paramref name="name" /> ne correspond pas à un objet de configuration existant dans la collection.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <summary>Verrouille un jeu d'objets de configuration selon la liste fournie.</summary>
      <param name="attributeList">Chaîne délimitée par des virgules.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Se produit lorsqu'un élément du paramètre <paramref name="attributeList" /> n'est pas un attribut de configuration verrouillable valide.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie la totalité de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de la collection <see cref="T:System.Configuration.ConfigurationLockCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <summary>Obtient une liste des objets de configuration contenus dans la collection.</summary>
      <returns>Chaîne délimitée par des virgules qui répertorie les objets de configuration verrouillés dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.Count">
      <summary>Obtient le nombre d'objets de configuration verrouillés contenus dans la collection.</summary>
      <returns>Nombre d'objets de configuration verrouillés contenus dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <summary>Obtient une valeur spécifiant si la collection d'objets verrouillés a des éléments parents.</summary>
      <returns>
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> a des éléments parents ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <summary>Obtient une valeur indiquant si la collection a été modifiée.</summary>
      <returns>
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> a été modifiée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si la collection est synchronisée.</summary>
      <returns>
        <see langword="true" /> si la collection <see cref="T:System.Configuration.ConfigurationLockCollection" /> est synchronisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <summary>Obtient un objet utilisé pour synchroniser l'accès à cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à cette collection <see cref="T:System.Configuration.ConfigurationLockCollection" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationManager">
      <summary>Fournit un accès aux fichiers de configuration pour les applications clientes. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <summary>Récupère une section de configuration spécifiée pour la configuration par défaut de l'application actuelle.</summary>
      <param name="sectionName">Chemin d'accès et nom de la section de configuration. Les noms de nœud sont séparés par des barres obliques inverses, par exemple "system.net/mailSettings/smtp".</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié, ou <see langword="null" /> si la section n’existe pas.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <summary>Ouvre le fichier de configuration pour l'application actuelle en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="userLevel">L’une des valeurs d’énumération qui spécifie le niveau utilisateur pour lequel vous ouvrez la configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Fichier de configuration de l’application actuelle.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <summary>Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="exePath">Chemin d’accès du fichier exécutable (exe).</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Fichier de configuration spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <summary>Ouvre le fichier de configuration machine sur l'ordinateur actuel en tant qu'objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Fichier de configuration de l’ordinateur.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <summary>Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers et le niveau d'utilisateur spécifiés.</summary>
      <param name="fileMap">Fichier de configuration à utiliser au lieu du fichier de configuration par défaut de l’application.</param>
      <param name="userLevel">L’une des valeurs d’énumération qui spécifie le niveau utilisateur pour lequel vous ouvrez la configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <summary>Ouvre le fichier de configuration client spécifié en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers, l'option de préchargement et le niveau d'utilisateur spécifiés.</summary>
      <param name="fileMap">Fichier de configuration à utiliser au lieu du fichier de configuration d’application par défaut.</param>
      <param name="userLevel">L’une des valeurs d’énumération qui spécifie le niveau utilisateur pour lequel vous ouvrez la configuration.</param>
      <param name="preLoad">
        <see langword="true" /> pour précharger tous les groupes de sections et toutes les sections ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <summary>Ouvre le fichier de configuration machine en tant qu'objet <see cref="T:System.Configuration.Configuration" /> utilisant le mappage de fichiers spécifié.</summary>
      <param name="fileMap">Fichier de configuration à utiliser au lieu du fichier de configuration par défaut de l’application.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Nous n’avons pas pu charger un fichier de configuration.</exception>
      <returns>Fichier de configuration de l’ordinateur.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <summary>Actualise la section nommée de sorte qu'elle soit relue à partir du disque lors de sa prochaine récupération.</summary>
      <param name="sectionName">Nom de section de configuration ou nom de section et de chemin d'accès de configuration de la section à actualiser.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.AppSettings">
      <summary>Obtient les données <see cref="T:System.Configuration.AppSettingsSection" /> pour la configuration par défaut de l’application actuelle.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible de récupérer un objet <see cref="T:System.Collections.Specialized.NameValueCollection" /> avec les données de paramètres d’application.</exception>
      <returns>Contenu de l' <see cref="T:System.Configuration.AppSettingsSection" /> objet pour la configuration par défaut de l’application actuelle.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <summary>Obtient les données <see cref="T:System.Configuration.ConnectionStringsSection" /> pour la configuration par défaut de l’application actuelle.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Impossible d’extraire un objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</exception>
      <returns>Contenu de l' <see cref="T:System.Configuration.ConnectionStringsSection" /> objet pour la configuration par défaut de l’application actuelle.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationProperty">
      <summary>Représente un attribut ou un enfant d'un élément de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nom de l'entité de configuration.</param>
      <param name="type">Type de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nom de l'entité de configuration.</param>
      <param name="type">Type de l'entité de configuration.</param>
      <param name="defaultValue">Valeur par défaut de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nom de l'entité de configuration.</param>
      <param name="type">Type de l'entité de configuration.</param>
      <param name="defaultValue">Valeur par défaut de l'entité de configuration.</param>
      <param name="typeConverter">Type du convertisseur à appliquer.</param>
      <param name="validator">Validateur à utiliser.</param>
      <param name="options">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nom de l'entité de configuration.</param>
      <param name="type">Type de l'entité de configuration.</param>
      <param name="defaultValue">Valeur par défaut de l'entité de configuration.</param>
      <param name="typeConverter">Type du convertisseur à appliquer.</param>
      <param name="validator">Validateur à utiliser.</param>
      <param name="options">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
      <param name="description">Description de l'entité de configuration.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <param name="name">Nom de l'entité de configuration.</param>
      <param name="type">Type de l'entité de configuration.</param>
      <param name="defaultValue">Valeur par défaut de l'entité de configuration.</param>
      <param name="options">Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" />.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Converter">
      <summary>Obtient le <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir ce <see cref="T:System.Configuration.ConfigurationProperty" /> en une représentation XML pour écrire dans le fichier de configuration.</summary>
      <exception cref="T:System.Exception">Ce <see cref="T:System.Configuration.ConfigurationProperty" /> ne peut pas être converti.</exception>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> utilisé pour convertir ce <see cref="T:System.Configuration.ConfigurationProperty" /> en une représentation XML pour écrire dans le fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <summary>Obtient la valeur par défaut pour cette propriété <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>
        <see cref="T:System.Object" /> pouvant être casté en type spécifié par la propriété <see cref="P:System.Configuration.ConfigurationProperty.Type" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Description">
      <summary>Obtient la description associée au <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Valeur <see langword="string" /> qui décrit la propriété.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <summary>Indique si le nom de l'assembly pour la propriété de configuration nécessite une transformation lorsque cette dernière est sérialisée pour une version antérieure du .NET Framework.</summary>
      <returns>
        <see langword="true" /> si la propriété nécessite une transformation de nom de l'assembly ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <summary>Obtient une valeur indiquant si la propriété est la collection par défaut d'un élément.</summary>
      <returns>
        <see langword="true" /> si la propriété est la collection par défaut d'un élément ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsKey">
      <summary>Obtient une valeur indiquant si ce <see cref="T:System.Configuration.ConfigurationProperty" /> est la clé de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> contenant.</summary>
      <returns>
        <see langword="true" /> si cet objet <see cref="T:System.Configuration.ConfigurationProperty" /> est la clé de l'élément conteneur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsRequired">
      <summary>Obtient une valeur indiquant si ce <see cref="T:System.Configuration.ConfigurationProperty" /> est requis.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Configuration.ConfigurationProperty" /> est requis ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <summary>Indique si le nom de type pour la propriété de configuration nécessite une transformation lorsque cette dernière est sérialisée pour une version antérieure du .NET Framework.</summary>
      <returns>
        <see langword="true" /> si la propriété nécessite une transformation de nom de type ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <summary>Indique si la section de configuration parente de la propriété de configuration est interrogée lors de la sérialisation afin de déterminer si la propriété de configuration doit être sérialisée en XML.</summary>
      <returns>
        <see langword="true" /> si la section de configuration parente doit être interrogée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Name">
      <summary>Obtient le nom de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Type">
      <summary>Obtient le type de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>
        <see cref="T:System.Type" /> représentant le type de cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationProperty.Validator">
      <summary>Obtient <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />, lequel est utilisé pour valider cet objet <see cref="T:System.Configuration.ConfigurationProperty" />.</summary>
      <returns>Validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />, qui est utilisé pour valider ce <see cref="T:System.Configuration.ConfigurationProperty" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyAttribute">
      <summary>Ordonne de manière déclarative au .NET Framework d'instancier une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPropertyAttribute" />.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationProperty" /> défini.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de la propriété décorée.</summary>
      <returns>Objet représentant la valeur par défaut de la propriété d'élément de configuration décorée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <summary>Obtient ou définit une valeur indiquant s'il s'agit de la collection de propriétés par défaut pour la propriété de configuration décorée.</summary>
      <returns>
        <see langword="true" /> si la propriété représente la collection par défaut d'un élément ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <summary>Obtient ou définit une valeur indiquant s'il s'agit d'une propriété clé pour la propriété d'élément décorée.</summary>
      <returns>
        <see langword="true" /> si la propriété est une propriété clé pour un élément de la collection ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <summary>Obtient ou définit une valeur indiquant si la propriété d'élément décorée est requise.</summary>
      <returns>
        <see langword="true" /> si la propriété est requise ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <summary>Obtient le nom de la propriété d'élément de configuration décorée.</summary>
      <returns>Nom de la propriété d'élément de configuration décorée.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <summary>Obtient ou définit <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> pour la propriété d'élément de configuration décorée.</summary>
      <returns>Une des valeurs d'énumération <see cref="T:System.Configuration.ConfigurationPropertyOptions" /> associées à la propriété.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyCollection">
      <summary>Représente une collection de propriétés d'éléments de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <summary>Ajoute une propriété de configuration à la collection.</summary>
      <param name="property">
        <see cref="T:System.Configuration.ConfigurationProperty" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <summary>Supprime tous les objets de propriétés de configuration de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <summary>Spécifie si la propriété de configuration est contenue dans cette collection.</summary>
      <param name="name">Identificateur du <see cref="T:System.Configuration.ConfigurationProperty" /> à vérifier.</param>
      <returns>
        <see langword="true" /> si la collection contient le <see cref="T:System.Configuration.ConfigurationProperty" /> spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <summary>Copie cette ConfigurationPropertyCollection dans un tableau.</summary>
      <param name="array">Tableau dans lequel effectuer la copie.</param>
      <param name="index">Index où commencer la copie.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <summary>Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <summary>Supprime une propriété de configuration de la collection.</summary>
      <param name="name">
        <see cref="T:System.Configuration.ConfigurationProperty" /> à supprimer.</param>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Configuration.ConfigurationProperty" /> spécifié a été supprimé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie cette collection dans un tableau.</summary>
      <param name="array">Tableau vers lequel effectuer la copie.</param>
      <param name="index">Position d'index où commence la copie.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <summary>Obtient le nombre de propriétés de la collection.</summary>
      <returns>Nombre de propriétés de la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à la <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <summary>Obtient l'élément de collection portant le nom spécifié.</summary>
      <param name="name">Objet <see cref="T:System.Configuration.ConfigurationProperty" /> à retourner.</param>
      <returns>
        <see cref="T:System.Configuration.ConfigurationProperty" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <summary>Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationPropertyOptions">
      <summary>Spécifie les options à appliquer à une propriété.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <summary>Indique si le nom de l'assembly pour la propriété de configuration nécessite une transformation lorsqu'il est sérialisé pour une version antérieure du .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <summary>Indique que la propriété est une collection par défaut.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <summary>Indique que la propriété est une clé de collection.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <summary>Indique que la propriété est requise.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <summary>Indique si le nom de type pour la propriété de configuration nécessite une transformation lorsqu'il est sérialisé pour une version antérieure du .NET Framework.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <summary>Indique si la section de configuration parente de la propriété de configuration doit être interrogée lors de la sérialisation afin de déterminer si la propriété de configuration doit être sérialisée en XML.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationPropertyOptions.None">
      <summary>Indique qu'aucune option ne s'applique à la propriété.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSaveMode">
      <summary>Détermine quelles propriétés sont écrites dans un fichier de configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Full">
      <summary>Entraîne l'écriture de toutes les propriétés dans le fichier de configuration. Ceci est particulièrement utile pour créer des fichiers de configuration d'information ou déplacer des valeurs de configuration d'un ordinateur à un autre.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <summary>Seules les propriétés qui diffèrent des valeurs héritées sont écrites dans le fichier de configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationSaveMode.Modified">
      <summary>Seules les propriétés modifiées sont écrites dans le fichier de configuration, même lorsque la valeur est le même que la valeur héritée.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationSection">
      <summary>Représente une section dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <summary>Lit du XML à partir du fichier de configuration.</summary>
      <param name="reader">Objet <see cref="T:System.Xml.XmlReader" />, qui lit le fichier de configuration.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="reader" /> n'a trouvé aucun élément dans le fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <summary>Retourne un objet personnalisé en cas de substitution dans une classe dérivée.</summary>
      <returns>Objet représentant la section.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.IsModified">
      <summary>Indique si cet élément de configuration a été modifié depuis son dernier enregistrement ou chargement lorsqu'il est implémenté dans une classe dérivée.</summary>
      <returns>
        <see langword="true" /> si l'élément a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ResetModified">
      <summary>Réinitialise la valeur de la méthode <see cref="M:System.Configuration.ConfigurationElement.IsModified" /> à <see langword="false" /> en cas d’implémentation dans une classe dérivée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <summary>Crée une chaîne XML contenant un affichage non fusionné de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> sous la forme d'une section unique à écrire dans un fichier.</summary>
      <param name="parentElement">Instance de <see cref="T:System.Configuration.ConfigurationElement" /> à utiliser comme parent lors de l'annulation de la fusion.</param>
      <param name="name">Nom de la section à créer.</param>
      <param name="saveMode">Instance de <see cref="T:System.Configuration.ConfigurationSaveMode" /> à utiliser lors de l'écriture dans une chaîne.</param>
      <returns>Chaîne XML contenant un affichage non fusionné de l'objet <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Indique si l'élément spécifié doit être sérialisé lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="element">Objet <see cref="T:System.Configuration.ConfigurationElement" /> qui est candidat pour la sérialisation.</param>
      <param name="elementName">Nom de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> tel qu'il apparaît au format XML.</param>
      <param name="targetFramework">Version cible du .NET Framework.</param>
      <returns>
        <see langword="true" /> si <paramref name="element" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <summary>Indique si la propriété spécifiée doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.ConfigurationProperty" /> qui est candidat pour la sérialisation.</param>
      <param name="propertyName">Nom de l'objet <see cref="T:System.Configuration.ConfigurationProperty" /> tel qu'il apparaît au format XML.</param>
      <param name="targetFramework">Version cible du .NET Framework.</param>
      <param name="parentConfigurationElement">Élément parent de la propriété.</param>
      <returns>
        <see langword="true" /> si <paramref name="property" /> doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indique si l'instance <see cref="T:System.Configuration.ConfigurationSection" /> actuelle doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="targetFramework">Version cible du .NET Framework.</param>
      <returns>
        <see langword="true" /> si la section actuelle doit être sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSection.SectionInformation">
      <summary>Obtient un objet <see cref="T:System.Configuration.SectionInformation" /> qui contient les fonctionnalités et informations non personnalisables de l'objet <see cref="T:System.Configuration.ConfigurationSection" />.</summary>
      <returns>
        <see cref="T:System.Configuration.SectionInformation" /> qui contient les fonctionnalités et informations non personnalisables de <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionCollection">
      <summary>Représente une collection de sections associées dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.ConfigurationSection" /> à l’objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nom de la section à ajouter.</param>
      <param name="section">Section à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <summary>Efface cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <summary>Copie cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> dans un tableau.</summary>
      <param name="array">Tableau où copier l’objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</param>
      <param name="index">Position d'index où commence la copie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de <paramref name="array" /> est inférieure à la valeur de <see cref="P:System.Configuration.ConfigurationSectionCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est null ou une chaîne vide ("").</exception>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> portant le nom spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <summary>Obtient un énumérateur qui peut itérer au sein de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <summary>Obtient la clé de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> dont la clé doit être retournée.</param>
      <returns>Clé de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Utilisé par le système pendant la sérialisation.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> applicable.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> applicable.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <summary>Supprime l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="name">Nom de la section à supprimer.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <summary>Supprime l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié de cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <param name="index">Index de la section à supprimer.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Count">
      <summary>Obtient le nombre de sections contenues dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Entier qui représente le nombre de sections dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="index">Index de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSection" /> spécifié.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> portant le nom spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <summary>Obtient les clés de tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> contenus dans cet objet <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> qui contient les clés de toutes les sections de cette collection.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroup">
      <summary>Représente un groupe de sections associées dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <summary>Force la déclaration de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <summary>Force la déclaration de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <param name="force">
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> doit être écrit dans le fichier ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est le groupe de sections racine.  
  
- ou - 
L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> a un emplacement.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <summary>Indique si l'instance <see cref="T:System.Configuration.ConfigurationSectionGroup" /> actuelle doit être sérialisée lorsque la hiérarchie d'objets de configuration est sérialisée pour la version cible spécifiée du .NET Framework.</summary>
      <param name="targetFramework">Version cible du .NET Framework.</param>
      <returns>
        <see langword="true" /> si le groupe de la section actuelle doit être sérialisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <summary>Obtient une valeur qui indique si cette déclaration d'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est requise.</summary>
      <returns>
        <see langword="true" /> si cette déclaration <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est requise ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <summary>Obtient une valeur qui indique si cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est déclaré.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est déclaré ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Name">
      <summary>Obtient la propriété de nom de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Propriété de nom de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <summary>Obtient le nom du groupe de sections associé à ce <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Nom du groupe de sections de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <summary>Obtient un objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> qui sont des enfants de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> qui sont des enfants de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <summary>Obtient un objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionCollection" /> qui contient tous les objets <see cref="T:System.Configuration.ConfigurationSection" /> de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroup.Type">
      <summary>Obtient ou définit le type de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> est le groupe de sections racine.  
  
- ou - 
L'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> a un emplacement.</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La section ou le groupe est déjà défini à un autre niveau.</exception>
      <returns>Type de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSectionGroupCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Configuration.ConfigurationSectionGroup" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à ajouter.</param>
      <param name="sectionGroup">Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <summary>Efface la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <summary>Copie cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dans un tableau.</summary>
      <param name="array">Tableau dans lequel copier l'objet.</param>
      <param name="index">Position d'index où commence la copie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La longueur de <paramref name="array" /> est inférieure à la valeur de <see cref="P:System.Configuration.ConfigurationSectionGroupCollection.Count" /> plus <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié contenu dans la collection.</summary>
      <param name="index">Index de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié de la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> est null ou une chaîne vide ("").</exception>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> portant le nom spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <summary>Obtient un énumérateur qui peut itérer au sein de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <summary>Obtient la clé de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> spécifié contenu dans cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <param name="index">Index du groupe de sections dont la clé doit être retournée.</param>
      <returns>Clé de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à l'index spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Utilisé par le système pendant la sérialisation.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> applicable.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> applicable.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <summary>Supprime de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dont le nom est spécifié.</summary>
      <param name="name">Nom du groupe de sections à supprimer.</param>
    </member>
    <member name="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <summary>Supprime de cet objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> l'objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> dont l'index est spécifié.</summary>
      <param name="index">Index du groupe de sections à supprimer.</param>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <summary>Obtient le nombre de groupes de sections de la collection.</summary>
      <returns>Entier qui représente le nombre de groupes de sections dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> situé à l'index spécifié de la collection.</summary>
      <param name="index">Index de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> au niveau de l’index spécifié.  
  
En C#, cette propriété est l'indexeur correspondant à la classe <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> dont le nom est spécifié à partir de la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> à retourner.</param>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSectionGroup" /> portant le nom spécifié.  
  
En C#, cette propriété est l'indexeur correspondant à la classe <see cref="T:System.Configuration.ConfigurationSectionCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <summary>Obtient les clés de tous les objets <see cref="T:System.Configuration.ConfigurationSectionGroup" /> contenus dans cet objet <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> qui contient les noms de tous les groupes de sections dans cette collection.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationSettings">
      <summary>Fournit la prise en charge des versions 1.0 et 1.1 du runtime pour la lecture des sections de configuration et des paramètres de configuration courants.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <summary>Retourne l'objet <see cref="T:System.Configuration.ConfigurationSection" /> pour le nom et le chemin d'accès de section de configuration passés.</summary>
      <param name="sectionName">Nom et chemin d'accès de configuration, par exemple "system.net/settings".</param>
      <exception cref="T:System.Configuration.ConfigurationException">Impossible de récupérer la section demandée.</exception>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationSection" /> pour le nom et le chemin d'accès de section de configuration passés.  
  
 <block subset="none" type="note"><para>  
 La classe <see cref="T:System.Configuration.ConfigurationSettings" /> fournit uniquement une compatibilité descendante. Utilisez la classe <see cref="T:System.Configuration.ConfigurationManager" /> ou la classe <see cref="T:System.Web.Configuration.WebConfigurationManager" /> à la place.</para></block></returns>
    </member>
    <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
      <summary>Obtient une collection en lecture seule des paramètres d'application du fichier de configuration.</summary>
      <returns>Collection en lecture seule des paramètres d’application à partir du fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationUserLevel">
      <summary>Utilisé pour spécifier le fichier de configuration qui doit être représenté par l’objet Configuration.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.None">
      <summary>Obtenez la <see cref="T:System.Configuration.Configuration" /> qui s’applique à tous les utilisateurs.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <summary>Obtenez la <see cref="T:System.Configuration.Configuration" /> d’itinérance qui s’applique à l’utilisateur actuel.</summary>
    </member>
    <member name="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <summary>Obtient la <see cref="T:System.Configuration.Configuration" /> locale qui s’applique à l’utilisateur actuel.</summary>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorAttribute">
      <summary>Sert de classe de base pour les types d'attributs du validateur <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorAttribute" /> à l'aide du type de validateur spécifié.</summary>
      <param name="validator">Type de validateur à utiliser lors de la création d'une instance de <see cref="T:System.Configuration.ConfigurationValidatorAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="validator" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="validator" /> n'est pas dérivé de <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</exception>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <summary>Obtient l’instance d’attribut du validateur.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationValidatorBase" /> actuel.</returns>
    </member>
    <member name="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <summary>Obtient le type de l'attribut du validateur.</summary>
      <returns>
        <see cref="T:System.Type" /> de l'instance d'attribut du validateur actuelle.</returns>
    </member>
    <member name="T:System.Configuration.ConfigurationValidatorBase">
      <summary>Joue le rôle de classe de base pour dériver une classe de validation afin qu’une valeur d’objet puisse être vérifiée.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <summary>Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si la valeur du paramètre <paramref name="type" /> correspond au <see langword="type" /> attendu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur de l’objet.</param>
    </member>
    <member name="T:System.Configuration.ConfigXmlDocument">
      <summary>Encapsule le type <see cref="T:System.Xml.XmlDocument" /> correspondant et contient également les informations nécessaires pour signaler le nom de fichier et les numéros de ligne.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConfigXmlDocument" />.</summary>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Crée un attribut d'élément de configuration.</summary>
      <param name="prefix">Définition du préfixe.</param>
      <param name="localName">Nom utilisé localement.</param>
      <param name="namespaceUri">URL assignée à l'espace de noms.</param>
      <returns>Attribut <see cref="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <summary>Crée une section CData XML.</summary>
      <param name="data">Données à utiliser.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <summary>Crée un commentaire XML.</summary>
      <param name="data">Données de commentaires.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlComment" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crée un élément de configuration.</summary>
      <param name="prefix">Définition du préfixe.</param>
      <param name="localName">Nom utilisé localement.</param>
      <param name="namespaceUri">Espace de noms de l'URL.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Crée des espaces blancs.</summary>
      <param name="data">Données à utiliser.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <summary>Crée un nœud de texte.</summary>
      <param name="text">Texte à utiliser.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlText" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <summary>Crée des espaces blancs.</summary>
      <param name="data">Données à utiliser.</param>
      <returns>Valeur de <see cref="T:System.Xml.XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <summary>Charge le fichier de configuration.</summary>
      <param name="filename">Nom du fichier.</param>
    </member>
    <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <summary>Charge un élément de configuration unique.</summary>
      <param name="filename">Nom du fichier.</param>
      <param name="sourceReader">Source du lecteur.</param>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.Filename">
      <summary>Obtient le nom du fichier de configuration.</summary>
      <returns>Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <summary>Obtient le numéro de ligne du nœud actuel.</summary>
      <returns>Numéro de ligne du nœud actuel.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <summary>Obtient le nom du fichier de configuration.</summary>
      <returns>Nom du fichier.</returns>
    </member>
    <member name="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <summary>Obtient le numéro de la ligne de configuration.</summary>
      <returns>Numéro de ligne.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettings">
      <summary>Représente une chaîne de connexion nommée unique dans la section du fichier de configuration des chaînes de connexion.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Nom de la chaîne de connexion.</param>
      <param name="connectionString">Chaîne de connexion</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <param name="name">Nom de la chaîne de connexion.</param>
      <param name="connectionString">Chaîne de connexion</param>
      <param name="providerName">Nom du fournisseur à utiliser avec la chaîne de connexion.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettings.ToString">
      <summary>Retourne une représentation de l'objet sous forme de chaîne.</summary>
      <returns>Représentation sous forme de chaîne de l'objet.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <summary>Obtient ou définit la chaîne de connexion.</summary>
      <returns>Valeur de chaîne assignée à la propriété <see cref="P:System.Configuration.ConnectionStringSettings.ConnectionString" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.Name">
      <summary>Obtient ou définit le nom <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Valeur de chaîne assignée à la propriété <see cref="P:System.Configuration.ConnectionStringSettings.Name" />.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <summary>Obtient ou définit la propriété du nom du fournisseur.</summary>
      <returns>La propriété <see cref="P:System.Configuration.ConnectionStringSettings.ProviderName" />.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringSettingsCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à la collection.</summary>
      <param name="settings">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <summary>Retourne l'index de collection de l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> passé.</summary>
      <param name="settings">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
      <returns>Index de collection de l'objet <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <summary>Supprime l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> spécifié de la collection.</summary>
      <param name="settings">Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <summary>Supprime l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> spécifié de la collection.</summary>
      <param name="name">Nom d’un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
    </member>
    <member name="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <summary>Supprime de la collection l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> à l'index spécifié.</summary>
      <param name="index">Index d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> dans la collection.</param>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <summary>Obtient ou définit la chaîne de connexion à l'index spécifié dans la collection.</summary>
      <param name="index">Index d'un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> au niveau de l’index spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Configuration.ConnectionStringSettings" /> portant le nom spécifié dans la collection.</summary>
      <param name="name">Nom d’un objet <see cref="T:System.Configuration.ConnectionStringSettings" /> de la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.ConnectionStringSettings" /> avec le nom spécifié ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.ConnectionStringsSection">
      <summary>Fournit l’accès par programmation à la section des chaînes de connexion du fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.ConnectionStringsSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ConnectionStringsSection" />.</summary>
    </member>
    <member name="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <summary>Obtient une collection <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> d’objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</summary>
      <returns>Collection <see cref="T:System.Configuration.ConnectionStringSettingsCollection" /> d'objets <see cref="T:System.Configuration.ConnectionStringSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ContextInformation">
      <summary>Encapsule les informations de contexte qui sont associées à un objet <see cref="T:System.Configuration.ConfigurationElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <summary>Fournit un objet contenant des informations de section de configuration en fonction du nom de section spécifié.</summary>
      <param name="sectionName">Nom de la section de configuration.</param>
      <returns>Objet contenant la section spécifiée dans la configuration.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.HostingContext">
      <summary>Obtient le contexte de l'environnement dans lequel la propriété de configuration est évaluée.</summary>
      <returns>Objet spécifiant l'environnement dans lequel la propriété de configuration est évaluée.</returns>
    </member>
    <member name="P:System.Configuration.ContextInformation.IsMachineLevel">
      <summary>Obtient une valeur spécifiant si la propriété de configuration est évaluée au niveau de la configuration de l'ordinateur.</summary>
      <returns>
        <see langword="true" /> si la propriété de configuration est évaluée au niveau de la configuration de l'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.DefaultSection">
      <summary>Représente un gestionnaire de section de configuration de base qui expose la partie XML de la section de configuration pour l’accès en lecture et en écriture.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DefaultSection" />.</summary>
    </member>
    <member name="T:System.Configuration.DefaultSettingValueAttribute">
      <summary>Spécifie la valeur par défaut d’une propriété de paramètre d’application.</summary>
    </member>
    <member name="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.DefaultSettingValueAttribute" />.</summary>
      <param name="value">
        <see cref="T:System.String" /> représentant la valeur par défaut de la propriété.</param>
    </member>
    <member name="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <summary>Obtient la valeur par défaut pour la propriété de paramètres d’application.</summary>
      <returns>
        <see cref="T:System.String" /> représentant la valeur par défaut de la propriété.</returns>
    </member>
    <member name="T:System.Configuration.DefaultValidator">
      <summary>Fournit la validation d’un objet. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DefaultValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <summary>Détermine si un objet peut être validé, en fonction du type.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> pour tous les types en cours de validation.</returns>
    </member>
    <member name="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur de l’objet.</param>
    </member>
    <member name="T:System.Configuration.DictionarySectionHandler">
      <summary>Fournit les informations de configuration des paires clé/valeur d’une section de configuration.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DictionarySectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent">Objet parent.</param>
      <param name="context">Objet de contexte de configuration.</param>
      <param name="section">Nœud XML de section.</param>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <summary>Obtient le nom de l’attribut XML à utiliser comme clé dans une paire clé/valeur.</summary>
      <returns>Valeur de chaîne contenant le nom de l'attribut clé.</returns>
    </member>
    <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <summary>Obtient le nom de l’attribut XML à utiliser comme valeur dans une paire clé/valeur.</summary>
      <returns>Valeur de chaîne contenant le nom de l'attribut valeur.</returns>
    </member>
    <member name="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <summary>Fournit un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> qui utilise l’API de protection des données Windows (DPAPI) pour chiffrer et déchiffrer des données de configuration.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Déchiffre l'objet <see cref="T:System.Xml.XmlNode" /> passé.</summary>
      <param name="encryptedNode">Objet <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="encryptedNode" /> n'a pas de <see cref="P:System.Xml.XmlNode.Name" /> ayant la valeur "EncryptedData" et de <see cref="T:System.Xml.XmlNodeType" /> ayant la valeur <see cref="F:System.Xml.XmlNodeType.Element" />.  
  
- ou - 
 <paramref name="encryptedNode" /> n'a pas de nœud enfant nommé "CipherData" ayant un nœud enfant nommé "CipherValue".  
  
- ou - 
Le nœud enfant nommé "CipherData" est un nœud vide.</exception>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> déchiffré.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Chiffre l'objet <see cref="T:System.Xml.XmlNode" /> passé.</summary>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> chiffré.</returns>
    </member>
    <member name="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise le fournisseur avec les paramètres par défaut.</summary>
      <param name="name">Nom du fournisseur à utiliser pour l'objet.</param>
      <param name="configurationValues">Collection <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valeurs à utiliser lors de l'initialisation de l'objet.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> contient un paramètre de configuration non reconnu.</exception>
    </member>
    <member name="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> utilise la protection spécifique à l'ordinateur ou spécifique au compte d'utilisateur.</summary>
      <returns>
        <see langword="true" /> si le <see cref="T:System.Configuration.DpapiProtectedConfigurationProvider" /> utilise la protection spécifique à l'ordinateur ; <see langword="false" /> s'il utilise la protection spécifique au compte d'utilisateur.</returns>
    </member>
    <member name="T:System.Configuration.ElementInformation">
      <summary>Contient des méta-informations sur un élément individuel dans la configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.ElementInformation.Errors">
      <summary>Obtient les erreurs pour l’élément et les sous-éléments associés.</summary>
      <returns>Collection contenant les erreurs pour l'élément et les sous-éléments associés.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsCollection">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est une collection <see cref="T:System.Configuration.ConfigurationElementCollection" />.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est une collection <see cref="T:System.Configuration.ConfigurationElementCollection" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsLocked">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé ne peut pas être modifié.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé ne peut pas être modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.IsPresent">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé se trouve dans le fichier de configuration.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé se trouve dans le fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.LineNumber">
      <summary>Obtient le numéro de la ligne du fichier de configuration où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est défini.</summary>
      <returns>Numéro de la ligne du fichier de configuration où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé est défini.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Properties">
      <summary>Obtient une collection <see cref="T:System.Configuration.PropertyInformationCollection" /> des propriétés de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns>Collection <see cref="T:System.Configuration.PropertyInformationCollection" /> des propriétés de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Source">
      <summary>Obtient le fichier source d'où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé provient.</summary>
      <returns>Fichier source d'où l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé provient.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Type">
      <summary>Obtient le type de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns>Type de l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="P:System.Configuration.ElementInformation.Validator">
      <summary>Obtient l'objet utilisé pour valider l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</summary>
      <returns>Objet utilisé pour valider l'objet <see cref="T:System.Configuration.ConfigurationElement" /> associé.</returns>
    </member>
    <member name="T:System.Configuration.ExeConfigurationFileMap">
      <summary>Définit le mappage du fichier de configuration pour une application .exe. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</summary>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ExeConfigurationFileMap" /> en utilisant le nom du fichier de configuration de l'ordinateur spécifié.</summary>
      <param name="machineConfigFileName">Nom du fichier de configuration de l’ordinateur qui inclut le chemin physique complet (par exemple, <c>c:\Windows\Microsoft.NET\Framework\v2.0.50727\CONFIG\machine.config</c>).</param>
    </member>
    <member name="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <summary>Crée une copie de l’objet <see cref="T:System.Configuration.ExeConfigurationFileMap" /> existant.</summary>
      <returns>Objet <see cref="T:System.Configuration.ExeConfigurationFileMap" />.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <summary>Obtient ou définit le nom du fichier de configuration.</summary>
      <returns>Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <summary>Obtient ou définit le nom du fichier de configuration pour l'utilisateur local.</summary>
      <returns>Nom du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <summary>Obtient ou définit le nom du fichier de configuration pour l'utilisateur itinérant.</summary>
      <returns>Nom du fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.ExeContext">
      <summary>Gère le contexte de chemin de l’application actuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="P:System.Configuration.ExeContext.ExePath">
      <summary>Obtient le chemin actuel de l’application.</summary>
      <returns>Valeur de chaîne contenant le chemin d'accès actuel.</returns>
    </member>
    <member name="P:System.Configuration.ExeContext.UserLevel">
      <summary>Obtient un objet représentant le niveau du chemin de l’application actuelle.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationUserLevel" /> représentant le niveau du chemin d'accès de l'application en cours.</returns>
    </member>
    <member name="T:System.Configuration.GenericEnumConverter">
      <summary>Effectue une conversion entre une chaîne et un type énumération.</summary>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.GenericEnumConverter" />.</summary>
      <param name="typeEnum">Type d'énumération à convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="typeEnum" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un <see cref="T:System.String" /> en type <see cref="T:System.Enum" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> est null ou une chaîne vide ("").  
  
- ou - 
 <paramref name="data" /> démarre avec un caractère numérique.  
  
- ou - 
 <paramref name="data" /> inclut un espace blanc.</exception>
      <returns>Type <see cref="T:System.Enum" />que représente le paramètre <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un type <see cref="T:System.Enum" /> en valeur <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.IApplicationSettingsProvider">
      <summary>Définit des capacités étendues pour les fournisseurs de paramètres d'application basés sur les clients.</summary>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Retourne la valeur de la propriété de paramètres spécifiée pour la version antérieure de la même application.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> contenant la valeur du paramètre de propriété spécifié, tel que défini pour la dernière fois dans la version antérieure de l'application ; ou <see langword="null" /> si le paramètre est introuvable.</returns>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Restaure les valeurs par défaut des paramètres d'application associés à l'application spécifiée.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
    </member>
    <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Indique au fournisseur que l'application a été mise à niveau. Cela offre au fournisseur la possibilité de mettre à niveau ses paramètres stockés selon les besoins.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
    </member>
    <member name="T:System.Configuration.IConfigurationSectionHandler">
      <summary>Gère l’accès à certaines sections de configuration.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crée un gestionnaire de section de configuration.</summary>
      <param name="parent">Objet parent.</param>
      <param name="configContext">Objet de contexte de configuration.</param>
      <param name="section">Nœud XML de section.</param>
      <returns>Objet gestionnaire de section créé.</returns>
    </member>
    <member name="T:System.Configuration.IConfigurationSystem">
      <summary>Fournit des méthodes de configuration standard.</summary>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <summary>Obtient la configuration spécifiée.</summary>
      <param name="configKey">Clé de configuration.</param>
      <returns>Objet représentant la configuration.</returns>
    </member>
    <member name="M:System.Configuration.IConfigurationSystem.Init">
      <summary>Utilisé pour l’initialisation.</summary>
    </member>
    <member name="T:System.Configuration.IdnElement">
      <summary>Fournit le paramètre de configuration pour le traitement des noms de domaines internationaux (IDN, International Domain Name) dans la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IdnElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IdnElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IdnElement.Enabled">
      <summary>Obtient ou définit la valeur du paramètre de configuration <see cref="T:System.Configuration.IdnElement" />.</summary>
      <returns>
        <see cref="T:System.UriIdnScope" /> qui contient le paramètre de configuration actuel pour le traitement des IDN.</returns>
    </member>
    <member name="T:System.Configuration.IgnoreSection">
      <summary>Fournit une définition de type wrapper pour les sections de configuration qui ne sont pas gérées par les types <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IgnoreSection" />.</summary>
    </member>
    <member name="T:System.Configuration.IgnoreSectionHandler">
      <summary>Fournit une définition de gestionnaire de section héritée (legacy) pour les sections de configuration qui ne sont pas gérées par les types <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IgnoreSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crée un nouveau gestionnaire de configuration et ajoute l'objet de configuration spécifié à la collection de gestionnaires de section.</summary>
      <param name="parent">Paramètres de configuration d'une section de configuration parente correspondante.</param>
      <param name="configContext">Le chemin d'accès virtuel du gestionnaire de section de configuration calcule les valeurs de configuration. Normalement, ce paramètre est réservé et est <see langword="null" />.</param>
      <param name="section">
        <see cref="T:System.Xml.XmlNode" /> qui contient les informations de configuration à gérer. Permet d'accéder directement au contenu XML de la section de configuration.</param>
      <returns>Objet gestionnaire de configuration créé.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteIntConverter">
      <summary>Effectue une conversion entre une chaîne et la valeur infinie ou entière standard.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.InfiniteIntConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit <see cref="T:System.String" /> en <see cref="T:System.Int32" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="F:System.Int32.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.Int32" /> représentant la valeur entière du paramètre <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit <see cref="T:System.Int32" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>La <see cref="T:System.String" /> « infini » si <paramref name="value" /> est <see cref="F:System.Int32.MaxValue" /> ; sinon, la <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.InfiniteTimeSpanConverter">
      <summary>Effectue la conversion entre une chaîne et la valeur <see cref="T:System.TimeSpan" /> infinie standard.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.InfiniteTimeSpanConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> infinie ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">
        <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion des objets.</param>
      <param name="value">Valeur à convertir.</param>
      <param name="type">Type de conversion.</param>
      <returns>
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.IntegerValidator">
      <summary>Fournit la validation d'une valeur <see cref="T:System.Int32" />.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</param>
      <param name="maxValue">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Objet <see cref="T:System.Int32" /> qui spécifie la valeur minimale.</param>
      <param name="maxValue">Objet <see cref="T:System.Int32" /> qui spécifie la valeur maximale.</param>
      <param name="rangeIsExclusive">
        <see langword="true" /> pour spécifier que la plage de validations est exclusive. Incluse signifie que la valeur à valider doit être comprise dans la plage spécifiée ; exclusive signifie qu'elle doit être strictement inférieure (sous le minimum) ou strictement supérieure (au-dessus du maximum).</param>
    </member>
    <member name="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <param name="minValue">Objet <see cref="T:System.Int32" /> qui spécifie la longueur minimale de la valeur entière.</param>
      <param name="maxValue">Objet <see cref="T:System.Int32" /> qui spécifie la longueur maximale de la valeur entière.</param>
      <param name="rangeIsExclusive">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolution">Objet <see cref="T:System.Int32" /> qui spécifie une valeur qui doit être respectée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> est inférieur à <see langword="0" />.  
  
- ou - 
 <paramref name="minValue" /> est supérieur à <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <summary>Détermine si le type de l'objet peut être validé.</summary>
      <param name="type">Type de l'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une valeur <see cref="T:System.Int32" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur à valider.</param>
    </member>
    <member name="T:System.Configuration.IntegerValidatorAttribute">
      <summary>Ordonne de manière déclarative au .NET Framework d'effectuer la validation des entiers sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.IntegerValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <summary>Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage définie par les valeurs des propriétés <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" /> et <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <summary>Obtient ou définit la valeur maximale autorisée pour la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.IntegerValidatorAttribute.MinValue" />.</exception>
      <returns>Entier qui indique la valeur maximale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <summary>Obtient ou définit la valeur minimale autorisée pour la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />.</exception>
      <returns>Entier qui indique la valeur minimale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.IntegerValidator" />.</summary>
      <returns>Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.DelegatingConfigHost">
      <summary>Délégue tous les membres de l'interface <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> à une autre instance d'un hôte.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Internal.DelegatingConfigHost" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Crée un nouveau contexte de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationSubPath">Chaîne représentant un sous-chemin d'emplacement.</param>
      <returns>
        <see cref="T:System.Object" /> représentant un nouveau contexte de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Crée un contexte de configuration déconseillé.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see cref="T:System.Object" /> représentant un contexte de configuration déconseillé.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Déchiffre une section de configuration chiffrée.</summary>
      <param name="encryptedXml">Section chiffrée d'un fichier de configuration.</param>
      <param name="protectionProvider">Objet contenant les fournisseurs qui chiffrent et déchiffrent les données de configuration protégées.</param>
      <param name="protectedConfigSection">Objet qui fournit un accès programmatique à la section de configuration <c>configProtectedData</c>.</param>
      <returns>Chaîne représentant une section de configuration déchiffrée.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.DeleteStream(System.String)">
      <summary>Supprime l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Chiffre une section d'un objet de configuration.</summary>
      <param name="clearTextXml">Section de la configuration qui n'est pas chiffrée.</param>
      <param name="protectionProvider">Objet contenant les fournisseurs qui chiffrent et déchiffrent les données de configuration protégées</param>
      <param name="protectedConfigSection">Objet qui fournit un accès programmatique à la section de configuration <c>configProtectedData</c>.</param>
      <returns>Chaîne représentant une section chiffrée de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Retourne un chemin d'accès de configuration basé sur un sous-chemin d'emplacement.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationSubPath">Chaîne représentant un sous-chemin d'emplacement.</param>
      <returns>Chaîne représentant un chemin d'accès de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Retourne un <see cref="T:System.Type" /> représentant le type de la configuration.</summary>
      <param name="typeName">Chaîne représentant le type de configuration.</param>
      <param name="throwOnError">
        <see langword="true" /> si une exception doit être levée en cas d'erreur ; <see langword="false" /> si une exception ne doit pas être levée en cas d'erreur.</param>
      <returns>
        <see cref="T:System.Type" /> représentant le type de la configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetConfigTypeName(System.Type)">
      <summary>Retourne une chaîne représentant le nom de type de l'objet de configuration.</summary>
      <param name="t">Objet <see cref="T:System.Type" />.</param>
      <returns>Chaîne représentant le nom de type de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Définit le jeu d'autorisations spécifié s'il est disponible dans l'objet hôte.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Objet <see cref="T:System.Security.PermissionSet" />.</param>
      <param name="isHostReady">
        <see langword="true" /> si l'hôte a terminé l'initialisation ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamName(System.String)">
      <summary>Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur une source de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="configSource">Chaîne représentant la source de configuration.</param>
      <returns>Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur une source de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.GetStreamVersion(System.String)">
      <summary>Retourne un objet <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> représentant la version d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns>Objet <see cref="P:System.Diagnostics.FileVersionInfo.FileVersion" /> représentant la version d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Impersonate">
      <summary>Demande à l'hôte d'effectuer un emprunt d'identité et retourne un objet <see cref="T:System.IDisposable" /> requis en interne par le .NET Framework.</summary>
      <returns>Valeur <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initialise l'hôte de configuration.</summary>
      <param name="configRoot">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitParams">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initialise l'hôte pour la configuration.</summary>
      <param name="locationSubPath">Chaîne représentant un sous-chemin d'emplacement (passé par référence).</param>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="locationConfigPath">Chemin d'accès de configuration de l'emplacement.</param>
      <param name="configRoot">Élément racine de configuration.</param>
      <param name="hostInitConfigurationParams">Objet paramètre représentant les paramètres utilisés pour initialiser l'hôte.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsAboveApplication(System.String)">
      <summary>Retourne une valeur indiquant si la configuration se trouve au-dessus de la configuration de l'application dans la hiérarchie de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si la configuration se trouve au-dessus de la configuration de l'application dans la hiérarchie de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Retourne une valeur indiquant si un enregistrement de configuration est requis pour l'initialisation de la configuration d'hôte.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si un enregistrement de configuration est requis pour l'initialisation de la configuration d'hôte ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Restreint ou autorise des définitions dans la configuration d'hôte.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="allowDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>
        <see langword="true" /> si l'autorisation ou la restriction des définitions dans la configuration d'hôte ont réussi ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFile(System.String)">
      <summary>Retourne une valeur indiquant si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Retourne une valeur indiquant si une section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> si la section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Retourne une valeur indiquant si l'initialisation d'un objet de configuration est considérée comme retardée.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> si l'initialisation d'un objet de configuration est considérée comme retardée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsLocationApplicable(System.String)">
      <summary>Retourne une valeur indiquant si l'objet de configuration prend en charge une balise d'emplacement.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si l'objet de configuration prend en charge une balise d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsSecondaryRoot(System.String)">
      <summary>Retourne une valeur indiquant si un chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Retourne une valeur indiquant si le chemin d'accès de configuration est approuvé.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès de configuration est approuvé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns>Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns>Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> afin d'écrire dans un fichier de configuration ou dans un fichier temporaire utilisé pour générer un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="templateStreamName">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> (passé par référence).</param>
      <returns>Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> pour écrire dans un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="templateStreamName">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration (passé par référence).</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns>Objet spécifié par le paramètre <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Retourne une valeur indiquant si le fichier de configuration peut être entièrement lu par un objet <see cref="T:System.IO.Stream" /> désigné.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le fichier de configuration peut être entièrement lu par l'objet <see cref="T:System.IO.Stream" /> désigné par <paramref name="streamName" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de lire une section désignée de son fichier de configuration associé.</summary>
      <param name="sectionGroupName">Chaîne représentant le nom d'un groupe de sections dans le fichier de configuration.</param>
      <param name="sectionName">Chaîne représentant le nom d'une section dans le fichier de configuration.</param>
      <returns>
        <see langword="true" /> si une section du fichier de configuration désignée par les paramètres <paramref name="sectionGroupName" /> et <paramref name="sectionName" /> peut être lue par un objet <see cref="T:System.IO.Stream" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RefreshConfigPaths">
      <summary>Appelle la méthode de l’hôte délégué qui actualise les chemins de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indique qu'un nouvel enregistrement de configuration requiert une initialisation complète.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Commande l'hôte de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="callback">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> devant recevoir les données retournées représentant les modifications dans le fichier de configuration.</param>
      <returns>Instance de <see cref="T:System.Object" /> contenant les paramètres de configuration modifiés.</returns>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Commande l'objet hôte de cesser de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="callback">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Vérifie qu'une définition de configuration est autorisée pour un enregistrement de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <param name="allowDefinition">Objet <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /></param>
      <param name="errorInfo">Objet <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indique que les écritures dans le fichier de configuration sont achevées.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="success">
        <see langword="true" /> si l'écriture dans le fichier de configuration a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.DelegatingConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indique que les écritures dans le fichier de configuration sont achevées et spécifie si des autorisations doivent être déclarées.</summary>
      <param name="streamName">Nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur un fichier de configuration.</param>
      <param name="success">
        <see langword="true" /> pour indiquer que l'écriture a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasLocalConfig">
      <summary>Détermine si l’hôte délégué a une configuration locale.</summary>
      <returns>
        <see langword="true" /> Si l’instance actuelle a une configuration locale ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.HasRoamingConfig">
      <summary>Détermine si l’hôte délégué a une configuration itinérante.</summary>
      <returns>
        <see langword="true" /> Si l’instance actuelle a une configuration d’itinérance ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.Host">
      <summary>Obtient ou définit l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp">
      <summary>Détermine si le fichier de configuration de l’application provient d’un URI non local (autrement dit, <c>http://</c>) ou s’il s’agit d’un fichier local.</summary>
      <returns>
        <see langword="true" /> Si les sections de l’hôte délégué appartiennent à <c>System.net</c> et que le fichier de configuration de l’application est téléchargé via http à l’aide de <see cref="T:System.Net.WebClient" /> ; sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.IsRemote">
      <summary>Obtient une valeur indiquant si la configuration est distante.</summary>
      <returns>
        <see langword="true" /> si la configuration est distante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsChangeNotifications">
      <summary>Obtient une valeur indiquant si la configuration d'hôte prend en charge les notifications de modifications.</summary>
      <returns>
        <see langword="true" /> si l'hôte prend en charge les notifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsLocation">
      <summary>Obtient une valeur indiquant si la configuration d'hôte prend en charge les balises d'emplacement.</summary>
      <returns>
        <see langword="true" /> si l'hôte prend en charge les balises d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsPath">
      <summary>Obtient une valeur indiquant si la configuration d'hôte prend en charge les chemins d'accès.</summary>
      <returns>
        <see langword="true" /> si la configuration d'hôte prend en charge les chemins d'accès ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.DelegatingConfigHost.SupportsRefresh">
      <summary>Obtient une valeur indiquant si la configuration d'hôte prend en charge l'actualisation.</summary>
      <returns>
        <see langword="true" /> si la configuration d'hôte prend en charge l'actualisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigErrorInfo">
      <summary>Définit une interface utilisée par le .NET Framework pour prendre en charge la création d'enregistrements de configuration d'erreur.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
      <summary>Obtient une chaîne spécifiant le nom de fichier associé aux détails de configuration.</summary>
      <returns>Chaîne spécifiant un nom de fichier.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
      <summary>Obtient un entier spécifiant le numéro de ligne associé aux détails de configuration.</summary>
      <returns>Entier spécifiant un numéro de ligne.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigSystem">
      <summary>Définit une interface utilisée par le .NET Framework pour prendre en charge l'initialisation de propriétés de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigSystem.Init(System.Type,System.Object[])">
      <summary>Initialise un objet de configuration.</summary>
      <param name="typeConfigHost">Type de l'hôte de configuration.</param>
      <param name="hostInitParams">Tableau des paramètres de l'hôte de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Host">
      <summary>Obtient l'hôte de configuration.</summary>
      <returns>Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> qui est utilisé par le .NET Framework pour initialiser les propriétés de configuration de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigSystem.Root">
      <summary>Obtient la racine de la hiérarchie de configuration.</summary>
      <returns>Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerHelper">
      <summary>Définit une interface utilisée par le .NET Framework pour prendre en charge la gestion de la configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IConfigurationManagerHelper.EnsureNetConfigLoaded">
      <summary>Garantit que la configuration réseau est chargée.</summary>
    </member>
    <member name="T:System.Configuration.Internal.IConfigurationManagerInternal">
      <summary>Définit une interface utilisée par le .NET Framework pour initialiser des propriétés de configuration.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ApplicationConfigUri">
      <summary>Obtient le nom de fichier de configuration associé au chemin d'accès de l'application.</summary>
      <returns>Valeur de chaîne représentant un nom de fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigDirectory">
      <summary>Obtient le répertoire de configuration local de l'application en fonction de l'assembly d'entrée.</summary>
      <returns>Chaîne représentant le répertoire de configuration local.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeLocalConfigPath">
      <summary>Obtient le chemin d'accès de configuration local de l'application en fonction de l'assembly d'entrée.</summary>
      <returns>Valeur de chaîne représentant le chemin d'accès de configuration local de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductName">
      <summary>Obtient le nom de produit de l'application en fonction de l'assembly d'entrée.</summary>
      <returns>Valeur de chaîne représentant le nom de produit de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeProductVersion">
      <summary>Obtient la version de produit de l'application en fonction de l'assembly d'entrée.</summary>
      <returns>Valeur de chaîne représentant la version de produit de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigDirectory">
      <summary>Obtient le répertoire de configuration itinérant de l'application en fonction de l'assembly d'entrée.</summary>
      <returns>Valeur de chaîne représentant le répertoire de configuration itinérant de l'application.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.ExeRoamingConfigPath">
      <summary>Obtient le chemin d'accès de configuration de l'utilisateur itinérant basé sur l'assembly d'entrée de l'application.</summary>
      <returns>Valeur de chaîne représentant le chemin d'accès de configuration de l'utilisateur itinérant.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.MachineConfigPath">
      <summary>Obtient le chemin d'accès de configuration pour le fichier Machine.config.</summary>
      <returns>Valeur de chaîne représentant le chemin d'accès au fichier Machine.config.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SetConfigurationSystemInProgress">
      <summary>Obtient une valeur représentant l'état du système de configuration.</summary>
      <returns>
        <see langword="true" /> si le système de configuration est en cours d'initialisation ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.SupportsUserConfig">
      <summary>Obtient une valeur qui spécifie si les paramètres de configuration utilisateur sont pris en charge.</summary>
      <returns>
        <see langword="true" /> si le système de configuration prend en charge des paramètres de configuration utilisateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IConfigurationManagerInternal.UserConfigFilename">
      <summary>Obtient le nom du fichier utilisé pour stocker des paramètres de configuration utilisateur.</summary>
      <returns>Chaîne spécifiant le nom du fichier utilisée pour stocker la configuration utilisateur.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigClientHost">
      <summary>Définit les interfaces qui permettent à l'infrastructure .NET Framework interne de personnaliser la configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetExeConfigPath">
      <summary>Retourne le chemin d'accès au fichier de configuration de l'application.</summary>
      <returns>Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetLocalUserConfigPath">
      <summary>Retourne une chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur local connu.</summary>
      <returns>Chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur local connu.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.GetRoamingUserConfigPath">
      <summary>Retourne une chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur itinérant connu.</summary>
      <returns>Chaîne représentant le chemin d'accès au fichier de configuration de l'utilisateur itinérant connu.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsExeConfig(System.String)">
      <summary>Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration d'une application connue.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration de l'application ; <see langword="false" /> si une chaîne représentant un chemin d'accès de configuration n'est pas identique au chemin d'accès au fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsLocalUserConfig(System.String)">
      <summary>Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration pour l'utilisateur local actuellement connu.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration d'un utilisateur local connu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigClientHost.IsRoamingUserConfig(System.String)">
      <summary>Retourne une valeur indiquant si un chemin d'accès au fichier de configuration est identique au chemin d'accès au fichier de configuration pour l'utilisateur distant actuellement connu.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si une chaîne représentant un chemin d'accès de configuration est identique au chemin d'accès au fichier de configuration d'un utilisateur distant connu ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigConfigurationFactory">
      <summary>Définit les interfaces utilisées par l'API au moment du design interne pour créer un objet <see cref="T:System.Configuration.Configuration" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.Create(System.Type,System.Object[])">
      <summary>Crée et initialise un objet <see cref="T:System.Configuration.Configuration" />.</summary>
      <param name="typeConfigHost">
        <see cref="T:System.Type" /> de l'objet <see cref="T:System.Configuration.Configuration" /> à créer.</param>
      <param name="hostInitConfigurationParams">Tableau de paramètres de <see cref="T:System.Object" /> qui contient les paramètres à appliquer à l'objet <see cref="T:System.Configuration.Configuration" /> créé.</param>
      <returns>Objet <see cref="T:System.Configuration.Configuration" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigConfigurationFactory.NormalizeLocationSubPath(System.String,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Normalise un sous-chemin d'emplacement d'un chemin d'accès à un fichier de configuration.</summary>
      <param name="subPath">Chaîne représentant le chemin d'accès au fichier de configuration.</param>
      <param name="errorInfo">Instance de <see cref="T:System.Configuration.Internal.IConfigErrorInfo" /> ou <see langword="null" />.</param>
      <returns>Chaîne de sous-chemin normalisée.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigHost">
      <summary>Définit les interfaces utilisées par les structures .NET internes pour initialiser les propriétés de configuration de l'application.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)">
      <summary>Crée et retourne un objet de contexte pour un <see cref="T:System.Configuration.ConfigurationElement" /> d'une configuration de l'application.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationSubPath">Chaîne représentant un emplacement de sous-chemin de l'élément de configuration.</param>
      <returns>Objet de contexte pour un objet <see cref="T:System.Configuration.ConfigurationElement" /> d'une configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)">
      <summary>Crée et retourne un objet de contexte déconseillé de la configuration de l'application.</summary>
      <param name="configPath">Chaîne représentant un chemin d'accès à un fichier de configuration de l'application.</param>
      <returns>Objet de contexte déconseillé de la configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Déchiffre une section de configuration chiffrée et la retourne en tant que chaîne.</summary>
      <param name="encryptedXml">Chaîne XML chiffrée représentant une section de configuration.</param>
      <param name="protectionProvider">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Section de configuration déchiffrée en tant que chaîne.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)">
      <summary>Supprime l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration de l'application.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)">
      <summary>Chiffre une section de configuration et la retourne en tant que chaîne.</summary>
      <param name="clearTextXml">Chaîne XML représentant une section de configuration à chiffrer.</param>
      <param name="protectionProvider">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</param>
      <param name="protectedConfigSection">Objet <see cref="T:System.Configuration.ProtectedConfigurationSection" />.</param>
      <returns>Section de configuration chiffrée représentée en tant que chaîne.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)">
      <summary>Retourne le chemin d'accès complet à un fichier de configuration de l'application basé sur le sous-chemin d'emplacement.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationSubPath">Emplacement du sous-chemin du fichier de configuration.</param>
      <returns>Chaîne représentant le chemin d'accès complet à un fichier de configuration de l'application.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)">
      <summary>Retourne un objet <see cref="T:System.Type" /> représentant le type de l'objet de configuration.</summary>
      <param name="typeName">Nom de type</param>
      <param name="throwOnError">
        <see langword="true" /> pour lever une exception si une erreur se produit ; sinon, <see langword="false" /></param>
      <returns>Objet <see cref="T:System.Type" /> représentant le type de l'objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)">
      <summary>Retourne une chaîne représentant un nom de type de l'objet <see cref="T:System.Type" /> représentant le type de la configuration.</summary>
      <param name="t">Objet <see cref="T:System.Type" />.</param>
      <returns>Chaîne représentant le nom de type d'un objet <see cref="T:System.Type" /> représentant le type de la configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)">
      <summary>Associe la configuration à un objet <see cref="T:System.Security.PermissionSet" />.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <param name="permissionSet">Objet <see cref="T:System.Security.PermissionSet" /> à associer à la configuration.</param>
      <param name="isHostReady">
        <see langword="true" /> pour indiquer que l'hôte de configuration a terminé de générer des autorisations associées ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)">
      <summary>Retourne une chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>Chaîne représentant le nom de fichier de configuration associé aux tâches d'E/S <see cref="T:System.IO.Stream" /> sur le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)">
      <summary>Retourne une chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration distant.</summary>
      <param name="streamName">Chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</param>
      <param name="configSource">Chaîne représentant le chemin d'accès à un fichier de configuration distant.</param>
      <returns>Chaîne représentant le nom du fichier de configuration associé à l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)">
      <summary>Retourne la version de l'objet <see cref="T:System.IO.Stream" /> associé au fichier de configuration.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns>Version de l'objet <see cref="T:System.IO.Stream" /> associé au fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Impersonate">
      <summary>Commande à l'hôte d'emprunter l'identité et retourne un objet <see cref="T:System.IDisposable" /> requis par la structure .NET interne.</summary>
      <returns>Valeur <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initialise un hôte de configuration.</summary>
      <param name="configRoot">Objet racine de configuration.</param>
      <param name="hostInitParams">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
      <summary>Initialise un objet de configuration.</summary>
      <param name="locationSubPath">Emplacement du sous-chemin du fichier de configuration.</param>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="locationConfigPath">Chaîne représentant l'emplacement d'un chemin d'accès de configuration.</param>
      <param name="configRoot">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</param>
      <param name="hostInitConfigurationParams">Objet paramètre contenant les valeurs utilisées pour initialiser l'hôte de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)">
      <summary>Retourne une valeur indiquant si le fichier de configuration se trouve à un niveau plus élevé que la configuration de l'application dans la hiérarchie de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si le fichier de configuration se trouve à un niveau plus élevé que la configuration de l'application dans la hiérarchie de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)">
      <summary>Retourne une valeur indiquant si un enregistrement enfant est requis pour un chemin d'accès de configuration enfant.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si l'enregistrement enfant est requis pour un chemin d'accès de configuration enfant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)">
      <summary>Détermine si une définition de <see cref="T:System.Type" /> différente est autorisée pour un objet de configuration de l'application.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="allowDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowDefinition" />.</param>
      <param name="allowExeDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" />.</param>
      <returns>
        <see langword="true" /> si une définition de <see cref="T:System.Type" /> différente est autorisée pour un objet de configuration de l'application ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)">
      <summary>Retourne une valeur indiquant si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès utilisé par un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration est un chemin d'accès valide ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Retourne une valeur indiquant si une section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> si la section de configuration requiert un niveau de sécurité d'accès du code d'un niveau de confiance suffisant et ne permet pas à l'attribut <see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" /> de désactiver des demandes de liaison implicites ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Retourne une valeur indiquant si l'initialisation d'un objet de configuration est considérée comme retardée.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
      <returns>
        <see langword="true" /> si l'initialisation d'un objet de configuration est considérée comme retardée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)">
      <summary>Retourne une valeur indiquant si l'objet de configuration prend en charge une balise d'emplacement.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si l'objet de configuration prend en charge une balise d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)">
      <summary>Retourne une valeur indiquant si un chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès de configuration pointe vers un nœud de configuration dont le contenu doit être traité en tant que racine ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)">
      <summary>Retourne une valeur indiquant si le chemin d'accès de configuration est approuvé.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <returns>
        <see langword="true" /> si le chemin d'accès de configuration est approuvé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)">
      <summary>Ouvre un <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns>Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> pour lire un fichier de configuration.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns>Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> afin d'écrire dans un fichier de configuration ou dans un fichier temporaire utilisé pour générer un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="templateStreamName">Nom d'un objet <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" />.</param>
      <returns>Objet <see cref="T:System.IO.Stream" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)">
      <summary>Ouvre un objet <see cref="T:System.IO.Stream" /> pour écrire dans un fichier de configuration. Permet de désigner un objet <see cref="T:System.IO.Stream" /> comme modèle pour copier des attributs de fichier.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="templateStreamName">Nom d'un <see cref="T:System.IO.Stream" /> dont les attributs de fichier doivent être copiés comme modèle.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
      <returns>Objet spécifié par <paramref name="streamName" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)">
      <summary>Retourne une valeur qui indique si le fichier de configuration peut être entièrement lu par un objet <see cref="T:System.IO.Stream" /> désigné.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <returns>
        <see langword="true" /> si le fichier de configuration peut être entièrement lu par l'objet <see cref="T:System.IO.Stream" /> désigné par <paramref name="streamName" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)">
      <summary>Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de lire une section désignée de son fichier de configuration associé.</summary>
      <param name="sectionGroupName">Chaîne représentant le nom d'identification d'un groupe de sections du fichier de configuration.</param>
      <param name="sectionName">Chaîne représentant le nom d'identification d'une section du fichier de configuration.</param>
      <returns>
        <see langword="true" /> si une section du fichier de configuration désignée par <paramref name="sectionGroupName" /> et <paramref name="sectionName" /> peut être lue par un objet <see cref="T:System.IO.Stream" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)">
      <summary>Indique qu'un nouvel enregistrement de configuration requiert une initialisation complète.</summary>
      <param name="configRecord">Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Commande l'objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des modifications dans un fichier de configuration.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="callback">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" /> devant recevoir les données retournées représentant les modifications dans le fichier de configuration.</param>
      <returns>
        <see cref="T:System.Object" /> contenant les paramètres de configuration modifiés.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)">
      <summary>Demande à l’objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" /> d’arrêter de surveiller un objet <see cref="T:System.IO.Stream" /> associé en vue de détecter des changements dans un fichier de configuration.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="callback">Objet <see cref="T:System.Configuration.Internal.StreamChangeCallback" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)">
      <summary>Vérifie qu'une définition de configuration est autorisée pour un enregistrement de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès au fichier de configuration de l'application.</param>
      <param name="allowDefinition">Objet <see cref="P:System.Configuration.SectionInformation.AllowDefinition" />.</param>
      <param name="allowExeDefinition">Objet <see cref="T:System.Configuration.ConfigurationAllowExeDefinition" /></param>
      <param name="errorInfo">Objet <see cref="T:System.Configuration.Internal.IConfigErrorInfo" />.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)">
      <summary>Indique que les écritures dans le fichier de configuration sont achevées.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="success">
        <see langword="true" /> si l'écriture dans le fichier de configuration a été effectuée avec succès ; sinon, <see langword="false" />.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Indique que les écritures dans le fichier de configuration sont achevées et spécifie si des autorisations doivent être déclarées.</summary>
      <param name="streamName">Chaîne représentant le nom de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="success">
        <see langword="true" /> pour indiquer que l'écriture a été correctement effectuée ; sinon, <see langword="false" />.</param>
      <param name="writeContext">Contexte d'écriture de l'objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</param>
      <param name="assertPermissions">
        <see langword="true" /> pour déclarer des autorisations ; sinon, <see langword="false" />.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.IsRemote">
      <summary>Retourne une valeur indiquant si la configuration est distante.</summary>
      <returns>
        <see langword="true" /> si la configuration est distante ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications">
      <summary>Retourne une valeur indiquant si la configuration d'hôte prend en charge la notification de modifications.</summary>
      <returns>
        <see langword="true" /> si la configuration prend en charge la notification de modifications ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsLocation">
      <summary>Retourne une valeur indiquant si la configuration d'hôte prend en charge les balises d'emplacement.</summary>
      <returns>
        <see langword="true" /> si la configuration prend en charge les balises d'emplacement ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsPath">
      <summary>Retourne une valeur indiquant si la configuration d'hôte prend en charge les balises de chemin d'accès.</summary>
      <returns>
        <see langword="true" /> si la configuration prend en charge les balises de chemin d'accès ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigHost.SupportsRefresh">
      <summary>Retourne une valeur indiquant si la configuration d'hôte prend en charge l'actualisation de la configuration.</summary>
      <returns>
        <see langword="true" /> si la configuration prend en charge l'actualisation de la configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRecord">
      <summary>Définit les interfaces utilisées par les structures .NET internes pour prendre en charge la création de nouveaux enregistrements de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetLkgSection(System.String)">
      <summary>Retourne un objet représentant une section d'une configuration de la dernière configuration correcte connue.</summary>
      <param name="configKey">Chaîne représentant une clé d'une section de configuration.</param>
      <returns>Instance de <see cref="T:System.Object" /> représentant la section de la dernière configuration correcte connue spécifiée par <paramref name="configKey" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.GetSection(System.String)">
      <summary>Retourne une instance de <see cref="T:System.Object" /> représentant une section d'un fichier de configuration.</summary>
      <param name="configKey">Chaîne représentant une clé d'une section de configuration.</param>
      <returns>Instance de <see cref="T:System.Object" /> représentant une section d'un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.RefreshSection(System.String)">
      <summary>Entraîne la réinitialisation d'une section spécifiée de l'objet de configuration.</summary>
      <param name="configKey">Chaîne représentant une clé d'une section de configuration devant être actualisée.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.Remove">
      <summary>Supprime un enregistrement de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRecord.ThrowIfInitErrors">
      <summary>Accorde à l'objet de configuration l'autorisation de lever une exception si une erreur se produit pendant l'initialisation.</summary>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.ConfigPath">
      <summary>Obtient une chaîne représentant un chemin d'accès au fichier de configuration.</summary>
      <returns>Chaîne représentant un chemin d'accès au fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.HasInitErrors">
      <summary>Retourne une valeur indiquant si une erreur s'est produite lors de l'initialisation d'un objet de configuration.</summary>
      <returns>
        <see langword="true" /> si une erreur s'est produite lors de l'initialisation d'un objet de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRecord.StreamName">
      <summary>Retourne le nom d'un objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</summary>
      <returns>Chaîne représentant le nom d'un objet <see cref="T:System.IO.Stream" /> qui effectue les tâches d'E/S sur le fichier de configuration.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigRoot">
      <summary>Définit les interfaces utilisées par les structures .NET internes pour prendre en charge un objet racine de configuration.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigChanged" /> d'un objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved">
      <summary>Représente la méthode qui gère l'événement <see cref="E:System.Configuration.Internal.IInternalConfigRoot.ConfigRemoved" /> d'un objet <see cref="T:System.Configuration.Internal.IInternalConfigRoot" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetConfigRecord(System.String)">
      <summary>Retourne un objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant une configuration spécifiée par un chemin d'accès de configuration.</summary>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant une configuration spécifiée par <paramref name="configPath" />.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetSection(System.String,System.String)">
      <summary>Retourne un <see cref="T:System.Object" /> représentant les données dans une section d'un fichier de configuration.</summary>
      <param name="section">Chaîne représentant une section d'un fichier de configuration.</param>
      <param name="configPath">Chaîne représentant le chemin d'accès à un fichier de configuration.</param>
      <returns>
        <see cref="T:System.Object" /> représentant les données dans une section d'un fichier de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigPath(System.String)">
      <summary>Retourne une valeur représentant le chemin d'accès du fichier de l'ancêtre de configuration le plus proche qui possède des données de configuration.</summary>
      <param name="configPath">Chemin d'accès du fichier de configuration.</param>
      <returns>Chaîne représentant le chemin du fichier de l’ancêtre de configuration le plus proche qui a des données de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.GetUniqueConfigRecord(System.String)">
      <summary>Retourne un objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant un enregistrement de configuration unique pour un chemin d'accès de configuration donné.</summary>
      <param name="configPath">Chemin d'accès du fichier de configuration.</param>
      <returns>Objet <see cref="T:System.Configuration.Internal.IInternalConfigRecord" /> représentant un enregistrement de configuration unique pour un chemin d'accès de configuration donné.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.Init(System.Configuration.Internal.IInternalConfigHost,System.Boolean)">
      <summary>Initialise un objet de configuration.</summary>
      <param name="host">Objet <see cref="T:System.Configuration.Internal.IInternalConfigHost" />.</param>
      <param name="isDesignTime">
        <see langword="true" /> au moment du design ; <see langword="false" /> au moment de l'exécution.</param>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigRoot.RemoveConfig(System.String)">
      <summary>Recherche et supprime un enregistrement de configuration et tous ses enfants pour un chemin d'accès de configuration donné.</summary>
      <param name="configPath">Chemin d'accès du fichier de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigRoot.IsDesignTime">
      <summary>Retourne une valeur indiquant si la configuration est une configuration au moment du design.</summary>
      <returns>
        <see langword="true" /> si la configuration est une configuration au moment du design ; <see langword="false" /> si la configuration n'est pas une configuration au moment du design.</returns>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSettingsFactory">
      <summary>Définit une interface utilisée par le système de configuration pour définir la classe <see cref="T:System.Configuration.ConfigurationSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.CompleteInit">
      <summary>Indique que l'initialisation du système de configuration est terminée.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSettingsFactory.SetConfigurationSystem(System.Configuration.Internal.IInternalConfigSystem,System.Boolean)">
      <summary>Fournit au système de configuration des extensions et des paramètres de configuration hiérarchiques spécifiques à ASP.NET.</summary>
      <param name="internalConfigSystem">Objet <see cref="T:System.Configuration.Internal.IInternalConfigSystem" /> utilisé par la classe <see cref="T:System.Configuration.ConfigurationSettings" />.</param>
      <param name="initComplete">
        <see langword="true" /> si le processus d'initialisation du système de configuration est terminé ; sinon <see langword="false" />.</param>
    </member>
    <member name="T:System.Configuration.Internal.IInternalConfigSystem">
      <summary>Définit une interface utilisée par le .NET Framework pour initialiser des propriétés de configuration de l'application.</summary>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.GetSection(System.String)">
      <summary>Retourne l'objet de configuration en fonction de la clé spécifiée.</summary>
      <param name="configKey">Valeur de la clé de configuration.</param>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="M:System.Configuration.Internal.IInternalConfigSystem.RefreshConfig(System.String)">
      <summary>Actualise le système de configuration en fonction du nom de section spécifié.</summary>
      <param name="sectionName">Nom de la section de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.IInternalConfigSystem.SupportsUserConfig">
      <summary>Obtient une valeur indiquant si la configuration utilisateur est prise en charge.</summary>
      <returns>
        <see langword="true" /> si la configuration utilisateur est prise en charge ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventArgs">
      <summary>Définit une classe qui permet à l'infrastructure .NET Framework de spécifier des arguments d'événement pour les événements de configuration.</summary>
    </member>
    <member name="M:System.Configuration.Internal.InternalConfigEventArgs.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <param name="configPath">Chemin d'accès de configuration.</param>
    </member>
    <member name="P:System.Configuration.Internal.InternalConfigEventArgs.ConfigPath">
      <summary>Obtient ou définit le chemin d'accès de configuration lié à l'objet <see cref="T:System.Configuration.Internal.InternalConfigEventArgs" />.</summary>
      <returns>Valeur de chaîne spécifiant le chemin d'accès de configuration.</returns>
    </member>
    <member name="T:System.Configuration.Internal.InternalConfigEventHandler">
      <summary>Définit une classe utilisée par l'infrastructure .NET Framework pour prendre en charge des événements de configuration.</summary>
      <param name="sender">Objet source de l’événement.</param>
      <param name="e">Argument d'événement de configuration.</param>
    </member>
    <member name="T:System.Configuration.Internal.StreamChangeCallback">
      <summary>Représente une méthode que les hôtes doivent appeler lorsqu'un flux de données surveillé a changé.</summary>
      <param name="streamName">Nom de l'objet <see cref="T:System.IO.Stream" /> effectuant des tâches d'E/S sur le fichier de configuration.</param>
    </member>
    <member name="T:System.Configuration.IPersistComponentSettings">
      <summary>Définit les fonctionnalités standard pour les contrôles ou les bibliothèques qui stockent et récupèrent des paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <summary>Lit les paramètres d'application du contrôle dans leurs propriétés correspondantes et met à jour l'état du contrôle.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <summary>Restaure les valeurs par défaut des propriétés de paramètres d'application du contrôle.</summary>
    </member>
    <member name="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <summary>Rend persistantes les propriétés de paramètres d'application du contrôle.</summary>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <summary>Obtient ou définit une valeur indiquant si le contrôle doit rendre ses données de configuration automatiquement persistantes.</summary>
      <returns>
        <see langword="true" /> si le contrôle doit rendre son état automatiquement persistant ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <summary>Obtient ou définit la valeur de la clé de paramètres d'application pour l'instance actuelle du contrôle.</summary>
      <returns>
        <see cref="T:System.String" /> contenant la clé de paramètres pour l'instance actuelle du contrôle.</returns>
    </member>
    <member name="T:System.Configuration.IriParsingElement">
      <summary>Fournit le paramètre de configuration pour le traitement des identifiants de ressources internationaux (IRI, International Resource Identifier) dans la classe <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="M:System.Configuration.IriParsingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.IriParsingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.IriParsingElement.Enabled">
      <summary>Obtient ou définit la valeur du paramètre de configuration <see cref="T:System.Configuration.IriParsingElement" />.</summary>
      <returns>Booléen qui indique si le traitement des IRI (International Resource Identifier) est activé.</returns>
    </member>
    <member name="T:System.Configuration.ISettingsProviderService">
      <summary>Fournit une interface pour définir un autre fournisseur de paramètres d’application.</summary>
    </member>
    <member name="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <summary>Retourne le fournisseur de paramètres compatible avec la propriété de paramètres spécifiée.</summary>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> qui nécessite une sérialisation.</param>
      <returns>S’il existe, <see cref="T:System.Configuration.SettingsProvider" /> qui peut rendre persistante la propriété de paramètres spécifiée ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> à la collection en fonction des paramètres fournis.</summary>
      <param name="keyValue">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" />
      </param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> à la collection en fonction des paramètres fournis.</summary>
      <param name="key">Chaîne spécifiant la clé.</param>
      <param name="value">Chaîne spécifiant la valeur.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <summary>Efface la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <summary>En cas de substitution dans une classe dérivée, la méthode <see cref="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" /> crée un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> qui vient d'être créé.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Obtient la clé d'élément pour un élément de configuration spécifié en cas de substitution dans une classe dérivée.</summary>
      <param name="element">
        <see cref="T:System.Configuration.KeyValueConfigurationElement" /> auquel la clé doit être retournée.</param>
      <returns>Objet qui fait office de clé pour le <see cref="T:System.Configuration.KeyValueConfigurationElement" /> spécifié.</returns>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <summary>Supprime un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> de la collection.</summary>
      <param name="key">Chaîne spécifiant la <paramref name="key" />.</param>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <summary>Obtient les clés de tous les éléments contenues dans la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" />.</summary>
      <returns>Tableau de chaînes.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> en fonction du paramètre fourni.</summary>
      <param name="key">Clé du <see cref="T:System.Configuration.KeyValueConfigurationElement" /> contenu dans la collection.</param>
      <returns>Élément de configuration ou <see langword="null" /> si la clé n'existe pas dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <summary>Obtient une collection de propriétés de configuration.</summary>
      <returns>Collection de propriétés de configuration.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <summary>Obtient une valeur indiquant si une tentative d'ajout d'un objet <see cref="T:System.Configuration.KeyValueConfigurationElement" /> dupliqué à la collection <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> provoquera la levée d'une exception.</summary>
      <returns>
        <see langword="true" /> si une tentative d'ajout d'un <see cref="T:System.Configuration.KeyValueConfigurationElement" /> dupliqué au <see cref="T:System.Configuration.KeyValueConfigurationCollection" /> provoquera la levée d'une exception ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.KeyValueConfigurationElement">
      <summary>Représente un élément de configuration qui contient une paire clé/valeur.</summary>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.KeyValueConfigurationElement" /> en fonction des paramètres fournis.</summary>
      <param name="key">Clé de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
      <param name="value">Valeur du <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.KeyValueConfigurationElement.Init">
      <summary>Rétablit l’état initial de l’objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Key">
      <summary>Obtient la clé de l’objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Clé de <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <summary>Obtient la collection de propriétés.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> de propriétés de l'élément.</returns>
    </member>
    <member name="P:System.Configuration.KeyValueConfigurationElement.Value">
      <summary>Obtient ou définit la valeur de l’objet <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</summary>
      <returns>Valeur du <see cref="T:System.Configuration.KeyValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.LocalFileSettingsProvider">
      <summary>Fournit la persistance pour les classes de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LocalFileSettingsProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Retourne la valeur de la propriété de paramètres nommée pour la version antérieure de la même application.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> qui décrit où est utilisée la propriété de paramètres d'application.</param>
      <param name="property">
        <see cref="T:System.Configuration.SettingsProperty" /> dont la valeur doit être retournée.</param>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValue" /> représentant le paramètre d'application s'il est trouvé ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Retourne la collection de valeurs de propriétés de définition pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise le fournisseur.</summary>
      <param name="name">Nom convivial du fournisseur.</param>
      <param name="values">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Restaure les valeurs par défaut de toutes les propriétés de paramètres d'application associées à l'application spécifiée.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="values">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  
  
 - ou -  
  
 Une défaillance générale s'est produite lors de l'enregistrement des paramètres dans le fichier de configuration.</exception>
    </member>
    <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Tentatives de migrer des paramètres de portée utilisateur antérieurs à partir d'une version antérieure de la même application.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="properties">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Un paramètre de portée utilisateur a été rencontré, mais la configuration actuelle prend en charge uniquement les paramètres de portée application.  
  
 - ou -  
  
 Impossible d'accéder à la version antérieure du fichier de configuration.</exception>
    </member>
    <member name="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <summary>Obtient ou définit le nom de l'application en cours d'exécution.</summary>
      <returns>Chaîne qui contient le nom complet de l'application</returns>
    </member>
    <member name="T:System.Configuration.LongValidator">
      <summary>Fournit la validation d'une valeur <see cref="T:System.Int64" />.</summary>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
      <param name="rangeIsExclusive">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
    </member>
    <member name="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <param name="minValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur minimale de la valeur <see langword="long" />.</param>
      <param name="maxValue">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur maximale de la valeur <see langword="long" />.</param>
      <param name="rangeIsExclusive">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolution">Valeur <see cref="T:System.Int64" /> spécifiant une valeur spécifique qui doit être respectée.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolution" /> est inférieur ou égal à <see langword="0" />.  
  
- ou - 
 <paramref name="maxValue" /> est inférieur à <paramref name="minValue" />.</exception>
    </member>
    <member name="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <summary>Détermine si le type de l'objet peut être validé.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une valeur <see cref="T:System.Int64" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.LongValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.LongValidatorAttribute">
      <summary>Ordonne de manière déclarative au .NET Framework d'effectuer la validation des entiers longs sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.LongValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.LongValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <summary>Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage définie par les valeurs des propriétés <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" /> et <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</summary>
      <returns>
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <summary>Obtient ou définit la valeur maximale autorisée pour la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.LongValidatorAttribute.MinValue" />.</exception>
      <returns>Entier long qui indique la valeur maximale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.MinValue">
      <summary>Obtient ou définit la valeur minimale autorisée pour la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.LongValidatorAttribute.MaxValue" />.</exception>
      <returns>Entier qui indique la valeur minimale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.LongValidator" />.</summary>
      <returns>Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.NameValueConfigurationElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> à la collection.</summary>
      <param name="nameValue">Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <summary>Efface la <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <summary>Supprime un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la collection selon le paramètre fourni.</summary>
      <param name="nameValue">Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <summary>Supprime un objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> de la collection selon le paramètre fourni.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <summary>Obtient les clés de tous les éléments contenus dans <see cref="T:System.Configuration.NameValueConfigurationCollection" />.</summary>
      <returns>Tableau de chaînes.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" /> selon le paramètre fourni.</summary>
      <param name="name">Nom du <see cref="T:System.Configuration.NameValueConfigurationElement" /> contenu dans la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueConfigurationElement">
      <summary>Élément de configuration qui contient un nom <see cref="T:System.String" /> et une valeur <see cref="T:System.String" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueConfigurationElement" /> en fonction des paramètres fournis.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
      <param name="value">Valeur de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</param>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Name">
      <summary>Obtient le nom de l’objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="P:System.Configuration.NameValueConfigurationElement.Value">
      <summary>Obtient ou définit la valeur de l’objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</summary>
      <returns>Valeur de l'objet <see cref="T:System.Configuration.NameValueConfigurationElement" />.</returns>
    </member>
    <member name="T:System.Configuration.NameValueFileSectionHandler">
      <summary>Permet d'accéder à un fichier de configuration. Ce type prend en charge l'infrastructure de la configuration .NET Framework et n'est pas destiné à être directement utilisé à partir de votre code.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueFileSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent">Objet parent.</param>
      <param name="configContext">Objet de contexte de configuration.</param>
      <param name="section">Nœud XML de section.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le fichier spécifié dans l'attribut de <see langword="file" /> de <paramref name="section" /> existe mais ne peut pas être chargé.  
  
- ou - 
L'attribut <see langword="name" /> de <paramref name="section" /> ne correspond pas à l'élément racine du fichier spécifié dans l'attribut de <see langword="file" />.</exception>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="T:System.Configuration.NameValueSectionHandler">
      <summary>Fournit les informations de configuration des paires nom/valeur d’une section de configuration.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NameValueSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Crée un gestionnaire de configuration et l’ajoute à la collection de gestionnaires de section en fonction des paramètres spécifiés.</summary>
      <param name="parent">Objet parent.</param>
      <param name="context">Objet de contexte de configuration.</param>
      <param name="section">Nœud XML de section.</param>
      <returns>Objet de configuration.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <summary>Obtient le nom de l’attribut XML à utiliser comme clé dans une paire clé/valeur.</summary>
      <returns>Valeur <see cref="T:System.String" /> contenant le nom de l'attribut clé.</returns>
    </member>
    <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <summary>Obtient le nom de l’attribut XML à utiliser comme valeur dans une paire clé/valeur.</summary>
      <returns>Valeur <see cref="T:System.String" /> contenant le nom de l'attribut value.</returns>
    </member>
    <member name="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <summary>Spécifie qu’un fournisseur de paramètres doit désactiver toute logique appelée quand une mise à niveau d’application est détectée. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.OverrideMode">
      <summary>Spécifie le comportement de substitution d'un élément de configuration pour les éléments de configuration situés dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Allow">
      <summary>Le paramètre de configuration de l'élément ou du groupe peut être substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Deny">
      <summary>Le paramètre de configuration de l'élément ou du groupe ne peut pas être substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants.</summary>
    </member>
    <member name="F:System.Configuration.OverrideMode.Inherit">
      <summary>Le paramètre de configuration de l'élément ou du groupe sera substitué par les paramètres de configuration qui se trouvent dans les répertoires enfants si un élément parent de l'élément ou du groupe de configuration actuel en a donné l'autorisation explicite. L'autorisation de substituer est spécifiée à l'aide de l'attribut <see langword="OverrideMode" />.</summary>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidator">
      <summary>Fournit la validation d’un objet <see cref="T:System.TimeSpan" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <summary>Détermine si le type d’objet peut être validé.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à un objet <see cref="T:System.TimeSpan" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur d’un objet.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> ne peut pas être résolu en tant que valeur <see cref="T:System.TimeSpan" /> positive.</exception>
    </member>
    <member name="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <summary>Demande de façon déclarative au .NET Framework d’effectuer la validation temporelle sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.PositiveTimeSpanValidator" />.</summary>
      <returns>Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformation">
      <summary>Contient des méta-informations sur une propriété individuelle de la configuration. Ce type ne peut pas être hérité.</summary>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Converter">
      <summary>Obtient l'objet <see cref="T:System.ComponentModel.TypeConverter" /> associé à l'attribut de configuration.</summary>
      <returns>Objet <see cref="T:System.ComponentModel.TypeConverter" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.DefaultValue">
      <summary>Obtient un objet contenant la valeur par défaut associée à un attribut de configuration.</summary>
      <returns>Objet contenant la valeur par défaut de l'attribut de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Description">
      <summary>Obtient la description de l'objet qui correspond à un attribut de configuration.</summary>
      <returns>Description de l'attribut de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsKey">
      <summary>Obtient une valeur spécifiant si l'attribut de configuration est une clé.</summary>
      <returns>
        <see langword="true" /> si l'attribut de configuration est une clé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsLocked">
      <summary>Obtient une valeur spécifiant si l'attribut de configuration est verrouillé.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> est verrouillé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsModified">
      <summary>Obtient une valeur indiquant si l'attribut de configuration a été modifié.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> a été modifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.IsRequired">
      <summary>Obtient une valeur spécifiant si l'attribut de configuration est requis.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.PropertyInformation" /> est requis ; sinon <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.LineNumber">
      <summary>Obtient le numéro de ligne dans le fichier de configuration associé à l'attribut de configuration.</summary>
      <returns>Numéro de ligne du fichier de configuration.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Name">
      <summary>Obtient le nom de l'objet qui correspond à un attribut de configuration.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Source">
      <summary>Obtient le fichier source qui correspond à un attribut de configuration.</summary>
      <returns>Fichier source de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Type">
      <summary>Obtient le <see cref="T:System.Type" /> de l'objet qui correspond à un attribut de configuration.</summary>
      <returns>Objet <see cref="T:System.Type" /> de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Validator">
      <summary>Obtient un objet <see cref="T:System.Configuration.ConfigurationValidatorBase" /> associé à l'attribut de configuration.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.Value">
      <summary>Obtient ou définit un objet contenant la valeur associée à un attribut de configuration.</summary>
      <returns>Objet contenant la valeur de l'objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="P:System.Configuration.PropertyInformation.ValueOrigin">
      <summary>Obtient un objet <see cref="T:System.Configuration.PropertyValueOrigin" /> associé à l'attribut de configuration.</summary>
      <returns>Objet <see cref="T:System.Configuration.PropertyValueOrigin" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyInformationCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.PropertyInformation" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <summary>Copie la totalité de la collection <see cref="T:System.Configuration.PropertyInformationCollection" /> dans un <see cref="T:System.Array" /> compatible unidimensionnel, à partir de l'index spécifié du tableau cible.</summary>
      <param name="array">
        <see cref="T:System.Array" /> unidimensionnel constituant la destination des éléments copiés à partir de la collection <see cref="T:System.Configuration.PropertyInformationCollection" />. <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
      <param name="index">Index de base zéro dans l'<paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur de la propriété <see cref="P:System.Array.Length" /> de <paramref name="array" /> est inférieure à <see cref="P:System.Collections.Specialized.NameObjectCollectionBase.Count" /> + <paramref name="index" />.</exception>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <summary>Obtient un objet <see cref="T:System.Collections.IEnumerator" />, qui est utilisé pour itérer au sein de cette collection <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui est utilisé pour itérer au sein de ce <see cref="T:System.Configuration.PropertyInformationCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires pour sérialiser l'instance de <see cref="T:System.Configuration.PropertyInformationCollection" />.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les informations nécessaires pour sérialiser l'instance <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient la source et la destination du flux sérialisé associé à l'instance du <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <summary>Obtient l'objet <see cref="T:System.Configuration.PropertyInformation" /> de la collection, à partir du nom de propriété spécifié.</summary>
      <param name="propertyName">Nom de l’attribut de configuration contenu dans l’objet <see cref="T:System.Configuration.PropertyInformationCollection" />.</param>
      <returns>Objet <see cref="T:System.Configuration.PropertyInformation" />.</returns>
    </member>
    <member name="T:System.Configuration.PropertyValueOrigin">
      <summary>Spécifie le niveau dans la hiérarchie de configuration d’où provient une valeur de propriété de configuration.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Default">
      <summary>La valeur de la propriété de configuration provient de la propriété <see cref="P:System.Configuration.ConfigurationProperty.DefaultValue" />.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.Inherited">
      <summary>La valeur de la propriété de configuration est héritée d’un niveau parent dans la configuration.</summary>
    </member>
    <member name="F:System.Configuration.PropertyValueOrigin.SetHere">
      <summary>La valeur de la propriété de configuration est définie au niveau actuel de la hiérarchie.</summary>
    </member>
    <member name="T:System.Configuration.ProtectedConfiguration">
      <summary>Permet d’accéder aux fournisseurs de configuration protégée pour le fichier de configuration de l’application actuelle.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <summary>Nom du fournisseur de protection des données.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <summary>Nom de la section de données protégées.</summary>
    </member>
    <member name="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <summary>Nom du fournisseur RSA.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <summary>Obtient le nom du fournisseur de configuration protégée par défaut.</summary>
      <returns>Nom du fournisseur de configuration protégée par défaut.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfiguration.Providers">
      <summary>Obtient une collection de fournisseurs de configuration protégée installés.</summary>
      <returns>Collection <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> d'objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> installés.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProvider">
      <summary>Classe de base permettant de créer des fournisseurs pour le chiffrement et le déchiffrement des données de configuration protégées.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Déchiffre l’objet <see cref="T:System.Xml.XmlNode" /> passé à partir d’un fichier de configuration.</summary>
      <param name="encryptedNode">Objet <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> contenant des données déchiffrées.</returns>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Chiffre l’objet <see cref="T:System.Xml.XmlNode" /> passé à partir d’un fichier de configuration.</summary>
      <param name="node">Objet <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> contenant des données chiffrées.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <summary>Fournit une collection d’objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationProviderCollection" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à la collection.</summary>
      <param name="provider">Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="provider" /> n’est pas un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" />.</exception>
      <exception cref="T:System.Configuration.ConfigurationException">L’objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> à ajouter existe déjà dans la collection.  
  
- ou - 
La collection est en lecture seule.</exception>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <summary>Obtient un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la collection portant le nom spécifié.</summary>
      <param name="name">Nom d’un objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> de la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> portant le nom spécifié, ou <see langword="null" /> s'il n'y a aucun objet portant ce nom.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedConfigurationSection">
      <summary>Fournit l’accès par programmation à la section de configuration <see langword="configProtectedData" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedConfigurationSection" /> en utilisant les paramètres par défaut.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <summary>Obtient ou définit le nom de l’objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> par défaut dans la propriété de collection <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> par défaut dans la propriété de la collection <see cref="P:System.Configuration.ProtectedConfigurationSection.Providers" />.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <summary>Obtient une collection <see cref="T:System.Configuration.ProviderSettingsCollection" /> de tous les objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> dans tous les fichiers de configuration concernés.</summary>
      <returns>Collection <see cref="T:System.Configuration.ProviderSettingsCollection" /> de tous les objets <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> dans tous les fichiers de configuration concernés.</returns>
    </member>
    <member name="T:System.Configuration.ProtectedProviderSettings">
      <summary>Représente un groupe d’éléments de configuration qui configurent les fournisseurs pour la section de configuration <see langword="&lt;configProtectedData&gt;" />.</summary>
    </member>
    <member name="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProtectedProviderSettings" />.</summary>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Properties">
      <summary>Obtient une collection <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> qui représente les propriétés des fournisseurs des données de configuration protégées.</summary>
      <returns>
        <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> qui représente les propriétés des fournisseurs des données de configuration protégées.</returns>
    </member>
    <member name="P:System.Configuration.ProtectedProviderSettings.Providers">
      <summary>Obtient une collection d’objets <see cref="T:System.Configuration.ProviderSettings" /> qui représentent les propriétés des fournisseurs des données de configuration protégées.</summary>
      <returns>Collection d'objets <see cref="T:System.Configuration.ProviderSettings" /> qui représentent les propriétés des fournisseurs des données de configuration protégées.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderBase">
      <summary>Fournit une implémentation de base pour le modèle de fournisseur extensible.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise le générateur de configuration.</summary>
      <param name="name">Nom convivial du fournisseur.</param>
      <param name="config">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
      <exception cref="T:System.ArgumentNullException">Le nom du fournisseur est <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longueur du nom du fournisseur est égale à zéro.</exception>
      <exception cref="T:System.InvalidOperationException">Tentative d’appel de <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> sur un fournisseur après que celui-ci a déjà été initialisé.</exception>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Description">
      <summary>Obtient une description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</summary>
      <returns>Description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderBase.Name">
      <summary>Obtient le nom convivial qui référence le fournisseur au cours de la configuration.</summary>
      <returns>Nom convivial qui référence le fournisseur au cours de la configuration.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderCollection">
      <summary>Représente une collection des objets fournisseur qui héritent de <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Provider.ProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Ajoute un fournisseur à la collection.</summary>
      <param name="provider">Fournisseur à ajouter.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Le <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> du <paramref name="provider" /> est <see langword="null" />.  
  
- ou - 
La longueur du <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> de <paramref name="provider" /> est inférieure à 1.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Clear">
      <summary>Supprime tous les éléments de la collection.</summary>
      <exception cref="T:System.NotSupportedException">La collection est définie en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)">
      <summary>Copie le contenu de la collection dans le tableau donné en commençant à l'index spécifié.</summary>
      <param name="array">Tableau dans lequel copier les éléments de la collection.</param>
      <param name="index">Index de l'élément de collection à partir duquel commencer la copie.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.GetEnumerator">
      <summary>Retourne un objet qui implémente l'interface <see cref="T:System.Collections.IEnumerator" /> à itérer au sein de la collection.</summary>
      <returns>Objet qui implémente <see cref="T:System.Collections.IEnumerator" /> à itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)">
      <summary>Supprime un fournisseur de la collection.</summary>
      <param name="name">Nom du fournisseur à supprimer.</param>
      <exception cref="T:System.NotSupportedException">La collection a été définie en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.SetReadOnly">
      <summary>Met la collection en lecture seule.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copie les éléments d'<see cref="T:System.Configuration.Provider.ProviderCollection" /> dans un tableau, en commençant au niveau d'un index de tableau particulier.</summary>
      <param name="array">Tableau dans lequel copier les éléments de la collection.</param>
      <param name="index">Index du tableau dans lequel commencer la copie des instances de fournisseur de la collection.</param>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Count">
      <summary>Obtient le nombre de fournisseurs contenus dans la collection.</summary>
      <returns>Nombre de fournisseurs contenus dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.IsSynchronized">
      <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="false" /> dans tous les cas.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.Item(System.String)">
      <summary>Obtient le fournisseur avec le nom spécifié.</summary>
      <param name="name">Clé grâce à laquelle le fournisseur est identifié.</param>
      <returns>Fournisseur portant le nom spécifié.</returns>
    </member>
    <member name="P:System.Configuration.Provider.ProviderCollection.SyncRoot">
      <summary>Obtient l'objet en cours.</summary>
      <returns>Objet actif.</returns>
    </member>
    <member name="T:System.Configuration.Provider.ProviderException">
      <summary>Exception levée lorsqu'une erreur de fournisseur de configuration s'est produite. Cette classe d'exception est également utilisée par les fournisseurs pour lever des exceptions lorsque des erreurs internes se produisent dans le fournisseur qui ne sont pas mappées à d'autres classes d'exception préexistantes.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="info">Objet qui contient les informations à désérialiser.</param>
      <param name="context">Informations contextuelles sur la source ou la destination.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String)">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Message qui décrit pourquoi <see cref="T:System.Configuration.Provider.ProviderException" /> a été levé.</param>
    </member>
    <member name="M:System.Configuration.Provider.ProviderException.#ctor(System.String,System.Exception)">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.Provider.ProviderException" />.</summary>
      <param name="message">Message qui décrit pourquoi <see cref="T:System.Configuration.Provider.ProviderException" /> a été levé.</param>
      <param name="innerException">Exception qui a provoqué la levée de cette exception <see cref="T:System.Configuration.Provider.ProviderException" />.</param>
    </member>
    <member name="T:System.Configuration.ProviderSettings">
      <summary>Représente les éléments de configuration associés à un fournisseur.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettings" />.</summary>
      <param name="name">Le nom du fournisseur pour lequel configurer des paramètres.</param>
      <param name="type">Le type du fournisseur pour lequel configurer des paramètres.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Name">
      <summary>Obtient ou définit le nom du fournisseur configuré par cette classe.</summary>
      <returns>Nom du fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Parameters">
      <summary>Obtient une collection de paramètres définis par l'utilisateur pour le fournisseur.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> de paramètres pour le fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettings.Type">
      <summary>Obtient ou définit le type du fournisseur configuré par cette classe.</summary>
      <returns>Le nom de la classe et l'espace de noms qualifiés complets pour le type de fournisseur configuré par cette instance de <see cref="T:System.Configuration.ProviderSettings" />.</returns>
    </member>
    <member name="T:System.Configuration.ProviderSettingsCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Configuration.ProviderSettings" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.ProviderSettings" /> à la collection.</summary>
      <param name="provider">Objet <see cref="T:System.Configuration.ProviderSettings" /> à ajouter.</param>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Clear">
      <summary>Efface la collection.</summary>
    </member>
    <member name="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <summary>Supprime un élément de la collection.</summary>
      <param name="name">Nom de l’objet <see cref="T:System.Configuration.ProviderSettings" /> à supprimer.</param>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <summary>Obtient ou définit une valeur à l’index spécifié dans la collection <see cref="T:System.Configuration.ProviderSettingsCollection" />.</summary>
      <param name="index">Index du <see cref="T:System.Configuration.ProviderSettings" /> à retourner.</param>
      <returns>
        <see cref="T:System.Configuration.ProviderSettings" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <summary>Obtient un élément de la collection.</summary>
      <param name="key">Référence de chaîne à l’objet <see cref="T:System.Configuration.ProviderSettings" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.ProviderSettings" /> contenu dans la collection.</returns>
    </member>
    <member name="T:System.Configuration.RegexStringValidator">
      <summary>Fournit la validation d'une chaîne selon les règles fournies par une expression régulière.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <param name="regex">Chaîne qui spécifie une expression régulière.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="regex" /> est null ou une chaîne vide ("").</exception>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <summary>Détermine si le type de l'objet peut être validé.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur d’un objet.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'est pas conforme aux paramètres de la classe <see cref="T:System.Text.RegularExpressions.Regex" />.</exception>
    </member>
    <member name="T:System.Configuration.RegexStringValidatorAttribute">
      <summary>Demande de façon déclarative au .NET Framework d’effectuer la validation de chaîne sur une propriété de configuration à l’aide d’une expression régulière. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de l'objet <see cref="T:System.Configuration.RegexStringValidatorAttribute" />.</summary>
      <param name="regex">Chaîne à utiliser pour la validation d’expressions régulières.</param>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <summary>Obtient la chaîne utilisée pour effectuer la validation d’expressions régulières.</summary>
      <returns>Chaîne contenant l'expression régulière utilisée pour filtrer la chaîne assignée à la propriété décorée de l'élément de configuration.</returns>
    </member>
    <member name="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.RegexStringValidator" />.</summary>
      <returns>Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.RsaProtectedConfigurationProvider">
      <summary>Fournit une instance <see cref="T:System.Configuration.ProtectedConfigurationProvider" /> qui utilise le chiffrement RSA pour chiffrer et déchiffrer les données de configuration.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <summary>Ajoute une clé au conteneur de clé RSA.</summary>
      <param name="keySize">Taille de la clé à ajouter.</param>
      <param name="exportable">
        <see langword="true" /> pour indiquer que la clé est exportable ; sinon, <see langword="false" />.</param>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <summary>Déchiffre le nœud XML qui lui est passé.</summary>
      <param name="encryptedNode">
        <see cref="T:System.Xml.XmlNode" /> à déchiffrer.</param>
      <returns>Nœud XML déchiffré.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <summary>Supprime une clé du conteneur de clé RSA.</summary>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <summary>Chiffre le nœud XML qui lui est passé.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> à chiffrer.</param>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> chiffré.</returns>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <summary>Exporte une clé RSA à partir du conteneur de clé.</summary>
      <param name="xmlFileName">Nom et chemin d'accès du fichier vers lequel exporter la clé.</param>
      <param name="includePrivateParameters">
        <see langword="true" /> pour indiquer que des paramètres privés sont exportés ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException">Une erreur s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> a spécifié un fichier en lecture seule.  
  
- ou - 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
  
- ou - 
 <paramref name="path" /> a spécifié un répertoire.  
  
- ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié dans <paramref name="path" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> est dans un format non valide.</exception>
      <exception cref="T:System.Security.SecurityException">L'appelant n'a pas l'autorisation requise.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <summary>Importe une clé RSA dans le conteneur de clé.</summary>
      <param name="xmlFileName">Nom et chemin d'accès du fichier à partir duquel importer la clé.</param>
      <param name="exportable">
        <see langword="true" /> pour indiquer que la clé est exportable ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> est une chaîne de longueur nulle, contient seulement un espace, ou contient un ou plusieurs caractères non valides définis par <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">Le chemin et/ou le nom de fichier spécifiés dépassent la longueur maximale définie par le système.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Le chemin spécifié n’est pas valide, par exemple si l’emplacement est un lecteur non mappé.</exception>
      <exception cref="T:System.IO.IOException">Une erreur s’est produite lors de l’ouverture du fichier.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="path" /> a spécifié un fichier qui est en écriture seule.  
  
- ou - 
Cette opération n'est pas prise en charge sur la plateforme actuelle.  
  
- ou - 
 <paramref name="path" /> a spécifié un répertoire.  
  
- ou - 
L'appelant n'a pas l'autorisation requise.</exception>
      <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié dans <paramref name="path" /> est introuvable.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="path" /> est dans un format non valide.</exception>
    </member>
    <member name="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise le fournisseur avec les paramètres par défaut.</summary>
      <param name="name">Nom du fournisseur à utiliser pour l'objet.</param>
      <param name="configurationValues">Collection <see cref="T:System.Collections.Specialized.NameValueCollection" /> de valeurs à utiliser lors de l'initialisation de l'objet.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="configurationValues" /> comprend une ou plusieurs valeurs non reconnues.</exception>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <summary>Obtient le nom du fournisseur de services de chiffrement (CPS) d'API de chiffrement Windows.</summary>
      <returns>Nom du fournisseur de services de chiffrement CryptoAPI.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <summary>Obtient le nom du conteneur de clé.</summary>
      <returns>Nom du conteneur de clé.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <summary>Obtient la clé publique utilisée par le fournisseur.</summary>
      <returns>Objet <see cref="T:System.Security.Cryptography.RSAParameters" /> qui contient la clé publique utilisée par le fournisseur.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <summary>Obtient une valeur indiquant si le fournisseur utilise FIPS.</summary>
      <returns>
        <see langword="true" /> Si le fournisseur utilise FIPS ; Sinon, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise le conteneur de clé d'ordinateur.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise le conteneur de clé d'ordinateur ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <summary>Obtient une valeur indiquant si le fournisseur utilise des données d'échange de clé OAEP (Optimal Asymmetric Encryption Padding).</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.RsaProtectedConfigurationProvider" /> utilise des données d'échange de clé OAEP (Optimal Asymmetric Encryption Padding) ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElement">
      <summary>Représente un élément dans une classe <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <summary>Obtient la valeur de l’entrée GenericUriParserOptions à partir d’une instance de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Valeur de l'entrée GenericUriParserOptions.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElement.Name">
      <summary>Obtient la valeur de l’entrée Name à partir d’une instance de <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
      <returns>Protocole utilisé par ce paramètre de schéma.</returns>
    </member>
    <member name="T:System.Configuration.SchemeSettingElementCollection">
      <summary>Représente une collection d'objets <see cref="T:System.Configuration.SchemeSettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <summary>Index du <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié.</summary>
      <param name="element">
        <see cref="T:System.Configuration.SchemeSettingElement" /> pour l'emplacement d'index spécifié.</param>
      <returns>Index du <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié ; sinon, -1.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <summary>Obtient le type de collection par défaut de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <returns>Type de collection par défaut de <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <summary>Obtient un élément au niveau de l'index spécifié dans la collection <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="index">Index du <see cref="T:System.Configuration.SchemeSettingElement" /> à retourner.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le paramètre <paramref name="index" /> est inférieur à zéro.  
  
- ou - 
L'élément spécifié par le paramètre est <see langword="null" /> ou a été supprimé.</exception>
      <returns>
        <see cref="T:System.Configuration.SchemeSettingElement" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <summary>Obtient un élément de la collection <see cref="T:System.Configuration.SchemeSettingElementCollection" />.</summary>
      <param name="name">Référence de chaîne à l’objet <see cref="T:System.Configuration.SchemeSettingElement" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.SchemeSettingElement" /> contenu dans la collection.</returns>
    </member>
    <member name="T:System.Configuration.SectionInformation">
      <summary>Contient les métadonnées concernant une section individuelle dans la hiérarchie de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration">
      <summary>Force l'affichage de la section de configuration associée dans le fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <summary>Force l'affichage de la section de configuration associée dans le fichier de configuration ou supprime une section existante du fichier de configuration.</summary>
      <param name="force">
        <see langword="true" /> si la section associée doit être écrite dans le fichier de configuration ; sinon, <see langword="false" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">
        <paramref name="force" /> a la valeur <see langword="true" /> et la section associée ne peut pas être exportée vers le fichier de configuration enfant, ou elle n'est pas déclarée.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetParentSection">
      <summary>Obtient la section de configuration qui contient la section de configuration associée à cet objet.</summary>
      <exception cref="T:System.InvalidOperationException">La méthode est appelée à partir d'une section parente.</exception>
      <returns>Section de configuration qui contient <see cref="T:System.Configuration.ConfigurationSection" /> associé à cet objet <see cref="T:System.Configuration.SectionInformation" />.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.GetRawXml">
      <summary>Retourne un objet nœud XML qui représente l'objet de la section de configuration associée.</summary>
      <exception cref="T:System.InvalidOperationException">Cet objet de configuration est verrouillé et ne peut pas être modifié.</exception>
      <returns>Représentation XML pour cette section de configuration.</returns>
    </member>
    <member name="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <summary>Marque une section de configuration pour la protection.</summary>
      <param name="protectionProvider">Nom du fournisseur de protection à utiliser.</param>
      <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Configuration.SectionInformation.AllowLocation" /> a la valeur <see langword="false" />.  
  
- ou - 
La section cible est déjà une section de données protégée.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.RevertToParent">
      <summary>Fait que toutes les valeurs de la section de configuration associée sont héritées de la section parente.</summary>
      <exception cref="T:System.InvalidOperationException">Cette méthode ne peut pas être appelée en dehors du mode édition.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <summary>Affecte à l'objet une valeur de représentation XML de la section de configuration associée dans le fichier de configuration.</summary>
      <param name="rawXml">XML à utiliser.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rawXml" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SectionInformation.UnprotectSection">
      <summary>Supprime le chiffrement de configuration protégée de la section de configuration associée.</summary>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowDefinition">
      <summary>Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être définie.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <summary>Obtient ou définit une valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration la section de configuration associée peut être déclarée.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>Valeur qui indique à quel niveau de la hiérarchie des fichiers de configuration l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé peut être déclaré pour les fichiers .exe.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowLocation">
      <summary>Obtient ou définit une valeur qui indique si la section de configuration autorise l'attribut <see langword="location" />.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>
        <see langword="true" /> si l'attribut <see langword="location" /> est autorisé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.AllowOverride">
      <summary>Obtient ou définit une valeur qui indique si la section de configuration associée peut être substituée par des fichiers de configuration de niveau inférieur.</summary>
      <returns>
        <see langword="true" /> si la section peut être substituée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ConfigSource">
      <summary>Obtient ou définit le nom du fichier Include dans lequel la section de configuration associée est définie, si ce fichier existe.</summary>
      <returns>Nom du fichier Include dans lequel le <see cref="T:System.Configuration.ConfigurationSection" /> associé est défini, si ce fichier existe ; sinon, une chaîne vide ("").</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ForceSave">
      <summary>Obtient ou définit une valeur qui indique si la section de configuration associée est enregistrée même si elle n'est pas modifiée.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé est enregistré même s'il n'est pas modifié ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Si le fichier de configuration est enregistré (même en l'absence de modifications), ASP.NET redémarre l'application.</para></block></returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <summary>Obtient ou définit une valeur qui indique si les paramètres spécifiés dans la section de configuration associée sont hérités par des applications qui résident dans un sous-répertoire de l'application correspondante.</summary>
      <returns>
        <see langword="true" /> si les paramètres spécifiés dans cet objet <see cref="T:System.Configuration.ConfigurationSection" /> sont hérités par les applications enfants ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <summary>Obtient une valeur qui indique si la section de configuration doit être déclarée dans le fichier de configuration.</summary>
      <returns>
        <see langword="true" /> si l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé doit être déclaré dans le fichier de configuration ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsDeclared">
      <summary>Obtient une valeur qui indique si la section de configuration associée est déclarée dans le fichier de configuration.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est déclaré dans le fichier de configuration ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsLocked">
      <summary>Obtient une valeur qui indique si la section de configuration associée est verrouillée.</summary>
      <returns>
        <see langword="true" /> si la section est verrouillée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.IsProtected">
      <summary>Obtient une valeur qui indique si la section de configuration associée est protégée.</summary>
      <returns>
        <see langword="true" /> si ce <see cref="T:System.Configuration.ConfigurationSection" /> est protégé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Name">
      <summary>Obtient le nom de la section de configuration associée.</summary>
      <returns>Nom complet de la section de configuration.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideMode">
      <summary>Obtient ou définit la valeur d'énumération <see cref="T:System.Configuration.OverrideMode" /> qui spécifie si la section de configuration associée peut être substituée par les fichiers de configuration enfants.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Une tentative a été faite pour modifier à la fois les propriétés <see cref="P:System.Configuration.SectionInformation.AllowOverride" /> et <see cref="P:System.Configuration.SectionInformation.OverrideMode" />, qui ne sont pas prises en charge pour des raisons de compatibilité.</exception>
      <returns>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <summary>Obtient ou définit une valeur qui spécifie le comportement de substitution par défaut d'une section de configuration par les fichiers de configuration enfants.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">Le comportement de substitution est spécifié dans une section de configuration parente.</exception>
      <returns>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <summary>Obtient le comportement de substitution d'une section de configuration qui est à son tour basée sur la capacité des fichiers de configuration enfants à verrouiller la section de configuration.</summary>
      <returns>Une des valeurs d'énumération <see cref="T:System.Configuration.OverrideMode" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.ProtectionProvider">
      <summary>Obtient le fournisseur de configuration protégée pour la section de configuration associée.</summary>
      <returns>Fournisseur de configuration protégée pour cet objet <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RequirePermission">
      <summary>Obtient une valeur qui indique si la section de configuration associée requiert des autorisations d'accès.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>
        <see langword="true" /> si l'attribut <see langword="requirePermission" /> a la valeur <see langword="true" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <summary>Obtient ou définit une valeur qui spécifie si la modification d'un fichier Include de configuration externe requiert un redémarrage de l'application.</summary>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>
        <see langword="true" /> si une modification dans un fichier Include de configuration externe requiert le redémarrage de l'application ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.SectionName">
      <summary>Obtient le nom de la section de configuration associée.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.ConfigurationSection" /> associé.</returns>
    </member>
    <member name="P:System.Configuration.SectionInformation.Type">
      <summary>Obtient ou définit le nom de la classe de la section.</summary>
      <exception cref="T:System.ArgumentException">La valeur sélectionnée est <see langword="null" /> ou une chaîne vide ("").</exception>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">La valeur sélectionnée est en conflit avec une valeur déjà définie.</exception>
      <returns>Nom de la classe associée à cette section <see cref="T:System.Configuration.ConfigurationSection" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingAttribute">
      <summary>Représente un attribut de paramètres personnalisés utilisé pour associer des informations de paramètres à une propriété de paramètres.</summary>
    </member>
    <member name="M:System.Configuration.SettingAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingChangingEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingChangingEventArgs" />.</summary>
      <param name="settingName">
        <see cref="T:System.String" /> contenant le nom du paramètre d'application.</param>
      <param name="settingClass">
        <see cref="T:System.String" /> contenant une description de catégorie du paramètre. Ce paramètre a souvent pour valeur le nom du groupe de paramètres d'application.</param>
      <param name="settingKey">
        <see cref="T:System.String" /> contenant la clé de paramètres d'application.</param>
      <param name="newValue">
        <see cref="T:System.Object" /> qui contient la nouvelle valeur à assigner à la propriété de paramètres d'application.</param>
      <param name="cancel">Valeur <see langword="true" /> pour annuler l'événement ; sinon, <see langword="false" /></param>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <summary>Obtient la nouvelle valeur qui est assignée à la propriété de paramètres d'application.</summary>
      <returns>
        <see cref="T:System.Object" /> qui contient la nouvelle valeur à assigner à la propriété de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <summary>Obtient la catégorie de propriété de paramètres d'application.</summary>
      <returns>
        <see cref="T:System.String" /> contenant une description de catégorie du paramètre. En général, ce paramètre a pour valeur le nom du groupe de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <summary>Obtient la clé de paramètres d'application associée à la propriété.</summary>
      <returns>
        <see cref="T:System.String" /> contenant la clé de paramètres d'application.</returns>
    </member>
    <member name="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <summary>Obtient le nom du paramètre d'application associé à la propriété de paramètres d'application.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom du paramètre d'application.</returns>
    </member>
    <member name="T:System.Configuration.SettingChangingEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />.</summary>
      <param name="sender">Source de l’événement, généralement une classe wrapper de paramètres d’application dérivée de la classe <see cref="T:System.Configuration.ApplicationSettingsBase" />.</param>
      <param name="e">
        <see cref="T:System.Configuration.SettingChangingEventArgs" /> contenant les données de l’événement.</param>
    </member>
    <member name="T:System.Configuration.SettingElement">
      <summary>Représente un élément de configuration simplifié utilisé pour mettre à jour des éléments dans la configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElement" /> en fonction des paramètres fournis.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</param>
      <param name="serializeAs">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />. Cet objet est une énumération utilisée comme méthode de sérialisation pour stocker des paramètres de configuration.</param>
    </member>
    <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
      <summary>Compare l’instance de <see cref="T:System.Configuration.SettingElement" /> actuelle à l’objet spécifié.</summary>
      <param name="settings">Objet avec lequel comparer.</param>
      <returns>
        <see langword="true" /> si l’instance de <see cref="T:System.Configuration.SettingElement" /> est égale à l’objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElement.GetHashCode">
      <summary>Obtient une valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Name">
      <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.SerializeAs">
      <summary>Obtient ou définit le mécanisme de sérialisation utilisé pour rendre persistantes les valeurs de l'objet <see cref="T:System.Configuration.SettingElement" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingElement.Value">
      <summary>Obtient ou définit la valeur d'un objet <see cref="T:System.Configuration.SettingElement" /> en utilisant un objet <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.SettingValueElement" /> contenant la valeur de l'objet <see cref="T:System.Configuration.SettingElement" /> spécifié.</returns>
    </member>
    <member name="T:System.Configuration.SettingElementCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.SettingElement" />. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingElementCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.SettingElement" /> à la collection.</summary>
      <param name="element">Objet <see cref="T:System.Configuration.SettingElement" /> à ajouter à la collection.</param>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Configuration.SettingElement" /> de la collection.</summary>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <summary>Obtient un objet <see cref="T:System.Configuration.SettingElement" /> de la collection.</summary>
      <param name="elementKey">Valeur de chaîne représentant l’objet <see cref="T:System.Configuration.SettingElement" /> dans la collection.</param>
      <returns>Objet <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <summary>Supprime un objet <see cref="T:System.Configuration.SettingElement" /> de la collection.</summary>
      <param name="element">Objet <see cref="T:System.Configuration.SettingElement" />.</param>
    </member>
    <member name="P:System.Configuration.SettingElementCollection.CollectionType">
      <summary>Obtient le type de la collection de configurations.</summary>
      <returns>Objet <see cref="T:System.Configuration.ConfigurationElementCollectionType" /> de la collection.</returns>
    </member>
    <member name="T:System.Configuration.SettingsAttributeDictionary">
      <summary>Représente une collection de paires clé/valeur utilisées pour décrire un objet de configuration ainsi qu’un objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</summary>
      <param name="attributes">Collection de paires clé/valeur associées aux paramètres de configuration.</param>
    </member>
    <member name="T:System.Configuration.SettingsBase">
      <summary>Fournit la classe de base utilisée pour prendre en charge les paramètres de propriété d'utilisateur.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <summary>Initialise les propriétés internes utilisées par l'objet <see cref="T:System.Configuration.SettingsBase" />.</summary>
      <param name="context">Contexte de paramètres associé aux propriétés de paramètres.</param>
      <param name="properties">Propriétés de paramètres qui seront accessibles à partir de l'instance de <see cref="T:System.Configuration.SettingsBase" />.</param>
      <param name="providers">Fournisseurs initialisés qui doivent être utilisés lors du chargement et de l'enregistrement des valeurs de propriété.</param>
    </member>
    <member name="M:System.Configuration.SettingsBase.Save">
      <summary>Stocke les valeurs actuelles des propriétés de paramètres.</summary>
    </member>
    <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <summary>Fournit une classe <see cref="T:System.Configuration.SettingsBase" /> qui est synchronisée (thread-safe).</summary>
      <param name="settingsBase">Classe utilisée pour prendre en charge les paramètres de propriété d'utilisateur.</param>
      <returns>Classe <see cref="T:System.Configuration.SettingsBase" /> qui est synchronisée.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Context">
      <summary>Obtient le contexte de paramètres associé.</summary>
      <returns>
        <see cref="T:System.Configuration.SettingsContext" /> associé à l'instance de paramètres.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.IsSynchronized">
      <summary>Obtient une valeur indiquant si l'accès à l'objet est synchronisé (thread-safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à la <see cref="T:System.Configuration.SettingsBase" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Item(System.String)">
      <summary>Obtient ou définit la valeur de la propriété de paramètres spécifiée.</summary>
      <param name="propertyName">
        <see cref="T:System.String" /> contenant le nom de la propriété à accéder.</param>
      <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Il n'y a pas de propriété associée à l'objet actuel ou la propriété spécifiée est introuvable.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Une tentative de définition de propriété en lecture seule a été effectuée.</exception>
      <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">La valeur fournie est d'un type incompatible avec la propriété de paramètres, durant une opération de définition.</exception>
      <returns>Si elle est trouvée, valeur de la propriété de paramètres nommée.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Properties">
      <summary>Obtient la collection des propriétés de paramètres.</summary>
      <returns>Collection <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant tous les objets <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.PropertyValues">
      <summary>Obtient une collection de valeurs de propriété de paramètres.</summary>
      <returns>Collection d'objets <see cref="T:System.Configuration.SettingsPropertyValue" /> représentant les valeurs de données réelles des propriétés managées par l'instance de <see cref="T:System.Configuration.SettingsBase" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsBase.Providers">
      <summary>Obtient une collection de fournisseurs de paramètres.</summary>
      <returns>Collection <see cref="T:System.Configuration.SettingsProviderCollection" /> contenant des objets <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsContext">
      <summary>Fournit des informations contextuelles que le fournisseur peut utiliser quand il rend des paramètres persistants.</summary>
    </member>
    <member name="M:System.Configuration.SettingsContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsContext" />.</summary>
    </member>
    <member name="T:System.Configuration.SettingsDescriptionAttribute">
      <summary>Fournit une chaîne qui décrit une propriété de configuration individuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingsDescriptionAttribute" />.</summary>
      <param name="description">Le <see cref="T:System.String" /> utilisé comme texte descriptif.</param>
    </member>
    <member name="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <summary>Obtient le texte descriptif pour la propriété de configuration associée.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le texte descriptif de la propriété de configuration associée.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <summary>Fournit une chaîne qui décrit un groupe de propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsGroupDescriptionAttribute" />.</summary>
      <param name="description">
        <see cref="T:System.String" /> contenant le texte descriptif du groupe de paramètres d’application.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <summary>Texte descriptif du groupe de propriétés de paramètres d’application.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le texte descriptif du groupe de paramètres d’application.</returns>
    </member>
    <member name="T:System.Configuration.SettingsGroupNameAttribute">
      <summary>Spécifie un nom pour le groupe de propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsGroupNameAttribute" />.</summary>
      <param name="groupName">
        <see cref="T:System.String" /> contenant le nom du groupe de propriétés de paramètres d’application.</param>
    </member>
    <member name="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <summary>Obtient le nom du groupe de propriétés de paramètres d’application.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom du groupe de propriétés de paramètres d’application.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventArgs">
      <summary>Fournit des données pour l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsLoadedEventArgs" />.</summary>
      <param name="provider">Objet <see cref="T:System.Configuration.SettingsProvider" /> à partir duquel les paramètres sont chargés.</param>
    </member>
    <member name="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <summary>Obtient le fournisseur de paramètres utilisé pour stocker des paramètres de configuration.</summary>
      <returns>Un fournisseur de paramètres.</returns>
    </member>
    <member name="T:System.Configuration.SettingsLoadedEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />.</summary>
      <param name="sender">Source de l’événement, généralement la classe de paramètres.</param>
      <param name="e">Objet <see cref="T:System.Configuration.SettingsLoadedEventArgs" /> qui contient les données d'événement.</param>
    </member>
    <member name="T:System.Configuration.SettingsManageability">
      <summary>Fournit des valeurs pour indiquer quels services doivent être mis à la disposition des paramètres d’application.</summary>
    </member>
    <member name="F:System.Configuration.SettingsManageability.Roaming">
      <summary>Permet aux paramètres d’application d’être stockés dans des profils utilisateur itinérants. Pour plus d’informations sur les profils utilisateur itinérants, consultez Stockage et profil itinérant isolé.</summary>
    </member>
    <member name="T:System.Configuration.SettingsManageabilityAttribute">
      <summary>Spécifie des services spéciaux pour les propriétés de paramètres d’application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsManageabilityAttribute" />.</summary>
      <param name="manageability">Valeur <see cref="T:System.Configuration.SettingsManageability" /> qui énumère les services demandés.</param>
    </member>
    <member name="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <summary>Obtient le jeu de services spéciaux qui ont été demandés.</summary>
      <returns>Valeur qui résulte de l'utilisation de l'opérateur logique <see langword="OR" /> pour combiner toutes les valeurs d'énumération <see cref="T:System.Configuration.SettingsManageability" /> correspondant aux services demandés.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProperty">
      <summary>Utilisé en interne comme la classe qui représente les métadonnées relatives à une propriété de configuration individuelle.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProperty" /> en fonction du paramètre fourni.</summary>
      <param name="propertyToCopy">Spécifie la copie d'un objet <see cref="T:System.Configuration.SettingsProperty" /> existant.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProperty" />. selon le paramètre fourni.</summary>
      <param name="name">Spécifie le nom d'un objet <see cref="T:System.Configuration.SettingsProperty" /> existant.</param>
    </member>
    <member name="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <summary>Crée une instance de la classe <see cref="T:System.Configuration.SettingsProperty" /> à partir des paramètres fournis.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="propertyType">Type d'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="provider">Objet <see cref="T:System.Configuration.SettingsProvider" /> utilisé pour la persistance.</param>
      <param name="isReadOnly">Valeur <see cref="T:System.Boolean" /> indiquant si l'objet <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule.</param>
      <param name="defaultValue">Valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <param name="serializeAs">Objet <see cref="T:System.Configuration.SettingsSerializeAs" />. Cet objet est une énumération utilisée pour définir la méthode de sérialisation permettant de stocker des paramètres d'application.</param>
      <param name="attributes">Objet <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</param>
      <param name="throwOnErrorDeserializing">Valeur Boolean spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement désérialisée.</param>
      <param name="throwOnErrorSerializing">Valeur Boolean spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement sérialisée.</param>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Attributes">
      <summary>Obtient un objet <see cref="T:System.Configuration.SettingsAttributeDictionary" /> contenant les attributs de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.SettingsAttributeDictionary" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.DefaultValue">
      <summary>Obtient ou définit la valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objet contenant la valeur par défaut de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.IsReadOnly">
      <summary>Obtient ou définit une valeur indiquant si un objet <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Configuration.SettingsProperty" /> est en lecture seule ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Name">
      <summary>Obtient ou définit le nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.PropertyType">
      <summary>Obtient ou définit le type de <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Type de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.Provider">
      <summary>Obtient ou définit le fournisseur pour <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.SettingsProvider" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.SerializeAs">
      <summary>Obtient ou définit un objet <see cref="T:System.Configuration.SettingsSerializeAs" /> pour <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>Objet <see cref="T:System.Configuration.SettingsSerializeAs" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <summary>Obtient ou définit une valeur spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement désérialisée.</summary>
      <returns>
        <see langword="true" /> si l'erreur est levée lorsque la propriété n'est pas correctement désérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <summary>Obtient ou définit une valeur spécifiant si une erreur sera levée lorsque la propriété ne sera pas correctement sérialisée.</summary>
      <returns>
        <see langword="true" /> si l'erreur est levée lorsque la propriété n'est pas correctement sérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyCollection">
      <summary>Contient une collection d'objets <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.SettingsProperty" /> à la collection.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Configuration.SettingsProperty" /> de la collection.</summary>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
      <summary>Crée une copie de la collection existante.</summary>
      <returns>Classe <see cref="T:System.Configuration.SettingsPropertyCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie cet objet <see cref="T:System.Configuration.SettingsPropertyCollection" /> dans un tableau.</summary>
      <param name="array">Tableau dans lequel copier l'objet.</param>
      <param name="index">Index où commence la copie.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <summary>Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <summary>Effectue un traitement personnalisé supplémentaire lors de l'ajout au contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <summary>Effectue un traitement personnalisé supplémentaire après l'ajout au contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <summary>Effectue un traitement personnalisé supplémentaire lors de l'effacement du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <summary>Effectue un traitement personnalisé supplémentaire après l'effacement du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <summary>Effectue un traitement personnalisé supplémentaire lors de la suppression du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <summary>Effectue un traitement personnalisé supplémentaire après la suppression du contenu de l'instance de <see cref="T:System.Configuration.SettingsPropertyCollection" />.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <summary>Supprime un objet <see cref="T:System.Configuration.SettingsProperty" /> de la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <summary>Met la collection en lecture seule.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Count">
      <summary>Obtient une valeur qui indique le nombre d'objets <see cref="T:System.Configuration.SettingsProperty" /> dans la collection.</summary>
      <returns>Nombre d'objets <see cref="T:System.Configuration.SettingsProperty" /> dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à la collection est synchronisé (thread safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à la <see cref="T:System.Configuration.SettingsPropertyCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <summary>Obtient l'élément de collection portant le nom spécifié.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
      <returns>Objet <see cref="T:System.Configuration.SettingsProperty" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <summary>Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <summary>Fournit une exception pour les objets <see cref="T:System.Configuration.SettingsProperty" /> en lecture seule.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction des paramètres fournis.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction d'un paramètre fourni.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyIsReadOnlyException" /> en fonction des paramètres fournis.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyNotFoundException">
      <summary>Fournit une exception pour les objets <see cref="T:System.Configuration.SettingsProperty" /> qui sont introuvables.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction des paramètres fournis.</summary>
      <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d’objet sérialisées relatives à l’exception levée.</param>
      <param name="context">Objet <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction d’un paramètre fourni.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyNotFoundException" /> en fonction des paramètres fournis.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValue">
      <summary>Contient la valeur d'une propriété de paramètres qui peut être chargée et stockée par une instance de <see cref="T:System.Configuration.SettingsBase" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyValue" /> en fonction des paramètres fournis.</summary>
      <param name="property">Spécifie un objet <see cref="T:System.Configuration.SettingsProperty" />.</param>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <summary>Obtient ou définit si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a été désérialisée.</summary>
      <returns>
        <see langword="true" /> si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a été désérialisée ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <summary>Obtient ou définit si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a changé.</summary>
      <returns>
        <see langword="true" /> si la valeur d'un objet <see cref="T:System.Configuration.SettingsProperty" /> a changé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Name">
      <summary>Obtient le nom de la propriété dans l'objet <see cref="T:System.Configuration.SettingsProperty" /> associé.</summary>
      <returns>Nom de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.Property">
      <summary>Obtient l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <returns>L'objet <see cref="T:System.Configuration.SettingsProperty" /> qui décrit l'objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <summary>Obtient ou définit la valeur de l’objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <exception cref="T:System.ArgumentException">Lors de la tentative d'utilisation de la valeur par défaut de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />, une erreur s'est produite.  Soit la tentative de conversion de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> en type valide a échoué, soit la valeur résultante n'était pas compatible avec le type défini par <see cref="P:System.Configuration.SettingsProperty.PropertyType" />.</exception>
      <returns>Valeur de l'objet <see cref="T:System.Configuration.SettingsProperty" />. Lorsque cette valeur est définie, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.IsDirty" /> a la valeur <see langword="true" /> et la propriété <see cref="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" /> a la valeur <see langword="false" />.  
  
Lorsqu'une valeur fait d'abord l'objet d'un accès à partir de la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> et qu'elle a été stockée initialement dans l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> comme une représentation sérialisée à l'aide de la propriété <see cref="P:System.Configuration.SettingsPropertyValue.SerializedValue" />, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> déclenche la désérialisation de la valeur sous-jacente.  Comme effet secondaire, la propriété <see cref="P:System.Configuration.SettingsPropertyValue.Deserialized" /> aura la valeur <see langword="true" />.  
  
Si cette chaîne d'événements se produit dans ASP.NET, et si une erreur se produit pendant le processus de désérialisation, l'erreur est enregistrée à l'aide de la fonctionnalité de contrôle d'intégrité d'ASP.NET. Par défaut, cela signifie que les erreurs de désérialisation apparaîtront dans le Journal des événements de l'application lors de l'exécution sous ASP.NET. Si ce processus se produit en dehors d'ASP.NET, et si une erreur se produit pendant la désérialisation, l'erreur est supprimée, et le reste de la logique pendant la désérialisation se produit. S'il n'existe aucune valeur sérialisée à désérialiser lorsque la désérialisation est tentée, l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> tente de retourner une valeur par défaut s'il en existe une qui a été configurée comme définie sur l'instance de <see cref="T:System.Configuration.SettingsProperty" /> associée. Dans ce cas, si la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> a pour valeur <see langword="null" /> ou la chaîne "[null]", l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> affecte à la propriété <see cref="P:System.Configuration.SettingsPropertyValue.PropertyValue" /> la valeur <see langword="null" /> pour les types référence ou la valeur par défaut pour le type valeur associé.  En revanche, si la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> a une référence d'objet ou une valeur de chaîne (autre que "[null]") valides, la propriété retournée est <see cref="P:System.Configuration.SettingsProperty.DefaultValue" />.  
  
S'il n'existe aucune valeur sérialisée à désérialiser lorsque la désérialisation est tentée et qu'aucune valeur par défaut n'a été spécifiée, une chaîne vide est retournée pour les types de chaînes. Pour tous les autres types, une instance par défaut est retournée en appelant <see cref="M:System.Activator.CreateInstance(System.Type)" /> -pour les types de référence, cela signifie qu’une tentative de création d’une instance d’objet à l’aide du constructeur sans paramètre est effectuée.  Si cette tentative échoue, la valeur <see langword="null" /> est retournée.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <summary>Obtient ou définit la valeur sérialisée de l'objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
      <exception cref="T:System.ArgumentException">Les options de sérialisation de la propriété prévoyaient l'utilisation d'un convertisseur de type de chaîne, mais aucun convertisseur de type n'était disponible.</exception>
      <returns>Valeur sérialisée d'un objet <see cref="T:System.Configuration.SettingsProperty" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <summary>Obtient une valeur Boolean spécifiant si la valeur de l'objet <see cref="T:System.Configuration.SettingsPropertyValue" /> est la valeur par défaut telle que la définit la valeur de la propriété <see cref="P:System.Configuration.SettingsProperty.DefaultValue" /> sur l'objet <see cref="T:System.Configuration.SettingsProperty" /> associé.</summary>
      <returns>
        <see langword="true" /> si la valeur de l'objet <see cref="T:System.Configuration.SettingsProperty" /> est la valeur par défaut ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyValueCollection">
      <summary>Contient une collection de valeurs de propriétés de paramètres qui mappent des objets <see cref="T:System.Configuration.SettingsProperty" /> à des objets <see cref="T:System.Configuration.SettingsPropertyValue" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <summary>Ajoute un objet <see cref="T:System.Configuration.SettingsPropertyValue" /> à la collection.</summary>
      <param name="property">Objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Une tentative a été faite pour ajouter un élément à la collection, mais cette dernière était marquée en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <summary>Supprime tous les objets <see cref="T:System.Configuration.SettingsPropertyValue" /> de la collection.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <summary>Crée une copie de la collection existante.</summary>
      <returns>Classe <see cref="T:System.Configuration.SettingsPropertyValueCollection" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copie cette collection <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> dans un tableau.</summary>
      <param name="array">Tableau dans lequel copier la collection.</param>
      <param name="index">Index où commence la copie.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <summary>Obtient l'objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> tel qu'il s'applique à la collection.</returns>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <summary>Supprime un objet <see cref="T:System.Configuration.SettingsPropertyValue" /> de la collection.</summary>
      <param name="name">Nom de l'objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <exception cref="T:System.NotSupportedException">Une tentative a été faite pour supprimer un élément de la collection, mais cette dernière était marquée en lecture seule.</exception>
    </member>
    <member name="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <summary>Met la collection en lecture seule.</summary>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <summary>Obtient une valeur qui indique le nombre d'objets <see cref="T:System.Configuration.SettingsPropertyValue" /> dans la collection.</summary>
      <returns>Nombre d'objets <see cref="T:System.Configuration.SettingsPropertyValue" /> dans la collection.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <summary>Obtient une valeur qui indique si l'accès à la collection est synchronisé (thread safe).</summary>
      <returns>
        <see langword="true" /> si l'accès à la collection <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> est synchronisé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <summary>Obtient un élément de la collection.</summary>
      <param name="name">Objet <see cref="T:System.Configuration.SettingsPropertyValue" />.</param>
      <returns>Objet <see cref="T:System.Configuration.SettingsPropertyValue" /> avec le <paramref name="name" /> spécifié.</returns>
    </member>
    <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <summary>Obtient l'objet utilisé pour synchroniser l'accès à la collection.</summary>
      <returns>Objet utilisé pour synchroniser l'accès à la collection.</returns>
    </member>
    <member name="T:System.Configuration.SettingsPropertyWrongTypeException">
      <summary>Fournit une exception qui est levée lorsqu'un type non valide est utilisé avec un objet <see cref="T:System.Configuration.SettingsProperty" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction des paramètres fournis.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" /> qui contient les données d'objet sérialisées concernant l'exception levée.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" /> qui contient des informations contextuelles sur la source ou la destination du flux sérialisé.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction du paramètre fourni.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
    </member>
    <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsPropertyWrongTypeException" /> en fonction des paramètres fournis.</summary>
      <param name="message">Chaîne contenant un message d'exception.</param>
      <param name="innerException">Exception ayant provoqué l'exception actuelle.</param>
    </member>
    <member name="T:System.Configuration.SettingsProvider">
      <summary>Agit comme classe de base pour la dérivation de fournisseurs de paramètres personnalisés dans l'architecture de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.#ctor">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingsProvider" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>Retourne la collection de valeurs de propriétés de paramètres pour l'instance d'application et le groupe de propriétés de paramètres spécifiés.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="collection">
        <see cref="T:System.Configuration.SettingsPropertyCollection" /> contenant le groupe de propriétés de paramètres dont les valeurs seront récupérées.</param>
      <returns>
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> contenant les valeurs pour le groupe de propriétés de paramètres spécifié.</returns>
    </member>
    <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <summary>Définit les valeurs du groupe de paramètres de propriétés spécifié.</summary>
      <param name="context">
        <see cref="T:System.Configuration.SettingsContext" /> décrivant l'utilisation de l'application actuelle.</param>
      <param name="collection">
        <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> représentant le groupe de paramètres de propriétés à définir.</param>
    </member>
    <member name="P:System.Configuration.SettingsProvider.ApplicationName">
      <summary>Obtient ou définit le nom de l'application en cours d'exécution.</summary>
      <returns>
        <see cref="T:System.String" />Qui contient le nom abrégé de l’application, qui ne contient pas de chemin d’accès complet ou d’extension, par exemple, <c>SimpleAppSettings</c>.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderAttribute">
      <summary>Spécifie le fournisseur de paramètres utilisé pour fournir le stockage pour la propriété ou la classe de paramètres d’application actuelle. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerTypeName">
        <see cref="T:System.String" /> contenant le nom du fournisseur de paramètres.</param>
    </member>
    <member name="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProviderAttribute" />.</summary>
      <param name="providerType">
        <see cref="T:System.Type" /> contenant le type de fournisseur de paramètres.</param>
    </member>
    <member name="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <summary>Obtient le nom de type du fournisseur de paramètres.</summary>
      <returns>
        <see cref="T:System.String" /> contenant le nom du fournisseur de paramètres.</returns>
    </member>
    <member name="T:System.Configuration.SettingsProviderCollection">
      <summary>Représente une collection de fournisseurs de paramètres d'application.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingsProviderCollection" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <summary>Ajoute un nouveau fournisseur de paramètres à la collection.</summary>
      <param name="provider">
        <see cref="T:System.Configuration.Provider.ProviderBase" /> à ajouter à la collection.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="provider" /> n'est pas du type <see cref="T:System.Configuration.SettingsProvider" />.  
  
- ou - 
La propriété <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> du paramètre provider est null ou représente une chaîne vide.  
  
- ou - 
Un fournisseur de paramètres avec le même <see cref="P:System.Configuration.Provider.ProviderBase.Name" /> existe déjà dans la collection.</exception>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="provider" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <summary>Obtient le fournisseur de paramètres dans la collection qui correspond au nom spécifié.</summary>
      <param name="name">
        <see cref="T:System.String" /> contenant le nom convivial du fournisseur de paramètres.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule lors de la définition de cette valeur.</exception>
      <returns>S'il est trouvé, <see cref="T:System.Configuration.SettingsProvider" /> dont le nom correspond à celui spécifié par le paramètre de nom ; sinon, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Configuration.SettingsSavingEventHandler">
      <summary>Représente la méthode qui gérera l'événement <see cref="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />.</summary>
      <param name="sender">Source de l’événement, en général un conteneur de données ou une collection liée aux données.</param>
      <param name="e">
        <see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d’événement.</param>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAs">
      <summary>Détermine le modèle de sérialisation utilisé pour stocker des paramètres d'application.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Binary">
      <summary>La propriété de paramètres est sérialisée à l'aide de la sérialisation d'objet binaire.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <summary>Le fournisseur de paramètres a une connaissance implicite de la propriété ou de son type et sélectionne un mécanisme de sérialisation approprié. Souvent utilisé pour la sérialisation personnalisée.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.String">
      <summary>La propriété de paramètres est sérialisée comme texte brut.</summary>
    </member>
    <member name="F:System.Configuration.SettingsSerializeAs.Xml">
      <summary>La propriété de paramètres est sérialisée comme code XML à l'aide de la sérialisation XML.</summary>
    </member>
    <member name="T:System.Configuration.SettingsSerializeAsAttribute">
      <summary>Spécifie le mécanisme de sérialisation que le fournisseur de paramètres doit utiliser. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <summary>Initialise une instance de la classe <see cref="T:System.Configuration.SettingsSerializeAsAttribute" />.</summary>
      <param name="serializeAs">Valeur énumérée <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</param>
    </member>
    <member name="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <summary>Obtient la valeur d’énumération <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</summary>
      <returns>Valeur énumérée <see cref="T:System.Configuration.SettingsSerializeAs" /> qui spécifie la méthode de sérialisation.</returns>
    </member>
    <member name="T:System.Configuration.SettingValueElement">
      <summary>Contient le code XML représentant la valeur sérialisée du paramètre. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SettingValueElement" />.</summary>
    </member>
    <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <summary>Compare l’instance de <see cref="T:System.Configuration.SettingValueElement" /> actuelle à l’objet spécifié.</summary>
      <param name="settingValue">Objet à comparer.</param>
      <returns>
        <see langword="true" /> si l’instance de <see cref="T:System.Configuration.SettingValueElement" /> est égale à l’objet spécifié ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SettingValueElement.GetHashCode">
      <summary>Obtient une valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingValueElement" />.</summary>
      <returns>Valeur unique représentant l’instance actuelle de <see cref="T:System.Configuration.SettingValueElement" />.</returns>
    </member>
    <member name="P:System.Configuration.SettingValueElement.ValueXml">
      <summary>Obtient ou définit la valeur d’un objet <see cref="T:System.Configuration.SettingValueElement" /> en utilisant un objet <see cref="T:System.Xml.XmlNode" />.</summary>
      <returns>Objet <see cref="T:System.Xml.XmlNode" /> contenant la valeur d'un <see cref="T:System.Configuration.SettingElement" />.</returns>
    </member>
    <member name="T:System.Configuration.SingleTagSectionHandler">
      <summary>Gère des sections de configuration qui sont représentées par une balise XML unique dans le fichier .config.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SingleTagSectionHandler" />.</summary>
    </member>
    <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <summary>Utilisé en interne pour créer une instance de cet objet.</summary>
      <param name="parent">Parent de cet objet.</param>
      <param name="context">Contexte de cet objet.</param>
      <param name="section">Objet <see cref="T:System.Xml.XmlNode" /> de la configuration.</param>
      <returns>Gestionnaire d’objets créé.</returns>
    </member>
    <member name="T:System.Configuration.SpecialSetting">
      <summary>Spécifie la catégorie de paramètre spéciale d’une propriété de paramètres d’application.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.ConnectionString">
      <summary>La propriété de configuration représente une chaîne de connexion, en général pour un magasin de données ou une ressource réseau.</summary>
    </member>
    <member name="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <summary>La propriété de configuration représente la URL (Uniform Resource Locator) d’un service web.</summary>
    </member>
    <member name="T:System.Configuration.SpecialSettingAttribute">
      <summary>Indique qu’une propriété de paramètres d’application a une signification spéciale. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SpecialSettingAttribute" />.</summary>
      <param name="specialSetting">Valeur d'énumération <see cref="T:System.Configuration.SpecialSetting" /> définissant la catégorie de la propriété de paramètres d'application.</param>
    </member>
    <member name="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <summary>Obtient la valeur décrivant la catégorie de paramètre spéciale de la propriété de paramètres d’application.</summary>
      <returns>Valeur d'énumération <see cref="T:System.Configuration.SpecialSetting" /> définissant la catégorie de la propriété de paramètres d'application.</returns>
    </member>
    <member name="T:System.Configuration.StringValidator">
      <summary>Fournit la validation d'une chaîne.</summary>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction d’un paramètre fourni.</summary>
      <param name="minLength">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minLength">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
      <param name="maxLength">Entier qui spécifie la longueur maximale de la valeur de chaîne.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minLength">Entier qui spécifie la longueur minimale de la valeur de chaîne.</param>
      <param name="maxLength">Entier qui spécifie la longueur maximale de la valeur de chaîne.</param>
      <param name="invalidCharacters">Chaîne qui représente des caractères non valides.</param>
    </member>
    <member name="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <summary>Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à une chaîne ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.StringValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur de l’objet.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> est inférieur à <paramref name="minValue" /> ou supérieur à <paramref name="maxValue" /> tel que défini dans le constructeur.  
  
- ou - 
 <paramref name="value" /> contient des caractères non valides.</exception>
    </member>
    <member name="T:System.Configuration.StringValidatorAttribute">
      <summary>Ordonne de manière déclarative au .NET Framework d'effectuer la validation des chaînes sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.StringValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.StringValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <summary>Obtient ou définit les caractères non valides pour la propriété.</summary>
      <returns>Chaîne qui contient le jeu des caractères qui ne sont pas autorisés pour la propriété.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <summary>Obtient ou définit la longueur maximale autorisée pour la chaîne à assigner à la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.StringValidatorAttribute.MinLength" />.</exception>
      <returns>Entier qui indique la longueur maximale autorisée pour la chaîne à assigner à la propriété.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.MinLength">
      <summary>Obtient ou définit la longueur minimale autorisée pour la chaîne à assigner à la propriété.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est supérieure à <see cref="P:System.Configuration.StringValidatorAttribute.MaxLength" />.</exception>
      <returns>Entier qui indique la longueur minimale autorisée pour la chaîne à assigner à la propriété.</returns>
    </member>
    <member name="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.StringValidator" />.</summary>
      <returns>Paramètres d'un <see cref="T:System.Configuration.StringValidator" /> actuel dans une instance de validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidator">
      <summary>Vérifie qu'un objet est une classe dérivée d'un type spécifié.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SubclassTypeValidator" />.</summary>
      <param name="baseClass">Classe de base par rapport à laquelle effectuer la validation.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseClass" /> a la valeur <see langword="null" />.</exception>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <summary>Détermine si un objet peut être validé en fonction du type.</summary>
      <param name="type">Type d'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> correspond à un type qui peut être validé ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur de l’objet.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> n'appartient pas à un <see cref="T:System.Type" /> qui peut être dérivé de <paramref name="baseClass" /> comme défini dans le constructeur.</exception>
    </member>
    <member name="T:System.Configuration.SubclassTypeValidatorAttribute">
      <summary>Demande de façon déclarative au .NET Framework d’effectuer la validation sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.SubclassTypeValidatorAttribute" />.</summary>
      <param name="baseClass">Type de classe de base.</param>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <summary>Obtient le type de base de l’objet en cours de validation.</summary>
      <returns>Type de base de l'objet en cours de validation.</returns>
    </member>
    <member name="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <summary>Obtient l’instance d’attribut du validateur.</summary>
      <returns>Instance actuelle de <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesConverter">
      <summary>Convertit un intervalle de temps exprimé en minutes.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanMinutesConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <summary>Convertit un <see cref="T:System.TimeSpan" /> exprimé en minutes ou comme un intervalle de temps infini standard.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en minutes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur à convertir.</param>
      <param name="type">Type de conversion.</param>
      <returns>
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsConverter">
      <summary>Convertit un intervalle de temps exprimé en secondes.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanSecondsConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> ne peut pas être analysé en tant que valeur entière.</exception>
      <returns>
        <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en secondes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit une <see cref="T:System.TimeSpan" /> en une <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" /> en minutes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <summary>Convertit un <see cref="T:System.TimeSpan" /> exprimé en secondes ou comme un intervalle de temps infini standard.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit une <see cref="T:System.String" /> en une <see cref="T:System.TimeSpan" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>
        <see cref="F:System.TimeSpan.MaxValue" />, si le paramètre <paramref name="data" /> est la <see cref="T:System.String" /> « infini » ; sinon, <see cref="T:System.TimeSpan" /> représentant le paramètre <paramref name="data" /> en secondes.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un <see cref="T:System.TimeSpan" /> en <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur à convertir.</param>
      <param name="type">Type de conversion.</param>
      <returns>
        <see cref="T:System.String" /> « infini », si le paramètre <paramref name="value" /> est <see cref="F:System.TimeSpan.MaxValue" /> ; sinon, la <see cref="T:System.String" /> représentant le paramètre <paramref name="value" /> en secondes.</returns>
    </member>
    <member name="T:System.Configuration.TimeSpanValidator">
      <summary>Fournit la validation d’un objet <see cref="T:System.TimeSpan" />.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
      <param name="rangeIsExclusive">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" /> en fonction des paramètres fournis.</summary>
      <param name="minValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée minimale autorisée pour être validé.</param>
      <param name="maxValue">Objet <see cref="T:System.TimeSpan" /> qui spécifie la durée maximale autorisée pour être validé.</param>
      <param name="rangeIsExclusive">Valeur <see cref="T:System.Boolean" /> qui spécifie si la plage de validation est exclusive.</param>
      <param name="resolutionInSeconds">Valeur <see cref="T:System.Int64" /> qui spécifie un nombre de secondes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="resolutionInSeconds" /> est inférieur à <see langword="0" />.  
  
- ou - 
 <paramref name="minValue" /> est supérieur à <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <summary>Détermine si le type de l'objet peut être validé.</summary>
      <param name="type">Type de l'objet.</param>
      <returns>
        <see langword="true" /> si le paramètre <paramref name="type" /> respecte une valeur <see cref="T:System.TimeSpan" /> ; sinon, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <summary>Détermine si la valeur d’un objet est valide.</summary>
      <param name="value">Valeur d’un objet.</param>
    </member>
    <member name="T:System.Configuration.TimeSpanValidatorAttribute">
      <summary>Demande de façon déclarative au .NET Framework d’effectuer la validation temporelle sur une propriété de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <summary>Obtient la valeur absolue maximale autorisée.</summary>
    </member>
    <member name="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <summary>Obtient la valeur absolue minimale autorisée.</summary>
    </member>
    <member name="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TimeSpanValidatorAttribute" />.</summary>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <summary>Obtient ou définit une valeur qui indique s'il faut inclure ou exclure les entiers dans la plage telle qu'elle est définie par <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" /> et <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />.</summary>
      <returns>
        <see langword="true" /> si la valeur doit être exclue ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <summary>Obtient la valeur <see cref="T:System.TimeSpan" /> absolue maximale.</summary>
      <returns>Valeur <see cref="T:System.TimeSpan" /> maximale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <summary>Obtient ou définit la valeur <see cref="T:System.TimeSpan" /> maximale relative.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée est inférieure à <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />.</exception>
      <returns>Valeur <see cref="T:System.TimeSpan" /> maximale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <summary>Obtient la valeur <see cref="T:System.TimeSpan" /> absolue minimale.</summary>
      <returns>Valeur <see cref="T:System.TimeSpan" /> minimale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <summary>Obtient ou définit la valeur <see cref="T:System.TimeSpan" /> minimale relative.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La valeur sélectionnée représente une valeur supérieure à <see cref="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />.</exception>
      <returns>Valeur <see cref="T:System.TimeSpan" /> minimale autorisée.</returns>
    </member>
    <member name="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <summary>Obtient une instance de la classe <see cref="T:System.Configuration.TimeSpanValidator" />.</summary>
      <returns>Instance du validateur <see cref="T:System.Configuration.ConfigurationValidatorBase" />.</returns>
    </member>
    <member name="T:System.Configuration.TypeNameConverter">
      <summary>Effectue une conversion entre les valeurs de type et de chaîne. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.TypeNameConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un objet <see cref="T:System.String" /> en objet <see cref="T:System.Type" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <exception cref="T:System.ArgumentException">La valeur <see cref="T:System.Type" /> ne peut pas être résolue.</exception>
      <returns>
        <see cref="T:System.Type" /> qui représente le paramètre <paramref name="data" />.</returns>
    </member>
    <member name="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un objet <see cref="T:System.Type" /> en objet <see cref="T:System.String" />.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>
        <see cref="T:System.String" /> qui représente le paramètre <paramref name="value" />.</returns>
    </member>
    <member name="T:System.Configuration.UriSection">
      <summary>Représente la section Uri dans un fichier de configuration.</summary>
    </member>
    <member name="M:System.Configuration.UriSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UriSection" />.</summary>
    </member>
    <member name="P:System.Configuration.UriSection.Idn">
      <summary>Obtient un objet <see cref="T:System.Configuration.IdnElement" /> qui contient le paramètre de configuration du traitement des noms de domaines internationaux (IDN, International Domain Name) dans la classe <see cref="T:System.Uri" />.</summary>
      <returns>Paramètre de configuration pour le traitement des IDN (International Domain Name) dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.IriParsing">
      <summary>Obtient un objet <see cref="T:System.Configuration.IriParsingElement" /> qui contient le paramètre de configuration pour l’analyse des IRI (International Resource Identifiers) dans la classe <see cref="T:System.Uri" />.</summary>
      <returns>Paramètre de configuration pour l'analyse des IRI (International Resource Identifiers) dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Configuration.UriSection.SchemeSettings">
      <summary>Obtient un objet <see cref="T:System.Configuration.SchemeSettingElementCollection" /> qui contient les paramètres de configuration pour l’analyse du modèle dans la classe <see cref="T:System.Uri" />.</summary>
      <returns>Paramètres de configuration pour l'analyse du modèle dans la classe <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Configuration.UserScopedSettingAttribute">
      <summary>Spécifie qu’une propriété ou un groupe de paramètres d’application contient des valeurs distinctes pour chaque utilisateur d’une application. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UserScopedSettingAttribute" />.</summary>
    </member>
    <member name="T:System.Configuration.UserSettingsGroup">
      <summary>Représente un regroupement de sections de paramètres utilisateur connexes dans un fichier de configuration. Cette classe ne peut pas être héritée.</summary>
    </member>
    <member name="M:System.Configuration.UserSettingsGroup.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.UserSettingsGroup" />.</summary>
    </member>
    <member name="T:System.Configuration.ValidatorCallback">
      <summary>Représente une méthode à appeler après la validation d’un objet.</summary>
      <param name="value">Méthode de rappel.</param>
    </member>
    <member name="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <summary>Convertit une chaîne au format canonique.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.WhiteSpaceTrimStringConverter" />.</summary>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Convertit un <see cref="T:System.String" /> au format canonique.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="data">Objet <see cref="T:System.String" /> à convertir.</param>
      <returns>Objet représentant la valeur convertie.</returns>
    </member>
    <member name="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Convertit un <see cref="T:System.String" /> au format canonique.</summary>
      <param name="ctx">Objet <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> utilisé pour les conversions de type.</param>
      <param name="ci">Objet <see cref="T:System.Globalization.CultureInfo" /> utilisé pendant la conversion.</param>
      <param name="value">Valeur vers laquelle effectuer la conversion.</param>
      <param name="type">Type vers lequel effectuer la conversion.</param>
      <returns>Objet représentant la valeur convertie.</returns>
    </member>
    <member name="T:System.Drawing.Configuration.SystemDrawingSection">
      <summary>Représente la section de configuration utilisée par les classes dans l'espace de noms <see cref="N:System.Drawing" />.</summary>
    </member>
    <member name="M:System.Drawing.Configuration.SystemDrawingSection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Configuration.SystemDrawingSection" />.</summary>
    </member>
    <member name="P:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix">
      <summary>Obtient ou définit le suffixe à ajouter au nom d'un fichier indiqué par un <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> lorsqu'un assembly est déclaré avec un <see cref="T:System.Drawing.BitmapSuffixInSameAssemblyAttribute" /> ou un <see cref="T:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute" />.</summary>
      <returns>Suffixe de bitmap.</returns>
    </member>
    <member name="T:System.UriIdnScope">
      <summary>Fournit les valeurs possibles pour le paramètre de configuration de <see cref="T:System.Configuration.IdnElement" /> dans l'espace de noms <see cref="N:System.Configuration" />.</summary>
    </member>
    <member name="F:System.UriIdnScope.All">
      <summary>Cette valeur convertit tous les noms de domaine Unicode en leurs équivalents Punycode (noms IDN).</summary>
    </member>
    <member name="F:System.UriIdnScope.AllExceptIntranet">
      <summary>Cette valeur convertit tous les noms de domaine Unicode externes pour utiliser leurs équivalents Punycode (noms IDN). Dans ce cas, pour gérer des noms internationaux sur l'Intranet local, les serveurs DNS utilisés pour l'Intranet doivent prendre en charge les noms Unicode.</summary>
    </member>
    <member name="F:System.UriIdnScope.None">
      <summary>Cette valeur ne convertit aucun nom de domaine Unicode pour utiliser Punycode. Il s'agit de la valeur par défaut cohérente avec le comportement du .NET Framework 2.0.</summary>
    </member>
  </members>
</doc>