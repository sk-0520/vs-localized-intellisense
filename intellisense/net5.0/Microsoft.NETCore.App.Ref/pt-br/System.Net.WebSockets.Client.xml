<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.WebSockets.Client</name>
  </assembly>
  <members>
    <member name="T:System.Net.WebSockets.ClientWebSocket">
      <summary>Fornece um cliente para se conectar aos serviços do WebSocket.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.#ctor">
      <summary>Cria uma instância de <see cref="T:System.Net.WebSockets.ClientWebSocket" /> classe.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Abort">
      <summary>Anula a conexão e cancela as operações de E/S pendentes.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Fecha a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</summary>
      <param name="closeStatus">O status de fechamento do WebSocket.</param>
      <param name="statusDescription">Uma descrição do status de fechamento.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
      <summary>Fecha a saída da instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</summary>
      <param name="closeStatus">O status de fechamento do WebSocket.</param>
      <param name="statusDescription">Uma descrição do status de fechamento.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
      <summary>Conecta a um servidor WebSocket como uma operação assíncrona.</summary>
      <param name="uri">O URI do servidor WebSocket ao qual se deve conectar.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que a operação deve ser cancelada.</param>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.Dispose">
      <summary>Libera os recursos não gerenciados usados pela instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
      <summary>Recebe dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</summary>
      <param name="buffer">O buffer que recebe a resposta.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> não está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechado.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>Recebe dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</summary>
      <param name="buffer">A região da memória a receber a resposta.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> não está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechado.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envia dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> como uma operação assíncrona.</summary>
      <param name="buffer">O buffer que contém a mensagem a ser enviada.</param>
      <param name="messageType">Um dos valores da enumeração que especifica se o buffer é de texto não criptografado ou em um formato binário.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar que este é o envio assíncrono final; caso contrário, <see langword="false" />.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> não está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechado.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
      <summary>Envia dados no <see cref="T:System.Net.WebSockets.ClientWebSocket" /> de um intervalo de memória de bytes somente leitura como uma operação assíncrona.</summary>
      <param name="buffer">A região de memória que contém a mensagem a ser enviada.</param>
      <param name="messageType">Um dos valores da enumeração que especifica se o buffer é de texto não criptografado ou em um formato binário.</param>
      <param name="endOfMessage">
        <see langword="true" /> para indicar que este é o envio assíncrono final; caso contrário, <see langword="false" />.</param>
      <param name="cancellationToken">Um token de cancelamento usado para propagar a notificação de que essa operação deve ser cancelada.</param>
      <exception cref="T:System.InvalidOperationException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> não está conectado.</exception>
      <exception cref="T:System.ObjectDisposedException">O <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechado.</exception>
      <returns>O objeto de tarefa que representa a operação assíncrona.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatus">
      <summary>Obtém o motivo pelo qual o handshake de fechamento foi iniciado na instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>O motivo pelo qual o handshake de fechamento foi iniciado.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription">
      <summary>Obtém uma descrição do motivo pelo qual a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" /> foi fechada.</summary>
      <returns>A descrição do motivo pelo qual a <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instância foi fechada.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.Options">
      <summary>Obtém as opções do WebSocket para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>As opções do WebSocket para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.State">
      <summary>Obtém o estado do WebSocket da instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>O estado do WebSocket da <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instância.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocket.SubProtocol">
      <summary>Obtém o subprotocolo WebSocket com suporte para a instância <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
      <returns>O subprotocolo WebSocket com suporte.</returns>
    </member>
    <member name="T:System.Net.WebSockets.ClientWebSocketOptions">
      <summary>Opções a serem usadas com um objeto <see cref="T:System.Net.WebSockets.ClientWebSocket" />.</summary>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
      <summary>Adiciona um subprotocolo a ser negociado durante o handshake de conexão do WebSocket.</summary>
      <param name="subProtocol">O subprotocolo WebSocket a ser adicionado.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)">
      <summary>Define os parâmetros de buffer do cliente.</summary>
      <param name="receiveBufferSize">O tamanho, em bytes, do buffer de recepção do cliente.</param>
      <param name="sendBufferSize">O tamanho, em bytes, do buffer de envio do cliente.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})">
      <summary>Define parâmetros de buffer do cliente.</summary>
      <param name="receiveBufferSize">O tamanho, em bytes, do buffer de recepção do cliente.</param>
      <param name="sendBufferSize">O tamanho, em bytes, do buffer de envio do cliente.</param>
      <param name="buffer">O buffer de recebimento a ser usado.</param>
    </member>
    <member name="M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)">
      <summary>Cria um cabeçalho de solicitação HTTP e seu valor.</summary>
      <param name="headerName">O nome do cabeçalho HTTP.</param>
      <param name="headerValue">O valor do cabeçalho HTTP.</param>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates">
      <summary>Obtém ou define uma coleção de certificados do lado do cliente.</summary>
      <returns>Uma coleção de certificados do lado do cliente.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Cookies">
      <summary>Obtém ou define os cookies associados à solicitação.</summary>
      <returns>Os cookies associados à solicitação.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Credentials">
      <summary>Obtém ou define as informações de credencial para o cliente.</summary>
      <returns>As informações de credencial do cliente.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval">
      <summary>Obtém ou define o intervalo keep-alive do protocolo WebSocket.</summary>
      <returns>O intervalo de Keep-Alive do protocolo WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.Proxy">
      <summary>Obtém ou define o proxy para solicitações WebSocket.</summary>
      <returns>O proxy para solicitações do WebSocket.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.RemoteCertificateValidationCallback">
      <summary>Obtém ou define o retorno de chamada para validar um certificado do servidor.</summary>
      <returns>Uma função de retorno de chamada para validar o certificado do servidor.</returns>
    </member>
    <member name="P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials">
      <summary>Obtém ou define um valor de <see cref="T:System.Boolean" /> que indica se credenciais padrão devem ser usadas durante o handshake do WebSocket.</summary>
      <returns>
        <see langword="true" /> Se as credenciais padrão devem ser usadas durante o handshake do WebSocket; caso contrário, <see langword="false" /> . O padrão é <see langword="true" />.</returns>
    </member>
  </members>
</doc>