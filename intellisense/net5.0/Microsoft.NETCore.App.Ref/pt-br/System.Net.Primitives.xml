<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Primitives</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationSchemes">
      <summary>Especifica os protocolos de autenticação.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Anonymous">
      <summary>Especifica autenticação anônima.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Basic">
      <summary>Especifica autenticação básica.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Digest">
      <summary>Especifica a autenticação Digest.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.IntegratedWindowsAuthentication">
      <summary>Especifica autenticação do Windows.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Negotiate">
      <summary>Negocia com o cliente para determinar o esquema de autenticação. Se o cliente e o servidor oferecem suporte ao Kerberos, ele é usado; caso contrário, o NTLM é usado.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.None">
      <summary>Nenhuma autenticação é permitida. Um cliente solicita um <see cref="T:System.Net.HttpListener" /> objeto com esse sinalizador definido sempre receberá status 403 Proibido. Use esse sinalizador quando um recurso nunca deve ser atendido para um cliente.</summary>
    </member>
    <member name="F:System.Net.AuthenticationSchemes.Ntlm">
      <summary>Especifica autenticação NTLM.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCacheLevel">
      <summary>Especifica o comportamento de cache para recursos obtidos usando <see cref="T:System.Net.WebRequest" /> e suas classes derivadas.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.BypassCache">
      <summary>Atende a uma solicitação usando o servidor. Nenhuma entrada é retirada, adicionada ou removida dos caches entre o cliente e o servidor. Esse é o comportamento de cache padrão especificado no arquivo de configuração do computador fornecido com o .NET Framework.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheIfAvailable">
      <summary>Atende a uma solicitação para um recurso do cache se o recurso estiver disponível; caso contrário, enviará uma solicitação para um recurso ao servidor. Se o item solicitado estiver disponível em qualquer cache entre o cliente e o servidor, a solicitação poderá ser atendida pelo cache intermediário.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.CacheOnly">
      <summary>Atende a uma solicitação usando o recurso armazenado localmente em cache; não envia uma solicitação para um item que não está no cache. Ao se especificar esse nível de política de cache, uma exceção <see cref="T:System.Net.WebException" /> será lançada se o item não estiver no cache do cliente.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Default">
      <summary>Atende a uma solicitação para um recurso usando a cópia em cache do recurso ou enviando uma solicitação para o recurso ao servidor. A ação adotada é determinada pela política de cache em vigor e o tempo decorrido do conteúdo no cache. Esse é o nível de cache que deve ser usado pela maioria dos aplicativos.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.NoCacheNoStore">
      <summary>Nunca atende a uma solicitação usando os recursos do cache e não armazena os recursos em cache. Se o recurso estiver presente no cache local, ele será removido. Esse nível de política indica aos caches intermediários que eles devem remover o recurso. No protocolo de cache HTTP, isso é feito usando a diretiva de controle de cache <see langword="no-cache" />.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Reload">
      <summary>Atende a uma solicitação usando o servidor. A resposta pode ser salva no cache. No protocolo de cache HTTP, isso é feito usando a diretiva de controle de cache <see langword="no-cache" /> e o cabeçalho <see langword="Pragma" /> sem cache.</summary>
    </member>
    <member name="F:System.Net.Cache.RequestCacheLevel.Revalidate">
      <summary>Atende a uma solicitação usando a cópia do recurso armazenada em cache se o carimbo de data/hora for igual ao do recurso no servidor; caso contrário, o recurso será baixado do servidor, apresentado ao chamador e armazenado no cache.</summary>
    </member>
    <member name="T:System.Net.Cache.RequestCachePolicy">
      <summary>Define os requisitos de cache de um aplicativo para os recursos obtidos usando objetos <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cache.RequestCachePolicy" />.</summary>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.#ctor(System.Net.Cache.RequestCacheLevel)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cache.RequestCachePolicy" />. usando a política de cache especificada.</summary>
      <param name="level">Um <see cref="T:System.Net.Cache.RequestCacheLevel" /> que especifica o comportamento do cache para recursos obtidos usando objetos <see cref="T:System.Net.WebRequest" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">nível não é um valor <see cref="T:System.Net.Cache.RequestCacheLevel" /> válido.</exception>
    </member>
    <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
      <summary>Retorna uma representação de cadeia de caracteres dessa instância.</summary>
      <returns>Um <see cref="T:System.String" /> que contém o <see cref="P:System.Net.Cache.RequestCachePolicy.Level" /> para essa instância.</returns>
    </member>
    <member name="P:System.Net.Cache.RequestCachePolicy.Level">
      <summary>Obtém o valor <see cref="T:System.Net.Cache.RequestCacheLevel" /> especificado quando essa instância foi construída.</summary>
      <returns>Um valor <see cref="T:System.Net.Cache.RequestCacheLevel" /> que especifica o comportamento de cache para recursos obtidos usando objetos <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="T:System.Net.Cookie">
      <summary>Fornece um conjunto de propriedades e métodos que são usados para gerenciar cookies. Essa classe não pode ser herdada.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cookie" /> com o <see cref="P:System.Net.Cookie.Name" /> e o <see cref="P:System.Net.Cookie.Value" /> especificados.</summary>
      <param name="name">O nome de um <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="name" />: sinal de igual, ponto-e-vírgula, vírgula, nova linha (\n), retorno (\r), guia (\t) e caractere de espaço. O caractere de cifrão ("$") não pode ser o primeiro caractere.</param>
      <param name="value">O valor de um <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="value" />: ponto-e-vírgula, vírgula.</param>
      <exception cref="T:System.Net.CookieException">O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="name" /> é de tamanho zero.  
  
- ou - 
O parâmetro <paramref name="name" /> contém um caractere inválido.  
  
- ou - 
O parâmetro <paramref name="value" /> é <see langword="null" />.  
  
-ou- 
O parâmetro <paramref name="value" /> contém uma cadeia de caracteres fora de aspas que contém um caractere inválido.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cookie" /> com o <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" /> e <see cref="P:System.Net.Cookie.Path" /> especificados.</summary>
      <param name="name">O nome de um <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="name" />: sinal de igual, ponto-e-vírgula, vírgula, nova linha (\n), retorno (\r), guia (\t) e caractere de espaço. O caractere de cifrão ("$") não pode ser o primeiro caractere.</param>
      <param name="value">O valor de um <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="value" />: ponto-e-vírgula, vírgula.</param>
      <param name="path">O subconjunto de URIs no servidor de origem ao qual este <see cref="T:System.Net.Cookie" /> se aplica. O valor padrão é "/".</param>
      <exception cref="T:System.Net.CookieException">O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="name" /> é de tamanho zero.  
  
- ou - 
O parâmetro <paramref name="name" /> contém um caractere inválido.  
  
- ou - 
O parâmetro <paramref name="value" /> é <see langword="null" />.  
  
-ou- 
O parâmetro <paramref name="value" /> contém uma cadeia de caracteres fora de aspas que contém um caractere inválido.</exception>
    </member>
    <member name="M:System.Net.Cookie.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Cookie" /> com o <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" /> e <see cref="P:System.Net.Cookie.Domain" /> especificados.</summary>
      <param name="name">O nome de um <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="name" />: sinal de igual, ponto-e-vírgula, vírgula, nova linha (\n), retorno (\r), guia (\t) e caractere de espaço. O caractere de cifrão ("$") não pode ser o primeiro caractere.</param>
      <param name="value">O valor de um objeto <see cref="T:System.Net.Cookie" />. Os seguintes caracteres não devem ser usados dentro de <paramref name="value" />: ponto-e-vírgula, vírgula.</param>
      <param name="path">O subconjunto de URIs no servidor de origem ao qual este <see cref="T:System.Net.Cookie" /> se aplica. O valor padrão é "/".</param>
      <param name="domain">O domínio da Internet opcional para o qual este <see cref="T:System.Net.Cookie" /> é válido. O valor padrão é o host do qual este <see cref="T:System.Net.Cookie" /> foi recebido.</param>
      <exception cref="T:System.Net.CookieException">O parâmetro <paramref name="name" /> é <see langword="null" />.  
  
- ou - 
O parâmetro <paramref name="name" /> é de tamanho zero.  
  
- ou - 
O parâmetro <paramref name="name" /> contém um caractere inválido.  
  
- ou - 
O parâmetro <paramref name="value" /> é <see langword="null" />.  
  
-ou- 
O parâmetro <paramref name="value" /> contém uma cadeia de caracteres fora de aspas que contém um caractere inválido.</exception>
    </member>
    <member name="M:System.Net.Cookie.Equals(System.Object)">
      <summary>Substitui o método <see cref="M:System.Object.Equals(System.Object)" />.</summary>
      <param name="comparand">Uma referência a um <see cref="T:System.Net.Cookie" />.</param>
      <returns>Retorna <see langword="true" /> se o <see cref="T:System.Net.Cookie" /> é igual a <paramref name="comparand" />. Duas instâncias <see cref="T:System.Net.Cookie" /> serão iguais se suas propriedades <see cref="P:System.Net.Cookie.Name" />, <see cref="P:System.Net.Cookie.Value" />, <see cref="P:System.Net.Cookie.Path" />, <see cref="P:System.Net.Cookie.Domain" /> e <see cref="P:System.Net.Cookie.Version" /> forem iguais. As comparações de cadeias de caracteres <see cref="P:System.Net.Cookie.Name" /> e <see cref="P:System.Net.Cookie.Domain" /> diferenciam maiúsculas de minúsculas.</returns>
    </member>
    <member name="M:System.Net.Cookie.GetHashCode">
      <summary>Substitui o método <see cref="M:System.Object.GetHashCode" />.</summary>
      <returns>O código hash de inteiro com sinal de 32 bits para essa instância.</returns>
    </member>
    <member name="M:System.Net.Cookie.ToString">
      <summary>Substitui o método <see cref="M:System.Object.ToString" />.</summary>
      <returns>Retorna uma representação de cadeia de caracteres desse objeto <see cref="T:System.Net.Cookie" /> adequado para inclusão em um Cookie HTTP: cabeçalho de solicitação.</returns>
    </member>
    <member name="P:System.Net.Cookie.Comment">
      <summary>Obtém ou define um comentário que o servidor pode adicionar a um <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Um comentário opcional para documentar o uso pretendido para isso <see cref="T:System.Net.Cookie" /> .</returns>
    </member>
    <member name="P:System.Net.Cookie.CommentUri">
      <summary>Obtém ou define um comentário de URI que o servidor pode fornecer com um <see cref="T:System.Net.Cookie" />.</summary>
      <returns>Um comentário opcional que representa o uso pretendido da referência de URI para isso <see cref="T:System.Net.Cookie" /> . O valor deve estar em conformidade com o formato URI.</returns>
    </member>
    <member name="P:System.Net.Cookie.Discard">
      <summary>Obtém ou define o sinalizador de descarte definido pelo servidor.</summary>
      <returns>
        <see langword="true" /> se o cliente deve descartar o <see cref="T:System.Net.Cookie" /> no final da sessão atual, caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Domain">
      <summary>Obtém ou define o URI para o qual o <see cref="T:System.Net.Cookie" /> é válido.</summary>
      <returns>O URI para o qual o <see cref="T:System.Net.Cookie" /> é válido.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expired">
      <summary>Obtém ou define o estado atual do <see cref="T:System.Net.Cookie" />.</summary>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Net.Cookie" /> tiver expirado; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Expires">
      <summary>Obtém ou define a data e hora de expiração para o <see cref="T:System.Net.Cookie" /> como <see cref="T:System.DateTime" />.</summary>
      <returns>A data e a hora de expiração para o <see cref="T:System.Net.Cookie" /> como uma instância <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.HttpOnly">
      <summary>Determina se um script de página ou outro conteúdo ativo pode acessar esse cookie.</summary>
      <returns>Valor booliano que determina se um script de página ou outro conteúdo ativo pode acessar esse cookie.</returns>
    </member>
    <member name="P:System.Net.Cookie.Name">
      <summary>Obtém ou define o nome do <see cref="T:System.Net.Cookie" />.</summary>
      <exception cref="T:System.Net.CookieException">O valor especificado para uma operação de conjuntos é <see langword="null" /> ou uma cadeia de caracteres vazia 
- ou - 
O valor especificado para uma operação definida continha um caractere inválido. Os seguintes caracteres não devem ser usados dentro da propriedade <see cref="P:System.Net.Cookie.Name" />: sinal de igual, ponto-e-vírgula, vírgula, nova linha (\n), retorno (\r), guia (\t) e caractere de espaço. O caractere de cifrão ("$") não pode ser o primeiro caractere.</exception>
      <returns>O nome da <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Path">
      <summary>Obtém ou define os URIs aos quais o <see cref="T:System.Net.Cookie" /> se aplica.</summary>
      <returns>Os URIs aos quais o <see cref="T:System.Net.Cookie" /> se aplica.</returns>
    </member>
    <member name="P:System.Net.Cookie.Port">
      <summary>Obtém ou define uma lista de portas TCP às quais <see cref="T:System.Net.Cookie" /> se aplica.</summary>
      <exception cref="T:System.Net.CookieException">O valor especificado para uma operação de conjuntos não pode ser analisado ou não está entre aspas duplas.</exception>
      <returns>A lista de portas TCP às quais o <see cref="T:System.Net.Cookie" /> se aplica.</returns>
    </member>
    <member name="P:System.Net.Cookie.Secure">
      <summary>Obtém ou define o nível da segurança de um <see cref="T:System.Net.Cookie" />.</summary>
      <returns>
        <see langword="true" /> se o cliente somente retornar o cookie em solicitações subsequentes se essas solicitações usarem o protocolo HTTPS; caso contrário, <see langword="false" />. O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.TimeStamp">
      <summary>Obtém a hora em que o cookie foi emitido como um <see cref="T:System.DateTime" />.</summary>
      <returns>A hora em que o cookie foi emitido como um <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Value">
      <summary>Obtém ou define o <see cref="P:System.Net.Cookie.Value" /> do <see cref="T:System.Net.Cookie" />.</summary>
      <returns>O <see cref="P:System.Net.Cookie.Value" /> para o <see cref="T:System.Net.Cookie" />.</returns>
    </member>
    <member name="P:System.Net.Cookie.Version">
      <summary>Obtém ou define a versão de manutenção do estado de HTTP que o cookie cumpre.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor especificado para uma versão não é permitido.</exception>
      <returns>A versão de manutenção do estado de HTTP que o cookie cumpre.</returns>
    </member>
    <member name="T:System.Net.CookieCollection">
      <summary>Fornece um contêiner de coleção para instâncias da classe <see cref="T:System.Net.Cookie" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
      <summary>Adiciona um <see cref="T:System.Net.Cookie" /> a um <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie">O <see cref="T:System.Net.Cookie" /> a ser adicionado a um <see cref="T:System.Net.CookieCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
      <summary>Adiciona o conteúdo de um <see cref="T:System.Net.CookieCollection" /> à instância atual.</summary>
      <param name="cookies">O <see cref="T:System.Net.CookieCollection" /> a ser adicionado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.Clear">
      <summary>Remove todos os elementos do objeto <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="M:System.Net.CookieCollection.Contains(System.Net.Cookie)">
      <summary>Determina se o cookie especificado está no <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie">O cookie a ser localizado no <see cref="T:System.Net.CookieCollection" />.</param>
      <returns>
        <see langword="true" /> se o cookie especificado estiver no <see cref="T:System.Net.CookieCollection" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copia os elementos de um <see cref="T:System.Net.CookieCollection" /> para a matriz especificada, começando em um índice específico.</summary>
      <param name="array">A matriz de destino para qual o <see cref="T:System.Net.CookieCollection" /> será copiado.</param>
      <param name="index">O índice baseado em zero na matriz de destino em que a cópia é iniciada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  
  
- ou - 
O número de elementos neste <see cref="T:System.Net.CookieCollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">Os elementos nesse <see cref="T:System.Net.CookieCollection" /> não podem ser automaticamente convertidos para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.CopyTo(System.Net.Cookie[],System.Int32)">
      <summary>Copia os elementos desse <see cref="T:System.Net.CookieCollection" /> para uma matriz <see cref="T:System.Net.Cookie" /> começando no índice especificado da matriz de destino.</summary>
      <param name="array">A matriz <see cref="T:System.Net.Cookie" /> de destino para qual o <see cref="T:System.Net.CookieCollection" /> será copiado.</param>
      <param name="index">O índice baseado em zero na matriz de destino em que a cópia é iniciada.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  
  
- ou - 
O número de elementos neste <see cref="T:System.Net.CookieCollection" /> é maior do que o espaço disponível de <paramref name="index" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">Os elementos nesse <see cref="T:System.Net.CookieCollection" /> não podem ser automaticamente convertidos para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Net.CookieCollection.GetEnumerator">
      <summary>Obtém um enumerador que pode iterar por uma <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para essa coleção.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.Remove(System.Net.Cookie)">
      <summary>Remove o cookie especificado do <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="cookie">O cookie a ser removido do <see cref="T:System.Net.CookieCollection" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="cookie" /> tiver sido removido com êxito do <see cref="T:System.Net.CookieCollection" />; caso contrário, <see langword="false" />. Esse método também retornará <see langword="false" /> se o item não for encontrado na coleção original.</returns>
    </member>
    <member name="M:System.Net.CookieCollection.System#Collections#Generic#IEnumerable{System#Net#Cookie}#GetEnumerator">
      <summary>Obtém um enumerador que pode iterar pelo <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> para essa coleção.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Count">
      <summary>Obtém o número de cookies contidos em um <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>O número de cookies contidos em um <see cref="T:System.Net.CookieCollection" /> .</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsReadOnly">
      <summary>Obtém um valor que indica se um <see cref="T:System.Net.CookieCollection" /> é somente leitura.</summary>
      <returns>
        <see langword="true" /> Se for somente leitura <see cref="T:System.Net.CookieCollection" /> ; caso contrário, <see langword="false" /> . O padrão é <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.IsSynchronized">
      <summary>Obtém um valor que indica se o acesso a um <see cref="T:System.Net.CookieCollection" /> é thread-safe.</summary>
      <returns>
        <see langword="true" /> Se o acesso ao <see cref="T:System.Net.CookieCollection" /> thread for seguro; caso contrário, <see langword="false" /> . O padrão é <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Net.Cookie" /> com um índice específico de um <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="index">O índice baseado em zero do <see cref="T:System.Net.Cookie" /> a ser encontrado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que 0 ou <paramref name="index" /> é maior ou igual a <see cref="P:System.Net.CookieCollection.Count" />.</exception>
      <returns>Um <see cref="T:System.Net.Cookie" /> com um índice específico de um <see cref="T:System.Net.CookieCollection" /> .</returns>
    </member>
    <member name="P:System.Net.CookieCollection.Item(System.String)">
      <summary>Obtém o <see cref="T:System.Net.Cookie" /> com um nome específico de um <see cref="T:System.Net.CookieCollection" />.</summary>
      <param name="name">O nome do <see cref="T:System.Net.Cookie" /> a ser localizado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> é <see langword="null" />.</exception>
      <returns>O <see cref="T:System.Net.Cookie" /> com um nome específico de um <see cref="T:System.Net.CookieCollection" />.</returns>
    </member>
    <member name="P:System.Net.CookieCollection.SyncRoot">
      <summary>Obtém um objeto para sincronizar o acesso ao <see cref="T:System.Net.CookieCollection" />.</summary>
      <returns>Um objeto para sincronizar o acesso ao <see cref="T:System.Net.CookieCollection" /> .</returns>
    </member>
    <member name="T:System.Net.CookieContainer">
      <summary>Fornece um contêiner para uma coleção de objetos <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLengthLimit">
      <summary>Representa o tamanho máximo padrão, em bytes, das instâncias <see cref="T:System.Net.Cookie" /> que o <see cref="T:System.Net.CookieContainer" /> pode conter. Este campo é constante.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultCookieLimit">
      <summary>Representa o número máximo padrão de instâncias <see cref="T:System.Net.Cookie" /> que o <see cref="T:System.Net.CookieContainer" /> pode conter. Este campo é constante.</summary>
    </member>
    <member name="F:System.Net.CookieContainer.DefaultPerDomainCookieLimit">
      <summary>Representa o número máximo padrão de instâncias <see cref="T:System.Net.Cookie" /> que o <see cref="T:System.Net.CookieContainer" /> pode referenciar por domínio. Este campo é constante.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieContainer" /> com um valor especificado para o número de instâncias <see cref="T:System.Net.Cookie" /> que o contêiner pode conter.</summary>
      <param name="capacity">O número de instâncias <see cref="T:System.Net.Cookie" /> que o <see cref="T:System.Net.CookieContainer" /> pode conter.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="capacity" /> é menor que ou igual a zero.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieContainer" /> com propriedades específicas.</summary>
      <param name="capacity">O número de instâncias <see cref="T:System.Net.Cookie" /> que o <see cref="T:System.Net.CookieContainer" /> pode conter.</param>
      <param name="perDomainCapacity">O número de instâncias <see cref="T:System.Net.Cookie" /> por domínio.</param>
      <param name="maxCookieSize">O tamanho máximo em bytes para qualquer <see cref="T:System.Net.Cookie" /> único em um <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="perDomainCapacity" /> não é igual a <see cref="F:System.Int32.MaxValue" />.  
  
e 
 <paramref name="(perDomainCapacity" /> é menor ou igual a zero ou <paramref name="perDomainCapacity" /> é maior que <paramref name="capacity)" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="maxCookieSize" /> é menor que ou igual a zero.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
      <summary>Adiciona um <see cref="T:System.Net.Cookie" /> a um <see cref="T:System.Net.CookieContainer" />. Esse método usa o domínio do <see cref="T:System.Net.Cookie" /> para determinar à qual coleção de domínio o <see cref="T:System.Net.Cookie" /> deve ser associado.</summary>
      <param name="cookie">O <see cref="T:System.Net.Cookie" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookie" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O domínio de <paramref name="cookie" /> é <see langword="null" /> ou uma cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> é maior que <paramref name="maxCookieSize" />.  
  
- ou - 
o domínio de <paramref name="cookie" /> não é um URI válido.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
      <summary>Adiciona o conteúdo de um <see cref="T:System.Net.CookieCollection" /> ao <see cref="T:System.Net.CookieContainer" />.</summary>
      <param name="cookies">O <see cref="T:System.Net.CookieCollection" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> é <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
      <summary>Adiciona um <see cref="T:System.Net.Cookie" /> ao <see cref="T:System.Net.CookieContainer" /> para um URI específico.</summary>
      <param name="uri">O URI do <see cref="T:System.Net.Cookie" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookie">O <see cref="T:System.Net.Cookie" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="uri" /> é <see langword="null" /> ou o <paramref name="cookie" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException">
        <paramref name="cookie" /> é maior que <paramref name="maxCookieSize" />.  
  
- ou - 
O domínio para <paramref name="cookie" /> não é um URI válido.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
      <summary>Adiciona o conteúdo de um <see cref="T:System.Net.CookieCollection" /> ao <see cref="T:System.Net.CookieContainer" /> para um URI específico.</summary>
      <param name="uri">O URI do <see cref="T:System.Net.CookieCollection" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <param name="cookies">O <see cref="T:System.Net.CookieCollection" /> a ser adicionado ao <see cref="T:System.Net.CookieContainer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="cookies" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">O domínio para um dos cookies em <paramref name="cookies" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException">Um dos cookies no <paramref name="cookies" /> contém um domínio inválido.</exception>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
      <summary>Obtém o cabeçalho de cookie HTTP que contém os cookies HTTP que representam as instâncias <see cref="T:System.Net.Cookie" /> que estão associadas a um URI específico.</summary>
      <param name="uri">O URI das instâncias do <see cref="T:System.Net.Cookie" /> desejadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
      <returns>Um cabeçalho de cookie HTTP, com cadeias de caracteres que representam <see cref="T:System.Net.Cookie" /> instâncias delimitadas por ponto e vírgula.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
      <summary>Obtém um <see cref="T:System.Net.CookieCollection" /> que contém as instâncias do <see cref="T:System.Net.Cookie" /> associadas a um URI específico.</summary>
      <param name="uri">O URI das instâncias do <see cref="T:System.Net.Cookie" /> desejadas.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Net.CookieCollection" /> que contém as instâncias do <see cref="T:System.Net.Cookie" /> associadas a um URI específico.</returns>
    </member>
    <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
      <summary>Adiciona instâncias de <see cref="T:System.Net.Cookie" /> para um ou mais cookies de um cabeçalho de cookie HTTP para o <see cref="T:System.Net.CookieContainer" /> para um URI específico.</summary>
      <param name="uri">O URI da <see cref="T:System.Net.CookieCollection" />.</param>
      <param name="cookieHeader">O conteúdo de um cabeçalho HTTP set-cookie retornado por um servidor HTTP, com instâncias de <see cref="T:System.Net.Cookie" /> delimitadas por vírgula.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ou <paramref name="cookieHeader" /> é <see langword="null" />.</exception>
      <exception cref="T:System.Net.CookieException">Um dos cookies é inválido.  
  
 - ou -  
  
 Ocorreu um erro ao adicionar um dos cookies no contêiner.</exception>
    </member>
    <member name="P:System.Net.CookieContainer.Capacity">
      <summary>Obtém ou define o número de instâncias de <see cref="T:System.Net.Cookie" /> que um <see cref="T:System.Net.CookieContainer" /> pode conter.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Capacity" /> é menor ou igual a zero ou (o valor é menor que <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> e <see cref="P:System.Net.CookieContainer.PerDomainCapacity" /> não é igual a <see cref="F:System.Int32.MaxValue" />).</exception>
      <returns>O número de <see cref="T:System.Net.Cookie" /> instâncias que um <see cref="T:System.Net.CookieContainer" /> pode conter. Esse é um limite rígido e não pode ser excedido com a adição de um <see cref="T:System.Net.Cookie" /> .</returns>
    </member>
    <member name="P:System.Net.CookieContainer.Count">
      <summary>Obtém o número de instâncias <see cref="T:System.Net.Cookie" /> que um <see cref="T:System.Net.CookieContainer" /> contém no momento.</summary>
      <returns>O número de <see cref="T:System.Net.Cookie" /> instâncias que um <see cref="T:System.Net.CookieContainer" /> atualmente contém. Este é o total de <see cref="T:System.Net.Cookie" /> instâncias em todos os domínios.</returns>
    </member>
    <member name="P:System.Net.CookieContainer.MaxCookieSize">
      <summary>Representa o comprimento máximo permitido de um <see cref="T:System.Net.Cookie" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="MaxCookieSize" /> é menor que ou igual a zero.</exception>
      <returns>O comprimento máximo permitido, em bytes, de um <see cref="T:System.Net.Cookie" /> .</returns>
    </member>
    <member name="P:System.Net.CookieContainer.PerDomainCapacity">
      <summary>Obtém ou define o número de instâncias <see cref="T:System.Net.Cookie" /> que um <see cref="T:System.Net.CookieContainer" /> pode conter por domínio.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="PerDomainCapacity" /> é menor que ou igual a zero.  
  
- ou - 
 <paramref name="(PerDomainCapacity" /> é maior que o número máximo permitido de instâncias de cookies, 300, e não é igual a <see cref="F:System.Int32.MaxValue" />).</exception>
      <returns>O número de <see cref="T:System.Net.Cookie" /> instâncias permitidas por domínio.</returns>
    </member>
    <member name="T:System.Net.CookieException">
      <summary>A exceção que é gerada quando ocorre um erro ao adicionar um <see cref="T:System.Net.Cookie" /> a um <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieException" />.</summary>
    </member>
    <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.CookieException" /> com valores específicos de <paramref name="serializationInfo" /> e <paramref name="streamingContext" />.</summary>
      <param name="serializationInfo">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado.</param>
      <param name="streamingContext">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> a ser usado.</param>
    </member>
    <member name="M:System.Net.CookieException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula uma instância de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o <see cref="T:System.Net.CookieException" />.</summary>
      <param name="serializationInfo">O objeto que mantém os dados de objeto serializados. O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser preenchido com dados.</param>
      <param name="streamingContext">As informações contextuais sobre a origem ou o destino. Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que especifica o destino dessa serialização.</param>
    </member>
    <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Popula uma instância de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> com os dados necessários para serializar o <see cref="T:System.Net.CookieException" />.</summary>
      <param name="serializationInfo">O <see cref="T:System.Runtime.Serialization.SerializationInfo" /> a ser usado.</param>
      <param name="streamingContext">O <see cref="T:System.Runtime.Serialization.StreamingContext" /> a ser usado.</param>
    </member>
    <member name="T:System.Net.CredentialCache">
      <summary>Fornece armazenamento para várias credenciais.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.CredentialCache" />.</summary>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
      <summary>Adiciona uma instância <see cref="T:System.Net.NetworkCredential" /> para ser usada com o SMTP para o cache de credencial e a associa a um computador host, porta e protocolo de autenticação. Credenciais adicionadas ao usar esse método são válidas somente para SMTP. Esse método não funciona para solicitações HTTP ou FTP.</summary>
      <param name="host">Um <see cref="T:System.String" /> que identifica o computador host.</param>
      <param name="port">Um <see cref="T:System.Int32" /> que especifica a porta para conectar-se no <paramref name="host" />.</param>
      <param name="authenticationType">Um <see cref="T:System.String" /> que identifica o esquema de autenticação usado ao conectar-se ao <paramref name="host" /> usando <paramref name="cred" />.</param>
      <param name="credential">O <see cref="T:System.Net.NetworkCredential" /> para adicionar o cache de credencial.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="authType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> não é um valor aceito.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que zero.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
      <summary>Adiciona uma instância <see cref="T:System.Net.NetworkCredential" /> ao cache de credencial para uso com protocolos diferentes do SMTP e a associa a um prefixo URI (Uniform Resource Identifier) e protocolo de autenticação.</summary>
      <param name="uriPrefix">Um <see cref="T:System.Uri" /> que especifica o prefixo URI dos recursos aos quais a credencial concede acesso.</param>
      <param name="authType">O esquema de autenticação usado pelo recurso nomeado no <paramref name="uriPrefix" />.</param>
      <param name="cred">O <see cref="T:System.Net.NetworkCredential" /> para adicionar o cache de credencial.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="authType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">As mesmas credenciais são adicionadas mais de uma vez.</exception>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
      <summary>Retorna a instância <see cref="T:System.Net.NetworkCredential" /> associada ao host, a porta e o protocolo de autenticação especificados.</summary>
      <param name="host">Um <see cref="T:System.String" /> que identifica o computador host.</param>
      <param name="port">Um <see cref="T:System.Int32" /> que especifica a porta para conectar-se no <paramref name="host" />.</param>
      <param name="authenticationType">Um <see cref="T:System.String" /> que identifica o esquema de autenticação usado ao conectar-se ao <paramref name="host" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> é <see langword="null" />.  
  
- ou - 
 <paramref name="authType" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="authType" /> não é um valor aceito.  
  
- ou - 
 <paramref name="host" /> é igual à cadeia de caracteres vazia ("").</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que zero.</exception>
      <returns>Um <see cref="T:System.Net.NetworkCredential" /> ou, se não houver nenhuma credencial correspondente no cache, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
      <summary>Retorna a instância <see cref="T:System.Net.NetworkCredential" /> associada ao URI (Uniform Resource Identifier) e ao tipo de autenticação especificados.</summary>
      <param name="uriPrefix">Um <see cref="T:System.Uri" /> que especifica o prefixo URI dos recursos aos quais a credencial concede acesso.</param>
      <param name="authType">O esquema de autenticação usado pelo recurso nomeado no <paramref name="uriPrefix" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uriPrefix" /> ou <paramref name="authType" /> é <see langword="null" />.</exception>
      <returns>Um <see cref="T:System.Net.NetworkCredential" /> ou, se não houver nenhuma credencial correspondente no cache, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.GetEnumerator">
      <summary>Retorna um enumerador que pode ser iterado por meio da instância <see cref="T:System.Net.CredentialCache" />.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> para o <see cref="T:System.Net.CredentialCache" />.</returns>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)">
      <summary>Exclui uma instância de <see cref="T:System.Net.NetworkCredential" /> do cache se ela estiver associada ao protocolo de autenticação, porta ou host especificado.</summary>
      <param name="host">Um <see cref="T:System.String" /> que identifica o computador host.</param>
      <param name="port">Um <see cref="T:System.Int32" /> que especifica a porta para conectar-se no <paramref name="host" />.</param>
      <param name="authenticationType">Um <see cref="T:System.String" /> que identifica o esquema de autenticação usado ao conectar-se ao <paramref name="host" />.</param>
    </member>
    <member name="M:System.Net.CredentialCache.Remove(System.Uri,System.String)">
      <summary>Exclui uma instância de <see cref="T:System.Net.NetworkCredential" /> do cache se ela estiver associada com o protocolo de autenticação e o prefixo URI (identificador de recurso uniforme) especificado.</summary>
      <param name="uriPrefix">Um <see cref="T:System.Uri" /> que especifica o prefixo URI dos recursos para os quais a credencial é usada.</param>
      <param name="authType">O esquema de autenticação usado pelo host nomeado em <paramref name="uriPrefix" />.</param>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultCredentials">
      <summary>Obtém as credenciais de sistema do aplicativo.</summary>
      <returns>Um <see cref="T:System.Net.ICredentials" /> que representa as credenciais do sistema do aplicativo.</returns>
    </member>
    <member name="P:System.Net.CredentialCache.DefaultNetworkCredentials">
      <summary>Obtém as credenciais de rede do contexto de segurança atual.</summary>
      <returns>Um <see cref="T:System.Net.NetworkCredential" /> que representa as credenciais de rede do usuário ou aplicativo atual.</returns>
    </member>
    <member name="T:System.Net.DecompressionMethods">
      <summary>Representa o formato de codificação de compactação e descompactação de arquivos a ser usado para compactar os dados recebidos em resposta a um <see cref="T:System.Net.HttpWebRequest" />.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.All">
      <summary>Usar todos os algoritmos de compactação-descompactação.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Brotli">
      <summary>Usar o algoritmo Brotli de compactação-descompactação.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.Deflate">
      <summary>Usar o algoritmo de compactação-descompactação deflate.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.GZip">
      <summary>Usar o algoritmo de compactação-descompactação gZip.</summary>
    </member>
    <member name="F:System.Net.DecompressionMethods.None">
      <summary>Não usar compactação.</summary>
    </member>
    <member name="T:System.Net.DnsEndPoint">
      <summary>Representa um ponto de extremidade de rede como um nome de host ou uma representação de cadeia de caracteres de um endereço IP e um número de porta.</summary>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.DnsEndPoint" /> com o nome do host ou a representação de cadeia de caracteres de um endereço IP e um número da porta.</summary>
      <param name="host">O nome do host ou uma representação de cadeia de caracteres do endereço IP.</param>
      <param name="port">O número da porta associado ao endereço ou 0 para especificar uma porta disponível. <paramref name="port" /> está na ordem de host.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="host" /> contém uma cadeia de caracteres vazia.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="host" /> é um <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- ou - 
 <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.DnsEndPoint" /> com o nome do host ou a representação de cadeia de caracteres de um endereço IP, um número da porta e uma família de endereços.</summary>
      <param name="host">O nome do host ou uma representação de cadeia de caracteres do endereço IP.</param>
      <param name="port">O número da porta associado ao endereço ou 0 para especificar uma porta disponível. <paramref name="port" /> está na ordem de host.</param>
      <param name="addressFamily">Um dos valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="host" /> contém uma cadeia de caracteres vazia.  
  
- ou - 
 <paramref name="addressFamily" /> é <see cref="F:System.Net.Sockets.AddressFamily.Unknown" />.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="host" /> é um <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- ou - 
 <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
    </member>
    <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
      <summary>Compara dois objetos <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <param name="comparand">Uma instância <see cref="T:System.Net.DnsEndPoint" /> a ser comparada com a instância atual.</param>
      <returns>
        <see langword="true" /> se as duas instâncias <see cref="T:System.Net.DnsEndPoint" /> forem iguais, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.GetHashCode">
      <summary>Retorna um valor de hash para uma <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Um valor de hash inteiro para o <see cref="T:System.Net.DnsEndPoint" />.</returns>
    </member>
    <member name="M:System.Net.DnsEndPoint.ToString">
      <summary>Retorna a representação da cadeia de caracteres ou o nome do host do número da porta e endereço IP do <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Uma cadeia de caracteres que contém a cadeia de caracteres da família do endereço, do nome do host ou do endereço IP e o número da porta do <see cref="T:System.Net.DnsEndPoint" /> especificado.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.AddressFamily">
      <summary>Obtém a família de endereços do protocolo IP.</summary>
      <returns>Um dos valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Host">
      <summary>Obtém a representação da cadeia de caracteres ou nome do host do endereço IP do host.</summary>
      <returns>Um nome de host ou representação de cadeia de caracteres de um endereço IP.</returns>
    </member>
    <member name="P:System.Net.DnsEndPoint.Port">
      <summary>Obtém o número da porta do <see cref="T:System.Net.DnsEndPoint" />.</summary>
      <returns>Um valor inteiro no intervalo de 0 a 0xFFFF que indica o número da porta do <see cref="T:System.Net.DnsEndPoint" /> .</returns>
    </member>
    <member name="T:System.Net.EndPoint">
      <summary>Identifica um endereço de rede. Esta é uma classe <see langword="abstract" />.</summary>
    </member>
    <member name="M:System.Net.EndPoint.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
      <summary>Cria uma instância <see cref="T:System.Net.EndPoint" /> de uma instância <see cref="T:System.Net.SocketAddress" />.</summary>
      <param name="socketAddress">O endereço de soquete que serve como o ponto de extremidade de uma conexão.</param>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
      <returns>Uma nova instância <see cref="T:System.Net.EndPoint" /> que é inicializada na instância <see cref="T:System.Net.SocketAddress" /> especificada.</returns>
    </member>
    <member name="M:System.Net.EndPoint.Serialize">
      <summary>Serializa informações do ponto de extremidade em uma instância de <see cref="T:System.Net.SocketAddress" />.</summary>
      <exception cref="T:System.NotImplementedException">Qualquer tentativa de acessar o método será feita quando ele não for substituído em uma classe descendente.</exception>
      <returns>Uma instância <see cref="T:System.Net.SocketAddress" /> que contém as informações de ponto de extremidade.</returns>
    </member>
    <member name="P:System.Net.EndPoint.AddressFamily">
      <summary>Obtém a família de endereço ao qual pertence o ponto de extremidade.</summary>
      <exception cref="T:System.NotImplementedException">Tentativa de obter ou definir a propriedade, quando a propriedade não foi substituída em uma classe descendente.</exception>
      <returns>Um dos valores de <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="T:System.Net.HttpStatusCode">
      <summary>Contém os valores dos códigos de status definidos para HTTP.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Accepted">
      <summary>Equivalente ao status HTTP 202. <see cref="F:System.Net.HttpStatusCode.Accepted" /> indica que a solicitação foi aceita para processamento adicional.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.AlreadyReported">
      <summary>Equivalente ao status HTTP 208. <see cref="F:System.Net.HttpStatusCode.AlreadyReported" /> indica que os membros de uma associação WebDAV já foram enumerados em uma parte anterior da resposta multistatus e não serão incluídos novamente.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Ambiguous">
      <summary>Equivalente ao status HTTP 300. <see cref="F:System.Net.HttpStatusCode.Ambiguous" /> indica que as informações solicitadas têm várias representações. A ação padrão é tratar esse status como um redirecionamento e seguir o conteúdo do cabeçalho Location associado a essa resposta. <c>Ambiguous</c> é sinônimo de <c>MultipleChoices</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadGateway">
      <summary>Equivalente ao status HTTP 502. <see cref="F:System.Net.HttpStatusCode.BadGateway" /> indica que um servidor proxy intermediário recebeu uma resposta incorreta de outro proxy ou servidor de origem.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.BadRequest">
      <summary>Equivalente ao status HTTP 400. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> indica que a solicitação não pôde ser entendida pelo servidor. <see cref="F:System.Net.HttpStatusCode.BadRequest" /> será enviado quando nenhum outro erro for aplicável ou se o erro exato for desconhecido ou não tiver seu próprio código de erro.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Conflict">
      <summary>Equivalente ao status HTTP 409. <see cref="F:System.Net.HttpStatusCode.Conflict" /> indica que não foi possível executar a solicitação devido a um conflito no servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Continue">
      <summary>Equivalente ao status HTTP 100. <see cref="F:System.Net.HttpStatusCode.Continue" /> indica que o cliente pode continuar com a solicitação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Created">
      <summary>Equivalente ao status HTTP 201. <see cref="F:System.Net.HttpStatusCode.Created" /> indica que a solicitação resultou em um novo recurso criado antes de a resposta ter sido enviada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.EarlyHints">
      <summary>Equivalente ao status HTTP 103. <see cref="F:System.Net.HttpStatusCode.EarlyHints" /> indica ao cliente que o servidor provavelmente enviará uma resposta final com os campos de cabeçalho incluídos na resposta informativa.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ExpectationFailed">
      <summary>Equivalente ao status HTTP 417. <see cref="F:System.Net.HttpStatusCode.ExpectationFailed" /> indica que uma expectativa fornecida em um cabeçalho Expect não pôde ser atendida pelo servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.FailedDependency">
      <summary>Equivalente ao status HTTP 424. <see cref="F:System.Net.HttpStatusCode.FailedDependency" /> indica que não foi possível executar o método no recurso porque a ação solicitada dependia de outra ação que falhou.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Forbidden">
      <summary>Equivalente ao status HTTP 403. <see cref="F:System.Net.HttpStatusCode.Forbidden" /> indica que o servidor se recusa a atender à solicitação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Found">
      <summary>Equivalente ao status HTTP 302. <see cref="F:System.Net.HttpStatusCode.Found" /> indica que as informações solicitadas estão localizadas no URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada usará o método GET. <c>Found</c> é sinônimo de <c>Redirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.GatewayTimeout">
      <summary>Equivalente ao status HTTP 504. <see cref="F:System.Net.HttpStatusCode.GatewayTimeout" /> indica que um servidor proxy intermediário atingiu o tempo limite ao aguardar uma resposta de outro proxy ou servidor de origem.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Gone">
      <summary>Equivalente ao status HTTP 410. <see cref="F:System.Net.HttpStatusCode.Gone" /> indica que o recurso solicitado não está mais disponível.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.HttpVersionNotSupported">
      <summary>Equivalente ao status HTTP 505. <see cref="F:System.Net.HttpStatusCode.HttpVersionNotSupported" /> indica que a versão HTTP solicitada não tem suporte pelo servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.IMUsed">
      <summary>Equivalente ao status HTTP 226. <see cref="F:System.Net.HttpStatusCode.IMUsed" /> indica que o servidor atendeu a uma solicitação do recurso e que a resposta é uma representação do resultado de uma ou mais manipulações de instância aplicadas à instância atual.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InsufficientStorage">
      <summary>Equivalente ao status HTTP 507. <see cref="F:System.Net.HttpStatusCode.InsufficientStorage" /> indica que o servidor não é capaz de armazenar a representação necessária para concluir a solicitação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.InternalServerError">
      <summary>Equivalente ao status HTTP 500. <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> indica que ocorreu um erro genérico no servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LengthRequired">
      <summary>Equivalente ao status HTTP 411. <see cref="F:System.Net.HttpStatusCode.LengthRequired" /> indica que o cabeçalho Content-length necessário está ausente.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Locked">
      <summary>Equivalente ao status HTTP 423. <see cref="F:System.Net.HttpStatusCode.Locked" /> indica que o recurso de origem ou destino está bloqueado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.LoopDetected">
      <summary>Equivalente ao status HTTP 508. <see cref="F:System.Net.HttpStatusCode.LoopDetected" /> indica que o servidor concluiu uma operação porque encontrou um loop infinito durante o processamento de uma solicitação WebDAV com "Depth: infinity". Este código de status destina-se à compatibilidade com versões anteriores com clientes que não conhecem o código de status 208 <see cref="F:System.Net.HttpStatusCode.AlreadyReported" />, que aparece no corpo da resposta multistatus.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MethodNotAllowed">
      <summary>Equivalente ao status HTTP 405. <see cref="F:System.Net.HttpStatusCode.MethodNotAllowed" /> indica que o método de solicitação (POST ou GET) não é permitido no recurso solicitado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MisdirectedRequest">
      <summary>Equivalente ao status HTTP 421. <see cref="F:System.Net.HttpStatusCode.MisdirectedRequest" /> indica que a solicitação foi direcionada a um servidor que não é capaz de produzir uma resposta.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Moved">
      <summary>Equivalente ao status HTTP 301. <see cref="F:System.Net.HttpStatusCode.Moved" /> indica que as informações solicitadas foram movidas para o URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada usará o método GET. <c>Moved</c> é sinônimo de <c>MovedPermanently</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MovedPermanently">
      <summary>Equivalente ao status HTTP 301. <see cref="F:System.Net.HttpStatusCode.MovedPermanently" /> indica que as informações solicitadas foram movidas para o URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. <c>MovedPermanently</c> é sinônimo de <c>Moved</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultipleChoices">
      <summary>Equivalente ao status HTTP 300. <see cref="F:System.Net.HttpStatusCode.MultipleChoices" /> indica que as informações solicitadas têm várias representações. A ação padrão é tratar esse status como um redirecionamento e seguir o conteúdo do cabeçalho Location associado a essa resposta. <c>MultipleChoices</c> é sinônimo de <c>Ambiguous</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.MultiStatus">
      <summary>Equivalente ao status HTTP 207. <see cref="F:System.Net.HttpStatusCode.MultiStatus" /> indica vários códigos de status para uma única resposta durante uma operação do protocolo WebDAV (World Wide Web Distributed Authoring and Versioning). O corpo da resposta contém XML que descreve os códigos de status.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired">
      <summary>Equivalente ao status HTTP 511. <see cref="F:System.Net.HttpStatusCode.NetworkAuthenticationRequired" /> indica que o cliente precisa autenticar para ter acesso à rede; destina-se ao uso interceptando proxies usados para controlar o acesso à rede.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NoContent">
      <summary>Equivalente ao status HTTP 204. <see cref="F:System.Net.HttpStatusCode.NoContent" /> indica que a solicitação foi processada com êxito e que a resposta está intencionalmente em branco.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NonAuthoritativeInformation">
      <summary>Equivalente ao status HTTP 203. <see cref="F:System.Net.HttpStatusCode.NonAuthoritativeInformation" /> indica que a metainformação retornada é de uma cópia armazenada em cache em vez do servidor de origem e, portanto, pode estar incorreta.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotAcceptable">
      <summary>Equivalente ao status HTTP 406. <see cref="F:System.Net.HttpStatusCode.NotAcceptable" /> indica que o cliente indicou com cabeçalhos Accept que não aceitará nenhuma das representações disponíveis do recurso.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotExtended">
      <summary>Equivalente ao status HTTP 510. <see cref="F:System.Net.HttpStatusCode.NotExtended" /> indica que outras extensões para a solicitação são necessárias para que o servidor a atenda.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotFound">
      <summary>Equivalente ao status HTTP 404. <see cref="F:System.Net.HttpStatusCode.NotFound" /> indica que o recurso solicitado não existe no servidor.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotImplemented">
      <summary>Equivalente ao status HTTP 501. <see cref="F:System.Net.HttpStatusCode.NotImplemented" /> indica que o servidor não dá suporte à função solicitada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.NotModified">
      <summary>Equivalente ao status HTTP 304. <see cref="F:System.Net.HttpStatusCode.NotModified" /> indica que a cópia armazenada em cache do cliente está atualizada. O conteúdo do recurso não é transferido.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.OK">
      <summary>Equivalente ao status HTTP 200. <see cref="F:System.Net.HttpStatusCode.OK" /> indica que a solicitação foi bem-sucedida e que as informações solicitadas estão na resposta. Este é o código de status mais comuns a ser recebido.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PartialContent">
      <summary>Equivalente ao status HTTP 206. <see cref="F:System.Net.HttpStatusCode.PartialContent" /> indica que a resposta é uma resposta parcial conforme solicitado por uma solicitação GET que inclui um intervalo de bytes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PaymentRequired">
      <summary>Equivalente ao status HTTP 402. <see cref="F:System.Net.HttpStatusCode.PaymentRequired" /> é reservado para uso futuro.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PermanentRedirect">
      <summary>Equivalente ao status HTTP 308. <see cref="F:System.Net.HttpStatusCode.PermanentRedirect" /> indica que as informações de solicitação estão localizadas no URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada também usará o método POST.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionFailed">
      <summary>Equivalente ao status HTTP 412. <see cref="F:System.Net.HttpStatusCode.PreconditionFailed" /> indica que uma condição definida para esta solicitação falhou e a solicitação não pode ser executada. As condições são definidas com cabeçalhos de solicitação condicional como If-Match, If-None-Match ou If-Unmodified-Since.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.PreconditionRequired">
      <summary>Equivalente ao status HTTP 428. <see cref="F:System.Net.HttpStatusCode.PreconditionRequired" /> indica que o servidor requer que a solicitação seja condicional.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Processing">
      <summary>Equivalente ao status HTTP 102. <see cref="F:System.Net.HttpStatusCode.Processing" /> indica que o servidor aceitou a solicitação completa, mas ainda não a concluiu.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired">
      <summary>Equivalente ao status HTTP 407. <see cref="F:System.Net.HttpStatusCode.ProxyAuthenticationRequired" /> indica que o proxy solicitado requer autenticação. O cabeçalho Proxy-authenticate contém os detalhes de como realizar a autenticação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Redirect">
      <summary>Equivalente ao status HTTP 302. <see cref="F:System.Net.HttpStatusCode.Redirect" /> indica que as informações solicitadas estão localizadas no URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada usará o método GET. <c>Redirect</c> é sinônimo de <c>Found</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectKeepVerb">
      <summary>Equivalente ao status HTTP 307. <see cref="F:System.Net.HttpStatusCode.RedirectKeepVerb" /> indica que as informações de solicitação estão localizadas no URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada também usará o método POST. <c>RedirectKeepVerb</c> é sinônimo de <c>TemporaryRedirect</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RedirectMethod">
      <summary>Equivalente ao status HTTP 303. <see cref="F:System.Net.HttpStatusCode.RedirectMethod" /> redireciona automaticamente o cliente para o URI especificado no cabeçalho Location como o resultado de um POST. A solicitação para o recurso especificado pelo cabeçalho Location será feita com um GET. <c>RedirectMethod</c> é sinônimo de <c>SeeOther</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable">
      <summary>Equivalente ao status HTTP 416. <see cref="F:System.Net.HttpStatusCode.RequestedRangeNotSatisfiable" /> indica que o intervalo de dados solicitados do recurso não pode ser retornado porque o início do intervalo é antes do início do recurso ou o final do intervalo é depois do final do recurso.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestEntityTooLarge">
      <summary>Equivalente ao status HTTP 413. <see cref="F:System.Net.HttpStatusCode.RequestEntityTooLarge" /> indica que a solicitação é muito grande para o servidor processar.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge">
      <summary>Equivalente ao status HTTP 431. <see cref="F:System.Net.HttpStatusCode.RequestHeaderFieldsTooLarge" /> indica que o servidor não processará a solicitação porque seus campos de cabeçalho (um campo de cabeçalho individual ou todos os campos de cabeçalho coletivamente) são muito grandes.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestTimeout">
      <summary>Equivalente ao status HTTP 408. <see cref="F:System.Net.HttpStatusCode.RequestTimeout" /> indica que o cliente não enviou uma solicitação dentro do tempo que o servidor estava aguardando a solicitação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.RequestUriTooLong">
      <summary>Equivalente ao status HTTP 414. <see cref="F:System.Net.HttpStatusCode.RequestUriTooLong" /> indica que o URI é muito longo.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ResetContent">
      <summary>Equivalente ao status HTTP 205. <see cref="F:System.Net.HttpStatusCode.ResetContent" /> indica que o cliente deve redefinir (não recarregar) o recurso atual.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SeeOther">
      <summary>Equivalente ao status HTTP 303. <see cref="F:System.Net.HttpStatusCode.SeeOther" /> redireciona automaticamente o cliente para o URI especificado no cabeçalho Location como o resultado de um POST. A solicitação para o recurso especificado pelo cabeçalho Location será feita com um GET. <c>SeeOther</c> é sinônimo de <c>RedirectMethod</c></summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.ServiceUnavailable">
      <summary>Equivalente ao status HTTP 503. <see cref="F:System.Net.HttpStatusCode.ServiceUnavailable" /> indica que o servidor está temporariamente indisponível, geralmente devido à carga elevada ou manutenção.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.SwitchingProtocols">
      <summary>Equivalente ao status HTTP 101. <see cref="F:System.Net.HttpStatusCode.SwitchingProtocols" /> indica que a versão de protocolo ou o protocolo está sendo alterado.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TemporaryRedirect">
      <summary>Equivalente ao status HTTP 307. <see cref="F:System.Net.HttpStatusCode.TemporaryRedirect" /> indica que as informações de solicitação estão localizadas no URI especificado no cabeçalho Location. A ação padrão quando esse status é recebido é seguir o cabeçalho Location associado a essa resposta. Quando o método de solicitação original era POST, a solicitação redirecionada também usará o método POST. <c>TemporaryRedirect</c> é sinônimo de <c>RedirectKeepVerb</c>.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.TooManyRequests">
      <summary>Equivalente ao status HTTP 429. <see cref="F:System.Net.HttpStatusCode.TooManyRequests" /> indica que o usuário enviou muitas solicitações em um determinado período.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unauthorized">
      <summary>Equivalente ao status HTTP 401. <see cref="F:System.Net.HttpStatusCode.Unauthorized" /> indica que o recurso solicitado requer autenticação. O cabeçalho WWW-Authenticate contém os detalhes de como realizar a autenticação.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnavailableForLegalReasons">
      <summary>Equivalente ao status HTTP 451. <see cref="F:System.Net.HttpStatusCode.UnavailableForLegalReasons" /> indica que o servidor está negando o acesso ao recurso como consequência de uma demanda jurídica.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnprocessableEntity">
      <summary>Equivalente ao status HTTP 422. <see cref="F:System.Net.HttpStatusCode.UnprocessableEntity" /> indica que a solicitação foi bem formada, mas não foi possível segui-la devido a erros semânticos.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UnsupportedMediaType">
      <summary>Equivalente ao status HTTP 415. <see cref="F:System.Net.HttpStatusCode.UnsupportedMediaType" /> indica que a solicitação é um tipo sem suporte.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.Unused">
      <summary>Equivalente ao status HTTP 306. <see cref="F:System.Net.HttpStatusCode.Unused" /> é uma extensão proposta para a especificação do HTTP/1.1 que não está totalmente especificada.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UpgradeRequired">
      <summary>Equivalente ao status HTTP 426. <see cref="F:System.Net.HttpStatusCode.UpgradeRequired" /> indica que o cliente deve mudar para um protocolo diferente como TLS/1.0.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.UseProxy">
      <summary>Equivalente ao status HTTP 305. <see cref="F:System.Net.HttpStatusCode.UseProxy" /> indica que solicitação deve usar o servidor proxy no URI especificado no cabeçalho Location.</summary>
    </member>
    <member name="F:System.Net.HttpStatusCode.VariantAlsoNegotiates">
      <summary>Equivalente ao status HTTP 506. <see cref="F:System.Net.HttpStatusCode.VariantAlsoNegotiates" /> indica que o recurso de variante escolhido está configurado para participar de negociação de conteúdo transparente e, portanto, não é um ponto de extremidade adequado no processo de negociação.</summary>
    </member>
    <member name="T:System.Net.HttpVersion">
      <summary>Define os números de versão HTTP aos quais as classes <see cref="T:System.Net.HttpWebRequest" /> e <see cref="T:System.Net.HttpWebResponse" /> dão suporte.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Unknown">
      <summary>Define uma instância <see cref="T:System.Version" /> para uma versão HTTP desconhecida.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version10">
      <summary>Define uma instância <see cref="T:System.Version" /> para o HTTP 1.0.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version11">
      <summary>Define uma instância <see cref="T:System.Version" /> para o HTTP 1.1.</summary>
    </member>
    <member name="F:System.Net.HttpVersion.Version20">
      <summary>Define uma instância <see cref="T:System.Version" /> para o HTTP 2.0.</summary>
    </member>
    <member name="T:System.Net.ICredentials">
      <summary>Fornece a interface de autenticação básica para recuperar credenciais para autenticação de cliente da Web.</summary>
    </member>
    <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
      <summary>Retorna um objeto <see cref="T:System.Net.NetworkCredential" /> associado ao URI e ao tipo de autenticação especificados.</summary>
      <param name="uri">O <see cref="T:System.Uri" /> para o qual o cliente está fornecendo autenticação.</param>
      <param name="authType">O tipo de autenticação, definido na propriedade <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns>As <see cref="T:System.Net.NetworkCredential" /> associadas ao URI e ao tipo de autenticação especificados ou, se nenhuma credencial estiver disponível, <see langword="null" />.</returns>
    </member>
    <member name="T:System.Net.ICredentialsByHost">
      <summary>Fornece a interface para recuperar as credenciais para um host, porta e tipo de autenticação.</summary>
    </member>
    <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
      <summary>Retorna a credencial para o host, a porta e o protocolo de autenticação especificados.</summary>
      <param name="host">O computador host que está autenticando o cliente.</param>
      <param name="port">A porta no <paramref name="host" /> com a qual o cliente se comunicará.</param>
      <param name="authenticationType">O protocolo de autenticação.</param>
      <returns>Um <see cref="T:System.Net.NetworkCredential" /> para o host, a porta e o protocolo de autenticação especificados ou <see langword="null" />, se nenhuma credencial estiver disponível para o host, a porta e o protocolo de autenticação especificados.</returns>
    </member>
    <member name="T:System.Net.IPAddress">
      <summary>Fornece um endereço IP (Internet Protocol).</summary>
    </member>
    <member name="F:System.Net.IPAddress.Any">
      <summary>Fornece um endereço IP que indica que o servidor deve ouvir a atividade do cliente em todas as interfaces de rede. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Broadcast">
      <summary>Fornece o endereço IP de difusão. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Any">
      <summary>O método <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> utiliza o campo <see cref="F:System.Net.IPAddress.IPv6Any" /> para indicar que um <see cref="T:System.Net.Sockets.Socket" /> deve escutar a atividade de cliente em todos os adaptadores de rede.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6Loopback">
      <summary>Fornece o endereço de loopback de IP. Esta propriedade é somente para leitura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.IPv6None">
      <summary>Fornece um endereço IP que indica que nenhum adaptador de rede deve ser usado. Esta propriedade é somente para leitura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.Loopback">
      <summary>Fornece o endereço de loopback de IP. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Net.IPAddress.None">
      <summary>Fornece um endereço IP que indica que nenhum adaptador de rede deve ser usado. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPAddress" /> com o endereço especificado como uma matriz <see cref="T:System.Byte" />.</summary>
      <param name="address">O valor da matriz de bytes do endereço IP.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contém um endereço IP inválido.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPAddress" /> com o endereço especificado como uma matriz <see cref="T:System.Byte" /> e o identificador de escopo especificado.</summary>
      <param name="address">O valor da matriz de bytes do endereço IP.</param>
      <param name="scopeid">O valor longo do identificador de escopo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contém um endereço IP inválido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scopeid" /> &lt; 0 ou 
 <paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPAddress" /> com o endereço especificado como um <see cref="T:System.Int64" />.</summary>
      <param name="newAddress">O valor longo do endereço IP. Por exemplo, o valor 0x2414188f no formato big endian seria o endereço IP "143.24.20.36".</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="newAddress" /> &lt; 0 ou 
 <paramref name="newAddress" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPAddress" /> com o endereço especificado como um intervalo de bytes.</summary>
      <param name="address">A representação de bytes do endereço IP, em ordem de byte de rede, com o byte mais significativo primeiro na posição 0 do índice.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contém um endereço IP inválido.</exception>
    </member>
    <member name="M:System.Net.IPAddress.#ctor(System.ReadOnlySpan{System.Byte},System.Int64)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPAddress" /> com o endereço especificado como um intervalo de bytes e o identificador de escopo especificado.</summary>
      <param name="address">O valor do intervalo de bytes do endereço IP.</param>
      <param name="scopeid">O valor longo do identificador de escopo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="address" /> contém um endereço IP inválido.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scopeid" /> &lt; 0

- ou -

<paramref name="scopeid" /> &gt; 0x00000000FFFFFFFF</exception>
    </member>
    <member name="M:System.Net.IPAddress.Equals(System.Object)">
      <summary>Compara dois endereços IP.</summary>
      <param name="comparand">Uma instância do <see cref="T:System.Net.IPAddress" /> a ser comparada com a instância atual.</param>
      <returns>
        <see langword="true" /> se os dois endereços forem iguais; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetAddressBytes">
      <summary>Fornece uma cópia do <see cref="T:System.Net.IPAddress" /> como uma matriz de bytes.</summary>
      <returns>Uma matriz <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.GetHashCode">
      <summary>Retorna um valor de hash para um endereço IP.</summary>
      <returns>Um valor de hash inteiro.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
      <summary>Converte um valor resumido da ordem de byte de host em ordem de byte de rede.</summary>
      <param name="host">O número a ser convertido, expresso em ordem de byte de host.</param>
      <returns>Um valor resumido, expresso em ordem de byte de rede.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
      <summary>Converte um valor inteiro da ordem de byte de host para a ordem de byte de rede.</summary>
      <param name="host">O número a ser convertido, expresso em ordem de byte de host.</param>
      <returns>Um valor inteiro, expresso em ordem de byte de rede.</returns>
    </member>
    <member name="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
      <summary>Converte um valor longo de ordem de byte de host em ordem de byte de rede.</summary>
      <param name="host">O número a ser convertido, expresso em ordem de byte de host.</param>
      <returns>Um valor longo, expresso em ordem de byte de rede.</returns>
    </member>
    <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
      <summary>Indica se o endereço IP especificado é o endereço de loopback.</summary>
      <param name="address">Um endereço IP.</param>
      <returns>
        <see langword="true" /> se <paramref name="address" /> é o endereço de loopback, caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv4">
      <summary>Mapeia o objeto <see cref="T:System.Net.IPAddress" /> para um endereço IPv4.</summary>
      <returns>Retorna <see cref="T:System.Net.IPAddress" />.  
  
Um endereço IPv4.</returns>
    </member>
    <member name="M:System.Net.IPAddress.MapToIPv6">
      <summary>Mapeia o objeto <see cref="T:System.Net.IPAddress" /> para um endereço IPv6.</summary>
      <returns>Retorna <see cref="T:System.Net.IPAddress" />.  
  
Um endereço IPv6.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
      <summary>Converte um valor resumido da ordem de byte de rede em ordem de byte de host.</summary>
      <param name="network">O número a ser convertido, expresso em ordem de byte de rede.</param>
      <returns>Um valor resumido, expresso em ordem de byte de host.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
      <summary>Converte um valor inteiro da ordem de byte de rede para a ordem de byte de host.</summary>
      <param name="network">O número a ser convertido, expresso em ordem de byte de rede.</param>
      <returns>Um valor de inteiro, expresso na ordem de byte de host.</returns>
    </member>
    <member name="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
      <summary>Converte um valor longo de ordem de byte de rede em ordem de byte de host.</summary>
      <param name="network">O número a ser convertido, expresso em ordem de byte de rede.</param>
      <returns>Um valor longo, expresso em ordem de byte de host.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.ReadOnlySpan{System.Char})">
      <summary>Converte um endereço IP representado como um intervalo de caracteres em uma instância de <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="ipSpan" />
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> não é um endereço IP válido.</exception>
      <returns>O endereço IP convertido.</returns>
    </member>
    <member name="M:System.Net.IPAddress.Parse(System.String)">
      <summary>Converte uma cadeia de caracteres de endereços IP em uma instância <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="ipString">Uma cadeia de caracteres que contém um endereço IP em notação quádrupla com pontos para IPv4 e em notação hexadecimal com dois-pontos para IPv6.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="ipString" /> não é um endereço IP válido.</exception>
      <returns>Uma instância <see cref="T:System.Net.IPAddress" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.ToString">
      <summary>Converte um endereço de Internet em uma notação padrão.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">A família de endereços é <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> e o endereço é inválido.</exception>
      <returns>Uma cadeia de caracteres que contém o endereço IP em qualquer notação pontilhada de IPv4 ou hexadecimal com dois pontos de IPv6.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryFormat(System.Span{System.Char},System.Int32@)">
      <summary>Tenta formatar o endereço IP atual no intervalo fornecido.</summary>
      <param name="destination">Quando esse método é retornado, o endereço IP como um intervalo de caracteres.</param>
      <param name="charsWritten">Quando esse método é retornado, o número de caracteres gravados no intervalo.</param>
      <returns>
        <see langword="true" /> se a formatação for bem-sucedida. Caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPAddress@)">
      <summary>Determina se o intervalo de bytes especificado representa um endereço IP válido.</summary>
      <param name="address">Quando esse método é retornado, a versão <see cref="T:System.Net.IPAddress" /> do intervalo de bytes.</param>
      <param name="ipSpan" />
      <returns>
        <see langword="true" /> se foi possível analisar <paramref name="ipString" /> como um endereço IP; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
      <summary>Determina se uma cadeia de caracteres é um endereço IP válido.</summary>
      <param name="ipString">A cadeia de caracteres a ser validada.</param>
      <param name="address">A versão <see cref="T:System.Net.IPAddress" /> da cadeia de caracteres.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ipString" /> é nulo.</exception>
      <returns>
        <see langword="true" /> se foi possível analisar <paramref name="ipString" /> como um endereço IP; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPAddress.TryWriteBytes(System.Span{System.Byte},System.Int32@)">
      <summary>Tenta gravar o endereço IP atual em um intervalo de bytes.</summary>
      <param name="destination">Quando esse método é retornado, o endereço IP como um intervalo de bytes.</param>
      <param name="bytesWritten">Quando esse método é retornado, o número de bytes gravados no intervalo.</param>
      <returns>
        <see langword="true" /> se o endereço IP tiver sido gravado com êxito no intervalo especificado; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.Address">
      <summary>Um endereço IP (Internet Protocol).</summary>
      <exception cref="T:System.Net.Sockets.SocketException">A família de endereços é <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</exception>
      <returns>O valor longo do endereço IP.</returns>
    </member>
    <member name="P:System.Net.IPAddress.AddressFamily">
      <summary>Obtém a família de endereços do endereço IP.</summary>
      <returns>Retorna <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> para IPv4 ou <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> para IPv6.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
      <summary>Determina se o endereço IP é um endereço IPv6 mapeado por IPv4.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.  
  
 <see langword="true" /> se o endereço IP for um endereço IPv6 mapeado por IPv4; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6LinkLocal">
      <summary>Determina se o endereço é um endereço local do link IPv6.</summary>
      <returns>
        <see langword="true" /> se o endereço IP for um endereço local do link IPv6; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Multicast">
      <summary>Determina se o endereço é um endereço global multicast IPv6.</summary>
      <returns>
        <see langword="true" /> Se o endereço IP for um endereço global multicast IPv6; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6SiteLocal">
      <summary>Determina se o endereço é um endereço local de site IPv6.</summary>
      <returns>
        <see langword="true" /> Se o endereço IP for um endereço local IPv6 do site; caso contrário, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.IPAddress.IsIPv6Teredo">
      <summary>Determina se o endereço é um endereço IPv6 Teredo.</summary>
      <returns>
        <see langword="true" /> se o endereço IP for um endereço IPv6 Teredo; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPAddress.ScopeId">
      <summary>Obtém ou define o identificador de escopo de endereço IPv6.</summary>
      <exception cref="T:System.Net.Sockets.SocketException">
        <see langword="AddressFamily" /> = <see langword="InterNetwork" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="scopeId" /> &lt; 0 
- ou - 
<paramref name="scopeId" /> &gt; 0x00000000FFFFFFFF</exception>
      <returns>Um inteiro longo que especifica o escopo do endereço.</returns>
    </member>
    <member name="T:System.Net.IPEndPoint">
      <summary>Representa um ponto de extremidade de rede como um endereço IP e um número de porta.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MaxPort">
      <summary>Especifica o valor máximo que pode ser atribuído à propriedade <see cref="P:System.Net.IPEndPoint.Port" />. O valor MaxPort foi definido como 0x0000FFFF. Este campo é somente leitura.</summary>
    </member>
    <member name="F:System.Net.IPEndPoint.MinPort">
      <summary>Especifica o valor mínimo que pode ser atribuído à propriedade <see cref="P:System.Net.IPEndPoint.Port" />. Este campo é somente leitura.</summary>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPEndPoint" /> com o endereço e o número da porta especificados.</summary>
      <param name="address">O endereço IP do host da Internet. Por exemplo, o valor 0x2414188f no formato big endian seria o endereço IP "143.24.20.36".</param>
      <param name="port">O número da porta associado ao <paramref name="address" /> ou 0 para especificar uma porta disponível. <paramref name="port" /> está na ordem de host.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- ou - 
 <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
- ou - 
 <paramref name="address" /> é menor que 0 ou maior que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.IPEndPoint" /> com o endereço e o número da porta especificados.</summary>
      <param name="address">Um <see cref="T:System.Net.IPAddress" />.</param>
      <param name="port">O número da porta associado ao <paramref name="address" /> ou 0 para especificar uma porta disponível. <paramref name="port" /> está na ordem de host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port" /> é menor que <see cref="F:System.Net.IPEndPoint.MinPort" />.  
  
- ou - 
 <paramref name="port" /> é maior que <see cref="F:System.Net.IPEndPoint.MaxPort" />.  
  
- ou - 
 <paramref name="address" /> é menor que 0 ou maior que 0x00000000FFFFFFFF.</exception>
    </member>
    <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
      <summary>Cria um ponto de extremidade de um endereço de soquete.</summary>
      <param name="socketAddress">O <see cref="T:System.Net.SocketAddress" /> a ser usado para o ponto de extremidade.</param>
      <exception cref="T:System.ArgumentException">O AddressFamily de <paramref name="socketAddress" /> não é igual ao AddressFamily da instância atual.  
  
- ou - 
 <paramref name="socketAddress" />.Size &lt; 8.</exception>
      <returns>Uma instância de <see cref="T:System.Net.EndPoint" /> usando o endereço do soquete especificado.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
      <summary>Determina se o <see cref="T:System.Object" /> especificado é igual ao <see cref="T:System.Object" /> atual.</summary>
      <param name="comparand">O <see cref="T:System.Object" /> a ser comparado com o <see cref="T:System.Object" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see cref="T:System.Object" /> especificado for igual ao <see cref="T:System.Object" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.GetHashCode">
      <summary>Retorna um valor de hash para uma instância de <see cref="T:System.Net.IPEndPoint" />.</summary>
      <returns>Um valor de hash inteiro.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})">
      <summary>Converte um ponto de extremidade de rede IP (endereço e porta) representado como um intervalo somente leitura em uma instância de <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s">Um intervalo somente leitura que contém um ponto de extremidade IP em notação quádrupla pontilhada ou em ordem de byte de rede para IPv4 e em notação hexadecimal com dois-pontos para IPv6.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não é um ponto de extremidade de IP válido.</exception>
      <returns>A representação de objeto de um ponto de extremidade de rede IP.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Parse(System.String)">
      <summary>Converte um ponto de extremidade de rede IP (endereço e porta) representado como uma cadeia de caracteres em uma instância de <see cref="T:System.Net.IPEndPoint" />.</summary>
      <param name="s">Uma cadeia de caracteres que contém um ponto de extremidade IP em notação quádrupla pontilhada ou em ordem de byte de rede para IPv4 e em notação hexadecimal com dois-pontos para IPv6.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> é <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> não é um ponto de extremidade de IP válido.</exception>
      <returns>A representação de objeto de um ponto de extremidade de rede IP.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.Serialize">
      <summary>Serializa informações do ponto de extremidade em uma instância de <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>Uma instância de <see cref="T:System.Net.SocketAddress" /> que contém o endereço do soquete do ponto de extremidade.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.ToString">
      <summary>Retorna o número da porta e endereço IP do ponto de extremidade especificado.</summary>
      <returns>Uma cadeia de caracteres que contém o endereço IP e o número da porta do ponto de extremidade especificado (por exemplo, 192.168.1.2:80).</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)">
      <summary>Tenta converter um ponto de extremidade de rede IP (endereço e porta) representado como um intervalo somente leitura em seu <see cref="T:System.Net.IPEndPoint" /> equivalente e retorna um valor que indica se a conversão foi bem-sucedida.</summary>
      <param name="s">O ponto de extremidade de IP a ser validado.</param>
      <param name="result">Quando este método é retornado, a versão <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="s" /> puder ser analisado como um ponto de extremidade de IP; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)">
      <summary>Tenta converter um ponto de extremidade de rede IP (endereço e porta) representado como uma cadeia de caracteres em seu <see cref="T:System.Net.IPEndPoint" /> equivalente e retorna um valor que indica se a conversão foi bem-sucedida.</summary>
      <param name="s">O ponto de extremidade de IP a ser validado.</param>
      <param name="result">Quando este método é retornado, a versão <see cref="T:System.Net.IPEndPoint" /> de <paramref name="s" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="s" /> puder ser analisado como um ponto de extremidade de IP; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Address">
      <summary>Obtém ou define o endereço IP do ponto de extremidade.</summary>
      <returns>Uma instância de <see cref="T:System.Net.IPAddress" /> que contém o endereço IP do ponto de extremidade.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.AddressFamily">
      <summary>Obtém a família de endereços do protocolo IP.</summary>
      <returns>Retorna <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</returns>
    </member>
    <member name="P:System.Net.IPEndPoint.Port">
      <summary>Obtém ou define o número da porta do ponto de extremidade.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">O valor que foi especificado para uma operação de conjuntos é menor que <see cref="F:System.Net.IPEndPoint.MinPort" /> ou maior que <see cref="F:System.Net.IPEndPoint.MaxPort" />.</exception>
      <returns>Um valor inteiro no intervalo de <see cref="F:System.Net.IPEndPoint.MinPort" /> a <see cref="F:System.Net.IPEndPoint.MaxPort" /> que indica o número da porta do ponto de extremidade.</returns>
    </member>
    <member name="T:System.Net.IWebProxy">
      <summary>Fornece a interface base para a implementação do acesso a proxy para a classe <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
      <summary>Retorna o URI de um proxy.</summary>
      <param name="destination">Um <see cref="T:System.Uri" /> que especifica o recurso solicitado da Internet.</param>
      <returns>Uma instância <see cref="T:System.Uri" /> que contém o URI do proxy usado para contatar <paramref name="destination" />.</returns>
    </member>
    <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
      <summary>Indica que o proxy não deve ser usado para o host especificado.</summary>
      <param name="host">O <see cref="T:System.Uri" /> do host a ser verificado quanto ao uso do proxy.</param>
      <returns>
        <see langword="true" /> caso o servidor proxy não deva ser usado para <paramref name="host" />; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.IWebProxy.Credentials">
      <summary>As credenciais a serem enviadas para o servidor proxy para autenticação.</summary>
      <returns>Uma instância de <see cref="T:System.Net.ICredentials" /> que contém as credenciais necessárias para autenticar uma solicitação no servidor proxy.</returns>
    </member>
    <member name="T:System.Net.NetworkCredential">
      <summary>Fornece credenciais para esquemas de autenticação baseada em senha como Básica, resumo, NTLM e Kerberos.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkCredential" />.</summary>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkCredential" /> com o nome de usuário e senha especificados.</summary>
      <param name="userName">O nome de usuário associado às credenciais.</param>
      <param name="password">A senha para o nome de usuário associado às credenciais.</param>
      <exception cref="T:System.NotSupportedException">A classe <see cref="T:System.Security.SecureString" /> não tem suporte nessa plataforma.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.Security.SecureString,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkCredential" /> com o nome de usuário, senha e domínio especificados.</summary>
      <param name="userName">O nome de usuário associado às credenciais.</param>
      <param name="password">A senha para o nome de usuário associado às credenciais.</param>
      <param name="domain">O domínio associado a essas credenciais.</param>
      <exception cref="T:System.NotSupportedException">A classe <see cref="T:System.Security.SecureString" /> não tem suporte nessa plataforma.</exception>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkCredential" /> com o nome de usuário e senha especificados.</summary>
      <param name="userName">O nome de usuário associado às credenciais.</param>
      <param name="password">A senha para o nome de usuário associado às credenciais.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkCredential" /> com o nome de usuário, senha e domínio especificados.</summary>
      <param name="userName">O nome de usuário associado às credenciais.</param>
      <param name="password">A senha para o nome de usuário associado às credenciais.</param>
      <param name="domain">O domínio associado a essas credenciais.</param>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Net.NetworkCredential" /> para o host, porta e tipo de autenticação especificados.</summary>
      <param name="host">O computador host que autentica o cliente.</param>
      <param name="port">A porta no <paramref name="host" /> com a qual o cliente se comunica.</param>
      <param name="authenticationType">O tipo de autenticação solicitado, conforme definido na propriedade <see cref="P:System.Net.IAuthenticationModule.AuthenticationType" />.</param>
      <returns>Um <see cref="T:System.Net.NetworkCredential" /> para o host, a porta e o protocolo de autenticação especificados ou <see langword="null" />, se nenhuma credencial estiver disponível para o host, a porta e o protocolo de autenticação especificados.</returns>
    </member>
    <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Net.NetworkCredential" /> do URI (Uniform Resource Identifier) e do tipo de autenticação.</summary>
      <param name="uri">O URI para o qual o cliente fornece autenticação.</param>
      <param name="authenticationType" />
      <returns>Um objeto <see cref="T:System.Net.NetworkCredential" />.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Domain">
      <summary>Obtém ou define o nome de domínio ou do computador que verifica as credenciais.</summary>
      <returns>O nome do domínio associado às credenciais.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.Password">
      <summary>Obtém ou define a senha para o nome de usuário associado às credenciais.</summary>
      <returns>A senha associada às credenciais. Se essa instância <see cref="T:System.Net.NetworkCredential" /> tiver sido inicializada com o parâmetro <paramref name="password" /> definido como <see langword="null" />, a propriedade <see cref="P:System.Net.NetworkCredential.Password" /> retornará uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.SecurePassword">
      <summary>Obtém ou define a senha como uma instância <see cref="T:System.Security.SecureString" />.</summary>
      <exception cref="T:System.NotSupportedException">A classe <see cref="T:System.Security.SecureString" /> não tem suporte nessa plataforma.</exception>
      <returns>A senha para o nome de usuário associado às credenciais.</returns>
    </member>
    <member name="P:System.Net.NetworkCredential.UserName">
      <summary>Obtém ou define o nome de usuário associado às credenciais.</summary>
      <returns>O nome de usuário associado às credenciais.</returns>
    </member>
    <member name="T:System.Net.NetworkInformation.IPAddressCollection">
      <summary>Armazena um conjunto de tipos <see cref="T:System.Net.IPAddress" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.NetworkInformation.IPAddressCollection" />.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
      <summary>Gera uma <see cref="T:System.NotSupportedException" /> porque essa coleção não dá suporte a essa operação.</summary>
      <param name="address">O objeto a ser adicionado à coleção.</param>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Clear">
      <summary>Gera uma <see cref="T:System.NotSupportedException" /> porque essa coleção não dá suporte a essa operação.</summary>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
      <summary>Verifica se a coleção contém o objeto <see cref="T:System.Net.IPAddress" /> especificado.</summary>
      <param name="address">O objeto <see cref="T:System.Net.IPAddress" /> a ser pesquisado na coleção.</param>
      <returns>
        <see langword="true" /> se o objeto <see cref="T:System.Net.IPAddress" /> existir na coleção; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
      <summary>Copia os elementos dessa coleção para uma matriz unidimensional do tipo <see cref="T:System.Net.IPAddress" />.</summary>
      <param name="array">Uma matriz unidimensional que recebe uma cópia da coleção.</param>
      <param name="offset">O índice de base zero em <paramref name="array" /> no qual a cópia começa.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> é menor que zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimensional.  

- ou -

O número de elementos neste <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> é maior do que o espaço disponível de <paramref name="offset" /> até o final do <paramref name="array" /> de destino.</exception>
      <exception cref="T:System.InvalidCastException">Os elementos nesse <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> não podem ser automaticamente convertidos para o tipo de <paramref name="array" /> de destino.</exception>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
      <summary>Retorna um objeto que pode ser usado para iterar por essa coleção.</summary>
      <returns>Um objeto que implementa a interface <see cref="T:System.Collections.IEnumerator" /> e dá acesso ao tipos <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> na coleção.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
      <summary>Gera uma <see cref="T:System.NotSupportedException" /> porque essa coleção não dá suporte a essa operação.</summary>
      <param name="address">O objeto a ser removido.</param>
      <returns>Sempre gera um <see cref="T:System.NotSupportedException" />.</returns>
    </member>
    <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um objeto que pode ser usado para iterar por essa coleção.</summary>
      <returns>Um objeto que implementa a interface <see cref="T:System.Collections.IEnumerator" /> e dá acesso ao tipos <see cref="T:System.Net.NetworkInformation.IPAddressCollection" /> na coleção.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Count">
      <summary>Obtém o número de tipos <see cref="T:System.Net.IPAddress" /> na coleção.</summary>
      <returns>Um <see cref="T:System.Int32" /> valor que contém o número de <see cref="T:System.Net.IPAddress" /> tipos nesta coleção.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.IsReadOnly">
      <summary>Obtém um valor que indica se o acesso a esta coleção é somente leitura.</summary>
      <returns>
        <see langword="true" /> em todos os casos.</returns>
    </member>
    <member name="P:System.Net.NetworkInformation.IPAddressCollection.Item(System.Int32)">
      <summary>Obtém o <see cref="T:System.Net.IPAddress" /> no índice específico da coleção.</summary>
      <param name="index">O índice de interesse.</param>
      <returns>O <see cref="T:System.Net.IPAddress" /> no índice específico na coleção.</returns>
    </member>
    <member name="T:System.Net.Security.AuthenticationLevel">
      <summary>Especifica os requisitos do cliente para autenticação e representação ao usar a classe <see cref="T:System.Net.WebRequest" /> e classes derivadas para solicitar um recurso.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested">
      <summary>O cliente e o servidor deverão ser autenticados. A solicitação não falhará se o servidor não estiver autenticado. Para determinar se uma autenticação mútua ocorreu, verifique o valor da propriedade <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired">
      <summary>O cliente e o servidor deverão ser autenticados. Se o servidor não for autenticado, seu aplicativo receberá um <see cref="T:System.IO.IOException" /> com uma exceção interna <see cref="T:System.Net.ProtocolViolationException" /> que indica que a autenticação mútua falhou.</summary>
    </member>
    <member name="F:System.Net.Security.AuthenticationLevel.None">
      <summary>Nenhuma autenticação é necessária para o cliente e o servidor.</summary>
    </member>
    <member name="T:System.Net.Security.SslPolicyErrors">
      <summary>Enumera os erros de política de SSL (Secure Socket Layer).</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.None">
      <summary>Sem erros de política SSL.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateChainErrors">
      <summary>
        <see cref="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus" /> retornou uma matriz não vazia.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNameMismatch">
      <summary>Incompatibilidade de nome de certificado.</summary>
    </member>
    <member name="F:System.Net.Security.SslPolicyErrors.RemoteCertificateNotAvailable">
      <summary>Certificado não disponível.</summary>
    </member>
    <member name="T:System.Net.SocketAddress">
      <summary>Armazena informações serializadas de classes derivadas de <see cref="T:System.Net.EndPoint" />.</summary>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.SocketAddress" /> para a família de endereços determinada.</summary>
      <param name="family">Um valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
    </member>
    <member name="M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.SocketAddress" /> usando a família de endereços especificada e o tamanho do buffer.</summary>
      <param name="family">Um valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" />.</param>
      <param name="size">O número de bytes a ser alocado para o buffer subjacente.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="size" /> é menor que 2. Esses 2 bytes são necessários para armazenar <paramref name="family" />.</exception>
    </member>
    <member name="M:System.Net.SocketAddress.Equals(System.Object)">
      <summary>Determina se o <see langword="Object" /> especificado é igual ao <see langword="Object" /> atual.</summary>
      <param name="comparand">O <see cref="T:System.Object" /> a ser comparado com o <see langword="Object" /> atual.</param>
      <returns>
        <see langword="true" /> se o <see langword="Object" /> especificado for igual ao <see langword="Object" /> atual; caso contrário, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.GetHashCode">
      <summary>Atua como uma função de hash para um tipo específico, adequada para uso em algoritmos de hash e estruturas de dados como uma tabela de hash.</summary>
      <returns>Um código hash do <see cref="T:System.Object" /> atual.</returns>
    </member>
    <member name="M:System.Net.SocketAddress.ToString">
      <summary>Retorna informações sobre o endereço do soquete.</summary>
      <returns>Uma cadeia de caracteres que contém informações sobre o <see cref="T:System.Net.SocketAddress" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Family">
      <summary>Obtém o valor enumerado <see cref="T:System.Net.Sockets.AddressFamily" /> do <see cref="T:System.Net.SocketAddress" /> atual.</summary>
      <returns>Um dos valores enumerados <see cref="T:System.Net.Sockets.AddressFamily" />.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Item(System.Int32)">
      <summary>Obtém ou define o elemento de índice especificado no buffer subjacente.</summary>
      <param name="offset">O elemento de índice da matriz das informações desejadas.</param>
      <exception cref="T:System.IndexOutOfRangeException">O índice especificado não existe no buffer.</exception>
      <returns>O valor do elemento de índice especificado no buffer subjacente.</returns>
    </member>
    <member name="P:System.Net.SocketAddress.Size">
      <summary>Obtém o tamanho do buffer subjacente do <see cref="T:System.Net.SocketAddress" />.</summary>
      <returns>O tamanho do buffer subjacente do <see cref="T:System.Net.SocketAddress" /> .</returns>
    </member>
    <member name="T:System.Net.Sockets.AddressFamily">
      <summary>Especifica o esquema de endereçamento que uma instância da classe <see cref="T:System.Net.Sockets.Socket" /> pode usar.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.AppleTalk">
      <summary>Endereço do AppleTalk.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Atm">
      <summary>Endereço de serviços de ATM nativos.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Banyan">
      <summary>Endereço do Banyan.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ccitt">
      <summary>Endereços para protocolos CCITT, como X.25.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Chaos">
      <summary>Endereço para protocolos MIT CHAOS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Cluster">
      <summary>Endereço para produtos de cluster da Microsoft.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ControllerAreaNetwork">
      <summary>Endereço de rede da área do controlador.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataKit">
      <summary>Endereço para protocolos Datakit.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DataLink">
      <summary>Endereço da interface direta de link de dados.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.DecNet">
      <summary>Endereço DECnet.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ecma">
      <summary>Endereço ECMA (European Computer Manufacturers Association).</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.FireFox">
      <summary>Endereço do FireFox.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.HyperChannel">
      <summary>Endereço do NSC Hyperchannel.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ieee12844">
      <summary>Endereço de grupo de trabalho IEEE 1284.4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.ImpLink">
      <summary>Endereço IMP ARPANET.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetwork">
      <summary>Endereço IP versão 4.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.InterNetworkV6">
      <summary>Endereço IP versão 6.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Ipx">
      <summary>Endereço IPX ou SPX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Irda">
      <summary>Endereço do IrDA.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Iso">
      <summary>Endereço para protocolos ISO.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Lat">
      <summary>Endereço LAT.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Max">
      <summary>Endereço MAX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetBios">
      <summary>Endereço do NetBios.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NetworkDesigners">
      <summary>Endereço para protocolos habilitados para gateway OSI para designers de rede.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.NS">
      <summary>Endereço para protocolos Xerox NS.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Osi">
      <summary>Endereço para protocolos OSI.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Packet">
      <summary>Endereço do pacote de baixo nível.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Pup">
      <summary>Endereço para protocolos PUP.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Sna">
      <summary>Endereço SNA da IBM.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unix">
      <summary>Endereço local para host do UNIX.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unknown">
      <summary>Família de endereços desconhecida.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.Unspecified">
      <summary>Família de endereços não especificada.</summary>
    </member>
    <member name="F:System.Net.Sockets.AddressFamily.VoiceView">
      <summary>Endereço do VoiceView.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketError">
      <summary>Define os códigos de erro para a classe <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AccessDenied">
      <summary>Foi feita uma tentativa de acessar um <see cref="T:System.Net.Sockets.Socket" /> de uma maneira que é proibida pelas permissões de acesso.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressAlreadyInUse">
      <summary>Normalmente, é permitido somente o uso de um endereço.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressFamilyNotSupported">
      <summary>Não há suporte para a família de endereços especificada. Esse erro é retornado se a família de endereços IPv6 foi especificada e a pilha de IPv6 não está instalada no computador local. Esse erro é retornado se a família de endereços IPv4 foi especificada e a pilha de IPv4 não está instalada no computador local.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AddressNotAvailable">
      <summary>O endereço IP selecionado não é válido neste contexto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.AlreadyInProgress">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> não bloqueado já tem uma operação em andamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionAborted">
      <summary>A conexão foi anulada pelo .NET Framework ou pelo provedor de soquete subjacente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionRefused">
      <summary>O host remoto está recusando ativamente uma conexão.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ConnectionReset">
      <summary>A conexão foi redefinida pelo par remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.DestinationAddressRequired">
      <summary>Um endereço obrigatório foi omitido de uma operação em um <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Disconnecting">
      <summary>Um desligamento normal está em andamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Fault">
      <summary>Um endereço de ponteiro inválido foi detectado pelo provedor de soquete subjacente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostDown">
      <summary>A operação falhou porque o host remoto está inativo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostNotFound">
      <summary>Esse host não é conhecido. O nome não é um nome de host oficial nem um alias.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.HostUnreachable">
      <summary>Não há nenhuma rota de rede para o host especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InProgress">
      <summary>Uma operação de bloqueio está em andamento.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Interrupted">
      <summary>Uma chamada de bloqueio <see cref="T:System.Net.Sockets.Socket" /> foi cancelada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.InvalidArgument">
      <summary>Um argumento inválido foi fornecido para um membro <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IOPending">
      <summary>O aplicativo iniciou uma operação sobreposta que não pode ser concluída imediatamente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.IsConnected">
      <summary>O <see cref="T:System.Net.Sockets.Socket" /> já está conectado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.MessageSize">
      <summary>O datagrama é muito longo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkDown">
      <summary>A rede não está disponível.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkReset">
      <summary>O aplicativo tentou definir <see cref="F:System.Net.Sockets.SocketOptionName.KeepAlive" /> em uma conexão que já atingiu o tempo limite.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NetworkUnreachable">
      <summary>Não existe nenhuma rota para o host remoto.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoBufferSpaceAvailable">
      <summary>Nenhum espaço de buffer livre está disponível para uma operação <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoData">
      <summary>O nome ou endereço IP solicitado não foi encontrado no servidor de nomes.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NoRecovery">
      <summary>O erro é irrecuperável ou o banco de dados solicitado não pode ser localizado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotConnected">
      <summary>O aplicativo tentou enviar ou receber dados e o <see cref="T:System.Net.Sockets.Socket" /> não está conectado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotInitialized">
      <summary>O provedor de soquete subjacente não foi inicializado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.NotSocket">
      <summary>Houve uma tentativa de uma operação <see cref="T:System.Net.Sockets.Socket" /> em um não soquete.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationAborted">
      <summary>A operação sobreposta foi anulada devido ao fechamento do <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.OperationNotSupported">
      <summary>Não há suporte para a família de endereços na família de protocolos.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProcessLimit">
      <summary>Um número excessivo de processos está usando o provedor de soquete subjacente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolFamilyNotSupported">
      <summary>A família de protocolos não foi implementada ou configurada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolNotSupported">
      <summary>O protocolo não foi implementado ou configurado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolOption">
      <summary>Uma opção ou um nível desconhecido, inválido ou sem suporte foi usado com um <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.ProtocolType">
      <summary>O tipo de protocolo está incorreto para este <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Shutdown">
      <summary>Uma solicitação para enviar ou receber dados não foi permitida porque o <see cref="T:System.Net.Sockets.Socket" /> já foi fechado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketError">
      <summary>Ocorreu um erro <see cref="T:System.Net.Sockets.Socket" /> não especificado.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SocketNotSupported">
      <summary>O suporte para o tipo de soquete especificado não existe nessa família de endereços.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.Success">
      <summary>A operação <see cref="T:System.Net.Sockets.Socket" /> foi bem-sucedida.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.SystemNotReady">
      <summary>O subsistema de rede não está disponível.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TimedOut">
      <summary>A tentativa de conexão atingiu o tempo limite ou o host conectado não respondeu.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TooManyOpenSockets">
      <summary>Há muitos soquetes abertos no provedor de soquete subjacente.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TryAgain">
      <summary>O nome do host não pôde ser resolvido. Tente novamente mais tarde.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.TypeNotFound">
      <summary>A classe especificada não foi encontrada.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.VersionNotSupported">
      <summary>A versão do provedor de soquete subjacente está fora do intervalo.</summary>
    </member>
    <member name="F:System.Net.Sockets.SocketError.WouldBlock">
      <summary>Uma operação em um soquete sem bloqueio não pode ser concluída imediatamente.</summary>
    </member>
    <member name="T:System.Net.Sockets.SocketException">
      <summary>A exceção que é gerada quando ocorre um erro de soquete.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SocketException" /> com o último código de erro do sistema operacional.</summary>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SocketException" /> com o código de erro especificado.</summary>
      <param name="errorCode">O código de erro que indica o erro que ocorreu.</param>
    </member>
    <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Net.Sockets.SocketException" /> das instâncias especificadas das classes <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="serializationInfo">Uma instância <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contém as informações necessárias para serializar a nova instância <see cref="T:System.Net.Sockets.SocketException" />.</param>
      <param name="streamingContext">Um <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contém a origem do fluxo serializado associado à nova instância <see cref="T:System.Net.Sockets.SocketException" />.</param>
    </member>
    <member name="P:System.Net.Sockets.SocketException.ErrorCode">
      <summary>Obtém o código de erro associado a essa exceção.</summary>
      <returns>Um código de erro inteiro associado a essa exceção.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.Message">
      <summary>Obtém a mensagem de erro associada a essa exceção.</summary>
      <returns>Uma cadeia de caracteres que contém a mensagem de erro.</returns>
    </member>
    <member name="P:System.Net.Sockets.SocketException.SocketErrorCode">
      <summary>Obtém o código de erro associado a essa exceção.</summary>
      <returns>Um código de erro inteiro associado a essa exceção.</returns>
    </member>
    <member name="T:System.Net.TransportContext">
      <summary>A classe <see cref="T:System.Net.TransportContext" /> fornece contexto adicional sobre a camada de transporte subjacente.</summary>
    </member>
    <member name="M:System.Net.TransportContext.#ctor">
      <summary>Cria uma nova instância da classe <see cref="T:System.Net.TransportContext" />.</summary>
    </member>
    <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
      <summary>Recupera a associação de canal solicitada.</summary>
      <param name="kind">O tipo de associação de canal a ser recuperada.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="kind" /> deve ser <see cref="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint" /> para uso com o <see cref="T:System.Net.TransportContext" /> recuperado da propriedade <see cref="P:System.Net.HttpListenerRequest.TransportContext" />.</exception>
      <returns>A solicitação <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> ou <see langword="null" />, se a associação de canal não tiver suporte do transporte atual ou do sistema operacional.</returns>
    </member>
    <member name="T:System.Security.Authentication.CipherAlgorithmType">
      <summary>Define os algoritmos de criptografia possíveis para a classe <see cref="T:System.Net.Security.SslStream" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes">
      <summary>O algoritmo de criptografia AES.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes128">
      <summary>O algoritmo de criptografia AES com uma chave de 128 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes192">
      <summary>O algoritmo de criptografia AES com uma chave de 192 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Aes256">
      <summary>O algoritmo de criptografia AES com uma chave de 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Des">
      <summary>O algoritmo DES (Data Encryption Standard).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.None">
      <summary>Nenhum algoritmo de criptografia é usado.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Null">
      <summary>Nenhuma criptografia é usada com um algoritmo de criptografia Null.</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc2">
      <summary>O algoritmo RC2 (Rivest's Code 2).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.Rc4">
      <summary>O algoritmo RC4 (Rivest's Code 4).</summary>
    </member>
    <member name="F:System.Security.Authentication.CipherAlgorithmType.TripleDes">
      <summary>O algoritmo 3DES (Triple Data Encryption Standard).</summary>
    </member>
    <member name="T:System.Security.Authentication.ExchangeAlgorithmType">
      <summary>Especifica o algoritmo usado para gerar chaves compartilhadas por cliente e servidor.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.DiffieHellman">
      <summary>O algoritmo de troca de chaves efêmera Diffie Hellman.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.None">
      <summary>Nenhum algoritmo de troca de chaves é usado.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaKeyX">
      <summary>O algoritmo de troca de chaves públicas RSA.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExchangeAlgorithmType.RsaSign">
      <summary>O algoritmo de assinatura de chave pública RSA.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBinding">
      <summary>A classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> encapsula um indicador para os dados opacos usados para associar uma transação autenticada a um canal seguro.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ChannelBinding.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <param name="ownsHandle">Um valor booliano que indica se o aplicativo é proprietário do identificador seguro para uma região de memória nativa que contém os dados de bytes que seriam passados para chamadas nativas que fornecem proteção estendida para a autenticação integrada do Windows.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size">
      <summary>A propriedade <see cref="P:System.Security.Authentication.ExtendedProtection.ChannelBinding.Size" /> obtém o tamanho, em bytes, do token de associação de canal associado com a instância <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />.</summary>
      <returns>O tamanho, em bytes, do token de associação de canal na <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> instância.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind">
      <summary>A enumeração <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBindingKind" /> representa os tipos de associações de canal que podem ser consultadas de canais seguros.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint">
      <summary>Um canal de associação exclusivo para um determinado ponto de extremidade (um certificado do servidor TLS, por exemplo).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unique">
      <summary>Um canal de associação completamente exclusivo para um determinado canal (uma chave da sessão de TLS, por exemplo).</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Unknown">
      <summary>Um tipo de associação de canal desconhecido.</summary>
    </member>
    <member name="T:System.Security.Authentication.HashAlgorithmType">
      <summary>Especifica o algoritmo usado para gerar códigos de autenticação de mensagem (MACs).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Md5">
      <summary>O algoritmo de hash MD5 (Message Digest 5).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.None">
      <summary>Nenhum algoritmo de hash é usado.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha1">
      <summary>O Secure Hashing Algorithm (SHA1).</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha256">
      <summary>O Secure Hash algoritmo 2 (SHA-2), usando um resumo de 256 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha384">
      <summary>O Secure Hash algoritmo 2 (SHA-2), usando um resumo de 384 bits.</summary>
    </member>
    <member name="F:System.Security.Authentication.HashAlgorithmType.Sha512">
      <summary>O Secure Hash algoritmo 2 (SHA-2), usando um resumo de 512 bits.</summary>
    </member>
    <member name="T:System.Security.Authentication.SslProtocols">
      <summary>Define as possíveis versões de <see cref="T:System.Security.Authentication.SslProtocols" />.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Default">
      <summary>Use None em vez de Default. Default permite que somente os protocolos SSL 3.0 ou TLS 1.0 sejam negociados, e essas opções agora são consideradas obsoletas. Consequentemente, Default não é permitido em muitas organizações. Apesar do nome do campo, <see cref="T:System.Net.Security.SslStream" /> não o utiliza como um padrão, exceto em circunstâncias especiais.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.None">
      <summary>Permite que o sistema operacional escolha o melhor protocolo a ser usado e bloqueie protocolos que não são seguros. Você deve usar esse campo, a menos que o aplicativo tenha um motivo específico para não o usar.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl2">
      <summary>Especifica o protocolo SSL 2.0. O SSL 2.0 foi substituído pelo protocolo TLS e é fornecido somente para fins de compatibilidade com versões anteriores.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Ssl3">
      <summary>Especifica o protocolo SSL 3.0. O SSL 3.0 foi substituído pelo protocolo TLS e é fornecido somente para fins de compatibilidade com versões anteriores.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls">
      <summary>Especifica o protocolo de segurança TLS 1.0.  O TLS 1,0 é fornecido apenas para fins de compatibilidade com versões anteriores. O protocolo TLS é definido no IETF RFC 2246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls11">
      <summary>Especifica o protocolo de segurança TLS 1.1. O protocolo TLS é definido no IETF RFC 4346.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls12">
      <summary>Especifica o protocolo de segurança TLS 1.2. O protocolo TLS é definido no IETF RFC 5246.</summary>
    </member>
    <member name="F:System.Security.Authentication.SslProtocols.Tls13">
      <summary>Especifica o protocolo de segurança TLS 1.3. O protocolo TLS é definido no IETF RFC 8446.</summary>
    </member>
  </members>
</doc>