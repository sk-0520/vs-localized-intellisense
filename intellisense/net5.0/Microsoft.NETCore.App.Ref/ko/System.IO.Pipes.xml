<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.IO.Pipes</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Win32.SafeHandles.SafePipeHandle">
      <summary>파이프 핸들에 대한 래퍼 클래스를 나타냅니다.</summary>
    </member>
    <member name="M:Microsoft.Win32.SafeHandles.SafePipeHandle.#ctor(System.IntPtr,System.Boolean)">
      <summary>
        <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="preexistingHandle">사용할 기존 핸들을 나타내는 <see cref="T:System.IntPtr" /> 개체입니다.</param>
      <param name="ownsHandle">종료 단계에서 안정적으로 핸들을 해제하려면<see langword="true" /> 이고, 안정적으로 해제되지 않게 하려면 <see langword="false" /> 입니다(권장되지 않음).</param>
    </member>
    <member name="P:Microsoft.Win32.SafeHandles.SafePipeHandle.IsInvalid">
      <summary>핸들이 잘못되었는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>핸들이 잘못되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeClientStream">
      <summary>동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 익명 파이프 스트림의 클라이언트 측을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>지정된 핸들을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="safePipeHandle">이 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" />은 유효한 핸들이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.IOException">디스크 오류 등의 I/O 오류가 발생한 경우  
  
 또는  
  
 스트림이 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <summary>지정된 파이프 방향 및 파이프 핸들의 문자열 표현을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="pipeHandleAsString">파이프 핸들을 나타내는 문자열입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeHandleAsString" />은(는) 잘못된 핸들입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeHandleAsString" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <summary>파이프 핸들의 지정된 문자열 표현을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeHandleAsString">파이프 핸들을 나타내는 문자열입니다.</param>
      <exception cref="T:System.IO.IOException">
        <paramref name="pipeHandleAsString" />이 유효한 파이프 핸들이 아닌 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <summary>가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 대한 읽기 모드를 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">전송 모드가 올바르지 않습니다. 익명 파이프의 경우 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />만 지원됩니다.</exception>
      <exception cref="T:System.NotSupportedException">전송 모드는 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />입니다.</exception>
      <exception cref="T:System.IO.IOException">연결이 끊어졌거나 다른 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <returns>
        <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 개체에 대한 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <summary>현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <returns>현재 파이프에서 지원하는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.AnonymousPipeServerStream">
      <summary>동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 익명 파이프 주위의 스트림을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <summary>지정된 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>지정된 파이프 핸들을 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="serverSafePipeHandle">이 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <param name="clientSafePipeHandle">
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serverSafePipeHandle" />또는 <paramref name="clientSafePipeHandle" />이 잘못된 핸들인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverSafePipeHandle" /> 또는 <paramref name="clientSafePipeHandle" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
      <exception cref="T:System.IO.IOException">디스크 오류 등의 I/O 오류가 발생한 경우  
  
 또는  
  
 스트림이 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <summary>지정된 파이프 방향 및 상속 모드를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="inheritability">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다. <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <summary>지정된 파이프 방향, 상속 모드 및 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.  
  
익명 파이프는 한 방향으로만 지정할 수 있으므로 <paramref name="direction" />을 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />으로 설정할 수 없습니다.</param>
      <param name="inheritability">자식 프로세스가 기본 핸들을 상속할 수 있는지 여부를 결정하는 열거형 값 중 하나입니다. <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정해야 합니다.</param>
      <param name="bufferSize">버퍼의 크기입니다. 이 값은 0보다 크거나 같아야 합니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="inheritability" />가 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />로 설정되어 있지 않습니다.  
  
또는 
 <paramref name="bufferSize" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="direction" />이 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />로 설정됩니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체 핸들의 로컬 복사본을 종료합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <summary>가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <summary>연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 문자열로 가져옵니다.</summary>
      <returns>연결된 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체의 핸들을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <summary>현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 안전한 핸들을 가져옵니다.</summary>
      <returns>현재 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 개체에 연결된 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체의 핸들입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드를 설정합니다. 익명 파이프의 경우 전송 모드가 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />여야 합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">전송 모드가 올바르지 않습니다. 익명 파이프의 경우 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />만 지원됩니다.</exception>
      <exception cref="T:System.NotSupportedException">속성이 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />로 설정되며, 이는 익명 파이프를 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">연결이 끊어졌거나 다른 I/O 오류가 발생했습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <returns>
        <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 개체에 대한 읽기 모드입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <summary>현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <returns>현재 파이프에서 지원하는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeClientStream">
      <summary>동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 명명된 파이프 주위의 <see cref="T:System.IO.Stream" />을 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>지정된 파이프 방향을 사용하여 지정된 파이프 핸들에 대한 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="isAsync">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="isConnected">파이프가 연결된 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="safePipeHandle">이 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.IO.IOException">스트림이 닫혔습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" />은 유효한 핸들이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <summary>지정된 파이프 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <summary>지정된 파이프 및 서버 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <summary>지정된 파이프와 서버 이름 및 지정된 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <summary>지정된 파이프와 서버 이름 및 지정된 파이프 방향과 파이프 옵션을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <summary>지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션 및 보안 가장 수준을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="impersonationLevel">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
  
또는 
 <paramref name="impersonationLevel" />는 유효한 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <summary>지정된 파이프와 서버 이름, 지정된 파이프 방향, 파이프 옵션, 보안 가장 수준 및 상속 모드를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="serverName">연결할 원격 컴퓨터의 이름 또는 로컬 컴퓨터를 지정하는 경우 "."입니다.</param>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="impersonationLevel">보안 가장 수준을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="inheritability">기본 핸들이 자식 프로세스로 상속되는지 여부를 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 또는 <paramref name="serverName" />가 길이가 0인 문자열인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
  
또는 
 <paramref name="impersonationLevel" />는 유효한 <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 값이 아닙니다.  
  
또는 
 <paramref name="inheritability" />는 유효한 <see cref="T:System.IO.HandleInheritability" /> 값이 아닙니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <summary>무한 시간 제한 값을 사용하여 대기 중인 서버에 연결합니다.</summary>
      <exception cref="T:System.InvalidOperationException">클라이언트가 이미 연결되어 있습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <summary>지정된 시간 제한 기간 내에 대기 서버에 연결합니다.</summary>
      <param name="timeout">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <exception cref="T:System.TimeoutException">지정된 <paramref name="timeout" /> 기간 내에 서버에 연결할 수 없는 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="timeout" />이 0보다 작고 <see cref="F:System.Threading.Timeout.Infinite" />로 설정되지 않았습니다.</exception>
      <exception cref="T:System.InvalidOperationException">클라이언트가 이미 연결되어 있습니다.</exception>
      <exception cref="T:System.IO.IOException">서버가 다른 클라이언트에 연결되었고 시간 초과 기간이 만료 되었습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <summary>시간 제한 없이 대기 중인 서버에 비동기 방식으로 연결합니다.</summary>
      <returns>비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <summary>지정된 시간 제한 내에 대기 중인 서버에 비동기 방식으로 연결합니다.</summary>
      <param name="timeout">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <returns>비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <summary>지정된 시간 제한 내에 대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</summary>
      <param name="timeout">연결 제한 시간이 초과되기 전에 서버 응답을 기다릴 시간(밀리초)입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <summary>대기 중인 서버에 비동기 방식으로 연결하고 취소 요청을 모니터링합니다.</summary>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <returns>비동기 연결 작업(operation)을 나타내는 작업(task)입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <summary>가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <summary>같은 파이프 이름을 공유하는 서버 인스턴스의 수를 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프 핸들이 설정되지 않은 경우  
  
또는 
현재 <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 개체가 아직 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파이프가 끊어졌거나 I/O 오류가 발생한 경우</exception>
      <exception cref="T:System.ObjectDisposedException">내부 파이프 핸들이 닫혔습니다.</exception>
      <returns>같은 파이프 이름을 공유하는 서버 인스턴스의 수입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.NamedPipeServerStream">
      <summary>동기 및 비동기 읽기/쓰기 작업을 모두 지원하는 명명된 파이프 주위의 <see cref="T:System.IO.Stream" />을 노출합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <summary>시스템 리소스가 허용하는 최대 서버 인스턴스 수를 나타냅니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <summary>지정된 파이프 핸들을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="isAsync">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="isConnected">파이프가 연결된 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <param name="safePipeHandle">이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체가 캡슐화할 파이프의 SafeHandle입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="safePipeHandle" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="safePipeHandle" />은(는) 잘못된 핸들입니다.</exception>
      <exception cref="T:System.IO.IOException">
        <paramref name="safePipeHandle" />이 유효한 파이프 핸들이 아닌 경우  
  
또는 
서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <summary>지정된 파이프 이름을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <summary>지정된 파이프 이름 및 파이프 방향을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>지정된 파이프 이름, 파이프 방향 및 최대 서버 인스턴스 수를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
음수가 아닌 숫자가 필요합니다.  
  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <see cref="F:System.IO.HandleInheritability.None" /> 또는 <see cref="F:System.IO.HandleInheritability.Inheritable" />이 필요한 경우  
  
또는 
액세스 권한이 <see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> , <see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> 및 <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> 플래그로 제한되는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <summary>지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수 및 전송 모드를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄)</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <summary>지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수, 전송 모드 및 파이프 옵션을 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <summary>지정된 파이프 이름, 파이프 방향, 최대 서버 인스턴스 수, 전송 모드, 파이프 옵션 및 권장 입출력 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="pipeName">파이프의 이름입니다.</param>
      <param name="direction">파이프의 방향을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="maxNumberOfServerInstances">같은 이름을 공유하는 서버 인스턴스의 최대 수입니다. 이 값에 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 전달할 수 있습니다.</param>
      <param name="transmissionMode">파이프의 전송 모드를 결정하는 열거형 값 중 하나입니다.</param>
      <param name="options">파이프를 열거나 만드는 방법을 결정하는 열거형 값 중 하나입니다.</param>
      <param name="inBufferSize">입력 버퍼 크기를 나타내는 0보다 큰 양의 값입니다.</param>
      <param name="outBufferSize">출력 버퍼 크기를 나타내는 0보다 큰 양의 값입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pipeName" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="pipeName" /> 이 빈 문자열입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="pipeName" />이 "익명"으로 설정된 경우  
  
또는 
 <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="maxNumberofServerInstances" />가 -1보다 작거나 254보다 큰 경우(-1은 <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />를 나타냄) 
또는 
 <paramref name="options" />는 유효한 <see cref="T:System.IO.Pipes.PipeOptions" /> 값이 아닙니다.  
  
또는 
 <paramref name="inBufferSize" />가 음수입니다.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="pipeName" />에 콜론(":")이 포함된 경우</exception>
      <exception cref="T:System.PlatformNotSupportedException">운영 체제가 지원되지 않는 Windows Millennium Edition, Windows 98 또는 Windows 95인 경우</exception>
      <exception cref="T:System.IO.IOException">서버 인스턴스의 최대 수를 초과한 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <summary>클라이언트 연결을 대기할 비동기 작업을 시작합니다.</summary>
      <param name="callback">클라이언트가 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때 호출할 메서드입니다.</param>
      <param name="state">다른 요청에서 특정 비동기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <exception cref="T:System.InvalidOperationException">파이프가 비동기적으로 열리지 않은 경우  
  
 또는  
  
 파이프 연결이 이미 설정된 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파이프 연결이 끊어진 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <returns>비동기 요청을 참조하는 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <summary>현재 연결을 끊습니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프 연결이 아직 설정되지 않은 경우  
  
 또는  
  
 연결된 파이프가 이미 연결이 끊긴 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <summary>클라이언트 연결을 대기할 비동기 작업을 끝냅니다.</summary>
      <param name="asyncResult">보류 중인 비동기 요청입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 비동기적으로 열리지 않은 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.IO.IOException">파이프 연결이 끊어진 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <summary>가비지 컬렉션에 의해 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 인스턴스가 회수되기 전에 관리되지 않는 리소스를 해제하고 기타 정리 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <summary>파이프 반대쪽 끝에서 클라이언트의 사용자 이름을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프 연결이 아직 설정되지 않은 경우  
  
 또는  
  
 연결된 파이프가 이미 연결이 끊긴 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프 연결이 끊어진 경우  
  
 또는  
  
 클라이언트의 사용자 이름이 19자보다 깁니다.</exception>
      <returns>파이프 반대쪽 끝에 있는 클라이언트의 사용자 이름입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <summary>클라이언트를 가장하는 동안 대리자를 호출합니다.</summary>
      <param name="impersonationWorker">호출할 메서드를 지정하는 대리자입니다.</param>
      <exception cref="T:System.InvalidOperationException">파이프 연결이 아직 설정되지 않은 경우  
  
 또는  
  
 연결된 파이프가 이미 연결이 끊긴 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프 연결이 끊어진 경우  
  
 또는  
  
 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <summary>클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때까지 기다립니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프 연결이 이미 설정된 경우  
  
 또는  
  
 파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프 연결이 끊어진 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <summary>클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 비동기 방식으로 연결할 때까지 기다립니다.</summary>
      <returns>비동기 대기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <summary>클라이언트가 이 <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 개체에 연결할 때까지 비동기 방식으로 기다리고 취소 요청을 모니터링합니다.</summary>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 대기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeDirection">
      <summary>파이프의 방향을 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.In">
      <summary>파이프 방향을 안쪽으로 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.InOut">
      <summary>파이프 방향을 양쪽으로 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeDirection.Out">
      <summary>파이프 방향을 바깥쪽으로 지정합니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeOptions">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체를 만들기 위한 옵션을 제공합니다. 이 열거형에는 멤버 값의 비트 조합을 허용하는 <see cref="T:System.FlagsAttribute" />가 있습니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <summary>파이프를 비동기 읽기 및 쓰기에 사용할 수 있음을 나타냅니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.CurrentUserOnly">
      <summary>
        <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> 인스턴스를 만드는 데 사용하는 경우 파이프는 동일한 사용자가 만든 클라이언트에만 연결될 수 있음을 나타냅니다. <see cref="T:System.IO.Pipes.NamedPipeClientStream" /> 인스턴스를 만드는 데 사용하는 경우 파이프는 동일한 사용자가 만든 서버에만 연결할 수 있음을 나타냅니다. Windows에서 사용자 계정 및 권한 상승 수준을 모두 확인합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.None">
      <summary>추가 매개 변수가 없음을 나타냅니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <summary>시스템에서 중간 캐시를 통해 데이터를 기록하고 파이프로 직접 이동해야 함을 나타냅니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeStream">
      <summary>익명 파이프와 명명된 파이프를 모두 지원하는 파이프 주위의 <see cref="T:System.IO.Stream" /> 개체를 노출합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <summary>지정된 <see cref="T:System.IO.Pipes.PipeStream" /> 값과 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.PipeDirection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프 개체의 방향을 나타내는 <see cref="T:System.IO.Pipes.PipeDirection" /> 값 중 하나입니다.</param>
      <param name="bufferSize">버퍼 크기를 나타내는 0 또는 0보다 큰 양의 <see cref="T:System.Int32" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="bufferSize" /> 가 0보다 작습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <summary>지정된 <see cref="T:System.IO.Pipes.PipeStream" />, <see cref="T:System.IO.Pipes.PipeDirection" /> 및 버퍼 크기를 사용하여 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="direction">파이프 개체의 방향을 나타내는 <see cref="T:System.IO.Pipes.PipeDirection" /> 값 중 하나입니다.</param>
      <param name="transmissionMode">파이프 개체의 전송 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값 중 하나입니다.</param>
      <param name="outBufferSize">버퍼 크기를 나타내는 0 또는 0보다 큰 양의 <see cref="T:System.Int32" /> 값입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="direction" />는 유효한 <see cref="T:System.IO.Pipes.PipeDirection" /> 값이 아닙니다.  
  
또는 
 <paramref name="transmissionMode" />은 유효한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닙니다.  
  
또는 
 <paramref name="bufferSize" /> 가 0보다 작습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>비동기 읽기 작업을 시작합니다.</summary>
      <param name="buffer">데이터를 읽어올 버퍼입니다.</param>
      <param name="offset">읽기를 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</param>
      <param name="count">읽을 최대 바이트 수입니다.</param>
      <param name="callback">비동기 읽기 작업이 완료되면 호출할 메서드입니다.</param>
      <param name="state">다른 요청에서 특정 비동기 읽기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="count" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
      <returns>비동기 읽기를 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <summary>비동기 쓰기 작업을 시작합니다.</summary>
      <param name="buffer">현재 스트림에 쓸 데이터를 포함하는 버퍼입니다.</param>
      <param name="offset">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count">쓸 최대 바이트 수입니다.</param>
      <param name="callback">비동기 쓰기 작업이 완료되면 호출할 메서드입니다.</param>
      <param name="state">다른 요청에서 특정 비동기 쓰기 요청을 구별하는 사용자 제공 개체입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="count" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
      <returns>비동기 쓰기 작업을 참조하는 <see cref="T:System.IAsyncResult" /> 개체입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <summary>파이프가 속성을 가져오거나 설정할 수 있는 적절한 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <summary>파이프가 읽기 작업을 위해 연결된 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <summary>파이프가 쓰기 작업을 위해 연결된 상태인지 확인합니다.</summary>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 클래스에 사용되는 관리되지 않는 리소스를 해제하고, 필요에 따라 관리되는 리소스를 해제합니다.</summary>
      <param name="disposing">관리되는 리소스와 관리되지 않는 리소스를 모두 해제하려면 <see langword="true" />로 설정하고, 관리되지 않는 리소스만 해제하려면 <see langword="false" />로 설정합니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <summary>보류 중인 비동기 읽기 요청을 끝냅니다.</summary>
      <param name="asyncResult">보류 중인 비동기 요청에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" />가 현재 스트림의 <see cref="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 메서드에서 시작되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">스트림이 닫혔거나 내부 오류가 발생했습니다.</exception>
      <returns>지금까지 읽은 바이트 수입니다. 반환 값 0은 스트림의 끝(파이프가 닫힘)을 나타냅니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <summary>보류 중인 비동기 쓰기 요청을 끝냅니다.</summary>
      <param name="asyncResult">보류 중인 비동기 요청에 대한 참조입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" />가 현재 스트림의 <see cref="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 메서드에서 시작되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">스트림이 닫혔거나 내부 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Flush">
      <summary>현재 스트림에 대한 버퍼를 지우고 버퍼링된 모든 데이터를 내부 디바이스에 기록합니다.</summary>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.FlushAsync(System.Threading.CancellationToken)">
      <summary>비동기적으로 현재 스트림에 대한 버퍼를 지우고 버퍼링된 모든 데이터를 내부 디바이스에 기록합니다.</summary>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다.</param>
      <returns>비동기 플러시 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <summary>지정된 <see cref="T:System.IO.Pipes.PipeStream" /> 개체에서 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체를 초기화합니다.</summary>
      <param name="handle">초기화할 파이프의 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체입니다.</param>
      <param name="isExposed">핸들을 노출하려면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</param>
      <param name="isAsync">핸들이 비동기 방식으로 열린 경우 <see langword="true" />, 그렇지 않은 경우 <see langword="false" />입니다.</param>
      <exception cref="T:System.IO.IOException">핸들을 파이프에 바인딩할 수 없는 경우</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>스트림에서 바이트 블록을 읽고 지정된 길이에 대해 지정된 위치에서 시작하는 지정 버퍼에 데이터를 씁니다.</summary>
      <param name="buffer">이 메서드는 지정된 바이트 배열의 값이 <paramref name="offset" />과 (<paramref name="offset" /> + <paramref name="count" /> - 1) 사이에서 현재 원본으로부터 읽어온 바이트로 교체된 상태로 반환됩니다.</param>
      <param name="offset">읽은 바이트를 배치할 <paramref name="buffer" /> 배열의 바이트 오프셋입니다.</param>
      <param name="count">읽을 최대 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="count" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">I/O 오류가 발생한 경우</exception>
      <returns>
        <paramref name="buffer" />로 읽어들인 바이트의 총 수입니다. 이 값은 현재 사용 가능한 바이트 수가 부족한 경우 요청된 바이트 수보다 작을 수 있으며, 스트림의 끝에 도달하면 0이 됩니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Read(System.Span{System.Byte})">
      <summary>현재 스트림에서 바이트 시퀀스를 읽고, 이를 바이트 배열에 쓰고, 읽은 바이트 수만큼 스트림에서 위치를 앞으로 이동합니다.</summary>
      <param name="buffer">메모리 영역입니다. 이 메서드가 반환될 때 이 영역의 내용은 현재 소스에서 읽은 바이트로 대체됩니다.</param>
      <exception cref="T:System.ArgumentNullException">읽은 바이트 수가 버퍼 길이보다 깁니다.</exception>
      <exception cref="T:System.NotSupportedException">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
      <returns>
        <paramref name="buffer" />로 읽어온 총 바이트 수입니다. 많은 바이트가 현재 사용 가능하지 않은 경우 <paramref name="buffer" />에 할당된 바이트 수보다 적을 수 있으며 스트림의 끝에 도달하면 0이 됩니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>현재 스트림에서 지정된 바이트 수에 대해 지정된 위치에서 시작하는 바이트 배열까지 바이트의 시퀀스를 비동기적으로 읽고, 읽은 바이트 수만큼 스트림 내에서 앞으로 이동하며, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer">데이터를 쓸 버퍼입니다.</param>
      <param name="offset">스트림의 데이터를 쓰기 시작할 <paramref name="buffer" />의 바이트 오프셋입니다.</param>
      <param name="count">읽을 최대 바이트 수입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <exception cref="T:System.NotSupportedException">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
      <returns>비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.Task`1.Result" /> 속성의 값에는 버퍼 안으로 읽어들인 총 바이트 수가 포함됩니다. 현재 사용할 수 있는 바이트 수가 요청된 수보다 작을 경우 결과 값이 요청된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달한 경우에는 0이 될 수도 있습니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
      <summary>현재 스트림에서 바이트의 시퀀스를 비동기적으로 읽고, 이를 바이트 메모리 범위에 쓰고, 읽은 바이트 수만큼 스트림 내에서 앞으로 이동하며, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer">데이터를 기록할 메모리의 영역입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <exception cref="T:System.NotSupportedException">스트림이 읽기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
      <returns>비동기 읽기 작업을 나타내는 작업입니다. 해당 <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> 속성의 값에는 버퍼 안으로 읽어들인 총 바이트 수가 포함됩니다. 결과 값은 많은 바이트가 현재 사용 가능하지 않은 경우 버퍼에 할당된 바이트 수보다 작을 수 있으며 스트림의 끝에 도달하면 0이 될 수 있습니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.ReadByte">
      <summary>파이프에서 바이트를 읽습니다.</summary>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 읽기 작업을 지원하지 않는 경우</exception>
      <exception cref="T:System.InvalidOperationException">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">I/O 오류가 발생한 경우</exception>
      <returns>
        <see cref="T:System.Int32" />로 캐스팅된 바이트 또는 스트림의 끝(파이프가 닫힘)을 나타내는 -1입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>현재 스트림의 현재 위치를 지정된 값으로 설정합니다.</summary>
      <param name="offset">검색을 시작할 지점입니다. 이 위치는 <paramref name="origin" />을 기준으로 합니다.</param>
      <param name="origin">
        <see cref="T:System.IO.SeekOrigin" /> 형식의 값을 사용하여 시작, 끝 또는 현재 위치를 <paramref name="offset" />에 대한 참조 지점으로 지정합니다.</param>
      <returns>스트림 내의 새 위치입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <summary>현재 스트림의 길이를 지정된 값으로 설정합니다.</summary>
      <param name="value">스트림의 새 길이입니다.</param>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <summary>전달된 바이트를 파이프의 다른 끝에서 모두 읽을 때까지 기다립니다.</summary>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>버퍼의 데이터를 사용하여 현재 스트림에 바이트 블록을 씁니다.</summary>
      <param name="buffer">파이프에 쓸 데이터를 포함하는 버퍼입니다.</param>
      <param name="offset">현재 스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count">현재 스트림에 쓸 최대 바이트 수입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> 가 0보다 작습니다.  
  
또는 
 <paramref name="count" /> 가 0보다 작습니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" />가 <paramref name="buffer" />에서 사용 가능한 바이트의 수보다 큽니다.</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.Write(System.ReadOnlySpan{System.Byte})">
      <summary>현재 스트림에 바이트 시퀀스를 쓰고 쓴 바이트 수만큼 이 스트림에서 현재 위치를 앞으로 이동합니다.</summary>
      <param name="buffer">메모리 영역입니다. 이 메서드는 이 영역의 내용을 현재의 스트림에 복사합니다.</param>
      <exception cref="T:System.NotSupportedException">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
      <summary>지정된 위치에서 시작하는 바이트 배열에서 지정된 바이트 수를 비동기적으로 쓰고, 쓴 바이트 수만큼 이 스트림 내의 현재 위치를 앞으로 이동하고, 취소 요청을 모니터링합니다.</summary>
      <param name="buffer">데이터를 쓸 버퍼입니다.</param>
      <param name="offset">스트림으로 바이트를 복사하기 시작할 <paramref name="buffer" />의 바이트 오프셋(0부터 시작)입니다.</param>
      <param name="count">쓸 최대 바이트 수입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" />이(가) <see langword="null" />인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" />가 음수입니다.

또는

<paramref name="count" />가 음수입니다.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" />.Length - <paramref name="offset" />이 <paramref name="count" />보다 작습니다.</exception>
      <exception cref="T:System.NotSupportedException">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
      <summary>바이트의 시퀀스를 현재 스트림에 비동기적으로 쓰고 쓰여진 바이트 수만큼 이 스트림 내의 현재 위치를 앞으로 이동한 후 취소 요청을 모니터링합니다.</summary>
      <param name="buffer">데이터를 기록할 메모리의 영역입니다.</param>
      <param name="cancellationToken">취소 요청을 모니터링할 토큰입니다. 기본값은 <see cref="P:System.Threading.CancellationToken.None" />입니다.</param>
      <exception cref="T:System.NotSupportedException">스트림이 쓰기를 지원하지 않습니다.</exception>
      <exception cref="T:System.ObjectDisposedException">닫힌 파이프에는 액세스할 수 없습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 끊어졌습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 아직 연결되지 않았습니다.

또는

파이프 연결이 끊어진 상태입니다.

또는

파이프 핸들이 설정되지 않은 경우 (<see cref="T:System.IO.Pipes.PipeStream" /> 구현이 <see cref="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />을 호출했습니까?</exception>
      <returns>비동기 쓰기 작업을 나타내는 작업입니다.</returns>
    </member>
    <member name="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <summary>현재 스트림에 바이트를 씁니다.</summary>
      <param name="value">스트림에 쓸 바이트입니다.</param>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.NotSupportedException">파이프에서 쓰기 작업을 지원하지 않습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프의 연결이 끊겼거나 연결을 기다리는 중이거나 핸들이 설정되지 않았습니다.</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanRead">
      <summary>현재 스트림이 읽기 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>스트림이 읽기 작업을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanSeek">
      <summary>현재 스트림이 검색 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>모든 경우에 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.CanWrite">
      <summary>현재 스트림이 쓰기 작업을 지원하는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>스트림이 쓰기 작업을 지원하면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.InBufferSize">
      <summary>파이프에 대한 인바운드 버퍼의 크기(바이트 단위)를 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException">스트림을 읽을 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
      <returns>바이트 단위로 인바운드 버퍼 크기를 나타내는 정수 값입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsAsync">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 동기적으로 열렸는지 비동기적으로 열렸는지 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 비동기적으로 열렸으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsConnected">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 연결되었는지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체가 연결되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 핸들이 노출되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 핸들이 노출되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <summary>가장 최근의 읽기 작업을 통해 반환된 메시지에 다른 데이터가 더 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프가 연결되지 않은 경우  
  
또는 
파이프 핸들이 설정되지 않은 경우  
  
또는 
파이프의 <see cref="P:System.IO.Pipes.PipeStream.ReadMode" /> 속성 값이 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />가 아닌 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <returns>메시지에서 읽을 문자가 더 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Length">
      <summary>스트림의 길이(바이트 단위)를 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      <returns>모든 경우에 0입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <summary>파이프에 대한 아웃바운드 버퍼의 크기(바이트 단위)를 가져옵니다.</summary>
      <exception cref="T:System.NotSupportedException">스트림이 쓸 수 없습니다.</exception>
      <exception cref="T:System.InvalidOperationException">파이프가 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
      <returns>바이트 단위로 표현한 아웃바운드 버퍼 크기입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.Position">
      <summary>현재 스트림의 현재 위치를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.NotSupportedException">항상 throw됩니다.</exception>
      <returns>모든 경우에 0입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.ReadMode">
      <summary>
        <see cref="T:System.IO.Pipes.PipeStream" /> 개체에 대한 읽기 모드를 가져오거나 설정합니다.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">제공된 값이 유효한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닌 경우</exception>
      <exception cref="T:System.NotSupportedException">제공된 값은 이 파이프 스트림에 대해 지원되는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값이 아닙니다.</exception>
      <exception cref="T:System.InvalidOperationException">핸들을 설정하지 않은 경우  
  
 또는  
  
 파이프가 명명된 클라이언트와의 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException">파이프가 끊어졌거나 명명된 클라이언트에 I/O 오류가 발생한 경우</exception>
      <returns>파이프를 통한 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 개체의 읽기 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeStream" /> 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <summary>현재 <see cref="T:System.IO.Pipes.PipeStream" /> 개체에서 캡슐화하는 파이프의 로컬 끝에 대한 SafeHandle을 가져옵니다.</summary>
      <exception cref="T:System.InvalidOperationException">파이프 핸들이 설정되지 않은 경우</exception>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <returns>현재 <see cref="T:Microsoft.Win32.SafeHandles.SafePipeHandle" /> 개체에서 캡슐화하는 파이프에 대한 <see cref="T:System.IO.Pipes.PipeStream" /> 개체입니다.</returns>
    </member>
    <member name="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <summary>현재 파이프가 지원하는 파이프 전송 모드를 가져옵니다.</summary>
      <exception cref="T:System.ObjectDisposedException">파이프가 닫혔습니다.</exception>
      <exception cref="T:System.InvalidOperationException">핸들을 설정하지 않은 경우  
  
 또는  
  
 파이프가 익명 클라이언트/서버 작업에서의 연결 또는 명명된 클라이언트와의 연결을 기다리는 중인 경우</exception>
      <exception cref="T:System.IO.IOException">파이프가 손상되었거나 다른 I/O 오류가 발생했습니다.</exception>
      <returns>현재 파이프에서 지원하는 전송 모드를 나타내는 <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> 값 중 하나입니다.</returns>
    </member>
    <member name="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <summary>클라이언트로 호출할 메서드를 나타냅니다.</summary>
    </member>
    <member name="T:System.IO.Pipes.PipeTransmissionMode">
      <summary>파이프의 전송 모드를 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <summary>파이프의 데이터를 바이트 스트림으로 전송하여 읽도록 지정합니다.</summary>
    </member>
    <member name="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <summary>파이프의 데이터를 메시지 스트림으로 전송하여 읽도록 지정합니다.</summary>
    </member>
  </members>
</doc>