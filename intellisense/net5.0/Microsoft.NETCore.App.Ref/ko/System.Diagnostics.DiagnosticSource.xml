<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>로깅에 사용되는 컨텍스트를 통해 작업을 표시합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="operationName">작업의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>지정된 키와 값으로 새 수하물 항목을 가져오도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="key">수하물 키입니다.</param>
      <param name="value">수하물 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)">
      <summary>지정된 활동 이벤트를 이벤트 목록에 추가합니다.</summary>
      <param name="e">추가할 활동 이벤트입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.Object)">
      <summary>추가 <paramref name="key" /> 및 <paramref name="value" />를 사용하여 태그를 포함하도록 활동을 업데이트합니다.</summary>
      <param name="key">태그 키 이름입니다.</param>
      <param name="value">입력 키에 매핑된 태그 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>제공된 <paramref name="key" /> 및 <paramref name="value" />를 사용하여 새 태그를 갖도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="key">태그 키입니다.</param>
      <param name="value">태그 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose">
      <summary>활동이 이미 시작된 경우 활동을 중지하고 이벤트 수신기에게 알립니다. 그렇지 않으면 아무 작업도 수행되지 않습니다.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose(System.Boolean)">
      <summary>파생 형식에 의해 재정의되는 경우 이 메서드는 할당된 리소스를 해제합니다.</summary>
      <param name="disposing">메서드가 종료자에서 호출되는 경우 <see langword="false" />이고, 사용자 코드에서 호출되는 경우 <see langword="true" />입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>
        <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />을 사용하여 작업에 추가된 키-값 쌍의 값을 반환합니다.</summary>
      <param name="key">수하물 키입니다.</param>
      <returns>키-값 쌍 항목의 값(있는 경우) 또는 <see langword="null" />(존재 하지 않는 경우).</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetCustomProperty(System.String)">
      <summary>지정된 속성 이름에 매핑되는 개체를 반환합니다.</summary>
      <param name="propertyName">개체와 연결된 이름입니다.</param>
      <returns>속성 이름에 매핑된 개체입니다(있는 경우). 그렇지 않으면 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)">
      <summary>이 활동에 사용자 지정 개체를 연결합니다. 지정된 <paramref name="propertyName" />이 이전에 다른 개체와 연결된 경우 이 속성은 대신 새 <paramref name="propertyValue" />와 연결되도록 업데이트됩니다. 동일한 값을 사용하는 사용자와의 충돌을 방지하기 위해 고유한 속성 이름을 사용하는 것이 좋습니다.</summary>
      <param name="propertyName">값과 연결할 이름입니다.</param>
      <param name="propertyValue">연결하여 속성 이름에 매핑할 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>해당 <see cref="P:System.Diagnostics.Activity.Duration" />을 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" />와 지정된 중지 시간 간의 차이로 설정하도록 <see cref="T:System.Diagnostics.Activity" />를 업데이트합니다.</summary>
      <param name="endTimeUtc">UTC 중지 시간입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>시작하기 전에 이 <see cref="T:System.Diagnostics.Activity" />의 ID 형식을 설정합니다.</summary>
      <param name="format">
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정하는 열거형 값 중 하나입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>TraceId 및 SpanId의 W3C 규칙을 사용하여 부모 ID를 설정합니다.</summary>
      <param name="traceId">부모 활동의 TraceId입니다.</param>
      <param name="spanId">부모 작업의 SpanId입니다.</param>
      <param name="activityTraceFlags">작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정하는 열거 값 중 하나입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />를 업데이트하여 ID가 <paramref name="parentId" />인 <see cref="T:System.Diagnostics.Activity" />가 이 <see cref="T:System.Diagnostics.Activity" />의 원인임을 나타냅니다.</summary>
      <param name="parentId">부모 작업의 ID입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 시작 시간을 설정합니다.</summary>
      <param name="startTimeUtc">
        <see cref="T:System.Diagnostics.Activity" /> 시작 시간(UTC)입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetTag(System.String,System.Object)">
      <summary>입력 키 및 값을 사용하여 활동 태그를 추가하거나 업데이트합니다.</summary>
      <param name="key">태그 키 이름입니다.</param>
      <param name="value">입력 키에 매핑된 태그 값입니다.</param>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>작업을 시작합니다.</summary>
      <returns>편리한 연결을 위한 <see langword="this" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>작업을 중지합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>작업과 연결된 플래그(W3C ID 사양에 의해 정의됨)를 가져옵니다.</summary>
      <returns>활동과 연결 된 플래그입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 자식 항목으로 전달되는 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Context">
      <summary>활동의 컨텍스트를 가져옵니다. 컨텍스트는 활동이 시작된 경우에만 유효합니다.</summary>
      <returns>활동이 시작 된 경우 활동의 컨텍스트입니다. 그렇지 않으면 기본 컨텍스트를 반환 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>현재 스레드에 대한 현재 작업(<see cref="T:System.Diagnostics.Activity" />)을 가져오거나 설정합니다.  이는 비동기 호출 간에 이동합니다.</summary>
      <returns>현재 스레드의 현재 작업입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>
        <see cref="T:System.Diagnostics.Activity" />에 대한 기본 ID 형식을 가져오거나 설정합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.DisplayName">
      <summary>활동의 표시 이름을 가져오거나 설정합니다.</summary>
      <returns>활동 표시 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>작업 기간을 가져옵니다.</summary>
      <returns>가 종료 되었거나 <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> (또는가 호출 된 경우)와 종료 시간 사이의 델타 <see cref="T:System.Diagnostics.Activity" /><see cref="M:System.Diagnostics.Activity.Stop" /> 이거나, <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="F:System.TimeSpan.Zero" /> 이 종료 되지 않고가 호출 되지 않은 경우에는 <see cref="T:System.Diagnostics.Activity" /><see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Events">
      <summary>이 활동에 연결된 모든 활동 이벤트 목록을 가져옵니다.</summary>
      <returns>이 작업에 연결 된 작업 이벤트의 열거형입니다. 활동에 이벤트가 없는 경우는 빈 열거형을 반환 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />이 항상 기본 ID 형식을 정의하는 데 사용되는지 여부를 확인하는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" /> 항상을 사용 하려면 <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> 이 고, 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>특정 요청과 관련된 식별자를 가져옵니다.</summary>
      <returns>활동 ID입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />에 대한 형식을 가져옵니다.</summary>
      <returns>의 형식 <see cref="P:System.Diagnostics.Activity.Id" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IsAllDataRequested">
      <summary>이 활동을 모든 전파 정보뿐만 아니라 링크, 태그 및 이벤트와 같은 다른 모든 속성으로 채워야 하는지 여부를 나타냅니다.</summary>
      <returns>
        <see langword="true" /> 활동을 채워야 하면이 고, 그렇지 않으면입니다. <see langword="false" /> 그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Kind">
      <summary>추적의 활동, 부모 및 자식 간의 관계를 가져옵니다.</summary>
      <returns>추적의 작업, 부모 및 자식 간의 관계를 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Links">
      <summary>이 활동에 연결된 모든 활동 링크 목록을 가져옵니다.</summary>
      <returns>이 작업에 연결 된 작업 링크의 열거형입니다. 작업에 링크가 없는 경우는 빈 열거형을 반환 합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>작업 이름을 가져옵니다.</summary>
      <returns>작업의 이름입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>이 작업을 생성한 부모 <see cref="T:System.Diagnostics.Activity" />를 가져옵니다.</summary>
      <returns>이의 부모 <see cref="T:System.Diagnostics.Activity" /> 이거나, 같은 프로세스에 있는 경우이 고, <see langword="null" /> 이 인스턴스에 부모 (루트 활동)가 없거나 부모가 프로세스 외부에 있는 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>이 작업의 부모 ID를 가져옵니다.</summary>
      <returns>부모 ID (있는 경우) 이거나 <see langword="null" /> 그렇지 않은 경우입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>부모의 <see cref="P:System.Diagnostics.Activity.SpanId" />를 가져옵니다.</summary>
      <returns>부모의 <see cref="P:System.Diagnostics.Activity.SpanId" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>W3CIdFlags.Recorded 플래그가 설정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see langword="true" /> W3CIdFlags 플래그가 설정 되어 있으면이 고, 그렇지 않으면입니다. 그렇지 않으면 <see langword="false" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>이 <see cref="T:System.Diagnostics.Activity" />의 루트 ID를 가져옵니다.</summary>
      <returns>루트 ID 이거나, <see langword="null" /> 현재 인스턴스에 또는가 있는 경우 <see cref="P:System.Diagnostics.Activity.ParentId" /><see cref="P:System.Diagnostics.Activity.Id" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Source">
      <summary>이 활동과 연결된 활동 원본을 가져옵니다.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />의 SPAN 부분을 가져옵니다.</summary>
      <returns>에 W3C 형식이 있으면의 범위 부분에 대 한 ID이 고, <see cref="P:System.Diagnostics.Activity.Id" /><see cref="T:System.Diagnostics.Activity" /> 그렇지 않으면 0 <see langword="SpanId" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>작업이 시작된 시간을 가져옵니다.</summary>
      <returns>작업이 시작 된 UTC 시간입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TagObjects">
      <summary>활동과 함께 기록할 정보를 나타내는 태그 목록을 반환합니다. 이 정보는 이 활동의 자식으로 전달되지 않습니다.</summary>
      <returns>태그 및 개체의 키-값 쌍 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>로깅 시스템에 <see cref="T:System.Diagnostics.Activity" />와 함께 기록될 정보를 나타내는 키/값 쌍의 컬렉션을 가져옵니다.</summary>
      <returns>문자열 문자열 키-값 쌍의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" />의 TraceId 부분을 가져옵니다.</summary>
      <returns>ID에 W3C 형식이 있는 경우의 TraceId 부분에 대 한 ID이 고, <see cref="P:System.Diagnostics.Activity.Id" /> 그렇지 않으면 0 traceid입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>W3C <see langword="tracestate" /> 헤더를 가져옵니다.</summary>
      <returns>W3C <see langword="tracestate" /> 헤더입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityContext">
      <summary>W3C TraceContext 사양을 준수하는 표현입니다. 여기에는 일반적인 TraceFlags 및 시스템 관련 TraceState 값의 집합과 함께 두 가지 식별자 TraceId 및 SpanId가 포함됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.#ctor(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags,System.String,System.Boolean)">
      <summary>지정된 인수를 사용하여 새 활동 컨텍스트 인스턴스를 생성합니다.</summary>
      <param name="traceId">추적 식별자입니다.</param>
      <param name="spanId">범위 식별자입니다.</param>
      <param name="traceFlags">추적에 대한 세부 정보를 포함합니다.</param>
      <param name="traceState">시스템 관련 구성 데이터를 전달합니다.</param>
      <param name="isRemote">컨텍스트가 원격 부모에서 전파되는지 여부를 나타냅니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Diagnostics.ActivityContext)">
      <summary>현재 개체가 동일한 형식의 다른 개체와 같은지 여부를 나타냅니다.</summary>
      <param name="value">이 인스턴스와 비교할 개체입니다.</param>
      <returns>현재 개체가 <paramref name="other" /> 매개 변수와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 <see langword="ActivityContext" /> 개체의 값이 같은지 확인합니다.</summary>
      <param name="obj">이 인스턴스와 비교할 개체입니다.</param>
      <returns>현재 개체가 <paramref name="obj" /> 매개 변수와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.GetHashCode">
      <summary>해시 알고리즘과 데이터 구조(예: 해시 테이블)에 적합한 현재 <see langword="ActivityContext" />의 해시 함수를 제공합니다.</summary>
      <returns>현재 <see langword="ActivityContext" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Equality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>지정된 두 <see langword="ActivityContext" /> 값이 같은지 확인합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Inequality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>지정된 두 <see langword="ActivityContext" /> 값이 같지 않은지 확인합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Parse(System.String,System.String)">
      <summary>W3C 추적 컨텍스트 헤더를 <see cref="T:System.Diagnostics.ActivityContext" /> 개체로 구문 분석합니다.</summary>
      <param name="traceParent">W3C 추적 부모 헤더입니다.</param>
      <param name="traceState">추적 상태입니다.</param>
      <exception cref="T:System.ArgumentException">추적 부모가 잘못되었습니다.</exception>
      <returns>구문 분석 작업에서 만들어진 <see cref="T:System.Diagnostics.ActivityContext" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.TryParse(System.String,System.String,System.Diagnostics.ActivityContext@)">
      <summary>W3C 추적 컨텍스트 헤더를 <see cref="T:System.Diagnostics.ActivityContext" /> 개체로 구문 분석하려고 합니다.</summary>
      <param name="traceParent">W3C 추적 부모 헤더입니다.</param>
      <param name="traceState">W3C 추적 상태입니다.</param>
      <param name="context">이 메서드가 <see langword="true" />를 반환하면 구문 분석 작업에서 만들어진 <see cref="T:System.Diagnostics.ActivityContext" /> 개체입니다.</param>
      <returns>구문 분석에 성공하면 <see langword="true" />이고, 그러지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.IsRemote">
      <summary>활동 컨텍스트가 원격 부모에서 전파되었는지 여부를 나타냅니다.</summary>
      <returns>
        <see langword="true" /> 원격 부모에서 전파 된 경우 <see langword="false" /> 그렇지 않으면입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.SpanId">
      <summary>호출자가 알고 있는 요청의 ID입니다.</summary>
      <returns>컨텍스트의 범위 Id입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceFlags">
      <summary>W3C 표준에서 활동의 ID와 함께 정의된 플래그입니다.</summary>
      <returns>컨텍스트 추적 플래그입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceId">
      <summary>추적 식별자입니다.</summary>
      <returns>컨텍스트의 추적 식별자입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceState">
      <summary>W3C 'tracestate' 헤더를 보관합니다.</summary>
      <returns>W3C ' tracestate ' 헤더를 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityCreationOptions`1">
      <summary>활동 수신기로 전송되는 모든 정보를 캡슐화하여 활동 인스턴스 만들기 및 해당 상태를 결정합니다.

가능한 제네릭 형식 매개 변수는 <see cref="T:System.Diagnostics.ActivityContext" /> 또는 <see cref="T:System.String" />입니다.</summary>
      <typeparam name="T">속성의 형식 <see langword="Parent" /> 입니다. <see cref="T:System.String" /> 또는 <see langword="ActivityContext" />여야 합니다.</typeparam>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Kind">
      <summary>활동을 만드는 데 사용할 활동 종류를 가져옵니다.</summary>
      <returns>작업 종류를 나타내는 열거형 값 중 하나입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Links">
      <summary>활동을 만드는 데 사용할 활동 링크의 열거형을 가져옵니다.</summary>
      <returns>작업 링크의 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Name">
      <summary>만들 활동의 OperationName으로 사용할 이름을 가져옵니다.</summary>
      <returns>활동 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Parent">
      <summary>활동을 만드는 데 사용할 부모 컨텍스트 또는 부모 ID를 가져옵니다.</summary>
      <returns>로 표현 되는 활동의 부모 <see cref="T:System.String" /><see cref="T:System.Diagnostics.ActivityContext" /> 입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.SamplingTags">
      <summary>샘플링 프로세스 중에 더 많은 태그를 추가하는 데 사용되는 컬렉션을 가져옵니다. 추가된 태그는 <see cref="T:System.Diagnostics.ActivityListener" /> 콜백에서 만들어야 하는 것으로 결정된 경우 생성된 작업에도 추가됩니다.</summary>
      <returns>작업 태그 컬렉션입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Source">
      <summary>활동을 만드는 활동 원본을 가져옵니다.</summary>
      <returns>활동 원본 개체입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Tags">
      <summary>활동을 만드는 데 사용할 태그를 가져옵니다.</summary>
      <returns>활동과 연결 된 태그의 키-값 쌍 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.TraceId">
      <summary>
        <see cref="T:System.Diagnostics.ActivityListener" /> 콜백에서 만들어야 하는 것으로 결정된 경우 작업 개체에서 사용할 추적 ID를 가져옵니다.</summary>
      <returns>추적 Id입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityEvent">
      <summary>이름 및 타임스탬프를 포함하는 이벤트와 선택적 태그 목록을 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String)">
      <summary>지정된 이름과 현재 시간을 이벤트 타임스탬프로 사용하여 새 활동 이벤트 인스턴스를 초기화합니다.</summary>
      <param name="name">이벤트 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String,System.DateTimeOffset,System.Diagnostics.ActivityTagsCollection)">
      <summary>지정된 이름, 타임스탬프 및 태그를 사용하여 새 활동 이벤트 인스턴스를 초기화합니다.</summary>
      <param name="name">이벤트 이름입니다.</param>
      <param name="timestamp">이벤트 타임스탬프입니다. 타임스탬프는 이 호출의 시점이 아니라 과거에 발생한 이벤트에만 사용해야 합니다.</param>
      <param name="tags">이벤트 태그입니다.</param>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Name">
      <summary>활동 이벤트 이름을 가져옵니다.</summary>
      <returns>작업 이벤트 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Tags">
      <summary>이벤트와 연결된 태그의 컬렉션을 가져옵니다.</summary>
      <returns>이벤트와 연결 된 태그를 포함 하는 키-값 쌍 열거형입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Timestamp">
      <summary>활동 이벤트 타임스탬프를 가져옵니다.</summary>
      <returns>작업 이벤트 타임 스탬프를 나타내는 datetime 오프셋입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> 속성의 형식을 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>계층 구조 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>알 수 없는 형식입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>W3C 형식입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityKind">
      <summary>추적의 활동, 부모 및 자식 간의 관계를 설명합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Client">
      <summary>외부 구성 요소에 보내는 요청입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Consumer">
      <summary>외부 구성 요소에서 받은 출력입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Internal">
      <summary>원격 부모 또는 자식을 사용한 작업이 아닌 애플리케이션 내부 작업입니다. 기본값입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Producer">
      <summary>외부 구성 요소에 제공되는 출력입니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Server">
      <summary>외부 구성 요소에서 들어오는 요청입니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityLink">
      <summary>활동은 인과적으로 관련된 0개 이상의 활동 컨텍스트 인스턴스에 연결될 수 있습니다.

활동 링크는 단일 추적 내에서 또는 여러 추적 간에 활동 컨텍스트를 가리킬 수 있습니다.

활동 링크를 사용하여 여러 시작 활동에서 활동이 시작된 일괄 처리 활동을 나타낼 수 있습니다. 각각은 일괄 처리에서 처리되는 들어오는 항목 하나를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.#ctor(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityTagsCollection)">
      <summary>활동에 연결할 수 있는 새 활동 링크를 생성합니다.</summary>
      <param name="context">추적 활동 컨텍스트입니다.</param>
      <param name="tags">활동 컨텍스트와 연결된 태그의 키-값 쌍 목록입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Diagnostics.ActivityLink)">
      <summary>현재 활동 링크가 다른 활동 링크와 같은지 여부를 나타냅니다.</summary>
      <param name="value">비교할 활동 링크입니다.</param>
      <returns>현재 활동 링크가 <paramref name="other" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Object)">
      <summary>현재 활동 링크가 다른 개체와 같은지 여부를 나타냅니다.</summary>
      <param name="obj">비교할 개체입니다.</param>
      <returns>현재 활동 링크가 <paramref name="obj" />이면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.GetHashCode">
      <summary>해시 알고리즘과 데이터 구조(예: 해시 테이블)에 적합한 현재 <see langword="ActivityLink" />의 해시 함수를 제공합니다.</summary>
      <returns>현재 <see langword="ActivityLink" />의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Equality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>지정된 두 <see langword="ActivityLink" /> 값이 같은지 확인합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" />과 <paramref name="right" />가 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Inequality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>지정된 두 <see langword="ActivityLink" /> 값이 같지 않은지 확인합니다.</summary>
      <param name="left">비교할 첫 번째 값입니다.</param>
      <param name="right">비교할 두 번째 값입니다.</param>
      <returns>
        <paramref name="left" />과 <paramref name="right" />가 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Context">
      <summary>이 활동 링크 내에서 활동 컨텍스트를 검색합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Tags">
      <summary>활동 컨텍스트에 연결된 태그의 키-값 쌍 열거형을 검색합니다.</summary>
      <returns>작업 컨텍스트에 연결 된 태그의 열거형입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityListener">
      <summary>시작 및 중지 활동 이벤트 수신 대기를 허용하고 샘플링 시나리오를 위한 활동 만들기를 결정할 수 있는 기회를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.#ctor">
      <summary>활동 이벤트 수신 대기를 시작하기 위해 새 활동 수신기 개체를 생성합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.Dispose">
      <summary>활동 이벤트 수신 대기에서 이 활동 수신기 개체의 등록을 취소합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStarted">
      <summary>활동 시작 이벤트를 수신 대기하는 데 사용되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>작업 시작 이벤트를 수신 하는 데 사용 되는 작업 콜백 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStopped">
      <summary>활동 중지 이벤트를 수신하는 데 사용되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>작업 중지 이벤트를 수신 하는 데 사용 되는 작업 콜백 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.Sample">
      <summary>특정 데이터 상태를 사용하여 <see cref="T:System.Diagnostics.Activity" /> 개체를 만들 수 있는지 여부를 결정하는 데 사용되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>샘플 작업 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.SampleUsingParentId">
      <summary>특정 데이터 상태를 사용하여 <see cref="T:System.Diagnostics.Activity" /> 개체를 만들 수 있는지 여부를 결정하는 데 사용되는 콜백을 가져오거나 설정합니다.</summary>
      <returns>샘플 작업 인스턴스입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ShouldListenTo">
      <summary>활동 원본 개체를 사용하여 만든 활동 개체 이벤트를 수신 대기해야 하는지 여부를 결정할 수 있는 콜백을 가져오거나 설정합니다.</summary>
      <returns>
        <see langword="true" /> 이벤트를 수신 대기 하려면 <see langword="false" /> 그렇지 않으면입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySamplingResult">
      <summary>
        <see cref="T:System.Diagnostics.ActivityListener" />에서 사용하는 열거형 값으로, 관련 <see cref="T:System.Diagnostics.Activity" />의 수집할 데이터 양을 나타냅니다. 더 많은 데이터를 요청하면 성능 오버헤드가 증가합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllData">
      <summary>작업 개체는 모든 전파 정보로 채워져야 하며 링크, 태그 및 이벤트와 같은 다른 모든 속성으로도 채워져야 합니다. 이 값을 사용하면 <see cref="P:System.Diagnostics.Activity.IsAllDataRequested" />에서 <see langword="true" />가 반환됩니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllDataAndRecorded">
      <summary>작업 개체는 <see cref="F:System.Diagnostics.ActivitySamplingResult.AllData" /> 사례와 동일하게 채워야 합니다. 또한 Activity.Recorded는 <see langword="true" />로 설정됩니다. W3C 추적 ID를 사용하는 작업의 경우 다운스트림에 전파되어 추적이 모든 위치에 기록되도록 요청하는 플래그 비트를 ID에 설정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.None">
      <summary>작업 개체를 만들 필요가 없습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.PropagationData">
      <summary>작업 개체를 만들어야 합니다. 이름, 원본, ID 및 수하물이 포함됩니다. 기타 속성은 필요하지 않으며 이 수신기에서 무시됩니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySource">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> 개체를 만들고 시작하며 <see cref="T:System.Diagnostics.Activity" /> 이벤트를 수신 대기하도록 <see cref="T:System.Diagnostics.ActivityListener" /> 개체를 등록하기 위해 API를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)">
      <summary>지정된 <paramref name="name" />을 사용하여 활동 원본 개체를 생성합니다.</summary>
      <param name="name">활동 원본 개체의 이름입니다.</param>
      <param name="version">추적 정보를 게시하는 구성 요소의 버전입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)">
      <summary>활동 시작 및 중지 이벤트에 수신기를 추가합니다.</summary>
      <param name="listener">활동 이벤트를 수신 대기하는 데 사용할 활동 수신기 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.Dispose">
      <summary>활동 원본 개체를 삭제하고, 전역 목록에서 현재 인스턴스를 제거하고, 수신기 목록을 비웁니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.HasListeners">
      <summary>이 활동 원본에 대한 수신기가 있는지 확인합니다.</summary>
      <returns>이 활동 원본에 등록된 수신기가 있으면 <see langword="true" />이고, 없으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)">
      <summary>활성 수신기가 있는 경우 지정된 이름 및 활동 종류를 사용하여 새 활동을 만듭니다.</summary>
      <param name="name">활동의 작업 이름입니다.</param>
      <param name="kind">활동 종류입니다.</param>
      <returns>활성 수신기가 있는 경우 만든 활동 개체이고, 이벤트 수신기가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>활성 수신기가 있는 경우 지정된 이름, 활동 종류, 부모 활동 컨텍스트, 태그, 선택적 활동 링크 및 선택적인 시작 시간을 사용하여 새 활동을 만듭니다.</summary>
      <param name="name">활동의 작업 이름입니다.</param>
      <param name="kind">활동 종류입니다.</param>
      <param name="parentContext">만든 활동 개체를 초기화할 부모 <see cref="T:System.Diagnostics.ActivityContext" /> 개체입니다.</param>
      <param name="tags">만든 활동 개체를 초기화하는 데 사용할 선택적 태그 목록입니다.</param>
      <param name="links">만든 활동 개체를 초기화하는 데 사용할 선택적 <see cref="T:System.Diagnostics.ActivityLink" /> 목록입니다.</param>
      <param name="startTime">만든 활동 개체에 설정할 선택적 시작 타임스탬프입니다.</param>
      <returns>활성 수신기가 있는 경우 만든 활동 개체이고, 이벤트 수신기가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>활성 수신기가 있는 경우 지정된 이름, 활동 종류, 부모 ID, 태그, 선택적 활동 링크 및 선택적 시작 시간을 사용하여 새 활동을 만듭니다.</summary>
      <param name="name">활동의 작업 이름입니다.</param>
      <param name="kind">활동 종류입니다.</param>
      <param name="parentId">만든 활동 개체를 초기화하는 데 사용할 부모 ID입니다.</param>
      <param name="tags">만든 활동 개체를 초기화하는 데 사용할 선택적 태그 목록입니다.</param>
      <param name="links">만든 활동 개체를 초기화하는 데 사용할 선택적 <see cref="T:System.Diagnostics.ActivityLink" /> 목록입니다.</param>
      <param name="startTime">만든 활동 개체에 설정할 선택적 시작 타임스탬프입니다.</param>
      <returns>활성 수신기가 있는 경우 만든 활동 개체이고, 이벤트 수신기가 없는 경우 <see langword="null" />입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Name">
      <summary>활동 원본 이름을 반환합니다.</summary>
      <returns>활동 원본 이름을 나타내는 문자열입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Version">
      <summary>활동 원본 버전을 반환합니다.</summary>
      <returns>활동 원본 버전을 나타내는 문자열입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>W3C 표준에 따라 서식이 지정된 <see cref="P:System.Diagnostics.Activity.SpanId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>현재 <see cref="T:System.Diagnostics.ActivitySpanId" />의 8바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination">SpanID의 8바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>8바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">8바이트의 읽기 전용 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>16개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">16개의 16진수 문자를 포함하는 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.

또는 
<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivitySpanId" /> 값을 만듭니다.</summary>
      <param name="idData">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>이 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId">비교할 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>현재스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스여야 함)의 값이 동일해야 합니다.</summary>
      <param name="obj">비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivitySpanId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>SpanId의 해시 코드를 반환합니다.</summary>
      <returns>SpanId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="spanId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivitySpanId" /> 인스턴스의 값이 다른지 확인합니다.</summary>
      <param name="spanId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="spandId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="spanId1" />의 SpanId가 <paramref name="spandId2" />의 SpanId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 범위 ID의 16자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection">
      <summary>ActivityTagsCollection은 추적 태그를 저장하는 데 사용되는 컬렉션 클래스입니다.

이 컬렉션은 <see cref="T:System.Diagnostics.ActivityEvent" /> 및 <see cref="T:System.Diagnostics.ActivityLink" /> 같은 클래스와 함께 사용됩니다.

이 컬렉션은 다음과 같이 동작합니다. - 컬렉션 항목을 추가하는 방법에 따라 정렬됩니다.
- 동일한 키를 가진 항목의 중복을 허용하지 않습니다.
- 인덱서를 사용하여 컬렉션에 항목을 저장하는 경우: - 항목이 이전에 컬렉션에 있던 키를 포함하고 해당 값이 <see langword="null" />이면 이 키와 일치하는 컬렉션 항목이 컬렉션에서 제거됩니다.
- 항목이 이전에 컬렉션에 있던 키를 포함하고 해당 값이 <see langword="null" />이 아니면 새 항목 값이 컬렉션에 저장된 이전 값을 대체합니다.
- 그렇지 않으면 항목이 컬렉션에 추가됩니다.
- Add 메서드는 키가 동일한 항목이 아직 없는 경우 컬렉션에 새 항목을 추가합니다. 그렇지 않으면 예외가 throw됩니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor">
      <summary>컬렉션의 새 인스턴스를 만듭니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>컬렉션의 새 인스턴스를 만들고 컬렉션에 입력 목록 항목을 저장합니다.</summary>
      <param name="list">컬렉션에 저장할 초기 목록입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>컬렉션에 항목을 추가합니다.</summary>
      <param name="item">컬렉션에 추가할 태그의 키 및 값 쌍입니다.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" />이 목록에 이미 있습니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" />이(가) <see langword="null" />인 경우</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.String,System.Object)">
      <summary>제공된 키 및 값을 사용하여 태그를 컬렉션에 추가합니다. 이 컬렉션에서는 키가 동일한 두 태그를 추가할 수 없습니다.</summary>
      <param name="key">태그 키입니다.</param>
      <param name="value">태그 값입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Clear">
      <summary>컬렉션에서 모든 항목을 제거합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" />에 특정 값이 들어 있는지 여부를 확인합니다.</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" />에서 찾을 개체입니다.</param>
      <returns>
        <see langword="true" />가 <paramref name="item" />에 있으면 <see cref="T:System.Collections.Generic.ICollection`1" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.ContainsKey(System.String)">
      <summary>컬렉션에 지정된 키를 가진 요소가 포함된지를 확인합니다.</summary>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" />에서 찾을 수 있는 키입니다.</param>
      <returns>컬렉션에 해당 키를 가진 태그가 포함되어 있으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>특정 배열 인덱스부터 시작하여 컬렉션의 요소를 배열에 복사합니다.</summary>
      <param name="array">컬렉션에서 복사한 요소의 대상인 배열입니다.</param>
      <param name="arrayIndex">배열에서 복사를 시작할 인덱스입니다. 이 인덱스는 0부터 시작합니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see langword="ActivityTagsCollection" />에 대한 열거자입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>컬렉션에서 맨 처음 발견되는 특정 항목을 제거합니다.</summary>
      <param name="item">제거할 태그 키-값 쌍입니다.</param>
      <returns>항목이 컬렉션에서 제거된 경우 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다. 이 메서드는 항목이 원래 컬렉션에 없는 경우에도 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.String)">
      <summary>지정된 키를 가진 태그를 컬렉션에서 제거합니다.</summary>
      <param name="key">태그 키입니다.</param>
      <returns>항목이 존재했다가 제거되었으면 <see langword="true" />입니다. 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 열거자입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>컬렉션을 반복하는 데 사용할 수 있는 <see cref="T:System.Collections.IEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.TryGetValue(System.String,System.Object@)">
      <summary>지정한 키와 연결된 값을 가져옵니다.</summary>
      <param name="key">태그 키입니다.</param>
      <param name="value">태그 값입니다.</param>
      <returns>이 메서드가 반환될 때 지정한 키가 있는 경우 해당 키와 연결된 값이고, 그렇지 않으면 값 매개 변수 형식의 기본값입니다. 이 매개 변수는 초기화되지 않은 상태로 전달됩니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Count">
      <summary>컬렉션에 포함된 요소 수를 가져옵니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.IsReadOnly">
      <summary>컬렉션이 읽기 전용인지를 나타내는 값을 가져옵니다. 항상 <see langword="false" />를 반환합니다.</summary>
      <returns>항상 <see langword="false" />를 반환합니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Item(System.String)">
      <summary>컬렉션 항목을 가져오거나 설정합니다.
        
이 인덱서 속성에 값을 설정하는 경우 다음과 같은 동작이 발생합니다. - 키가 이전에 컬렉션에 있었고 해당 값이 <see langword="null" />이면 이 키와 일치하는 컬렉션 항목이 컬렉션에서 제거됩니다.
- 키가 이전에 컬렉션에 있었고 해당 값이 <see langword="null" />이 아니면 이 값은 컬렉션에 저장된 이전 값을 대체합니다.
- 그렇지 않으면 새 항목이 컬렉션에 추가됩니다.</summary>
      <param name="key">가져오거나 설정할 값의 키입니다.</param>
      <returns>키에 매핑되는 개체입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Keys">
      <summary>모든 저장된 태그의 키 목록을 가져옵니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Values">
      <summary>모든 저장된 태그의 값 목록을 가져옵니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection.Enumerator">
      <summary>
        <see langword="ActivityTagsCollection" />의 요소를 열거합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.Dispose">
      <summary>관리되지 않는 리소스의 확보, 해제 또는 다시 설정과 관련된 애플리케이션 정의 작업을 수행합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.MoveNext">
      <summary>열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns>열거자가 다음 요소로 이동한 경우 <see langword="true" />이(가) 반환되고, 컬렉션의 끝을 지난 경우 <see langword="false" />이(가) 반환됩니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.Current">
      <summary>컬렉션에서 열거자의 현재 위치에 있는 요소를 가져옵니다.</summary>
      <returns>컬렉션에서 열거자의 현재 위치에 있는 요소입니다.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>컬렉션에서 열거자의 현재 위치에 있는 요소를 가져옵니다.</summary>
      <returns>컬렉션에서 열거자의 현재 위치에 있는 요소입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>작업과 연결된 W3C 표준에 의해 정의된 플래그를 지정합니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>활동이 표시되지 않았습니다.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>활동(또는 부모)이 기록에 유용한 것으로 표시되었습니다.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>형식이 W3C 표준을 기반으로 하는 <see cref="P:System.Diagnostics.Activity.TraceId" />를 나타냅니다.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>현재 <see cref="T:System.Diagnostics.ActivityTraceId" />의 16바이트를 지정된 범위에 복사합니다.</summary>
      <param name="destination">추적 ID의 16바이트를 복사할 범위입니다.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>16바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">16바이트의 읽기 전용 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에 8바이트가 포함되어 있지 않습니다.</exception>
      <returns>새 추적 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>32개의 16진수 문자의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">32개의 16진수 문자를 포함하는 범위입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" />에는 16개의 16진수 문자가 포함되어 있지 않습니다.

또는

<paramref name="idData" />의 문자는 모두 소문자 16진수 문자 또는 모두 0이 아닙니다.</exception>
      <returns>새 추적 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8로 인코딩된 바이트의 읽기 전용 범위에서 새 <see cref="T:System.Diagnostics.ActivityTraceId" /> 값을 만듭니다.</summary>
      <param name="idData">UTF8로 인코딩된 바이트의 읽기 전용 범위입니다.</param>
      <returns>새 추적 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>임의의 숫자를 기반으로 새 <see cref="T:System.Diagnostics.ActivitySpanId" />를 만듭니다(고유할 가능성이 매우 높음).</summary>
      <returns>새 범위 ID입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>현재 인스턴스와 지정된 <see cref="T:System.Diagnostics.ActivityTraceId" />가 같은지 여부를 확인합니다.</summary>
      <param name="traceId">비교할 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId" />에 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>이 인스턴스와 지정된 개체(<see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스여야 함)의 값이 같은지를 확인합니다.</summary>
      <param name="obj">비교할 개체입니다.</param>
      <returns>
        <paramref name="obj" />가 <see cref="T:System.Diagnostics.ActivityTraceId" />의 인스턴스이고 현재 인스턴스와 같은 16진수 값이 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>TraceId의 해시 코드를 반환합니다.</summary>
      <returns>TraceId의 해시 코드입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 같으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>지정된 두 <see cref="T:System.Diagnostics.ActivityTraceId" /> 인스턴스의 값이 같은지를 확인합니다.</summary>
      <param name="traceId1">비교할 첫 번째 인스턴스입니다.</param>
      <param name="traceId2">비교할 두 번째 인스턴스입니다.</param>
      <returns>
        <paramref name="traceId1" />의 TraceId가 <paramref name="traceId2" />의 TraceId와 다르면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>이 범위 ID를 나타내는 16자 16진수 문자열을 반환합니다.</summary>
      <returns>이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>이 추적 ID를 나타내는 32자의 16진수 문자열을 반환합니다.</summary>
      <returns>이 추적 ID의 32자 16진수 문자열 표현입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>소스가 해당 정보(이벤트)를 보내는 명명된 위치를 나타내는 추상 <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>새 <see cref="T:System.Diagnostics.DiagnosticListener" />를 만듭니다.</summary>
      <param name="name">이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>NotificationListeners를 삭제합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>등록된 구독자가 있는지 여부를 결정합니다.</summary>
      <returns>등록된 구독자가 있으며 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 활성화 여부를 확인합니다.</summary>
      <param name="name">확인할 이벤트의 이름입니다.</param>
      <returns>알림이 활성화되었으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>진단 이벤트의 구독자가 이 이름을 사용하는 이벤트를 수신하는 데 관심이 있는지 확인합니다. 구독자는 <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />에서 제공되는 대리자를 통해 관심을 표시합니다.</summary>
      <param name="name">확인할 이벤트의 이름입니다.</param>
      <param name="arg1">컨텍스트를 나타내는 개체입니다.</param>
      <param name="arg2">컨텍스트를 나타내는 개체입니다.</param>
      <returns>사용하도록 설정되어 있으면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>모든 구독자의 OnActivityExport 메서드를 호출합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>모든 구독자의 OnActivityImport 메서드를 호출합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">들어오는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>구독자를 추가합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>구독자를 추가하고 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>구독자를 추가하고, 필요에 따라 이름과 최대 두 개의 컨텍스트 개체를 기준으로 이벤트를 필터링하고, 공급자가 프로세스 외부에서 활동을 가져오거나 내보낼 때 호출할 메서드를 지정합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">이름 및 최대 두 개의 컨텍스트 개체(<see langword="null" />일 수 있음)에 따라 이벤트를 필터링하는 대리자이거나 이벤트 필터가 바람직하지 않은 경우 <see langword="null" />입니다.</param>
      <param name="onActivityImport">들어오는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <param name="onActivityExport">나가는 요청을 나타내는 개체와 외부 이벤트의 영향을 받는 활동을 받는 작업 대리자입니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>구독자를 추가하고 필요에 따라 이름을 기준으로 이벤트를 필터링합니다.</summary>
      <param name="observer">구독자입니다.</param>
      <param name="isEnabled">해당 이름(<see cref="T:System.String" />)에 따라 이벤트를 필터링하는 대리자입니다. 이벤트가 활성화된 경우 대리자는 <see langword="true" />를 반환해야 합니다.</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" />가 알림 전송을 완료하기 전에 수진자가 알림 수신을 중지할 수 있는 인터페이스에 대한 참조입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>이 DiagnosticListener의 이름이 있는 문자열을 반환합니다.</summary>
      <returns>이 DiagnosticListener의 이름입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>알림을 기록합니다.</summary>
      <param name="name">기록할 이벤트의 이름입니다.</param>
      <param name="value">이벤트의 페이로드를 나타내는 개체입니다.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 수신기 컬렉션을 가져옵니다.</summary>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>이 <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticListener" />의 이름입니다.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>계측된 프로세스 내에서 사용하기 위한 다양한 데이터 페이로드의 프로덕션 시간 로깅에 대한 코드를 계측할 수 있는 추상 클래스입니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> 클래스의 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>알림 이벤트가 설정되었는지 여부를 확인합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <returns>알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>알림 이벤트가 활성화되었는지 확인합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <param name="arg1">IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 소비자가 이러한 이벤트에 대한 알림을 받기를 원하는지 여부를 확인하기 위해 순수 IsEnabled(string)라고 하는 생산자를 나타낼 수 있습니다. 이를 기반으로 생산자는 <see langword="null" /> 이외의 컨텍스트를 사용하여 IsEnabled(문자열, 개체, 개체)를 다시 호출할 수 있습니다.</param>
      <param name="arg2">선택 사항입니다. IsEnabled에 대한 추가 컨텍스트를 나타내는 개체입니다. 기본적으로 <see langword="null" />입니다. 소비자는 <see langword="null" />을 받을 것으로 예상해야 합니다. 이는 순수 IsEnabled(문자열) 또는 생산자라고 하는 생산자가 <paramref name="arg1" />에서 필요한 모든 컨텍스트를 통과했음을 나타낼 수 있습니다.</param>
      <returns>알림 이벤트가 활성화되면 <see langword="true" />이고, 그렇지 않으면 <see langword="false" />입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>프로세스 외부에서 발생하는 나가는 HTTP 요청과 같은 일부 이벤트 또는 작업으로 상태를 전송합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">보내는 요청을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>프로세스 외부에서 발생한 들어오는 요청과 같은 이벤트 또는 작업에서 상태를 활동으로 전송합니다.</summary>
      <param name="activity">외부 이벤트의 영향을 받는 작업입니다.</param>
      <param name="payload">들어오는 요청을 나타내는 페이로드입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" />를 시작하고 이벤트를 씁니다.</summary>
      <param name="activity">
        <see cref="T:System.Diagnostics.Activity" />가 시작됩니다.</param>
      <param name="args">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다.</param>
      <returns>편리한 연결을 위한 시작 작업입니다.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>지정된 <see cref="T:System.Diagnostics.Activity" />를 중지하고, 글로벌 <see cref="P:System.Diagnostics.Activity.Current" /> 작업을 유지 관리하고, 소비자에게 <see cref="T:System.Diagnostics.Activity" />가 중지되었음을 알립니다.</summary>
      <param name="activity">중지할 작업입니다.</param>
      <param name="args">이벤트의 페이로드로 전달된 값을 나타내는 개체입니다.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>복잡한 페이로드를 로깅하는 일반적인 방법을 제공합니다.</summary>
      <param name="name">작성 중인 이벤트의 이름입니다.</param>
      <param name="value">이벤트의 페이로드로 전달되는 값을 나타내는 개체입니다. 이는 종종 여러 하위 값을 포함하는 익명 형식입니다.</param>
    </member>
    <member name="T:System.Diagnostics.SampleActivity`1">
      <summary>샘플링 프로세스에서 사용되는 <see cref="T:System.Diagnostics.ActivityListener" /> 콜백의 시그니처를 정의하는 대리자입니다.</summary>
      <param name="options">
        <see cref="T:System.Diagnostics.ActivityListener" /> 콜백에서 작업 개체를 만들지 여부를 결정하는 데 사용하는 작업 만들기 옵션입니다.</param>
      <typeparam name="T">활동 개체를 만들 요청 된 부모의 유형입니다. 는 문자열 또는 <see cref="T:System.Diagnostics.ActivityContext" /> 인스턴스여야 합니다.</typeparam>
      <returns>샘플링 결과를 포함하는 개체로, 관련 <see cref="T:System.Diagnostics.Activity" />의 수집할 데이터 양을 나타냅니다.</returns>
    </member>
  </members>
</doc>