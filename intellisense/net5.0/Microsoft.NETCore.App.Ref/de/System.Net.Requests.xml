<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Requests</name>
  </assembly>
  <members>
    <member name="T:System.Net.AuthenticationManager">
      <summary>Verwaltet die Authentifizierungsmodule, die während der Clientauthentifizierung aufgerufen werden.</summary>
    </member>
    <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Ruft alle registrierten Authentifizierungsmodule auf, um das erste Modul zu bestimmen, das auf die Authentifizierungsanforderung antworten kann.</summary>
      <param name="challenge">Die Aufforderung, die von der Internetressource zurückgegeben wird.</param>
      <param name="request">Die <see cref="T:System.Net.WebRequest" />, von der die Authentifizierungsaufforderung initiiert wurde.</param>
      <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="challenge" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="request" /> ist <see langword="null" />.  
  
- oder - 
 <paramref name="credentials" /> ist <see langword="null" />.</exception>
      <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, die das Ergebnis des Authentifizierungsversuchs enthält. Wenn kein Authentifizierungsmodul verfügbar ist, das auf die Aufforderung antworten kann, gibt diese Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Führt die Vorauthentifizierung einer Anforderung durch.</summary>
      <param name="request">Eine <see cref="T:System.Net.WebRequest" /> an eine Internetressource.</param>
      <param name="credentials">Die mit dieser Anforderung verknüpften <see cref="T:System.Net.ICredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="request" /> ist <see langword="null" />.</exception>
      <returns>Eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse, wenn die Anforderung vorauthentifiziert werden kann, andernfalls <see langword="null" />. Wenn <paramref name="credentials" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="null" /> zurück.</returns>
    </member>
    <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
      <summary>Registriert ein Authentifizierungsmodul beim Authentifizierungsmanager.</summary>
      <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das beim Authentifizierungsmanager registriert werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
      <summary>Entfernt das angegebene Authentifizierungsmodul aus der Liste der registrierten Module.</summary>
      <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das aus der Liste der registrierten Module entfernt werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationModule" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Das angegebene <see cref="T:System.Net.IAuthenticationModule" /> ist nicht registriert.</exception>
    </member>
    <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
      <summary>Entfernt die Authentifizierungsmodule mit dem angegebenen Authentifizierungsschema aus der Liste der registrierten Module.</summary>
      <param name="authenticationScheme">Das Authentifizierungsschema des zu entfernenden Moduls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="authenticationScheme" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ein Modul ist für dieses Authentifizierungsschema nicht registriert.</exception>
    </member>
    <member name="P:System.Net.AuthenticationManager.CredentialPolicy">
      <summary>Ruft die Anmeldeinformationen-Richtline ab, die für mit der <see cref="T:System.Net.HttpWebRequest" />-Klasse durchgeführte Ressourcenanforderungen verwendet werden soll, oder legt diese fest.</summary>
      <returns>Ein Objekt, das die <see cref="T:System.Net.ICredentialPolicy" />-Schnittstelle implementiert und bestimmt, ob mit Anforderungen Anmeldeinformationen gesendet werden. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.CustomTargetNameDictionary">
      <summary>Ruft das Wörterbuch ab, das SPNs (Service Principal Names) enthält. Diese werden während der Kerberos-Authentifizierung zum Identifizieren von Hosts für Anforderungen verwendet, die mit <see cref="T:System.Net.WebRequest" /> und den abgeleiteten Klassen ausgeführt werden.</summary>
      <returns>Ein nicht schreibgeschütztes <see cref="T:System.Collections.Specialized.StringDictionary" />, das die SPN-Werte für aus Hostinformationen bestehende Schlüssel enthält.</returns>
    </member>
    <member name="P:System.Net.AuthenticationManager.RegisteredModules">
      <summary>Ruft eine Liste der Authentifizierungsmodule ab, die beim Authentifizierungsmanager registriert sind.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />, mit dem die registrierten Authentifizierungsmodule gelesen werden können.</returns>
    </member>
    <member name="T:System.Net.Authorization">
      <summary>Enthält eine Authentifizierungsmeldung für einen Internetserver.</summary>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Authorization" />-Klasse mit der angegebenen Autorisierungsmeldung.</summary>
      <param name="token">Die vom Server erwartete verschlüsselte Autorisierungsmeldung.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Authorization" />-Klasse mit der angegebenen Autorisierungsmeldung und dem angegebenen Abschlussstatus.</summary>
      <param name="token">Die vom Server erwartete verschlüsselte Autorisierungsmeldung.</param>
      <param name="finished">Der Abschlussstatus des Autorisierungsversuchs. <see langword="true" />, wenn der Autorisierungsversuch abgeschlossen wurde, andernfalls <see langword="false" />.</param>
    </member>
    <member name="M:System.Net.Authorization.#ctor(System.String,System.Boolean,System.String)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Net.Authorization" />-Klasse mit der angegebenen Autorisierungsmeldung, dem Abschlussstatus und dem Bezeichner der Verbindungsgruppe.</summary>
      <param name="token">Die vom Server erwartete verschlüsselte Autorisierungsmeldung.</param>
      <param name="finished">Der Abschlussstatus des Autorisierungsversuchs. <see langword="true" />, wenn der Autorisierungsversuch abgeschlossen wurde, andernfalls <see langword="false" />.</param>
      <param name="connectionGroupId">Ein eindeutiger Bezeichner, mit dem private Client-Server-Verbindungen erstellt werden können, die nur an dieses Authentifizierungsschema gebunden werden.</param>
    </member>
    <member name="P:System.Net.Authorization.Complete">
      <summary>Ruft den Abschlussstatus der Autorisierung ab.</summary>
      <returns>
        <see langword="true" />, wenn der Authentifizierungsvorgang abgeschlossen ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ConnectionGroupId">
      <summary>Ruft einen eindeutigen Bezeichner für benutzerspezifische Verbindungen ab.</summary>
      <returns>Eine eindeutige Zeichenfolge, die einer Verbindung eine Authentifizierungsentität zuordnet.</returns>
    </member>
    <member name="P:System.Net.Authorization.Message">
      <summary>Ruft die Meldung ab, die als Reaktion auf eine Authentifizierungsaufforderung an den Server zurückgegeben wird.</summary>
      <returns>Die Meldung, die als Reaktion auf eine Authentifizierungsaufforderung an den Server zurückgegeben wird.</returns>
    </member>
    <member name="P:System.Net.Authorization.MutuallyAuthenticated">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob eine gegenseitige Authentifizierung erfolgt ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn sowohl Client als auch Server authentifiziert wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.Authorization.ProtectionRealm">
      <summary>Ruft das Präfix für URIs (Uniform Resource Identifiers) ab, die mit der <see cref="P:System.Net.Authorization.Message" />-Eigenschaft authentifiziert werden können, oder legt dieses fest.</summary>
      <returns>Ein Zeichenfolgenarray, das URI-Präfixe enthält.</returns>
    </member>
    <member name="T:System.Net.Cache.HttpCacheAgeControl">
      <summary>Gibt die Bedeutung von Zeitwerten an, die das Cacheverhalten für Ressourcen steuern, die mithilfe von <see cref="T:System.Net.HttpWebRequest" />-Objekten abgerufen wurden.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAge">
      <summary>Inhalt kann aus dem Cache abgerufen werden, bis sein Alter das mit diesem Wert angegebene Alter überschreitet.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMaxStale">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> und <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxAgeAndMinFresh">
      <summary>
        <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge" /> und <see cref="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh" />.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MaxStale">
      <summary>Inhalt kann nach dem Ablauf seiner Gültigkeit bis zu dem mit diesem Wert angegebenen Zeitpunkt aus dem Cache abgerufen werden.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.MinFresh">
      <summary>Inhalt kann aus dem Cache abgerufen werden, wenn die Zeitspanne bis zum Ablauf größer oder gleich dem mit diesem Wert angegebenen Zeitpunkt ist.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpCacheAgeControl.None">
      <summary>Nur für interne Verwendung. Das Framework löst eine <see cref="T:System.ArgumentException" /> aus, wenn Sie versuchen, diesen Member zu verwenden.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCacheLevel">
      <summary>Gibt das Cacheverhalten für Ressourcen an, die über HTTP (Hypertext Transfer Protocol) abgerufen wurden.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.BypassCache">
      <summary>Führt eine Anforderung mithilfe des Servers aus. Zwischen Client und Server werden keine Einträge aus Caches abgerufen, zu Caches hinzugefügt oder aus Caches entfernt. Zwischen Client und Server werden keine Einträge aus Caches abgerufen, zu Caches hinzugefügt oder aus Caches entfernt. Dies ist das Standardcacheverhalten, das in der mit .NET Framework gelieferten Computerkonfigurationsdatei angegeben ist.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable">
      <summary>Führt eine Anforderung einer Ressource aus dem Cache aus, wenn die Ressource verfügbar ist, und sendet andernfalls eine Anforderung einer Ressource an den Server. Wenn das angeforderte Element in einem Cache zwischen Client und Server verfügbar ist, wird die Anforderung möglicherweise durch den Zwischencache ausgeführt.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly">
      <summary>Führt eine Anforderung mithilfe der lokal zwischengespeicherten Ressource aus. Sendet keine Anforderung eines Elements, das sich nicht im Cache befindet. Wenn diese Cacherichtlinienebene angegeben ist und sich das Element nicht im Clientcache befindet, wird eine <see cref="T:System.Net.WebException" />-Ausnahme ausgelöst.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly">
      <summary>Führt eine Anforderung einer Ressource entweder aus dem Cache des lokalen Computers oder einem Remotecache im lokalen Netzwerk aus. Wenn die Anforderung nicht ausgeführt werden kann, wird eine <see cref="T:System.Net.WebException" />-Ausnahme ausgelöst. Im HTTP-Cacheprotokoll erfolgt dies mithilfe der <see langword="only-if-cached" />-Cachesteuerdirektive.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Default">
      <summary>Führt eine Anforderung einer Ressource entweder mithilfe der zwischengespeicherten Kopie der Ressource oder durch Senden einer Anforderung der Ressource an den Server aus. Die ausgeführte Aktion wird durch die aktuelle Cacherichtlinie und das Alter des Inhalts im Cache bestimmt. Dies ist die Cacheebene, die von den meisten Anwendungen verwendet werden muss.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore">
      <summary>Führt eine Anforderung niemals mithilfe von Ressourcen aus dem Cache aus und zwischenspeichert keine Ressourcen. Wenn die Ressource im lokalen Cache vorhanden ist, wird sie entfernt. Diese Richtlinienebene gibt für Zwischencaches an, dass sie die Ressource entfernen sollen. Im HTTP-Cacheprotokoll erfolgt dies mithilfe der no-cache-Cachesteuerdirektive.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Refresh">
      <summary>Führt eine Anforderung mithilfe des Servers oder eines anderen Caches als dem lokalen Cache aus. Bevor die Anforderung von einem Zwischencache ausgeführt werden kann, muss dieser Cache den zwischengespeicherten Eintrag anhand des Servers neu überprüfen. Im HTTP-Cacheprotokoll erfolgt dies durch die max-age = 0-Cachesteuerdirektive und den no-cache-<see langword="Pragma" />-Header.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Reload">
      <summary>Führt eine Anforderung mithilfe des Servers aus. Die Antwort wird möglicherweise im Cache gespeichert. Im HTTP-Cacheprotokoll erfolgt dies mithilfe der no-cache-Cachesteuerdirektive und des no-cache-<see langword="Pragma" />-Headers.</summary>
    </member>
    <member name="F:System.Net.Cache.HttpRequestCacheLevel.Revalidate">
      <summary>Vergleicht die Kopie der Ressource im Cache mit der Kopie auf dem Server. Wenn die Kopie auf dem Server neuer ist, wird sie zum Erfüllen der Anforderung verwendet und ersetzt die Kopie im Cache. Wenn die Kopie im Cache mit der Serverkopie übereinstimmt, wird die zwischengespeicherte Kopie verwendet. Im HTTP-Cacheprotokoll erfolgt dies durch eine bedingte Anforderung.</summary>
    </member>
    <member name="T:System.Net.Cache.HttpRequestCachePolicy">
      <summary>Definiert die Zwischenspeicherungsanforderungen einer Anwendung für Ressourcen, die mithilfe von <see cref="T:System.Net.HttpWebRequest" />-Objekten abgerufen wurden.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.DateTime)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse unter Verwendung des angegebenen Cachesynchronisierungsdatums.</summary>
      <param name="cacheSyncDate">Ein <see cref="T:System.DateTime" />-Objekt, das den Zeitpunkt angibt, zu dem im Cache gespeicherte Ressourcen erneut überprüft werden müssen.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse mit den angegebenen Werten für Alterssteuerung und Zeit.</summary>
      <param name="cacheAgeControl">Einer der folgenden <see cref="T:System.Net.Cache.HttpCacheAgeControl" />-Enumerationswerte: <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxAge" />, <see cref="F:System.Net.Cache.HttpCacheAgeControl.MaxStale" /> oder <see cref="F:System.Net.Cache.HttpCacheAgeControl.MinFresh" />.</param>
      <param name="ageOrFreshOrStale">Ein <see cref="T:System.TimeSpan" />-Wert, der eine Zeitspanne angibt.</param>
      <exception cref="T:System.ArgumentException">Der für den <paramref name="cacheAgeControl" />-Parameter angegebene Wert kann nicht mit diesem Konstruktor verwendet werden.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse unter Verwendung der angegebenen Werte für maximales Alter, Alterssteuerung und Zeit.</summary>
      <param name="cacheAgeControl">Ein <see cref="T:System.Net.Cache.HttpCacheAgeControl" />-Wert.</param>
      <param name="maxAge">Ein <see cref="T:System.TimeSpan" />-Wert, der das maximale Alter für Ressourcen angibt.</param>
      <param name="freshOrStale">Ein <see cref="T:System.TimeSpan" />-Wert, der eine Zeitspanne angibt.</param>
      <exception cref="T:System.ArgumentException">Der für den <paramref name="cacheAgeControl" />-Parameter angegebene Wert ist nicht gültig.</exception>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpCacheAgeControl,System.TimeSpan,System.TimeSpan,System.DateTime)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse unter Verwendung der angegebenen Werte für maximales Alter, Alterssteuerung und Zeit sowie des angegebenen Cachesynchronisierungsdatums.</summary>
      <param name="cacheAgeControl">Ein <see cref="T:System.Net.Cache.HttpCacheAgeControl" />-Wert.</param>
      <param name="maxAge">Ein <see cref="T:System.TimeSpan" />-Wert, der das maximale Alter für Ressourcen angibt.</param>
      <param name="freshOrStale">Ein <see cref="T:System.TimeSpan" />-Wert, der eine Zeitspanne angibt.</param>
      <param name="cacheSyncDate">Ein <see cref="T:System.DateTime" />-Objekt, das den Zeitpunkt angibt, zu dem im Cache gespeicherte Ressourcen erneut überprüft werden müssen.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.#ctor(System.Net.Cache.HttpRequestCacheLevel)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />-Klasse unter Verwendung der angegebenen Cacherichtlinie.</summary>
      <param name="level">Ein <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />-Wert.</param>
    </member>
    <member name="M:System.Net.Cache.HttpRequestCachePolicy.ToString">
      <summary>Gibt eine Zeichenfolgenentsprechung dieser Instanz zurück.</summary>
      <returns>Ein <see cref="T:System.String" />-Wert, der die Eigenschaftswerte für diese Instanz enthält.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.CacheSyncDate">
      <summary>Ruft das Cachesynchronisierungsdatum für diese Instanz ab.</summary>
      <returns>Ein <see cref="T:System.DateTime" />-Wert, der auf das beim Erstellen dieser Instanz angegebene Datum festgelegt ist. Wenn kein Datum angegeben wurde, ist der Wert dieser Eigenschaft <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.Level">
      <summary>Ruft den <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />-Wert ab, der beim Erstellen dieser Instanz angegeben wurde.</summary>
      <returns>Ein <see cref="T:System.Net.Cache.HttpRequestCacheLevel" />-Wert, der das Cacheverhalten für Ressourcen angibt, die mithilfe von <see cref="T:System.Net.HttpWebRequest" />-Objekten abgerufen wurden.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxAge">
      <summary>Ruft das maximal zulässige Alter für eine Ressource ab, die aus dem Cache zurückgegeben wird.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der auf den beim Erstellen dieser Instanz angegebenen Wert für das maximale Alter festgelegt ist. Wenn kein Datum angegeben wurde, ist der Wert dieser Eigenschaft <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MaxStale">
      <summary>Ruft den maximal zulässigen Wert für die Veralterung einer Ressource ab, die aus dem Cache zurückgegeben wird.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der auf den beim Erstellen dieser Instanz angegebenen Wert für die maximale Veralterung festgelegt ist. Wenn kein Datum angegeben wurde, ist der Wert dieser Eigenschaft <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="P:System.Net.Cache.HttpRequestCachePolicy.MinFresh">
      <summary>Ruft die minimal zulässige Aktualität für eine Ressource ab, die aus dem Cache zurückgegeben wird.</summary>
      <returns>Ein <see cref="T:System.TimeSpan" />-Wert, der die beim Erstellen dieser Instanz angegebene minimale Aktualität angibt. Wenn kein Datum angegeben wurde, ist der Wert dieser Eigenschaft <see cref="F:System.DateTime.MinValue" />.</returns>
    </member>
    <member name="T:System.Net.FileWebRequest">
      <summary>Stellt eine Dateisystemimplementierung der <see cref="T:System.Net.WebRequest" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.FileWebRequest" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="serializationInfo">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt, das die zum Serialisieren des neuen <see cref="T:System.Net.FileWebRequest" />-Objekts erforderlichen Informationen enthält.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt, das die Quelle des serialisierten Streams enthält, der dem neuen <see cref="T:System.Net.FileWebRequest" />-Objekt zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.Abort">
      <summary>Bricht eine Anforderung an eine Internetressource ab.</summary>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet werden soll.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" /> -Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FileWebRequest.Method" />-Eigenschaft ist <c>GET</c>, und die Anwendung schreibt in den Stream.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird von einem vorherigen Aufruf von <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> verwendet.</exception>
      <exception cref="T:System.ApplicationException">Kein Schreibdatenstrom verfügbar.</exception>
      <exception cref="T:System.Net.WebException">Die <see cref="T:System.Net.FileWebRequest" /> wurde abgebrochen.</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung einer Dateisystemressource.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" /> -Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese Anforderung.</param>
      <exception cref="T:System.InvalidOperationException">Der Stream wird bereits von einem vorherigen Aufruf von <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> verwendet.</exception>
      <exception cref="T:System.Net.WebException">Die <see cref="T:System.Net.FileWebRequest" /> wurde abgebrochen.</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung einer <see cref="T:System.IO.Stream" />-Instanz, die von der Anwendung zum Schreiben von Daten verwendet wird.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf die ausstehende Anforderung eines Streams verweist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />-Objekt, das von der Anwendung zum Schreiben von Daten verwendet wird.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung einer Dateisystemressource.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf die ausstehende Anforderung einer Antwort verweist.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" />, die die Antwort der Dateisystemressource enthält.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStream">
      <summary>Gibt ein <see cref="T:System.IO.Stream" />-Objekt zum Schreiben von Daten in die Dateisystemressource zurück.</summary>
      <exception cref="T:System.Net.WebException">Das Zeitlimit der Anforderung wird erreicht.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" /> zum Schreiben von Daten in die Dateisystemressource.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetRequestStreamAsync">
      <summary>Gibt einen Stream für das Schreiben von Daten in die Dateisystemressource als asynchroner Vorgang zurück</summary>
      <exception cref="T:System.InvalidOperationException">Der Stream wird von einem vorherigen Aufruf von <see cref="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> verwendet.

- oder -

Der Stream hat bereits eine Antwort vor Ihrer Anforderung erhalten.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FileWebRequest.Method" />-Eigenschaft ist GET oder HEAD.</exception>
      <exception cref="T:System.Net.WebException">Die <see cref="T:System.Net.FileWebRequest" /> wurde abgebrochen.</exception>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponse">
      <summary>Gibt eine Antwort auf eine Dateisystemanforderung zurück.</summary>
      <exception cref="T:System.Net.WebException">Das Zeitlimit der Anforderung wurde überschritten.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" />, die die Antwort der Dateisystemressource enthält.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.GetResponseAsync">
      <summary>Gibt eine Antwort auf eine Dateisystemanforderung als asynchronen Vorgang zurück</summary>
      <exception cref="T:System.InvalidOperationException">Der Stream wird bereits von einem vorherigen Aufruf von <see cref="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> verwendet.</exception>
      <exception cref="T:System.Net.WebException">Die <see cref="T:System.Net.FileWebRequest" /> wurde abgebrochen.</exception>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren der <see cref="T:System.Net.FileWebRequest" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die serialisierten Daten für die <see cref="T:System.Net.FileWebRequest" /> enthält.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit dem Ziel des serialisierten Streams, der der neuen <see cref="T:System.Net.FileWebRequest" /> zugeordnet ist.</param>
    </member>
    <member name="P:System.Net.FileWebRequest.ConnectionGroupName">
      <summary>Ruft den Namen der Verbindungsgruppe für die Anforderung ab oder legt diesen fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>Der Name der Verbindungsgruppe für die Anforderung.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentLength">
      <summary>Ruft die Länge des Inhalts der gesendeten Daten ab, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.FileWebRequest.ContentLength" /> ist kleiner als 0.</exception>
      <returns>Die Anzahl der Bytes der gesendeten Anforderungsdaten.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.ContentType">
      <summary>Ruft den Inhaltstyp der gesendeten Daten ab, oder legt diesen fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>Der Inhaltstyp der gesendeten Daten.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Credentials">
      <summary>Ruft die dieser Anforderung zugeordneten Anmeldeinformationen ab, oder legt diese fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>Ein <see cref="T:System.Net.ICredentials" />-Objekt mit den dieser Anforderung zugeordneten Anmeldeinformationen für die Authentifizierung. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Headers">
      <summary>Ruft eine Auflistung der Name/Wert-Paare ab, die der Anforderung zugeordnet sind. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name/Wert-Paaren für Header.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Method">
      <summary>Ruft die für die Anforderung verwendete Protokollmethode ab, oder legt diese fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <exception cref="T:System.ArgumentException">Die Methode ist ungültig.  
  
- oder -
  
 Die Methode wird nicht unterstützt.  
  
- oder -
  
 Es wurden mehrere Methoden angegeben.</exception>
      <returns>Die in dieser Anforderung zu verwendende Protokollmethode.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.PreAuthenticate">
      <summary>Ruft einen Wert ab, der angibt, ob eine Anforderung vorauthentifiziert werden soll, oder legt diesen fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>
        <see langword="true" />, wenn eine Vorauthentifizierung erfolgen muss, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Proxy">
      <summary>Ruft den für diese Anforderung zu verwendenden Netzwerkproxy ab, oder legt diesen fest. Diese Eigenschaft ist für eine spätere Verwendung vorgesehen.</summary>
      <returns>Ein <see cref="T:System.Net.IWebProxy" />, der den für diese Anforderung zu verwendenden Netzwerkproxy angibt.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.RequestUri">
      <summary>Ruft den URI der Anforderung ab.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der den URI der Anforderung enthält.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.Timeout">
      <summary>Ruft die Zeitspanne bis zum Timeout der Anforderung ab, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner oder gleich 0 (null) und nicht <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <returns>Die Zeitspanne bis zum Timeout der Anforderung in Millisekunden oder der Wert <see cref="F:System.Threading.Timeout.Infinite" />, der angibt, dass die Anforderung kein Timeout aufweist.</returns>
    </member>
    <member name="P:System.Net.FileWebRequest.UseDefaultCredentials">
      <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Für Datei-URIs werden keine Standardanmeldeinformationen unterstützt.</exception>
      <returns>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="T:System.Net.FileWebResponse">
      <summary>Stellt eine Dateisystemimplementierung der <see cref="T:System.Net.WebResponse" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.FileWebResponse" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der neuen <see cref="T:System.Net.FileWebResponse" />-Instanz erforderlichen Informationen.</param>
      <param name="streamingContext">Eine Instanz der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse, die die Quelle des serialisierten Streams enthält, der der neuen <see cref="T:System.Net.FileWebResponse" />-Instanz zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.Close">
      <summary>Schließt den Antwortstream.</summary>
    </member>
    <member name="M:System.Net.FileWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.FileWebResponse.GetResponseStream">
      <summary>Gibt den Datenstream von der Dateisystemressource zurück.</summary>
      <returns>Ein <see cref="T:System.IO.Stream" /> zum Lesen von Daten aus der Dateisystemressource.</returns>
    </member>
    <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der <see cref="T:System.Net.FileWebResponse" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten für die <see cref="T:System.Net.FileWebResponse" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit dem Ziel des serialisierten Streams, der der neuen <see cref="T:System.Net.FileWebResponse" /> zugeordnet ist.</param>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentLength">
      <summary>Ruft die Länge des Inhalts in der Dateisystemressource ab.</summary>
      <returns>Die Anzahl der von der Dateisystemressource zurückgegebenen Bytes.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ContentType">
      <summary>Ruft den Inhaltstyp der Dateisystemressource ab.</summary>
      <returns>Der Wert "binary/octet-stream".</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.Headers">
      <summary>Ruft eine Auflistung der Name-Wert-Paare für Header auf, die der Antwort zugeordnet sind.</summary>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den der Antwort zugeordneten Name-Wert-Paaren für Header.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.ResponseUri">
      <summary>Ruft den URI der Dateisystemressource ab, die die Antwort bereitgestellt hat.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem URI der Dateisystemressource, von der die Antwort bereitgestellt wurde.</returns>
    </member>
    <member name="P:System.Net.FileWebResponse.SupportsHeaders">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Net.FileWebResponse.Headers" />-Eigenschaft von der <see cref="T:System.Net.FileWebResponse" />-Instanz unterstützt wird.</summary>
      <returns>
        <see langword="true" />, wenn die <see cref="P:System.Net.FileWebResponse.Headers" />-Eigenschaft von der <see cref="T:System.Net.FileWebResponse" />-Instanz unterstützt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.FtpStatusCode">
      <summary>Gibt die für einen FTP (File Transfer Protocol)-Vorgang zurückgegebenen Statuscodes an.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.AccountNeeded">
      <summary>Gibt an, dass ein Benutzerkonto auf dem Server erforderlich ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedLocalProcessingError">
      <summary>Gibt an, dass ein Fehler aufgetreten ist, durch den der Abschluss der Anforderung verhindert wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionAbortedUnknownPageType">
      <summary>Gibt an, dass die angeforderte Aktion nicht ausgeführt werden kann, da der angegebene Seitentyp unbekannt ist. Seitentypen werden in RFC 959, Abschnitt 3.1.2.3 beschrieben.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFilenameNotAllowed">
      <summary>Gibt an, dass die angeforderte Aktion für die angegebene Datei nicht ausgeführt werden kann.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailable">
      <summary>Gibt an, dass die angeforderte Aktion für die angegebene Datei nicht ausgeführt werden kann, da die Datei nicht verfügbar ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenFileUnavailableOrBusy">
      <summary>Gibt an, dass die angeforderte Aktion für die angegebene Datei nicht ausgeführt werden kann, da die Datei nicht verfügbar ist oder gerade verwendet wird.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ActionNotTakenInsufficientSpace">
      <summary>Gibt an, dass die angeforderte Aktion nicht ausgeführt werden kann, da auf dem Server nicht genügend Speicher verfügbar ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ArgumentSyntaxError">
      <summary>Gibt an, dass mindestens ein Befehlsargument einen Syntaxfehler aufweist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.BadCommandSequence">
      <summary>Gibt an, dass die Befehle eine falsche Reihenfolge aufweisen.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CantOpenData">
      <summary>Gibt an, dass die Datenverbindung nicht geöffnet werden kann.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingControl">
      <summary>Gibt an, dass der Server die Steuerungsverbindung schließt.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ClosingData">
      <summary>Gibt an, dass der Server die Datenverbindung schließt, und dass die angeforderte Dateiaktion erfolgreich ausgeführt wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandExtraneous">
      <summary>Gibt an, dass der Befehl nicht vom Server implementiert wird, da er nicht erforderlich ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandNotImplemented">
      <summary>Gibt an, dass der Befehl nicht vom FTP-Server implementiert wird.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandOK">
      <summary>Gibt an, dass der Befehl erfolgreich ausgeführt wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.CommandSyntaxError">
      <summary>Gibt an, dass der Befehl einen Syntaxfehler aufweist oder ein Befehl ist, der vom Server nicht erkannt wird.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ConnectionClosed">
      <summary>Gibt an, dass die Verbindung geschlossen worden ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DataAlreadyOpen">
      <summary>Gibt an, dass die Datenverbindung bereits geöffnet ist und die angeforderte Übertragung gestartet wird.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.DirectoryStatus">
      <summary>Gibt den Status eines Verzeichnisses an.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.EnteringPassive">
      <summary>Gibt an, dass der Server in den passiven Modus wechselt.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionAborted">
      <summary>Gibt an, dass die angeforderte Aktion nicht ausgeführt werden kann.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileActionOK">
      <summary>Gibt an, dass die angeforderte Dateiaktion erfolgreich abgeschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileCommandPending">
      <summary>Gibt an, dass die angeforderte Dateiaktion zusätzliche Informationen erfordert.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.FileStatus">
      <summary>Gibt den Status einer Datei an.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.LoggedInProceed">
      <summary>Gibt an, dass der Benutzer angemeldet ist und Befehle senden kann.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NeedLoginAccount">
      <summary>Gibt an, dass für den Server ein Anmeldekonto angegeben werden muss.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.NotLoggedIn">
      <summary>Gibt an, dass Anmeldeinformationen an den Server gesendet werden müssen.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.OpeningData">
      <summary>Gibt an, dass der Server die Datenverbindung öffnet.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.PathnameCreated">
      <summary>Gibt an, dass der angeforderte Pfadname erstellt wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.RestartMarker">
      <summary>Gibt an, dass die Antwort eine Restart-Marker-Antwort enthält. Der Text der mit diesem Status gesendeten Beschreibung enthält den Marker für den Benutzerdatenstream und den Servermarker.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendPasswordCommand">
      <summary>Gibt an, dass für den Server ein Kennwort angegeben werden muss.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SendUserCommand">
      <summary>Gibt an, dass die Benutzeranmeldung am Server erfolgen kann.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServerWantsSecureSession">
      <summary>Gibt an, dass der Server den vom Client angegebenen Authentifizierungsmechanismus akzeptiert und der Austausch der Sicherheitsdaten abgeschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceNotAvailable">
      <summary>Gibt an, dass der Dienst nicht verfügbar ist.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.ServiceTemporarilyNotAvailable">
      <summary>Gibt an, dass der Dienst gegenwärtig nicht verfügbar ist. Wiederholen Sie die Anforderung zu einem späteren Zeitpunkt.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.SystemType">
      <summary>Gibt den Systemtypnamen unter Verwendung der im Dokument Assigned Numbers der Internet Assigned Numbers Authority veröffentlichten Systemnamen an.</summary>
    </member>
    <member name="F:System.Net.FtpStatusCode.Undefined">
      <summary>Dieser Wert wird der Vollständigkeit halber angegeben und nie von Servern zurückgegeben.</summary>
    </member>
    <member name="T:System.Net.FtpWebRequest">
      <summary>Implementiert einen FTP (File Transfer Protocol)-Client.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.Abort">
      <summary>Beendet einen asynchronen FTP-Vorgang.</summary>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Beginnt das asynchrone Öffnen des Inhaltsstreams einer Anforderung zum Schreiben.</summary>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Vorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
      <exception cref="T:System.InvalidOperationException">Ein vorheriger Aufruf dieser Methode oder <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> wurde noch nicht abgeschlossen.</exception>
      <exception cref="T:System.Net.WebException">Es konnte keine Verbindung mit dem FTP-Server hergestellt werden.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FtpWebRequest.Method" />-Eigenschaft ist nicht auf <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> festgelegt.</exception>
      <returns>Eine <see cref="T:System.IAsyncResult" />-Instanz, die den Status des Vorgangs angibt.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Beginnt mit dem asynchronen Senden einer Anforderung und Empfangen einer Antwort von einem FTP-Server.</summary>
      <param name="callback">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</param>
      <param name="state">Ein benutzerdefiniertes Objekt, das Informationen über den Vorgang enthält. Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> oder <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> wurde bereits für diese Instanz aufgerufen.</exception>
      <returns>Eine <see cref="T:System.IAsyncResult" />-Instanz, die den Status des Vorgangs angibt.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden Vorgang, der mit <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> gestartet wurde.</summary>
      <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />-Objekt, das zu Beginn des Vorgangs zurückgegeben wurde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch den Aufruf von <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> abgerufen.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits für den durch <paramref name="asyncResult" /> bezeichneten Vorgang aufgerufen.</exception>
      <returns>Eine nicht schreibgeschützte <see cref="T:System.IO.Stream" />-Instanz, die dieser Instanz zugeordnet ist.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Beendet einen ausstehenden Vorgang, der mit <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet wurde.</summary>
      <param name="asyncResult">Das <see cref="T:System.IAsyncResult" />, das zu Beginn des Vorgangs zurückgegeben wurde.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde nicht durch den Aufruf von <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> abgerufen.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde bereits für den durch <paramref name="asyncResult" /> bezeichneten Vorgang aufgerufen.</exception>
      <exception cref="T:System.Net.WebException">Fehler beim Verwenden eines HTTP-Proxys.</exception>
      <returns>Ein <see cref="T:System.Net.WebResponse" />-Verweis, der eine <see cref="T:System.Net.FtpWebResponse" />-Instanz enthält. Dieses Objekt enthält die Antwort des FTP-Servers auf die Anforderung.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetRequestStream">
      <summary>Ruft den Stream ab, der zum Hochladen von Daten auf einen FTP-Server verwendet wird.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> wurde aufgerufen und nicht abgeschlossen.  
  
- oder - 
Ein HTTP-Proxy ist aktiviert, und Sie haben versucht, einen anderen FTP-Befehl als <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> zu verwenden.</exception>
      <exception cref="T:System.Net.WebException">Es konnte keine Verbindung mit dem FTP-Server hergestellt werden.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.FtpWebRequest.Method" />-Eigenschaft ist nicht auf <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" /> festgelegt.</exception>
      <returns>Eine nicht schreibgeschützte <see cref="T:System.IO.Stream" />-Instanz, die zum Speichern von Daten verwendet wird, die durch die aktuelle Anforderung an den Server gesendet werden.</returns>
    </member>
    <member name="M:System.Net.FtpWebRequest.GetResponse">
      <summary>Gibt die FTP-Serverantwort zurück.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Net.FtpWebRequest.GetResponse" /> oder <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> wurde bereits für diese Instanz aufgerufen.  
  
- oder - 
Ein HTTP-Proxy ist aktiviert, und Sie haben versucht, einen anderen FTP-Befehl als <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" /> oder <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> zu verwenden.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> ist auf <see langword="true" /> festgelegt, doch der Server unterstützt dieses Feature nicht.  
  
- oder - 
Eine <see cref="P:System.Net.FtpWebRequest.Timeout" />-Eigenschaft wurde angegeben, und das Timeout ist abgelaufen.</exception>
      <returns>Ein <see cref="T:System.Net.WebResponse" />-Verweis, der eine <see cref="T:System.Net.FtpWebResponse" />-Instanz enthält. Dieses Objekt enthält die Antwort des FTP-Servers auf die Anforderung.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ClientCertificates">
      <summary>Ruft die Zertifikate ab, die für das Herstellen einer verschlüsselten Verbindung mit dem FTP-Server verwendet werden, oder legt sie fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
      <returns>Ein <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />-Objekt, das die Clientzertifikate enthält.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ConnectionGroupName">
      <summary>Ruft den Namen der Verbindungsgruppe ab, die den zum Senden der aktuellen Anforderung verwendeten Dienstpunkt enthält, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>Ein <see cref="T:System.String" />-Wert, der einen Verbindungsgruppennamen enthält.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentLength">
      <summary>Ruft einen Wert ab, der von der <see cref="T:System.Net.FtpWebRequest" />-Klasse ignoriert wird, oder legt diesen fest.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der ignoriert werden soll.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentOffset">
      <summary>Ruft einen Byteoffset für die durch diese Anforderung heruntergeladene Datei ab oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für diese Eigenschaft angegebene Wert ist kleiner als 0 (null).</exception>
      <returns>Eine <see cref="T:System.Int64" />-Instanz, die den Dateioffset in Bytes angibt. Der Standardwert ist 0 (null).</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ContentType">
      <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Inhaltstypinformationen werden für FTP nicht unterstützt.</exception>
      <returns>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Credentials">
      <summary>Ruft die für die Kommunikation mit dem FTP-Server verwendeten Anmeldeinformationen ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Für einen set-Vorgang wurde ein <see cref="T:System.Net.ICredentials" /> von einem anderen Typ als <see cref="T:System.Net.NetworkCredential" /> angegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>Eine <see cref="T:System.Net.ICredentials" />-Instanz. Andernfalls <see langword="null" />, wenn die Eigenschaft nicht festgelegt wurde.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.DefaultCachePolicy">
      <summary>Definiert die Standardcacherichtlinie für alle FTP-Anforderungen.</summary>
      <exception cref="T:System.ArgumentNullException">Der Aufrufer hat diese Eigenschaft auf <see langword="null" /> festzulegen versucht.</exception>
      <returns>Eine <see cref="T:System.Net.Cache.RequestCachePolicy" />, die die Cacherichtlinie für FTP-Anforderungen definiert.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.EnableSsl">
      <summary>Ruft einen Wert vom Typ <see cref="T:System.Boolean" /> ab, der angibt, dass eine SSL-Verbindung verwendet werden soll, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Verbindung mit dem FTP-Server wurde bereits hergestellt.</exception>
      <returns>
        <see langword="true" />, wenn die Übertragung der Steuerung und Daten verschlüsselt ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Headers">
      <summary>Ruft ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt ab.</summary>
      <returns>Ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.KeepAlive">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob die Steuerungsverbindung mit dem FTP-Server nach Abschluss der Anforderung geschlossen wird, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>
        <see langword="true" />, wenn die Verbindung zum Server nicht zerstört werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Method">
      <summary>Ruft den an den FTP-Server zu sendenden Befehl ab oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <exception cref="T:System.ArgumentException">Die Methode ist ungültig.  
  
- oder -
  
 Die Methode wird nicht unterstützt.  
  
- oder -
  
 Es wurden mehrere Methoden angegeben.</exception>
      <returns>Ein <see cref="T:System.String" />-Wert, der den an den Server zu sendenden FTP-Befehl enthält. Der Standardwert ist <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.PreAuthenticate">
      <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Eine Vorauthentifizierung wird für FTP nicht unterstützt.</exception>
      <returns>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Proxy">
      <summary>Ruft den für die Kommunikation mit dem FTP-Server verwendeten Proxy ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException">Diese Eigenschaft kann nicht auf <see langword="null" /> festgelegt werden.</exception>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>Eine <see cref="T:System.Net.IWebProxy" />-Instanz, die für die Kommunikation mit dem FTP-Server zuständig ist. In .net Core ist der Wert <see langword="null" /> .</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ReadWriteTimeout">
      <summary>Ruft ein Timeout für das Lesen aus einem Stream oder das Schreiben in einen Stream ab oder legt dieses fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde bereits gesendet.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen set-Vorgang angegebene Wert ist kleiner oder gleich 0 (null) und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <returns>Die Anzahl der Millisekunden vor dem Timeout des Lese-oder Schreibvorgangs. Der Standardwert ist 300.000 Millisekunden (5 Minuten).</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.RenameTo">
      <summary>Ruft den neuen Namen einer umbenannten Datei ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentException">Der für einen Set-Vorgang angegebene Wert ist <see langword="null" /> oder eine leere Zeichenfolge.</exception>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>Der neue Name der umbenannten Datei.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.RequestUri">
      <summary>Ruft den von dieser Instanz angeforderten URI ab.</summary>
      <returns>Eine <see cref="T:System.Uri" />-Instanz, die eine Ressource bezeichnet, auf die mit FTP zugegriffen wird.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.ServicePoint">
      <summary>Ruft das <see cref="T:System.Net.ServicePoint" />-Objekt ab, das zum Herstellen der Verbindung mit dem FTP-Server verwendet wird.</summary>
      <returns>Ein <see cref="T:System.Net.ServicePoint" />-Objekt, mit dem das Verbindungsverhalten angepasst werden kann.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.Timeout">
      <summary>Ruft die Wartezeit in Millisekunden für eine Anforderung ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als null (0) und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>Ein- <see cref="T:System.Int32" /> Wert, der die Anzahl der Millisekunden enthält, die gewartet wird, bevor ein Timeout für eine Anforderung eintritt. Der Standardwert ist <see cref="F:System.Threading.Timeout.Infinite" /> .</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseBinary">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der den Datentyp für Dateiübertragungen angibt, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>
        <see langword="true" />, um für den Server anzugeben, dass die zu übertragenden Daten im Binärformat vorliegen, <see langword="false" />, um anzugeben, dass die Daten im Textformat vorliegen. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UseDefaultCredentials">
      <summary>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</summary>
      <exception cref="T:System.NotSupportedException">Standardanmeldeinformationen werden für FTP nicht unterstützt.</exception>
      <returns>Löst immer eine <see cref="T:System.NotSupportedException" /> aus.</returns>
    </member>
    <member name="P:System.Net.FtpWebRequest.UsePassive">
      <summary>Ruft das Verhalten der Datenübertragung einer Clientanwendung ab oder legt dieses fest.</summary>
      <exception cref="T:System.InvalidOperationException">Für diese Eigenschaft wurde ein neuer Wert für eine Anforderung angegeben, die bereits ausgeführt wird.</exception>
      <returns>
        <see langword="false" />, wenn die Datenübertragung der Clientanwendung Verbindungen am Datenanschluss überwacht. <see langword="true" />, wenn der Client eine Verbindung am Datenanschluss initiieren soll. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="T:System.Net.FtpWebResponse">
      <summary>Kapselt die Antwort eines FTP-Servers (File Transfer Protocol) auf eine Anforderung.</summary>
    </member>
    <member name="M:System.Net.FtpWebResponse.Close">
      <summary>Gibt die von der Antwort reservierten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.FtpWebResponse.GetResponseStream">
      <summary>Ruft den Stream ab, der von einem FTP-Server gesendete Antwortdaten enthält.</summary>
      <exception cref="T:System.InvalidOperationException">Die Antwort hat keinen Datenstream zurückgegeben.</exception>
      <returns>Eine lesbare <see cref="T:System.IO.Stream" />-Instanz, die die mit der Antwort zurückgegebenen Daten enthält. Andernfalls <see cref="F:System.IO.Stream.Null" />, wenn vom Server keine Antwortdaten zurückgegeben wurden.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.BannerMessage">
      <summary>Ruft die Meldung ab, die vom FTP-Server gesendet wird, wenn eine Verbindung vor der Anmeldung hergestellt wird.</summary>
      <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Bannermeldung enthält. Andernfalls <see cref="F:System.String.Empty" />, wenn keine Meldung gesendet wurde.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ContentLength">
      <summary>Ruft die Länge der vom FTP-Server empfangenen Daten ab.</summary>
      <returns>Ein <see cref="T:System.Int64" />-Wert, der die Anzahl von Bytes der vom FTP-Server empfangenen Daten enthält.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ExitMessage">
      <summary>Ruft die vom Server am Ende einer FTP-Sitzung gesendete Meldung ab.</summary>
      <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Meldung zum Beenden enthält. Andernfalls <see cref="F:System.String.Empty" />, wenn keine Meldung gesendet wurde.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.Headers">
      <summary>Ruft ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt ab.</summary>
      <returns>Ein leeres <see cref="T:System.Net.WebHeaderCollection" />-Objekt.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.LastModified">
      <summary>Ruft das Datum und die Uhrzeit der letzten Änderung einer Datei auf einem FTP-Server ab.</summary>
      <returns>Eine <see cref="T:System.DateTime" />, die das Datum und die Uhrzeit der letzten Änderung für eine Datei enthält.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.ResponseUri">
      <summary>Ruft den URI ab, der die Antwort auf die Anforderung gesendet hat.</summary>
      <returns>Eine <see cref="T:System.Uri" />-Instanz, die die dieser Antwort zugeordnete Ressource identifiziert.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusCode">
      <summary>Ruft den letzten vom FTP-Server gesendeten Statuscode ab.</summary>
      <returns>Ein <see cref="T:System.Net.FtpStatusCode" />-Wert, der den letzten mit dieser Antwort zurückgegebenen Statuscode angibt.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.StatusDescription">
      <summary>Ruft Text ab, der einen vom FTP-Server gesendeten Statuscode beschreibt.</summary>
      <returns>Eine <see cref="T:System.String" />-Instanz, die den Statuscode und die mit dieser Antwort zurückgegebene Meldung enthält.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.SupportsHeaders">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="P:System.Net.FtpWebResponse.Headers" />-Eigenschaft von der <see cref="T:System.Net.FtpWebResponse" />-Instanz unterstützt wird.</summary>
      <returns>Gibt <see cref="T:System.Boolean" />zurück.  
  
 <see langword="true" />, wenn die <see cref="P:System.Net.FtpWebResponse.Headers" />-Eigenschaft von der <see cref="T:System.Net.FtpWebResponse" />-Instanz unterstützt wird, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.FtpWebResponse.WelcomeMessage">
      <summary>Ruft die Meldung ab, die der FTP-Server sendet, wenn die Authentifizierung abgeschlossen ist.</summary>
      <returns>Ein <see cref="T:System.String" />, der die vom Server gesendete Begrüßungsnachricht enthält. Andernfalls <see cref="F:System.String.Empty" />, wenn keine Nachricht gesendet wurde.</returns>
    </member>
    <member name="T:System.Net.GlobalProxySelection">
      <summary>Enthält eine globale Standardproxyinstanz für alle HTTP-Anforderungen.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.GlobalProxySelection" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
      <summary>Gibt eine leere Proxyinstanz zurück.</summary>
      <returns>Ein <see cref="T:System.Net.IWebProxy" />, der keine Informationen enthält.</returns>
    </member>
    <member name="P:System.Net.GlobalProxySelection.Select">
      <summary>Ruft den globalen HTTP-Proxy ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der für einen set-Vorgang angegebene Wert war <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <returns>Ein <see cref="T:System.Net.IWebProxy" />, der bei jedem Aufruf von <see cref="M:System.Net.HttpWebRequest.GetResponse" /> verwendet wird.</returns>
    </member>
    <member name="T:System.Net.HttpContinueDelegate">
      <summary>Stellt die Methode dar, die Aufrufer benachrichtigt, wenn der Client eine Continue-Antwort empfängt.</summary>
      <param name="StatusCode">Der numerische Wert des HTTP-Status vom Server.</param>
      <param name="httpHeaders">Die Header, die vom Server mit der 100-Continue-Antwort zurückgegeben werden.</param>
    </member>
    <member name="T:System.Net.HttpWebRequest">
      <summary>Stellt eine HTTP-spezifische Implementierung der <see cref="T:System.Net.WebRequest" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.HttpWebRequest" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse. Dieser Konstruktor ist veraltet.</summary>
      <param name="serializationInfo">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren des neuen <see cref="T:System.Net.HttpWebRequest" />-Objekts erforderlichen Informationen.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit der Quelle und dem Ziel des serialisierten Streams, der dem neuen <see cref="T:System.Net.HttpWebRequest" />-Objekt zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.Abort">
      <summary>Bricht eine Anforderung an eine Internetressource ab.</summary>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32)">
      <summary>Fügt einer Anforderung einen Bytebereichsheader für einen bestimmten Bereich am Anfang oder Ende der angeforderten Daten hinzu.</summary>
      <param name="range">Der Start- oder Endpunkt des Bereichs.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)">
      <summary>Fügt der Anforderung einen Bytebereichsheader für einen angegebenen Bereich hinzu.</summary>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64)">
      <summary>Fügt einer Anforderung einen Bytebereichsheader für einen bestimmten Bereich am Anfang oder Ende der angeforderten Daten hinzu.</summary>
      <param name="range">Der Start- oder Endpunkt des Bereichs.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)">
      <summary>Fügt der Anforderung einen Bytebereichsheader für einen angegebenen Bereich hinzu.</summary>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
      <summary>Fügt einer Anforderung einen Bereichsheader für einen bestimmten Bereich am Anfang oder Ende der angeforderten Daten hinzu.</summary>
      <param name="rangeSpecifier">Die Beschreibung des Bereichs.</param>
      <param name="range">Der Start- oder Endpunkt des Bereichs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
      <summary>Fügt einer Anforderung einen Bereichsheader für einen angegebenen Bereich hinzu.</summary>
      <param name="rangeSpecifier">Die Beschreibung des Bereichs.</param>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
      <summary>Fügt einer Anforderung einen Bereichsheader für einen bestimmten Bereich am Anfang oder Ende der angeforderten Daten hinzu.</summary>
      <param name="rangeSpecifier">Die Beschreibung des Bereichs.</param>
      <param name="range">Der Start- oder Endpunkt des Bereichs.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
      <summary>Fügt einer Anforderung einen Bereichsheader für einen angegebenen Bereich hinzu.</summary>
      <param name="rangeSpecifier">Die Beschreibung des Bereichs.</param>
      <param name="from">Die Position, an der mit dem Senden von Daten begonnen werden soll.</param>
      <param name="to">Die Position, an der das Senden von Daten beendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rangeSpecifier" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="from" /> ist größer als <paramref name="to" />  
  
- oder - 
 <paramref name="from" /> oder <paramref name="to" /> ist kleiner als 0 (null).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="rangeSpecifier" /> ist ungültig.</exception>
      <exception cref="T:System.InvalidOperationException">Der Bereichsheader konnte nicht hinzugefügt werden.</exception>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet werden soll.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Das Zustandsobjekt für diese Anforderung.</param>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.HttpWebRequest.Method" />-Eigenschaft ist GET oder HEAD.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> ist <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> ist <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" /> und <see cref="P:System.Net.HttpWebRequest.Method" /> ist POST oder PUT.</exception>
      <exception cref="T:System.InvalidOperationException">Der Stream wird von einem vorherigen Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> verwendet.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> ist auf einen Wert festgelegt, und <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" />.  
  
- oder - 
Der Threadpool enthält nicht mehr genügend Threads.</exception>
      <exception cref="T:System.NotSupportedException">Die Anforderungcacheprüfung hat angezeigt, dass die Antwort auf diese Anforderung aus dem Cache erfolgen werden kann. Allerdings dürfen Anforderungen, die Daten schreiben, nicht den Cache verwenden. Diese Ausnahme kann auftreten, wenn Sie eine benutzerdefinierte Cacheprüfung verwenden, die nicht ordnungsgemäß implementiert ist.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.</exception>
      <exception cref="T:System.ObjectDisposedException">In einer .NET Compact Framework-Anwendung wurde ein Anforderungsstream mit leerem Inhalt nicht ordnungsgemäß abgerufen und geschlossen. Weitere Informationen über das Verarbeiten von Anforderungen mit einem Inhalt der Länge 0 (null) finden Sie unter Network Programming in the .NET Compact Framework (Netzwerkprogrammierung in .NET Compact Framework.).</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Startet eine asynchrone Anforderung an eine Internetressource.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
      <param name="state">Das Zustandsobjekt für diese Anforderung.</param>
      <exception cref="T:System.InvalidOperationException">Der Stream wird bereits von einem vorherigen Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> verwendet.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> ist auf einen Wert festgelegt, und <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" />.  
  
- oder - 
Der Threadpool enthält nicht mehr genügend Threads.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> ist GET oder HEAD, und <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist größer als 0 (null), oder <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="true" />.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> ist gleich <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> ist gleich <see langword="false" />, und <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist gleich -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist gleich <see langword="false" /> und <see cref="P:System.Net.HttpWebRequest.Method" /> ist gleich POST oder PUT.  
  
- oder - 
<see cref="T:System.Net.HttpWebRequest" /> verfügt über einen Entitätskörper, die <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />-Methode wird jedoch aufgerufen, ohne dass die <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />-Methode aufgerufen wird.  
  
- oder - 
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist größer als 0 (null), von der Anwendung werden jedoch nicht alle zugesagten Daten geschrieben.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung einer Antwort verweist.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet werden soll.</summary>
      <param name="asyncResult">Die ausstehende Anforderung für einen Datenstrom.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.IO.IOException">Die Anforderung wurde nicht abgeschlossen, und es ist kein Stream verfügbar.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde von der aktuellen Instanz bei einem Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> nicht zurückgegeben.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde zuvor mit <paramref name="asyncResult" /> aufgerufen.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Anforderungsdaten verwendet werden soll.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
      <summary>Beendet eine asynchrone Anforderung eines <see cref="T:System.IO.Stream" />-Objekts, das zum Schreiben von Daten verwendet wird und das dem Datenstrom zugeordnete <see cref="T:System.Net.TransportContext" /> ausgibt.</summary>
      <param name="asyncResult">Die ausstehende Anforderung für einen Datenstrom.</param>
      <param name="context">Der <see cref="T:System.Net.TransportContext" /> für den <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde von der aktuellen Instanz bei einem Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> nicht zurückgegeben.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde zuvor mit <paramref name="asyncResult" /> aufgerufen.</exception>
      <exception cref="T:System.IO.IOException">Die Anforderung wurde nicht abgeschlossen, und es ist kein Stream verfügbar.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Anforderungsdaten verwendet werden soll.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Beendet eine asynchrone Anforderung an eine Internetressource.</summary>
      <param name="asyncResult">Die ausstehende Anforderung einer Antwort.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Diese Methode wurde zuvor mit <paramref name="asyncResult" /> aufgerufen.  
  
- oder - 
Die <see cref="P:System.Net.HttpWebRequest.ContentLength" />-Eigenschaft ist größer als 0 (null), aber die Daten wurden nicht in den Anforderungsdatenstrom geschrieben.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> wurde von der aktuellen Instanz bei einem Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> nicht zurückgegeben.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort von der Internetressource.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream">
      <summary>Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das zum Schreiben von Anforderungsdaten verwendet werden soll.</summary>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.HttpWebRequest.Method" />-Eigenschaft ist GET oder HEAD.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> ist <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> ist <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" /> und <see cref="P:System.Net.HttpWebRequest.Method" /> ist POST oder PUT.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />-Methode wurde mehrmals aufgerufen.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> ist auf einen Wert festgelegt, und <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Anforderungcacheprüfung hat angezeigt, dass die Antwort auf diese Anforderung aus dem Cache erfolgen werden kann. Allerdings dürfen Anforderungen, die Daten schreiben, nicht den Cache verwenden. Diese Ausnahme kann auftreten, wenn Sie eine benutzerdefinierte Cacheprüfung verwenden, die nicht ordnungsgemäß implementiert ist.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Das Zeitlimit für die Anforderung ist abgelaufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <exception cref="T:System.ObjectDisposedException">In einer .NET Compact Framework-Anwendung wurde ein Anforderungsstream mit leerem Inhalt nicht ordnungsgemäß abgerufen und geschlossen. Weitere Informationen über das Verarbeiten von Anforderungen mit einem Inhalt der Länge 0 (null) finden Sie unter Network Programming in the .NET Compact Framework (Netzwerkprogrammierung in .NET Compact Framework.).</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Anforderungsdaten verwendet werden soll.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
      <summary>Ruft ein <see cref="T:System.IO.Stream" />-Objekt ab, das zum Schreiben von Anforderungsdaten verwendet wird und das dem Datenstrom zugeordnete <see cref="T:System.Net.TransportContext" /> ausgibt.</summary>
      <param name="context">Der <see cref="T:System.Net.TransportContext" /> für den <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Exception">Die <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />-Methode konnte den <see cref="T:System.IO.Stream" /> nicht abrufen.</exception>
      <exception cref="T:System.InvalidOperationException">Die <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />-Methode wurde mehrmals aufgerufen.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> ist auf einen Wert festgelegt, und <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" />.</exception>
      <exception cref="T:System.NotSupportedException">Die Anforderungcacheprüfung hat angezeigt, dass die Antwort auf diese Anforderung aus dem Cache erfolgen werden kann. Allerdings dürfen Anforderungen, die Daten schreiben, nicht den Cache verwenden. Diese Ausnahme kann auftreten, wenn Sie eine benutzerdefinierte Cacheprüfung verwenden, die nicht ordnungsgemäß implementiert ist.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">Die <see cref="P:System.Net.HttpWebRequest.Method" />-Eigenschaft ist GET oder HEAD.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> ist <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> ist <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" /> und <see cref="P:System.Net.HttpWebRequest.Method" /> ist POST oder PUT.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Das Zeitlimit für die Anforderung ist abgelaufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />, der zum Schreiben von Anforderungsdaten verwendet werden soll.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.GetResponse">
      <summary>Gibt eine Antwort von einer Internetressource zurück.</summary>
      <exception cref="T:System.InvalidOperationException">Der Stream wird bereits von einem vorherigen Aufruf von <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> verwendet.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> ist auf einen Wert festgelegt, und <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" />.</exception>
      <exception cref="T:System.Net.ProtocolViolationException">
        <see cref="P:System.Net.HttpWebRequest.Method" /> ist GET oder HEAD, und <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist entweder größer oder gleich 0 (null), oder <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="true" />.  
  
- oder - 
 <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> ist <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> ist <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> ist <see langword="false" /> und <see cref="P:System.Net.HttpWebRequest.Method" /> ist POST oder PUT.  
  
- oder - 
<see cref="T:System.Net.HttpWebRequest" /> verfügt über einen Entitätskörper, die <see cref="M:System.Net.HttpWebRequest.GetResponse" />-Methode wird jedoch aufgerufen, ohne dass die <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />-Methode aufgerufen wird.  
  
- oder - 
<see cref="P:System.Net.HttpWebRequest.ContentLength" /> ist größer als 0 (null), von der Anwendung werden jedoch nicht alle zugesagten Daten geschrieben.</exception>
      <exception cref="T:System.NotSupportedException">Die Anforderungcacheprüfung hat ergeben, dass die Antwort auf diese Anforderung aus dem Cache bereitgestellt werden kann. Allerdings umfasst diese Anforderung Daten, die an den Server gesendet werden müssen. Anforderungen, durch die Daten gesendet werden, dürfen keinen Cache verwenden. Diese Ausnahme kann auftreten, wenn Sie eine benutzerdefinierte Cacheprüfung verwenden, die nicht ordnungsgemäß implementiert ist.</exception>
      <exception cref="T:System.Net.WebException">
        <see cref="M:System.Net.HttpWebRequest.Abort" /> wurde bereits aufgerufen.  
  
- oder - 
Das Zeitlimit für die Anforderung ist abgelaufen.  
  
- oder - 
Bei der Verarbeitung der Anforderung ist ein Fehler aufgetreten.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort von der Internetressource.</returns>
    </member>
    <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="P:System.Net.HttpWebRequest.Accept">
      <summary>Ruft den Wert des <see langword="Accept" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Accept" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Address">
      <summary>Ruft den URI (Uniform Resource Identifier) der Internetressource ab, die auf die Anforderung reagiert.</summary>
      <returns>Ein <see cref="T:System.Uri" />, der die Internetressource bezeichnet, die auf die Anforderung reagiert. Standardmäßig ist dies der URI, der von der <see cref="M:System.Net.WebRequest.Create(System.String)" />-Methode zum Initialisieren der Anforderung verwendet wird.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowAutoRedirect">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderung Umleitungsantworten folgen soll, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" />, wenn die Anforderung Umleitungsantworten von der Internetressource automatisch folgen soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowReadStreamBuffering">
      <summary>Ruft einen Wert ab, der angibt, ob die von der Internetressource empfangenen Daten gepuffert werden sollen, oder legt diesen Wert fest.</summary>
      <returns>
        <see langword="true" /> aktiviert die Zwischenspeicherung der aus der Internetressource empfangenen Daten, <see langword="false" /> deaktiviert die Zwischenspeicherung. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering">
      <summary>Ruft einen Wert ab, der angibt, ob die an die Internetressource gesendeten Daten gepuffert werden sollen, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" /> aktiviert das Puffern der an die Internetressource gesendeten Daten, <see langword="false" /> deaktiviert das Puffern. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.AutomaticDecompression">
      <summary>Ruft den Typ der verwendeten Dekomprimierung ab oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Der aktuelle Zustand des Objekts gestattet es nicht, dass diese Eigenschaft festgelegt wird.</exception>
      <returns>Ein- <see cref="T:System.Net.DecompressionMethods" /> Objekt, das den Typ der verwendeten Dekomprimierung angibt.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ClientCertificates">
      <summary>Ruft die dieser Anforderung zugeordnete Auflistung von Sicherheitszertifikaten ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der für einen SET-Vorgang festgelegte Wert ist <see langword="null" />.</exception>
      <returns>Die <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> mit den dieser Anforderung zugeordneten Sicherheitszertifikaten.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Connection">
      <summary>Ruft den Wert des <see langword="Connection" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <exception cref="T:System.ArgumentException">Der Wert von <see cref="P:System.Net.HttpWebRequest.Connection" /> wird auf „Keep-Alive“ oder „Close“ festgelegt.</exception>
      <returns>Der Wert des <see langword="Connection" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ConnectionGroupName">
      <summary>Ruft den Namen der Verbindungsgruppe für die Anforderung ab oder legt diesen fest.</summary>
      <returns>Der Name der Verbindungsgruppe für diese Anforderung. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentLength">
      <summary>Ruft den <see langword="Content-length" />-HTTP-Header ab oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde durch Aufrufen der Methode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> oder <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der neue <see cref="P:System.Net.HttpWebRequest.ContentLength" />-Wert ist kleiner als 0.</exception>
      <returns>Die Anzahl der Bytes der an die Internetressource zu sendenden Daten. Der Standardwert ist -1. Dieser Wert gibt an, dass die Eigenschaft nicht festgelegt wurde und keine zu sendenden Anforderungsdaten vorhanden sind.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContentType">
      <summary>Ruft den Wert des <see langword="Content-type" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Content-type" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueDelegate">
      <summary>Ruft die Delegatenmethode ab, die aufgerufen wird, wenn eine HTTP-100-Continue-Antwort von der Internetressource empfangen wird, oder legt diese fest.</summary>
      <returns>Ein Delegat, der die Rückrufmethode implementiert, die ausgeführt wird, wenn die Internetressource eine HTTP-Continue-Antwort zurückgibt. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ContinueTimeout">
      <summary>Ruft eine Timeout-Zeit (in Millisekunden) ab oder legt diese fest, bis zu der auf den Serverstatus gewartet wird, nachdem "100-Continue" vom Server empfangen wurde.</summary>
      <returns>Das Timeout in Millisekunden, bis zu dem auf den Empfang von "100-Continue" gewartet wird.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.CookieContainer">
      <summary>Ruft die der Anforderung zugeordneten Cookies ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Net.CookieContainer" /> mit den dieser Anforderung zugeordneten Cookies.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Credentials">
      <summary>Ruft Authentifizierungsinformationen für die Anforderung ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Net.ICredentials" />-Element mit den der Anforderung zugeordneten Anmeldeinformationen für die Authentifizierung. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Date">
      <summary>Ruft den <see langword="Date" />-HTTP-Headerwert für eine HTTP-Anforderung ab oder legt ihn fest.</summary>
      <returns>Der Datumsheaderwert in der HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultCachePolicy">
      <summary>Ruft die Standardcacherichtlinie für diese Anforderung ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />, die die für diese Anforderung gültige Cacherichtlinie angibt, wenn keine andere Richtlinie anwendbar ist.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength">
      <summary>Ruft die standardmäßige maximale Länge einer HTTP-Fehlerantwort ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) und ungleich -1.</exception>
      <returns>Die standardmäßige maximale Länge einer HTTP-Fehlerantwort.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength">
      <summary>Ruft den Standardwert für die <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />-Eigenschaft ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist ungleich -1 und kleiner als 0 (null).</exception>
      <returns>Die Länge in KB (1024 Bytes) des Standardwerts für die maximale Größe empfangener Antwortheader. In der Standardkonfigurationsdatei ist dieser Wert auf 64 KB festgelegt.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Expect">
      <summary>Ruft den Wert des <see langword="Expect" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <exception cref="T:System.ArgumentException">
        <see langword="Expect" /> ist auf eine Zeichenfolge festgelegt, die "100-continue" als Teilzeichenfolge enthält.</exception>
      <returns>Der Inhalt des <see langword="Expect" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.  
  
 <block subset="none" type="note"><para>  
 Der Wert für diese Eigenschaft wird in der <see cref="T:System.Net.WebHeaderCollection" /> gespeichert. Wenn WebHeaderCollection festgelegt wird, geht der Eigenschaftswert verloren.</para></block></returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.HaveResponse">
      <summary>Ruft einen Wert ab, der angibt, ob eine Antwort von einer Internetressource empfangen wurde.</summary>
      <returns>
        <see langword="true" />, wenn eine Antwort empfangen wurde, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Headers">
      <summary>Gibt eine Auflistung der Name-Wert-Paare an, aus denen sich die HTTP-Header zusammensetzen.</summary>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde durch Aufrufen der Methode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> oder <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet.</exception>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den Name-Wert-Paaren, aus denen sich die Header für die HTTP-Anforderung zusammensetzen.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Host">
      <summary>Ruft den Hostheaderwert ab, der in einer HTTP-Anforderung unabhängig vom Anforderungs-URI verwendet werden soll, oder legt ihn fest.</summary>
      <exception cref="T:System.ArgumentNullException">Der Hostheader kann nicht auf <see langword="null" /> festgelegt werden.</exception>
      <exception cref="T:System.ArgumentException">Der Hostheader kann nicht auf einen ungültigen Wert festgelegt werden.</exception>
      <exception cref="T:System.InvalidOperationException">Der Hostheader kann nicht festgelegt werden, nachdem das Senden von <see cref="T:System.Net.HttpWebRequest" /> bereits gestartet wurde.</exception>
      <returns>Der Hostheaderwert in der HTTP-Anforderung.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.IfModifiedSince">
      <summary>Ruft den Wert des HTTP-Headers <c>If-Modified-Since</c> ab oder legt diesen Wert fest.</summary>
      <returns>Eine <see cref="T:System.DateTime" /> mit dem Inhalt des <see langword="If-Modified-Since" />-HTTP-Headers.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.KeepAlive">
      <summary>Ruft einen Wert ab, der angibt, ob eine permanente Verbindung mit der Internetressource hergestellt werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Anforderung an die Internetressource einen <see langword="Connection" />-HTTP-Header mit dem KeepAlive-Wert enthalten soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections">
      <summary>Ruft die maximale Anzahl von Umleitungen ab, denen die Anforderung folgt, oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Der Wert wird auf 0 oder weniger festgelegt.</exception>
      <returns>Die maximale Anzahl von Umleitungsantworten, denen die Anforderung folgt. Der Standardwert ist 50.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength">
      <summary>Ruft die maximal zulässige Länge der Antwortheader ab oder legt diese fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Eigenschaft wird festgelegt, nachdem die Anforderung bereits gesendet wurde.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der Wert ist kleiner als 0 (null) und ungleich -1.</exception>
      <returns>Die Länge der Antwortheader in KB (1024 Bytes).</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.MediaType">
      <summary>Ruft den Medientyp der Anforderung ab oder legt diesen fest.</summary>
      <returns>Der Medientyp der Anforderung. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Method">
      <summary>Ruft die Methode für die Anforderung ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Es wurde keine Methode bereitgestellt.  
  
 - oder -  
  
 Die Methodenzeichenfolge enthält ungültige Zeichen.</exception>
      <returns>Die Anforderungsmethode zum Herstellen der Verbindung mit der Internetressource. Der Standardwert ist GET.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Pipelined">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderung über Pipelineverbindungen zur Internetressource gesendet werden soll, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, wenn die Anforderung über Pipelineverbindungen gesendet werden soll, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.PreAuthenticate">
      <summary>Ruft einen Wert ab, der angibt, ob mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um nach der Authentifizierung einen Authorization-HTTP-Header mit Anforderungen zu senden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ProtocolVersion">
      <summary>Ruft die für die Anforderung zu verwendende HTTP-Version ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentException">Die HTTP-Version wird auf einen anderen Wert als 1.0 oder 1.1 festgelegt.</exception>
      <returns>Die für die Anforderung zu verwendende HTTP-Version. Der Standardwert ist <see cref="F:System.Net.HttpVersion.Version11" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Proxy">
      <summary>Ruft Proxyinformationen für die Anforderung ab oder legt diese fest.</summary>
      <exception cref="T:System.ArgumentNullException">Für <see cref="P:System.Net.HttpWebRequest.Proxy" /> ist <see langword="null" /> festgelegt.</exception>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde durch Aufrufen von <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> oder <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die Berechtigung für den angeforderten Vorgang.</exception>
      <returns>Das <see cref="T:System.Net.IWebProxy" />-Objekt, das als Proxy für die Anforderung verwendet werden soll. Der Standardwert wird durch Aufrufen der <see cref="P:System.Net.GlobalProxySelection.Select" />-Eigenschaft festgelegt.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ReadWriteTimeout">
      <summary>Ruft ein Timeout in Millisekunden für das Schreiben in einen Stream oder das Lesen aus einem Stream ab oder legt dieses fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde bereits gesendet.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Der für einen SET-Vorgang angegebene Wert ist kleiner oder gleich 0 (null) und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <returns>Die Anzahl der Millisekunden vor dem Timeout für das Schreiben oder lesen. Der Standardwert ist 300.000 Millisekunden (5 Minuten).</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Referer">
      <summary>Ruft den Wert des <see langword="Referer" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="Referer" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.RequestUri">
      <summary>Ruft den ursprünglichen URI (Uniform Resource Identifier) der Anforderung ab.</summary>
      <returns>Ein <see cref="T:System.Uri" /> mit dem URI der Internetressource, der an die <see cref="M:System.Net.WebRequest.Create(System.String)" />-Methode übergeben wurde.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SendChunked">
      <summary>Ruft einen Wert ab, der angibt, ob die Daten in Segmenten an die Internetressource gesendet werden sollen, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Die Anforderung wurde durch Aufrufen der Methode <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" /> oder <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> gestartet.</exception>
      <returns>
        <see langword="true" />, um die Daten in Segmenten an die Internetressource zu senden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback">
      <summary>Ruft eine Rückruffunktion zur Überprüfung des Serverzertifikats ab oder legt diese fest.</summary>
      <returns>Eine Rückruffunktion zur Überprüfung des Serverzertifikats.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.ServicePoint">
      <summary>Ruft den für die Anforderung zu verwendenden Dienstpunkt ab.</summary>
      <returns>Ein <see cref="T:System.Net.ServicePoint" />, der die Netzwerkverbindung mit der Internetressource darstellt.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.SupportsCookieContainer">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderung Unterstützung für einen <see cref="T:System.Net.CookieContainer" /> bereitstellt.</summary>
      <returns>
        <see langword="true" /> , wenn die Anforderung Unterstützung für einen bereitstellt <see cref="T:System.Net.CookieContainer" /> , andernfalls <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.Timeout">
      <summary>Ruft den Timeoutwert in Millisekunden für die <see cref="M:System.Net.HttpWebRequest.GetResponse" />-Methode und die <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />-Methode ab oder legt diesen fest.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist kleiner als null (0) und ungleich <see cref="F:System.Threading.Timeout.Infinite" />.</exception>
      <returns>Die Anzahl der Millisekunden, die gewartet werden soll, bevor für die Anforderung ein Timeout eintritt. Der Standardwert ist 100.000 Millisekunden (100 Sekunden).</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.TransferEncoding">
      <summary>Ruft den Wert des <see langword="Transfer-encoding" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> wird festgelegt, wenn <see cref="P:System.Net.HttpWebRequest.SendChunked" /> den Wert <see langword="false" /> aufweist.</exception>
      <exception cref="T:System.ArgumentException">
        <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> wird auf den Wert "Chunked" festgelegt.</exception>
      <returns>Der Wert des <see langword="Transfer-encoding" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing">
      <summary>Ruft einen Wert ab, der angibt, ob die Freigabe NTLM-authentifizierter Hochgeschwindigkeitsverbindungen zulässig ist, oder legt diesen fest.</summary>
      <returns>
        <see langword="true" />, um die authentifizierte Verbindung geöffnet zu halten, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UseDefaultCredentials">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</summary>
      <exception cref="T:System.InvalidOperationException">Sie haben versucht, diese Eigenschaft nach dem Senden der Anforderung festzulegen.</exception>
      <returns>
        <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebRequest.UserAgent">
      <summary>Ruft den Wert des <see langword="User-agent" />-HTTP-Headers ab oder legt ihn fest.</summary>
      <returns>Der Wert des <see langword="User-agent" />-HTTP-Headers. Der Standardwert ist <see langword="null" />.  
  
 <block subset="none" type="note"><para>  
 Der Wert für diese Eigenschaft wird in der <see cref="T:System.Net.WebHeaderCollection" /> gespeichert. Wenn WebHeaderCollection festgelegt wird, geht der Eigenschaftswert verloren.</para></block></returns>
    </member>
    <member name="T:System.Net.HttpWebResponse">
      <summary>Stellt eine HTTP-spezifische Implementierung der <see cref="T:System.Net.WebResponse" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.HttpWebResponse" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.HttpWebResponse" />-Klasse aus der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Instanz.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den zum Serialisieren der neuen <see cref="T:System.Net.HttpWebRequest" /> erforderlichen Informationen.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit der Quelle des serialisierten Streams, der der neuen <see cref="T:System.Net.HttpWebRequest" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.Close">
      <summary>Schließt den Antwortstream.</summary>
      <exception cref="T:System.ObjectDisposedException">Nur .net Core: Dieses <see cref="T:System.Net.HttpWebResponse" /> Objekt wurde verworfen.</exception>
    </member>
    <member name="M:System.Net.HttpWebResponse.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.HttpWebResponse" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
      <summary>Ruft den Inhalt eines Headers ab, der mit der Antwort zurückgegeben wurde.</summary>
      <param name="headerName">Der zurückzugebende Headerwert.</param>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Der Inhalt des angegebenen Headers.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.GetResponseStream">
      <summary>Ruft den Stream ab, der zum Lesen des Textkörpers der Serverantwort verwendet wird.</summary>
      <exception cref="T:System.Net.ProtocolViolationException">Es ist kein Antwortstream vorhanden.</exception>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" /> mit dem Antworttext.</returns>
    </member>
    <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serialisiert diese Instanz in das angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</summary>
      <param name="serializationInfo">Das Objekt, in das diese <see cref="T:System.Net.HttpWebResponse" /> serialisiert wird.</param>
      <param name="streamingContext">Das Ziel der Serialisierung.</param>
    </member>
    <member name="P:System.Net.HttpWebResponse.CharacterSet">
      <summary>Ruft den Zeichensatz der Antwort ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge, die den Zeichensatz der Antwort enthält.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentEncoding">
      <summary>Ruft die Methode ab, die zum Codieren des Antworttexts verwendet wird.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge, die die Methode beschreibt, die zum Codieren des Antworttexts verwendet wird.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentLength">
      <summary>Ruft die Länge des von der Anforderung zurückgegebenen Inhalts ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Die Anzahl von Bytes, die von der Anforderung zurückgegeben werden. Die Inhaltslänge schließt nicht die Headerinformationen ein.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ContentType">
      <summary>Ruft den Inhaltstyp der Antwort ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge, die den Inhaltstyp der Antwort enthält.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Cookies">
      <summary>Ruft die dieser Antwort zugeordneten Cookies ab oder legt diese fest.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine <see cref="T:System.Net.CookieCollection" /> mit den dieser Antwort zugeordneten Cookies.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Headers">
      <summary>Ruft die Header ab, die dieser Antwort vom Server zugeordnet sind.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den mit der Antwort zurückgegebenen Headerinformationen.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.IsMutuallyAuthenticated">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob sowohl Client als auch Server authentifiziert wurden.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>
        <see langword="true" />, wenn eine gegenseitige Authentifizierung erfolgt ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.LastModified">
      <summary>Ruft das Datum und die Uhrzeit der letzten Änderung des Inhalts der Antwort ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine <see cref="T:System.DateTime" /> mit dem Datum und der Uhrzeit der Änderung des Inhalts der Antwort.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Method">
      <summary>Ruft die zum Zurückgeben der Antwort verwendete Methode ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge mit der zum Zurückgeben der Antwort verwendeten HTTP-Methode.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ProtocolVersion">
      <summary>Ruft die in der Antwort verwendete Version des HTTP-Protokolls ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine <see cref="T:System.Version" /> mit der Version des HTTP-Protokolls der Antwort.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.ResponseUri">
      <summary>Ruft den URI der Internetressource ab, die die Anforderung beantwortet hat.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Der URI der Internet Ressource, die auf die Anforderung geantwortet hat.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.Server">
      <summary>Ruft den Namen des Servers ab, der die Antwort gesendet hat.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge mit dem Namen des Servers, der die Antwort gesendet hat.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusCode">
      <summary>Ruft den Status der Antwort ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Einer der <see cref="T:System.Net.HttpStatusCode" />-Werte.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.StatusDescription">
      <summary>Ruft die mit der Antwort zurückgegebene Statusbeschreibung ab.</summary>
      <exception cref="T:System.ObjectDisposedException">Die aktuelle Instanz wurde verworfen.</exception>
      <returns>Eine Zeichenfolge, die den Status der Antwort beschreibt.</returns>
    </member>
    <member name="P:System.Net.HttpWebResponse.SupportsHeaders">
      <summary>Ruft einen Wert ab, der angibt, ob Header unterstützt werden.</summary>
      <returns>
        <see langword="true" />, wenn Header unterstützt werden, andernfalls <see langword="false" />. Gibt immer <see langword="true" /> zurück.</returns>
    </member>
    <member name="T:System.Net.IAuthenticationModule">
      <summary>Stellt die Basisschnittstelle für die Authentifizierung für Webclient-Authentifizierungsmodule bereit.</summary>
    </member>
    <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Gibt als Reaktion auf eine Authentifizierungsaufforderung eines Servers eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse zurück.</summary>
      <param name="challenge">Die vom Server gesendete Authentifizierungsaufforderung.</param>
      <param name="request">Die der Aufforderung zugeordnete <see cref="T:System.Net.WebRequest" />-Instanz.</param>
      <param name="credentials">Die der Aufforderung zugeordneten Anmeldeinformationen.</param>
      <returns>Eine <see cref="T:System.Net.Authorization" />-Instanz mit der Autorisierungsmeldung für die Anforderung oder <see langword="null" />, wenn die Aufforderung nicht behandelt werden kann.</returns>
    </member>
    <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
      <summary>Gibt eine Instanz der <see cref="T:System.Net.Authorization" />-Klasse für eine Authentifizierungsanforderung an einen Server zurück.</summary>
      <param name="request">Die der Authentifizierungsanforderung zugeordnete <see cref="T:System.Net.WebRequest" />-Instanz.</param>
      <param name="credentials">Die der Authentifizierungsanforderung zugeordneten Anmeldeinformationen.</param>
      <returns>Eine <see cref="T:System.Net.Authorization" />-Instanz mit der Autorisierungsmeldung für die Anforderung.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
      <summary>Ruft den Authentifizierungstyp ab, der von diesem Authentifizierungsmodul bereitgestellt wird.</summary>
      <returns>Eine Zeichenfolge, die das von diesem Authentifizierungsmodul bereitgestellte Authentifizierungsschema angibt.</returns>
    </member>
    <member name="P:System.Net.IAuthenticationModule.CanPreAuthenticate">
      <summary>Ruft einen Wert ab, der angibt, ob das Authentifizierungsmodul die Vorauthentifizierung unterstützt.</summary>
      <returns>
        <see langword="true" />, wenn das Authentifizierungsmodul die Vorauthentifizierung unterstützt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.ICredentialPolicy">
      <summary>Definiert die Anmeldeinformationen-Richtlinie, die für mit <see cref="T:System.Net.WebRequest" /> und davon abgeleiteten Klassen durchgeführte Ressourcenanforderungen verwendet werden soll.</summary>
    </member>
    <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
      <summary>Gibt einen <see cref="T:System.Boolean" />-Wert zurück, der angibt, ob die Anmeldeinformationen des Clients mit einer Ressourcenanforderung gesendet werden, die mithilfe einer Instanz der <see cref="T:System.Net.WebRequest" />-Klasse ausgeführt wird.</summary>
      <param name="challengeUri">Der <see cref="T:System.Uri" />, der die Anforderung erhalten soll.</param>
      <param name="request">Die <see cref="T:System.Net.WebRequest" />, die die angeforderte Ressource darstellt.</param>
      <param name="credential">Die <see cref="T:System.Net.NetworkCredential" />, die mit der Anforderung gesendet wird, wenn diese Methode <see langword="true" /> zurückgibt.</param>
      <param name="authenticationModule">Das <see cref="T:System.Net.IAuthenticationModule" />, das die Authentifizierung durchführt, wenn eine Authentifizierung erforderlich ist.</param>
      <returns>
        <see langword="true" />, wenn die Anmeldeinformationen mit der Anforderung gesendet werden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.IWebRequestCreate">
      <summary>Stellt die Basisschnittstelle zum Erstellen von <see cref="T:System.Net.WebRequest" />-Instanzen bereit.</summary>
    </member>
    <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
      <summary>Erstellt eine <see cref="T:System.Net.WebRequest" />-Instanz.</summary>
      <param name="uri">Der Uniform Resource Identifier (URI) der Webressource.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="uri" /> angegebene Anforderungsschema wird von dieser <see cref="T:System.Net.IWebRequestCreate" />-Instanz nicht unterstützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.UriFormatException">
        <block subset="none" type="note">
          <para>  
 Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.</para>
        </block>  
  
 Der in <paramref name="uri" /> angegebene URI ist kein gültiger URI.</exception>
      <returns>Eine <see cref="T:System.Net.WebRequest" />-Instanz.</returns>
    </member>
    <member name="T:System.Net.ProtocolViolationException">
      <summary>Diese Ausnahme wird ausgelöst, wenn beim Verwenden eines Netzwerkprotokolls ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.ProtocolViolationException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.ProtocolViolationException" />-Klasse aus der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Instanz.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />, die die Informationen enthält, die zum Deserialisieren von <see cref="T:System.Net.ProtocolViolationException" /> erforderlich sind.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit der Quelle des serialisierten Streams, der der neuen <see cref="T:System.Net.ProtocolViolationException" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.ProtocolViolationException" />-Klasse mit der angegebenen Meldung.</summary>
      <param name="message">Die Zeichenfolge der Fehlermeldung.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serialisiert diese Instanz in das angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</summary>
      <param name="serializationInfo">Das Objekt, in das diese <see cref="T:System.Net.ProtocolViolationException" /> serialisiert wird.</param>
      <param name="streamingContext">Das Ziel der Serialisierung.</param>
    </member>
    <member name="T:System.Net.WebException">
      <summary>Die Ausnahme, die ausgelöst wird, wenn beim Zugriff auf das Netzwerk über ein austauschbares Protokoll ein Fehler auftritt.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse aus der angegebenen <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Instanz.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den zum Serialisieren der neuen <see cref="T:System.Net.WebException" /> erforderlichen Informationen.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit der Quelle des serialisierten Streams, der der neuen <see cref="T:System.Net.WebException" /> zugeordnet ist.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung.</summary>
      <param name="message">Der Text der Fehlermeldung.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung und der angegebenen geschachtelten Ausnahme.</summary>
      <param name="message">Der Text der Fehlermeldung.</param>
      <param name="innerException">Eine geschachtelte Ausnahme.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Exception,System.Net.WebExceptionStatus,System.Net.WebResponse)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung, der geschachtelten Ausnahme, dem Status und der Antwort.</summary>
      <param name="message">Der Text der Fehlermeldung.</param>
      <param name="innerException">Eine geschachtelte Ausnahme.</param>
      <param name="status">Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte.</param>
      <param name="response">Eine <see cref="T:System.Net.WebResponse" />-Instanz, die die Antwort des Remotehosts enthält.</param>
    </member>
    <member name="M:System.Net.WebException.#ctor(System.String,System.Net.WebExceptionStatus)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebException" />-Klasse mit der angegebenen Fehlermeldung und dem angegebenen Status.</summary>
      <param name="message">Der Text der Fehlermeldung.</param>
      <param name="status">Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte.</param>
    </member>
    <member name="M:System.Net.WebException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der <see cref="T:System.Net.WebException" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo">Der zu verwendende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Der zu verwendende <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Serialisiert diese Instanz in das angegebene <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt.</summary>
      <param name="serializationInfo">Das Objekt, in das diese <see cref="T:System.Net.WebException" /> serialisiert wird.</param>
      <param name="streamingContext">Das Ziel der Serialisierung.</param>
    </member>
    <member name="P:System.Net.WebException.Response">
      <summary>Ruft die vom Remotehost zurückgegebene Antwort ab.</summary>
      <returns>Wenn eine Antwort der Internetressource verfügbar ist, eine <see cref="T:System.Net.WebResponse" />-Instanz mit der Fehlerantwort einer Internetressource, andernfalls <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.WebException.Status">
      <summary>Ruft den Status der Antwort ab.</summary>
      <returns>Einer der <see cref="T:System.Net.WebExceptionStatus" />-Werte.</returns>
    </member>
    <member name="T:System.Net.WebExceptionStatus">
      <summary>Definiert Statuscodes für die <see cref="T:System.Net.WebException" />-Klasse.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.CacheEntryNotFound">
      <summary>Der angegebene Cacheeintrag wurde nicht gefunden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectFailure">
      <summary>Auf der Transportebene konnte keine Verbindung mit dem remoten Dienstpunkt hergestellt werden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ConnectionClosed">
      <summary>Die Verbindung wurde vorzeitig getrennt.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.KeepAliveFailure">
      <summary>Die Verbindung für eine Anforderung, die angibt, dass der Keep-Alive-Header unerwartet geschlossen wurde.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.MessageLengthLimitExceeded">
      <summary>Es wurde eine Nachricht erhalten, die den angegebenen Grenzwert für das Senden einer Anforderung oder das Erhalten einer Antwort vom Server überschritten hat.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.NameResolutionFailure">
      <summary>Der Namensauflösungsdienst konnte den Hostnamen nicht auflösen.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Pending">
      <summary>Eine interne asynchrone Anforderung steht aus.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.PipelineFailure">
      <summary>Die Anforderung sollte über eine Pipeline gesendet werden, und die Verbindung wurde geschlossen, bevor die Antwort empfangen wurde.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProtocolError">
      <summary>Die vom Server empfangene Antwort war vollständig, deutete jedoch auf einen Fehler auf Protokollebene hin. In einem HTTP-Protokollfehler, wie 401 Zugriff verweigert, wird z. B. dieser Status verwendet.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ProxyNameResolutionFailure">
      <summary>Der Namensresolverdienst konnte den Hostnamen des Proxys nicht auflösen.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ReceiveFailure">
      <summary>Es wurde keine vollständige Nachricht vom Remoteserver empfangen.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestCanceled">
      <summary>Die Anforderung wurde abgebrochen. Es wurde die <see cref="M:System.Net.WebRequest.Abort" />-Methode aufgerufen, oder ein nicht klassifizierbarer Fehler ist aufgetreten. Dies ist der Standardwert für <see cref="P:System.Net.WebException.Status" />.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByCachePolicy">
      <summary>Die Anforderung wurde durch die Cacherichtlinie nicht zugelassen. Im Allgemeinen geschieht dies, wenn eine Anforderung nicht zwischengespeichert werden kann und das Senden der Anforderung an den Server durch die angewendete Richtlinie untersagt ist. Möglicherweise erhalten Sie diesen Status, wenn eine Anforderungsmethode einen Anforderungstext erfordert, wenn eine Anforderungsmethode eine direkte Interaktion mit dem Server erfordert oder wenn eine Anforderung einen bedingten Header enthält.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.RequestProhibitedByProxy">
      <summary>Diese Anforderung wurde nicht durch den Proxy zugelassen.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SecureChannelFailure">
      <summary>Beim Einrichten einer Verbindung über SSL ist ein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.SendFailure">
      <summary>Es konnte keine vollständige Anforderung an den Remoteserver gesendet werden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.ServerProtocolViolation">
      <summary>Die Serverantwort ist eine ungültige HTTP-Antwort.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Success">
      <summary>Es ist kein Fehler aufgetreten.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.Timeout">
      <summary>Währen des Zeitlimits für eine Anforderung wurde keine Antwort empfangen.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.TrustFailure">
      <summary>Ein Serverzertifikat konnte nicht überprüft werden.</summary>
    </member>
    <member name="F:System.Net.WebExceptionStatus.UnknownError">
      <summary>Eine Ausnahme unbekannten Typs wurde ausgelöst.</summary>
    </member>
    <member name="T:System.Net.WebRequest">
      <summary>Sendet eine Anforderung an einen Uniform Resource Identifier (URI). Dies ist eine <see langword="abstract" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebRequest" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebRequest" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="serializationInfo">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den zum Serialisieren der neuen <see cref="T:System.Net.WebRequest" />-Instanz erforderlichen Informationen.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der die Quelle des der neuen <see cref="T:System.Net.WebRequest" />-Instanz zugeordneten serialisierten Streams angibt.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf den Konstruktor zuzugreifen, obwohl der Konstruktor in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
    </member>
    <member name="M:System.Net.WebRequest.Abort">
      <summary>Bricht die Anforderung ab.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
      <summary>Stellt beim Überschreiben in einer Nachfolgerklasse eine asynchrone Version der <see cref="M:System.Net.WebRequest.GetRequestStream" />-Methode bereit.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" /> -Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese asynchrone Anforderung.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
    </member>
    <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
      <summary>Startet beim Überschreiben in einer Nachfolgerklasse eine asynchrone Anforderung einer Internetressource.</summary>
      <param name="callback">Der <see cref="T:System.AsyncCallback" /> -Delegat.</param>
      <param name="state">Ein Objekt mit Zustandsinformationen für diese asynchrone Anforderung.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Anforderung verweist.</returns>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.String)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.WebRequest" />-Instanz für das angegebene URI-Schema.</summary>
      <param name="requestUriString">Der URI, der die Internetressource bezeichnet.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUriString" /> angegebene Anforderungsschema wurde nicht registriert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer besitzt keine <see cref="T:System.Net.WebPermissionAttribute" />-Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI oder einem URI, an den die Anforderung umgeleitet wurde.</exception>
      <exception cref="T:System.UriFormatException">
        <block subset="none" type="note">
          <para>  
 Fangen Sie in .NET für Windows Store-Apps oder der portablen Klassenbibliothek stattdessen die Basisklassenausnahme <see cref="T:System.FormatException" /> ab.</para>
        </block>  
  
 Der in <paramref name="requestUriString" /> angegebene URI ist kein gültiger URI.</exception>
      <returns>Ein <see cref="T:System.Net.WebRequest" />-Nachfolger für ein bestimmtes URI-Schema.</returns>
    </member>
    <member name="M:System.Net.WebRequest.Create(System.Uri)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.WebRequest" />-Instanz für das angegebene URI-Schema.</summary>
      <param name="requestUri">Ein <see cref="T:System.Uri" /> mit dem URI der angeforderten Ressource.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUri" /> angegebene Anforderungsschema wurde nicht registriert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer besitzt keine <see cref="T:System.Net.WebPermissionAttribute" />-Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI oder einem URI, an den die Anforderung umgeleitet wurde.</exception>
      <returns>Ein <see cref="T:System.Net.WebRequest" />-Nachfolger für das angegebene URI-Schema.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.WebRequest" />-Instanz für das angegebene URI-Schema.</summary>
      <param name="requestUri">Ein <see cref="T:System.Uri" /> mit dem URI der angeforderten Ressource.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUri" /> angegebene Anforderungsschema wurde nicht registriert.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer besitzt keine <see cref="T:System.Net.WebPermissionAttribute" />-Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI oder einem URI, an den die Anforderung umgeleitet wurde.</exception>
      <returns>Ein <see cref="T:System.Net.WebRequest" />-Nachfolger für das angegebene URI-Schema.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.HttpWebRequest" />-Instanz für die angegebene URI-Zeichenfolge.</summary>
      <param name="requestUriString">Eine URI-Zeichenfolge, mit der die Internetressource bezeichnet wird.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUriString" /> angegebene Anforderungsschema ist das http- oder das https-Schema.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUriString" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer besitzt keine <see cref="T:System.Net.WebPermissionAttribute" />-Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI oder einem URI, an den die Anforderung umgeleitet wurde.</exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="requestUriString" /> angegebene URI ist kein gültiger URI.</exception>
      <returns>Eine <see cref="T:System.Net.HttpWebRequest" />-Instanz für die spezifische URI-Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
      <summary>Initialisiert eine neue <see cref="T:System.Net.HttpWebRequest" />-Instanz für den angegebenen URI.</summary>
      <param name="requestUri">Ein URI, mit dem die Internetressource bezeichnet wird.</param>
      <exception cref="T:System.NotSupportedException">Das in <paramref name="requestUri" /> angegebene Anforderungsschema ist das http- oder das https-Schema.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requestUri" /> ist <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">Der Aufrufer besitzt keine <see cref="T:System.Net.WebPermissionAttribute" />-Berechtigung zum Herstellen einer Verbindung mit dem angeforderten URI oder einem URI, an den die Anforderung umgeleitet wurde.</exception>
      <exception cref="T:System.UriFormatException">Der in <paramref name="requestUri" /> angegebene URI ist kein gültiger URI.</exception>
      <returns>Eine <see cref="T:System.Net.HttpWebRequest" />-Instanz für die spezifische URI-Zeichenfolge.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse einen <see cref="T:System.IO.Stream" /> zum Schreiben von Daten in die Internetressource zurück.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf eine ausstehende Anforderung eines Streams verweist.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" />, in den Daten geschrieben werden können.</returns>
    </member>
    <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse eine <see cref="T:System.Net.WebResponse" /> zurück.</summary>
      <param name="asyncResult">Ein <see cref="T:System.IAsyncResult" />, das auf eine ausstehende Anforderung einer Antwort verweist.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit einer Antwort auf die Internetanforderung.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStream">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse einen <see cref="T:System.IO.Stream" /> zum Schreiben von Daten in die Internetressource zurück.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.IO.Stream" /> zum Schreiben von Daten in die Internetressource.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
      <summary>Gibt nach dem Überschreiben in einer abgeleiteten Klasse einen <see cref="T:System.IO.Stream" /> zurück, womit Daten in einem asynchronen Vorgang in die Internetressource geschrieben werden können.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponse">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse eine Antwort auf eine Internetanforderung zurück.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine <see cref="T:System.Net.WebResponse" /> mit der Antwort auf die Internetanforderung.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetResponseAsync">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse in einem asynchronen Vorgang eine Antwort auf eine Internetanforderung zurück.</summary>
      <returns>Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</returns>
    </member>
    <member name="M:System.Net.WebRequest.GetSystemWebProxy">
      <summary>Gibt einen Proxy zurück, der mit den Internet Explorer-Einstellungen des Benutzers konfiguriert ist, dessen Identität gerade verwendet wird.</summary>
      <returns>Ein von jedem Aufruf der Instanzen von <see cref="T:System.Net.IWebProxy" /> verwendeter <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
      <summary>Registriert einen <see cref="T:System.Net.WebRequest" />-Nachfolger für den angegebenen URI.</summary>
      <param name="prefix">Der vollständige URI oder das URI-Präfix, der bzw. das der<see cref="T:System.Net.WebRequest" /> -Nachfolger bearbeitet.</param>
      <param name="creator">Die Erstellungsmethode, die die <see cref="T:System.Net.WebRequest" /> zum Erstellen des <see cref="T:System.Net.WebRequest" />-Nachfolgers aufruft.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prefix" /> ist gleich <see langword="null" />.  
  
- oder - 
 <paramref name="creator" /> ist <see langword="null" />.</exception>
      <returns>
        <see langword="true" />, wenn die Registrierung erfolgreich ist, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt beim Überschreiben in einer Nachfolgerklasse eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den Daten auf, die zum Serialisieren der <see cref="T:System.Net.WebRequest" /> erforderlich sind.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten für die <see cref="T:System.Net.WebRequest" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit dem Ziel des serialisierten Streams, der der neuen <see cref="T:System.Net.WebRequest" /> zugeordnet ist.</param>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, das Objekt zu serialisieren, obwohl die Schnittstelle in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
    </member>
    <member name="P:System.Net.WebRequest.AuthenticationLevel">
      <summary>Ruft Werte ab, die die für diese Anforderung verwendete Ebene von Authentifizierung und Identitätswechsel angeben, oder legt diese fest.</summary>
      <returns>Eine bitweise Kombination der <see cref="T:System.Net.Security.AuthenticationLevel" />-Werte. Der Standardwert ist <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />.  
  
Bei gegenseitiger Authentifizierung stellen sowohl Client als auch Server Anmeldeinformationen bereit, um ihre Identität anzugeben. Der <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" />-Wert und der <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequested" />-Wert sind für die Kerberos-Authentifizierung relevant. Kerberos-Authentifizierung kann direkt unterstützt oder verwendet werden, wenn das tatsächliche Sicherheitsprotokoll mithilfe des Negotiate-Sicherheitsprotokolls ausgewählt wird. Weitere Informationen zu Authentifizierungs Protokollen finden Sie unter Internet Authentifizierung.  
  
Um zu bestimmen, ob eine gegenseitige Authentifizierung erfolgt ist, überprüfen Sie die <see cref="P:System.Net.WebResponse.IsMutuallyAuthenticated" />-Eigenschaft.  
  
Wenn Sie den <see cref="F:System.Net.Security.AuthenticationLevel.MutualAuthRequired" />-Authentifizierungsflagwert angeben und keine gegenseitige Authentifizierung erfolgt, empfängt die Anwendung eine <see cref="T:System.IO.IOException" /> mit der inneren Ausnahme <see cref="T:System.Net.ProtocolViolationException" />, um anzugeben, dass die gegenseitige Authentifizierung fehlgeschlagen ist.</returns>
    </member>
    <member name="P:System.Net.WebRequest.CachePolicy">
      <summary>Ruft die Cacherichtlinie für diese Anforderung ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Net.Cache.RequestCachePolicy" />-Objekt, das eine Cacherichtlinie definiert.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ConnectionGroupName">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den Namen der Verbindungsgruppe für die Anforderung ab oder legt diesen fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Der Name der Verbindungsgruppe für die Anforderung.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentLength">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Inhaltslänge der zu sendenden Anforderungsdaten ab oder legt diese fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Die Anzahl der Bytes der gesendeten Anforderungsdaten.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ContentType">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den Inhaltstyp der zu sendenden Anforderungsdaten ab oder legt diese fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Der Inhaltstyp der Anforderungsdaten.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Credentials">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Netzwerkanmeldeinformationen, die für die Authentifizierung der Anforderung der Internetressource verwendet werden, ab oder legt diese fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.Net.ICredentials" />-Objekt mit den mit der Anforderung verknüpften Authentifizierungsanmeldeinformationen. Der Standardwert ist <see langword="null" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultCachePolicy">
      <summary>Ruft die Standardcacherichtlinie für diese Anforderung ab oder legt diese fest.</summary>
      <returns>Eine <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />, die die für diese Anforderung gültige Cacherichtlinie angibt, wenn keine andere Richtlinie anwendbar ist.</returns>
    </member>
    <member name="P:System.Net.WebRequest.DefaultWebProxy">
      <summary>Ruft den globalen HTTP-Proxy ab oder legt diesen fest.</summary>
      <returns>Ein von jedem Aufruf der Instanzen von <see cref="T:System.Net.IWebProxy" /> verwendeter <see cref="T:System.Net.WebRequest" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Headers">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse eine Auflistung von Name-Wert-Paaren für Header ab, die mit der Anforderung verknüpft sind, oder legt diese fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine <see cref="T:System.Net.WebHeaderCollection" /> mit den dieser Anforderung zugeordneten Name-Wert-Paaren für Header.</returns>
    </member>
    <member name="P:System.Net.WebRequest.ImpersonationLevel">
      <summary>Ruft die Ebene des Identitätswechsels für die aktuelle Anforderung ab oder legt diese fest.</summary>
      <returns>Ein <see cref="T:System.Security.Principal.TokenImpersonationLevel" />-Wert.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Method">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die in dieser Anforderung zu verwendende Protokollmethode ab oder legt diese fest.</summary>
      <exception cref="T:System.NotImplementedException">Wenn die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wird, wird auf die unterschiedlichste Art versucht, diese Eigenschaft abzurufen oder festzulegen.</exception>
      <returns>Die in dieser Anforderung zu verwendende Protokollmethode.</returns>
    </member>
    <member name="P:System.Net.WebRequest.PreAuthenticate">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse an, ob die Anforderung zuvor authentifiziert werden muss.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>
        <see langword="true" /> für eine Vorauthentifizierung, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Proxy">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den beim Zugriff auf diese Internetressource verwendeten Netzwerkproxy ab oder legt diesen fest.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Der beim Zugriff auf die Internetressource zu verwendende <see cref="T:System.Net.IWebProxy" />.</returns>
    </member>
    <member name="P:System.Net.WebRequest.RequestUri">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse den mit der Anforderung verknüpften URI der Internetressource ab.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Ein <see cref="T:System.Uri" />, der die der Anforderung zugeordnete Ressource darstellt.</returns>
    </member>
    <member name="P:System.Net.WebRequest.Timeout">
      <summary>Ruft die Zeitspanne in Millisekunden bis zum Überschreiten des Zeitlimits der Anforderung ab.</summary>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Die Zeitspanne (in Millisekunden) bis zum Timeout der Anforderung oder der Wert, der <see cref="F:System.Threading.Timeout.Infinite" /> angibt, dass für die Anforderung kein Timeout eintritt. Der Standardwert wird von der Nachfolger Klasse definiert.</returns>
    </member>
    <member name="P:System.Net.WebRequest.UseDefaultCredentials">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse einen <see cref="T:System.Boolean" />-Wert ab, der steuert, ob mit Anforderungen <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> gesendet werden, oder legt einen solchen Wert fest.</summary>
      <exception cref="T:System.InvalidOperationException">Sie haben versucht, diese Eigenschaft nach dem Senden der Anforderung festzulegen.</exception>
      <exception cref="T:System.NotImplementedException">Es wurde versucht, auf die Eigenschaft zuzugreifen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>
        <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</returns>
    </member>
    <member name="T:System.Net.WebRequestMethods">
      <summary>Containerklasse für die Klassen <see cref="T:System.Net.WebRequestMethods.Ftp" />, <see cref="T:System.Net.WebRequestMethods.File" /> und <see cref="T:System.Net.WebRequestMethods.Http" />. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.File">
      <summary>Stellt die Typen von Dateiprotokollmethoden dar, die mit einer FILE-Anforderung verwendet werden können. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.DownloadFile">
      <summary>Stellt die FILE GET-Protokollmethode dar, mit der eine Datei von einem bestimmten Speicherort abgerufen wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.File.UploadFile">
      <summary>Stellt die FILE PUT-Protokollmethode dar, mit der eine Datei an einen bestimmten Speicherort kopiert wird.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Ftp">
      <summary>Stellt die Typen von FTP-Protokollmethoden dar, die für eine FTP-Anforderung verwendet werden können. Diese Klasse kann nicht vererbt werden.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.AppendFile">
      <summary>Stellt die FTP APPE-Protokollmethode dar, die zum Anfügen einer Datei an eine auf einem FTP-Server vorhandene Datei verwendet wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DeleteFile">
      <summary>Stellt die FTP DELE-Protokollmethode dar, die zum Löschen einer Datei auf einem FTP-Server verwendet wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.DownloadFile">
      <summary>Stellt die FTP RETR-Protokollmethode dar, die zum Herunterladen einer Datei von einem FTP-Server verwendet wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetDateTimestamp">
      <summary>Stellt die FTP MTDM-Protokollmethode dar, die zum Abrufen eines DateTime-Zeitstempels von einer Datei auf einem FTP-Server verwendet wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.GetFileSize">
      <summary>Stellt die FTP SIZE-Protokollmethode dar, die zum Abrufen der Größe einer Datei auf einem FTP-Server verwendet wird.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectory">
      <summary>Stellt die FTP NLIST-Protokollmethode dar, die eine kurze Auflistung der Dateien auf einem FTP-Server abruft.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails">
      <summary>Stellt die FTP LIST-Protokollmethode dar, die eine ausführliche Auflistung der Dateien auf einem FTP-Server abruft.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.MakeDirectory">
      <summary>Stellt die FTP MKD-Protokollmethode dar, die ein Verzeichnis auf einem FTP-Server erstellt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.PrintWorkingDirectory">
      <summary>Stellt die FTP PWD-Protokollmethode dar, die den Namen des aktuellen Arbeitsverzeichnisses druckt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.RemoveDirectory">
      <summary>Stellt die FTP RMD-Protokollmethode dar, die ein Verzeichnis entfernt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.Rename">
      <summary>Stellt die FTP RENAME-Protokollmethode dar, die ein Verzeichnis umbenennt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFile">
      <summary>Stellt die FTP STOR-Protokollmethode dar, die eine Datei auf einen FTP-Server hochlädt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Ftp.UploadFileWithUniqueName">
      <summary>Stellt die FTP STOU-Protokollmethode dar, die eine Datei mit einem eindeutigen Namen auf einen FTP-Server hochlädt.</summary>
    </member>
    <member name="T:System.Net.WebRequestMethods.Http">
      <summary>Stellt die Typen von HTTP-Protokollmethoden dar, die für eine HTTP-Anforderung verwendet werden können.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Connect">
      <summary>Stellt die HTTP CONNECT-Protokollmethode dar, die für einen Proxy verwendet wird, der dynamisch in den Tunnelingmodus, z. B. in SSL-Tunneling, wechseln kann.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Get">
      <summary>Stellt eine HTTP GET-Protokollmethode dar.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Head">
      <summary>Stellt eine HTTP HEAD-Protokollmethode dar. Die HEAD-Methode ist mit der GET-Methode identisch, bis auf den Unterschied, dass der Server in der Antwort nur Meldungsheader und keinen Meldungstext zurückgibt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.MkCol">
      <summary>Stellt eine HTTP MKCOL-Anforderung dar, die an dem vom Anforderungs-URI (Uniform Resource Identifier) angegebenen Speicherort eine neue Auflistung (z. B. eine Auflistung von Seiten) erstellt.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Post">
      <summary>Stellt eine HTTP POST-Protokollmethode dar, die verwendet wird, um eine neue Entität als Zusatz zu einem URI zu senden.</summary>
    </member>
    <member name="F:System.Net.WebRequestMethods.Http.Put">
      <summary>Stellt eine HTTP PUT-Protokollmethode dar, die verwendet wird, um eine durch einen URI bezeichnete Entität zu ersetzen.</summary>
    </member>
    <member name="T:System.Net.WebResponse">
      <summary>Stellt eine Antwort eines URIs (Uniform Resource Identifier) bereit. Dies ist eine <see langword="abstract" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebResponse" />-Klasse.</summary>
    </member>
    <member name="M:System.Net.WebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.WebResponse" />-Klasse aus den angegebenen Instanzen der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse und der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse.</summary>
      <param name="serializationInfo">Eine Instanz der <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Klasse mit den für die Serialisierung der neuen <see cref="T:System.Net.WebRequest" />-Instanz erforderlichen Informationen.</param>
      <param name="streamingContext">Eine Instanz der <see cref="T:System.Runtime.Serialization.StreamingContext" />-Klasse, die die Quelle des serialisierten Streams angibt, der der neuen <see cref="T:System.Net.WebRequest" />-Instanz zugeordnet ist.</param>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, auf den Konstruktor zuzugreifen, obwohl der Konstruktor in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Close">
      <summary>Schließt beim Überschreiben durch eine Nachfolgerklasse den Antwortstream.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
    </member>
    <member name="M:System.Net.WebResponse.Dispose">
      <summary>Gibt die vom <see cref="T:System.Net.WebResponse" />-Objekt verwendeten nicht verwalteten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Net.WebResponse.Dispose(System.Boolean)">
      <summary>Gibt die vom <see cref="T:System.Net.WebResponse" />-Objekt verwendeten nicht verwalteten Ressourcen und verwirft optional auch die verwalteten Ressourcen.</summary>
      <param name="disposing">
        <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
      <param name="serializationInfo">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />, der das Ziel für diese Serialisierung angibt.</param>
    </member>
    <member name="M:System.Net.WebResponse.GetResponseStream">
      <summary>Gibt beim Überschreiben in einer Nachfolgerklasse den Datenstream von der Internetressource zurück.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, auf die Methode zuzugreifen, obwohl die Methode in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine Instanz der <see cref="T:System.IO.Stream" />-Klasse zum Lesen von Daten aus der Internetressource.</returns>
    </member>
    <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Instanz mit den zum Serialisieren der <see cref="T:System.Net.WebResponse" /> erforderlichen Daten auf.</summary>
      <param name="serializationInfo">Eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den serialisierten Daten für die <see cref="T:System.Net.WebResponse" />.</param>
      <param name="streamingContext">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" /> mit dem Ziel des serialisierten Streams, der der neuen <see cref="T:System.Net.WebResponse" /> zugeordnet ist.</param>
    </member>
    <member name="P:System.Net.WebResponse.ContentLength">
      <summary>Ruft beim Überschreiben in einer Nachfolgerklasse die Inhaltslänge der empfangenen Daten ab oder legt diese fest.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Die Anzahl der von der Internetressource zurückgegebenen Bytes.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ContentType">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den Inhaltstyp der empfangenen Daten ab oder legt diesen fest.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine Zeichenfolge, die den Inhaltstyp der Antwort enthält.</returns>
    </member>
    <member name="P:System.Net.WebResponse.Headers">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung von Name-Wert-Paaren für Header ab, die dieser Anforderung zugeordnet sind.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine Instanz der <see cref="T:System.Net.WebHeaderCollection" />-Klasse, die Headerwerte enthält, die dieser Antwort zugeordnet sind.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsFromCache">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob diese Antwort aus dem Cache abgerufen wurde.</summary>
      <returns>
        <see langword="true" />, wenn die Antwort aus dem Cache stammt, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.IsMutuallyAuthenticated">
      <summary>Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob eine gegenseitige Authentifizierung erfolgt ist.</summary>
      <returns>
        <see langword="true" />, wenn sowohl Client als auch Server authentifiziert wurden, andernfalls <see langword="false" />.</returns>
    </member>
    <member name="P:System.Net.WebResponse.ResponseUri">
      <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse den URI der Internetressource ab, die letztlich auf die Anforderung geantwortet hat.</summary>
      <exception cref="T:System.NotSupportedException">Es wurde versucht, die Eigenschaft abzurufen oder festzulegen, obwohl die Eigenschaft in einer Nachfolgerklasse nicht überschrieben wurde.</exception>
      <returns>Eine Instanz der <see cref="T:System.Uri" />-Klasse, die den URI der Internetressource enthält, die letztlich auf die Anforderung geantwortet hat.</returns>
    </member>
    <member name="P:System.Net.WebResponse.SupportsHeaders">
      <summary>Ruft einen Wert ab, der angibt, ob Header unterstützt werden.</summary>
      <returns>Gibt <see cref="T:System.Boolean" />zurück.  
  
 <see langword="true" />, wenn Header unterstützt werden, andernfalls <see langword="false" />.</returns>
    </member>
  </members>
</doc>