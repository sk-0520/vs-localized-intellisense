<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Xml.ReaderWriter</name>
  </assembly>
  <members>
    <member name="T:System.Xml.ConformanceLevel">
      <summary>Especifica el número de comprobaciones de entrada o de salida que realizan los objetos <see cref="T:System.Xml.XmlReader" /> y <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Auto">
      <summary>Los objetos <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" /> detectan automáticamente si se debe realizar la comprobación del documento o fragmento y lleva a cabo la comprobación correspondiente. Si está ajustando otro objeto <see cref="T:System.Xml.XmlReader" /> o <see cref="T:System.Xml.XmlWriter" />, el objeto externo no lleva a cabo ninguna comprobación de conformidad adicional. La comprobación de conformidad se deja al objeto subyacente.  
  
Vea las propiedades <see cref="P:System.Xml.XmlReaderSettings.ConformanceLevel" /> y <see cref="P:System.Xml.XmlWriterSettings.ConformanceLevel" /> para más información sobre cómo se determina el nivel de cumplimiento.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Document">
      <summary>Los datos XML cumplen con las reglas de un documento XML 1.0 con el formato correcto, tal como define W3C. Este nivel de comprobación garantiza que el flujo que se lee o escribe pueda consumirse por cualquier procesador como un documento XML 1.0.</summary>
    </member>
    <member name="F:System.Xml.ConformanceLevel.Fragment">
      <summary>Los datos XML son un fragmento XML con el formato correcto, tal como define W3C.  Este nivel de conformidad representa un documento XML que puede que no tenga un elemento raíz, pero que está bien formado. Este nivel de comprobación garantiza que el flujo que se lee o escribe pueda consumirse por cualquier procesador como una  entidad analizada externa XML 1.0].</summary>
    </member>
    <member name="T:System.Xml.DtdProcessing">
      <summary>Especifica las opciones para procesar DTD. La clase <see cref="T:System.Xml.DtdProcessing" /> utiliza la enumeración <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Ignore">
      <summary>Hace que se omita el elemento DOCTYPE. No se produce ningún procesamiento de DTD, y DTD/DOCTYPE se pierde en la salida.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Parse">
      <summary>Se usa para analizar DTD.</summary>
    </member>
    <member name="F:System.Xml.DtdProcessing.Prohibit">
      <summary>Especifica que cuando se encuentre una DTD, se produzca una excepción <see cref="T:System.Xml.XmlException" /> con un mensaje que indique que se prohíbe el uso de esa DTD. Éste es el comportamiento predeterminado.</summary>
    </member>
    <member name="T:System.Xml.EntityHandling">
      <summary>Especifica cómo <see cref="T:System.Xml.XmlTextReader" /> o <see cref="T:System.Xml.XmlValidatingReader" /> controlan las entidades.</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandCharEntities">
      <summary>Expande las entidades de carácter y devuelve las entidades generales como nodos <see cref="F:System.Xml.XmlNodeType.EntityReference" />. 
        
Debe llamar a <see cref="Overload:System.Xml.XmlReader.ResolveEntity" /> para ver a qué se expanden las entidades generales. Esto le permite optimizar el tratamiento de la entidad expandiendo solo la entidad la primera vez que se usa.  
  
Cuando se establece en <see langword="ExpandCharEntities" />, una llamada de lector al método <see cref="Overload:System.Xml.XmlReader.GetAttribute" /> expande todas las entidades (las entidades generales y de caracteres).</summary>
    </member>
    <member name="F:System.Xml.EntityHandling.ExpandEntities">
      <summary>Expande todas las entidades y devuelve los nodos expandidos.
        
Los nodos <see cref="F:System.Xml.XmlNodeType.EntityReference" /> no se devuelven. El texto de la entidad se expande en lugar de las referencias de entidad.</summary>
    </member>
    <member name="T:System.Xml.Formatting">
      <summary>Especifica las opciones de formato de <see cref="T:System.Xml.XmlTextWriter" />.</summary>
    </member>
    <member name="F:System.Xml.Formatting.Indented">
      <summary>Hace que los elementos secundarios tengan la sangría que indican los valores de las propiedades <see cref="P:System.Xml.XmlTextWriter.Indentation" /> y <see cref="P:System.Xml.XmlTextWriter.IndentChar" />.

Esta opción solo aplica sangría al contenido del elemento; el contenido mixto no se ve afectado. Para las definiciones de XML 1.0 de estos términos, consulte la documentación de World Wide Web Consortium (W3C) sobre contenido del elemento y contenido mixto.</summary>
    </member>
    <member name="F:System.Xml.Formatting.None">
      <summary>No se aplica un formato especial. Este es el valor predeterminado.</summary>
    </member>
    <member name="T:System.Xml.IApplicationResourceStreamResolver">
      <summary>Representa una resolución de secuencias de recursos de aplicación.</summary>
    </member>
    <member name="M:System.Xml.IApplicationResourceStreamResolver.GetApplicationResourceStream(System.Uri)">
      <summary>Devuelve una secuencia de recursos de aplicación a partir del URI especificado.</summary>
      <param name="relativeUri">Dirección URI relativa.</param>
      <returns>Un flujo de recursos de la aplicación.</returns>
    </member>
    <member name="T:System.Xml.IHasXmlNode">
      <summary>Permite que una clase devuelva <see cref="T:System.Xml.XmlNode" /> desde el contexto o la posición actuales.</summary>
    </member>
    <member name="M:System.Xml.IHasXmlNode.GetNode">
      <summary>Devuelve el <see cref="T:System.Xml.XmlNode" /> de la posición actual.</summary>
      <returns>
        <see langword="XmlNode" /> de la posición actual.</returns>
    </member>
    <member name="T:System.Xml.IXmlLineInfo">
      <summary>Proporciona una interfaz para habilitar una clase que devuelva información de línea y posición.</summary>
    </member>
    <member name="M:System.Xml.IXmlLineInfo.HasLineInfo">
      <summary>Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns>Es <see langword="true" /> si se pueden proporcionar <see cref="P:System.Xml.IXmlLineInfo.LineNumber" /> y <see cref="P:System.Xml.IXmlLineInfo.LinePosition" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LineNumber">
      <summary>Obtiene el número de línea actual.</summary>
      <returns>Número de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve <see langword="false" />).</returns>
    </member>
    <member name="P:System.Xml.IXmlLineInfo.LinePosition">
      <summary>Obtiene la posición de línea actual.</summary>
      <returns>Posición de línea actual o 0 si no hay información de línea disponible (por ejemplo, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo" /> devuelve <see langword="false" />).</returns>
    </member>
    <member name="T:System.Xml.IXmlNamespaceResolver">
      <summary>Proporciona acceso de solo lectura a un conjunto de asignaciones de prefijos y espacios de nombres.</summary>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtiene una colección de asignaciones de prefijos y espacios de nombres que están actualmente en el ámbito.</summary>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
      <summary>Obtiene el URI del espacio de nombres asignado al prefijo especificado.</summary>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns>Identificador URI del espacio de nombres que está asignado al prefijo; es <see langword="null" /> si el prefijo no está asignado a ningún URI de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
      <summary>Obtiene el prefijo asignado al URI del espacio de nombres especificado.</summary>
      <param name="namespaceName">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns>Prefijo asignado al URI del espacio de nombres; es <see langword="null" /> si este URI no está asignado a ningún prefijo.</returns>
    </member>
    <member name="T:System.Xml.NamespaceHandling">
      <summary>Especifica si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.Default">
      <summary>Especifica que no se quitarán las declaraciones de espacio de nombres duplicadas.</summary>
    </member>
    <member name="F:System.Xml.NamespaceHandling.OmitDuplicates">
      <summary>Especifica que se quitarán las declaraciones de espacio de nombres duplicadas. Para poder quitar el espacio de nombres duplicado, el prefijo y el espacio de nombres deben coincidir.</summary>
    </member>
    <member name="T:System.Xml.NameTable">
      <summary>Implementa <see cref="T:System.Xml.XmlNameTable" /> de un único subproceso.</summary>
    </member>
    <member name="M:System.Xml.NameTable.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="NameTable" />.</summary>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Subdivide la cadena especificada y la agrega a <see langword="NameTable" />.</summary>
      <param name="key">Matriz de caracteres que contiene la cadena que se va a agregar.</param>
      <param name="start">Índice de base cero de la matriz que especifica el primer carácter de la cadena.</param>
      <param name="len">Número de caracteres de la cadena.</param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  
  
o bien 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
o bien 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
      <returns>Cadena subdividida o cadena existente si ya está en <see langword="NameTable" />. Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Add(System.String)">
      <summary>Subdivide la cadena especificada y la agrega a <see langword="NameTable" />.</summary>
      <param name="key">Cadena que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> es <see langword="null" />.</exception>
      <returns>Cadena subdividida o cadena existente si ya está en <see langword="NameTable" />.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <param name="key">Matriz de caracteres que contiene el nombre que se va a buscar.</param>
      <param name="start">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="len">Número de caracteres del nombre.</param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="start" />  
  
o bien 
 <paramref name="start" /> &gt;= <paramref name="key" />.Length 
o bien 
 <paramref name="len" /> &gt;= <paramref name="key" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="len" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="len" /> &lt; 0.</exception>
      <returns>Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía. Si <paramref name="len" /> es cero, se devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.NameTable.Get(System.String)">
      <summary>Obtiene la cadena subdividida con el valor especificado.</summary>
      <param name="value">Nombre que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> es <see langword="null" />.</exception>
      <returns>Objeto de cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía.</returns>
    </member>
    <member name="T:System.Xml.NewLineHandling">
      <summary>Especifica cómo controlar los saltos de línea.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Entitize">
      <summary>Los nuevos caracteres de la línea tienen entidades. Esta configuración conserva todos los caracteres cuando el resultado se lee mediante un <see cref="T:System.Xml.XmlReader" /> de normalización.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.None">
      <summary>Los nuevos caracteres de línea no se modifican. El resultado es igual que la entrada.</summary>
    </member>
    <member name="F:System.Xml.NewLineHandling.Replace">
      <summary>Los nuevos caracteres de línea se reemplazan para coincidir con el carácter especificado en la propiedad <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />.</summary>
    </member>
    <member name="T:System.Xml.ReadState">
      <summary>Especifica el estado del lector.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Closed">
      <summary>Se ha llamado al método <see cref="M:System.Xml.XmlReader.Close" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.EndOfFile">
      <summary>Se ha llegado al final del archivo correctamente.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Error">
      <summary>Se ha producido un error que impide que continúe la operación de lectura.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Initial">
      <summary>No se ha llamado al método <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Xml.ReadState.Interactive">
      <summary>Se ha llamado al método <see langword="Read" />. Se puede llamar a otros métodos en el lector.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlKnownDtds">
      <summary>
        <see cref="T:System.Xml.Resolvers.XmlKnownDtds" /> usa la enumeración <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> y define las DTD conocidas que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconoce.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.All">
      <summary>Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá todas las DTD actualmente compatibles. Este es el comportamiento predeterminado.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.None">
      <summary>Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> no reconocerá ninguna de las DTD predefinidas.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Rss091">
      <summary>Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá las DTD y entidades definidas en RSS 0.91.</summary>
    </member>
    <member name="F:System.Xml.Resolvers.XmlKnownDtds.Xhtml10">
      <summary>Especifica que <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> reconocerá las DTD y entidades definidas en XHTML 1.0.</summary>
    </member>
    <member name="T:System.Xml.Resolvers.XmlPreloadedResolver">
      <summary>Representa una clase que se usa para rellenar previamente la memoria caché con DTD o secuencias XML.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con las DTD conocidas cargadas previamente especificadas.</summary>
      <param name="preloadedDtds">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva especificada.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva especificada y las DTD conocidas cargadas previamente.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
      <param name="preloadedDtds">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> con la resolución de reserva, las DTD conocidas cargadas previamente y el comparador de igualdad de identificadores URI especificados.</summary>
      <param name="fallbackResolver">
        <see langword="XmlResolver" />, <see langword="XmlXapResolver" /> o su propia resolución.</param>
      <param name="preloadedDtds">DTD conocidas que se deben rellenar previamente en la memoria caché.</param>
      <param name="uriComparer">Implementación de la interfaz genérica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> que se usa al comparar identificadores URI.</param>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
      <summary>Agrega una matriz de bytes al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y le asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Matriz de bytes con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
      <summary>Agrega una matriz de bytes al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y le asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Matriz de bytes con los datos correspondientes al identificador URI especificado.</param>
      <param name="offset">Desplazamiento en la matriz de bytes proporcionada donde comienzan los datos.</param>
      <param name="count">Número de bytes que se leen de la matriz de bytes, empezando desde el desplazamiento especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> o <paramref name="count" /> es menor que 0.  
  
o bien 
La longitud de <paramref name="value" /> menos <paramref name="offset" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
      <summary>Agrega un <see cref="T:System.IO.Stream" /> al <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> almacenado y lo asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Objeto <see cref="T:System.IO.Stream" /> con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
      <summary>Agrega una cadena con datos cargados previamente al almacén de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> y la asigna a un URI. Si el almacén ya contiene una asignación para el mismo URI, se invalida la asignación existente.</summary>
      <param name="uri">URI de los datos que se van a agregar al almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <param name="value">Objeto <see langword="String" /> con los datos correspondientes al identificador URI especificado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> o <paramref name="value" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">La versión actual de .NET Framework para Silverlight no utiliza este parámetro al resolver los URI. Este parámetro se incluye para futuros fines de extensibilidad. Por ejemplo, este parámetro se puede asignar a xlink:role y usar como argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> admite objetos <see cref="T:System.IO.Stream" /> y objetos <see cref="T:System.IO.TextReader" /> para los identificadores URI que se agregaron como <see langword="String" />. Si la resolución no admite el tipo solicitado, se producirá una excepción. Use el método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar si esta resolución admite un <see langword="Type" /> determinado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">No puede resolver el URI pasado en el parámetro <paramref name="absoluteUri" />.  
  
o bien 
 <paramref name="ofObjectToReturn" /> no tiene un tipo compatible.</exception>
      <returns>Un objeto de <see cref="T:System.IO.Stream" /> o <see cref="T:System.IO.TextReader" /> que corresponde al origen real.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">La versión actual de .NET Framework para Silverlight no utiliza este parámetro al resolver los URI. Este parámetro se incluye para futuros fines de extensibilidad. Por ejemplo, este parámetro se puede asignar a xlink:role y usar como argumento específico de la implementación en otros escenarios.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" /> admite objetos <see cref="T:System.IO.Stream" /> y objetos <see cref="T:System.IO.TextReader" /> para los identificadores URI que se agregaron como <see langword="String" />. Si la resolución no admite el tipo solicitado, se producirá una excepción. Use el método <see cref="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)" /> para determinar si esta resolución admite un <see langword="Type" /> determinado.</param>
      <returns>Un objeto de <see cref="T:System.IO.Stream" /> o <see cref="T:System.IO.TextReader" /> que corresponde al origen real.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
      <summary>Quita los datos correspondientes al identificador URI de <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</summary>
      <param name="uri">URI de los datos que deben quitarse del almacén <see cref="T:System.Xml.Resolvers.XmlPreloadedResolver" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resuelve el URI absoluto a partir de los URI base y relativo.</summary>
      <param name="baseUri">Identificador URI base que se usa para resolver el identificador URI relativo.</param>
      <param name="relativeUri">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un URI absoluto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Uri" /> que representa el URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
    </member>
    <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)">
      <summary>Determina si la resolución admite otros objetos <see cref="T:System.Type" /> además de <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">Identificador URI absoluto que se va a comprobar.</param>
      <param name="type">
        <see cref="T:System.Type" /> que se va a devolver.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="uri" /> es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si se admite el elemento <see cref="T:System.Type" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials">
      <summary>Establece credenciales que se usan para autenticar <see cref="T:System.Net.WebRequest" /> subyacentes.</summary>
      <returns>Credenciales que se usan para autenticar la solicitud web subyacente.</returns>
    </member>
    <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
      <summary>Obtiene una colección de identificadores URI cargados previamente.</summary>
      <returns>Colección de identificadores URI cargados previamente.</returns>
    </member>
    <member name="T:System.Xml.Schema.IXmlSchemaInfo">
      <summary>Define el conjunto de información posterior a la validación del esquema de un nodo XML validado.</summary>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsDefault">
      <summary>Obtiene un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación del esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns>Es <see langword="true" /> si este nodo XML validado se estableció como resultado de aplicar un valor predeterminado durante la validación del esquema; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.IsNil">
      <summary>Obtiene un valor que indica si el valor de este nodo XML validado es nil.</summary>
      <returns>Es <see langword="true" /> si el valor para este nodo XML validado es nulo; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
      <summary>Obtiene el tipo de esquema dinámico de este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo de esquema dinámico para este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
      <summary>Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> que corresponde a este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
      <summary>Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaElement" /> que corresponde a este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
      <summary>Obtiene el tipo estático de esquema del lenguaje de definición de esquemas XML (XSD) del nodo XML validado.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> de este nodo XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.IXmlSchemaInfo.Validity">
      <summary>Obtiene el valor de <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> de este nodo XML validado.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventArgs">
      <summary>Devuelve información detallada relacionada con <see langword="ValidationEventHandler" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Exception">
      <summary>Obtiene la excepción <see cref="T:System.Xml.Schema.XmlSchemaException" /> asociada al evento de validación.</summary>
      <returns>Excepción <see langword="XmlSchemaException" /> asociada al evento de validación.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
      <summary>Obtiene la descripción de texto correspondiente al evento de validación.</summary>
      <returns>Descripción de texto.</returns>
    </member>
    <member name="P:System.Xml.Schema.ValidationEventArgs.Severity">
      <summary>Obtiene la gravedad del evento de validación.</summary>
      <returns>Valor de <see cref="T:System.Xml.Schema.XmlSeverityType" /> que representa la gravedad del evento de validación.</returns>
    </member>
    <member name="T:System.Xml.Schema.ValidationEventHandler">
      <summary>Representa el método de devolución de llamada que controlará los eventos de validación del esquema XML y <see cref="T:System.Xml.Schema.ValidationEventArgs" />.</summary>
      <param name="sender">Origen del evento.  
  
 Nota: Establezca el tipo de un remitente antes de usarlo en el código. No puede suponer que el remitente es una instancia de un tipo determinado. Tampoco se garantiza que el remitente no sea nulo. Rodee siempre las conversiones de tipos con lógica de control de errores.</param>
      <param name="e">Datos del evento.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlAtomicValue">
      <summary>Representa el valor con tipo de un atributo o elemento XML validado. La clase <see cref="T:System.Xml.Schema.XmlAtomicValue" /> no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
      <summary>Devuelve una copia de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Copia del objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" /> de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlAtomicValue.Clone" />.</summary>
      <returns>Copia de este objeto <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ToString">
      <summary>Obtiene el valor <see langword="string" /> del atributo o elemento XML validado.</summary>
      <returns>Valor <see langword="string" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlAtomicValue.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Devuelve el valor del atributo o elemento XML validado como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los prefijos de espacio de nombres.</summary>
      <param name="type">Tipo en el que se devolverá el atributo o elemento XML validado.</param>
      <param name="nsResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de los espacios de nombres.</param>
      <exception cref="T:System.FormatException">El valor del atributo o elemento XML validado no tiene el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del atributo o elemento XML validado como el tipo solicitado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.IsNode">
      <summary>Obtiene un valor que indica si el atributo o el elemento XML validado es un nodo XPath o un valor atómico.</summary>
      <returns>Es <see langword="true" /> si el atributo o elemento XML validado es un nodo XPath; <see langword="false" /> si el atributo o elemento XML validado es un valor atómico.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.TypedValue">
      <summary>Obtiene el atributo o elemento XML validado actual en forma de objeto empaquetado del tipo más apropiado de Microsoft .NET Framework según el tipo de esquema.</summary>
      <returns>Atributo o elemento XML validado actual en forma de objeto empaquetado del tipo de .NET Framework que sea más adecuado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.Value">
      <summary>Obtiene el valor <see langword="string" /> del atributo o elemento XML validado.</summary>
      <returns>Valor <see langword="string" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsBoolean">
      <summary>Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
      <returns>Valor del atributo o elemento XML validado en forma de <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDateTime">
      <summary>Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
      <returns>Valor del atributo o elemento XML validado en forma de <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsDouble">
      <summary>Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del atributo o elemento XML validado en forma de <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsInt">
      <summary>Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueAsLong">
      <summary>Obtiene el valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException">El valor del atributo o el elemento XML validado no tiene el formato correcto para el tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del atributo o elemento XML validado en forma de <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.ValueType">
      <summary>Obtiene el tipo de Microsoft .NET Framework del atributo o elemento XML validado.</summary>
      <returns>Tipo de .NET Framework del atributo o elemento XML validado. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlAtomicValue.XmlType">
      <summary>Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlSchemaType" /> del atributo o elemento XML validado.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchema">
      <summary>Representación en memoria de un esquema XML como se especifica en el esquema XML parte 1: estructuras y el esquema XML Parte 2: tipos de datos de World Wide Web Consortium (W3C).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.InstanceNamespace">
      <summary>El espacio de nombres de instancia del esquema XML. Este campo es constante.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchema.Namespace">
      <summary>El espacio de nombres del esquema XML. Este campo es constante.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler)">
      <summary>Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se usa para comprobar la estructura sintáctica y semántica del SOM creado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.</summary>
      <param name="validationEventHandler">Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Compile(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlResolver)">
      <summary>Compila el Modelo de objetos de esquemas XML (SOM) en información de esquemas para la validación. Se usa para comprobar la estructura sintáctica y semántica del SOM creado mediante programación. La comprobación de la validación semántica se realiza durante la compilación.</summary>
      <param name="validationEventHandler">Controlador de eventos de validación que recibe información acerca de los errores de validación del esquema XML.</param>
      <param name="resolver">Objeto <see langword="XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lee un esquema XML del flujo proporcionado.</summary>
      <param name="stream">Flujo de datos suministrado.</param>
      <param name="validationEventHandler">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lee un esquema XML del objeto <see cref="T:System.IO.TextReader" /> proporcionado.</summary>
      <param name="reader">Objeto <see langword="TextReader" /> que contiene el esquema XML que se va a leer.</param>
      <param name="validationEventHandler">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Lee un esquema XML del objeto <see cref="T:System.Xml.XmlReader" /> proporcionado.</summary>
      <param name="reader">Objeto <see langword="XmlReader" /> que contiene el esquema XML que se va a leer.</param>
      <param name="validationEventHandler">Controlador de eventos de validación que recibe información acerca de los errores de sintaxis del esquema XML.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Se produce una <see cref="T:System.Xml.Schema.XmlSchemaException" /> si no se especifica ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que representa el esquema XML.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
      <summary>Escribe el esquema XML en el flujo de datos suministrado.</summary>
      <param name="stream">Flujo de datos suministrado.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
      <summary>Escribe el esquema XML en el <see cref="T:System.IO.Stream" /> proporcionado utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> especificado.</summary>
      <param name="stream">Flujo de datos suministrado.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
      <summary>Escribe el esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
      <summary>Escribe el esquema XML en el objeto <see cref="T:System.IO.TextWriter" /> proporcionado.</summary>
      <param name="writer">
        <see cref="T:System.IO.TextWriter" /> en el que se va a escribir.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
      <summary>Escribe el esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> proporcionado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="writer" /> es null.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
      <summary>Escribe el esquema XML en el objeto <see cref="T:System.Xml.XmlWriter" /> proporcionado.</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> en el que se va a escribir.</param>
      <param name="namespaceManager">
        <see cref="T:System.Xml.XmlNamespaceManager" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeFormDefault">
      <summary>Obtiene o establece el formato de los atributos declarados en el espacio de nombres de destino del esquema.</summary>
      <returns>El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los atributos del espacio de nombres de destino con el espacio de nombres como prefijo. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
      <summary>Obtiene el valor posterior a la compilación del esquema de todos los grupos de atributos globales del esquema.</summary>
      <returns>Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos de atributos globales del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Attributes">
      <summary>Obtiene el valor posterior a la compilación del esquema para todos los atributos del esquema.</summary>
      <returns>Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los atributos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.BlockDefault">
      <summary>Obtiene o establece el atributo <see langword="blockDefault" />, que establece el valor predeterminado del atributo <see langword="block" /> en elementos y tipos complejos en el <see langword="targetNamespace" /> del esquema.</summary>
      <returns>Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.ElementFormDefault">
      <summary>Obtiene o establece el formato de los elementos declarados en el espacio de nombres de destino del esquema.</summary>
      <returns>El valor de <see cref="T:System.Xml.Schema.XmlSchemaForm" /> que indica si es necesario calificar los elementos del espacio de nombres de destino con el espacio de nombres como prefijo. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Elements">
      <summary>Obtiene el valor posterior a la compilación del esquema para todos los elementos del esquema.</summary>
      <returns>Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los elementos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.FinalDefault">
      <summary>Obtiene o establece el atributo <see langword="finalDefault" /> que establece el valor predeterminado del atributo <see langword="final" /> en elementos y tipos complejos en el espacio de nombres de destino del esquema.</summary>
      <returns>Un valor de <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representa los distintos métodos para impedir la derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Groups">
      <summary>Obtiene el valor posterior a la compilación del esquema de todos los grupos del esquema.</summary>
      <returns>Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todos los grupos del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Id">
      <summary>Obtiene o establece el identificador de cadena.</summary>
      <returns>Identificador de cadena. El valor predeterminado es <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Includes">
      <summary>Obtiene la colección de esquemas incluidos e importados.</summary>
      <returns>Una <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los esquemas incluidos e importados.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.IsCompiled">
      <summary>Indica si el esquema se ha compilado.</summary>
      <returns>Es <see langword="true" /> si el esquema se ha compilado; de lo contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Items">
      <summary>Obtiene la colección de elementos de esquema del esquema y se utiliza para agregar nuevos tipos de elemento en el nivel de elemento <see langword="schema" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de los elementos de esquema del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Notations">
      <summary>Obtiene el valor posterior a la compilación del esquema para todas las notaciones del esquema.</summary>
      <returns>Una colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> de todas las notaciones del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
      <summary>Obtiene el valor posterior a la compilación del esquema de todos los tipos de esquema del esquema.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de todos los tipos de esquema del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.TargetNamespace">
      <summary>Obtiene o establece el identificador uniforme de recursos (URI) del espacio de nombres de destino del esquema.</summary>
      <returns>El espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.UnhandledAttributes">
      <summary>Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns>Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> calificados que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchema.Version">
      <summary>Obtiene o establece la versión del esquema.</summary>
      <returns>Versión del esquema. El valor predeterminado es <see langword="String.Empty" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAll">
      <summary>Representa el elemento <see langword="all" /> (compositor) del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAll.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAll" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAll.Items">
      <summary>Obtiene la colección de los elementos <see langword="XmlSchemaElement" /> incluidos en el compositor <see langword="all" />.</summary>
      <returns>Colección de elementos incluidos en <see langword="XmlSchemaAll" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotated">
      <summary>Clase base de cualquier elemento que pueda contener elementos de anotación.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotated.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotated" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Annotation">
      <summary>Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" /> que representa la propiedad <see langword="annotation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.Id">
      <summary>Obtiene o establece el identificador de cadena.</summary>
      <returns>Identificador de cadena. El valor predeterminado es <see langword="String.Empty" /> . Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes">
      <summary>Obtiene o establece los atributos calificados que no pertenecen al espacio de nombres de destino del esquema actual.</summary>
      <returns>Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> calificados que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnnotation">
      <summary>Representa el elemento <see langword="annotation" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnnotation.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Id">
      <summary>Obtiene o establece el identificador de cadena.</summary>
      <returns>Identificador de cadena. El valor predeterminado es <see langword="String.Empty" /> . Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.Items">
      <summary>Obtiene la colección <see langword="Items" /> que se utiliza para almacenar los elementos secundarios <see langword="appinfo" /> y <see langword="documentation" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" /> de elementos secundarios <see langword="appinfo" /> y <see langword="documentation" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnnotation.UnhandledAttributes">
      <summary>Obtiene o establece los atributos calificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns>Una matriz de objetos <see cref="T:System.Xml.XmlAttribute" /> que no pertenecen al espacio de nombres de destino del esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAny">
      <summary>Representa el elemento <see langword="any" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAny.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.Namespace">
      <summary>Obtiene o establece los espacios de nombres que contienen los elementos que pueden utilizarse.</summary>
      <returns>Espacios de nombres de los elementos que están disponibles para su uso. De manera predeterminada, es <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAny.ProcessContents">
      <summary>Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los elementos especificados por el elemento <see langword="any" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo <see langword="processContents" />, el valor predeterminado es <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAnyAttribute">
      <summary>Representa el elemento <see langword="anyAttribute" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace">
      <summary>Obtiene o establece los espacios de nombres que contienen los atributos que pueden utilizarse.</summary>
      <returns>Espacios de nombres de los atributos que están disponibles para su uso. De manera predeterminada, es <see langword="##any" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents">
      <summary>Obtiene o establece información sobre la forma en que una aplicación o un procesador XML deben controlar la validación de documentos XML para los atributos especificados por el elemento <see langword="anyAttribute" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" />. Si no se especifica ningún atributo <see langword="processContents" />, el valor predeterminado es <see langword="Strict" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAppInfo">
      <summary>Representa el elemento <see langword="appinfo" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Markup">
      <summary>Obtiene o establece una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de <see langword="appinfo" />.</summary>
      <returns>Una matriz de objetos <see cref="T:System.Xml.XmlNode" /> que representa los nodos secundarios de <see langword="appinfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAppInfo.Source">
      <summary>Obtiene o establece el origen de la información de la aplicación.</summary>
      <returns>Referencia a un identificador uniforme de recurso (URI). De manera predeterminada, es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttribute">
      <summary>Representa el elemento <see langword="attribute" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Los atributos facilitan información adicional sobre otros elementos de documento. La etiqueta de atributo se anida entre las etiquetas de un elemento de documento del esquema. El documento XML muestra los atributos como elementos con nombre en la etiqueta de apertura de un elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeSchemaType">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del atributo basado en <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.AttributeType">
      <summary>Obtiene el objeto de Common Language Runtime (CLR) en función del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType" /> o del <see cref="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName" /> del atributo que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeType" />.</summary>
      <returns>Objeto Common Runtime Library (CLR) que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.DefaultValue">
      <summary>Obtiene o establece el valor predeterminado del atributo.</summary>
      <returns>Valor predeterminado del atributo. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.FixedValue">
      <summary>Obtiene o establece el valor fijo del atributo.</summary>
      <returns>Valor fijo del atributo. El valor predeterminado es null. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Form">
      <summary>Obtiene o establece el formato del atributo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. El valor predeterminado es el valor de <see cref="P:System.Xml.Schema.XmlSchema.AttributeFormDefault" /> del elemento de esquema en el que está contenido el atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Name">
      <summary>Obtiene o establece el nombre del atributo.</summary>
      <returns>El nombre del atributo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.QualifiedName">
      <summary>Obtiene el nombre completo del atributo.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.RefName">
      <summary>Obtiene o establece el nombre de un atributo declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Nombre del atributo declarado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaType">
      <summary>Obtiene el tipo de atributo o establece el tipo de atributo en un tipo simple.</summary>
      <returns>Tipo simple definido en este esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.SchemaTypeName">
      <summary>Obtiene o establece el nombre del tipo simple definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Nombre del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttribute.Use">
      <summary>Obtiene o establece información sobre la forma de usar el atributo.</summary>
      <returns>Puede tener uno de los siguientes valores: None, Prohibited, Optional o Required. El valor predeterminado es Optional. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroup">
      <summary>Representa el elemento <see langword="attributeGroup" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). AttributesGroups proporciona un mecanismo para agrupar un conjunto de declaraciones de atributos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroup.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AnyAttribute">
      <summary>Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del grupo de atributos.</summary>
      <returns>Elemento <see langword="anyAttribute" /> del consorcio W3C</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Attributes">
      <summary>Obtiene la colección de atributos del grupo de atributos. Contiene los elementos <see langword="XmlSchemaAttribute" /> y <see langword="XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Colección de atributos del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.Name">
      <summary>Obtiene o establece el nombre del grupo de atributos.</summary>
      <returns>Nombre del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.QualifiedName">
      <summary>Obtiene el nombre completo del grupo de atributos.</summary>
      <returns>Nombre completo del grupo de atributos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.RedefinedAttributeGroup">
      <summary>Obtiene la propiedad de grupo del atributo redefinido del esquema XML.</summary>
      <returns>Propiedad de grupo del atributo redefinido.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaAttributeGroupRef">
      <summary>Representa el elemento <see langword="attributeGroup" /> con el atributo <see langword="ref" /> del esquema XML según especifica el World Wide Web Consortium (W3C). AttributesGroupRef es la referencia para un attributeGroup, la propiedad de nombre contiene el grupo de atributos al que se hace referencia.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaAttributeGroupRef.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaAttributeGroupRef.RefName">
      <summary>Obtiene o establece el nombre del elemento <see langword="attributeGroup" /> al que se hace referencia.</summary>
      <returns>Nombre del grupo de atributos al que se hace referencia. El valor debe ser de tipo QName.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaChoice">
      <summary>Representa el elemento <see langword="choice" /> (compositor) del esquema XML, tal y como lo especificó el consorcio World Wide Web (W3C). <see langword="choice" /> sólo permite que aparezca uno de sus elementos secundarios en una instancia.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaChoice.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaChoice" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaChoice.Items">
      <summary>Obtiene la colección de los elementos incluidos con el compositor (<see langword="choice" />): <see langword="XmlSchemaElement" />, <see langword="XmlSchemaGroupRef" />, <see langword="XmlSchemaChoice" />, <see langword="XmlSchemaSequence" /> o <see langword="XmlSchemaAny" />.</summary>
      <returns>Colección de elementos incluidos en <see langword="XmlSchemaChoice" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollection">
      <summary>Contiene una caché de esquemas del lenguaje de definición de esquemas XML (esquemas XSD) y esquemas reducidos de datos XML (esquemas XDR). La clase <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> está obsoleta. Utilice <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en su lugar.</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaCollection.ValidationEventHandler">
      <summary>Establece un controlador de eventos para recibir información sobre errores de validación de esquemas XDR y XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlSchemaCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlSchemaCollection" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado. <see langword="XmlNameTable" /> se utiliza cuando se cargan esquemas.</summary>
      <param name="nametable">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
      <summary>Agrega el esquema localizado por la dirección URL especificada a la colección de esquemas.</summary>
      <param name="ns">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="uri">Dirección URL que especifica el esquema que se va a cargar.</param>
      <exception cref="T:System.Xml.XmlException">El esquema no es válido.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
      <summary>Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas.</summary>
      <param name="ns">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar.</param>
      <exception cref="T:System.Xml.XmlException">El esquema no es válido.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Agrega el esquema que contiene el objeto <see cref="T:System.Xml.XmlReader" /> a la colección de esquemas. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver los recursos externos.</summary>
      <param name="ns">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será <see langword="targetNamespace" />.</param>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> que contiene el esquema que se va a agregar.</param>
      <param name="resolver">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" /> o en el atributo <see langword="x-schema" /> (esquemas XDR). Si es <see langword="null" />, las referencias externas no se resuelven.</param>
      <exception cref="T:System.Xml.XmlException">El esquema no es válido.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> agregado a la colección de esquemas; <see langword="null" /> si el esquema que se va agregar es un esquema XDR o si existen errores de compilación en el esquema.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
      <summary>Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección.</summary>
      <param name="schema">
        <see langword="XmlSchema" /> que se agrega a la colección.</param>
      <returns>Objeto <see langword="XmlSchema" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
      <summary>Agrega <see cref="T:System.Xml.Schema.XmlSchema" /> a la colección. El <see cref="T:System.Xml.XmlResolver" /> especificado se utiliza para resolver las referencias externas.</summary>
      <param name="schema">
        <see langword="XmlSchema" /> que se agrega a la colección.</param>
      <param name="resolver">Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres a los que se hace referencia en los elementos <see langword="include" /> e <see langword="import" />. Si es <see langword="null" />, las referencias externas no se resuelven.</param>
      <exception cref="T:System.Xml.XmlException">El esquema no es válido.</exception>
      <returns>
        <see langword="XmlSchema" /> agregado a la colección de esquemas.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
      <summary>Agrega todos los espacios de nombres definidos en una colección especificada (incluidos sus esquemas asociados) a esta colección.</summary>
      <param name="schema">
        <see langword="XmlSchemaCollection" /> que desea agregar a esta colección.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
      <summary>Obtiene un valor que indica si un esquema con el espacio de nombres especificado se encuentra en la colección.</summary>
      <param name="ns">URI del espacio de nombres asociado al esquema. Para los esquemas XML, normalmente será el espacio de nombres de destino.</param>
      <returns>
        <see langword="true" /> si un esquema con el espacio de nombres especificado se encuentra en la colección; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Obtiene un valor que indica si el <see langword="targetNamespace" /> del <see cref="T:System.Xml.Schema.XmlSchema" /> especificado se encuentra en la colección.</summary>
      <param name="schema">Objeto <see langword="XmlSchema" />.</param>
      <returns>
        <see langword="true" /> si existe un esquema en la colección con el mismo <see langword="targetNamespace" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia todos los objetos <see langword="XmlSchema" /> de esta colección en la matriz especificada a partir del índice indicado.</summary>
      <param name="array">Matriz en la que se van a copiar los objetos.</param>
      <param name="index">Índice de <paramref name="array" /> donde se iniciará la copia.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
      <summary>Proporciona compatibilidad con la iteración de estilo "for each" a través de la colección de esquemas.</summary>
      <returns>Enumerador para la iteración a través de todos los esquemas de la colección actual.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />.</summary>
      <param name="array">Matriz en la que se van a copiar los objetos.</param>
      <param name="index">Índice de <paramref name="array" /> donde se iniciará la copia.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> para la colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Count">
      <summary>Obtiene el número de espacios de nombres definidos en esta colección.</summary>
      <returns>Número de espacios de nombres definidos en esta colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
      <summary>Obtiene el <see cref="T:System.Xml.Schema.XmlSchema" /> asociado al URI del espacio de nombres especificado.</summary>
      <param name="ns">URI del espacio de nombres asociado al esquema que desea que se devuelva. Normalmente será el <see langword="targetNamespace" /> del esquema.</param>
      <returns>
        <see langword="XmlSchema" /> asociado al URI del espacio de nombres; <see langword="null" /> si no se ha cargado ningún esquema asociado al espacio de nombres especificado o si el espacio de nombres está asociado a un esquema XDR.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.NameTable">
      <summary>Obtiene el valor predeterminado de <see langword="XmlNameTable" /> que <see langword="XmlSchemaCollection" /> utiliza al cargar nuevos esquemas.</summary>
      <returns>Una clase <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#Count">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.Count" />.</summary>
      <returns>Recuento de los elementos de la colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> si la colección está sincronizada; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>
        <see cref="P:System.Collections.ICollection.SyncRoot" />Objeto que se puede utilizar para sincronizar el acceso a la colección.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCollectionEnumerator">
      <summary>Admite una iteración simple en una colección. Esta clase no puede heredarse.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext">
      <summary>Desplaza el enumerador al siguiente esquema de la colección.</summary>
      <returns>
        <see langword="true" /> si el desplazamiento se realizó correctamente; <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.MoveNext" />.</summary>
      <returns>Siguiente nodo.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Reset" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> actual de la colección.</summary>
      <returns>
        <see langword="XmlSchema" /> actual de la colección.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.Current" />.</summary>
      <returns>Nodo actual.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaCompilationSettings">
      <summary>Proporciona opciones de compilación de esquema para la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Esta clase no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaCompilationSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA, Unique Particle Attribution).</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Schema.XmlSchemaSet" /> debe comprobar las infracciones de atribución de partícula única (UPA); de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContent">
      <summary>Representa el elemento <see langword="complexContent" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase representa el modelo de contenido complejo para los tipos complejos. Contiene extensiones o restricciones con respecto a un tipo complejo que solo contiene elementos o contenido mixto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContent.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.Content">
      <summary>Obtiene o establece el contenido.</summary>
      <returns>Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContent.IsMixed">
      <summary>Obtiene o establece la información que determina si el tipo tiene un modelo de contenido mixto.</summary>
      <returns>Si esta propiedad es <see langword="true" />, se permite que aparezcan datos de caracteres entre los elementos secundarios del tipo complejo (modelo de contenido mixto). De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentExtension">
      <summary>Representa el elemento <see langword="extension" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante Extension. Extiende el tipo complejo agregando atributos o elementos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.AnyAttribute">
      <summary>Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</summary>
      <returns>Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Attributes">
      <summary>Obtiene la colección de atributos del contenido complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Colección de atributos del contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.BaseTypeName">
      <summary>Obtiene o establece el nombre del tipo complejo del que se deriva este tipo mediante Extension.</summary>
      <returns>Nombre del tipo complejo del que se deriva este tipo mediante Extension.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentExtension.Particle">
      <summary>Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexContentRestriction">
      <summary>Representa el elemento <see langword="restriction" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para tipos complejos con un modelo de contenido complejo derivado mediante Restriction. Restringe el contenido del tipo complejo a un subconjunto del tipo complejo heredado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexContentRestriction.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.AnyAttribute">
      <summary>Obtiene o establece el componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</summary>
      <returns>Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del modelo de contenido complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Attributes">
      <summary>Obtiene la colección de atributos del tipo complejo. Contiene los elementos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Colección de atributos del tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.BaseTypeName">
      <summary>Obtiene o establece el nombre de un tipo complejo del que se deriva este tipo mediante Restriction.</summary>
      <returns>Nombre del tipo complejo del que se deriva este tipo mediante Restriction.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexContentRestriction.Particle">
      <summary>Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaComplexType">
      <summary>Representa el elemento <see langword="complexType" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase define un tipo complejo que determina el conjunto de atributos y el contenido de un elemento.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaComplexType.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AnyAttribute">
      <summary>Obtiene o establece el valor del componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.</summary>
      <returns>Componente <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> del tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
      <summary>Obtiene la colección de atributos del tipo complejo.</summary>
      <returns>Contiene las clases <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
      <summary>Obtiene la colección de todos los atributos compilados de este tipo complejo y sus tipos base.</summary>
      <returns>Colección de todos los atributos de este tipo complejo y sus tipos base. Valor posterior a la compilación de la propiedad <see langword="AttributeUses" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard">
      <summary>Obtiene el valor posterior a la compilación para <see langword="anyAttribute" /> para este tipo complejo y sus tipos base.</summary>
      <returns>Valor posterior a la compilación del elemento <see langword="anyAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Block">
      <summary>Obtiene o establece el atributo <see langword="block" />.</summary>
      <returns>El atributo <see langword="block" /> impide un tipo complejo se utilice en el tipo de derivación especificado. De manera predeterminada, es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.BlockResolved">
      <summary>Obtiene el valor una vez que el tipo se compila en el conjunto de información posterior a la validación del esquema (infoset). Este valor indica la forma en que se aplica el tipo cuando <see langword="xsi:type" /> se utiliza en el documento de instancia.</summary>
      <returns>Valor del conjunto de información posterior a la validación del esquema. El valor predeterminado es <see langword="BlockDefault" /> en el elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentModel">
      <summary>Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaContentModel" /> posterior a la compilación de este tipo complejo.</summary>
      <returns>Tipo de modelo de contenido que es una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexContent" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentType">
      <summary>Obtiene el modelo de contenido del tipo complejo que contiene el valor posterior a la compilación.</summary>
      <returns>Valor posterior a la compilación del modelo de contenido para el tipo complejo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle">
      <summary>Obtiene la partícula que contiene el valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</summary>
      <returns>Partícula para el tipo de contenido. Valor posterior a la compilación de la partícula <see cref="P:System.Xml.Schema.XmlSchemaComplexType.ContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsAbstract">
      <summary>Obtiene o establece la información que determina si el elemento <see langword="complexType" /> puede utilizarse en el documento de instancia.</summary>
      <returns>Si es <see langword="true" />, un elemento no puede utilizar este elemento <see langword="complexType" /> directamente y debe utilizar un tipo complejo que se deriva de este elemento <see langword="complexType" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.IsMixed">
      <summary>Obtiene o establece la información que determina si el tipo complejo tiene un modelo de contenido mixto (marcado dentro del contenido).</summary>
      <returns>
        <see langword="true" /> si pueden aparecer datos de caracteres entre los elementos secundarios de este tipo complejo; en caso contrario <see langword="false" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaComplexType.Particle">
      <summary>Obtiene o establece el tipo de compositor como una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Tipo de compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContent">
      <summary>Clase abstracta para el contenido del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContent.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentModel">
      <summary>Especifica el orden y la estructura de los elementos secundarios de un tipo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaContentModel.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaContentModel" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaContentModel.Content">
      <summary>Obtiene o establece el contenido del tipo.</summary>
      <returns>Proporciona el contenido del tipo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentProcessing">
      <summary>Proporciona información acerca del modo de validación del reemplazo de los elementos <see langword="any" /> y <see langword="anyAttribute" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Lax">
      <summary>Si se encuentra el esquema asociado, se validarán los elementos del documento. De lo contrario, no se iniciará ningún error.
        
Si no se valida el elemento, el procesador XML intenta notificarlo al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si no se ha configurado un controlador de eventos de validación, no se devuelve ninguna información cuando se genera la advertencia.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.None">
      <summary>Los elementos de documento no se validan.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Skip">
      <summary>Los elementos de documento deben estar formado por código XML de formato correcto y no se validan mediante el esquema.
        
El procesador XML intenta notificar al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" /> que no se produjo ninguna validación para el elemento proporcionado. Si no se ha configurado un controlador de eventos de validación, no se devuelve ninguna información cuando se genera la advertencia.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentProcessing.Strict">
      <summary>El procesador del esquema debe encontrar un esquema asociado al espacio de nombres indicado para validar los elementos del documento.
        
Si el procesador no encuentra un esquema o los elementos no son válidos, el procesador XML intenta notificarlo al cliente a través de un controlador de eventos de validación con <see cref="P:System.Xml.Schema.ValidationEventArgs.Severity" /> = <see langword="XmlSeverityType.Warning" />. Si se produce un error de validación y no se proporciona un controlador de eventos de validación, se produce una excepción.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaContentType">
      <summary>Enumeraciones para el modelo de contenido del tipo complejo. Representa el contenido del conjunto de información posterior a la validación del esquema (infoset).</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.ElementOnly">
      <summary>Contenido de sólo elemento.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Empty">
      <summary>Contenido vacío.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.Mixed">
      <summary>Contenido mixto.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaContentType.TextOnly">
      <summary>Contenido de sólo texto.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatype">
      <summary>La clase <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> es una clase abstracta para asignar los tipos del lenguaje de definición de esquemas XML (XSD) a los tipos de Common Language Runtime (CLR).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
      <summary>Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado.</summary>
      <param name="value">El valor de entrada que se va a convertir al tipo especificado.</param>
      <param name="targetType">Tipo de destino en el que se va a convertir el valor de entrada.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Object" /> o <see cref="T:System.Type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.</exception>
      <returns>Valor de entrada convertido.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Convierte el valor especificado, cuyo tipo es una de las representaciones de Common Language Runtime (CLR) válidas del tipo de esquema XML representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, en el tipo CLR especificado mediante <see cref="T:System.Xml.IXmlNamespaceResolver" /> si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.</summary>
      <param name="value">El valor de entrada que se va a convertir al tipo especificado.</param>
      <param name="targetType">Tipo de destino en el que se va a convertir el valor de entrada.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver los prefijos de espacio de nombres. Esto sólo sirve si <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName o un tipo derivado de éste.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Object" /> o <see cref="T:System.Type" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidCastException">El tipo representado mediante <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> no admite una conversión del tipo del valor especificado al tipo especificado.</exception>
      <returns>Valor de entrada convertido.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
      <summary>El método <see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /> siempre devuelve <see langword="false" />.</summary>
      <param name="datatype">
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />.</param>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
      <summary>Cuando se reemplaza en una clase derivada, valida el objeto <see langword="string" /> especificado frente a un tipo simple integrado o definido por el usuario.</summary>
      <param name="s">
        <see langword="string" /> que se validará frente al tipo simple.</param>
      <param name="nameTable">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para la atomización mientras se analiza <see langword="string" /> si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:NCName.</param>
      <param name="nsmgr">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a utilizar mientras se analiza <see langword="string" /> si este objeto <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> representa el tipo xs:QName.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El valor de entrada no es una instancia válida de este tipo de esquema XML de W3C.</exception>
      <exception cref="T:System.ArgumentNullException">El valor que se va a analizar no puede ser <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Object" /> que se puede convertir sin ningún riesgo en el tipo que devuelve la propiedad <see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el tipo de <see langword="string" /> de la forma descrita en las especificaciones de XML 1.0 del World Wide Web Consortium (W3C).</summary>
      <returns>Valor <see cref="T:System.Xml.XmlTokenizedType" /> de <see langword="string" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
      <summary>Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el tipo Common Language Runtime (CLR) del elemento.</summary>
      <returns>El tipo de Common Language Runtime (CLR) del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
      <summary>Obtiene el valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /> del tipo simple.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDatatypeVariety">
      <summary>Especifica la variedad de tipo de datos del esquema del consorcio XML W3C del tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Atomic">
      <summary>Tipo atómico del esquema XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.List">
      <summary>Tipo de lista del esquema XML W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDatatypeVariety.Union">
      <summary>Tipo de unión del esquema XML W3C.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDerivationMethod">
      <summary>Proporciona distintos métodos para impedir la derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.All">
      <summary>
        <see langword="#all" />. Hace referencia a todos los métodos de derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Empty">
      <summary>Reemplaza el método de derivación predeterminado para permitir cualquier derivación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Extension">
      <summary>Hace referencia a derivaciones mediante <see langword="Extension" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.List">
      <summary>Hace referencia a derivaciones mediante <see langword="List" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.None">
      <summary>Acepta el método de derivación predeterminado.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction">
      <summary>Hace referencia a derivaciones mediante <see langword="Restriction" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution">
      <summary>Hace referencia a derivaciones mediante <see langword="Substitution" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaDerivationMethod.Union">
      <summary>Hace referencia a derivaciones mediante <see langword="Union" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaDocumentation">
      <summary>Representa el elemento <see langword="documentation" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase especifica la información los usuarios van a leer o utilizar en una <see langword="annotation" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaDocumentation.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaDocumentation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Language">
      <summary>Obtiene o establece el atributo <see langword="xml:lang" />. Sirve como indicador del lenguaje usado en el contenido.</summary>
      <returns>El atributo <see langword="xml:lang" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Markup">
      <summary>Obtiene o establece una matriz de <see langword="XmlNodes" /> que representa los nodos secundarios de la documentación.</summary>
      <returns>Matriz que representa los nodos secundarios de la documentación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaDocumentation.Source">
      <summary>Obtiene o establece el origen del identificador uniforme de recursos (URI) de la información.</summary>
      <returns>Referencia del URI. De manera predeterminada, es <see langword="String.Empty" />. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaElement">
      <summary>Representa el elemento <see langword="element" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es la clase base para todos los tipos de partícula y se usa para describir un elemento en un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaElement.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Block">
      <summary>Obtiene o establece una derivación <see langword="Block" />.</summary>
      <returns>Atributo usado para bloquear un tipo de derivación. El valor predeterminado es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.BlockResolved">
      <summary>Obtiene el valor posterior a la compilación de la propiedad <see langword="Block" />.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see langword="Block" />. El valor predeterminado es <see langword="BlockDefault" /> en el elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
      <summary>Obtiene la colección de restricciones del elemento.</summary>
      <returns>Colección de restricciones.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.DefaultValue">
      <summary>Obtiene o establece el valor predeterminado del elemento si su contenido es un tipo simple o el contenido del elemento es <see langword="textOnly" />.</summary>
      <returns>Valor predeterminado del elemento. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementSchemaType">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo del elemento basado en <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaType" /> o los valores <see cref="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName" /> del elemento.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.ElementType">
      <summary>Obtiene un objeto Common Language Runtime (CLR) en función del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> o del <see cref="T:System.Xml.Schema.XmlSchemaElement" /> del elemento, que contiene el valor posterior a la compilación de la propiedad <see langword="ElementType" />.</summary>
      <returns>Objeto Common Language Runtime. Valor posterior a la compilación de la propiedad <see langword="ElementType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Final">
      <summary>Obtiene o establece la propiedad <see langword="Final" /> para indicar que no se permiten más derivaciones.</summary>
      <returns>Propiedad <see langword="Final" /> De manera predeterminada, es <see langword="XmlSchemaDerivationMethod.None" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FinalResolved">
      <summary>Obtiene el valor posterior a la compilación de la propiedad <see langword="Final" />.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see langword="Final" />. El valor predeterminado es el valor <see langword="FinalDefault" /> del elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.FixedValue">
      <summary>Obtiene o establece el valor fijo.</summary>
      <returns>Valor fijo predeterminado que no puede modificarse. El valor predeterminado es una referencia nula. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Form">
      <summary>Obtiene o establece el formato del elemento.</summary>
      <returns>Formato del elemento. El valor predeterminado es <see cref="P:System.Xml.Schema.XmlSchema.ElementFormDefault" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsAbstract">
      <summary>Obtiene o establece la información que indica si el elemento puede usarse en un documento de instancia.</summary>
      <returns>Si es <see langword="true" />, el elemento no puede aparecer en el documento de instancia. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.IsNillable">
      <summary>Obtiene o establece la información que indica si <see langword="xsi:nil" /> puede aparecer en los datos de instancia. Indica si puede asignarse un valor nulo explícito al elemento.</summary>
      <returns>Si nil es <see langword="true" />, permite que una instancia del elemento tenga el atributo <see langword="nil" /> establecido en <see langword="true" />. El atributo <see langword="nil" /> se define como parte del espacio de nombres del esquema XML para las instancias. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.Name">
      <summary>Obtiene o establece el nombre del elemento.</summary>
      <returns>Nombre del elemento. De manera predeterminada, es <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.QualifiedName">
      <summary>Obtiene el nombre calificado real del elemento especificado.</summary>
      <returns>Nombre completo del elemento. Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.RefName">
      <summary>Obtiene o establece el nombre de referencia de un elemento declarado en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Nombre de referencia del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaType">
      <summary>Obtiene o establece el tipo del elemento. Puede ser un tipo complejo o un tipo simple.</summary>
      <returns>El tipo del elemento.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SchemaTypeName">
      <summary>Obtiene o establece un tipo de datos integrado definido en este esquema u otro esquema indicado por el espacio de nombres especificado.</summary>
      <returns>Nombre del tipo de datos integrado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaElement.SubstitutionGroup">
      <summary>Obtiene o establece el nombre de un elemento que se sustituye por este elemento.</summary>
      <returns>Nombre completo de un elemento que se sustituye por este elemento. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaEnumerationFacet">
      <summary>Representa la faceta <see langword="enumeration" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase especifica una lista de valores válidos para un elemento simpleType. La declaración está contenida dentro de una declaración <see langword="restriction" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaEnumerationFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaException">
      <summary>Devuelve información detallada acerca de la excepción del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Construye un nuevo objeto <see langword="XmlSchemaException" /> con la información de <see langword="SerializationInfo" /> y <see langword="StreamingContext" /> especificada que contiene todas las propiedades de la excepción <see langword="XmlSchemaException" />.</summary>
      <param name="info">SerializationInfo.</param>
      <param name="context">StreamingContext.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
      <param name="lineNumber">Número de línea del código XML que ha producido esta excepción.</param>
      <param name="linePosition">Posición de la línea del código XML que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas las propiedades <see langword="XmlSchemaException" /> a la clase <see langword="SerializationInfo" /> para el <see langword="StreamingContext" /> dado.</summary>
      <param name="info">
        <see langword="SerializationInfo" />.</param>
      <param name="context">Información de <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LineNumber">
      <summary>Obtiene el número de línea que indica dónde se produjo el error.</summary>
      <returns>Número de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.LinePosition">
      <summary>Obtiene la posición de línea que indica dónde se produjo el error.</summary>
      <returns>Posición de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.Message">
      <summary>Obtiene la descripción de la condición de error de esta excepción.</summary>
      <returns>La descripción de la condición de error de esta excepción.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceSchemaObject">
      <summary>
        <see langword="XmlSchemaObject" /> que ha producido la excepción <see langword="XmlSchemaException" />.</summary>
      <returns>Una instancia de objeto válida representa un error de validación estructural en el modelo de objeto de esquema (SOM) XML.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaException.SourceUri">
      <summary>Obtiene la ubicación del Identificador uniforme de recursos (URI) del esquema que produjo la excepción.</summary>
      <returns>La ubicación del URI del esquema que produjo la excepción.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaExternal">
      <summary>Clase abstracta. Proporciona información sobre el esquema incluido.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaExternal.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaExternal" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Id">
      <summary>Obtiene o establece el identificador de cadena.</summary>
      <returns>Identificador de cadena. El valor predeterminado es <see langword="String.Empty" /> . Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.Schema">
      <summary>Obtiene o establece el <see langword="XmlSchema" /> del esquema al que se hace referencia.</summary>
      <returns>
        <see langword="XmlSchema" /> del esquema al que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.SchemaLocation">
      <summary>Obtiene o establece la ubicación del identificador URI (Identificador de recursos uniforme) del esquema, que indica al procesador del esquema dónde reside el esquema físicamente.</summary>
      <returns>Ubicación de la dirección URI del esquema. Opcional para esquemas importados.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaExternal.UnhandledAttributes">
      <summary>Obtiene o establece los atributos cualificados que no pertenecen al espacio de nombres de destino del esquema.</summary>
      <returns>Atributos calificados que pertenecen a otro espacio de nombres de destino.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFacet">
      <summary>Clase abstracta para todas las facetas que se utilizan cuando los tipos simples se derivan mediante Restriction.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFacet" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.IsFixed">
      <summary>Obtiene o establece la información que indica que esta faceta es fija.</summary>
      <returns>Si es <see langword="true" />, el valor es fijo; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaFacet.Value">
      <summary>Obtiene o establece el atributo <see langword="value" /> de la faceta.</summary>
      <returns>Atributo de valor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaForm">
      <summary>Indica si los atributos o elementos se deben calificar con un prefijo de espacio de nombres.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.None">
      <summary>El formato de elemento y de atributo no se especifica en el esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Qualified">
      <summary>Los atributos y los elementos deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaForm.Unqualified">
      <summary>Los elementos y los atributos no deben estar calificados con el espacio de nombres como prefijo.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet">
      <summary>Especifica una restricción del número de dígitos que se pueden especificar para el valor de fracción de un elemento simpleType. El valor de fractionDigits debe ser un entero positivo. Representa la faceta <see langword="fractionDigits" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaFractionDigitsFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroup">
      <summary>Representa el elemento <see langword="group" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase define grupos en el nivel del <see langword="schema" /> a los que se hace referencia desde los tipos complejos. Agrupa un conjunto de declaraciones de elementos de forma que puedan incorporarse como un grupo en definiciones de tipos complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroup.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Name">
      <summary>Obtiene o establece el nombre del grupo de esquemas.</summary>
      <returns>Nombre del grupo de esquemas.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.Particle">
      <summary>Obtiene o establece una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
      <returns>Una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroup.QualifiedName">
      <summary>Obtiene el nombre completo del grupo de esquemas.</summary>
      <returns>Un objeto <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre completo del grupo de esquemas.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupBase">
      <summary>Clase abstracta para <see cref="T:System.Xml.Schema.XmlSchemaAll" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
      <summary>Esta colección se utiliza para agregar nuevos elementos al compositor.</summary>
      <returns>Una clase <see langword="XmlSchemaObjectCollection" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaGroupRef">
      <summary>Representa el elemento <see langword="group" /> con el atributo <see langword="ref" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase se utiliza dentro de tipos complejos que hacen referencia a un <see langword="group" /> definido en el nivel <see langword="schema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaGroupRef.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.Particle">
      <summary>Obtiene una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> que contiene el valor posterior a la compilación de la propiedad <see langword="Particle" />.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see langword="Particle" /> que es una de las clases <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaAll" /> o <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaGroupRef.RefName">
      <summary>Obtiene o establece el nombre de un grupo definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Nombre de un grupo definido en este esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaIdentityConstraint">
      <summary>Clase para las restricciones de identidad: elementos <see langword="key" />, <see langword="keyref" /> y <see langword="unique" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaIdentityConstraint.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaIdentityConstraint" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Fields">
      <summary>Obtiene la colección de campos que se aplican como elementos secundarios del selector de expresiones del lenguaje Xpath (XML Path Language, lenguaje de rutas XML).</summary>
      <returns>Colección de campos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Name">
      <summary>Obtiene o establece el nombre de la restricción de identidad.</summary>
      <returns>Nombre de la restricción de identidad.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.QualifiedName">
      <summary>Obtiene el nombre completo de la restricción de identidad, que contiene el valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see langword="QualifiedName" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaIdentityConstraint.Selector">
      <summary>Obtiene o establece el elemento <see langword="selector" /> de la expresión XPath.</summary>
      <returns>Elemento <see langword="selector" /> de la expresión XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaImport">
      <summary>Representa el elemento <see langword="import" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase se usa para importar componentes del esquema desde otros esquemas.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaImport.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaImport" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Annotation">
      <summary>Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns>Anotación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaImport.Namespace">
      <summary>Obtiene o establece el espacio de nombres de destino del esquema importado como referencia del identificador uniforme de recursos (URI).</summary>
      <returns>Espacio de nombres de destino del esquema importado como referencia del identificador URI. Opcional.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInclude">
      <summary>Representa el elemento <see langword="include" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase se usa para incluir declaraciones y definiciones a partir de un esquema externo. Las declaraciones y definiciones incluidas están disponibles a continuación para su procesamiento en el esquema contenedor.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInclude.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInclude" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInclude.Annotation">
      <summary>Obtiene o establece la propiedad <see langword="annotation" />.</summary>
      <returns>Anotación.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference">
      <summary>Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir de un documento XML. La clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> no se puede heredar.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
      <summary>Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="instanceDocument">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.</param>
      <exception cref="T:System.Xml.XmlException">El documento XML no tiene un formato correcto.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
      <summary>Infiere un esquema del lenguaje de definición de esquemas XML (XSD) a partir del documento XML incluido en el objeto <see cref="T:System.Xml.XmlReader" /> especificado, y refina el esquema inferido utilizando un esquema existente en el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificado con el mismo espacio de nombres de destino.</summary>
      <param name="instanceDocument">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el documento XML del que se va a inferir un esquema.</param>
      <param name="schemas">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene un esquema existente utilizado para refinar el esquema inferido.</param>
      <exception cref="T:System.Xml.XmlException">El documento XML no tiene un formato correcto.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException">El objeto <see cref="T:System.Xml.XmlReader" /> no se coloca en el nodo raíz ni en un elemento. Se produce un error durante el proceso de inferencia del esquema.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas inferidos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.Occurrence">
      <summary>Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a las declaraciones de aparición de esquemas que se infieren del documento XML.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInference.TypeInference">
      <summary>Obtiene o establece el valor de <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> que afecta a los tipos que se infieren del documento XML.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInference.InferenceOption">
      <summary>Afecta a la aparición y a la información de tipos que infiere la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> para los atributos y elementos de un documento XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed">
      <summary>Indica que debería inferirse una declaración de esquema menos restrictiva para un elemento o atributo concreto.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted">
      <summary>Indica que debería inferirse una declaración de esquema más restrictiva para un elemento o atributo concreto.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInferenceException">
      <summary>Devuelve información sobre los errores que encuentra la clase <see cref="T:System.Xml.Schema.XmlSchemaInference" /> al inferir un esquema de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados que contienen todas las propiedades de <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</summary>
      <param name="info">Un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Un objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado.</summary>
      <param name="message">Descripción del error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado y la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada.</summary>
      <param name="message">Descripción del error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> con el mensaje de error especificado, la <see cref="T:System.Exception" /> original que ha producido la clase <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> especificada y el número y la posición de la línea en la que se encuentra el error del documento XML especificado.</summary>
      <param name="message">Descripción del error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> que contiene la excepción original que ha producido <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="lineNumber">Número de línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
      <param name="linePosition">Posición de la línea del documento XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInferenceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas las propiedades del objeto <see cref="T:System.Xml.Schema.XmlSchemaInferenceException" /> al objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> especificado para el objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificado.</summary>
      <param name="info">Un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Un objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaInfo">
      <summary>Representa el conjunto de información posterior a la validación del esquema de un nodo XML validado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaInfo.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaInfo" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.ContentType">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" /> correspondiente al tipo de contenido de este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaContentType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsDefault">
      <summary>Obtiene o establece un valor que indica si el nodo XML validado se ha establecido como resultado de la aplicación de un valor predeterminado durante la validación de esquema del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns>Valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.IsNil">
      <summary>Obtiene o establece un valor que indica si el valor del nodo XML validado es nil.</summary>
      <returns>Valor <see langword="bool" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
      <summary>Obtiene o establece el tipo de esquema dinámico de este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaAttribute" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" /> compilado correspondiente a este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
      <summary>Obtiene o establece el tipo de esquema estático del lenguaje de definición de esquemas XML (XSD) de este nodo XML validado.</summary>
      <returns>Un objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaInfo.Validity">
      <summary>Obtiene o establece el valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" /> del nodo XML validado.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlSchemaValidity" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKey">
      <summary>Esta clase representa el elemento <see langword="key" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKey.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKey" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaKeyref">
      <summary>Esta clase representa el elemento <see langword="keyref" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaKeyref.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaKeyref" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaKeyref.Refer">
      <summary>Obtiene o establece el nombre de la clave a la que hace referencia esta restricción en otro tipo simple o complejo.</summary>
      <returns>Tipo QName de la clave a la que hace referencia esta restricción.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaLengthFacet">
      <summary>Representa la faceta <see langword="length" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud de un elemento <see langword="simpleType" /> en el tipo de datos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaLengthFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet">
      <summary>Representa el elemento <see langword="maxExclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento <see langword="simpleType" />. El valor del elemento debe ser menor que el valor del elemento <see langword="maxExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxExclusiveFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet">
      <summary>Representa el elemento <see langword="maxInclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor máximo de un elemento <see langword="simpleType" />. El valor del elemento debe ser menor o igual que el valor del elemento <see langword="maxInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxInclusiveFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMaxLengthFacet">
      <summary>Representa el elemento <see langword="maxLength" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud máxima del valor de datos de un elemento <see langword="simpleType" />. La longitud debe ser menor que el valor del elemento <see langword="maxLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMaxLengthFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet">
      <summary>Representa el elemento <see langword="minExclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento <see langword="simpleType" />. El valor del elemento debe ser mayor que el valor del elemento <see langword="minExclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinExclusiveFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet">
      <summary>Representa el elemento <see langword="minInclusive" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor mínimo de un elemento simpleType. El valor del elemento debe ser mayor o igual que el valor del elemento <see langword="minInclusive" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinInclusiveFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaMinLengthFacet">
      <summary>Representa el elemento <see langword="minLength" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en la longitud mínima del valor de datos de un elemento <see langword="simpleType" />. La longitud debe ser mayor que el valor del elemento <see langword="minLength" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaMinLengthFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNotation">
      <summary>Representa el elemento <see langword="notation" /> del esquema XML como especificado por el Consorcio WWC (W3C). Una declaración <see langword="notation" /> del Esquema XML es una reconstrucción de declaraciones <see langword="XML 1.0 NOTATION" />. El propósito de las notaciones es describir el formato de los datos que no sean de tipo XML de un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNotation.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNotation" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Name">
      <summary>Obtiene o establece el nombre de la notación.</summary>
      <returns>Nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.Public">
      <summary>Obtiene o establece el identificador <see langword="public" />.</summary>
      <returns>Identificador <see langword="public" />. El valor debe ser un identificador uniforme de recursos (URI) válido.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaNotation.System">
      <summary>Obtiene o establece el identificador <see langword="system" />.</summary>
      <returns>Identificador <see langword="system" />. El valor debe ser un URI válido.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaNumericFacet">
      <summary>Clase que se utiliza para definir facetas <see langword="numeric" />. Esta clase es la clase base para las clases de faceta numérica como <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" /></summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaNumericFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaNumericFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObject">
      <summary>Representa la clase raíz para la jerarquía del modelo de objetos de esquema Xml y actúa como clase base para clases como <see cref="T:System.Xml.Schema.XmlSchema" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObject.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LineNumber">
      <summary>Obtiene o establece el número de línea del archivo al que hace referencia el elemento <see langword="schema" />.</summary>
      <returns>Número de línea.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.LinePosition">
      <summary>Obtiene o establece la posición de la línea en el archivo al que hace referencia el elemento <see langword="schema" />.</summary>
      <returns>La posición de la línea.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Namespaces">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que se va a utilizar con este objeto de esquema.</summary>
      <returns>Propiedad <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> del objeto de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.Parent">
      <summary>Obtiene o establece el elemento primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> primario de este <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObject.SourceUri">
      <summary>Obtiene o establece la ubicación de origen del archivo que cargó el esquema.</summary>
      <returns>Ubicación de origen (dirección URI) del archivo.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectCollection">
      <summary>Una colección de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlSchemaObjectCollection" /> que toma un <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</summary>
      <param name="parent">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
      <summary>Agrega un objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> al objeto <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es mayor que <see langword="Count" />.</exception>
      <exception cref="T:System.InvalidCastException">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado no es de tipo <see cref="T:System.Xml.Schema.XmlSchemaExternal" /> o sus tipos derivados <see cref="T:System.Xml.Schema.XmlSchemaImport" />, <see cref="T:System.Xml.Schema.XmlSchemaInclude" /> y <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</exception>
      <returns>El índice donde se agregó el elemento.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
      <summary>Indica si el <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado existe en <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>
        <see langword="true" /> si el nombre calificado especificado se encuentra en la colección; en caso contrario, devuelve <see langword="false" />. Si se suministra un valor null, se devuelve <see langword="false" /> porque no existe ningún nombre calificado con un nombre nulo.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
      <summary>Copia todos los <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de la colección a la matriz especificada, a partir del índice indicado.</summary>
      <param name="array">Matriz unidimensional que constituye el destino de los elementos copiados desde <see langword="XmlSchemaObjectCollection" />. La matriz debe tener una indización de base cero.</param>
      <param name="index">Índice de base cero de la matriz donde comienza la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> es multi-dimensional.  
  
o bien 
 <paramref name="index" /> es igual o mayor que la longitud de la <paramref name="array" />.  
  
o bien 
El número de elementos del <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen es mayor que el espacio disponible desde el índice hasta el final de la matriz de destino.</exception>
      <exception cref="T:System.InvalidCastException">El tipo de la <see cref="T:System.Xml.Schema.XmlSchemaObject" /> de origen no puede convertirse automáticamente al tipo de la matriz de destino.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
      <summary>Devuelve un enumerador para recorrer en iteración los <see langword="XmlSchemaObjects" /> incluidos en <see langword="XmlSchemaObjectCollection" />.</summary>
      <returns>El iterador devuelve <see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
      <summary>Obtiene el índice de colección correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> cuyo índice se desea devolver.</param>
      <returns>Índice correspondiente al objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
      <summary>Inserta <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="index">Índice de base cero donde debe insertarse el elemento.</param>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a insertar.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> es menor que cero.  
  
o bien 
 <paramref name="index" /> es mayor que <see langword="Count" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
      <summary>
        <see langword="OnClear" /> se invoca antes que el comportamiento <see langword="Clear" /> estándar. Para obtener más información, vea el método OnClear para <see cref="T:System.Collections.CollectionBase" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
      <summary>
        <see langword="OnInsert" /> se invoca antes que el comportamiento <see langword="Insert" /> estándar. Para obtener más información, vea el método <see langword="OnInsert" /> para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">El elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
      <summary>
        <see langword="OnRemove" /> se invoca antes que el comportamiento <see langword="Remove" /> estándar. Para obtener más información, vea el método <see langword="OnRemove" /> para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="item">El elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>
        <see langword="OnSet" /> se invoca antes que el comportamiento <see langword="Set" /> estándar. Para obtener más información, vea el método OnSet para <see cref="T:System.Collections.CollectionBase" />.</summary>
      <param name="index">Índice de <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <param name="oldValue">Valor antiguo.</param>
      <param name="newValue">Nuevo valor.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
      <summary>Quita un <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del objeto <see langword="XmlSchemaObjectCollection" />.</summary>
      <param name="item">
        <see cref="T:System.Xml.Schema.XmlSchemaObject" /> que se va a quitar.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
      <summary>Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en el índice especificado.</summary>
      <param name="index">Índice del objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" />.</param>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> en el índice especificado.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectEnumerator">
      <summary>Representa el enumerador de para <see cref="T:System.Xml.Schema.XmlSchemaObjectCollection" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext">
      <summary>Se desplaza al siguiente elemento de la colección.</summary>
      <returns>
        <see langword="false" /> al final de la colección.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset">
      <summary>Restablece el enumerador al principio de la colección.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#MoveNext">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext" />.</summary>
      <returns>La clase <see cref="T:System.Xml.Schema.XmlSchemaObject" /> siguiente.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Reset">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.Schema.XmlSchemaObjectEnumerator.Reset" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
      <summary>Obtiene el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual de la colección.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> actual.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaObjectTable">
      <summary>Proporciona las colecciones para los elementos contenidos en la clase <see cref="T:System.Xml.Schema.XmlSchema" /> (por ejemplo, Attributes, AttributeGroups, Elements, etcétera).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
      <summary>Determina si el nombre completo especificado existe en la colección.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <returns>
        <see langword="true" /> si el nombre completo especificado se encuentra en la colección; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
      <summary>Devuelve un enumerador que puede recorrer en iteración <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>El objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que puede recorrer en iteración la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Count">
      <summary>Obtiene el número de elementos contenidos en <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Número de elementos contenidos en <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
      <summary>Devuelve el elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.</summary>
      <param name="name">Nombre <see cref="T:System.Xml.XmlQualifiedName" /> del elemento que se va a devolver.</param>
      <returns>El objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> del elemento de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> especificada por su nombre completo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
      <summary>Devuelve una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Una colección de todos los elementos con nombre de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
      <summary>Devuelve una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</summary>
      <returns>Una colección de todos los valores de todos los elementos de la colección <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaParticle">
      <summary>La clase abstracta para ello es la clase base para todos los tipos de partícula (por ejemplo, <see cref="T:System.Xml.Schema.XmlSchemaAny" />).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaParticle.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaParticle" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccurs">
      <summary>Obtiene o establece el número máximo de veces que puede producirse la partícula.</summary>
      <returns>Número máximo de veces que puede producirse la partícula. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MaxOccursString">
      <summary>Obtiene o establece el número en forma de valor de tipo cadena. Número máximo de veces que puede producirse la partícula.</summary>
      <returns>El número como valor de cadena. <see langword="String.Empty" /> indica que <see langword="MaxOccurs" /> es igual al valor predeterminado. El valor predeterminado es una referencia nula.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccurs">
      <summary>Obtiene o establece el número mínimo de veces que puede producirse la partícula.</summary>
      <returns>Número mínimo de veces que puede producirse la partícula. El valor predeterminado es 1.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaParticle.MinOccursString">
      <summary>Obtiene o establece el número en forma de valor de tipo cadena. Número mínimo de veces que puede producirse la partícula.</summary>
      <returns>El número como valor de cadena. <see langword="String.Empty" /> indica que <see langword="MinOccurs" /> es igual al valor predeterminado. El valor predeterminado es una referencia nula.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaPatternFacet">
      <summary>Representa el elemento <see langword="pattern" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para especificar una restricción en el valor introducido para un elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaPatternFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaRedefine">
      <summary>Representa el elemento <see langword="redefine" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede usarse para permitir redefinir tipos simples y complejos, grupos y grupos de atributos de archivos de esquema externos en el esquema actual. Esta clase también puede usarse para proporcionar la versión para los elementos del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaRedefine.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaRedefine" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.AttributeGroups">
      <summary>Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema, que contiene el valor posterior a la compilación de la propiedad <see langword="AttributeGroups" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los atributos del esquema. Valor posterior a la compilación de la propiedad <see langword="AttributeGroups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Groups">
      <summary>Obtiene la tabla <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema, donde se incluye el valor posterior a la compilación de la propiedad <see langword="Groups" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los grupos del esquema. Valor posterior a la compilación de la propiedad <see langword="Groups" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.Items">
      <summary>Obtiene la colección de las siguientes clases: <see cref="T:System.Xml.Schema.XmlSchemaAnnotation" />, <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroup" />, <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> y <see cref="T:System.Xml.Schema.XmlSchemaGroup" />.</summary>
      <returns>Elementos incluidos en el elemento redefinido.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaRedefine.SchemaTypes">
      <summary>Obtiene <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos simples y complejos del esquema, donde se incluye el valor posterior a la compilación de la propiedad <see langword="SchemaTypes" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaObjectTable" /> para todos los tipos de esquema del esquema. Valor posterior a la compilación de la propiedad <see langword="SchemaTypes" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSequence">
      <summary>Representa el elemento <see langword="sequence" /> (compositor) del esquema XML, tal y como lo especificó el consorcio World Wide Web (W3C). <see langword="sequence" /> requiere que los elementos del grupo aparezcan en la secuencia especificada dentro del elemento que los contiene.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSequence.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSequence" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSequence.Items">
      <summary>Elementos incluidos dentro del compositor. Colección de <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaGroupRef" />, <see cref="T:System.Xml.Schema.XmlSchemaChoice" />, <see cref="T:System.Xml.Schema.XmlSchemaSequence" /> o <see cref="T:System.Xml.Schema.XmlSchemaAny" />.</summary>
      <returns>Elementos incluidos dentro del compositor.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSet">
      <summary>Contiene una caché de esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
      <summary>Especifica un controlador de eventos para recibir información sobre los errores de validación de esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable">Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar.</param>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.XmlNameTable" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
      <summary>Agrega el esquema del lenguaje de definición de esquemas XML (XSD) de la dirección URL especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Propiedad de esquema <paramref name="targetNamespace" /> o valor <see langword="null" /> para utilizar el <paramref name="targetNamespace" /> especificado en el esquema.</param>
      <param name="schemaUri">Dirección URL que especifica el esquema que se va a cargar.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">La dirección URL que se pasa como parámetro es <see langword="null" /> o <see cref="F:System.String.Empty" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
      <summary>Agrega el esquema del lenguaje de definición de esquemas XML (XSD) incluido en <see cref="T:System.Xml.XmlReader" /> a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Propiedad de esquema <paramref name="targetNamespace" /> o valor <see langword="null" /> para utilizar el <paramref name="targetNamespace" /> especificado en el esquema.</param>
      <param name="schemaDocument">Objeto <see cref="T:System.Xml.XmlReader" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.XmlReader" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
      <summary>Agrega el <see cref="T:System.Xml.Schema.XmlSchema" /> predeterminado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar a la colección <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
      <summary>Agrega todos los esquemas del lenguaje de definición de esquemas XML (XSD) de la clase <see cref="T:System.Xml.Schema.XmlSchemaSet" /> especificada a <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemas">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Compile">
      <summary>Compila los esquemas del lenguaje de definición de esquemas XML (XSD) agregados a <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en un esquema lógico.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Se ha producido un error al validar y compilar los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
      <summary>Indica si un esquema del lenguaje de definición de esquemas XML (XSD) con el URI del espacio de nombres de destino especificado está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="targetNamespace">Propiedad de esquema <paramref name="targetNamespace" />.</param>
      <returns>
        <see langword="true" /> si hay un esquema con el URI de espacio de nombres de destino especificado en <see cref="T:System.Xml.Schema.XmlSchemaSet" />; en el caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
      <summary>Indica si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> especificado del lenguaje de definición de esquemas XML (XSD) está en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" />.</param>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> está en el <see cref="T:System.Xml.Schema.XmlSchemaSet" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <summary>Copia todos los objetos <see cref="T:System.Xml.Schema.XmlSchema" /> de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> en la matriz especificada a partir del índice indicado.</summary>
      <param name="schemas">Matriz en la que se van a copiar los objetos.</param>
      <param name="index">Índice de la matriz en la que se iniciará la copia.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
      <summary>Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se ha eliminado de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> o el valor <see langword="null" /> si no se ha encontrado el esquema en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
      <summary>Quita el esquema del lenguaje de definición de esquemas XML (XSD) especificado y todos los esquemas que importa de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schemaToRemove">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a quitar de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</param>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xml.Schema.XmlSchema" /> y todas sus importaciones se han eliminado correctamente; de lo contrario, devuelve <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
      <summary>Vuelve a procesar un esquema del lenguaje de definición de esquemas XML (XSD) que ya existe en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <param name="schema">Esquema que se va a volver a procesar.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El esquema no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se pasa como parámetro no se encuentra todavía en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> si el esquema es válido. Si el esquema no es válido y se especifica un <see cref="T:System.Xml.Schema.ValidationEventHandler" />, se devolverá el valor <see langword="null" /> y se iniciará el evento de validación adecuado. De lo contrario, se produce una excepción <see cref="T:System.Xml.Schema.XmlSchemaException" />.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
      <summary>Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) de <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas que se han agregado a <see cref="T:System.Xml.Schema.XmlSchemaSet" />. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
      <summary>Devuelve una colección de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> y que pertenecen al espacio de nombres especificado.</summary>
      <param name="targetNamespace">Propiedad de esquema <paramref name="targetNamespace" />.</param>
      <returns>Objeto <see cref="T:System.Collections.ICollection" /> que contiene todos los esquemas agregados a la clase<see cref="T:System.Xml.Schema.XmlSchemaSet" /> que pertenece al espacio de nombres especificado. Si no se ha agregado ningún esquema a <see cref="T:System.Xml.Schema.XmlSchemaSet" />, se devuelve un objeto <see cref="T:System.Collections.ICollection" /> vacío.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> para <see cref="T:System.Xml.Schema.XmlSchemaSet" />. El valor predeterminado es una instancia de <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> con la propiedad <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> establecida en <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.Count">
      <summary>Obtiene el número de esquemas lógicos del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Número de esquemas lógicos que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
      <summary>Obtiene todos los atributos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Colección de atributos globales.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
      <summary>Obtiene todos los elementos globales de todos los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Colección de elementos globales.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
      <summary>Obtiene todos los tipos simples y complejos de los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</summary>
      <returns>Colección de todos los tipos simples y complejos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
      <summary>Obtiene un valor que indica si los esquemas del lenguaje de definición de esquemas XML (XSD) que hay en <see cref="T:System.Xml.Schema.XmlSchemaSet" /> han sido compilados.</summary>
      <returns>
        <see langword="true" /> si los esquemas de <see cref="T:System.Xml.Schema.XmlSchemaSet" /> se han compilado desde la última vez que se agregó o quitó un esquema de <see cref="T:System.Xml.Schema.XmlSchemaSet" />; de lo contrario, devolverá <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.NameTable">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> predeterminado que utiliza <see cref="T:System.Xml.Schema.XmlSchemaSet" /> al cargar los nuevos esquemas del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns>Tabla de objetos en forma de cadena subdividida.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver espacios de nombres o ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.</summary>
      <returns>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para resolver los espacios de nombres y ubicaciones a las que se hace referencia en los elementos de inclusión e importación de un esquema.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContent">
      <summary>Representa el elemento <see langword="simpleContent" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase es para los tipos simples y complejos con modelo de contenido simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContent.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContent" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContent.Content">
      <summary>Obtiene una de estas clases: <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
      <returns>Contenido incluido en la clase <see langword="XmlSchemaSimpleContentRestriction" /> o <see langword="XmlSchemaSimpleContentExtension" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentExtension">
      <summary>Representa el elemento <see langword="extension" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede usarse para derivar tipos simples mediante extension. Esas derivaciones se usan para extender el contenido de tipo simple del elemento agregando atributos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentExtension.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentExtension" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.AnyAttribute">
      <summary>Obtiene o establece el <see langword="XmlSchemaAnyAttribute" /> que se va a utilizar para el valor del atributo.</summary>
      <returns>
        <see langword="XmlSchemaAnyAttribute" />. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.Attributes">
      <summary>Obtiene la colección de <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" />.</summary>
      <returns>Colección de atributos del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentExtension.BaseTypeName">
      <summary>Obtiene o establece el nombre de un tipo de datos integrado o de un tipo simple a partir del que se extiende este tipo.</summary>
      <returns>Nombre del tipo base.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction">
      <summary>Representa el elemento <see langword="restriction" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede usarse para derivar tipos simples mediante restriction. Esas derivaciones pueden usarse para restringir el intervalo de valores para el elemento a un subconjunto de los valores especificados en el tipo simple heredado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleContentRestriction.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleContentRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.AnyAttribute">
      <summary>Obtiene o establece un <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> que se va a utilizar para el valor del atributo.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> para el valor del atributo. Opcional.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Attributes">
      <summary>Obtiene la colección <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> y <see cref="T:System.Xml.Schema.XmlSchemaAttributeGroupRef" /> de atributos para el tipo simple.</summary>
      <returns>Colección de atributos de un tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseType">
      <summary>Obtiene o establece el valor base del tipo simple.</summary>
      <returns>Valor base del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.BaseTypeName">
      <summary>Obtiene o establece el nombre del tipo de datos integrado o del tipo simple a partir del que se deriva este tipo.</summary>
      <returns>Nombre del tipo base.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleContentRestriction.Facets">
      <summary>Obtiene o establece una faceta del Esquema XML.</summary>
      <returns>Una de las clases de faceta siguientes: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleType">
      <summary>Representa el elemento <see langword="simpleType" /> de contenido sencillo del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase define un tipo simple. Los tipos simples pueden especificar información y restricciones para el valor de atributos o elementos que solo contengan texto.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleType.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleType.Content">
      <summary>Obtiene o establece <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" /> o <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
      <returns>
        <see langword="XmlSchemaSimpleTypeUnion" />, <see langword="XmlSchemaSimpleTypeList" /> o <see langword="XmlSchemaSimpleTypeRestriction" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeContent">
      <summary>Clase abstracta para las clases de contenido de tipo simple.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeContent.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeContent" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeList">
      <summary>Representa el elemento <see langword="list" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede utilizarse para definir un elemento <see langword="simpleType" /> como una lista de valores de un tipo de datos especificado.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeList" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.BaseItemType">
      <summary>Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" /> basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName" /> del tipo simple.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemType">
      <summary>Obtiene o establece el elemento <see langword="simpleType" /> que se deriva del tipo especificado por el valor base.</summary>
      <returns>Tipo de elemento para el elemento de tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeList.ItemTypeName">
      <summary>Obtiene o establece el nombre de un tipo de datos integrado o de un elemento <see langword="simpleType" /> definido en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Nombre de tipo de la lista de tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction">
      <summary>Representa el elemento <see langword="restriction" /> de los tipos sencillos del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para restringir el elemento <see langword="simpleType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeRestriction" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseType">
      <summary>Obtiene o establece información sobre el tipo base.</summary>
      <returns>Tipo base del elemento <see langword="simpleType" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.BaseTypeName">
      <summary>Obtiene o establece el nombre del tipo base calificado.</summary>
      <returns>Nombre completo del tipo base de restricción del tipo simple.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Facets">
      <summary>Obtiene o establece una faceta del Esquema XML.</summary>
      <returns>Una de las clases de faceta siguientes: 
 <see cref="T:System.Xml.Schema.XmlSchemaLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxLengthFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaPatternFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaEnumerationFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMaxExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinInclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaMinExclusiveFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaFractionDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />, <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion">
      <summary>Representa el elemento <see langword="union" /> de los tipos sencillos del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Un tipo de datos <see langword="union" /> puede utilizarse para especificar el contenido de un <see langword="simpleType" />. El valor del elemento <see langword="simpleType" /> debe ser cualquiera de un conjunto de tipos de datos alternativos especificado en la unión. Los tipos Union siempre son tipos derivados y deben comprender al menos dos tipos de datos alternativos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleTypeUnion" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseMemberTypes">
      <summary>Obtiene una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representan el tipo del elemento <see langword="simpleType" /> basándose en los valores <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes" /> y <see cref="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes" /> del tipo simple.</summary>
      <returns>Una matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo del elemento <see langword="simpleType" /> especificado.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.BaseTypes">
      <summary>Obtiene la colección de tipos base.</summary>
      <returns>Colección de valores base de tipos simples.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaSimpleTypeUnion.MemberTypes">
      <summary>Obtiene o establece la matriz de nombres completos de miembros de tipos de datos integrados o de elementos <see langword="simpleType" /> definidos en este esquema (u otro esquema indicado por el espacio de nombres especificado).</summary>
      <returns>Matriz que consta de una lista de miembros de tipos de datos integrados o tipos simples.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet">
      <summary>Representa la faceta <see langword="totalDigits" /> del esquema XML, tal y como lo especifica el consorcio World Wide Web (W3C). Esta clase puede utilizarse para especificar una restricción en cuanto al número de dígitos que se pueden especificar para el valor de un elemento <see langword="simpleType" />. El valor de <see langword="totalDigits" /> debe ser un entero positivo.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaTotalDigitsFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaTotalDigitsFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaType">
      <summary>Clase base para todos los tipos simples y complejos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaType" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)">
      <summary>Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado.</summary>
      <param name="typeCode">Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo complejo.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
      <summary>Devuelve el valor <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado del tipo complejo especificado mediante un nombre calificado.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo complejo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> que representa el tipo complejo integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)">
      <summary>Devuelve una clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado.</summary>
      <param name="typeCode">Uno de los valores <see cref="T:System.Xml.Schema.XmlTypeCode" /> que representan el tipo simple.</param>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
      <summary>Devuelve una clase <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado del tipo simple especificado por el nombre calificado.</summary>
      <param name="qualifiedName">
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo simple.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Xml.XmlQualifiedName" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> que representa el tipo simple integrado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)">
      <summary>Devuelve un valor que indica si el tipo de esquema derivado especificado se deriva del tipo de esquema base especificado.</summary>
      <param name="derivedType">
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado que se va a probar.</param>
      <param name="baseType">Tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> base que se toma como referencia para probar el tipo <see cref="T:System.Xml.Schema.XmlSchemaType" /> derivado.</param>
      <param name="except">Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> que representan un método de derivación de tipos que se va a excluir de la prueba.</param>
      <returns>Es <see langword="true" /> si el tipo derivado se derivado del tipo base; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType">
      <summary>Obtiene el tipo de objeto posterior a la compilación o el tipo de datos del lenguaje de definición de esquemas XML (XSD) integrado, el elemento simpleType o el elemento complexType. Se trata de una propiedad del conjunto de información posterior a la compilación del esquema.</summary>
      <returns>Tipo de datos XSD integrado, elemento simpleType o elemento complexType.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType">
      <summary>Obtiene el valor posterior a la compilación para el tipo base de este tipo de esquema.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" /> que representa el tipo base de este tipo de esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Datatype">
      <summary>Obtiene el valor posterior a la compilación para el tipo de datos del tipo complejo.</summary>
      <returns>Valor <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> de la compilación posterior al esquema.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.DerivedBy">
      <summary>Obtiene la información posterior a la compilación sobre cómo se ha derivado este elemento de su tipo base.</summary>
      <returns>Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Final">
      <summary>Obtiene o establece el atributo final de la derivación de tipo que indica si se permiten más derivaciones.</summary>
      <returns>Uno de los valores <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> válidos. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.FinalResolved">
      <summary>Obtiene el valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />.</summary>
      <returns>Valor posterior a la compilación de la propiedad <see cref="P:System.Xml.Schema.XmlSchemaType.Final" />. El valor predeterminado es el valor del atributo <see langword="finalDefault" /> del elemento <see langword="schema" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.IsMixed">
      <summary>Obtiene o establece un valor que indica si el modelo de contenido de este tipo es mixto. Esta propiedad sólo es válida en un tipo complejo.</summary>
      <returns>
        <see langword="true" /> si el modelo de contenido del tipo es mixto; de lo contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.Name">
      <summary>Obtiene o establece el nombre del tipo.</summary>
      <returns>Nombre del tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.QualifiedName">
      <summary>Obtiene el nombre calificado del tipo creado a partir del atributo <see langword="Name" /> de este tipo. Se trata de una propiedad posterior a la compilación del esquema.</summary>
      <returns>
        <see cref="T:System.Xml.XmlQualifiedName" /> del tipo creado a partir del atributo <see langword="Name" /> de este tipo.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaType.TypeCode">
      <summary>Obtiene el valor <see cref="T:System.Xml.Schema.XmlTypeCode" /> del tipo.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlTypeCode" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUnique">
      <summary>Representa el elemento <see langword="unique" /> del esquema XML como especificado por el Consorcio WWC (W3C). Esta clase puede usarse para identificar una restricción única entre un conjunto de elementos.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaUnique.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaUnique" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaUse">
      <summary>Indicador de la forma en que se utiliza el atributo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.None">
      <summary>No se ha especificado la forma de utilizar el atributo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Optional">
      <summary>El atributo es opcional.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Prohibited">
      <summary>El atributo no puede utilizarse.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaUse.Required">
      <summary>El atributo debe aparecer una vez.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationException">
      <summary>Representa la excepción que se produce cuando se detectan advertencias y errores de validación de esquema del lenguaje de definición de esquemas XML (XSD) que se está validando.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</summary>
      <param name="info">Un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">Un objeto <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción y el objeto <see cref="T:System.Exception" /> original que ha producido la excepción especificada.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con el mensaje de excepción especificado y el objeto <see cref="T:System.Exception" /> original, el número de línea y la posición de la línea del código XML que produce la excepción especificada.</summary>
      <param name="message">Descripción <see langword="string" /> de la condición de error.</param>
      <param name="innerException">Objeto <see cref="T:System.Exception" /> original que ha producido esta excepción.</param>
      <param name="lineNumber">Número de línea del código XML que ha producido esta excepción.</param>
      <param name="linePosition">Posición de la línea del código XML que ha producido esta excepción.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Construye un nuevo objeto <see cref="T:System.Xml.Schema.XmlSchemaValidationException" /> con la información de <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificada que contiene todas las propiedades de la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />
      </param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />
      </param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidationException.SetSourceObject(System.Object)">
      <summary>Establece el nodo XML que produce el error.</summary>
      <param name="sourceObject">El objeto de origen.</param>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidationException.SourceObject">
      <summary>Obtiene el nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</summary>
      <returns>Nodo XML que ha producido la excepción <see cref="T:System.Xml.Schema.XmlSchemaValidationException" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidationFlags">
      <summary>Especifica las opciones de validación del esquema utilizadas por las clases <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> y <see cref="T:System.Xml.XmlReader" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes">
      <summary>Permitir atributos xml:* aunque no estén definidos en el esquema. Los atributos se validarán según su tipo de datos.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.None">
      <summary>No procese restricciones de identidad, esquemas en línea ni sugerencias de ubicación de esquemas, y no cree informes de advertencia de validación de esquema.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints">
      <summary>Procesa las restricciones de identidad (<c>xs:ID</c>, <c>xs:IDREF</c>, <c>xs:key</c>, <c>xs:keyref</c>, <c>xs:unique</c>) detectadas durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema">
      <summary>Procese los esquemas en línea que encuentre durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation">
      <summary>Procesa las sugerencias de ubicación de esquemas (<c>xsi:schemaLocation</c>, <c>xsi:noNamespaceSchemaLocation</c>) detectadas durante la validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings">
      <summary>Cree informes de las advertencias de validación de esquemas que encuentre durante la validación.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidator">
      <summary>Representa un motor de validación de esquema del lenguaje de definición de esquemas XML (XSD). La clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> no se puede heredar.</summary>
    </member>
    <member name="E:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler">
      <summary>
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe advertencias y errores detectados durante la validación del esquema.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <param name="nameTable">Los objetos <see cref="T:System.Xml.XmlNameTable" /> contienen nombres de atributos y elementos en forma de cadenas subdivididas.</param>
      <param name="schemas">Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas del lenguaje de definición de esquemas XML (XSD) utilizado para la validación.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> utilizado para resolver los espacios de nombres que se encuentran durante la validación.</param>
      <param name="validationFlags">Valor <see cref="T:System.Xml.Schema.XmlSchemaValidationFlags" /> que especifica las opciones de validación de esquemas.</param>
      <exception cref="T:System.ArgumentNullException">Uno o varios parámetros especificados son <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">Se ha producido un error durante la compilación de los esquemas en el parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
      <summary>Agrega un esquema del lenguaje de definición de esquemas XML (XSD) al conjunto de esquemas usado para la validación.</summary>
      <param name="schema">Objeto <see cref="T:System.Xml.Schema.XmlSchema" /> que se va a agregar al conjunto de esquemas utilizado para la validación.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El espacio de nombres de destino del parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> coincide con el de cualquier elemento o atributo que haya encontrado el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaException">El parámetro <see cref="T:System.Xml.Schema.XmlSchema" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.EndValidation">
      <summary>Finaliza la validación y comprueba las restricciones de identidad de todo el documento XML.</summary>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Se ha encontrado un error de restricción de identidad en el documento XML.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes">
      <summary>Devuelve los atributos esperados para el contexto del elemento actual.</summary>
      <returns>Matriz de los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o matriz vacía si no hay ningún atributo esperado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles">
      <summary>Devuelve las partículas esperadas en el contexto del elemento actual.</summary>
      <returns>Matriz de objetos <see cref="T:System.Xml.Schema.XmlSchemaParticle" /> o matriz vacía si no hay ninguna partícula esperada.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
      <summary>Valida restricciones de identidad en los atributos predeterminados y rellena la lista <see cref="T:System.Collections.ArrayList" /> especificada con objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de todos los atributos con valores predeterminados que no se hayan validado previamente usando el método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en el contexto del elemento.</summary>
      <param name="defaultAttributes">
        <see cref="T:System.Collections.ArrayList" /> que se va a rellenar con los objetos <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> de los atributos que no se hayan encontrado durante la validación en el contexto del elemento.</param>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize">
      <summary>Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
      <exception cref="T:System.InvalidOperationException">La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
      <summary>Inicializa el estado del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> utilizando el objeto <see cref="T:System.Xml.Schema.XmlSchemaObject" /> especificado para la validación parcial.</summary>
      <param name="partialValidationType">Objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> o <see cref="T:System.Xml.Schema.XmlSchemaType" /> utilizado para inicializar el contexto de validación del objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para realizar una validación parcial.</param>
      <exception cref="T:System.InvalidOperationException">La llamada al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.Initialize" /> es válida si se realiza inmediatamente después de la creación de un objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> o después de llamar sólo a <see cref="M:System.Xml.Schema.XmlSchemaValidator.EndValidation" />.</exception>
      <exception cref="T:System.ArgumentException">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no es un objeto <see cref="T:System.Xml.Schema.XmlSchemaElement" />, <see cref="T:System.Xml.Schema.XmlSchemaAttribute" /> ni <see cref="T:System.Xml.Schema.XmlSchemaType" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro <see cref="T:System.Xml.Schema.XmlSchemaObject" /> no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Omite la validación del contenido del elemento actual y prepara el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar contenido en el contexto del elemento primario.</summary>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si el contenido del elemento actual se omite correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida el nombre del atributo, el URI del espacio de nombres y el valor en el contexto del elemento actual.</summary>
      <param name="localName">Nombre local del atributo que se va a validar.</param>
      <param name="namespaceUri">URI del espacio de nombres del atributo que se va a validar.</param>
      <param name="attributeValue">Valor del atributo que se va a validar.</param>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El atributo no es válido en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Uno o varios parámetros especificados son <see langword="null" />.</exception>
      <returns>Valor del atributo validado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida el nombre del atributo, el URI del espacio de nombres y el valor en el contexto del elemento actual.</summary>
      <param name="localName">Nombre local del atributo que se va a validar.</param>
      <param name="namespaceUri">URI del espacio de nombres del atributo que se va a validar.</param>
      <param name="attributeValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor del atributo como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del atributo se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El atributo no es válido en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Uno o varios parámetros especificados son <see langword="null" />.</exception>
      <returns>Valor del atributo validado.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
      <summary>Valida el elemento en el contexto actual.</summary>
      <param name="localName">Nombre local del elemento que se va a validar.</param>
      <param name="namespaceUri">URI del espacio de nombres del elemento que se va a validar.</param>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El nombre del elemento no es válido en el contexto actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
      <summary>Valida el elemento en el contexto actual con los valores de atributo <c>xsi:Type</c>, <c>xsi:Nil</c>, <c>xsi:SchemaLocation</c> y <c>xsi:NoNamespaceSchemaLocation</c> especificados.</summary>
      <param name="localName">Nombre local del elemento que se va a validar.</param>
      <param name="namespaceUri">URI del espacio de nombres del elemento que se va a validar.</param>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del nombre del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiType">Valor del atributo <c>xsi:Type</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiNil">Valor del atributo <c>xsi:Nil</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiSchemaLocation">Valor del atributo <c>xsi:SchemaLocation</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="xsiNoNamespaceSchemaLocation">Valor del atributo <c>xsi:NoNamespaceSchemaLocation</c> del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El nombre del elemento no es válido en el contexto actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateElement" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Comprueba si el contenido de texto del elemento es válido según su tipo de datos para los elementos con contenido simple y si el contenido del elemento actual está completo para los elementos con contenido complejo.</summary>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen si la validación del elemento se realiza correctamente. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El contenido del elemento no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <returns>Valor de texto con tipo analizado del elemento si el contenido de éste es simple.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
      <summary>Comprueba si el contenido del texto del elemento especificado es válido según su tipo de datos.</summary>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al realizar correctamente la validación del contenido del texto del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <param name="typedValue">Contenido del texto con tipo del elemento.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">El contenido del texto del elemento no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">No se ha llamado al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> utilizando la secuencia correcta (por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />), se han realizado llamadas al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> anteriormente o el contenido del elemento es complejo.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del contenido del texto con tipo no puede ser <see langword="null" />.</exception>
      <returns>Contenido del texto con tipo analizado del elemento.</returns>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)">
      <summary>Comprueba si todos los atributos requeridos del contexto del elemento están presentes y prepara el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para validar el contenido secundario del elemento.</summary>
      <param name="schemaInfo">Objeto <see cref="T:System.Xml.Schema.XmlSchemaInfo" /> cuyas propiedades se establecen al comprobar satisfactoriamente que están presentes todos los atributos necesarios en el contexto del elemento. Este parámetro puede ser <see langword="null" />.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">No se han encontrado uno o varios los atributos necesarios en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> en la secuencia correcta. Por ejemplo, al llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)" /> después de llamar a <see cref="M:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)" />.</exception>
      <exception cref="T:System.ArgumentNullException">Uno o varios parámetros especificados son <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
      <summary>Valida si la cadena <see langword="string" /> de texto especificada se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue">
        <see langword="string" /> de texto que se va a validar en el contexto del elemento actual.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La cadena <see langword="string" /> de texto especificada no se permite en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro de la cadena <see langword="string" /> de texto no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
      <summary>Valida si el texto que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado se permite en el contexto del elemento actual y acumula el texto para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor de texto como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">La cadena <see langword="string" /> de texto especificada no se permite en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> en la secuencia correcta. Por ejemplo, se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateText" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro de la cadena <see langword="string" /> de texto no puede ser <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
      <summary>Valida si se permite el espacio en blanco de la cadena <see langword="string" /> especificada en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue">
        <see langword="string" /> de espacio en blanco que se va a validar en el contexto del elemento actual.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">No se permite el espacio en blanco en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
      <summary>Valida si se permite el espacio en blanco que devuelve el objeto <see cref="T:System.Xml.Schema.XmlValueGetter" /> especificado en el contexto del elemento actual y acumula el espacio en blanco para la validación si el contenido del elemento actual es simple.</summary>
      <param name="elementValue">
        <see cref="T:System.Xml.Schema.XmlValueGetter" />
        <see langword="delegate" /> que se usa para pasar el valor de espacio en blanco como tipo de Common Language Runtime (CLR) compatible con el tipo del lenguaje de definición de esquemas XML (XSD) del atributo.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">No se permite el espacio en blanco en el contexto del elemento actual.</exception>
      <exception cref="T:System.InvalidOperationException">No se llamó al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> en la secuencia correcta. Por ejemplo, si se llama al método <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace" /> después de llamar a <see cref="Overload:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute" />.</exception>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.LineInfoProvider">
      <summary>Obtiene o establece la información del número de línea del nodo XML que se está validando.</summary>
      <returns>Un objeto <see cref="T:System.Xml.IXmlLineInfo" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.SourceUri">
      <summary>Obtiene o establece el URI de origen del nodo XML que se está validando.</summary>
      <returns>Objeto <see cref="T:System.Uri" /> que representa el URI de origen del nodo XML que se está validando; el valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.ValidationEventSender">
      <summary>Obtiene o establece el objeto enviado como objeto de remitente de un evento de validación.</summary>
      <returns>
        <see cref="T:System.Object" />; el valor predeterminado es el objeto <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</returns>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaValidator.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> usado para resolver los elementos <c>xs:import</c> y <c>xs:include</c>, así como los atributos <c>xsi:schemaLocation</c> y <c>xsi:noNamespaceSchemaLocation</c>.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlResolver" />; el valor predeterminado es un objeto <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaValidity">
      <summary>Representa la validez de un elemento XML validado por la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" />.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Invalid">
      <summary>El elemento XML no es válido.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.NotKnown">
      <summary>Se desconoce la validez del elemento XML.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSchemaValidity.Valid">
      <summary>El elemento XML es válido.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet">
      <summary>Representa la faceta <see langword="whiteSpace" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaWhiteSpaceFacet.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaWhiteSpaceFacet" />.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlSchemaXPath">
      <summary>Representa el elemento <see langword="selector" /> del Consorcio W3C.</summary>
    </member>
    <member name="M:System.Xml.Schema.XmlSchemaXPath.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Schema.XmlSchemaXPath" />.</summary>
    </member>
    <member name="P:System.Xml.Schema.XmlSchemaXPath.XPath">
      <summary>Obtiene o establece el atributo de la expresión de XPath.</summary>
      <returns>Valor del atributo de tipo cadena de la expresión XPath.</returns>
    </member>
    <member name="T:System.Xml.Schema.XmlSeverityType">
      <summary>Representa la gravedad del evento de validación.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Error">
      <summary>Indica que se ha producido un error de validación al validar el documento de instancia. Esto es válido para las definiciones de tipo de documento (DTD) y los esquemas del Lenguaje de definición de esquemas XML (XSD, Schema Definition Language). Las restricciones de validación del Consorcio W3C se consideran errores. Si no se ha creado ningún controlador de eventos de validación, los errores producen una excepción.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlSeverityType.Warning">
      <summary>Indica que se ha producido un evento de validación que no es un error. Normalmente se emite una advertencia cuando no existe una DTD o un esquema XML con respecto a los cuales validar un elemento o atributo determinado. A diferencia de los errores, las advertencias no producen una excepción si no hay un controlador de eventos de validación.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlTypeCode">
      <summary>Representa los tipos de esquema del Lenguaje de definición de esquemas XML (XSD) del consorcio W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyAtomicType">
      <summary>Cualquier valor atómico de una unión.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.AnyUri">
      <summary>Tipo <see langword="xs:anyURI" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Attribute">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Base64Binary">
      <summary>Tipo <see langword="xs:base64Binary" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Boolean">
      <summary>Tipo <see langword="xs:boolean" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Byte">
      <summary>Tipo <see langword="xs:byte" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Comment">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Date">
      <summary>Tipo <see langword="xs:date" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DateTime">
      <summary>Tipo <see langword="xs:dateTime" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.DayTimeDuration">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Decimal">
      <summary>Tipo <see langword="xs:decimal" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Document">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Double">
      <summary>Tipo <see langword="xs:double" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Duration">
      <summary>Tipo <see langword="xs:Duration" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Element">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Entity">
      <summary>Tipo <see langword="xs:ENTITY" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Float">
      <summary>Tipo <see langword="xs:float" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GDay">
      <summary>Tipo <see langword="xs:gDay" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonth">
      <summary>Tipo <see langword="xs:gMonth" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GMonthDay">
      <summary>Tipo <see langword="xs:gMonthDay" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYear">
      <summary>Tipo <see langword="xs:gYear" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.GYearMonth">
      <summary>Tipo <see langword="xs:gYearMonth" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.HexBinary">
      <summary>Tipo <see langword="xs:hexBinary" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Id">
      <summary>Tipo <see langword="xs:ID" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Idref">
      <summary>Tipo <see langword="xs:IDREF" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Int">
      <summary>Tipo <see langword="xs:int" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Integer">
      <summary>Tipo <see langword="xs:integer" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Item">
      <summary>Un elemento como un nodo o un valor atómico.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Language">
      <summary>Tipo <see langword="xs:language" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Long">
      <summary>Tipo <see langword="xs:long" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Name">
      <summary>Tipo <see langword="xs:Name" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Namespace">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NCName">
      <summary>Tipo <see langword="xs:NCName" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NegativeInteger">
      <summary>Tipo <see langword="xs:negativeInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NmToken">
      <summary>Tipo <see langword="xs:NMTOKEN" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Node">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.None">
      <summary>Ninguna información de tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonNegativeInteger">
      <summary>Tipo <see langword="xs:nonNegativeInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NonPositiveInteger">
      <summary>Tipo <see langword="xs:nonPositiveInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.NormalizedString">
      <summary>Tipo <see langword="xs:normalizedString" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Notation">
      <summary>Tipo <see langword="xs:NOTATION" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.PositiveInteger">
      <summary>Tipo <see langword="xs:positiveInteger" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.ProcessingInstruction">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.QName">
      <summary>Tipo <see langword="xs:QName" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Short">
      <summary>Tipo <see langword="xs:short" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.String">
      <summary>Tipo <see langword="xs:string" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Text">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Time">
      <summary>Tipo <see langword="xs:time" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.Token">
      <summary>Tipo <see langword="xs:token" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedByte">
      <summary>Tipo <see langword="xs:unsignedByte" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedInt">
      <summary>Tipo <see langword="xs:unsignedInt" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedLong">
      <summary>Tipo <see langword="xs:unsignedLong" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UnsignedShort">
      <summary>Tipo <see langword="xs:unsignedShort" /> del esquema XML de W3C.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.UntypedAtomic">
      <summary>Valor atómico sin tipo.</summary>
    </member>
    <member name="F:System.Xml.Schema.XmlTypeCode.YearMonthDuration">
      <summary>Este valor es compatible con la infraestructura de .NET Framework y no está pensado para utilizarse directamente desde el código.</summary>
    </member>
    <member name="T:System.Xml.Schema.XmlValueGetter">
      <summary>
        <see langword="delegate" /> que utiliza la clase <see cref="T:System.Xml.Schema.XmlSchemaValidator" /> para pasar los valores de atributo, texto, y espacio en blanco en forma de tipo de Common Language Runtime (CLR) compatible con el tipo del atributo, el texto o el espacio en blanco del lenguaje de definición de esquemas XML (XSD).</summary>
      <returns>Un objeto que contiene el valor de atributo, texto o espacio en blanco. El objeto es un tipo CLR que se corresponde con el tipo XSD del valor de atributo, texto o espacio en blanco.</returns>
    </member>
    <member name="T:System.Xml.Serialization.IXmlSerializable">
      <summary>Proporciona un formato personalizado para la serialización y deserialización XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <summary>Este método está reservado y no debe utilizarse. Al implementar la interfaz <see langword="IXmlSerializable" />, debe devolver <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) de este método y, en su lugar, si es necesario especificar un esquema personalizado, aplique el <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> a la clase.</summary>
      <returns>Clase <see cref="T:System.Xml.Schema.XmlSchema" /> que describe la representación XML del objeto generado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> y usado por el método <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</returns>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <summary>Genera un objeto a partir de su representación XML.</summary>
      <param name="reader">Flujo de <see cref="T:System.Xml.XmlReader" /> desde el que se deserializa el objeto.</param>
    </member>
    <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <summary>Convierte un objeto en su representación XML.</summary>
      <param name="writer">El flujo <see cref="T:System.Xml.XmlWriter" /> para el que se serializa el objeto.</param>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <summary>Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlAttribute" />) puede contener cualquier atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <summary>Construye una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <summary>Especifica que el miembro (un campo que devuelve una matriz de objetos <see cref="T:System.Xml.XmlElement" /> o <see cref="T:System.Xml.XmlNode" />) contiene objetos que representan los elementos XLM que no tienen un miembro correspondiente en el objeto que se está serializando o deserializando.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML.</summary>
      <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> y especifica el nombre del elemento XML generado en el documento XML y su espacio de nombres XML.</summary>
      <param name="name">Nombre del elemento XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
      <param name="ns">Espacio de nombres XML del elemento XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <summary>Obtiene o establece el nombre del elemento XML.</summary>
      <exception cref="T:System.InvalidOperationException">El nombre de elemento de un miembro de la matriz no coincide con el nombre de elemento especificado por la propiedad <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
      <returns>Nombre del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML generado en el documento XML.</summary>
      <returns>Espacio de nombres XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <summary>Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns>Orden de la generación de código.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
      <summary>Especifica que <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar el miembro de la clase como un atributo XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" /> y especifica el nombre del atributo XML generado.</summary>
      <param name="attributeName">Nombre del atributo XML que genera <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="attributeName">Nombre del atributo XML que se genera.</param>
      <param name="type">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlAttributeAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> utilizado para almacenar el atributo.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <summary>Obtiene o establece el nombre del atributo XML.</summary>
      <returns>Nombre del atributo XML. El valor predeterminado es el nombre del miembro.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Un tipo de datos XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <summary>Obtiene o establece un valor que indica si está calificado el nombre del atributo XML generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see langword="XmlForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres XML del atributo XML.</summary>
      <returns>Espacio de nombres XML del atributo XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <summary>Obtiene o establece el tipo complejo del atributo XML.</summary>
      <returns>Tipo del atributo XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlElementAttribute">
      <summary>Indica que un campo público o una propiedad pública representa un elemento XML, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o deserializa el objeto que lo contiene.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML.</summary>
      <param name="elementName">Nombre de elemento XML del miembro serializado.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <summary>Inicializa una nueva instancia de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <see cref="T:System.Xml.Serialization.XmlElementAttribute" />. Este tipo de miembro se utiliza cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el objeto que lo contiene.</summary>
      <param name="elementName">Nombre de elemento XML del miembro serializado.</param>
      <param name="type">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica un tipo de miembro al que <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> es aplicado. Este tipo es utilizado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> al serializar o deserializar el objeto que lo contiene.</summary>
      <param name="type">
        <see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
      <returns>Un tipo de datos de esquema XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML generado.</summary>
      <returns>Nombre del elemento XML generado. El valor predeterminado es el identificador de miembros.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <summary>Obtiene o establece un valor que indica si el elemento está calificado.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en <see langword="null" /> como una etiqueta vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres asignado al elemento XML como resultado de la serialización de la clase.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <summary>Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</summary>
      <returns>Orden de la generación de código.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <summary>Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.</summary>
      <returns>
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlEnumAttribute">
      <summary>Controla el modo en que <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa un miembro de enumeración.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> y especifica el valor XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera o reconoce al serializar o deserializar la enumeración, respectivamente.</summary>
      <param name="name">Nombre de reemplazo del miembro de enumeración.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <summary>Obtiene o establece el valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa una enumeración o el valor reconocido cuando deserializa el miembro de enumeración.</summary>
      <returns>Valor generado en una instancia de documento XML cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa la enumeración o valor reconocido cuando deserializa el miembro de enumeración.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <summary>Instruye al método <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" /> de <see cref="T:System.Xml.Serialization.XmlSerializer" /> para que no serialice el valor de campo público o propiedad pública de lectura/escritura.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <summary>Especifica que la propiedad, el parámetro, el valor devuelto o el miembro de clase de destino contiene prefijos asociados a espacios de nombres que se usan en un documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />.</summary>
    </member>
    <member name="T:System.Xml.Serialization.XmlRootAttribute">
      <summary>Controla la serialización XML del destino de atributo como elemento raíz XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> y especifica el nombre del elemento raíz XML.</summary>
      <param name="elementName">Nombre del elemento raíz XML.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD del elemento raíz XML.</summary>
      <returns>Un tipo de datos XSD (XML Schema Document).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <summary>Obtiene o establece el nombre del elemento XML que generan y reconocen los métodos <see cref="T:System.Xml.Serialization.XmlSerializer" /> y <see cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />, respectivamente, de la clase <see cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />.</summary>
      <returns>Nombre del elemento raíz XML generado y reconocido en una instancia de documento XML. El valor predeterminado es el nombre de la clase serializada.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en <see langword="null" /> en el atributo <see langword="xsi:nil" /> establecido,a su vez, en <see langword="true" />.</summary>
      <returns>
        <see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <summary>Obtiene o establece el espacio de nombres del elemento raíz XML.</summary>
      <returns>Espacio de nombres del elemento XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <summary>Cuando se aplica a un tipo, almacena el nombre de un método estático del tipo que devuelve un esquema XML y un <see cref="T:System.Xml.XmlQualifiedName" /> (o <see cref="T:System.Xml.Schema.XmlSchemaType" /> para tipos anónimos) que controla la serialización del tipo.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> y toma el nombre del método estático que proporciona el esquema XML del tipo.</summary>
      <param name="methodName">Nombre del método estático que se debe implementar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <summary>Obtiene o establece un valor que determina si la clase de destino es un carácter comodín o que el esquema para la clase contiene solo un elemento <see langword="xs:any" />.</summary>
      <returns>
        <see langword="true" />, si la clase es un comodín, o si el esquema contiene solo el elemento <see langword="xs:any" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <summary>Obtiene el nombre del método estático que proporciona el esquema XML del tipo y el nombre del tipo de datos de su esquema XML.</summary>
      <returns>Nombre del método que la infraestructura XML invoca para devolver un esquema XML.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <summary>Contiene los espacios de nombres XML y prefijos que <see cref="T:System.Xml.Serialization.XmlSerializer" /> utiliza para generar nombres calificados en una instancia de documento XML.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />, utilizando la instancia especificada de <see langword="XmlSerializerNamespaces" /> que contiene la colección de pares prefijo y espacio de nombres.</summary>
      <param name="namespaces">Una instancia de <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> que contiene los pares de espacio de nombres y prefijo.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="namespaces">Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <summary>Agrega un par de prefijo y espacio de nombres a un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <param name="prefix">Prefijo asociado a un espacio de nombres XML.</param>
      <param name="ns">Espacio de nombres XML.</param>
    </member>
    <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <summary>Obtiene la matriz de pares de prefijo y espacio de nombres en un objeto <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" />.</summary>
      <returns>Matriz de objetos <see cref="T:System.Xml.XmlQualifiedName" /> que se utilizan como nombres calificados en un documento XML.</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <summary>Obtiene el número de pares de prefijo y espacio de nombres de la colección.</summary>
      <returns>Número de pares de prefijo y espacio de nombres de la colección.</returns>
    </member>
    <member name="T:System.Xml.Serialization.XmlTextAttribute">
      <summary>Indica a <see cref="T:System.Xml.Serialization.XmlSerializer" /> que el miembro debe tratarse como texto XML cuando se serializa o se deserializa la clase contenedora.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
    </member>
    <member name="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlTextAttribute" />.</summary>
      <param name="type">
        <see cref="T:System.Type" /> del miembro que se va a serializar.</param>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <summary>Obtiene o establece el tipo de datos XSD (Lenguaje de definición de esquemas XML) del texto generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <exception cref="T:System.Exception">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</exception>
      <exception cref="T:System.InvalidOperationException">El tipo de datos de esquemas XML especificado no es válido para la propiedad y no se puede convertir al tipo de miembro.</exception>
      <returns>Un tipo de datos de esquema XML (XSD).</returns>
    </member>
    <member name="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <summary>Obtiene o establece el tipo del miembro.</summary>
      <returns>
        <see cref="T:System.Type" /> del miembro.</returns>
    </member>
    <member name="T:System.Xml.ValidationType">
      <summary>Especifica el tipo de validación que se va a realizar.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Auto">
      <summary>Valida si se encuentra información de esquema o de DTD. 

A partir de .NET Framework 2.0, este campo está obsoleto. Se aplica solo a la clase <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.DTD">
      <summary>Valida según el archivo DTD.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.None">
      <summary>No se realiza ninguna validación ni se generan errores de validación. Esta configuración crea un analizador que no valida y que satisface XML 1.0.
        
Las llamadas a <see cref="M:System.Xml.XmlReader.ResolveEntity" /> informan de los atributos predeterminados y resuelven entidades generales. El DOCTYPE no se utiliza para la validación.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.Schema">
      <summary>Valide según los esquemas del lenguaje de definición de esquemas XML (XSD), incluyendo los esquemas XML en línea. Los esquemas XML se asocian a los indicadores URI de espacio de nombres mediante el atributo <see langword="schemaLocation" /> o la propiedad <see langword="Schemas" /> proporcionada.</summary>
    </member>
    <member name="F:System.Xml.ValidationType.XDR">
      <summary>Valide según los esquemas reducidos de datos XML (XDR), incluyendo los esquemas XDR en línea. Los esquemas XDR se reconocen mediante el prefijo de espacio de nombres <see langword="x-schema" /> o la propiedad <see cref="P:System.Xml.XmlValidatingReader.Schemas" />.
        
A partir de .NET Framework 2.0, este campo está obsoleto. Se aplica solo a la clase <see cref="T:System.Xml.XmlValidatingReader" /> obsoleta.</summary>
    </member>
    <member name="T:System.Xml.WhitespaceHandling">
      <summary>Especifica cómo se controla el espacio en blanco.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.All">
      <summary>Se devuelven nodos <see langword="Whitespace" /> y <see langword="SignificantWhitespace" />. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.None">
      <summary>No se devuelven nodos <see langword="Whitespace" /> ni <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="F:System.Xml.WhitespaceHandling.Significant">
      <summary>Sólo se devuelven nodos <see langword="SignificantWhitespace" />.</summary>
    </member>
    <member name="T:System.Xml.WriteState">
      <summary>Especifica el estado de <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Attribute">
      <summary>Indica que se escribe un valor de atributo.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Closed">
      <summary>Indica que se ha llamado al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Content">
      <summary>Indica que se está escribiendo contenido del elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Element">
      <summary>Indica que se está escribiendo una etiqueta de apertura de elemento.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Error">
      <summary>Se ha iniciado una excepción que ha dejado <see cref="T:System.Xml.XmlWriter" /> en un estado no válido. Puede llamar al método <see cref="M:System.Xml.XmlWriter.Close" /> para poner <see cref="T:System.Xml.XmlWriter" /> en el estado <see cref="F:System.Xml.WriteState.Closed" />. Cualquier otra llamada al método <see cref="T:System.Xml.XmlWriter" /> hará que se inicie una excepción <see cref="T:System.InvalidOperationException" />.

Este campo se agregó en .NET Framework 2.0.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Prolog">
      <summary>Indica que se escribe el prólogo.</summary>
    </member>
    <member name="F:System.Xml.WriteState.Start">
      <summary>Indica que todavía no se ha llamado a un método Write.</summary>
    </member>
    <member name="T:System.Xml.XmlAttribute">
      <summary>Representa un atributo. Los valores válidos y predeterminados del atributo se definen en una definición de tipo de documento (DTD) o un esquema.</summary>
    </member>
    <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlAttribute" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">Identificador de recursos uniforme (URI) de este espacio de nombres.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)">
      <summary>Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> que se va a agregar.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> agregado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">Es <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado y <see langword="false" /> para clonar sólo el nodo en sí.</param>
      <returns>Nodo duplicado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> que se va a insertar.</param>
      <param name="refChild">
        <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca detrás de <paramref name="refChild" />.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> insertado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> que se va a insertar.</param>
      <param name="refChild">
        <see cref="T:System.Xml.XmlNode" /> que es el nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> insertado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)">
      <summary>Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild">
        <see cref="T:System.Xml.XmlNode" /> que se va a agregar. Si es un objeto <see cref="T:System.Xml.XmlDocumentFragment" />, todo el contenido del fragmento de documento se desplaza a la lista de nodos secundarios de este nodo.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> agregado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)">
      <summary>Quita el nodo secundario especificado.</summary>
      <param name="oldChild">
        <see cref="T:System.Xml.XmlNode" /> que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> quitado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Reemplaza el nodo secundario especificado con el nuevo nodo secundario especificado.</summary>
      <param name="newChild">El nuevo <see cref="T:System.Xml.XmlNode" /> secundario.</param>
      <param name="oldChild">Objeto <see cref="T:System.Xml.XmlNode" /> que se va a reemplazar.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.  
  
<paramref name="oldChild" /> no es un nodo secundario de este nodo.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> reemplazado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlAttribute.BaseURI">
      <summary>Obtiene el Identificador de recursos uniforme (URI) del nodo.</summary>
      <returns>Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base. Los nodos de atributo tienen el mismo identificador URI base que el elemento al que pertenecen. Si un nodo de atributo no pertenece a ningún elemento, <see langword="BaseURI" /> devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerText">
      <summary>Establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns>Valores concatenados del nodo y de todos sus nodos secundarios. Para nodos de atributo, esta propiedad tiene la misma funcionalidad que la propiedad <see cref="P:System.Xml.XmlAttribute.Value" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.InnerXml">
      <summary>Establece el valor del atributo.</summary>
      <exception cref="T:System.Xml.XmlException">El código XML especificado al establecer esta propiedad no es correcto.</exception>
      <returns>Valor del atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Nombre del nodo de atributo sin prefijo. En el ejemplo siguiente &lt; , libro BK: Genre = ' novela ' &gt; , el <see langword="LocalName" /> del atributo es <see langword="genre" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Nombre completo del nodo de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NamespaceURI">
      <summary>Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns>Identificador URI de espacio de nombres de este nodo. Si no se da al atributo un espacio de nombres explícitamente, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>El tipo de nodo de los nodos <see langword="XmlAttribute" /> es XmlNodeType.Attribute.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerDocument">
      <summary>Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns>Un documento XML al que este nodo pertenece.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.OwnerElement">
      <summary>Obtiene el <see cref="T:System.Xml.XmlElement" /> al que pertenece el atributo.</summary>
      <returns>
        <see langword="XmlElement" /> al que pertenece el atributo o <see langword="null" /> si este atributo no forma parte de un <see langword="XmlElement" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.ParentNode">
      <summary>Obtiene el nodo principal de este nodo. Para nodos <see langword="XmlAttribute" />, esta propiedad devuelve siempre <see langword="null" />.</summary>
      <returns>Para nodos <see langword="XmlAttribute" />, esta propiedad devuelve siempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Prefix">
      <summary>Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <exception cref="T:System.ArgumentException">Este nodo es de sólo lectura.</exception>
      <exception cref="T:System.Xml.XmlException">El prefijo especificado contiene un carácter no válido.  
  
El prefijo especificado tiene un formato incorrecto.  
  
El URI del espacio de nombres de este nodo es <see langword="null" />.  
  
El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de "http://www.w3.org/XML/1998/namespace".  
  
Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".  
  
Este nodo es un atributo y su nombre completo es "xmlns" [espacios de nombres].</exception>
      <returns>Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.SchemaInfo">
      <summary>Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Specified">
      <summary>Obtiene un valor que indica si el valor de atributo se estableció explícitamente.</summary>
      <returns>Es <see langword="true" /> si a este atributo se le dio explícitamente un valor en la instancia original del documento; en caso contrario, es <see langword="false" />. El valor <see langword="false" /> indica que el valor del atributo procedía de la DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlAttribute.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">El nodo es de sólo lectura y se llama a una operación de conjunto.</exception>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo:  Para nodos <see langword="XmlAttribute" />, esta propiedad es el valor de atributo.</returns>
    </member>
    <member name="T:System.Xml.XmlAttributeCollection">
      <summary>Representa una colección de atributos a la que se puede acceder por nombre o índice.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
      <summary>Inserta el atributo especificado como último nodo de la colección.</summary>
      <param name="node">Atributo que se va a insertar.</param>
      <exception cref="T:System.ArgumentException">Se creó <paramref name="node" /> a partir de un documento diferente que el que creó esta colección.</exception>
      <returns>
        <see langword="XmlAttribute" /> que se va a agregar a la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
      <summary>Copia todos los objetos <see cref="T:System.Xml.XmlAttribute" /> de esta colección en la matriz dada.</summary>
      <param name="array">Matriz que representa el destino de los objetos copiados de esta colección.</param>
      <param name="index">Índice de la matriz en que se inicia la copia.</param>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Inserta el atributo especificado inmediatamente después del atributo de referencia igualmente especificado.</summary>
      <param name="newNode">Atributo que se va a insertar.</param>
      <param name="refNode">Atributo de referencia. El parámetro <paramref name="newNode" /> se coloca detrás de <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException">Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección.</exception>
      <returns>
        <see langword="XmlAttribute" /> que se va a insertar en la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
      <summary>Inserta el atributo especificado inmediatamente delante del atributo de referencia especificado.</summary>
      <param name="newNode">Atributo que se va a insertar.</param>
      <param name="refNode">Atributo de referencia. El parámetro <paramref name="newNode" /> se coloca delante de <paramref name="refNode" />.</param>
      <exception cref="T:System.ArgumentException">Se creó <paramref name="newNode" /> a partir de un documento diferente al que creó esta colección. O <paramref name="refNode" /> no es un miembro de esta colección.</exception>
      <returns>
        <see langword="XmlAttribute" /> que se va a insertar en la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
      <summary>Inserta el atributo especificado como primer nodo de la colección.</summary>
      <param name="node">Atributo que se va a insertar.</param>
      <returns>
        <see langword="XmlAttribute" /> agregado a la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)">
      <summary>Quita el atributo especificado de la colección.</summary>
      <param name="node">Atributo que se va a quitar.</param>
      <returns>Nodo que se ha quitado o <see langword="null" /> si no se encuentra en la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAll">
      <summary>Quita todos los atributos de la colección.</summary>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
      <summary>Quita de la colección el atributo correspondiente al índice especificado.</summary>
      <param name="i">Índice del nodo que se va a quitar. El primer nodo tiene el índice 0.</param>
      <returns>Devuelve <see langword="null" /> si no hay ningún atributo en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
      <summary>Agrega un objeto <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node">Nodo de atributo que se almacenará en la colección. Posteriormente se podrá obtener acceso al nodo utilizando el nombre del nodo en cuestión. Si ya hay un nodo con ese nombre en la colección, se reemplazará por el nuevo; en caso contrario, el nodo se agregará al final de la colección.</param>
      <exception cref="T:System.ArgumentException">Se creó <paramref name="node" /> a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó esta colección.  
  
Esta <see langword="XmlAttributeCollection" /> es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> es un <see cref="T:System.Xml.XmlAttribute" /> que, a su vez, es un atributo de otro objeto <see cref="T:System.Xml.XmlElement" />. Para volver a utilizar atributos en otros elementos, hay que duplicar los objetos <see langword="XmlAttribute" /> que se deseen volver a utilizar.</exception>
      <returns>Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá el nodo agregado.</returns>
    </member>
    <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)" />.</summary>
      <param name="array">Matriz que representa el destino de los objetos copiados de esta colección.</param>
      <param name="index">Índice de la matriz en que se inicia la copia.</param>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.Int32)">
      <summary>Obtiene el atributo que tiene el índice especificado.</summary>
      <param name="i">Índice del atributo.</param>
      <exception cref="T:System.IndexOutOfRangeException">El índice a pasándose está fuera del intervalo.</exception>
      <returns>Atributo que se encuentra en el índice especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
      <summary>Obtiene el atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Atributo con el nombre especificado. Si el atributo no existe, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
      <summary>Obtiene el atributo que tiene el nombre local e Identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>El atributo con el nombre local y el URI de espacio de nombres especificados. Si el atributo no existe, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count" />.</summary>
      <returns>Un <see langword="int" /> que contiene el recuento de los atributos.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized" />.</summary>
      <returns>
        <see langword="true" /> Si la colección está sincronizada.</returns>
    </member>
    <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Para obtener una descripción de este miembro, vea <see cref="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot" />.</summary>
      <returns>
        <see cref="T:System.Object" />Que es la raíz de la colección.</returns>
    </member>
    <member name="T:System.Xml.XmlCDataSection">
      <summary>Representa una sección CDATA.</summary>
    </member>
    <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCDataSection" />.</summary>
      <param name="data">Objeto <see cref="T:System.String" /> que contiene los datos de caracteres.</param>
      <param name="doc">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos CDATA no tienen elementos secundarios, con independencia del valor del parámetro, el nodo clonado incluirá siempre el contenido de los datos.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlCDataSection.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlCDataSection.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>En el caso de nodos CDATA, el nombre local es <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>En el caso de nodos CDATA, el nombre es <see langword="#cdata-section" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Tipo de nodo. En el caso de nodos CDATA, el valor es XmlNodeType.CDATA.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.ParentNode">
      <summary>Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns>
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlCDataSection.PreviousText">
      <summary>Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns>Devuelve <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="T:System.Xml.XmlCharacterData">
      <summary>Proporciona métodos de manipulación de texto que usan varias clases.</summary>
    </member>
    <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlCharacterData" />.</summary>
      <param name="data">Cadena que contiene datos de caracteres que se van a agregar a un documento.</param>
      <param name="doc">
        <see cref="T:System.Xml.XmlDocument" /> que va a contener los datos de caracteres.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.AppendData(System.String)">
      <summary>Anexa la cadena especificada al final de los datos de caracteres del nodo.</summary>
      <param name="strData">Cadena que se va a insertar en la cadena existente.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>Quita un intervalo de caracteres del nodo.</summary>
      <param name="offset">Posición dentro de la cadena donde se va a iniciar la eliminación.</param>
      <param name="count">Número de caracteres que se va a eliminar.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.InsertData(System.Int32,System.String)">
      <summary>Inserta la cadena especificada en el desplazamiento de caracteres especificado.</summary>
      <param name="offset">Posición dentro de la cadena donde se van a insertar los datos de cadena proporcionados.</param>
      <param name="strData">Datos de cadena que se van a insertar en la cadena existente.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>Reemplaza el número de caracteres especificado, empezando en el desplazamiento especificado, por la cadena especificada.</summary>
      <param name="offset">Posición dentro de la cadena donde se va a iniciar la sustitución.</param>
      <param name="count">Número de caracteres que se va a reemplazar.</param>
      <param name="strData">Datos nuevos que reemplazan a los datos de cadena antiguos.</param>
    </member>
    <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
      <summary>Recupera una subcadena de la cadena completa en el intervalo especificado.</summary>
      <param name="offset">Posición dentro de la cadena donde se va a iniciar la recuperación. Un desplazamiento de cero indica que el punto inicial es el principio de los datos.</param>
      <param name="count">Número de caracteres que se va a recuperar.</param>
      <returns>Subcadena que corresponde al intervalo especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Data">
      <summary>Contiene los datos del nodo.</summary>
      <returns>Datos del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.InnerText">
      <summary>Obtiene o establece los valores concatenados del nodo y todos su nodos secundarios.</summary>
      <returns>Valores concatenados del nodo y todos su nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Length">
      <summary>Obtiene la longitud de los datos en caracteres.</summary>
      <returns>Longitud en caracteres de la cadena de la propiedad <see cref="P:System.Xml.XmlCharacterData.Data" />. La longitud puede ser cero; es decir, los nodos CharacterData pueden estar vacíos.</returns>
    </member>
    <member name="P:System.Xml.XmlCharacterData.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">El nodo es de sólo lectura.</exception>
      <returns>Valor del nodo.</returns>
    </member>
    <member name="T:System.Xml.XmlComment">
      <summary>Representa el contenido de un comentario XML.</summary>
    </member>
    <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlComment" />.</summary>
      <param name="comment">Contenido del elemento de comentario.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos Comment no tienen elementos secundarios, el nodo clonado incluye siempre el contenido del texto, con independencia del valor del parámetro.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos de comentario no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlComment.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlComment.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para los nodos de comentarios, el valor es <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para los nodos de comentarios, el valor es <see langword="#comment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlComment.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para los nodos de comentarios, el valor es XmlNodeType.Comment.</returns>
    </member>
    <member name="T:System.Xml.XmlConvert">
      <summary>Codifica y descodifica nombres XML y proporciona métodos de conversión entre tipos de Common Language Runtime y tipos de lenguajes de definición de esquema XML (XSD). Cuando se convierten tipos de datos, los valores devueltos no dependen de la configuración regional.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlConvert" />.</summary>
    </member>
    <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
      <summary>Descodifica un nombre. Este método hace lo contrario que los métodos <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> y <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />.</summary>
      <param name="name">Nombre que se va a transformar.</param>
      <returns>Nombre descodificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
      <summary>Convierte el nombre en un nombre XML local válido.</summary>
      <param name="name">Nombre que se va a codificar.</param>
      <returns>Nombre codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
      <summary>Convierte el nombre en un nombre XML válido.</summary>
      <param name="name">Nombre que se va a convertir.</param>
      <returns>Nombre con los caracteres no válidos reemplazados por una cadena de escape.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
      <summary>Comprueba que el nombre es válido de acuerdo con la especificación XML.</summary>
      <param name="name">Nombre que se va a codificar.</param>
      <returns>Nombre codificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un tipo de carácter distinto de dos puntos válido.</summary>
      <param name="ch">Carácter que se va a comprobar que no sea un carácter distinto de dos puntos.</param>
      <returns>
        <see langword="true" />, si el carácter es un tipo de carácter válido (pero no de dos puntos); de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)">
      <summary>Devuelve la instancia de carácter pasada si el carácter del argumento es un carácter de identificador público válido; en caso contrario, <see langword="null" />.</summary>
      <param name="ch">Objeto <see cref="T:System.Char" /> que se va a validar.</param>
      <returns>Carácter pasado, si se trata de un carácter de id. público válido; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un tipo Start Name Character válido.</summary>
      <param name="ch">Carácter que se va a validar.</param>
      <returns>
        <see langword="true" /> si el carácter es un tipo Start Name Character válido; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un carácter de espacio en blanco XML válido.</summary>
      <param name="ch">Carácter que se va a validar.</param>
      <returns>
        <see langword="true" />, si el carácter pasado es uno de espacio en blanco XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlChar(System.Char)">
      <summary>Comprueba si el carácter pasado es un carácter XML válido.</summary>
      <param name="ch">Carácter que se va a validar.</param>
      <returns>
        <see langword="true" />, si el carácter pasado es uno de XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)">
      <summary>Comprueba si el par de caracteres suplentes pasado es un carácter XML válido.</summary>
      <param name="lowChar">Carácter suplente que se va a validar.</param>
      <param name="highChar">Carácter suplente que se va a validar.</param>
      <returns>
        <see langword="true" />, si el par de caracteres suplente pasado es uno de XML válido; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Boolean" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no representa un valor <see langword="Boolean" />.</exception>
      <returns>Valor <see langword="Boolean" />; es decir, <see langword="true" /> o <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Byte" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Byte.MinValue" /> o mayor que <see cref="F:System.Byte.MaxValue" />.</exception>
      <returns>Equivalente <see langword="Byte" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Char" /> equivalente.</summary>
      <param name="s">Cadena que contiene un carácter único que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">El valor del parámetro <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">El parámetro <paramref name="s" /> contiene más de un carácter.</exception>
      <returns>
        <see langword="Char" /> que representa el carácter único.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> es una cadena vacía o no tiene el formato correcto.</exception>
      <returns>Equivalente <see langword="DateTime" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <param name="format">Estructura de formato que se va a aplicar al <see langword="DateTime" /> convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos. La cadena se valida comparándola con este formato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> es String.Empty 
o bien 
 <paramref name="s" /> no contiene ninguna fecha ni hora que se correspondan con <paramref name="format" />.</exception>
      <returns>Equivalente <see langword="DateTime" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.DateTime" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <param name="formats">Matriz que contiene las estructuras de formato que se van a aplicar al <see langword="DateTime" /> convertido. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o un elemento de <paramref name="formats" /> es String.Empty 
o bien 
 <paramref name="s" /> no contiene una fecha y hora que se correspondan con ninguno de los elementos de <paramref name="formats" />.</exception>
      <returns>Equivalente <see langword="DateTime" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convierte <see cref="T:System.String" /> en <see cref="T:System.DateTime" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <param name="s">Valor <see cref="T:System.String" /> que se va a convertir.</param>
      <param name="dateTimeOption">Uno de los valores de la enumeración que especifican si la fecha debe convertirse a la hora local o mantenerse como hora universal coordinada (UTC), en el caso de que se trate de una fecha de UTC.</param>
      <exception cref="T:System.NullReferenceException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dateTimeOption" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> es una cadena vacía o su formato no es válido.</exception>
      <returns>
        <see cref="T:System.DateTime" /> equivalente de la <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Cadena que se va a convertir.  
  
 Nota La cadena debe ajustarse a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El argumento pasado a este método está fuera del intervalo de valores permitidos. Para obtener información sobre los valores permitidos, vea <see cref="T:System.DateTimeOffset" />.</exception>
      <exception cref="T:System.FormatException">El argumento pasado a este método no se ajusta a un subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</exception>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <param name="format">Formato desde el que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML. La cadena <paramref name="s" /> se valida comparándola con este formato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> o <paramref name="format" /> es una cadena vacía o no tiene el formato especificado.</exception>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
      <summary>Convierte la <see cref="T:System.String" /> proporcionada en un equivalente de <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <param name="formats">Matriz de formatos a partir de los cuales puede convertirse <paramref name="s" />. Cada formato de <paramref name="formats" /> puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML. La cadena <paramref name="s" /> se valida comparándola con uno de estos formatos.</param>
      <returns>Equivalente de <see cref="T:System.DateTimeOffset" /> de la cadena proporcionada.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Decimal" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Decimal.MinValue" /> o mayor que <see cref="F:System.Decimal.MaxValue" />.</exception>
      <returns>Equivalente <see langword="Decimal" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Double" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Double.MinValue" /> o mayor que <see cref="F:System.Double.MaxValue" />.</exception>
      <returns>Equivalente <see cref="T:System.Double" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Guid" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <returns>Equivalente <see langword="Guid" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int16" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int16.MinValue" /> o mayor que <see cref="F:System.Int16.MaxValue" />.</exception>
      <returns>
        <see cref="T:System.Int16" /> equivalente de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int32" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int32.MinValue" /> o mayor que <see cref="F:System.Int32.MaxValue" />.</exception>
      <returns>
        <see cref="T:System.Int32" /> equivalente de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Int64" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Int64.MinValue" /> o mayor que <see cref="F:System.Int64.MaxValue" />.</exception>
      <returns>
        <see cref="T:System.Int64" /> equivalente de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.SByte" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.SByte.MinValue" /> o mayor que <see cref="F:System.SByte.MaxValue" />.</exception>
      <returns>
        <see langword="SByte" /> equivalente de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.Single" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.Single.MinValue" /> o mayor que <see cref="F:System.Single.MaxValue" />.</exception>
      <returns>Equivalente <see cref="T:System.Single" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
      <summary>Convierte la clase <see cref="T:System.Boolean" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="Boolean" />; es decir, "true" o "false".</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
      <summary>Convierte la clase <see cref="T:System.Byte" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="Byte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
      <summary>Convierte la clase <see cref="T:System.Char" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="Char" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
      <summary>Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="DateTime" /> con el formato yyyy-MM-ddTHH:mm:ss donde "T" es una constante literal.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
      <summary>Convierte la clase <see cref="T:System.DateTime" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <param name="format">Estructura de formato que define cómo se muestra la cadena convertida. Entre los formatos válidos se incluyen "yyyy-MM-ddTHH:mm:sszzzzzz" y sus subconjuntos.</param>
      <returns>Representación de cadena de <see langword="DateTime" /> en el formato especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
      <summary>Convierte <see cref="T:System.DateTime" /> en <see cref="T:System.String" /> mediante el <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> especificado.</summary>
      <param name="value">Valor <see cref="T:System.DateTime" /> que se va a convertir.</param>
      <param name="dateTimeOption">Uno de los valores de <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> que especifica cómo tratar el valor <see cref="T:System.DateTime" />.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="dateTimeOption" /> no es válido.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="value" /> o <paramref name="dateTimeOption" /> es <see langword="null" />.</exception>
      <returns>
        <see cref="T:System.String" /> equivalente de la <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
      <summary>Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" />.</summary>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> que va a convertirse.</param>
      <returns>Representación de tipo <see cref="T:System.String" /> del <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
      <summary>Convierte el <see cref="T:System.DateTimeOffset" /> proporcionado en una <see cref="T:System.String" /> con el formato especificado.</summary>
      <param name="value">
        <see cref="T:System.DateTimeOffset" /> que va a convertirse.</param>
      <param name="format">Formato al que se convierte <paramref name="s" />. El parámetro de formato puede ser cualquier subconjunto de la recomendación del Consorcio W3C relativa al tipo XML dateTime. Para obtener más información, consulte la sección dateTime de la especificación del esquema XML.</param>
      <returns>Representación <see cref="T:System.String" /> con el formato especificado del <see cref="T:System.DateTimeOffset" /> proporcionado.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
      <summary>Convierte la clase <see cref="T:System.Decimal" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
      <summary>Convierte la clase <see cref="T:System.Double" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
      <summary>Convierte la clase <see cref="T:System.Guid" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="Guid" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
      <summary>Convierte la clase <see cref="T:System.Int16" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.Int16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
      <summary>Convierte la clase <see cref="T:System.Int32" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
      <summary>Convierte la clase <see cref="T:System.Int64" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
      <summary>Convierte la clase <see cref="T:System.SByte" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="SByte" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
      <summary>Convierte la clase <see cref="T:System.Single" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.Single" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
      <summary>Convierte la clase <see cref="T:System.TimeSpan" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see langword="TimeSpan" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
      <summary>Convierte la clase <see cref="T:System.UInt16" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.UInt16" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
      <summary>Convierte la clase <see cref="T:System.UInt32" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.UInt32" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
      <summary>Convierte la clase <see cref="T:System.UInt64" /> en una clase <see cref="T:System.String" />.</summary>
      <param name="value">Valor que se va a convertir.</param>
      <returns>Representación de cadena de <see cref="T:System.UInt64" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.TimeSpan" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir. El formato de cadena debe cumplir la recomendación sobre la duración del Consorcio W3C "XML Schema Part 2: Datatypes".</param>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto para representar un valor <see langword="TimeSpan" />.</exception>
      <returns>Equivalente <see langword="TimeSpan" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt16" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt16.MinValue" /> o mayor que <see cref="F:System.UInt16.MaxValue" />.</exception>
      <returns>Equivalente <see cref="T:System.UInt16" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt32" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt32.MinValue" /> o mayor que <see cref="F:System.UInt32.MaxValue" />.</exception>
      <returns>Equivalente <see cref="T:System.UInt32" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
      <summary>Convierte el <see cref="T:System.String" /> en un <see cref="T:System.UInt64" /> equivalente.</summary>
      <param name="s">Cadena que se va a convertir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="s" /> es <see langword="null" />.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="s" /> no tiene el formato correcto.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="s" /> representa un número menor que <see cref="F:System.UInt64.MinValue" /> o mayor que <see cref="F:System.UInt64.MaxValue" />.</exception>
      <returns>Equivalente <see cref="T:System.UInt64" /> de la cadena.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
      <summary>Comprueba que el nombre sea válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C.</summary>
      <param name="name">Nombre que se va a comprobar.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> no es un nombre XML válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" /> o String.Empty.</exception>
      <returns>Nombre, si es un nombre XML válido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
      <summary>Comprueba que el nombre sea un <see langword="NCName" /> válido de acuerdo con la recomendación sobre el lenguaje de marcado extensible del Consorcio W3C. <see langword="NCName" /> es un nombre que no puede contener un carácter de dos puntos.</summary>
      <param name="name">Nombre que se va a comprobar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" /> o <c>String.Empty</c>.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="name" /> no es un nombre distinto de dos puntos válido.</exception>
      <returns>Nombre, si es un nombre NCName válido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
      <summary>Comprueba que la cadena sea un elemento NMTOKEN válido de acuerdo con la recomendación del Consorcio W3C "XML Schema Part 2: Datatypes" (Parte 2 del esquema XML: tipos de datos).</summary>
      <param name="name">La cadena que desea comprobar.</param>
      <exception cref="T:System.Xml.XmlException">La cadena no es un símbolo (token) de nombre válido.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <returns>Token del nombre, si es un NMTOKEN válido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
      <summary>Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de identificadores públicos válidos.</summary>
      <param name="publicId">Objeto <see cref="T:System.String" /> que contiene el Id. que se va a validar.</param>
      <returns>Cadena pasada si todos los caracteres del argumento son caracteres de identificadores públicos válidos.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
      <summary>Comprueba que la cadena es un símbolo (token) válido según la recomendación "XML Schema Part 2: Datatypes" del esquema XML del Consorcio W3C.</summary>
      <param name="token">Valor de cadena que desea comprobar.</param>
      <exception cref="T:System.Xml.XmlException">El valor de cadena no es un símbolo (token) válido.</exception>
      <returns>Símbolo, si es un token válido.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
      <summary>Devuelve la instancia de cadena pasada si todos los caracteres del argumento de cadena son caracteres de espacio en blanco válidos.</summary>
      <param name="content">Objeto <see cref="T:System.String" /> que se va a comprobar.</param>
      <returns>Instancia de la cadena pasada si todos los caracteres del argumento de la cadena son caracteres de espacio en blanco válidos; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
      <summary>Devuelve la cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos, en caso contrario se produce una <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</summary>
      <param name="content">
        <see cref="T:System.String" /> que contiene los caracteres que se van a comprobar.</param>
      <returns>Cadena que se pasa si todos los caracteres y pares de caracteres suplentes de un argumento de la cadena son caracteres XML válidos. En caso contrario, se produce una excepción <see langword="XmlException" /> con información sobre el primer carácter no válido encontrado.</returns>
    </member>
    <member name="T:System.Xml.XmlDateTimeSerializationMode">
      <summary>Especifica cómo tratar el valor de tiempo al realizar una conversión entre una cadena y <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Local">
      <summary>Se trata como hora local. Si el objeto <see cref="T:System.DateTime" /> representa la hora universal coordinada (UTC), se convierte a la hora local.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.RoundtripKind">
      <summary>La información de la zona horaria se debe conservar al realizar la conversión.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Unspecified">
      <summary>Se trata como hora local si <see cref="T:System.DateTime" /> se convierte en cadena. Si una cadena se está convirtiendo a <see cref="T:System.DateTime" />, conviértala a una hora local si se especifica una zona horaria.</summary>
    </member>
    <member name="F:System.Xml.XmlDateTimeSerializationMode.Utc">
      <summary>Se trata como UTC. Si el objeto <see cref="T:System.DateTime" /> representa una hora local, se convierte en UTC.</summary>
    </member>
    <member name="T:System.Xml.XmlDeclaration">
      <summary>Representa el nodo de la declaración XML &lt;?xml version='1.0'...?&gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDeclaration" />.</summary>
      <param name="version">Versión de XML; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Version" />.</param>
      <param name="encoding">Esquema de la codificación; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Encoding" />.</param>
      <param name="standalone">Indica si el documento XML depende de una DTD externa; vea la propiedad <see cref="P:System.Xml.XmlDeclaration.Standalone" />.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Dado que los nodos <see langword="XmlDeclaration" /> no tienen elementos secundarios, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Debido a que los nodos <see langword="XmlDeclaration" /> no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDeclaration.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Encoding">
      <summary>Obtiene o establece el nivel de codificación del documento XML.</summary>
      <returns>El nombre de codificación de caracteres válidos. Los nombres de codificación de caracteres que presentan mayor compatibilidad en documentos XML son los siguientes:  
  
 <list type="table"><listheader><term> Category</term><description> Nombres de codificación</description></listheader><item><term> Unicode</term><description> UTF-8, UTF-16</description></item><item><term> ISO 10646</term><description> ISO-10646-UCS-2, ISO-10646-UCS-4</description></item><item><term> ISO 8859</term><description> ISO-8859-n (donde "n" es un dígito de 1 a 9)</description></item><item><term> JIS X-0208-1997</term><description> ISO-2022-JP, Shift_JIS, EUC-JP</description></item></list>  

 Este valor es opcional. Si no se establece un valor, esta propiedad devuelve String.Empty.  
  
 Si no se incluye un atributo de codificación, se supone la codificación UTF-8 cuando el documento se escribe o se guarda.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.InnerText">
      <summary>Obtiene o establece los valores concatenados de <see langword="XmlDeclaration" />.</summary>
      <returns>Los valores concatenados de <see langword="XmlDeclaration" /> (es decir, todo entre <c> &lt; ? XML</c> y <c>? &gt; </c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlDeclaration" />, el nombre local es <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>En el caso de nodos <see langword="XmlDeclaration" />, el nombre es <see langword="xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>En el caso de nodos <see langword="XmlDeclaration" />, este valor es XmlNodeType.XmlDeclaration.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Standalone">
      <summary>Obtiene o establece el valor del atributo independiente.</summary>
      <returns>Los valores válidos son <see langword="yes" /> si todas las declaraciones de entidad necesarias para el documento XML se encuentran en el documento o <see langword="no" /> si se necesita una definición de tipo de documento (DTD) externa. Si no existe un atributo independiente en la declaración XML, estas propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Value">
      <summary>Obtiene o establece el valor de <see langword="XmlDeclaration" />.</summary>
      <returns>El contenido de <see langword="XmlDeclaration" /> (es decir, todo entre <c> &lt; ? XML</c> y <c>? &gt; </c>).</returns>
    </member>
    <member name="P:System.Xml.XmlDeclaration.Version">
      <summary>Obtiene la versión XML del documento.</summary>
      <returns>El valor es siempre <see langword="1.0" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocument">
      <summary>Representa un documento XML. Puede usar esta clase para cargar, validar, editar, agregar y posicionar el código XML en un documento.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanged">
      <summary>Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se modifica.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeChanging">
      <summary>Se produce cuando el <see cref="P:System.Xml.XmlNode.Value" /> de un nodo que pertenece a este documento se va a modificar.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserted">
      <summary>Se produce cuando un nodo que pertenece a este documento se ha insertado en otro nodo.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeInserting">
      <summary>Se produce cuando un nodo que pertenece a este documento se va a insertar en otro nodo.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoved">
      <summary>Se produce cuando un nodo que pertenece a este documento se ha quitado de su nodo primario.</summary>
    </member>
    <member name="E:System.Xml.XmlDocument.NodeRemoving">
      <summary>Se produce cuando un nodo que pertenece a este documento se va a quitar del documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlImplementation)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlDocument" /> con el objeto <see cref="T:System.Xml.XmlImplementation" /> especificado.</summary>
      <param name="imp">Objeto <see langword="XmlImplementation" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlDocument" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns>Nodo <see langword="XmlDocument" /> clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlAttribute" /> con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El <see cref="P:System.Xml.XmlNode.NamespaceURI" /> queda vacío, a menos que el prefijo sea un prefijo integrado conocido, como xmlns. En este caso, <see langword="NamespaceURI" /> tiene un valor de <c>http://www.w3.org/2000/xmlns/</c>.</param>
      <returns>Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlAttribute" /> con el nombre completo especificados y el <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Nombre completo del atributo. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás.</param>
      <param name="namespaceURI">URI del espacio de nombres del atributo. Si el nombre completo incluye un prefijo de xmlns, este parámetro debe ser <c>http://www.w3.org/2000/xmlns/</c>.</param>
      <returns>Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlAttribute" /> con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">Prefijo del atributo, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI del espacio de nombres del atributo, si lo tiene. String.Empty y <see langword="null" /> son equivalentes. Si <paramref name="prefix" /> es xmlns, este parámetro debe ser <c>http://www.w3.org/2000/xmlns/</c>; de lo contrario, se produce una excepción.</param>
      <returns>Nuevo objeto <see langword="XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlCDataSection" /> que contiene los datos especificados.</summary>
      <param name="data">Contenido del nuevo objeto <see langword="XmlCDataSection" />.</param>
      <returns>Nuevo objeto <see langword="XmlCDataSection" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlComment" /> que contiene los datos especificados.</summary>
      <param name="data">Contenido del nuevo objeto <see langword="XmlComment" />.</param>
      <returns>Nuevo objeto <see langword="XmlComment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
      <summary>Crea un atributo predeterminado con el prefijo, el nombre local y el identificador URI de espacio de nombres especificados.</summary>
      <param name="prefix">Prefijo del atributo, si lo tiene.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI del espacio de nombres del atributo, si lo tiene.</param>
      <returns>Nuevo objeto <see cref="T:System.Xml.XmlAttribute" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
      <summary>Crea una interfaz <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <returns>Nuevo objeto <see langword="XmlDocumentFragment" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>Devuelve un nuevo objeto <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Nombre del tipo de documento.</param>
      <param name="publicId">Identificador público del tipo de documento o <see langword="null" />. Puede especificar un URI público, así como un identificador de sistema para identificar la ubicación del subconjunto DTD externo.</param>
      <param name="systemId">Identificador del sistema del tipo de documento o <see langword="null" />. Especifica la dirección URL de la ubicación del archivo para el subconjunto DTD externo.</param>
      <param name="internalSubset">Subconjunto interno de la DTD del tipo de documento o <see langword="null" />.</param>
      <returns>Nuevo objeto <see langword="XmlDocumentType" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
      <summary>Crea un elemento con el nombre especificado.</summary>
      <param name="name">Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> refleja la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> refleja la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'.</param>
      <returns>Nuevo objeto <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlElement" /> con el nombre completo y el <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="qualifiedName">Nombre completo del elemento. Si el nombre contiene un carácter de dos puntos, la propiedad <see cref="P:System.Xml.XmlNode.Prefix" /> reflejará la parte del nombre que va delante del carácter de dos puntos y la propiedad <see cref="P:System.Xml.XmlDocument.LocalName" /> reflejará la parte que va detrás. El nombre completo no puede incluir un prefijo de 'xmlns'.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Nuevo objeto <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
      <summary>Crea un elemento con los <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="prefix">Prefijo del nuevo elemento, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <param name="localName">Nombre local del nuevo elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo elemento, si lo tiene. String.Empty y <see langword="null" /> son equivalentes.</param>
      <returns>Nuevo objeto <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlEntityReference" /> con el nombre especificado.</summary>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.ArgumentException">El nombre no es válido (por ejemplo, los nombres que empiezan por “#” no son válidos).</exception>
      <returns>Nuevo objeto <see langword="XmlEntityReference" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator">
      <summary>Crea un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento.</summary>
      <returns>Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
      <summary>Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para navegar por este documento colocado en <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node">
        <see cref="T:System.Xml.XmlNode" /> en el que se desea que el explorador se sitúe inicialmente.</param>
      <returns>Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlNode" /> con el tipo de nodo especificado, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</summary>
      <param name="nodeTypeString">Versión de cadena del <see cref="T:System.Xml.XmlNodeType" /> del nuevo nodo. Este parámetro debe ser uno de los valores de la tabla que figura más abajo.</param>
      <param name="name">Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <exception cref="T:System.ArgumentException">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre; o <paramref name="nodeTypeString" /> no es una de las cadenas enumeradas a continuación.</exception>
      <returns>Nuevo objeto <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlNode" /> con los <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type">
        <see langword="XmlNodeType" /> del nuevo nodo.</param>
      <param name="name">Nombre completo del nuevo nodo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes <see cref="P:System.Xml.XmlNode.Prefix" /> y <see cref="P:System.Xml.XmlDocument.LocalName" />.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <exception cref="T:System.ArgumentException">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre.</exception>
      <returns>Nuevo objeto <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlNode" /> con los <see cref="T:System.Xml.XmlNodeType" />, <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.Name" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="type">
        <see langword="XmlNodeType" /> del nuevo nodo.</param>
      <param name="prefix">Prefijo del nuevo nodo.</param>
      <param name="name">Nombre local del nuevo nodo.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo nodo.</param>
      <exception cref="T:System.ArgumentException">No se ha proporcionado el nombre y <see langword="XmlNodeType" /> requiere un nombre.</exception>
      <returns>Nuevo objeto <see langword="XmlNode" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
      <summary>Crea un <see cref="T:System.Xml.XmlProcessingInstruction" /> con el nombre y los datos especificados.</summary>
      <param name="target">Nombre de la instrucción de procesamiento.</param>
      <param name="data">Datos para la instrucción de procesamiento.</param>
      <returns>Nuevo objeto <see langword="XmlProcessingInstruction" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
      <summary>Crea un nodo <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="text">La cadena debe contener solo los caracteres siguientes:&amp;#20; &amp;#10; &amp;#13; y &amp;#9;</param>
      <returns>Nuevo nodo <see langword="XmlSignificantWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlText" />con el texto especificado.</summary>
      <param name="text">Texto del nodo Text.</param>
      <returns>Nuevo nodo <see langword="XmlText" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
      <summary>Crea un nodo <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="text">La cadena debe contener solo los caracteres siguientes:&amp;#20; &amp;#10; &amp;#13; y &amp;#9;</param>
      <returns>Nuevo nodo <see langword="XmlWhitespace" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
      <summary>Crea un nodo <see cref="T:System.Xml.XmlDeclaration" /> con los valores especificados.</summary>
      <param name="version">La versión debe ser "1.0".</param>
      <param name="encoding">Valor del atributo de codificación. Es la codificación que se usa cuando se guarda <see cref="T:System.Xml.XmlDocument" /> en un archivo o en un flujo; por tanto, se debe establecer en una cadena admitida por la clase <see cref="T:System.Text.Encoding" /> ya que, en caso contrario, <see cref="M:System.Xml.XmlDocument.Save(System.String)" /> produce un error. Si es <see langword="null" /> o String.Empty, el método <see langword="Save" /> no escribe un atributo de codificación en la declaración XML y, por tanto, se usa la codificación predeterminada, UTF-8.  
  
Nota: Si <see langword="XmlDocument" /> se guarda en <see cref="T:System.IO.TextWriter" /> o en <see cref="T:System.Xml.XmlTextWriter" />, se descartará este valor de codificación. En su lugar, se usa la codificación de <see langword="TextWriter" /> o de <see langword="XmlTextWriter" /> . De este modo se garantiza que el fragmento XML que se escribe se puede volver a leer usando la codificación correcta.</param>
      <param name="standalone">Este valor debe ser "yes" o "no". Si es <see langword="null" /> o String.Empty, el método <see langword="Save" /> no escribe un atributo independiente en la declaración XML.</param>
      <exception cref="T:System.ArgumentException">Los valores de <paramref name="version" /> o <paramref name="standalone" /> son algo diferentes de los especificados anteriormente.</exception>
      <returns>Nuevo nodo <see langword="XmlDeclaration" />.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
      <summary>Obtiene el <see cref="T:System.Xml.XmlElement" /> con el identificador especificado.</summary>
      <param name="elementId">Identificador de atributo con el que debe haber una coincidencia.</param>
      <returns>
        <see langword="XmlElement" /> con el identificador coincidente o <see langword="null" /> si no se encuentra un elemento coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.Name" /> especificado.</summary>
      <param name="name">Nombre completo que se va a hacer coincidir. Se compara con la propiedad <see langword="Name" /> del nodo coincidente. El valor especial "*" coincide con todas las etiquetas.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con <paramref name="name" />, se devolverá la colección vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlDocument.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localName">Nombre local que se va a hacer coincidir. El valor especial "*" coincide con todas las etiquetas.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres con el que debe haber una coincidencia.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. Si ningún nodo coincide con el <paramref name="localName" /> y <paramref name="namespaceURI" /> especificados, se devolverá la colección vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
      <summary>Importa un nodo de otro documento al documento actual.</summary>
      <param name="node">Nodo que se va a importar.</param>
      <param name="deep">
        <see langword="true" /> para producir un clon profundo; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">Llamar a este método en un tipo de nodo que no se pueden importar.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> que se importó.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
      <summary>Carga el documento XML desde el flujo especificado.</summary>
      <param name="inStream">Secuencia que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.Xml.XmlException">Hay un error de carga o de análisis en el archivo XML. En este caso, se genera una <see cref="T:System.IO.FileNotFoundException" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.IO.TextReader)">
      <summary>Carga el documento XML desde el <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="txtReader">
        <see langword="TextReader" /> que se usa para introducir los datos XML en el documento.</param>
      <exception cref="T:System.Xml.XmlException">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.String)">
      <summary>Carga el documento XML desde la dirección URL especificada.</summary>
      <param name="filename">Dirección URL del archivo que contiene el documento XML que se va a cargar. La dirección URL puede ser un archivo local o una dirección HTTP URL (una dirección web).</param>
      <exception cref="T:System.Xml.XmlException">Hay un error de carga o de análisis en el archivo XML. En este caso, se genera una <see cref="T:System.IO.FileNotFoundException" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="filename" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filename" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
      <exception cref="T:System.IO.IOException">Se produjo un error de E/S al abrir el archivo.</exception>
      <exception cref="T:System.UnauthorizedAccessException">
        <paramref name="filename" /> especificó un archivo que es de solo lectura.  
  
o bien 
Esta operación no es compatible con la plataforma actual.  
  
o bien 
 <paramref name="filename" /> especificó un directorio.  
  
o bien 
El llamador no dispone del permiso requerido.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encontró el archivo especificado en <paramref name="filename" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="filename" /> está en un formato no válido.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
      <summary>Carga el documento XML desde el <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">
        <see langword="XmlReader" /> que se usa para introducir los datos XML en el documento.</param>
      <exception cref="T:System.Xml.XmlException">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
      <summary>Carga el documento XML desde la cadena especificada.</summary>
      <param name="xml">Cadena que contiene el documento XML que se va a cargar.</param>
      <exception cref="T:System.Xml.XmlException">Hay un error de carga o de análisis en el archivo XML. En este caso, el documento permanece vacío.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
      <summary>Crea un objeto <see cref="T:System.Xml.XmlNode" /> tomando como base la información de <see cref="T:System.Xml.XmlReader" />. El lector debe estar situado en un nodo o en un atributo.</summary>
      <param name="reader">XML de origen.</param>
      <exception cref="T:System.NullReferenceException">El lector está situado en un tipo de nodo que no se traslada a un nodo DOM válido (por ejemplo, EndElement o EndEntity).</exception>
      <returns>Nuevo <see langword="XmlNode" /> o <see langword="null" /> si no hay más nodos.</returns>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
      <summary>Guarda el documento XML en el flujo especificado.</summary>
      <param name="outStream">Secuencia en la que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
      <summary>Guarda el documento XML en el <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="writer">
        <see langword="TextWriter" /> en el que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.String)">
      <summary>Guarda el documento XML en el archivo especificado. Si existe el archivo especificado, este método lo sobrescribe.</summary>
      <param name="filename">Ubicación del archivo donde se desea guardar el documento.</param>
      <exception cref="T:System.Xml.XmlException">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
      <summary>Guarda el documento XML en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
      <exception cref="T:System.Xml.XmlException">La operación no generarái un documento XML bien formado (por ejemplo, ningún documento duplicado o declaraciones XML duplicadas).</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)">
      <summary>Valida el objeto <see cref="T:System.Xml.XmlDocument" /> según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Se ha producido un evento de validación de esquema y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
      <summary>Valida el objeto <see cref="T:System.Xml.XmlNode" /> especificado según los esquemas del lenguaje de definición de esquemas XML (XSD) de la propiedad <see cref="P:System.Xml.XmlDocument.Schemas" />.</summary>
      <param name="validationEventHandler">Objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación de esquemas.</param>
      <param name="nodeToValidate">Objeto <see cref="T:System.Xml.XmlNode" /> creado a partir de un <see cref="T:System.Xml.XmlDocument" /> que se va a validar.</param>
      <exception cref="T:System.ArgumentException">El parámetro de objeto <see cref="T:System.Xml.XmlNode" /> no se creó a partir de un <see cref="T:System.Xml.XmlDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">El parámetro de objeto <see cref="T:System.Xml.XmlNode" /> no es un elemento, atributo, fragmento de documento ni el nodo raíz.</exception>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Se ha producido un evento de validación de esquema y no se ha especificado ningún objeto <see cref="T:System.Xml.Schema.ValidationEventHandler" />.</exception>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo <see langword="XmlDocument" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="xw">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo <see langword="XmlDocument" /> en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlDocument.BaseURI">
      <summary>Obtiene el identificador URI base del nodo actual.</summary>
      <returns>Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentElement">
      <summary>Obtiene el <see cref="T:System.Xml.XmlElement" /> raíz del documento.</summary>
      <returns>
        <see langword="XmlElement" /> que representa la raíz del árbol del documento XML. Si no hay raíz, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.DocumentType">
      <summary>Obtiene el nodo que contiene la declaración DOCTYPE.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> que contiene el DocumentType (declaración DOCTYPE).</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Implementation">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlImplementation" /> del documento actual.</summary>
      <returns>Objeto <see langword="XmlImplementation" /> del documento actual.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerText">
      <summary>Produce una <see cref="T:System.InvalidOperationException" /> en todos los casos.</summary>
      <exception cref="T:System.InvalidOperationException">En todos los casos.</exception>
      <returns>Valores del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.InnerXml">
      <summary>Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.Xml.XmlException">El código XML especificado al establecer esta propiedad no es correcto.</exception>
      <returns>Marcado de los nodos secundarios del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo actual es de solo lectura.</summary>
      <returns>Es <see langword="true" /> si el nodo actual es de solo lectura; en caso contrario, es <see langword="false" />. Los nodos <see langword="XmlDocument" /> siempre devuelven <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlDocument" />, el nombre local es #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para nodos <see langword="XmlDocument" />, el nombre es #document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NameTable">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns>
        <see langword="XmlNameTable" /> que permite obtener la versión subdivida de una cadena en el documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Tipo de nodo. Para los nodos <see langword="XmlDocument" />, este valor es XmlNodeType.Document.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.OwnerDocument">
      <summary>Obtiene el <see cref="T:System.Xml.XmlDocument" /> al que pertenece el nodo actual.</summary>
      <returns>Para nodos <see langword="XmlDocument" /> (<see cref="P:System.Xml.XmlDocument.NodeType" /> equivale a XmlNodeType.Document), esta propiedad devuelve siempre <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.ParentNode">
      <summary>Obtiene el nodo primario de este nodo, en los nodos que pueden tener nodos primarios.</summary>
      <returns>Siempre devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.PreserveWhitespace">
      <summary>Obtiene o establece un valor que indica si se va a conservar el espacio en blanco del contenido del elemento.</summary>
      <returns>
        <see langword="true" /> para conservar el espacio en blanco; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.SchemaInfo">
      <summary>Devuelve el conjunto de información posterior a la validación del esquema (PSVI, Post-Schema-Validation-Infoset) del nodo.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que representa el PSVI del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.Schemas">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> asociado a este objeto <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas XSD (lenguaje de definición de esquemas XML) asociado a este <see cref="T:System.Xml.XmlDocument" />; en caso contrario, un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío.</returns>
    </member>
    <member name="P:System.Xml.XmlDocument.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> para usarlo en la resolución de recursos externos.</summary>
      <exception cref="T:System.Xml.XmlException">Esta propiedad se establece en <see langword="null" /> y se encuentra una DTD o entidad externa.</exception>
      <returns>Objeto <see langword="XmlResolver" /> que se va a usar.  
  
En la versión 1.1 de .NET Framework, el llamador debe ser de confianza para especificar un <see langword="XmlResolver" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocumentFragment">
      <summary>Representa un objeto pequeño tamaño, que resulta útil para realizar operaciones de inserción de árboles.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocumentFragment" />.</summary>
      <param name="ownerDocument">El documento XML que es el origen del fragmento.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.InnerXml">
      <summary>Obtiene o establece el marcado que representa los nodos secundarios de este nodo.</summary>
      <exception cref="T:System.Xml.XmlException">El código XML especificado al establecer esta propiedad no es correcto.</exception>
      <returns>Marcado de los nodos secundarios de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlDocumentFragment" />, el nombre local es <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para <see langword="XmlDocumentFragment" />, el nombre es <see langword="#document-fragment" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para nodos <see langword="XmlDocumentFragment" />, este valor es XmlNodeType.DocumentFragment.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.OwnerDocument">
      <summary>Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns>
        <see langword="XmlDocument" /> al que pertenece este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentFragment.ParentNode">
      <summary>Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns>Elemento principal de este nodo.  
  
Para nodos <see langword="XmlDocumentFragment" />, esta propiedad siempre es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlDocumentType">
      <summary>Representa la declaración de tipos de documento.</summary>
    </member>
    <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlDocumentType" />.</summary>
      <param name="name">Nombre completo; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.Name" />.</param>
      <param name="publicId">Identificador público; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.PublicId" />.</param>
      <param name="systemId">Identificador del sistema; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.SystemId" />.</param>
      <param name="internalSubset">Subconjunto interno de la DTD; vea la propiedad <see cref="P:System.Xml.XmlDocumentType.InternalSubset" />.</param>
      <param name="doc">Documento primario.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de tipo de documento, el nodo clonado incluye siempre el subárbol, independientemente del valor del parámetro.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlDocumentType" />, este método no surte ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Entities">
      <summary>Obtiene la colección de nodos <see cref="T:System.Xml.XmlEntity" /> declarada en la declaración de tipos de documento.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos <see langword="XmlEntity" />. El <see langword="XmlNamedNodeMap" /> devuelto es de solo lectura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.InternalSubset">
      <summary>Obtiene el valor del subconjunto interno de DTD (definición de tipo de documento) de la declaración DOCTYPE.</summary>
      <returns>Subconjunto interno de la DTD en la declaración DOCTYPE. Si no hay subconjunto interno de la DTD, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns>
        <see langword="true" /> Si el nodo es de solo lectura; en caso contrario, <see langword="false" /> .  
  
Como los nodos DocumentType son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para nodos DocumentType, esta propiedad devuelve el nombre del tipo de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para nodos DocumentType, este valor es XmlNodeType.DocumentType.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.Notations">
      <summary>Obtiene la colección de nodos <see cref="T:System.Xml.XmlNotation" /> que está en la declaración de tipos de documento.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNamedNodeMap" /> que contiene los nodos <see langword="XmlNotation" />. El <see langword="XmlNamedNodeMap" /> devuelto es de solo lectura.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.PublicId">
      <summary>Obtiene el valor del identificador público de la declaración DOCTYPE.</summary>
      <returns>Identificador público de la declaración DOCTYPE. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlDocumentType.SystemId">
      <summary>Obtiene el valor del identificador de sistema de la declaración DOCTYPE.</summary>
      <returns>Identificador del sistema de la declaración DOCTYPE. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlElement">
      <summary>Representa un elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlElement" />.</summary>
      <param name="prefix">Prefijo del espacio de nombres; vea la propiedad <see cref="P:System.Xml.XmlElement.Prefix" />.</param>
      <param name="localName">Nombre local; vea la propiedad <see cref="P:System.Xml.XmlElement.LocalName" />.</param>
      <param name="namespaceURI">URI del espacio de nombres; vea la propiedad <see cref="P:System.Xml.XmlElement.NamespaceURI" />.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí (y sus atributos si el nodo es <see langword="XmlElement" />).</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
      <summary>Devuelve el valor del atributo con el nombre especificado.</summary>
      <param name="name">Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns>Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
      <summary>Devuelve el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo que se va a recuperar.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del atributo que se va a recuperar.</param>
      <returns>Valor del atributo especificado. Se devuelve una cadena vacía si no se encuentra un atributo coincidente o si el atributo no tiene un valor especificado o predeterminado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
      <summary>Devuelve el <see langword="XmlAttribute" /> con el nombre especificado.</summary>
      <param name="name">Nombre del atributo que se va a recuperar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns>
        <see langword="XmlAttribute" /> o <see langword="null" /> que se especifica si no se encuentra un atributo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
      <summary>Devuelve el <see cref="T:System.Xml.XmlAttribute" /> con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>
        <see langword="XmlAttribute" /> o <see langword="null" /> que se especifica si no se encuentra un atributo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.Name" /> especificado.</summary>
      <param name="name">Etiqueta de nombre que se va a comparar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente. El asterisco (*) es un valor especial que coincide con todas las etiquetas.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. La lista está vacía si no hay nodos coincidentes.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los elementos descendientes que coinciden con el <see cref="P:System.Xml.XmlElement.LocalName" /> y <see cref="P:System.Xml.XmlElement.NamespaceURI" /> especificados.</summary>
      <param name="localName">Nombre local que se va a hacer coincidir. El asterisco (*) es un valor especial que coincide con todas las etiquetas.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres que se va a hacer coincidir.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNodeList" /> que contiene una lista de todos los nodos coincidentes. La lista está vacía si no hay nodos coincidentes.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
      <summary>Determina si el nodo actual tiene un atributo con el nombre especificado.</summary>
      <param name="name">Nombre del atributo que se va a buscar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <returns>
        <see langword="true" /> si el nodo actual tiene el atributo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
      <summary>Determina si el nodo actual tiene un atributo con el nombre local y el identificador URI de espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo que se va a buscar.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del atributo que se va a buscar.</param>
      <returns>
        <see langword="true" /> si el nodo actual tiene el atributo especificado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAll">
      <summary>Quita todos los atributos especificados y los elementos secundarios del nodo actual. Los atributos predeterminados no se quitan.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAllAttributes">
      <summary>Quita todos los atributos especificados del elemento. Los atributos predeterminados no se quitan.</summary>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
      <summary>Quita un atributo por nombre.</summary>
      <param name="name">Nombre del atributo que se va a quitar. Es un nombre completo. Se compara con la propiedad <see langword="Name" /> del nodo coincidente.</param>
      <exception cref="T:System.ArgumentException">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
      <summary>Quita un atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado. (Si el atributo quitado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="localName">Nombre local del atributo que se va a quitar.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del atributo que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
      <summary>Quita el nodo de atributo con el índice especificado del elemento. (Si el atributo quitado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="i">Índice del nodo que se va a quitar. El primer nodo tiene el índice 0.</param>
      <returns>Nodo de atributo quitado o <see langword="null" /> si no hay ningún nodo en el índice especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
      <summary>Quita el <see cref="T:System.Xml.XmlAttribute" /> especificado mediante el nombre local y el identificador URI de espacio de nombres. (Si el atributo quitado tiene un valor predeterminado, se reemplaza inmediatamente).</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.ArgumentException">Este nodo es de sólo lectura.</exception>
      <returns>
        <see langword="XmlAttribute" /> que se ha quitado o <see langword="null" /> si <see langword="XmlElement" /> no tiene un nodo de atributo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)">
      <summary>Quita el objeto <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="oldAttr">Nodo <see langword="XmlAttribute" /> que se va a quitar. Si el atributo que se quita tiene un valor predeterminado, se reemplaza inmediatamente.</param>
      <exception cref="T:System.ArgumentException">Este nodo es de sólo lectura.</exception>
      <returns>
        <see langword="XmlAttribute" /> que se ha quitado o <see langword="null" /> si <paramref name="oldAttr" /> no es un nodo de atributo de <see langword="XmlElement" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
      <summary>Establece el valor del atributo con el nombre especificado.</summary>
      <param name="name">Nombre del atributo que se va a crear o modificar. Es un nombre completo. Si el nombre contiene un carácter de dos puntos, se analiza en los componentes de prefijo y nombre local.</param>
      <param name="value">Valor en que se va a establecer el atributo.</param>
      <exception cref="T:System.Xml.XmlException">El nombre especificado contiene un carácter no válido.</exception>
      <exception cref="T:System.ArgumentException">El nodo es de solo lectura.</exception>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
      <summary>Establece el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <param name="value">Valor en que se va a establecer el atributo.</param>
      <returns>Valor del atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
      <summary>Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>
        <see langword="XmlAttribute" /> que se va a agregar.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
      <summary>Agrega el <see cref="T:System.Xml.XmlAttribute" /> especificado.</summary>
      <param name="newAttr">Nodo <see langword="XmlAttribute" /> que se va a agregar a la colección de atributos de este elemento.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="newAttr" /> se creó a partir de un documento diferente del que creó este nodo. O este nodo es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="newAttr" /> ya es un atributo de otro objeto <see langword="XmlElement" />. Los nodos <see langword="XmlAttribute" /> se deben clonar explícitamente para volver a utilizarlos en otros objetos <see langword="XmlElement" />.</exception>
      <returns>Si el atributo reemplaza a un atributo existente del mismo nombre, se devolverá el <see langword="XmlAttribute" /> antiguo; en caso contrario, se devolverá <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlElement.Attributes">
      <summary>Obtiene una <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.</summary>
      <returns>
        <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene la lista de atributos de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.HasAttributes">
      <summary>Obtiene un valor <see langword="boolean" /> que indica si el nodo actual tiene atributos.</summary>
      <returns>
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerText">
      <summary>Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns>Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.InnerXml">
      <summary>Obtiene o establece el marcado que representa solo los nodos secundarios de este nodo.</summary>
      <exception cref="T:System.Xml.XmlException">El código XML especificado al establecer esta propiedad no es correcto.</exception>
      <returns>Marcado de los nodos secundarios de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.IsEmpty">
      <summary>Obtiene o establece el formato de la etiqueta del elemento.</summary>
      <returns>
        <see langword="true" />Si el elemento se va a serializar en el formato de etiqueta corto " &lt; Item/ &gt; "; <see langword="false" /> para el formato largo " &lt; Item &gt; &lt; /Item &gt; ".  
  
Si esta propiedad está establecida en <see langword="true" /> cuando se configura, se quitan los elementos secundarios del elemento y el elemento se serializa en el formato corto de etiqueta. Si está establecida en <see langword="false" />, se cambia el valor de la propiedad (independientemente de si el elemento tiene contenido); si el elemento está vacío, se serializa en el formato largo.  
  
Esta propiedad es una extensión de Microsoft para Document Object Model (DOM).</returns>
    </member>
    <member name="P:System.Xml.XmlElement.LocalName">
      <summary>Obtiene el nombre local del nodo actual.</summary>
      <returns>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es el libro del elemento &lt; BK: Book &gt; .</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Nombre completo del nodo. Para los nodos <see langword="XmlElement" />, este es el nombre de etiqueta del elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NamespaceURI">
      <summary>Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns>Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NextSibling">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este elemento.</summary>
      <returns>
        <see langword="XmlNode" /> inmediatamente siguiente a este elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Tipo de nodo. Para nodos <see langword="XmlElement" />, este valor es XmlNodeType.Element.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.OwnerDocument">
      <summary>Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns>Clase <see langword="XmlDocument" /> a la que pertenece este elemento.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.ParentNode">
      <summary>Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns>
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.Prefix">
      <summary>Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <exception cref="T:System.ArgumentException">Este nodo es de solo lectura</exception>
      <exception cref="T:System.Xml.XmlException">El prefijo especificado contiene un carácter no válido.  
  
El prefijo especificado tiene un formato incorrecto.  
  
El URI del espacio de nombres de este nodo es <see langword="null" />.  
  
El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de http://www.w3.org/XML/1998/namespace.</exception>
      <returns>Prefijo de espacio de nombres de este nodo. Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlElement.SchemaInfo">
      <summary>Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="T:System.Xml.XmlEntity">
      <summary>Representa una declaración de entidad, como &lt;!ENTITY... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlEntity.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo. Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <exception cref="T:System.InvalidOperationException">Los nodos de entidad no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlEntity" />, se produce una excepción.</exception>
      <returns>Copia del nodo <see cref="T:System.Xml.XmlNode" /> desde el que se llamó al método.</returns>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlEntity" />, este método no surte ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Para nodos <see langword="XmlEntity" />, este método no surte ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlEntity.BaseURI">
      <summary>Obtiene el identificador uniforme de recursos (URI) del nodo actual.</summary>
      <returns>Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerText">
      <summary>Obtiene valores concatenados del nodo de la entidad y de todos su nodos secundarios.</summary>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer la propiedad.</exception>
      <returns>Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.InnerXml">
      <summary>Obtiene el marcado que representa los nodos secundarios de este nodo.</summary>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer la propiedad.</exception>
      <returns>Para nodos <see langword="XmlEntity" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns>
        <see langword="true" /> Si el nodo es de solo lectura; en caso contrario, <see langword="false" /> .  
  
Como los nodos <see langword="XmlEntity" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.LocalName">
      <summary>Obtiene el nombre del nodo sin el prefijo de espacio de nombres.</summary>
      <returns>Para nodos <see langword="XmlEntity" />, esta propiedad devuelve el nombre de la entidad.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.Name">
      <summary>Obtiene el nombre del nodo.</summary>
      <returns>Nombre de la entidad.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NodeType">
      <summary>Obtiene el tipo del nodo.</summary>
      <returns>Tipo de nodo. Para nodos <see langword="XmlEntity" />, el valor es XmlNodeType.Entity.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.NotationName">
      <summary>Obtiene el nombre del atributo opcional NDATA en la declaración de la entidad.</summary>
      <returns>Nombre del atributo NDATA. Si no hay un atributo NDATA, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.OuterXml">
      <summary>Obtiene el marcado que representa este nodo y todos sus nodos secundarios.</summary>
      <returns>Para nodos <see langword="XmlEntity" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.PublicId">
      <summary>Obtiene el valor del identificador público de la declaración de entidad.</summary>
      <returns>Identificador público de la entidad. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntity.SystemId">
      <summary>Obtiene el valor del identificador de sistema de la declaración de entidad.</summary>
      <returns>Identificador de sistema de la entidad. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlEntityReference">
      <summary>Representa un nodo de referencia a entidad.</summary>
    </member>
    <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlEntityReference" />.</summary>
      <param name="name">Nombre de la referencia de entidad; vea la propiedad <see cref="P:System.Xml.XmlEntityReference.Name" />.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para nodos <see langword="XmlEntityReference" />, este método devuelve siempre un nodo de referencia a entidad sin nodos secundarios. El texto de reemplazo se establece al insertar el nodo en otro primario.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlEntityReference.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlEntityReference.BaseURI">
      <summary>Obtiene el identificador uniforme de recursos (URI) del nodo actual.</summary>
      <returns>Ubicación desde la que se cargó el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns>Es <see langword="true" /> si el nodo es de sólo lectura; en caso contrario, es <see langword="false" />.  
  
Como los nodos <see langword="XmlEntityReference" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlEntityReference" />, esta propiedad devuelve el nombre de la entidad a la que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Name">
      <summary>Obtiene el nombre del nodo.</summary>
      <returns>Nombre de la entidad a la que se hace referencia.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.NodeType">
      <summary>Obtiene el tipo del nodo.</summary>
      <returns>Tipo de nodo. Para nodos <see langword="XmlEntityReference" />, el valor es XmlNodeType.EntityReference.</returns>
    </member>
    <member name="P:System.Xml.XmlEntityReference.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">El nodo es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException">Establecer la propiedad.</exception>
      <returns>Valor del nodo. Para nodos <see langword="XmlEntityReference" />, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlException">
      <summary>Devuelve información detallada sobre la última excepción.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlException" />.</summary>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XmlException" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" /> que contiene la información de contexto.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlException" /> con el mensaje de error especificado.</summary>
      <param name="message">Descripción de error.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlException" />.</summary>
      <param name="message">Descripción de la condición de error.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que inició <see langword="XmlException" />, en caso de que exista. Este valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.XmlException.#ctor(System.String,System.Exception,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlException" /> con el mensaje, la excepción interna, el número de línea y la posición de línea especificados.</summary>
      <param name="message">Descripción de error.</param>
      <param name="innerException">Excepción que es la causa de la excepción actual. Este valor puede ser <see langword="null" />.</param>
      <param name="lineNumber">Número de línea que indica dónde se produjo el error.</param>
      <param name="linePosition">Posición de línea que indica dónde se produjo el error.</param>
    </member>
    <member name="M:System.Xml.XmlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas las propiedades <see langword="XmlException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.XmlException.LineNumber">
      <summary>Obtiene el número de línea que indica dónde se produjo el error. Los números de línea empiezan por 1.</summary>
      <returns>Número de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.LinePosition">
      <summary>Obtiene la posición de línea que indica dónde se produjo el error. La posición de línea empieza en 1.</summary>
      <returns>Posición de línea que indica dónde se produjo el error.</returns>
    </member>
    <member name="P:System.Xml.XmlException.Message">
      <summary>Obtiene un mensaje que describe la excepción actual.</summary>
      <returns>Mensaje de error que explica el motivo de la excepción.</returns>
    </member>
    <member name="P:System.Xml.XmlException.SourceUri">
      <summary>Obtiene la ubicación del archivo XML.</summary>
      <returns>Identificador URI de origen de los datos XML. Si no hay ningún URI de origen, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlImplementation">
      <summary>Define el contexto para un conjunto de objetos <see cref="T:System.Xml.XmlDocument" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" />.</summary>
    </member>
    <member name="M:System.Xml.XmlImplementation.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlImplementation" /> con el <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">Un objeto <see cref="T:System.Xml.XmlNameTable" />.</param>
    </member>
    <member name="M:System.Xml.XmlImplementation.CreateDocument">
      <summary>Crea un nuevo <see cref="T:System.Xml.XmlDocument" />.</summary>
      <returns>El nuevo objeto <see langword="XmlDocument" /> .</returns>
    </member>
    <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
      <summary>Comprueba si la implementación de DOM (Document Object Model) incluye una característica específica.</summary>
      <param name="strFeature">Nombre del paquete de la característica que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas.</param>
      <param name="strVersion">Se trata del número de versión del nombre del paquete que se va a comprobar. Si no se ha especificado la versión (<see langword="null" />), la compatibilidad con cualquier versión de la característica hace que el método devuelva <see langword="true" />.</param>
      <returns>Es <see langword="true" /> si la característica se implementa en la versión especificada; en caso contrario, es <see langword="false" />.  
  
La siguiente tabla muestra las combinaciones que hacen que <see langword="HasFeature" /> devuelva <see langword="true" />.  
  
 <list type="table"><listheader><term> strFeature</term><description> strVersion</description></listheader><item><term> XML</term><description> 1,0</description></item><item><term> XML</term><description> 2.0</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlLinkedNode">
      <summary>Obtiene el nodo inmediatamente anterior o siguiente a éste.</summary>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.NextSibling">
      <summary>Obtiene el nodo inmediatamente siguiente a éste.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> inmediatamente siguiente a este nodo o <see langword="null" /> en caso de que uno no exista.</returns>
    </member>
    <member name="P:System.Xml.XmlLinkedNode.PreviousSibling">
      <summary>Obtiene el nodo inmediatamente anterior a éste.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> anterior o <see langword="null" /> en caso de que uno no exista.</returns>
    </member>
    <member name="T:System.Xml.XmlNamedNodeMap">
      <summary>Representa una colección de nodos a la que se puede acceder por nombre o índice.</summary>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
      <summary>Proporciona funcionalidad para la iteración de estilo "foreach" en la colección de nodos de <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Objeto enumerador.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
      <summary>Recupera un objeto <see cref="T:System.Xml.XmlNode" /> especificado por el nombre.</summary>
      <param name="name">Nombre completo del nodo que se va a recuperar. Se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente.</param>
      <returns>
        <see langword="XmlNode" /> con el nombre especificado o <see langword="null" /> si no se encuentra ningún nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
      <summary>Recupera un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.</summary>
      <param name="localName">Nombre local del nodo que se va a recuperar.</param>
      <param name="namespaceURI">El Identificador uniforme de recursos (Identificador URI) del espacio de nombres del nodo a recuperar.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> con el nombre local y el identificador URI de espacio de nombres coincidentes o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
      <summary>Recupera el nodo que se encuentra en el índice especificado en <see langword="XmlNamedNodeMap" />.</summary>
      <param name="index">Posición de índice del nodo que se va a recuperar de <see langword="XmlNamedNodeMap" />. El índice es de base cero, por lo que el índice del primer nodo es 0 y el del último nodo es <see cref="P:System.Xml.XmlNamedNodeMap.Count" /> - 1.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlNode" /> en el índice especificado. Si <paramref name="index" /> es menor que 0 o mayor o igual que la propiedad <see cref="P:System.Xml.XmlNamedNodeMap.Count" />, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
      <summary>Quita el nodo de <see langword="XmlNamedNodeMap" />.</summary>
      <param name="name">Nombre completo del nodo que se va a quitar. El nombre se compara con la propiedad <see cref="P:System.Xml.XmlNode.Name" /> del nodo coincidente.</param>
      <returns>
        <see langword="XmlNode" /> quitado de este <see langword="XmlNamedNodeMap" /> o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
      <summary>Quita un nodo con <see cref="P:System.Xml.XmlNode.LocalName" /> y <see cref="P:System.Xml.XmlNode.NamespaceURI" /> coincidentes.</summary>
      <param name="localName">Nombre local del nodo que se va a quitar.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nodo que se va a quitar.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> quitado o <see langword="null" /> si no se ha encontrado un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
      <summary>Agrega un <see cref="T:System.Xml.XmlNode" /> mediante su propiedad <see cref="P:System.Xml.XmlNode.Name" />.</summary>
      <param name="node">
        <see langword="XmlNode" /> que se almacenará en <see langword="XmlNamedNodeMap" />. Si ya hay un nodo con ese nombre en el mapa, se reemplazará por el nuevo.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> se creó a partir de un <see cref="T:System.Xml.XmlDocument" /> distinto al que creó <see langword="XmlNamedNodeMap" />, o <see langword="XmlNamedNodeMap" /> es de sólo lectura.</exception>
      <returns>Si <paramref name="node" /> reemplaza a un nodo existente con el mismo nombre, se devolverá el nodo antiguo; en caso contrario, se devolverá <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNamedNodeMap.Count">
      <summary>Obtiene el número de nodos de <see langword="XmlNamedNodeMap" />.</summary>
      <returns>Número de nodos.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceManager">
      <summary>Resuelve, agrega y quita los espacios de nombres de una colección, y proporciona administración de ámbito de estos espacios de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNamespaceManager" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nameTable">Objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException">El constructor recibe <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
      <summary>Agrega el espacio de nombres especificado a la colección.</summary>
      <param name="prefix">Prefijo que se va a asociar al espacio de nombres que se agrega. Use String.Empty para agregar un espacio de nombres predeterminado.  
  
 Nota Si se usa <see cref="T:System.Xml.XmlNamespaceManager" /> para resolver los espacios de nombres en una expresión XPath (XML Path Language), se ha de especificar un prefijo. Si una expresión XPath no incluye un prefijo, se supone que el identificador uniforme de recursos (URI) del espacio de nombres corresponde al espacio de nombres vacío. Para obtener más información sobre las expresiones XPath y <see cref="T:System.Xml.XmlNamespaceManager" />, vea los métodos <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" /> y <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />.</param>
      <param name="uri">Espacio de nombres que se va a agregar.</param>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="prefix" /> es "xml" o "xmlns".</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
      <summary>Devuelve un enumerador que se utilizará para recorrer en iteración los espacios de nombres de <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> que contiene los prefijos almacenados por <see cref="T:System.Xml.XmlNamespaceManager" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtiene una colección de nombres de espacios de nombres por clave de prefijo que se puede usar para enumerar los espacios de nombres que actualmente se encuentran en el ámbito.</summary>
      <param name="scope">Valor de enumeración que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns>Colección de espacios de nombres y prefijos que se encuentran actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
      <summary>Obtiene un valor que indica si el prefijo proporcionado tiene un espacio de nombres definido para el ámbito que se ha insertado.</summary>
      <param name="prefix">Prefijo del espacio de nombres que se desea buscar.</param>
      <returns>Es <see langword="true" /> si se ha definido un espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
      <summary>Obtiene el identificador URI de espacio de nombres del prefijo especificado.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase String.Empty.</param>
      <returns>Identificador URI de espacio de nombres de <paramref name="prefix" /> o <see langword="null" /> si no se ha asignado un espacio de nombres. La cadena devuelta está subdividida.  
  
Para obtener más información sobre cadenas subdivididas, vea la clase <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
      <summary>Busca el prefijo declarado para el identificador URI de espacio de nombres especificado.</summary>
      <param name="uri">Espacio de nombres que se va a resolver para el prefijo.</param>
      <returns>Prefijo que coincide. Si no hay ningún prefijo asignado, el método devuelve String.Empty. Si se proporciona un valor nulo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PopScope">
      <summary>Extrae un ámbito de espacio de nombres de la pila.</summary>
      <returns>Es <see langword="true" /> si quedan ámbitos de espacio de nombres en la pila; es <see langword="false" /> si no quedan espacios de nombres para extraer.</returns>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.PushScope">
      <summary>Inserta un ámbito de espacio de nombres en la pila.</summary>
    </member>
    <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
      <summary>Quita el espacio de nombres dado del prefijo especificado.</summary>
      <param name="prefix">Prefijo del espacio de nombres.</param>
      <param name="uri">Espacio de nombres que se va a quitar del prefijo especificado. El espacio de nombres quitado pertenece al ámbito de espacio de nombres actual. Los espacios de nombres que no pertenecen al ámbito actual no se tienen en cuenta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="prefix" /> o <paramref name="uri" /> es <see langword="null" />.</exception>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
      <summary>Obtiene el identificador URI de espacio de nombres del espacio de nombres predeterminado.</summary>
      <returns>Identificador URI de espacio de nombres para el espacio de nombres predeterminado o una cadena vacía si no hay espacio de nombres predeterminado.</returns>
    </member>
    <member name="P:System.Xml.XmlNamespaceManager.NameTable">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> asociado a este objeto.</summary>
      <returns>
        <see cref="T:System.Xml.XmlNameTable" /> que usa este objeto.</returns>
    </member>
    <member name="T:System.Xml.XmlNamespaceScope">
      <summary>Define el ámbito de espacio de nombres.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.All">
      <summary>Todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres xmlns:xml que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.ExcludeXml">
      <summary>Todos los espacios de nombres definidos en el ámbito del nodo actual, excluido el espacio de nombres xmlns:xml, que siempre se declara implícitamente. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XmlNamespaceScope.Local">
      <summary>Todos los espacios de nombres definidos localmente en el nodo actual.</summary>
    </member>
    <member name="T:System.Xml.XmlNameTable">
      <summary>Tabla de objetos en forma de cadena subdividida.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNameTable" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</summary>
      <param name="array">Matriz de caracteres que contiene el nombre que se va a agregar.</param>
      <param name="offset">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="length">Número de caracteres del nombre.</param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  
  
o bien 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
o bien 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
      <returns>Cadena subdividida nueva o cadena existente si ya hay una. Si la longitud es cero, se devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Add(System.String)">
      <summary>Cuando se invalida en una clase derivada, subdivide la cadena especificada y la agrega a <see langword="XmlNameTable" />.</summary>
      <param name="array">Nombre que se va a agregar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <returns>Cadena subdividida nueva o cadena existente si ya hay una.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, se obtiene la cadena subdividida que contiene los mismos caracteres que el intervalo de caracteres especificado en una matriz determinada.</summary>
      <param name="array">Matriz de caracteres que contiene el nombre que se va a buscar.</param>
      <param name="offset">Índice de base cero de la matriz que especifica el primer carácter del nombre.</param>
      <param name="length">Número de caracteres del nombre.</param>
      <exception cref="T:System.IndexOutOfRangeException">0 &gt; <paramref name="offset" />  
  
o bien 
 <paramref name="offset" /> &gt;= <paramref name="array" />.Length 
o bien 
 <paramref name="length" /> &gt; <paramref name="array" />.Length 
Las condiciones anteriores no hacen que se produzca una excepción si <paramref name="length" /> = 0.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> &lt; 0.</exception>
      <returns>Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía. Si <paramref name="length" /> es cero, se devuelve String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNameTable.Get(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene la cadena subdividida que contiene el mismo valor que la cadena especificada.</summary>
      <param name="array">Nombre que se va a buscar.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> es <see langword="null" />.</exception>
      <returns>Cadena subdividida o <see langword="null" /> si la cadena no se ha subdividido todavía.</returns>
    </member>
    <member name="T:System.Xml.XmlNode">
      <summary>Representa un único nodo en el documento XML.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
      <summary>Agrega el nodo especificado al final de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild">Nodo que se va a agregar. Todo el contenido del nodo que se va a agregar se pasa a la ubicación especificada.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>Nodo agregado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Clone">
      <summary>Crea un duplicado de este nodo.</summary>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
      <summary>Crea un duplicado del nodo, cuando se invalida en una clase derivada.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <exception cref="T:System.InvalidOperationException">Llamar a este método en un tipo de nodo que no se puede clonar.</exception>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.CreateNavigator">
      <summary>Crea un objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para desplazarse por este objeto.</summary>
      <returns>Un objeto <see langword="XPathNavigator" /> utilizado para navegar por el nodo. <see langword="XPathNavigator" /> se sitúa en el nodo desde el que se llamó al método. No se sitúa en la raíz del documento.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetEnumerator">
      <summary>Obtiene un enumerador que recorre en iteración los nodos secundarios del nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que puede utilizarse para recorrer en iteración los nodos secundarios en el nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
      <summary>Busca la declaración xmlns más cercana para el prefijo especificado que está en el ámbito del nodo actual y devuelve el identificador URI de espacio de nombres de la declaración.</summary>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns>Identificador URI de espacio de nombres del prefijo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
      <summary>Busca la declaración xmlns más cercana para el identificador URI de espacio de nombres especificado que está en el ámbito del nodo actual y devuelve el prefijo definido en la declaración.</summary>
      <param name="namespaceURI">Identificador URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns>Prefijo del identificador URI de espacio de nombres especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserta el nodo especificado inmediatamente detrás del nodo de referencia igualmente especificado.</summary>
      <param name="newChild">Nodo que se va a insertar.</param>
      <param name="refChild">Nodo de referencia. Parámetro <paramref name="newChild" /> se coloca detrás de <paramref name="refChild" />.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>Nodo que se va a insertar.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Inserta el nodo especificado inmediatamente antes del nodo de referencia igualmente especificado.</summary>
      <param name="newChild">Nodo que se va a insertar.</param>
      <param name="refChild">Nodo de referencia. <paramref name="newChild" /> se coloca delante de este nodo.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
<paramref name="refChild" /> no es un nodo secundario de este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>Nodo que se va a insertar.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Normalize">
      <summary>Hace que todos los nodos XmlText de toda la profundidad del subárbol situado bajo XmlNode aparezcan de forma "normal", de modo que solo el marcado (es decir, las etiquetas, comentarios, instrucciones de procesamiento, secciones CDATA y referencias a entidades) separa los nodos XmlText, es decir, no hay nodos XmlText adyacentes.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
      <summary>Agrega el nodo especificado al principio de la lista de nodos secundarios de este nodo.</summary>
      <param name="newChild">Nodo que se va a agregar. Todo el contenido del nodo que se va a agregar se pasa a la ubicación especificada.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.</exception>
      <returns>Nodo agregado.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveAll">
      <summary>Quita todos los atributos y nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
      <summary>Quita el nodo secundario especificado.</summary>
      <param name="oldChild">Nodo que se va a quitar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="oldChild" /> no es un nodo secundario de este nodo. O este nodo es de sólo lectura.</exception>
      <returns>Nodo que se quita.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
      <summary>Reemplaza el nodo secundario <paramref name="oldChild" /> por el nodo <paramref name="newChild" />.</summary>
      <param name="newChild">Nuevo nodo que se va a agregar a la lista de nodos secundarios.</param>
      <param name="oldChild">Nodo que se va a reemplazar en la lista.</param>
      <exception cref="T:System.InvalidOperationException">Este nodo es de un tipo que no permite nodos secundarios del tipo del nodo <paramref name="newChild" />.  
  
<paramref name="newChild" /> es un nodo antecesor de este nodo.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="newChild" /> se creó a partir de un documento diferente del que creó este nodo.  
  
Este nodo es de sólo lectura.  
  
<paramref name="oldChild" /> no es un nodo secundario de este nodo.</exception>
      <returns>Nodo que se reemplaza.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
      <summary>Selecciona una lista de nodos que coinciden con la expresión XPath.</summary>
      <param name="xpath">Expresión XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath contiene un prefijo. Vea ejemplos de XPath.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Selecciona una lista de nodos que coinciden con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</summary>
      <param name="xpath">Expresión XPath. Vea ejemplos de XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath contiene un prefijo que no está definido en <see langword="XmlNamespaceManager" />.</exception>
      <returns>
        <see cref="T:System.Xml.XmlNodeList" /> que contiene una colección de nodos que coinciden con la consulta XPath.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
      <summary>Selecciona el primer <see langword="XmlNode" /> que coincide con la expresión XPath.</summary>
      <param name="xpath">Expresión XPath. Vea ejemplos de XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath contiene un prefijo.</exception>
      <returns>Primer <see langword="XmlNode" /> que coincide con la consulta XPath o <see langword="null" /> si no se encuentra un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Selecciona el primer <see langword="XmlNode" /> que coincide con la expresión XPath. Los prefijos encontrados en la expresión XPath se resuelven utilizando el <see cref="T:System.Xml.XmlNamespaceManager" /> proporcionado.</summary>
      <param name="xpath">Expresión XPath. Vea ejemplos de XPath.</param>
      <param name="nsmgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se utiliza para resolver los espacios de nombres de los prefijos de la expresión XPath.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath contiene un prefijo que no está definido en <see langword="XmlNamespaceManager" />.</exception>
      <returns>Primer <see langword="XmlNode" /> que coincide con la consulta XPath o <see langword="null" /> si no se encuentra un nodo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
      <summary>Comprueba si la implementación de DOM incluye una característica específica.</summary>
      <param name="feature">Nombre del paquete de la característica que se va a comprobar. Este nombre no distingue entre mayúsculas y minúsculas.</param>
      <param name="version">Número de versión del nombre del paquete que se va a comprobar. Si no se especifica la versión (null), la compatibilidad con cualquier versión de la característica hará que el método devuelva True.</param>
      <returns>Es <see langword="true" /> si la característica se implementa en la versión especificada; en caso contrario, es <see langword="false" />. En la tabla siguiente se describen las combinaciones que devuelven <see langword="true" />.  
  
 <list type="table"><listheader><term> Característica</term><description> Versión</description></listheader><item><term> XML</term><description> 1,0</description></item><item><term> XML</term><description> 2.0</description></item></list></returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.GetEnumerator" />.</summary>
      <returns>Un enumerador de la colección.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.XmlNode.Clone" />.</summary>
      <returns>Copia del nodo desde el que se llamó.</returns>
    </member>
    <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado, cuando se reemplaza en una clase derivada.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo actual en el <see cref="T:System.Xml.XmlWriter" /> especificado, cuando se reemplaza en una clase derivada.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlNode.Attributes">
      <summary>Obtiene un objeto <see cref="T:System.Xml.XmlAttributeCollection" /> que contiene los atributos de este nodo.</summary>
      <returns>
        <see langword="XmlAttributeCollection" /> que contiene los atributos de este nodo.  
  
Si el nodo es del tipo XmlNodeType.Element, se devuelven sus atributos. En caso contrario, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.BaseURI">
      <summary>Obtiene el identificador URI base del nodo actual.</summary>
      <returns>Ubicación desde la que se cargó el nodo o String.Empty si el nodo no tiene un identificador URI base.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ChildNodes">
      <summary>Obtiene todos los nodos secundarios del nodo.</summary>
      <returns>Objeto que contiene todos los nodos secundarios del nodo.  
  
Si no hay ningún nodo secundario, esta propiedad devuelve un objeto <see cref="T:System.Xml.XmlNodeList" /> vacío.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.FirstChild">
      <summary>Obtiene el primer nodo secundario del nodo.</summary>
      <returns>Primer nodo secundario del nodo. Si no hay nodo secundario, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.HasChildNodes">
      <summary>Obtiene un valor que indica si este nodo tiene nodos secundarios.</summary>
      <returns>Es <see langword="true" /> si el nodo tiene nodos secundarios; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerText">
      <summary>Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns>Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.InnerXml">
      <summary>Obtiene o establece el marcado que representa solo los nodos secundarios de este nodo.</summary>
      <exception cref="T:System.InvalidOperationException">Establecer esta propiedad en un nodo que no puede tener secundarios.</exception>
      <exception cref="T:System.Xml.XmlException">El código XML especificado al establecer esta propiedad no es correcto.</exception>
      <returns>Marcado de los nodos secundarios de este nodo.  
  
 <block subset="none" type="note"><para><see langword="InnerXml" /> no devuelve los atributos predeterminados.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNode.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns>
        <see langword="true" /> Si el nodo es de solo lectura; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String)">
      <summary>Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.Name" /> especificado.</summary>
      <param name="name">Nombre completo del elemento que se va a recuperar.</param>
      <returns>Primer <see cref="T:System.Xml.XmlElement" /> que coincide con el nombre especificado. Devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ninguna coincidencia.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
      <summary>Obtiene el primer elemento secundario con el <see cref="P:System.Xml.XmlNode.LocalName" /> y el <see cref="P:System.Xml.XmlNode.NamespaceURI" /> especificados.</summary>
      <param name="localname">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <returns>Primer <see cref="T:System.Xml.XmlElement" /> con los parámetros <paramref name="localname" /> y <paramref name="ns" /> coincidentes. Devuelve una referencia nula (<see langword="Nothing" /> en Visual Basic) si no hay ninguna coincidencia.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LastChild">
      <summary>Obtiene el último nodo secundario del nodo.</summary>
      <returns>Último nodo secundario del nodo. Si no hay nodo secundario, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.LocalName">
      <summary>Obtiene el nombre local del nodo, cuando se invalida en una clase derivada.</summary>
      <returns>Nombre del nodo sin prefijo. Por ejemplo, <see langword="LocalName" /> es el libro del elemento &lt; BK: Book &gt; .  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
 <list type="table"><listheader><term> Tipo</term><description> Nombre</description></listheader><item><term> Atributo</term><description> Nombre local del atributo.</description></item><item><term> CDATA</term><description> #cdata-section</description></item><item><term> Comentario</term><description> #comment</description></item><item><term> Documento</term><description> #document</description></item><item><term> DocumentFragment</term><description> #document-fragment</description></item><item><term> DocumentType</term><description> Nombre del tipo de documento.</description></item><item><term> Elemento</term><description> Nombre local del elemento.</description></item><item><term> Entidad</term><description> Nombre de la entidad.</description></item><item><term> EntityReference</term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term> Notación</term><description> Nombre de la notación.</description></item><item><term> ProcessingInstruction</term><description> Destino de la instrucción de procesamiento.</description></item><item><term> Texto</term><description> #text</description></item><item><term> Espacio en blanco</term><description> #whitespace</description></item><item><term> SignificantWhitespace</term><description> #significant-whitespace</description></item><item><term> XmlDeclaration</term><description> #xml-declaration</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.Name">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo.</summary>
      <returns>Nombre completo del nodo. El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
 <list type="table"><listheader><term> Tipo</term><description> Nombre</description></listheader><item><term> Atributo</term><description> Nombre completo del atributo.</description></item><item><term> CDATA</term><description> #cdata-section</description></item><item><term> Comentario</term><description> #comment</description></item><item><term> Documento</term><description> #document</description></item><item><term> DocumentFragment</term><description> #document-fragment</description></item><item><term> DocumentType</term><description> Nombre del tipo de documento.</description></item><item><term> Elemento</term><description> Nombre completo del elemento.</description></item><item><term> Entidad</term><description> Nombre de la entidad.</description></item><item><term> EntityReference</term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term> Notación</term><description> Nombre de la notación.</description></item><item><term> ProcessingInstruction</term><description> Destino de la instrucción de procesamiento.</description></item><item><term> Texto</term><description> #text</description></item><item><term> Espacio en blanco</term><description> #whitespace</description></item><item><term> SignificantWhitespace</term><description> #significant-whitespace</description></item><item><term> XmlDeclaration</term><description> #xml-declaration</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.NamespaceURI">
      <summary>Obtiene el identificador URI de espacio de nombres de este nodo.</summary>
      <returns>Identificador URI de espacio de nombres de este nodo. Si no hay identificador URI de espacio de nombres, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NextSibling">
      <summary>Obtiene el nodo inmediatamente siguiente a éste.</summary>
      <returns>La clase <see langword="XmlNode" /> siguiente. Si no hay nodo siguiente, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.NodeType">
      <summary>Obtiene el tipo del nodo actual cuando se invalida en una clase derivada.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.OuterXml">
      <summary>Obtiene el marcado que contiene este nodo y todos sus nodos secundarios.</summary>
      <returns>Marcado que contiene este nodo y todos sus nodos secundarios.  
  
 <block subset="none" type="note"><para><see langword="OuterXml" /> no devuelve los atributos predeterminados.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNode.OwnerDocument">
      <summary>Obtiene la clase <see cref="T:System.Xml.XmlDocument" /> a la que pertenece este nodo.</summary>
      <returns>
        <see cref="T:System.Xml.XmlDocument" /> al que pertenece este nodo.  
  
Si el nodo es <see cref="T:System.Xml.XmlDocument" /> (NodeType es igual que XmlNodeType.Document), esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.ParentNode">
      <summary>Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns>
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.  
  
 <list type="table"><listheader><term> NodeType</term><description> Valor devuelto de ParentNode</description></listheader><item><term> Attribute, Document, DocumentFragment, Entity, Notation</term><description> Devuelve <see langword="null" />; estos nodos no tienen nodos primarios.</description></item><item><term> CDATA</term><description> Devuelve el elemento o la referencia a entidad que contiene la sección CDATA.</description></item><item><term> Comentario</term><description> Devuelve el elemento, la referencia a entidad, el tipo de documento o el documento que contiene el comentario.</description></item><item><term> DocumentType</term><description> Devuelve el nodo de documento.</description></item><item><term> Elemento</term><description> Devuelve el nodo primario del elemento. Si el elemento es el nodo raíz del árbol, el nodo primario es el nodo de documento.</description></item><item><term> EntityReference</term><description> Devuelve el elemento, el atributo o la referencia a entidad que contiene la referencia a entidad.</description></item><item><term> ProcessingInstruction</term><description> Devuelve el documento, el elemento, el tipo de documento o la referencia a entidad que contiene la instrucción de procesamiento.</description></item><item><term> Texto</term><description> Devuelve el elemento primario, el atributo o la referencia a entidad que contiene el nodo de texto.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNode.Prefix">
      <summary>Obtiene o establece el prefijo de espacio de nombres de este nodo.</summary>
      <exception cref="T:System.ArgumentException">Este nodo es de sólo lectura.</exception>
      <exception cref="T:System.Xml.XmlException">El prefijo especificado contiene un carácter no válido.  
  
 El prefijo especificado tiene un formato incorrecto.  
  
 El prefijo especificado es "xml" y el URI del espacio de nombres de este nodo es diferente de "http://www.w3.org/XML/1998/namespace".  
  
 Este nodo es un atributo, el prefijo especificado es "xmlns" y su identificador URI de espacio de nombres no es "http://www.w3.org/2000/xmlns/".  
  
 Este nodo es un atributo y su nombre completo es "xmlns".</exception>
      <returns>Prefijo de espacio de nombres de este nodo. Por ejemplo, <see langword="Prefix" /> es BK para el elemento &lt; BK: Book &gt; . Si no hay prefijo, esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousSibling">
      <summary>Obtiene el nodo inmediatamente anterior a éste.</summary>
      <returns>
        <see langword="XmlNode" /> anterior. Si no hay nodo anterior, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.PreviousText">
      <summary>Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns>Devuelve <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.SchemaInfo">
      <summary>Obtiene el conjunto de información posterior a la validación del esquema que se ha asignado a este nodo como resultado de dicha validación.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene el conjunto de información posterior a la validación del esquema de este nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlNode.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">Establecer el valor de un nodo que es de sólo lectura.</exception>
      <exception cref="T:System.InvalidOperationException">Establecer el valor de un nodo que no debe tener un valor, por ejemplo, un nodo Element.</exception>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. 
 <list type="table"><listheader><term> Tipo</term><description> Value</description></listheader><item><term> Atributo</term><description> El valor del atributo.</description></item><item><term> CDATASection</term><description> Contenido de la sección CDATA.</description></item><item><term> Comentario</term><description> El contenido del comentario.</description></item><item><term> Documento</term><description><see langword="null" />.</description></item><item><term> DocumentFragment</term><description><see langword="null" />.</description></item><item><term> DocumentType</term><description><see langword="null" />.</description></item><item><term> Elemento</term><description><see langword="null" />. Puede usar las propiedades <see cref="P:System.Xml.XmlElement.InnerText" /> o <see cref="P:System.Xml.XmlElement.InnerXml" /> para obtener acceso al valor del nodo element.</description></item><item><term> Entidad</term><description><see langword="null" />.</description></item><item><term> EntityReference</term><description><see langword="null" />.</description></item><item><term> Notación</term><description><see langword="null" />.</description></item><item><term> ProcessingInstruction</term><description> Todo el contenido, salvo el destino.</description></item><item><term> Texto</term><description> El contenido del nodo de texto.</description></item><item><term> SignificantWhitespace</term><description> Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones.</description></item><item><term> Espacio en blanco</term><description> Caracteres de espacio en blanco. El espacio en blanco puede estar formado por uno o varios caracteres de espacio, retornos de carro, saltos de línea o tabulaciones.</description></item><item><term> XmlDeclaration</term><description> El contenido de la declaración (es decir, todo lo que hay entre &lt; ? XML y? &gt; ).</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedAction">
      <summary>Especifica el tipo de cambio de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Change">
      <summary>Se está modificando un valor de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Insert">
      <summary>Se está insertando un nodo en el árbol.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeChangedAction.Remove">
      <summary>Se está quitando un nodo del árbol.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventArgs">
      <summary>Proporciona datos para los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNodeChangedEventArgs" />.</summary>
      <param name="node">El <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="oldParent">El <see cref="T:System.Xml.XmlNode" /> primario anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="newParent">El nuevo <see cref="T:System.Xml.XmlNode" /> primario del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="oldValue">El valor anterior del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="newValue">El nuevo valor del <see cref="T:System.Xml.XmlNode" /> que generó el evento.</param>
      <param name="action">
        <see cref="T:System.Xml.XmlNodeChangedAction" />.</param>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Action">
      <summary>Obtiene un valor que indica qué tipo de evento de cambio de nodo se está produciendo.</summary>
      <returns>Uno de los valores de enumeración que describe el evento de cambio de nodo. El valor de <see langword="Action" /> no distingue el momento en que se produjo el evento (antes o después). Se pueden crear controladores de eventos independientes para controlar ambas instancias.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewParent">
      <summary>Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> tras finalizar la operación.</summary>
      <returns>Valor de <see langword="ParentNode" /> tras finalizar la operación. Esta propiedad devuelve <see langword="null" /> si se quita el nodo.  
  
 <block subset="none" type="note"><para>  
 Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.NewValue">
      <summary>Obtiene el nuevo valor del nodo.</summary>
      <returns>Nuevo valor del nodo. Esta propiedad devuelve <see langword="null" /> si el nodo no es ni un atributo ni un nodo de texto, o si se quita el nodo.  
  
Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="NewValue" /> devuelve el valor del nodo si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="NewValue" /> devuelve el valor actual del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.Node">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNode" /> que se agrega, se quita o se cambia.</summary>
      <returns>
        <see langword="XmlNode" /> que se agrega, se quita o se cambia; esta propiedad nunca devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldParent">
      <summary>Obtiene el valor de la propiedad <see cref="P:System.Xml.XmlNode.ParentNode" /> antes de que comience la operación.</summary>
      <returns>Valor de <see langword="ParentNode" /> antes de que comience la operación. Esta propiedad devuelve <see langword="null" /> si el nodo no tiene nodo primario.  
  
 <block subset="none" type="note"><para>  
 Para los nodos de atributo, esta propiedad devuelve <see cref="P:System.Xml.XmlAttribute.OwnerElement" />.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlNodeChangedEventArgs.OldValue">
      <summary>Obtiene el valor original del nodo.</summary>
      <returns>Valor original del nodo. Esta propiedad devuelve <see langword="null" /> si el nodo no es ni un atributo ni un nodo de texto, o si se inserta el nodo.  
  
Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see langword="OldValue" /> devuelve el valor actual del nodo que se reemplazará si el cambio tiene éxito. Si se llamó en un evento <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see langword="OldValue" /> devuelve el valor del nodo previo al cambio.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeChangedEventHandler">
      <summary>Representa el método que controla los eventos <see cref="E:System.Xml.XmlDocument.NodeChanged" />, <see cref="E:System.Xml.XmlDocument.NodeChanging" />, <see cref="E:System.Xml.XmlDocument.NodeInserted" />, <see cref="E:System.Xml.XmlDocument.NodeInserting" />, <see cref="E:System.Xml.XmlDocument.NodeRemoved" /> y <see cref="E:System.Xml.XmlDocument.NodeRemoving" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.Xml.XmlNodeChangedEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.XmlNodeList">
      <summary>Representa una colección ordenada de nodos.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.GetEnumerator">
      <summary>Obtiene un enumerador que recorre en iteración la colección de nodos.</summary>
      <returns>Enumerador utilizado para recorrer en iteración la colección de nodos.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
      <summary>Recupera un nodo en el índice especificado.</summary>
      <param name="index">Índice de base cero en la lista de nodos.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> con el índice especificad en la colección. Si <paramref name="index" /> es mayor o igual que el número de nodos de la lista, esto devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeList.PrivateDisposeNodeList">
      <summary>Desecha los recursos de la lista de nodos de forma privada.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeList.System#IDisposable#Dispose">
      <summary>Libera todos los recursos que utiliza la clase <see cref="T:System.Xml.XmlNodeList" />.</summary>
    </member>
    <member name="P:System.Xml.XmlNodeList.Count">
      <summary>Obtiene el número de nodos de <see langword="XmlNodeList" />.</summary>
      <returns>Número de nodos de <see langword="XmlNodeList" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeList.ItemOf(System.Int32)">
      <summary>Obtiene un nodo en el índice especificado.</summary>
      <param name="i">Índice de base cero en la lista de nodos.</param>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> con el índice especificad en la colección. Si el índice es mayor o igual que el número de nodos de la lista, esto devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeOrder">
      <summary>Describe el orden del documento de un nodo en comparación con un segundo nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.After">
      <summary>El nodo actual de este explorador se sitúa detrás del nodo actual del explorador proporcionado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Before">
      <summary>El nodo actual de este explorador se sitúa delante del nodo actual del explorador proporcionado.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Same">
      <summary>Los dos exploradores se sitúan en el mismo nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeOrder.Unknown">
      <summary>Las posiciones relativas de los nodos no se pueden determinar en el orden del documento. Esto puede producirse si los dos nodos residen en diferentes árboles.</summary>
    </member>
    <member name="T:System.Xml.XmlNodeReader">
      <summary>Representa un lector que proporciona acceso rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante, a los datos XML de un objeto <see cref="T:System.Xml.XmlNode" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
      <summary>Crea una instancia de la clase <see langword="XmlNodeReader" /> mediante el objeto <see cref="T:System.Xml.XmlNode" /> especificado.</summary>
      <param name="node">
        <see langword="XmlNode" /> que se desea leer.</param>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Close">
      <summary>Cambia la propiedad <see cref="P:System.Xml.XmlNodeReader.ReadState" /> a <see langword="Closed" />.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)">
      <summary>Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="attributeIndex">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</exception>
      <returns>Valor del atributo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
      <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
      <summary>Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="name">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
      <summary>Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse.</param>
      <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)">
      <summary>Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="attributeIndex">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
      <summary>Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
      <summary>Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.</summary>
      <param name="name">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToElement">
      <summary>Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns>Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToFirstAttribute">
      <summary>Se mueve al primer atributo.</summary>
      <returns>Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.MoveToNextAttribute">
      <summary>Se mueve al siguiente atributo.</summary>
      <returns>Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Read">
      <summary>Lee el siguiente nodo del flujo.</summary>
      <returns>Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadAttributeValue">
      <summary>Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de BinHex.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ReadString">
      <summary>Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
      <returns>Contenido del nodo de elemento o de texto (puede incluir nodos CDATA, Text, etc.). Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
  
 <see langword="Note:" /> El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.ResolveEntity">
      <summary>Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
    </member>
    <member name="M:System.Xml.XmlNodeReader.Skip">
      <summary>Omite los nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Objeto <see cref="T:System.Xml.XmlNamespaceScope" />.</param>
      <returns>Objeto <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que están dentro del ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</param>
      <returns>Objeto <see cref="T:System.String" /> que contiene el nombre del espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Objeto <see cref="T:System.String" /> que identifica el espacio de nombres.</param>
      <returns>Objeto <see cref="T:System.String" /> que contiene el prefijo del espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.AttributeCount">
      <summary>Obtiene el número de atributos del nodo actual.</summary>
      <returns>Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.BaseURI">
      <summary>Obtiene el identificador URI base del nodo actual.</summary>
      <returns>Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanReadBinaryContent">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlNodeReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns>Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlNodeReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.CanResolveEntity">
      <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns>Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlNodeReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Depth">
      <summary>Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns>Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.EOF">
      <summary>Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns>Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasAttributes">
      <summary>Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <returns>
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.HasValue">
      <summary>Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlNodeReader.Value" />.</summary>
      <returns>Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsDefault">
      <summary>Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
      <returns>Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.IsEmptyElement">
      <summary>Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> Si el nodo actual es un elemento ( <see cref="P:System.Xml.XmlNodeReader.NodeType" /> es igual a <see langword="XmlNodeType.Element" /> ) y termina con <c>/&gt;</c> ; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.LocalName">
      <summary>Obtiene el nombre local del nodo actual.</summary>
      <returns>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Name">
      <summary>Obtiene el nombre completo del nodo actual.</summary>
      <returns>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> nombre</description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.</description></item><item><term><see langword="DocumentType" /></term><description> Nombre del tipo de documento.</description></item><item><term><see langword="Element" /></term><description> Nombre de la etiqueta.</description></item><item><term><see langword="EntityReference" /></term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destino de la instrucción de procesamiento.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Cadena literal <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
      <summary>Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NameTable">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns>
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Prefix">
      <summary>Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns>Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.ReadState">
      <summary>Obtiene el estado del lector.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.SchemaInfo">
      <summary>Obtiene la información de esquema que se ha asignado al nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.Value">
      <summary>Obtiene el valor de texto del nodo actual.</summary>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlNodeReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> Valor</description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.</description></item><item><term><see langword="CDATA" /></term><description> Contenido de la sección CDATA.</description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.</description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> El contenido completo, sin incluir el destino.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espacio en blanco entre marcas en un modelo de contenido mixto.</description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.</description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.</description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlLang">
      <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns>Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlNodeReader.XmlSpace">
      <summary>Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlNodeType">
      <summary>Especifica el tipo de nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Attribute">
      <summary>Atributo (por ejemplo, <c>id='123'</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.CDATA">
      <summary>Una sección CDATA (por ejemplo, <c>&lt;![CDATA[mi texto de escape]]&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Comment">
      <summary>Comentario (por ejemplo, <c>&lt;!-- mi comentario --&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Document">
      <summary>Objeto de documento que, como raíz del árbol de documentos, proporciona acceso a todo el documento XML.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentFragment">
      <summary>Fragmento de documento.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.DocumentType">
      <summary>Declaración de tipos de documento, indicada por la siguiente etiqueta (por ejemplo, <c>&lt;!DOCTYPE...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Element">
      <summary>Elemento (por ejemplo, <c>&lt;item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndElement">
      <summary>Etiqueta de elemento final (por ejemplo, <c>&lt;/item&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EndEntity">
      <summary>Se devuelve cuando <see langword="XmlReader" /> alcanza el final del reemplazo de entidad como resultado de una llamada al método <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Entity">
      <summary>Declaración de entidad (por ejemplo, <c>&lt;!ENTITY...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.EntityReference">
      <summary>Referencia a una entidad (por ejemplo, <c>&amp;num;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.None">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> devuelve este valor si no se ha llamado al método <see langword="Read" />.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Notation">
      <summary>Notación en la declaración de tipos de documento (por ejemplo, <c>&lt;!NOTATION...&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.ProcessingInstruction">
      <summary>Instrucción de procesamiento (por ejemplo, <c>&lt;?pi test?&gt;</c>).</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.SignificantWhitespace">
      <summary>Espacio en blanco entre marcas en un modelo de contenido mixto o espacio en blanco dentro del ámbito de <c>xml:space="preserve"</c>.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Text">
      <summary>Contenido de texto de un nodo.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.Whitespace">
      <summary>Espacio en blanco entre marcas.</summary>
    </member>
    <member name="F:System.Xml.XmlNodeType.XmlDeclaration">
      <summary>Declaración XML (por ejemplo, <c>&lt;?xml version='1.0'?&gt;</c>).</summary>
    </member>
    <member name="T:System.Xml.XmlNotation">
      <summary>Representa una declaración de notaciones, como &lt;!NOTATION... &gt;.</summary>
    </member>
    <member name="M:System.Xml.XmlNotation.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo. Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <exception cref="T:System.InvalidOperationException">Los nodos Notation no se pueden clonar. Si se llama a este método en un objeto <see cref="T:System.Xml.XmlNotation" />, se produce una excepción.</exception>
      <returns>Copia <see cref="T:System.Xml.XmlNode" /> del nodo desde el que se llamó al método.</returns>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos <see langword="XmlNotation" />.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Este método no tiene ningún efecto en nodos <see langword="XmlNotation" />.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlNotation.InnerXml">
      <summary>Obtiene el marcado que representa los nodos secundarios de este nodo.</summary>
      <exception cref="T:System.InvalidOperationException">Se intentó establecer la propiedad.</exception>
      <returns>Para nodos <see langword="XmlNotation" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.IsReadOnly">
      <summary>Obtiene un valor que indica si el nodo es de solo lectura.</summary>
      <returns>
        <see langword="true" /> Si el nodo es de solo lectura; en caso contrario, <see langword="false" /> .  
  
Como los nodos <see langword="XmlNotation" /> son de sólo lectura, esta propiedad siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.LocalName">
      <summary>Obtiene el nombre del nodo actual sin el prefijo de espacio de nombres.</summary>
      <returns>Para nodos <see langword="XmlNotation" />, esta propiedad devuelve el nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.Name">
      <summary>Obtiene el nombre del nodo actual.</summary>
      <returns>Nombre de la notación.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Tipo de nodo. Para nodos <see langword="XmlNotation" />, el valor es XmlNodeType.Notation.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.OuterXml">
      <summary>Obtiene el marcado que representa este nodo y todos sus nodos secundarios.</summary>
      <returns>Para nodos <see langword="XmlNotation" />, se devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.PublicId">
      <summary>Obtiene el valor del identificador público de la declaración de notación.</summary>
      <returns>Identificador público de la notación. Si no hay un identificador público, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlNotation.SystemId">
      <summary>Obtiene el valor del identificador de sistema de la declaración de notación.</summary>
      <returns>Identificador del sistema de la notación. Si no hay un identificador del sistema, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XmlOutputMethod">
      <summary>Especifica el método utilizado para serializar la salida de <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.AutoDetect">
      <summary>Las reglas de XSLT se usan para elegir entre los métodos de salida <see cref="F:System.Xml.XmlOutputMethod.Xml" /> y <see cref="F:System.Xml.XmlOutputMethod.Html" /> en tiempo de ejecución.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Html">
      <summary>Serialice según las reglas de HTML especificadas por XSLT.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Text">
      <summary>Sólo se serializan los bloques de texto.</summary>
    </member>
    <member name="F:System.Xml.XmlOutputMethod.Xml">
      <summary>Se serializa según las reglas de XML 1.0.</summary>
    </member>
    <member name="T:System.Xml.XmlParserContext">
      <summary>Proporciona toda la información de contexto que necesita el objeto <see cref="T:System.Xml.XmlReader" /> para analizar un fragmento de XML.</summary>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, <see langword="xml:lang" />, <see langword="xml:space" /> y tipo de documento especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="docTypeName">Nombre de la declaración de tipos de documento.</param>
      <param name="pubId">Identificador público.</param>
      <param name="sysId">Identificador de sistema.</param>
      <param name="internalSubset">Subconjunto DTD interno. El subconjunto DTD se usa para la resolución de entidades, no para la validación de documentos.</param>
      <param name="baseURI">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento).</param>
      <param name="xmlLang">El ámbito <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, URI base, <see langword="xml:lang" />, <see langword="xml:space" />, codificación y tipo de documento especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="docTypeName">Nombre de la declaración de tipos de documento.</param>
      <param name="pubId">Identificador público.</param>
      <param name="sysId">Identificador de sistema.</param>
      <param name="internalSubset">Subconjunto DTD interno. DTD se usa para la resolución de entidades, no para la validación de documentos.</param>
      <param name="baseURI">Identificador URI base del fragmento de XML (la ubicación desde la que se cargó el fragmento).</param>
      <param name="xmlLang">El ámbito <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <param name="enc">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> y <see langword="xml:space" /> especificados.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre las cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="xmlLang">El ámbito <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlParserContext" /> con los valores <see cref="T:System.Xml.XmlNameTable" />, <see cref="T:System.Xml.XmlNamespaceManager" />, <see langword="xml:lang" /> y <see langword="xml:space" /> especificados y codificación.</summary>
      <param name="nt">
        <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Si el valor es <see langword="null" />, se utilizará la tabla de nombres usada para construir <paramref name="nsMgr" />. Para obtener más información sobre cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</param>
      <param name="nsMgr">
        <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a utilizar para buscar información sobre los espacios de nombres o <see langword="null" />.</param>
      <param name="xmlLang">El ámbito <see langword="xml:lang" />.</param>
      <param name="xmlSpace">Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</param>
      <param name="enc">Objeto <see cref="T:System.Text.Encoding" /> que indica el valor de codificación.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="nt" /> no es el mismo <see langword="XmlNameTable" /> utilizado para construir <paramref name="nsMgr" />.</exception>
    </member>
    <member name="P:System.Xml.XmlParserContext.BaseURI">
      <summary>Obtiene o establece el identificador URI base.</summary>
      <returns>Identificador URI base para resolver el archivo DTD.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.DocTypeName">
      <summary>Obtiene o establece el nombre de la declaración de tipos de documento.</summary>
      <returns>Nombre de la declaración de tipos de documento.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.Encoding">
      <summary>Obtiene o establece el tipo de codificación.</summary>
      <returns>Objeto <see cref="T:System.Text.Encoding" /> que indica el tipo de codificación.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.InternalSubset">
      <summary>Obtiene o establece el subconjunto DTD interno.</summary>
      <returns>Subconjunto DTD interno. Por ejemplo, esta propiedad devuelve todo lo que hay entre corchetes <c> &lt; . Documento DOCTYPE [...] &gt; </c>.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NamespaceManager">
      <summary>Obtiene o establece el <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <returns>
        <see langword="XmlNamespaceManager" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.NameTable">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a utilizar para subdividir cadenas. Para obtener más información sobre cadenas subdivididas, vea <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <returns>
        <see langword="XmlNameTable" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.PublicId">
      <summary>Obtiene o establece el identificador público.</summary>
      <returns>Identificador público.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.SystemId">
      <summary>Obtiene o establece el identificador de sistema.</summary>
      <returns>Identificador de sistema.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlLang">
      <summary>Obtiene o establece el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns>Ámbito de <see langword="xml:lang" /> actual. Si en el ámbito no hay ningún <see langword="xml:lang" />, se devuelve <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlParserContext.XmlSpace">
      <summary>Obtiene o establece el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns>Valor de <see cref="T:System.Xml.XmlSpace" /> que indica el ámbito de <see langword="xml:space" />.</returns>
    </member>
    <member name="T:System.Xml.XmlProcessingInstruction">
      <summary>Representa una instrucción de procesamiento que XML define para conservar información específica del procesador en el texto del documento.</summary>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlProcessingInstruction" />.</summary>
      <param name="target">Destino de la instrucción de procesamiento; vea la propiedad <see cref="P:System.Xml.XmlProcessingInstruction.Target" />.</param>
      <param name="data">Contenido de la instrucción; vea la propiedad <see cref="P:System.Xml.XmlProcessingInstruction.Data" />.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns>Nodo duplicado.</returns>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Dado que los nodos ProcessingInstruction no tienen elementos secundarios, este método no tiene ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlProcessingInstruction.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Data">
      <summary>Obtiene o establece el contenido de la instrucción de procesamiento, excepto el destino.</summary>
      <returns>Contenido de la instrucción de procesamiento, excepto el destino.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.InnerText">
      <summary>Obtiene o establece los valores concatenados del nodo y de todos sus nodos secundarios.</summary>
      <returns>Valores concatenados del nodo y de todos sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para los nodos de instrucción de procesamiento, esta propiedad devuelve el destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para los nodos <see langword="XmlProcessingInstruction" />, este valor es XmlNodeType.ProcessingInstruction.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Target">
      <summary>Obtiene el destino de la instrucción de procesamiento.</summary>
      <returns>Destino de la instrucción de procesamiento.</returns>
    </member>
    <member name="P:System.Xml.XmlProcessingInstruction.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">El nodo es de sólo lectura.</exception>
      <returns>Todo el contenido de la instrucción de procesamiento, excepto el destino.</returns>
    </member>
    <member name="T:System.Xml.XmlQualifiedName">
      <summary>Representa un nombre completo XML.</summary>
    </member>
    <member name="F:System.Xml.XmlQualifiedName.Empty">
      <summary>Proporciona un <see cref="T:System.Xml.XmlQualifiedName" /> vacío.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre especificado.</summary>
      <param name="name">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlQualifiedName" /> con el nombre y el espacio de nombres especificados.</summary>
      <param name="name">Nombre local que se va a utilizar como nombre del objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
      <param name="ns">Espacio de nombres para el objeto <see cref="T:System.Xml.XmlQualifiedName" />.</param>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
      <summary>Determina si el objeto <see cref="T:System.Xml.XmlQualifiedName" /> especificado es igual al objeto <see cref="T:System.Xml.XmlQualifiedName" /> actual.</summary>
      <param name="other">
        <see cref="T:System.Xml.XmlQualifiedName" /> que se va comparar.</param>
      <returns>Es <see langword="true" /> si los dos son un objeto de la misma instancia; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.GetHashCode">
      <summary>Devuelve el código hash de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Código hash de este objeto.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Equality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <param name="b">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <returns>Es <see langword="true" /> si los dos objetos tienen los mismos valores de nombre y de espacio de nombres; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.op_Inequality(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <summary>Compara dos objetos <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="a">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <param name="b">Objeto <see cref="T:System.Xml.XmlQualifiedName" /> que se va a comparar.</param>
      <returns>Es <see langword="true" /> si los valores de nombre y de espacio de nombres de los dos objetos se diferencian en algo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString">
      <summary>Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de <see langword="namespace:localname" />. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.</returns>
    </member>
    <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
      <summary>Devuelve el valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <param name="name">El nombre del objeto.</param>
      <param name="ns">Espacio de nombres del objeto.</param>
      <returns>Valor de cadena de <see cref="T:System.Xml.XmlQualifiedName" /> con el formato de <see langword="namespace:localname" />. Si el objeto no tiene un espacio de nombres definido, el método sólo devuelve el nombre local.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.IsEmpty">
      <summary>Obtiene un valor que indica si el elemento <see cref="T:System.Xml.XmlQualifiedName" /> está activo.</summary>
      <returns>
        <see langword="true" /> si el nombre y el espacio de nombres corresponden a cadenas vacías; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Name">
      <summary>Obtiene una representación de cadena del nombre completo de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Representación de cadena del nombre completo o de String.Empty si no hay un nombre que esté definido para el objeto.</returns>
    </member>
    <member name="P:System.Xml.XmlQualifiedName.Namespace">
      <summary>Obtiene una representación de cadena del espacio de nombres de <see cref="T:System.Xml.XmlQualifiedName" />.</summary>
      <returns>Representación de cadena del espacio de nombres o de String.Empty si no hay un espacio de nombres que esté definido para el objeto.</returns>
    </member>
    <member name="T:System.Xml.XmlReader">
      <summary>Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento solo hacia delante.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReader.Close">
      <summary>Cuando se invalida en una clase derivada, cambia <see cref="P:System.Xml.XmlReader.ReadState" /> a <see cref="F:System.Xml.ReadState.Closed" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
      <summary>Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> mediante el flujo especificado con la configuración predeterminada.</summary>
      <param name="input">Flujo que contiene los datos XML.  
  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se utiliza para seguir leyendo la secuencia, y el procesamiento continúa analizando la entrada como una secuencia de caracteres (Unicode).</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para obtener acceso a la ubicación de los datos XML.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el flujo y la configuración especificados.</summary>
      <param name="input">Flujo que contiene los datos XML.  
  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se usa para seguir leyendo el flujo, y el procesamiento continúa analizando la entrada como un flujo de caracteres (Unicode).</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el flujo, el URI base y la configuración especificados.</summary>
      <param name="input">Flujo que contiene los datos XML.  
  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se usa para seguir leyendo el flujo, y el procesamiento continúa analizando la entrada como un flujo de caracteres (Unicode).</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="baseUri">URI base de la entidad o documento que se lee. Este valor puede ser <see langword="null" />.  
  
 Nota sobre seguridad El URI base se usa para resolver el URI relativo del documento XML. No use un URI base de un origen que no sea de confianza.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> con el flujo, la configuración y la información de contexto especificados para el análisis.</summary>
      <param name="input">Flujo que contiene los datos XML.  
  
<see cref="T:System.Xml.XmlReader" /> examina los primeros bytes de la secuencia buscando una marca de orden de bytes u otro signo de codificación. Cuando se especifica la codificación, esta se usa para seguir leyendo el flujo, y el procesamiento continúa analizando la entrada como un flujo de caracteres (Unicode).</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
  
Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el lector de texto especificado.</summary>
      <param name="input">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia <see cref="T:System.Xml.XmlReader" /> usando el lector de texto y la configuración especificados.</summary>
      <param name="input">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings">Configuración del nuevo <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> mediante el lector de texto, la configuración y el URI base especificados.</summary>
      <param name="input">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el <see cref="T:System.Xml.XmlReader" /> no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="baseUri">URI base de la entidad o documento que se lee. Este valor puede ser <see langword="null" />.  
  
 Nota sobre seguridad El URI base se usa para resolver el URI relativo del documento XML. No use un URI base de un origen que no sea de confianza.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el lector de texto, la configuración y la información de contexto especificados para el análisis.</summary>
      <param name="input">Lector de texto desde el que se leen los datos XML. Un lector de texto devuelve un flujo de caracteres Unicode, por lo que el lector XML no usa la codificación especificada en la declaración XML para descodificar el flujo de datos.</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
  
Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="input" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. (Solo se puede establecer y usar una de estas propiedades <see langword="NameTable" />).</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el URI especificado.</summary>
      <param name="inputUri">URI del archivo que contiene los datos XML. La clase <see cref="T:System.Xml.XmlUrlResolver" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para obtener acceso a la ubicación de los datos XML.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No existe el archivo identificado por el URI.</exception>
      <exception cref="T:System.UriFormatException">
        <block subset="none" type="note">
          <para>  
 En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.</para>
        </block>  
  
 El formato del URI no es correcto.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el URI y la configuración especificados.</summary>
      <param name="inputUri">URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es <see langword="null" />, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException">
        <block subset="none" type="note">
          <para>  
 En .NET para aplicaciones de la Tienda Windows o la Biblioteca de clases portable, capture en su lugar la excepción de clase base, <see cref="T:System.FormatException" />.</para>
        </block>  
  
 El formato del URI no es correcto.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> usando el URI, la configuración y la información de contexto especificados.</summary>
      <param name="inputUri">URI del archivo que contiene los datos XML. El objeto <see cref="T:System.Xml.XmlResolver" /> del objeto <see cref="T:System.Xml.XmlReaderSettings" /> se utiliza para convertir la ruta de acceso en una representación de datos canónicos. Si <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> es <see langword="null" />, se utiliza un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" />.</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />. Este valor puede ser <see langword="null" />.</param>
      <param name="inputContext">Información de contexto necesaria para analizar el fragmento XML. La información de contexto puede incluir la <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito del espacio de nombres, el ámbito actual de <c>xml:lang</c> y <c>xml:space</c>, el URI base y la definición de tipo de documento.  
  
Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <see langword="inputUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Security.SecurityException">
        <see cref="T:System.Xml.XmlReader" /> no tiene permisos suficientes para acceder a la ubicación de los datos XML.</exception>
      <exception cref="T:System.ArgumentException">Tanto la propiedad <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> como la propiedad <see cref="P:System.Xml.XmlParserContext.NameTable" /> contienen valores. (Solo se puede establecer y usar una de estas propiedades <see langword="NameTable" />).</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado por el URI.</exception>
      <exception cref="T:System.UriFormatException">El formato del URI no es correcto.</exception>
      <returns>Objeto usado para leer los datos XML del flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlReader" /> con el lector XML y la configuración especificados.</summary>
      <param name="reader">Objeto que desea usar como lector XML subyacente.</param>
      <param name="settings">Configuración de la nueva instancia <see cref="T:System.Xml.XmlReader" />.  
  
El nivel de conformidad del objeto <see cref="T:System.Xml.XmlReaderSettings" /> debe coincidir con el del lector subyacente o establecerse en <see cref="F:System.Xml.ConformanceLevel.Auto" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Si el objeto <see cref="T:System.Xml.XmlReaderSettings" /> especifica un nivel de conformidad que no es coherente con el nivel de conformidad del lector subyacente.  
  
o bien 
El objeto <see cref="T:System.Xml.XmlReader" /> subyacente se encuentra en un estado <see cref="F:System.Xml.ReadState.Error" /> o <see cref="F:System.Xml.ReadState.Closed" />.</exception>
      <returns>Objeto que se encapsula alrededor del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xml.XmlReader" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar tanto recursos administrados como no administrados; <see langword="false" /> para liberar únicamente recursos no administrados.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> está fuera del intervalo. Debe ser no negativo y menor que el tamaño de la colección de atributos.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo o el valor es <see langword="String.Empty" />, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo o el valor es <see langword="String.Empty" />, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.GetValueAsync">
      <summary>Obtiene de forma asincrónica el valor del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Valor del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsName(System.String)">
      <summary>Devuelve un valor que indica si el argumento de cadena es un nombre XML válido.</summary>
      <param name="str">Nombre que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="str" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si el nombre es válido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
      <summary>Devuelve un valor que indica si el argumento de cadena es un token de nombre XML válido.</summary>
      <param name="str">Token de nombre que se va a validar.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="str" /> es <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si es un token de nombre válido; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío.</summary>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si <see cref="M:System.Xml.XmlReader.MoveToContent" /> encuentra una etiqueta de apertura o una etiqueta de elemento vacío; es <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con el argumento especificado.</summary>
      <param name="name">Cadena que se compara con la propiedad <see langword="Name" /> del elemento encontrado.</param>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="true" /> si el nodo resultante es un elemento y la propiedad <see langword="Name" /> coincide con la cadena especificada. <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" /> o si la propiedad <see langword="Name" /> del elemento no coincide con la cadena especificada.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
      <summary>Llama al método <see cref="M:System.Xml.XmlReader.MoveToContent" /> y comprueba si el nodo de contenido actual es una etiqueta de apertura o una etiqueta de elemento vacío y si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas.</summary>
      <param name="localname">Cadena con la que se compara la propiedad <see langword="LocalName" /> del elemento encontrado.</param>
      <param name="ns">Cadena con la que se compara la propiedad <see langword="NamespaceURI" /> del elemento encontrado.</param>
      <exception cref="T:System.Xml.XmlException">Se detecta XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="true" /> si el nodo resultante es un elemento. <see langword="false" /> si se encuentra un tipo de nodo que no sea <see langword="XmlNodeType.Element" /> o si las propiedades <see langword="LocalName" /> y <see langword="NamespaceURI" /> del elemento no coinciden con la cadena especificada.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
      <summary>Cuando se invalida en una clase derivada, resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, se desplaza al atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro tiene un valor negativo.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
      <summary>Cuando se invalida en una clase derivada, se desplaza al atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El parámetro es una cadena vacía.</exception>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, se desplaza al atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name">Nombre local del atributo.</param>
      <param name="ns">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos valores del parámetro son <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContent">
      <summary>Comprueba si el nodo actual es un nodo de contenido (texto sin espacios en blanco, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" /> o <see langword="EndEntity" />). Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo. Omite los siguientes tipos de nodo: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" /> o <see langword="SignificantWhitespace" />.</summary>
      <exception cref="T:System.Xml.XmlException">XML incorrecto que se encuentra en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o <see langword="XmlNodeType.None" /> si el lector alcanzó el final del flujo de entrada.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToContentAsync">
      <summary>De forma asincrónica comprueba si el nodo actual es un nodo de contenido. Si el nodo no es un nodo de contenido, el lector salta hasta el siguiente nodo de contenido o el final del archivo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>El <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo actual encontrado por el método o <see langword="XmlNodeType.None" /> si el lector alcanzó el final del flujo de entrada.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToElement">
      <summary>Cuando se invalida en una clase derivada, se desplaza al elemento que contiene el nodo de atributo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToFirstAttribute">
      <summary>Cuando se invalida en una clase derivada, se desplaza hasta el primer atributo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlReader.MoveToNextAttribute">
      <summary>Cuando se invalida en una clase derivada, se desplaza hasta el siguiente atributo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.Read">
      <summary>Cuando se invalida en una clase derivada, lee el siguiente nodo del flujo.</summary>
      <exception cref="T:System.Xml.XmlException">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el siguiente nodo se ha leído correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAsync">
      <summary>De forma asincrónica lee el nodo siguiente del flujo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadAttributeValue">
      <summary>Cuando se invalida en una clase derivada, analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee el contenido como objeto del tipo especificado.</summary>
      <param name="returnType">Tipo del valor que se va a devolver.  
  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos. Por ejemplo, se puede utilizar al convertir un objeto <see cref="T:System.Xml.XmlQualifiedName" /> en <c>xs:string</c>.  
  
Este valor puede ser <see langword="null" />.</param>
      <exception cref="T:System.FormatException">El formato del contenido no es correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="returnType" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un tipo de nodo compatible. Vea la siguiente tabla para obtener información detallada.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.OverflowException">Lea <see langword="Decimal.MaxValue" />.</exception>
      <returns>Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee asincrónicamente el contenido como objeto del tipo especificado.</summary>
      <param name="returnType">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Contenido de texto concatenado o valor de atributo convertido en el tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee asincrónicamente el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee asincrónicamente el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsBoolean">
      <summary>Lee el contenido de texto en la posición actual como valor <see langword="Boolean" />.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido del texto como objeto <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTime">
      <summary>Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido del texto como objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset">
      <summary>Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.DateTimeOffset" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido del texto como objeto <see cref="T:System.DateTimeOffset" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDecimal">
      <summary>Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.Decimal" />.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido de texto en la posición actual como objeto <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsDouble">
      <summary>Lee el contenido de texto en la posición actual como número de punto flotante de precisión doble.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido de texto como número de punto flotante de precisión doble.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsFloat">
      <summary>Lee el contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido de texto en la posición actual como número de punto flotante de precisión sencilla.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsInt">
      <summary>Lee el contenido de texto en la posición actual como un entero de 32 bits con signo.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido de texto como entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsLong">
      <summary>Lee el contenido de texto en la posición actual como un entero de 64 bits con signo.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Contenido de texto como entero de 64 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObject">
      <summary>Lee el contenido de texto en la posición actual como <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsObjectAsync">
      <summary>Lee asincrónicamente el contenido de texto en la posición actual como un objeto <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>El contenido de texto como el objeto de Common Language Runtime (CLR) más adecuado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsString">
      <summary>Lee el contenido de texto en la posición actual como un objeto <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.FormatException">El formato de la cadena no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido del texto como objeto <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
      <summary>Lee asincrónicamente el contenido de texto en la posición actual como un objeto <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>El contenido del texto como objeto <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee el contenido de los elementos como el tipo solicitado.</summary>
      <param name="returnType">Tipo del valor que se va a devolver.  
  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.OverflowException">Lea <see langword="Decimal.MaxValue" />.</exception>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI de espacio de nombres coinciden con los del elemento actual y, a continuación, lee el contenido de los elementos como el tipo solicitado.</summary>
      <param name="returnType">Tipo del valor que se va a devolver.  
  
 Nota Con el lanzamiento de .NET Framework 3.5, el valor del parámetro <paramref name="returnType" /> ahora puede ser el tipo <see cref="T:System.DateTimeOffset" />.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <exception cref="T:System.OverflowException">Lea <see langword="Decimal.MaxValue" />.</exception>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Lee asincrónicamente el contenido del elemento como el tipo solicitado.</summary>
      <param name="returnType">Tipo del valor que se va a devolver.</param>
      <param name="namespaceResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se utiliza para resolver prefijos de espacios de nombres relacionados con la conversión de tipos.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Contenido de elementos convertido en el objeto con tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de <see langword="Base64" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee asincrónicamente el elemento y descodifica el contenido de <see langword="Base64" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee asincrónicamente el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean">
      <summary>Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Boolean" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime">
      <summary>Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.DateTime" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>El contenido del elemento como objeto <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal">
      <summary>Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.Decimal" />.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Decimal" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en <see cref="T:System.Decimal" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.Decimal" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble">
      <summary>Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión doble.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>El contenido del elemento como número de punto flotante de precisión doble.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión doble.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>El contenido del elemento como número de punto flotante de precisión doble.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat">
      <summary>Lee el elemento actual y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como número de punto flotante de precisión sencilla.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en número de punto flotante de precisión sencilla.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>El contenido del elemento como número de punto flotante de precisión sencilla.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt">
      <summary>Lee el elemento actual y devuelve el contenido como un entero de 32 bits con signo.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
      <returns>El elemento contiene un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee el elemento actual y devuelve el contenido como entero de 32 bits con signo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en un entero de 32 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>El elemento contiene un entero de 32 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong">
      <summary>Lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Contenido del elemento como entero de 64 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
      <summary>Comprueba que el nombre local y el identificador URI del espacio de nombres especificados coinciden con los del elemento actual, luego lee el elemento actual y devuelve el contenido como entero de 64 bits con signo.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en un entero de 64 bits con signo.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>El elemento contiene un entero de 64 bits con signo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject">
      <summary>Lee el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
 o bien  
  
 El contenido del elemento no se puede convertir en el tipo solicitado.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync">
      <summary>Lee asincrónicamente el elemento actual y devuelve el contenido como objeto <see cref="T:System.Object" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Objeto de Common Language Runtime (CLR) del tipo más adecuado al que se le ha aplicado la conversión boxing. La propiedad <see cref="P:System.Xml.XmlReader.ValueType" /> determina el tipo CLR adecuado. Si el contenido se escribe como tipo de lista, este método devuelve una matriz de objetos del tipo adecuado a los que se les ha aplicado la conversión boxing.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString">
      <summary>Lee el elemento actual y devuelve el contenido como un objeto <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
      <summary>Comprueba que el nombre local especificado y el URI del espacio de nombres coinciden con los del elemento actual y, a continuación, lee este elemento y devuelve el contenido como objeto <see cref="T:System.String" />.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XmlReader" /> no está situado en ningún elemento.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento actual contiene elementos secundarios.  
  
o bien 
El contenido de elemento no puede convertirse en un objeto <see cref="T:System.String" />.</exception>
      <exception cref="T:System.ArgumentNullException">Se llama al método con argumentos <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">El nombre local y el identificador URI del espacio de nombres especificados no coinciden con los del elemento que se está leyendo.</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementContentAsStringAsync">
      <summary>Lee asincrónicamente el elemento actual y devuelve el contenido como un objeto <see cref="T:System.String" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Contenido de elemento como objeto <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString">
      <summary>Lee un elemento de solo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <exception cref="T:System.Xml.XmlException">El siguiente nodo de contenido no es una etiqueta de apertura o el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
      <summary>Comprueba si la propiedad <see cref="P:System.Xml.XmlReader.Name" /> del elemento encontrado coincide con la cadena especificada antes de leer un elemento de sólo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <param name="name">Nombre que se va a comprobar.</param>
      <exception cref="T:System.Xml.XmlException">Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento <see langword="Name" /> no coincide con el argumento especificado o si el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
      <summary>Comprueba si las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado coinciden con las cadenas especificadas antes de leer un elemento de sólo texto. Sin embargo, se recomienda usar el método <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <param name="localname">Nombre local que se va a comprobar.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a comprobar.</param>
      <exception cref="T:System.Xml.XmlException">Si el siguiente nodo de contenido no es una etiqueta de apertura; si el elemento <see langword="LocalName" /> o <see langword="NamespaceURI" /> no coincide con los argumentos especificados o si el elemento encontrado no contiene un valor de texto simple.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Texto que contiene el elemento leído. Una cadena vacía si el elemento está vacío.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadEndElement">
      <summary>Comprueba si el nodo de contenido actual es una etiqueta de cierre y desplaza el lector hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException">El nodo actual no es una etiqueta de cierre o si se encuentra XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXml">
      <summary>Cuando se invalida en una clase derivada, lee todo el contenido, incluido el marcado, como una cadena.</summary>
      <exception cref="T:System.Xml.XmlException">El fragmento de XML no está bien formado o se ha producido un error al analizarlo.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Todo el contenido XML, incluido el marcado, del nodo actual. Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.  
  
 Si el nodo actual no es un elemento ni un atributo, se devuelve una cadena vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadInnerXmlAsync">
      <summary>De forma asincrónica lee todo el contenido, incluido el marcado, como una cadena.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Todo el contenido XML, incluido el marcado, del nodo actual. Si el nodo actual no tiene nodos secundarios, se devuelve una cadena vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXml">
      <summary>Cuando se invalida en una clase derivada, lee el contenido, incluido el marcado, que representa este nodo y todos sus nodos secundarios.</summary>
      <exception cref="T:System.Xml.XmlException">El fragmento de XML no está bien formado o se ha producido un error al analizarlo.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadOuterXmlAsync">
      <summary>De forma asincrónica lee el contenido, incluido el marcado, que representa este nodo y todos sus elementos secundarios.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Si el lector está situado en un nodo de elemento o de atributo, este método devuelve todo el contenido XML, incluido el marcado, del nodo actual y de todos sus nodos secundarios; en caso contrario, devuelve una cadena vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement">
      <summary>Comprueba si el nodo actual es un elemento y hace avanzar el sistema de lectura hasta el siguiente nodo.</summary>
      <exception cref="T:System.Xml.XmlException">Se detectó XML incorrecto en el flujo de entrada.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
      <summary>Comprueba si el nodo de contenido actual es un elemento con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="name">Nombre completo del elemento.</param>
      <exception cref="T:System.Xml.XmlException">Se detectó XML incorrecto en el flujo de entrada.  
  
o bien 
El objeto <see cref="P:System.Xml.XmlReader.Name" /> del elemento no coincide con el <paramref name="name" /> especificado.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
      <summary>Comprueba si el nodo de contenido actual es un elemento con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas y desplaza el lector hasta el siguiente nodo.</summary>
      <param name="localname">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.Xml.XmlException">Se detectó XML incorrecto en el flujo de entrada.  
  
o bien 
Las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> del elemento encontrado no coinciden con los argumentos especificados.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.ReadString">
      <summary>Cuando se reemplaza en una clase derivada, lee el contenido de un nodo de elemento o de texto como una cadena. Sin embargo, se recomienda usar el método <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> en su lugar, porque proporciona una manera más sencilla de controlar esta operación.</summary>
      <exception cref="T:System.Xml.XmlException">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El contenido del elemento o una cadena vacía.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadSubtree">
      <summary>Devuelve una nueva instancia de <see langword="XmlReader" /> que se puede utilizar para leer el nodo actual y todos sus descendientes.</summary>
      <exception cref="T:System.InvalidOperationException">El lector XML no se colocó sobre un elemento al llamar a este método.

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Una nueva instancia del lector XML establecida en <see cref="F:System.Xml.ReadState.Initial" />. Al llamar al método <see cref="M:System.Xml.XmlReader.Read" />, se coloca el nuevo lector en el nodo que era el actual antes de la llamada al método <see cref="M:System.Xml.XmlReader.ReadSubtree" />.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
      <summary>Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta al siguiente elemento descendiente con el nombre completo especificado.</summary>
      <param name="name">Nombre completo del elemento al que se desea desplazar.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El parámetro es una cadena vacía.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento descendiente; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento.  
  
Si <see cref="T:System.Xml.XmlReader" /> no está en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />, este método devuelve <see langword="false" /> y la posición de <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
      <summary>Hace avanzar el objeto <see cref="T:System.Xml.XmlReader" /> hasta el siguiente elemento descendiente que tenga el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName">Nombre local del elemento al que se desea desplazar.</param>
      <param name="namespaceURI">URI del espacio de nombres del elemento al que se desea desplazar.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos valores del parámetro son <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento descendiente; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento secundario relacionado, el objeto <see cref="T:System.Xml.XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento.  
  
Si <see cref="T:System.Xml.XmlReader" /> no está en un elemento cuando se llama a <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />, este método devuelve <see langword="false" /> y la posición de <see cref="T:System.Xml.XmlReader" /> no cambia.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
      <summary>Lee hasta que encuentra un elemento con el nombre completo especificado.</summary>
      <param name="name">Nombre completo del elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El parámetro es una cadena vacía.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento coincidente; de lo contrario, es <see langword="false" /> y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
      <summary>Lee hasta que encuentra un elemento con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos valores del parámetro son <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento coincidente; de lo contrario, es <see langword="false" /> y el objeto <see cref="T:System.Xml.XmlReader" /> está en un estado de final de archivo.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
      <summary>Hace avanzar el objeto <see langword="XmlReader" /> hasta al siguiente elemento relacionado con el nombre completo especificado.</summary>
      <param name="name">Nombre completo del elemento relacionado al que se desea desplazar.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El parámetro es una cadena vacía.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento relacionado; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento relacionado, el objeto <see langword="XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento principal.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
      <summary>Hace avanzar el objeto <see langword="XmlReader" /> al siguiente elemento del mismo nivel que tenga el URI del espacio de nombres y el nombre local especificados.</summary>
      <param name="localName">Nombre local del elemento relacionado al que se desea desplazar.</param>
      <param name="namespaceURI">URI del espacio de nombres del elemento relacionado al que se desea desplazar.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException">Ambos valores del parámetro son <see langword="null" />.</exception>
      <returns>Es <see langword="true" /> si se encuentra un elemento relacionado; en caso contrario, es <see langword="false" />. Si no se encuentra ningún elemento relacionado, el objeto <see langword="XmlReader" /> se coloca en la etiqueta de cierre (<see cref="P:System.Xml.XmlReader.NodeType" /> es <see langword="XmlNodeType.EndElement" />) del elemento principal.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
      <summary>Lee grandes secuencias de texto incrustadas en un documento XML.</summary>
      <param name="buffer">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count">Número máximo de caracteres que se van a copiar en el búfer. El número real de caracteres copiados se devuelve desde este método.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual no tiene ningún valor (<see cref="P:System.Xml.XmlReader.HasValue" /> es <see langword="false" />).

o bien 
Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El formato de los datos XML no es correcto.</exception>
      <returns>Número de caracteres leídos en el búfer. Si no hay más contenido de texto, se devuelve el valor cero.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Lee asincrónicamente grandes secuencias de texto incrustadas en un documento XML.</summary>
      <param name="buffer">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Desplazamiento en el búfer en el que <see cref="T:System.Xml.XmlReader" /> puede empezar a copiar los resultados.</param>
      <param name="count">Número máximo de caracteres que se van a copiar en el búfer. El número real de caracteres copiados se devuelve desde este método.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.
o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Número de caracteres leídos en el búfer. Si no hay más contenido de texto, se devuelve el valor cero.</returns>
    </member>
    <member name="M:System.Xml.XmlReader.ResolveEntity">
      <summary>Cuando se invalida en una clase derivada, resuelve la referencia a entidad para los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">El lector no está situado en un nodo <see langword="EntityReference" />; esta implementación del lector no puede resolver entidades (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> devuelve <see langword="false" />).

o bien

Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.Skip">
      <summary>Omite los nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlReader.SkipAsync">
      <summary>Omite de forma asincrónica los elementos secundarios del valor del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlReader" /> sin establecer la marca <see cref="P:System.Xml.XmlReaderSettings.Async" /> en <see langword="true" />. En este caso, se produce <see cref="T:System.InvalidOperationException" /> con el mensaje "Establezca XmlReaderSettings.Async en true si quiere usar métodos asincrónicos".</exception>
      <returns>Nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.AttributeCount">
      <summary>Cuando se invalida en una clase derivada, obtiene el número de atributos en el nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Número de atributos del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.BaseURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el identificador URI base del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadBinaryContent">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanReadValueChunk">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xml.XmlReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.CanResolveEntity">
      <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Depth">
      <summary>Cuando se invalida en una clase derivada, obtiene la profundidad del nodo actual en el documento XML.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.EOF">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasAttributes">
      <summary>Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="true" /> si el nodo actual tiene atributos; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.HasValue">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlReader.Value" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, el nodo tiene un valor de <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsDefault">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la DTD o el esquema.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.IsEmptyElement">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="true" /> es si el nodo actual es un elemento ( <see cref="P:System.Xml.XmlReader.NodeType" /> es igual <see langword="XmlNodeType.Element" /> a) que termina en <c>/&gt;</c> ; en caso contrario, es <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.Int32)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con la propiedad <see cref="P:System.Xml.XmlReader.Name" /> especificada.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor del atributo con las propiedades <see cref="P:System.Xml.XmlReader.LocalName" /> y <see cref="P:System.Xml.XmlReader.NamespaceURI" /> especificadas.</summary>
      <param name="name">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.LocalName">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre local del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Name">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> NOMBRE</description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.</description></item><item><term><see langword="DocumentType" /></term><description> Nombre del tipo de documento.</description></item><item><term><see langword="Element" /></term><description> Nombre de la etiqueta.</description></item><item><term><see langword="EntityReference" /></term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destino de la instrucción de procesamiento.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Cadena literal <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlReader.NamespaceURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el identificador URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NameTable">
      <summary>Cuando se invalida en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XmlNameTable" /> que está asociado a esta implementación.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.NodeType">
      <summary>Cuando se invalida en una clase derivada, obtiene el tipo del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Uno de los valores de enumeración que especifica el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Prefix">
      <summary>Cuando se invalida en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.QuoteChar">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.ReadState">
      <summary>Cuando se invalida en una clase derivada, obtiene el estado del lector.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Uno de los valores de enumeración que especifica el estado del lector.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.SchemaInfo">
      <summary>Obtiene la información de esquema asignada al nodo actual como resultado de la validación del esquema.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual. La información del esquema se puede establecer en elementos, atributos o nodos de texto con un <see cref="P:System.Xml.XmlReader.ValueType" /> no nulo (valores con tipo).  
  
Si el nodo actual no es ninguno de los tipos de nodo anteriores, o si la instancia de <see langword="XmlReader" /> no proporciona la información del esquema, esta propiedad devuelve <see langword="null" />.  
  
Si los objetos <see cref="T:System.Xml.XmlTextReader" /> y <see cref="T:System.Xml.XmlValidatingReader" /> llaman a esta propiedad, siempre devuelve <see langword="null" />. Estas implementaciones de <see langword="XmlReader" /> no exponen ninguna información de esquema a través de la propiedad <see langword="SchemaInfo" />.  
  
 <block subset="none" type="note"><para>  
 Si tiene que obtener el conjunto de información de validación posterior de esquema (PSVI) para un elemento, sitúe el lector en la etiqueta de cierre del elemento, en lugar de en la etiqueta de apertura. El PSVI se obtiene mediante la propiedad <see langword="SchemaInfo" /> de un lector. El lector de validación que se crea mediante <see cref="Overload:System.Xml.XmlReader.Create" /> con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en <see cref="F:System.Xml.ValidationType.Schema" /> tiene el PSVI completo para un elemento solo cuando el lector se coloca en la etiqueta de cierre de un elemento.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlReader.Settings">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlReaderSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlReader" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlReaderSettings" /> utilizado para crear esta instancia del lector. Si este lector no se creó utilizando el método <see cref="Overload:System.Xml.XmlReader.Create" />, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.Value">
      <summary>Cuando se invalida en una clase derivada, obtiene el valor de texto del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven <see langword="String.Empty" />.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> Valor</description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.</description></item><item><term><see langword="CDATA" /></term><description> Contenido de la sección CDATA.</description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.</description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> El contenido completo, sin incluir el destino.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espacio en blanco entre marcas en un modelo de contenido mixto.</description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.</description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.</description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlReader.ValueType">
      <summary>Obtiene el tipo de Common Language Runtime (CLR) del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Tipo de CLR correspondiente al valor con tipo del nodo. De manera predeterminada, es <see langword="System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlLang">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlReader.XmlSpace">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlReader" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlReaderSettings">
      <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlReader" /> creado mediante el método <see cref="Overload:System.Xml.XmlReader.Create" />.</summary>
    </member>
    <member name="E:System.Xml.XmlReaderSettings.ValidationEventHandler">
      <summary>Se produce cuando el lector encuentra errores de validación.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Clone">
      <summary>Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlReaderSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlReaderSettings" /> clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlReaderSettings.Reset">
      <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Async">
      <summary>Obtiene o establece si los métodos asincrónicos de <see cref="T:System.Xml.XmlReader" /> se pueden usar en una instancia determinada de <see cref="T:System.Xml.XmlReader" /> .</summary>
      <returns>
        <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CheckCharacters">
      <summary>Obtiene o establece un valor que indica si se va a realizar la comprobación de caracteres.</summary>
      <returns>Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Si <see cref="T:System.Xml.XmlReader" /> procesa datos de texto, siempre comprueba que los nombres XML y el contenido de texto son válidos, independientemente de la configuración de la propiedad. Al establecer la propiedad <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> en <see langword="false" />, se desactiva la comprobación de caracteres en las referencias a entidades de caracteres.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.CloseInput">
      <summary>Obtiene o establece un valor que indica si se debe cerrar la secuencia o el objeto <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector.</summary>
      <returns>Es <see langword="true" /> para cerrar la secuencia o <see cref="T:System.IO.TextReader" /> subyacente al cerrar el lector; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ConformanceLevel">
      <summary>Obtiene o establece el nivel de conformidad que cumplirá <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Uno de los valores de enumeración que especifica el nivel de conformidad que el lector XML aplicará. De manera predeterminada, es <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.DtdProcessing">
      <summary>Obtiene o establece un valor que determine el procesamiento de DTD.</summary>
      <returns>Uno de los valores de enumeración que determina el procesamiento de DTD. De manera predeterminada, es <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreComments">
      <summary>Obtiene o establece un valor que indica si se van a omitir los comentarios.</summary>
      <returns>Es <see langword="true" /> para omitir los comentarios; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions">
      <summary>Obtiene o establece un valor que indica si se van a omitir las instrucciones de procesamiento.</summary>
      <returns>Es <see langword="true" /> para omitir las instrucciones de procesamiento; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.IgnoreWhitespace">
      <summary>Obtiene o establece un valor que indica si se va a omitir el espacio en blanco no significativo.</summary>
      <returns>Es <see langword="true" /> para omitir el espacio en blanco; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LineNumberOffset">
      <summary>Obtiene o establece el desplazamiento del número de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Desplazamiento del número de línea. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.LinePositionOffset">
      <summary>Obtiene o establece el desplazamiento de la posición de línea del objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Desplazamiento de la posición de la línea. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities">
      <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento que resulta de expandir las entidades.</summary>
      <returns>El número máximo de caracteres permitido de las entidades expandidas. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument">
      <summary>Obtiene o establece un valor que indica el número máximo de caracteres permitido en un documento XML. Un valor cero (0) significa que no existe ningún límite en el tamaño del documento XML. Un valor distinto de cero especifica el tamaño máximo, en caracteres.</summary>
      <returns>El número máximo de caracteres permitido en un documento XML. El valor predeterminado es 0.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.NameTable">
      <summary>Obtiene o establece el objeto <see cref="T:System.Xml.XmlNameTable" /> utilizado para las comparaciones de cadenas subdivididas.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlNameTable" /> que almacena todas las cadenas subdivididas que utilizan todas las instancias del objeto <see cref="T:System.Xml.XmlReader" /> creadas mediante este objeto <see cref="T:System.Xml.XmlReaderSettings" />.  
  
De manera predeterminada, es <see langword="null" />. La instancia de <see cref="T:System.Xml.XmlReader" /> creada utilizará un nuevo objeto <see cref="T:System.Xml.NameTable" /> vacío si este valor es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ProhibitDtd">
      <summary>Obtiene o establece un valor que indica si se va a prohibir el procesamiento de la definición de tipo de documento (DTD). Esta propiedad ha quedado obsoleta. Utilice <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> en su lugar.</summary>
      <returns>Es <see langword="true" /> para prohibir el procesamiento de DTD; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.Schemas">
      <summary>Obtiene o establece el <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se va a utilizar al realizar la validación del esquema.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que se usará al realizar la validación de esquemas. El valor predeterminado es un objeto <see cref="T:System.Xml.Schema.XmlSchemaSet" /> vacío</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationFlags">
      <summary>Obtiene o establece un valor que indica la configuración de validación de esquemas. Esta configuración se aplica a los objetos <see cref="T:System.Xml.XmlReader" /> que validan esquemas (con la propiedad <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> establecida en <see langword="ValidationType.Schema" />).</summary>
      <returns>Combinación bit a bit de valores de enumeración que especifican opciones de validación. Los campos <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> están deshabilitados de forma predeterminada. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> y <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> están deshabilitados de forma predeterminada.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.ValidationType">
      <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlReader" /> realizará la validación o la asignación de tipos al leer.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ValidationType" /> que indica si XmlReader realizará la validación o la asignación de tipos al leer. De manera predeterminada, es <see langword="ValidationType.None" />.</returns>
    </member>
    <member name="P:System.Xml.XmlReaderSettings.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para obtener acceso a documentos externos.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlResolver" /> utilizado para tener acceso a documentos externos. Si se establece en <see langword="null" />, se produce una excepción <see cref="T:System.Xml.XmlException" /> cuando el objeto <see cref="T:System.Xml.XmlReader" /> intenta obtener acceso a un recurso externo. El valor predeterminado es un nuevo objeto <see cref="T:System.Xml.XmlUrlResolver" /> sin credenciales.  A partir de la .NET Framework 4.5.2, este valor de configuración tiene un valor predeterminado de <see langword="null" /> .</returns>
    </member>
    <member name="T:System.Xml.XmlResolver">
      <summary>Resuelve los recursos XML externos designados por un identificador uniforme de recursos (URI).</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Cuando se invalida en una clase derivada, asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual solo devuelve objetos System.IO.Stream.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> no es un tipo de <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
      <returns>Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Cuando se invalida en una clase derivada, resuelve el identificador URI absoluto a partir de los identificadores URI base y relativo.</summary>
      <param name="baseUri">Identificador URI base que se usa para resolver el identificador URI relativo.</param>
      <param name="relativeUri">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un URI absoluto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> es <see langword="null" />.</exception>
      <returns>URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
    </member>
    <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
      <summary>Permite al objeto Resolver devolver otros tipos además de <see cref="T:System.IO.Stream" />.</summary>
      <param name="absoluteUri">Identificador URI.</param>
      <param name="type">Tipo que se devuelve.</param>
      <returns>
        <see langword="true" /> si se admite el elemento <paramref name="type" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlResolver.Credentials">
      <summary>Cuando se invalida en una clase derivada, establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns>Credenciales que se usan para autenticar las solicitudes web. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see langword="XmlResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="T:System.Xml.XmlSecureResolver">
      <summary>Ayuda a proteger otra implementación de <see cref="T:System.Xml.XmlResolver" /> ajustando el objeto <see cref="T:System.Xml.XmlResolver" /> y restringiendo los recursos a los que tiene acceso el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSecureResolver" /> con el objeto <see cref="T:System.Xml.XmlResolver" /> y la dirección URL proporcionados.</summary>
      <param name="resolver">Solucionador de XML que ajusta la clase <see cref="T:System.Xml.XmlSecureResolver" />.</param>
      <param name="securityUrl">Dirección URL usada para crear el objeto <see cref="T:System.Security.PermissionSet" /> que se aplicará al <see cref="T:System.Xml.XmlResolver" /> subyacente. El <see cref="T:System.Xml.XmlSecureResolver" /> llama a <see cref="M:System.Security.PermissionSet.PermitOnly" /> en el objeto <see cref="T:System.Security.PermissionSet" /> creado antes de llamar a <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</param>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Asigna un identificador URI a un objeto que contiene el recurso real. Este método establece provisionalmente el objeto <see cref="T:System.Security.PermissionSet" /> que se crea en el constructor llamando a <see cref="M:System.Security.PermissionSet.PermitOnly" /> antes de llamar a <see langword="GetEntity" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente para abrir el recurso.</summary>
      <param name="absoluteUri">URI que se devuelve desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> no es un tipo <see langword="null" /> ni <see cref="T:System.IO.Stream" />.</exception>
      <exception cref="T:System.UriFormatException">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
      <returns>Flujo devuelto por una llamada a <see langword="GetEntity" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La versión actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Flujo devuelto por una llamada a <see langword="GetEntity" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente. Si se especifica un tipo que no sea <see cref="T:System.IO.Stream" />, el método devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resuelve el URI absoluto a partir de los URI base y relativo llamando a <see langword="ResolveUri" /> en el <see cref="T:System.Xml.XmlResolver" /> subyacente.</summary>
      <param name="baseUri">Identificador URI base que se usa para resolver el identificador URI relativo.</param>
      <param name="relativeUri">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un URI absoluto.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="relativeUri" /> es <see langword="null" />.</exception>
      <returns>URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver (devuelto mediante una llamada a <see langword="ResolveUri" /> en el elemento <see cref="T:System.Xml.XmlResolver" /> subyacente).</returns>
    </member>
    <member name="P:System.Xml.XmlSecureResolver.Credentials">
      <summary>Establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns>Credenciales que se usan para autenticar las solicitudes web. <see cref="T:System.Xml.XmlSecureResolver" /> establece las credenciales dadas en el <see cref="T:System.Xml.XmlResolver" /> subyacente. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see cref="T:System.Xml.XmlSecureResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="T:System.Xml.XmlSignificantWhitespace">
      <summary>Representa el espacio en blanco entre marcas en un nodo de contenido mixto o espacio en blanco dentro del ámbito xml:space= "preserve". También se hace referencia a esto como espacio en blanco significativo.</summary>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlSignificantWhitespace" />.</summary>
      <param name="strData">Caracteres de espacio en blanco del nodo.</param>
      <param name="doc">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de espacio en blanco significativo, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlSignificantWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlSignificantWhitespace" />, esta propiedad devuelve <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para nodos <see langword="XmlSignificantWhitespace" />, esta propiedad devuelve <see langword="#significant-whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para los nodos <see langword="XmlSignificantWhitespace" />, este valor es XmlNodeType.SignificantWhitespace.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.ParentNode">
      <summary>Obtiene el elemento primario del nodo actual.</summary>
      <returns>Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.PreviousText">
      <summary>Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns>Devuelve <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlSignificantWhitespace.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">Establecimiento de <see langword="Value" /> en caracteres de espacio en blanco no válidos.</exception>
      <returns>Caracteres de espacio en blanco encontrados en el nodo.</returns>
    </member>
    <member name="T:System.Xml.XmlSpace">
      <summary>Especifica el ámbito de <see langword="xml:space" /> actual.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Default">
      <summary>El ámbito de <see langword="xml:space" /> equivale a <see langword="default" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.None">
      <summary>Sin ámbito de <see langword="xml:space" />.</summary>
    </member>
    <member name="F:System.Xml.XmlSpace.Preserve">
      <summary>El ámbito de <see langword="xml:space" /> equivale a <see langword="preserve" />.</summary>
    </member>
    <member name="T:System.Xml.XmlText">
      <summary>Representa el contenido de texto de un elemento o atributo.</summary>
    </member>
    <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlText" />.</summary>
      <param name="strData">El contenido del nodo: vea la propiedad <see cref="P:System.Xml.XmlText.Value" />.</param>
      <param name="doc">Documento XML primario.</param>
    </member>
    <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
      <summary>Divide el nodo en dos nodos en el desplazamiento especificado, manteniéndolos en el árbol como nodos relacionados.</summary>
      <param name="offset">Desplazamiento en el que se va a dividir el nodo.</param>
      <returns>Nuevo nodo.</returns>
    </member>
    <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado. Los nodos <see langword="XmlText" /> no tienen nodos secundarios, por lo que este método no tiene ningún efecto.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlText.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see langword="XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlText.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos de texto, esta propiedad devuelve <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para nodos de texto, esta propiedad devuelve <see langword="#text" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Para nodos de texto, este valor es XmlNodeType.Text.</returns>
    </member>
    <member name="P:System.Xml.XmlText.ParentNode">
      <summary>Obtiene el nodo primario de este nodo (para nodos que pueden tener nodos primarios).</summary>
      <returns>
        <see langword="XmlNode" /> que es el elemento principal del nodo actual. Si se acaba de crear un nodo y todavía no se ha agregado al árbol, o si se ha quitado del árbol, el elemento principal es <see langword="null" />. Para todos los demás nodos, el valor devuelto depende de <see cref="P:System.Xml.XmlNode.NodeType" /> del nodo. En la tabla siguiente se describen los valores devueltos posibles de la propiedad <see langword="ParentNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.PreviousText">
      <summary>Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns>Devuelve <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlText.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <returns>El contenido del nodo de texto.</returns>
    </member>
    <member name="T:System.Xml.XmlTextReader">
      <summary>Representa un lector que proporciona acceso rápido a datos XML, sin almacenamiento en caché y con desplazamiento solo hacia delante.  
  
A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlReader" /> en su lugar.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor">
      <summary>Inicializa una nueva instancia de <see langword="XmlTextReader" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado.</summary>
      <param name="input">Flujo que contiene los datos XML que se van a leer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado y <see cref="T:System.Xml.XmlNameTable" />.</summary>
      <param name="input">Flujo que contiene los datos XML que se van a leer.</param>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="input" /> o <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el flujo especificado, <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" />.</summary>
      <param name="xmlFragment">Flujo que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener el fragmento. Vea la tabla que figura a continuación.</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <c>xml:lang</c> actual y el ámbito de <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> no es Element, Attribute ni Document <see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el objeto <see cref="T:System.IO.TextReader" /> especificado.</summary>
      <param name="input">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con los parámetros <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="input">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo especificado.</summary>
      <param name="url">URL del archivo que contiene los datos XML. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">No se puede encontrar parte del nombre de archivo o del directorio.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> es una cadena vacía.</exception>
      <exception cref="T:System.Net.WebException">No se puede resolver el nombre de archivo remoto.  
  
 o bien  
  
 Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y el flujo especificados.</summary>
      <param name="url">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <param name="input">Flujo que contiene los datos XML que se van a leer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL, el flujo y la <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si el valor de <paramref name="url" /> es <see langword="null" />, el valor de <see langword="BaseURI" /> se establece en <see langword="String.Empty" />.</param>
      <param name="input">Flujo que contiene los datos XML que se van a leer.</param>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException">El valor de <paramref name="input" /> o <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y el <see cref="T:System.IO.TextReader" /> especificados.</summary>
      <param name="url">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor.</param>
      <param name="input">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la dirección URL y los objetos <see cref="T:System.IO.TextReader" /> y <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url">Dirección URL que se va a usar para resolver los recursos externos. <see cref="P:System.Xml.XmlTextReader.BaseURI" /> se establece en este valor. Si el valor de <paramref name="url" /> es <see langword="null" />, el valor de <see langword="BaseURI" /> se establece en <see langword="String.Empty" />.</param>
      <param name="input">
        <see langword="TextReader" /> que contiene los datos XML que se van a leer.</param>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el archivo y el objeto <see cref="T:System.Xml.XmlNameTable" /> especificados.</summary>
      <param name="url">Dirección URL del archivo que contiene los datos XML que se van a leer.</param>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
      <exception cref="T:System.NullReferenceException">El valor <paramref name="nt" /> es <see langword="null" />.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar el archivo especificado.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">No se puede encontrar parte del nombre de archivo o del directorio.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="url" /> es una cadena vacía.</exception>
      <exception cref="T:System.Net.WebException">No se puede resolver el nombre de archivo remoto.  
  
 o bien  
  
 Error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="url" /> no es un URI válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con la cadena y los objetos <see cref="T:System.Xml.XmlNodeType" /> y <see cref="T:System.Xml.XmlParserContext" /> especificados.</summary>
      <param name="xmlFragment">Cadena que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto también determina lo que puede contener la cadena del fragmento. Vea la tabla que figura a continuación.</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> donde se va a analizar <paramref name="xmlFragment" />. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <c>xml:lang</c> actual y el ámbito de <c>xml:space</c>.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> no es <see langword="Element" />, <see langword="Attribute" /> o <see langword="Document" /><see langword="XmlNodeType" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlFragment" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlTextReader" /> con el objeto <see cref="T:System.Xml.XmlNameTable" /> especificado.</summary>
      <param name="nt">Objeto <see langword="XmlNameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.XmlTextReader.Close">
      <summary>Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a <see langword="Closed" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
      <summary>Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlTextReader.AttributeCount" />.</exception>
      <returns>Valor del atributo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
      <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
      <summary>Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Obtiene una colección que contiene todos los espacios de nombres que hay actualmente en el ámbito.</summary>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns>Objeto <see cref="T:System.Collections.IDictionary" /> que contiene todos los espacios de nombres que hay actualmente en el ámbito. Si el lector no se coloca en un elemento, se devuelve un diccionario vacío (sin ningún espacio de nombres).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.GetRemainder">
      <summary>Obtiene el resto de XML con búfer.</summary>
      <returns>
        <see cref="T:System.IO.TextReader" /> que contiene el resto del código XML almacenado en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.HasLineInfo">
      <summary>Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns>Es <see langword="true" /> si la clase puede devolver información de línea; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
      <summary>Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía. Esta cadena no necesita subdividirse.</param>
      <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Xml.XmlTextReader.Namespaces" /> se establece en <see langword="true" /> y el valor de <paramref name="prefix" /> es <see langword="null" />.</exception>
      <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)">
      <summary>Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
      <summary>Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
      <summary>Se desplaza hasta el atributo con el nombre local y el URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToElement">
      <summary>Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns>Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToFirstAttribute">
      <summary>Se mueve al primer atributo.</summary>
      <returns>Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.MoveToNextAttribute">
      <summary>Se mueve al siguiente atributo.</summary>
      <returns>Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.Read">
      <summary>Lee el siguiente nodo del flujo.</summary>
      <exception cref="T:System.Xml.XmlException">Se ha producido un error al analizar el fragmento de XML.</exception>
      <returns>Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadAttributeValue">
      <summary>Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es <see langword="String.Empty" />.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Descodifica Base64 y devuelve los bytes binarios descodificados.</summary>
      <param name="array">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.</param>
      <param name="offset">Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer.</param>
      <param name="len">Número de bytes que se van a escribir en el búfer.</param>
      <exception cref="T:System.Xml.XmlException">La secuencia Base64 no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Descodifica <see langword="BinHex" /> y devuelve los bytes binarios descodificados.</summary>
      <param name="array">Matriz de bytes que sirve como búfer en el que se escriben los bytes binarios descodificados.</param>
      <param name="offset">Índice de base cero de la matriz que especifica dónde el método puede comenzar a escribir en el búfer.</param>
      <param name="len">Número de bytes que se van a escribir en el búfer.</param>
      <exception cref="T:System.Xml.XmlException">La secuencia <see langword="BinHex" /> no es válida.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="array" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> &lt; 0, o <paramref name="len" /> &lt; 0, o <paramref name="len" /> &gt; <paramref name="array" />.Length- <paramref name="offset" />.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
      <summary>Lee el contenido de texto de un elemento en un búfer de caracteres. Este método se ha diseñado para leer grandes flujos de texto incrustado llamando sucesivamente al método.</summary>
      <param name="buffer">Matriz de caracteres que sirve como búfer en el que se escribe el contenido de texto.</param>
      <param name="index">Posición dentro de <paramref name="buffer" /> donde el método puede comenzar a escribir contenido de texto.</param>
      <param name="count">Número de caracteres que se van a escribir en el <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="count" /> es mayor que el espacio especificado en <paramref name="buffer" /> (tamaño de búfer - <paramref name="index" />).</exception>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />
        <see langword="&lt; 0" /> o <paramref name="count" /><see langword="&lt; 0" />.</exception>
      <returns>Número de caracteres que se han leído. Puede ser <see langword="0" /> si el lector no está situado en un elemento o si no hay más contenido de texto para devolver en el contexto actual.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de <see langword="Base64" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">En el nodo actual, no se admite el método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlTextReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de <see langword="BinHex" />.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ReadString">
      <summary>Lee el contenido de un nodo de texto o un elemento como cadena.</summary>
      <exception cref="T:System.Xml.XmlException">Se ha producido un error al analizar el fragmento de XML.</exception>
      <exception cref="T:System.InvalidOperationException">Se ha intentado realizar una operación no válida.</exception>
      <returns>Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
  
 <see langword="Note:" /> El nodo de texto puede ser un nodo de texto de elemento o de atributo.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResetState">
      <summary>Restablece el estado del lector en ReadState.Initial.</summary>
      <exception cref="T:System.InvalidOperationException">Se llama a <see langword="ResetState" /> si el lector se construyó mediante <see cref="T:System.Xml.XmlParserContext" />.</exception>
      <exception cref="T:System.Xml.XmlException">Los documentos de una sola secuencia no comparten la misma codificación.</exception>
    </member>
    <member name="M:System.Xml.XmlTextReader.ResolveEntity">
      <summary>Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.Skip">
      <summary>Omite los nodos secundarios del nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica el tipo de nodos de espacio de nombres que se va a devolver.</param>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> que contiene los espacios de nombres que hay actualmente en el ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">Prefijo cuyo URI de espacio de nombres se desea buscar.</param>
      <returns>Identificador URI del espacio de nombres que está asignado al prefijo; es <see langword="null" /> si el prefijo no está asignado a ningún URI de espacio de nombres.</returns>
    </member>
    <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <returns>Prefijo asignado al URI del espacio de nombres; es <see langword="null" /> si este URI no está asignado a ningún prefijo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.AttributeCount">
      <summary>Obtiene el número de atributos del nodo actual.</summary>
      <returns>Número de atributos del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.BaseURI">
      <summary>Obtiene el identificador URI base del nodo actual.</summary>
      <returns>Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadBinaryContent">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns>Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanReadValueChunk">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />.</summary>
      <returns>Es <see langword="true" /> si <see cref="T:System.Xml.XmlTextReader" /> implementa el método <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlTextReader" /> siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.CanResolveEntity">
      <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns>Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. La clase <see langword="XmlTextReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Depth">
      <summary>Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns>Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.DtdProcessing">
      <summary>Obtiene o establece la enumeración <see cref="T:System.Xml.DtdProcessing" />.</summary>
      <returns>Enumeración <see cref="T:System.Xml.DtdProcessing" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Encoding">
      <summary>Obtiene la codificación del documento.</summary>
      <returns>Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se usa el valor predeterminado UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EntityHandling">
      <summary>Obtiene o establece un valor que especifica cómo controla el lector las entidades.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor para <see langword="EntityHandling" />, el valor predeterminado es <see langword="EntityHandling.ExpandCharEntities" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.EOF">
      <summary>Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns>Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.HasValue">
      <summary>Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlTextReader.Value" /> con un valor distinto de <see langword="String.Empty" />.</summary>
      <returns>Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsDefault">
      <summary>Obtiene un valor que indica si el nodo actual es un atributo que se ha generado a partir del valor predeterminado definido en la DTD o esquema.</summary>
      <returns>Esta propiedad devuelve siempre <see langword="false" />. (<see cref="T:System.Xml.XmlTextReader" /> no expande los atributos predeterminados).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.IsEmptyElement">
      <summary>Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> es si el nodo actual es un elemento ( <see cref="P:System.Xml.XmlTextReader.NodeType" /> es igual <see langword="XmlNodeType.Element" /> a) que termina en <c>/&gt;</c> ; en caso contrario, es <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LineNumber">
      <summary>Obtiene el número de línea actual.</summary>
      <returns>Número de línea actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LinePosition">
      <summary>Obtiene la posición de línea actual.</summary>
      <returns>Posición de línea actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.LocalName">
      <summary>Obtiene el nombre local del nodo actual.</summary>
      <returns>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve <see langword="String.Empty" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Name">
      <summary>Obtiene el nombre completo del nodo actual.</summary>
      <returns>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> nombre</description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.</description></item><item><term><see langword="DocumentType" /></term><description> Nombre del tipo de documento.</description></item><item><term><see langword="Element" /></term><description> Nombre de la etiqueta.</description></item><item><term><see langword="EntityReference" /></term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destino de la instrucción de procesamiento.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Cadena literal <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Namespaces">
      <summary>Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <exception cref="T:System.InvalidOperationException">Se ha establecido esta propiedad después de producirse una operación de lectura (<see cref="P:System.Xml.XmlTextReader.ReadState" /> no es <see langword="ReadState.Initial" />).</exception>
      <returns>Es <see langword="true" /> si se debe aplicar la compatibilidad de espacio de nombres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NamespaceURI">
      <summary>Obtiene el URI de espacio de nombres (según se define en la especificación relativa a espacios de nombres del Consorcio W3C) del nodo en el que está situado el lector.</summary>
      <returns>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NameTable">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns>
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena en el nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Normalization">
      <summary>Obtiene o establece un valor que indica si se deben normalizar los valores de atributo y de espacio en blanco.</summary>
      <exception cref="T:System.InvalidOperationException">Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es <see langword="ReadState.Closed" />).</exception>
      <returns>
        <see langword="true" /> si se deben normalizar; en caso contrario, <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Prefix">
      <summary>Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns>Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ProhibitDtd">
      <summary>Obtiene o establece un valor que indica si se debe permitir el procesamiento de DTD. Esta propiedad ha quedado obsoleta. Utilice <see cref="P:System.Xml.XmlTextReader.DtdProcessing" /> en su lugar.</summary>
      <returns>Es <see langword="true" /> para no permitir el procesamiento de DTD; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.QuoteChar">
      <summary>Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <returns>Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.ReadState">
      <summary>Obtiene el estado del lector.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.Value">
      <summary>Obtiene el valor de texto del nodo actual.</summary>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlTextReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven <see langword="String.Empty" />.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> Valor</description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.</description></item><item><term><see langword="CDATA" /></term><description> Contenido de la sección CDATA.</description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.</description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> El contenido completo, sin incluir el destino.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> El espacio en blanco que se encuentra en el ámbito de <see langword="xml:space" />= 'preserve'.</description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.</description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.</description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.WhitespaceHandling">
      <summary>Obtiene o establece un valor que indica cómo se controla el espacio en blanco.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Esta propiedad se establece cuando el lector está cerrado (<see cref="P:System.Xml.XmlTextReader.ReadState" /> es <see langword="ReadState.Closed" />).</exception>
      <returns>Uno de los valores de <see cref="T:System.Xml.WhitespaceHandling" />. El valor predeterminado es <see langword="WhitespaceHandling.All" /> (devuelve los nodos <see langword="Whitespace" /> y <see langword="SignificantWhitespace" />).</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlLang">
      <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns>Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las referencias a DTD.</summary>
      <returns>Objeto <see langword="XmlResolver" /> que se va a usar. Si se establece en <see langword="null" />, los recursos externos no se resuelven.  
  
En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar un objeto <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextReader.XmlSpace">
      <summary>Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlTextWriter">
      <summary>Representa un sistema de escritura que proporciona un medio rápido, sin almacenamiento en caché y con desplazamiento sólo hacia delante para generar secuencias o archivos con datos XML que satisface las recomendaciones relativas a espacios de nombres en XML y Extensible Markup Language (XML) 1.0 del Consorcio W3C.  
  
A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlWriter" /> en su lugar.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante la secuencia y la codificación especificadas.</summary>
      <param name="w">Flujo en el que desea escribir.</param>
      <param name="encoding">Codificación que se va a generar. Si la codificación es <see langword="null" />, escribe la secuencia como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">No se admite la codificación o no se puede escribir en la secuencia.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="w" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
      <summary>Crea una instancia de la clase <see langword="XmlTextWriter" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="w">
        <see langword="TextWriter" /> en el que se va a escribir. Se supone que <see langword="TextWriter" /> ya está establecido en la codificación correcta.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
      <summary>Crea una instancia de la clase <see cref="T:System.Xml.XmlTextWriter" /> mediante el archivo especificado.</summary>
      <param name="filename">Nombre del archivo en el que se va a escribir. Si existe el archivo, lo truncará y lo sobrescribirá con el nuevo contenido.</param>
      <param name="encoding">Codificación que se va a generar. Si la codificación es <see langword="null" />, escribe el archivo como UTF-8 y omite el atributo de codificación de la instrucción <see langword="ProcessingInstruction" />.</param>
      <exception cref="T:System.ArgumentException">No se admite la codificación; el nombre de archivo está vacío, sólo contiene espacios en blanco o contiene uno o más caracteres no válidos.</exception>
      <exception cref="T:System.UnauthorizedAccessException">Acceso denegado.</exception>
      <exception cref="T:System.ArgumentNullException">El nombre de archivo es <see langword="null" />.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">No se encuentra el directorio en el que hay que escribir.</exception>
      <exception cref="T:System.IO.IOException">El nombre de archivo incluye una sintaxis no correcta o no válida para el nombre de archivo, el nombre de directorio o la etiqueta de volumen.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone del permiso requerido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Close">
      <summary>Cierra este flujo y el flujo subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.Flush">
      <summary>Vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
      <summary>Devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</summary>
      <param name="ns">URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <returns>Prefijo que coincide. O bien <see langword="null" /> si no se encuentra ningún URI de espacio de nombres coincidente en el ámbito actual.</returns>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica los bytes binarios especificados en base64 y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica los bytes binarios especificados como binhex y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
      <summary>Escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)">
      <summary>Impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch">Carácter Unicode para el cual se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.ArgumentException">El carácter está en el intervalo de caracteres de par suplente, <see langword="0xd800" /> - <see langword="0xdfff" />; o el texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe texto en un búfer cada vez.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Xml.XmlTextWriter.WriteState" /> está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
      <summary>Escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML de formato incorrecto</exception>
      <exception cref="T:System.InvalidOperationException">El valor de <see cref="P:System.Xml.XmlTextWriter.WriteState" /> es <see langword="Closed" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Escribe la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</summary>
      <param name="name">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid">Si el valor de <paramref name="pubid" /> es nulo y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó a este método fuera del prólogo (después del elemento raíz).</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
  
o bien 
El valor de <paramref name="name" /> daría como resultado un archivo XML no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndAttribute">
      <summary>Cierra la anterior llamada al método <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndDocument">
      <summary>Cierra todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.ArgumentException">El documento XML no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEndElement">
      <summary>Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
      <summary>Escribe una referencia a entidad como <see langword="&amp;name;" />.</summary>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.ArgumentException">El texto generaría un documento XML de formato incorrecto o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteFullEndElement">
      <summary>Cierra un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
      <summary>Escribe el nombre especificado y garantiza que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 de W3C.</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
      <summary>Escribe el nombre especificado y garantiza que se trata de un elemento <see langword="NmToken" /> válido de acuerdo con la recomendación relativa a XML 1.0 de W3C.</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un <see langword="NmToken" /> válido; o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name">Nombre de la instrucción de procesamiento.</param>
      <param name="text">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.  
  
 <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
  
Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName">Nombre local que se va a escribir.</param>
      <param name="ns">URI de espacio de nombres que se va a asociar al nombre.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.  
  
 <paramref name="localName" /> no es un nombre válido según la especificación relativa a espacios de nombres del Consorcio W3C.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe manualmente el marcado sin formato de un búfer de caracteres.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
      <summary>Escribe manualmente el marcado sin formato de una cadena.</summary>
      <param name="data">Cadena que contiene el texto que se va a escribir.</param>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Escribe el inicio de un atributo.</summary>
      <param name="prefix">Prefijo <see langword="Namespace" /> del atributo.</param>
      <param name="localName">
        <see langword="LocalName" /> del atributo.</param>
      <param name="ns">
        <see langword="NamespaceURI" /> del atributo</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument">
      <summary>Escribe la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)">
      <summary>Escribe la declaración XML con la versión "1.0" así como el atributo independiente.</summary>
      <param name="standalone">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura también lo escribe automáticamente.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteString(System.String)">
      <summary>Escribe el contenido de texto especificado.</summary>
      <param name="text">Texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">La cadena de texto contiene un par suplente no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Genera y escribe la entidad de carácter suplente del par de caracteres suplentes.</summary>
      <param name="lowChar">Suplente bajo. Debe ser un valor comprendido entre <see langword="0xDC00" /> y <see langword="0xDFFF" />.</param>
      <param name="highChar">Suplente alto. Debe ser un valor comprendido entre <see langword="0xD800" /> y <see langword="0xDBFF" />.</param>
      <exception cref="T:System.Exception">Se ha pasado un par de caracteres suplentes no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
      <summary>Escribe el espacio en blanco especificado.</summary>
      <param name="ws">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.ArgumentException">La cadena no contiene caracteres de espacio en blanco.</exception>
    </member>
    <member name="P:System.Xml.XmlTextWriter.BaseStream">
      <summary>Obtiene el objeto de flujo subyacente.</summary>
      <returns>Secuencia en la que está escribiendo <see langword="XmlTextWriter" /> o <see langword="null" /> si se construyó <see langword="XmlTextWriter" /> mediante <see cref="T:System.IO.TextWriter" /> que no se hereda de la clase <see cref="T:System.IO.StreamWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Formatting">
      <summary>Indica cómo se da formato a la salida.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.Formatting" />. El valor predeterminado es <see langword="Formatting.None" /> (sin formato especial).</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Indentation">
      <summary>Obtiene o establece el número de caracteres IndentChars que se escriben para cada nivel de la jerarquía cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> está establecida en <see langword="Formatting.Indented" />.</summary>
      <exception cref="T:System.ArgumentException">Establecimiento de esta propiedad en un valor negativo.</exception>
      <returns>Número de caracteres <see langword="IndentChars" /> de cada nivel. El valor predeterminado es 2.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.IndentChar">
      <summary>Obtiene o establece el carácter que se va a utilizar para aplicar sangría cuando la propiedad <see cref="P:System.Xml.XmlTextWriter.Formatting" /> se establece en <see langword="Formatting.Indented" />.</summary>
      <returns>Carácter que se va a usar para la sangría. El valor predeterminado es el carácter de espacio.  
  
 <block subset="none" type="note"><para><see langword="XmlTextWriter" /> permite establecer esta propiedad en cualquier carácter. Para asegurar la validez de XML, es preciso especificar un carácter de espacio en blanco válido: 0x9, 0x10, 0x13 ó 0x20.</para></block></returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.Namespaces">
      <summary>Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <exception cref="T:System.InvalidOperationException">Esta propiedad sólo se puede cambiar en el estado <see langword="WriteState.Start" />.</exception>
      <returns>
        <see langword="true" /> para admitir los espacios de nombres; en caso contrario, <see langword="false" />.  
  
De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.QuoteChar">
      <summary>Obtiene o establece qué carácter se va a usar para delimitar los valores de atributo.</summary>
      <exception cref="T:System.ArgumentException">Establecimiento de esta propiedad en un valor distinto de comillas dobles o simples.</exception>
      <returns>Carácter que se va a usar para delimitar los valores de atributo. Debe ser una comilla simple ( &amp; #39;) o una comilla doble ( &amp; #34;). Las comillas dobles son el valor predeterminado.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.WriteState">
      <summary>Obtiene el estado del sistema de escritura.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlLang">
      <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns>El <see langword="xml:lang" /> actual o <see langword="null" /> si no hay <see langword="xml:lang" /> en el ámbito actual.</returns>
    </member>
    <member name="P:System.Xml.XmlTextWriter.XmlSpace">
      <summary>Obtiene <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns>
        <see langword="XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.  
  
 <list type="table"><listheader><term> Value</term><description> Significado</description></listheader><item><term> Ninguno</term><description> Este es el valor predeterminado si no existe ningún ámbito de <see langword="xml:space" />.</description></item><item><term> Default</term><description> El ámbito actual es <see langword="xml:space" />="default".</description></item><item><term> Preserve</term><description> El ámbito actual es <see langword="xml:space" />="preserve".</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlTokenizedType">
      <summary>Representa el tipo XML de la cadena. Esto permite que la cadena se lea como un tipo XML concreto; por ejemplo, un tipo de sección CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.CDATA">
      <summary>Tipo CDATA.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITIES">
      <summary>Tipo ENTITIES.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENTITY">
      <summary>Tipo ENTITY.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ENUMERATION">
      <summary>Tipo ENUMERATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.ID">
      <summary>Tipo ID.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREF">
      <summary>Tipo IDREF.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.IDREFS">
      <summary>Tipo IDREFS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NCName">
      <summary>Tipo NCName.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKEN">
      <summary>Tipo NMTOKEN.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NMTOKENS">
      <summary>Tipo NMTOKENS.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.None">
      <summary>Sin tipo.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.NOTATION">
      <summary>Tipo NOTATION.</summary>
    </member>
    <member name="F:System.Xml.XmlTokenizedType.QName">
      <summary>Tipo QName.</summary>
    </member>
    <member name="T:System.Xml.XmlUrlResolver">
      <summary>Resuelve los recursos XML externos designados por un identificador uniforme de recursos (URI).</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlUrlResolver" />.</summary>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
      <summary>Asigna un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La implementación actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="ofObjectToReturn" /> no es un tipo <see langword="null" /> ni <see langword="Stream" />.</exception>
      <exception cref="T:System.UriFormatException">El identificador URI especificado no es un identificador URI absoluto.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="absoluteUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Exception">Se ha producido un error en tiempo de ejecución (por ejemplo, una interrupción en la conexión con el servidor).</exception>
      <returns>Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
      <summary>Asigna asincrónicamente un identificador URI a un objeto que contiene el recurso real.</summary>
      <param name="absoluteUri">URI devuelto desde <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
      <param name="role">No se usa actualmente.</param>
      <param name="ofObjectToReturn">Tipo de objeto que se va a devolver. La implementación actual solo devuelve objetos <see cref="T:System.IO.Stream" />.</param>
      <returns>Objeto de flujo o <see langword="null" /> si se especifica un tipo que no sea un flujo.</returns>
    </member>
    <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
      <summary>Resuelve el URI absoluto a partir de los URI base y relativo.</summary>
      <param name="baseUri">Identificador URI base que se usa para resolver el identificador URI relativo.</param>
      <param name="relativeUri">Identificador URI que se va a resolver. El identificador URI puede ser absoluto o relativo. Si es absoluto, este valor reemplaza de manera efectiva el valor de <paramref name="baseUri" />. Si es relativo, se combina con <paramref name="baseUri" /> para formar un URI absoluto.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="baseUri" /> es <see langword="null" /> o bien <paramref name="relativeUri" /> es <see langword="null" />.</exception>
      <returns>URI absoluto o <see langword="null" /> si el URI relativo no se puede resolver.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.CachePolicy">
      <summary>Obtiene o establece la directiva de caché para el objeto <see cref="T:System.Net.WebRequest" /> subyacente.</summary>
      <returns>Directiva de caché para la solicitud web subyacente.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Credentials">
      <summary>Establece las credenciales usadas para autenticar las solicitudes web.</summary>
      <returns>Credenciales que se usan para autenticar las solicitudes web. Si no se establece esta propiedad, el valor predeterminado es <see langword="null" />; es decir, el objeto <see langword="XmlUrlResolver" /> no tiene credenciales de usuario.</returns>
    </member>
    <member name="P:System.Xml.XmlUrlResolver.Proxy">
      <summary>Obtiene o establece el proxy de red para el objeto <see cref="T:System.Net.WebRequest" /> subyacente.</summary>
      <returns>
        <see cref="T:System.Net.IWebProxy" /> que se va a utilizar para tener acceso al recurso de Internet.</returns>
    </member>
    <member name="T:System.Xml.XmlValidatingReader">
      <summary>Representa un lector que proporciona validación de definiciones de tipos de documentos (DTD), de esquemas reducidos de datos XML (esquemas XDR) y del lenguaje de definición de esquemas XML (esquemas XSD).  
  
Esta clase está obsoleta. A partir de .NET Framework 2.0, se recomienda usar la clase <see cref="T:System.Xml.XmlReaderSettings" /> y el método <see cref="Overload:System.Xml.XmlReader.Create" /> para crear un lector XML de validación.</summary>
    </member>
    <member name="E:System.Xml.XmlValidatingReader.ValidationEventHandler">
      <summary>Establece un controlador de eventos para recibir información acerca de los errores de validación de definiciones de tipos de documentos (DTD), del esquema XDR (esquema reducido de datos XML) y del esquema XSD (esquema del lenguaje de definición de esquemas XML).</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
      <param name="xmlFragment">Flujo que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina lo que puede contener el fragmento (vea la tabla que figura más abajo).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.XmlNameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el <see langword="xml:lang" /> actual y el ámbito de <see langword="xml:space" />.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> con los valores especificados.</summary>
      <param name="xmlFragment">Cadena que contiene el fragmento de XML que se va a analizar.</param>
      <param name="fragType">
        <see cref="T:System.Xml.XmlNodeType" /> del fragmento de XML. Esto determina también lo que puede contener la cadena del fragmento (vea la tabla que figura más abajo).</param>
      <param name="context">
        <see cref="T:System.Xml.XmlParserContext" /> en el que se analizará el fragmento de XML. Esto incluye el objeto <see cref="T:System.Xml.NameTable" /> que se va a usar, la codificación, el ámbito de espacio de nombres, el xml:lang actual y el ámbito de xml:space.</param>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="fragType" /> no es uno de los tipos de nodo que se enumeran en la tabla que figura más abajo.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XmlValidatingReader" /> que valida el contenido devuelto por el objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="reader">
        <see langword="XmlReader" /> en el que se va a leer durante la validación. La implementación actual solo admite <see cref="T:System.Xml.XmlTextReader" />.</param>
      <exception cref="T:System.ArgumentException">El lector especificado no es <see langword="XmlTextReader" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Close">
      <summary>Cambia la propiedad <see cref="P:System.Xml.XmlReader.ReadState" /> a Closed.</summary>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.Int32)">
      <summary>Obtiene el valor del atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo. El índice está basado en cero. El primer atributo tiene índice 0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlValidatingReader.AttributeCount" />.</exception>
      <returns>Valor del atributo especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
      <summary>Obtiene el valor del atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
      <summary>Obtiene el valor del atributo que tiene el nombre local y el identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Valor del atributo especificado. Si no se encuentra el atributo, se devuelve <see langword="null" />. Este método no desplaza el lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.HasLineInfo">
      <summary>Obtiene un valor que indica si la clase puede devolver información de línea.</summary>
      <returns>Es <see langword="true" /> si la clase puede devolver información de línea; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
      <summary>Resuelve un prefijo de espacio de nombres en el ámbito del elemento actual.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase una cadena vacía.</param>
      <returns>Identificador URI de espacio de nombres al que se asigna el prefijo o <see langword="null" /> si no se encuentra ningún prefijo coincidente.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.Int32)">
      <summary>Se desplaza hasta el atributo con el índice especificado.</summary>
      <param name="i">Índice del atributo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="i" /> es menor que cero o mayor o igual que <see cref="P:System.Xml.XmlReader.AttributeCount" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
      <summary>Se desplaza hasta el atributo con el nombre especificado.</summary>
      <param name="name">Nombre completo del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
      <summary>Se desplaza hasta el atributo que tiene el nombre local e identificador uniforme de recursos (URI) de espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>Es <see langword="true" /> si se encuentra el atributo; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del lector.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToElement">
      <summary>Se desplaza hasta el elemento que contiene el nodo de atributo actual.</summary>
      <returns>Es <see langword="true" /> si el lector está situado en un atributo (el lector se desplaza hasta el elemento que posee el atributo); es <see langword="false" /> si el lector no está situado en un atributo (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToFirstAttribute">
      <summary>Se mueve al primer atributo.</summary>
      <returns>Es <see langword="true" /> si existe un atributo (el lector se desplaza hasta el primer atributo); en caso contrario, es <see langword="false" /> (no cambia la posición del lector).</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.MoveToNextAttribute">
      <summary>Se mueve al siguiente atributo.</summary>
      <returns>Es <see langword="true" /> si hay siguiente atributo; es <see langword="false" /> si no hay más atributos.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.Read">
      <summary>Lee el siguiente nodo del flujo.</summary>
      <returns>Es <see langword="true" /> si se lee correctamente el siguiente nodo; es <see langword="false" /> si no hay más nodos que leer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadAttributeValue">
      <summary>Analiza el valor de atributo en uno o varios nodos <see langword="Text" />, <see langword="EntityReference" /> o <see langword="EndEntity" />.</summary>
      <returns>
        <see langword="true" /> si hay nodos para devolver.  
  
 <see langword="false" /> si el lector no está situado en un nodo de atributo cuando se realiza la llamada inicial o si se leyeron todos los valores de atributo.  
  
Un atributo vacío, como <c>misc=""</c>, devuelve <see langword="true" /> con un solo nodo cuyo valor es String.Empty.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados en Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el contenido y devuelve los bytes binarios descodificados de BinHex.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El método <see cref="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> no es compatible con el nodo actual.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de Base64.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Lee el elemento y descodifica el contenido de BinHex.</summary>
      <param name="buffer">Búfer donde se va a copiar el texto resultante. Este valor no puede ser <see langword="null" />.</param>
      <param name="index">Posición de desplazamiento en el búfer donde debe comenzar la copia del resultado.</param>
      <param name="count">Número máximo de bytes que se van a copiar en el búfer. El número real de bytes copiados se devuelve a partir de este método.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual no es un nodo de elemento.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">El índice del búfer (index) o la suma del índice y el recuento (index + count) es mayor que el tamaño de búfer asignado.</exception>
      <exception cref="T:System.NotSupportedException">La implementación de <see cref="T:System.Xml.XmlValidatingReader" /> no admite este método.</exception>
      <exception cref="T:System.Xml.XmlException">El elemento contiene un contenido mixto.</exception>
      <exception cref="T:System.FormatException">El contenido no puede convertirse en el tipo solicitado.</exception>
      <returns>Número de bytes escritos en el búfer.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadString">
      <summary>Lee el contenido de un nodo de elemento o de texto como una cadena.</summary>
      <returns>Contenido del nodo de elemento o de texto. Puede ser una cadena vacía si el lector está situado en un nodo que no sea de elemento ni de texto, o si no hay más contenido de texto para devolver en el contexto actual.  
  
 <block subset="none" type="note"><para>  
 El nodo de texto puede ser un nodo de texto de elemento o de atributo.</para></block></returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ReadTypedValue">
      <summary>Obtiene el tipo de Common Language Runtime para el tipo de esquema XSD (esquema del lenguaje de definición de esquemas XML) especificado.</summary>
      <returns>Tipo de Common Language Runtime para el tipo de esquema XML especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.ResolveEntity">
      <summary>Resuelve la referencia a entidad de los nodos <see langword="EntityReference" />.</summary>
      <exception cref="T:System.InvalidOperationException">El lector no se encuentra en un nodo <see langword="EntityReference" />.</exception>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</summary>
      <param name="scope">Objeto <see cref="T:System.Xml.XmlNamespaceScope" /> que identifica el ámbito del lector.</param>
      <returns>Objeto <see cref="T:System.Collections.IDictionary" /> que identifica los espacios de nombres del ámbito.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</summary>
      <param name="prefix">El prefijo del espacio de nombres.</param>
      <returns>Valor de cadena que contiene el identificador URI del espacio de nombres asociado al prefijo.</returns>
    </member>
    <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
      <summary>Para obtener una descripción de este miembro, vea <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</summary>
      <param name="namespaceName">Espacio de nombres asociado al prefijo.</param>
      <returns>Valor de cadena que contiene el prefijo del espacio de nombres asociado a <paramref name="namespaceName" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.AttributeCount">
      <summary>Obtiene el número de atributos del nodo actual.</summary>
      <returns>Número de atributos del nodo actual. Este número incluye los atributos predeterminados.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.BaseURI">
      <summary>Obtiene el identificador URI base del nodo actual.</summary>
      <returns>Identificador URI base del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanReadBinaryContent">
      <summary>Obtiene un valor que indica si <see cref="T:System.Xml.XmlValidatingReader" /> implementa los métodos de lectura de contenido binario.</summary>
      <returns>Es <see langword="true" /> si se implementan los métodos de lectura de contenido binario; en caso contrario, es <see langword="false" />. La clase <see cref="T:System.Xml.XmlValidatingReader" /> devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.CanResolveEntity">
      <summary>Obtiene un valor que indica si este lector puede analizar y resolver entidades.</summary>
      <returns>Es <see langword="true" /> si el lector puede analizar y resolver entidades; en caso contrario, es <see langword="false" />. <see langword="XmlValidatingReader" /> siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Depth">
      <summary>Obtiene la profundidad del nodo actual en el documento XML.</summary>
      <returns>Profundidad del nodo actual en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Encoding">
      <summary>Obtiene el atributo de codificación del documento.</summary>
      <returns>Valor de codificación. Si no existe ningún atributo de codificación y no hay ninguna marca de orden de bytes, se usa el valor predeterminado UTF-8.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EntityHandling">
      <summary>Obtiene o establece un valor que especifica cómo controla el lector las entidades.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">Se ha especificado un valor no válido.</exception>
      <returns>Uno de los valores de <see cref="T:System.Xml.EntityHandling" />. Si no se especifica ningún valor <see langword="EntityHandling" />, se usa el valor predeterminado EntityHandling.ExpandEntities.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.EOF">
      <summary>Obtiene un valor que indica si el lector está situado al final del flujo.</summary>
      <returns>Es <see langword="true" /> si el lector está situado al final del flujo; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.HasValue">
      <summary>Obtiene un valor que indica si el nodo actual puede tener una propiedad <see cref="P:System.Xml.XmlValidatingReader.Value" /> con un valor distinto de String.Empty.</summary>
      <returns>Es <see langword="true" /> si el nodo en el que está situado actualmente el lector puede tener un <see langword="Value" />; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsDefault">
      <summary>Obtiene un valor que indica si el nodo actual es un atributo generado a partir del valor predeterminado definido en la definición de tipo de documento (DTD) o en el esquema.</summary>
      <returns>Es <see langword="true" /> si el nodo actual es un atributo cuyo valor fue generado a partir del valor predeterminado definido en la DTD o el esquema; es <see langword="false" /> si el valor de atributo se estableció explícitamente.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.IsEmptyElement">
      <summary>Obtiene un valor que indica si el nodo actual es un elemento vacío (por ejemplo, <c>&lt;MyElement/&gt;</c>).</summary>
      <returns>
        <see langword="true" /> es si el nodo actual es un elemento ( <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> es igual <see langword="XmlNodeType.Element" /> a) que termina en <c>/&gt;</c> ; en caso contrario, es <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LineNumber">
      <summary>Obtiene el número de línea actual.</summary>
      <returns>Número de línea actual. El valor inicial de esta propiedad es 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LinePosition">
      <summary>Obtiene la posición de línea actual.</summary>
      <returns>Posición de línea actual. El valor inicial de esta propiedad es 1.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.LocalName">
      <summary>Obtiene el nombre local del nodo actual.</summary>
      <returns>Nombre del nodo actual sin prefijo. Por ejemplo, <see langword="LocalName" /> es <see langword="book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
Para los tipos de nodo sin nombre (por ejemplo, <see langword="Text" />, <see langword="Comment" />, etc.), esta propiedad devuelve String.Empty.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Name">
      <summary>Obtiene el nombre completo del nodo actual.</summary>
      <returns>Nombre completo del nodo actual. Por ejemplo, <see langword="Name" /> es <see langword="bk:book" /> para el elemento <c> &lt; BK: Book &gt; </c>.  
  
El nombre devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo:  Los siguientes tipos de nodo devuelven los valores que figuran en la lista. Todos los demás tipos de nodo devuelven una cadena vacía.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> nombre</description></listheader><item><term><see langword="Attribute" /></term><description> El nombre del atributo.</description></item><item><term><see langword="DocumentType" /></term><description> Nombre del tipo de documento.</description></item><item><term><see langword="Element" /></term><description> Nombre de la etiqueta.</description></item><item><term><see langword="EntityReference" /></term><description> Nombre de la entidad a la que se hace referencia.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> Destino de la instrucción de procesamiento.</description></item><item><term><see langword="XmlDeclaration" /></term><description> Cadena literal <see langword="xml" />.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Namespaces">
      <summary>Obtiene o establece un valor que indica si se ha de aplicar la compatibilidad de espacio de nombres.</summary>
      <returns>Es <see langword="true" /> si se debe aplicar la compatibilidad de espacio de nombres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NamespaceURI">
      <summary>Obtiene el identificador uniforme de recursos (URI) del espacio de nombres (según se define en la especificación de espacio de nombres del Consorcio W3C) del nodo donde se coloca el lector.</summary>
      <returns>URI de espacio de nombres del nodo actual; en caso contrario, una cadena vacía.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NameTable">
      <summary>Obtiene el <see cref="T:System.Xml.XmlNameTable" /> asociado a esta implementación.</summary>
      <returns>
        <see langword="XmlNameTable" /> que permite obtener la versión subdividida de una cadena del nodo.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.NodeType">
      <summary>Obtiene el tipo del nodo actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlNodeType" /> que representa el tipo del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Prefix">
      <summary>Obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns>Prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.QuoteChar">
      <summary>Obtiene el carácter de comillas entre las que se encierra el valor de un nodo de atributo.</summary>
      <returns>Carácter de comillas (" o ') entre las que se encierra el valor de un nodo de atributo.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Reader">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlReader" /> que se usa para construir este objeto <see langword="XmlValidatingReader" />.</summary>
      <returns>
        <see langword="XmlReader" /> que se especifica en el constructor.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ReadState">
      <summary>Obtiene el estado del lector.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.ReadState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Schemas">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Schema.XmlSchemaCollection" /> que se va a usar para validación.</summary>
      <returns>
        <see langword="XmlSchemaCollection" /> que se va a usar para validación.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.SchemaType">
      <summary>Obtiene un objeto de tipo de esquema.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />, <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> o <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />, dependiendo de que el valor del nodo sea un tipo de esquema XSD (lenguaje de definición de esquemas XML) integrado o un tipo simpleType o complexType definido por el usuario; es <see langword="null" /> si el nodo actual no tiene tipo de esquema.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.ValidationType">
      <summary>Obtiene o establece un valor que indica el tipo de validación que se realiza.</summary>
      <exception cref="T:System.InvalidOperationException">Establecimiento de la propiedad después de haber llamado a Read.</exception>
      <returns>Uno de los valores de <see cref="T:System.Xml.ValidationType" />. Si esta propiedad no está establecida, se usa el valor predeterminado ValidationType.Auto.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.Value">
      <summary>Obtiene el valor de texto del nodo actual.</summary>
      <returns>El valor devuelto depende de la propiedad <see cref="P:System.Xml.XmlValidatingReader.NodeType" /> del nodo:  En la siguiente tabla se recogen los tipos de nodo que tienen un valor para devolver. Todos los demás tipos de nodo devuelven String.Empty.  
  
 <list type="table"><listheader><term> Tipo de nodo</term><description> Valor</description></listheader><item><term><see langword="Attribute" /></term><description> El valor del atributo.</description></item><item><term><see langword="CDATA" /></term><description> Contenido de la sección CDATA.</description></item><item><term><see langword="Comment" /></term><description> El contenido del comentario.</description></item><item><term><see langword="DocumentType" /></term><description> El subconjunto interno.</description></item><item><term><see langword="ProcessingInstruction" /></term><description> El contenido completo, sin incluir el destino.</description></item><item><term><see langword="SignificantWhitespace" /></term><description> Espacio en blanco entre marcas en un modelo de contenido mixto.</description></item><item><term><see langword="Text" /></term><description> El contenido del nodo de texto.</description></item><item><term><see langword="Whitespace" /></term><description> El espacio en blanco entre marcado.</description></item><item><term><see langword="XmlDeclaration" /></term><description> El contenido de la declaración.</description></item></list></returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlLang">
      <summary>Obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <returns>Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlResolver">
      <summary>Establece el objeto <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las referencias a ubicación de esquemas y definiciones de tipos de documentos (DTD) externos. <see langword="XmlResolver" /> también se usa para controlar los elementos de inclusión o importación detectados en esquemas XSD (Lenguaje de definición de esquemas XML).</summary>
      <returns>Objeto <see langword="XmlResolver" /> que se va a usar. Si se establece en <see langword="null" />, los recursos externos no se resuelven.  
  
En la versión 1.1 de .NET Framework, el llamador debe ser de plena confianza para poder especificar un objeto <see langword="XmlResolver" />.</returns>
    </member>
    <member name="P:System.Xml.XmlValidatingReader.XmlSpace">
      <summary>Obtiene el ámbito de <see langword="xml:space" /> actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlSpace" />. Si no existe ningún ámbito de <see langword="xml:space" />, el valor predeterminado de esta propiedad será <see langword="XmlSpace.None" />.</returns>
    </member>
    <member name="T:System.Xml.XmlWhitespace">
      <summary>Representa los espacios en blanco en el contenido del elemento.</summary>
    </member>
    <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWhitespace" />.</summary>
      <param name="strData">Caracteres de espacio en blanco del nodo.</param>
      <param name="doc">Objeto <see cref="T:System.Xml.XmlDocument" />.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
      <summary>Crea un duplicado de este nodo.</summary>
      <param name="deep">
        <see langword="true" /> para clonar de forma recursiva el subárbol del nodo especificado; <see langword="false" /> solo para clonar el nodo en sí. Para los nodos de espacio en blanco, el nodo clonado incluye siempre el valor de los datos, con independencia del valor del parámetro.</param>
      <returns>Nodo clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
      <summary>Guarda todos los nodos secundarios del nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see cref="T:System.Xml.XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="M:System.Xml.XmlWhitespace.WriteTo(System.Xml.XmlWriter)">
      <summary>Guarda el nodo en el <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="w">
        <see cref="T:System.Xml.XmlWriter" /> en el que se desea guardar.</param>
    </member>
    <member name="P:System.Xml.XmlWhitespace.LocalName">
      <summary>Obtiene el nombre local del nodo.</summary>
      <returns>Para nodos <see langword="XmlWhitespace" />, esta propiedad devuelve <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Name">
      <summary>Obtiene el nombre completo del nodo.</summary>
      <returns>Para nodos <see langword="XmlWhitespace" />, esta propiedad devuelve <see langword="#whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.NodeType">
      <summary>Obtiene el tipo del nodo.</summary>
      <returns>En el caso de nodos <see langword="XmlWhitespace" />, el valor es <see cref="F:System.Xml.XmlNodeType.Whitespace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.ParentNode">
      <summary>Obtiene el elemento primario del nodo actual.</summary>
      <returns>Nodo <see cref="T:System.Xml.XmlNode" /> primario del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.PreviousText">
      <summary>Obtiene el nodo de texto inmediatamente anterior a este.</summary>
      <returns>Devuelve <see cref="T:System.Xml.XmlNode" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWhitespace.Value">
      <summary>Obtiene o establece el valor del nodo.</summary>
      <exception cref="T:System.ArgumentException">Establecimiento de <see cref="P:System.Xml.XmlWhitespace.Value" /> en caracteres de espacio en blanco no válidos.</exception>
      <returns>Caracteres de espacio en blanco encontrados en el nodo.</returns>
    </member>
    <member name="T:System.Xml.XmlWriter">
      <summary>Representa un sistema de escritura que constituye una manera rápida, no almacenada en caché y de solo avance para generar flujos o archivos que contienen datos XML.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriter.Close">
      <summary>Cuando se invalida en una clase derivada, cierra este flujo y el flujo subyacente.</summary>
      <exception cref="T:System.InvalidOperationException">Después de llamar a <see langword="Close" /> o si el resultado de dicha llamada no es un documento XML válido, se realiza una llamada para escribir más resultados.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia especificada.</summary>
      <param name="output">Flujo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante la secuencia y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">Flujo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa a la secuencia especificada.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="stream" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.IO.TextWriter" /> especificado.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="text" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.IO.TextWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">
        <see cref="T:System.IO.TextWriter" /> en el que se desea escribir. <see cref="T:System.Xml.XmlWriter" /> escribe la sintaxis de texto de XML 1.0 y la anexa al <see cref="T:System.IO.TextWriter" /> especificado.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="text" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo especificado.</summary>
      <param name="outputFileName">Archivo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="url" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el nombre de archivo y el objeto <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="outputFileName">Archivo en el que desea escribir. <see cref="T:System.Xml.XmlWriter" /> crea un archivo en la ruta de acceso especificada y lo escribe con la sintaxis de texto de XML 1.0. <paramref name="outputFileName" /> debe ser una ruta del sistema de archivos.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="url" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Text.StringBuilder" /> especificado.</summary>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="builder" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Text.StringBuilder" /> y <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <param name="output">
        <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir. El contenido que escribe <see cref="T:System.Xml.XmlWriter" /> se anexa a <see cref="T:System.Text.StringBuilder" />.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="builder" /> es <see langword="null" />.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="writer" /> es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
      <summary>Crea una nueva instancia de <see cref="T:System.Xml.XmlWriter" /> mediante los objetos <see cref="T:System.Xml.XmlWriter" /> y <see cref="T:System.Xml.XmlWriterSettings" /> especificados.</summary>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> que desea utilizar como sistema de escritura subyacente.</param>
      <param name="settings">Objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se utiliza para configurar la nueva instancia de <see cref="T:System.Xml.XmlWriter" />. Si es <see langword="null" />, se utiliza un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración predeterminada.  
  
Si <see cref="T:System.Xml.XmlWriter" /> se está utilizando con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" />, debe usar la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> para obtener un objeto <see cref="T:System.Xml.XmlWriterSettings" /> con la configuración correcta. Con ello se garantiza que el objeto <see cref="T:System.Xml.XmlWriter" /> creado tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor <paramref name="writer" /> es <see langword="null" />.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> que contiene el objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose">
      <summary>Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.Dispose(System.Boolean)">
      <summary>Libera los recursos no administrados que usa <see cref="T:System.Xml.XmlWriter" /> y, de forma opcional, libera los recursos administrados.</summary>
      <param name="disposing">
        <see langword="true" /> para liberar tanto recursos administrados como no administrados; <see langword="false" /> para liberar únicamente recursos no administrados.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.DisposeAsync">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados de forma asincrónica.</summary>
      <returns>Tarea que representa la operación de descarte asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.DisposeAsyncCore">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos administrados de forma asincrónica.</summary>
      <returns>Tarea que representa la operación de descarte asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.Flush">
      <summary>Cuando se invalida en una clase derivada, vuelca el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.FlushAsync">
      <summary>Vuelca asincrónicamente el contenido del búfer en los flujos subyacentes y también vuelca el flujo subyacente.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="Flush" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
      <summary>Cuando se invalida en una clase derivada, devuelve el prefijo más próximo definido en el ámbito de espacio de nombres actual correspondiente al identificador URI de espacio de nombres.</summary>
      <param name="ns">Identificador URI de espacio de nombres cuyo prefijo se desea buscar.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="ns" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Prefijo coincidente o <see langword="null" /> si no se encuentra ningún identificador URI de espacio de nombres coincidente en el ámbito actual.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
      <summary>Cuando se invalida en una clase derivada, escribe todos los atributos que se encuentran en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" /> del que se van a copiar los atributos.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.XmlException">El lector no está en ningún nodo <see langword="element" />, <see langword="attribute" /> o <see langword="XmlDeclaration" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>De forma asincrónica escribe todos los atributos encontrados en la posición actual en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="reader">
        <see langword="XmlReader" /> del que se van a copiar los atributos.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteAttributes" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el atributo con el valor y nombre local especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="value">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un atributo con el valor, nombre local e identificador URI del espacio de nombres especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va asociar al atributo.</param>
      <param name="value">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el atributo con el prefijo, el nombre local, el identificador URI de espacio de nombres y el valor especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">URI de espacio de nombres del atributo.</param>
      <param name="value">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException">El estado del método de escritura no es <see langword="WriteState.Element" /> o está cerrado.

o bien 
Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El valor de atributo <see langword="xml:space" /> o <see langword="xml:lang" /> no es válido.</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="localName" /> o <paramref name="ns" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe asincrónicamente un atributo con el prefijo, el nombre local, el URI del espacio de nombres y el valor especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">URI de espacio de nombres del atributo.</param>
      <param name="value">El valor del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien 
Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteAttributeString" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica asincrónicamente los bytes binarios especificados en Base64 y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteBase64" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, codifica los bytes binarios especificados en <see langword="BinHex" /> y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado o en estado de error.
o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
      <summary>Codifica asincrónicamente los bytes binarios especificados como <see langword="BinHex" /> y escribe el texto resultante.</summary>
      <param name="buffer">Matriz de bytes que se va a codificar.</param>
      <param name="index">Posición en el búfer que indica el inicio de los bytes que se van a escribir.</param>
      <param name="count">Número de bytes que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteBinHex" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
      <summary>Escribe asincrónicamente un bloque &lt;![CDATA[...]]&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el bloque CDATA.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteCData" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
      <summary>Cuando se invalida en una clase derivada, impone la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch">Carácter Unicode para el que se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.ArgumentException">El carácter está en el intervalo de caracteres de par suplente, <see langword="0xd800" /> - <see langword="0xdfff" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)">
      <summary>Impone asincrónicamente la generación de una entidad de caracteres para el valor de carácter Unicode especificado.</summary>
      <param name="ch">Carácter Unicode para el que se va a generar una entidad de caracteres.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteCharEntity" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe texto en un búfer cada vez.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud de búfer menos <paramref name="index" /> es menor que <paramref name="count" />; la llamada tiene como resultado la división de los caracteres de par suplente o la escritura de un par suplente no válido.</exception>
      <exception cref="T:System.ArgumentException">El valor del parámetro <paramref name="buffer" /> no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe asincrónicamente texto en un búfer cada vez.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteChars" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
      <summary>De forma asincrónica escribe un comentario &lt;!--...--&gt; que contiene el texto especificado.</summary>
      <param name="text">Texto que se va a colocar en el comentario.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteComment" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración DOCTYPE con el nombre y atributos opcionales especificados.</summary>
      <param name="name">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid">Si el valor de <paramref name="pubid" /> es <see langword="null" /> y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó a este método fuera del prólogo (después del elemento raíz).

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.ArgumentException">El valor de <paramref name="name" /> daría como resultado un archivo XML no válido.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe asincrónicamente la declaración DOCTYPE con el nombre y los atributos opcionales especificados.</summary>
      <param name="name">Nombre de DOCTYPE. No puede estar vacío.</param>
      <param name="pubid">Si su valor no es nulo, también se escribe PUBLIC "pubid" "sysid", donde <paramref name="pubid" /> y <paramref name="sysid" /> se reemplazan por el valor de los argumentos especificados.</param>
      <param name="sysid">Si el valor de <paramref name="pubid" /> es <see langword="null" /> y el de <paramref name="sysid" /> no lo es, se escribe System "sysid", donde <paramref name="sysid" /> se reemplaza por el valor de este argumento.</param>
      <param name="subset">En caso de un valor no nulo, se escribe [subset], donde subset se reemplaza por el valor de este argumento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteDocType" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
      <summary>Escribe un elemento con el nombre local y el valor especificados.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
  
o bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
      <summary>Escribe un elemento con el nombre local especificado, el URI de espacio de nombres y el valor.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
  
o bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
      <summary>Escribe un elemento con el prefijo, nombre local, el URI de espacio de nombres y el valor especificados.</summary>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.ArgumentException">El valor <paramref name="localName" /> es <see langword="null" /> o una cadena vacía.  
  
o bien 
Los valores de parámetro no son válidos.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
      <summary>Escribe asincrónicamente un elemento con el nombre local, el URI de espacio de nombres, el valor y el prefijo especificados.</summary>
      <param name="prefix">Prefijo del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres del elemento.</param>
      <param name="value">Valor del elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteElementString" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttribute">
      <summary>Cuando se invalida en una clase derivada, cierra la llamada a <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> anterior.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndAttributeAsync">
      <summary>Cierra de forma asincrónica la llamada anterior al método <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> .</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteEndAttribute" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocument">
      <summary>Cuando se invalida en una clase derivada, cierra todos los elementos o atributos abiertos y vuelve a colocar el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.ArgumentException">El documento XML no es válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndDocumentAsync">
      <summary>Cierra asincrónicamente todos los elementos o atributos abiertos y coloca de nuevo el sistema de escritura en el estado de inicio.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteEndDocument" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElement">
      <summary>Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
      <exception cref="T:System.InvalidOperationException">Esto da como resultado un documento XML no válido.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEndElementAsync">
      <summary>Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteEndElement" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe una referencia a entidad de la siguiente forma: <see langword="&amp;name;" />.</summary>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
      <summary>De forma asincrónica coloca una referencia de entidad en tipo como <see langword="&amp;name;" />.</summary>
      <param name="name">Nombre de la referencia a entidad.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteEntityRef" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElement">
      <summary>Cuando se invalida en una clase derivada, cierra un elemento y extrae el ámbito de espacio de nombres correspondiente.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteFullEndElementAsync">
      <summary>Cierra asincrónicamente un elemento y extrae el correspondiente ámbito de espacio de nombres.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteFullEndElement" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un nombre XML válido, o <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
      <summary>Escribe asincrónicamente el nombre especificado, asegurando que se trata de un nombre válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteName" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre especificado, comprobando que sea un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> no es un NmToken válido, o bien <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
      <summary>Escribe asincrónicamente el nombre especificado, asegurando que se trata de un NmToken válido de acuerdo con la recomendación relativa a XML 1.0 del Consorcio W3C (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
      <param name="name">Nombre que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteNmToken" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>Cuando se invalida en una clase derivada, copia todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="reader" /> contiene caracteres no válidos.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>Copia todo el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> en el sistema de escritura. La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator">El <see cref="T:System.Xml.XPath.XPathNavigator" /> del que se va a copiar.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="navigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
      <summary>Copia asincrónicamente todo el contenido del lector en el sistema de escritura y desplaza el lector al inicio del siguiente nodo relacionado.</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> desde el que se va a leer.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados de <see langword="XmlReader" />; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteNode" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
      <summary>De forma asincrónica copia todo el objeto de <see cref="T:System.Xml.XPath.XPathNavigator" /> al escritor. La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> permanece inalterada.</summary>
      <param name="navigator">El <see cref="T:System.Xml.XPath.XPathNavigator" /> del que se va a copiar.</param>
      <param name="defattr">Es <see langword="true" /> para copiar los atributos predeterminados; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteNode" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name">Nombre de la instrucción de procesamiento.</param>
      <param name="text">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.ArgumentException">El texto daría como resultado un documento XML con formato incorrecto.  
  
 <paramref name="name" /> es <see langword="null" /> o <see langword="String.Empty" />.  
  
Este método se utiliza para crear una declaración XML después de llamar al método <see cref="M:System.Xml.XmlWriter.WriteStartDocument" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
      <summary>Escribe de forma asincrónica una instrucción de procesamiento con un espacio entre el nombre y el texto: &lt;?nombre texto?&gt;.</summary>
      <param name="name">Nombre de la instrucción de procesamiento.</param>
      <param name="text">Texto que se va a incluir en la instrucción de procesamiento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteProcessingInstruction" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName">Nombre local que se va a escribir.</param>
      <param name="ns">Identificador URI de espacio de nombres del nombre.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="localName" /> es <see langword="null" /> o <see langword="String.Empty" />.  
  
 <paramref name="localName" /> no es un nombre válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
      <summary>Escribe asincrónicamente el nombre completo del espacio de nombres. Este método busca un prefijo que está en el ámbito del espacio de nombres especificado.</summary>
      <param name="localName">Nombre local que se va a escribir.</param>
      <param name="ns">Identificador URI de espacio de nombres del nombre.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteQualifiedName" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde un búfer de caracteres.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> es <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> o <paramref name="count" /> es menor que cero.  
  
o bien 
La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe marcado sin formato manualmente desde una cadena.</summary>
      <param name="data">Cadena que contiene el texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="data" /> es <see langword="null" /> o <see langword="String.Empty" />.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
      <summary>Escribe asincrónicamente el marcado sin formato de un búfer de caracteres.</summary>
      <param name="buffer">Matriz de caracteres que contiene el texto que se va a escribir.</param>
      <param name="index">Posición en el búfer que indica el inicio del texto que se va a escribir.</param>
      <param name="count">Número de caracteres que se van a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteRaw" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
      <summary>Escribe asincrónicamente el marcado sin formato de una cadena.</summary>
      <param name="data">Cadena que contiene el texto que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteRaw" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
      <summary>Escribe el inicio de un atributo con el nombre local especificado.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
      <summary>Escribe el inicio de un atributo con el URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el inicio de un atributo con el prefijo, el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">Identificador URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
      <summary>Escribe asincrónicamente el inicio de un atributo con el prefijo, URI de espacio de nombres y el nombre local especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del atributo.</param>
      <param name="localName">Nombre local del atributo.</param>
      <param name="ns">Identificador URI de espacio de nombres del atributo.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteStartAttribute" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
      <summary>Cuando se invalida en una clase derivada, escribe la declaración XML con la versión "1.0" y el atributo independiente.</summary>
      <param name="standalone">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Este no es el primer método Write al que se llama después de llamar al constructor.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync">
      <summary>Escribe asincrónicamente la declaración XML con la versión "1.0".</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteStartDocument" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)">
      <summary>Escribe asincrónicamente la declaración XML con la versión "1.0" así como el atributo independiente.</summary>
      <param name="standalone">Si es <see langword="true" />, escribirá "standalone=yes"; si es <see langword="false" />, escribirá "standalone=no".</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteStartDocument" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe una etiqueta de apertura con el nombre local especificado.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres especificado.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento. Si este espacio de nombres ya está en el ámbito y tiene asociado un prefijo, el sistema de escritura escribe automáticamente también dicho prefijo.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe la etiqueta de apertura especificada y la asocia al espacio de nombres y prefijo especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <exception cref="T:System.Text.EncoderFallbackException">Hay un carácter en el búfer que es un carácter XML válido pero que no es válido para la codificación de salida. Por ejemplo, si la codificación de salida es ASCII, sólo debería utilizar los caracteres del intervalo de 0 a 127 para el elemento y nombres de atributo. El carácter no válido podría estar en el argumento de este método o en un argumento de métodos anteriores que estaban escribiendo en el búfer. Las referencias a entidades de caracteres anulan a dichos caracteres siempre que sea posible (por ejemplo, en nodos de texto o valores de atributo). Sin embargo, la referencia de entidad de carácter no se permite en nombres de elemento y de atributo, comentarios, instrucciones de procesamiento o secciones CDATA.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
      <summary>Escribe asincrónicamente la etiqueta de apertura especificada y la asocia al espacio de nombres y al prefijo especificados.</summary>
      <param name="prefix">Prefijo de espacio de nombres del elemento.</param>
      <param name="localName">Nombre local del elemento.</param>
      <param name="ns">Identificador URI de espacio de nombres que se va a asociar al elemento.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteStartElement" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el contenido de texto especificado.</summary>
      <param name="text">Texto que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">La cadena de texto contiene un par suplente no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
      <summary>Escribe asincrónicamente el contenido de texto dado.</summary>
      <param name="text">Texto que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteString" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Cuando se invalida en una clase derivada, genera y escribe la entidad de carácter suplente para el par de caracteres suplentes.</summary>
      <param name="lowChar">Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar">Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <exception cref="T:System.ArgumentException">Se ha pasado un par de caracteres suplentes no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)">
      <summary>Genera y escribe asincrónicamente la entidad de carácter suplente del par de caracteres suplentes.</summary>
      <param name="lowChar">Suplente bajo. Debe ser un valor comprendido entre 0xDC00 y 0xDFFF.</param>
      <param name="highChar">Suplente alto. Debe ser un valor comprendido entre 0xD800 y 0xDBFF.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteSurrogateCharEntity" /> asincrónica.</returns>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Boolean)">
      <summary>Escribe un valor <see cref="T:System.Boolean" />.</summary>
      <param name="value">Valor <see cref="T:System.Boolean" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTime)">
      <summary>Escribe un valor <see cref="T:System.DateTime" />.</summary>
      <param name="value">Valor <see cref="T:System.DateTime" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)">
      <summary>Escribe un valor <see cref="T:System.DateTimeOffset" />.</summary>
      <param name="value">Valor <see cref="T:System.DateTimeOffset" /> que se va a escribir.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Decimal)">
      <summary>Escribe un valor <see cref="T:System.Decimal" />.</summary>
      <param name="value">Valor <see cref="T:System.Decimal" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Double)">
      <summary>Escribe un valor <see cref="T:System.Double" />.</summary>
      <param name="value">Valor <see cref="T:System.Double" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int32)">
      <summary>Escribe un valor <see cref="T:System.Int32" />.</summary>
      <param name="value">Valor <see cref="T:System.Int32" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Int64)">
      <summary>Escribe un valor <see cref="T:System.Int64" />.</summary>
      <param name="value">Valor <see cref="T:System.Int64" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
      <summary>Escribe el valor del objeto.</summary>
      <param name="value">Valor del objeto que se va a escribir.  
  
 Nota Con el lanzamiento de .NET Framework 3.5, este método acepta <see cref="T:System.DateTimeOffset" /> como parámetro.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="value" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El sistema de escritura está cerrado o en estado de error.

o bien

Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.Single)">
      <summary>Escribe un número de punto flotante de precisión sencilla.</summary>
      <param name="value">El número de punto flotante de precisión sencilla que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
      <summary>Escribe un valor <see cref="T:System.String" />.</summary>
      <param name="value">Valor <see cref="T:System.String" /> que se va a escribir.</param>
      <exception cref="T:System.ArgumentException">Se ha especificado un valor no válido.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
      <summary>Cuando se invalida en una clase derivada, escribe el espacio en blanco especificado.</summary>
      <param name="ws">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.ArgumentException">La cadena no contiene caracteres de espacio en blanco.</exception>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
    </member>
    <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
      <summary>Escribe asincrónicamente el espacio en blanco especificado.</summary>
      <param name="ws">Cadena de caracteres de espacio en blanco.</param>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.

o bien

Se llamó un método asincrónico de <see cref="T:System.Xml.XmlWriter" /> sin establecer la marca <see cref="P:System.Xml.XmlWriterSettings.Async" /> en <see langword="true" />. En este caso, se produce una <see cref="T:System.InvalidOperationException" /> con el mensaje “Establezca XmlWriterSettings.Async en true si quiere usar métodos asincrónicos”.</exception>
      <returns>Tarea que representa la operación <see langword="WriteWhitespace" /> asincrónica.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.Settings">
      <summary>Obtiene el objeto <see cref="T:System.Xml.XmlWriterSettings" /> que se usa para crear esta instancia de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriterSettings" /> utilizado para crear esta instancia del sistema de escritura. Si este sistema de escritura no se creó utilizando el método <see cref="Overload:System.Xml.XmlWriter.Create" />, esta propiedad devuelve <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.WriteState">
      <summary>Cuando se invalida en una clase derivada, obtiene el estado del sistema de escritura.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Uno de los valores de <see cref="T:System.Xml.WriteState" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlLang">
      <summary>Cuando se invalida en una clase derivada, obtiene el ámbito de <see langword="xml:lang" /> actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>Ámbito de <see langword="xml:lang" /> actual.</returns>
    </member>
    <member name="P:System.Xml.XmlWriter.XmlSpace">
      <summary>Cuando se invalida en una clase derivada, se obtiene un <see cref="T:System.Xml.XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.</summary>
      <exception cref="T:System.InvalidOperationException">Se llamó un método <see cref="T:System.Xml.XmlWriter" /> antes de que se termine una operación asincrónica anterior. En este caso, se genera <see cref="T:System.InvalidOperationException" /> con el mensaje “Ya hay una operación asincrónica en curso”.</exception>
      <returns>
        <see langword="XmlSpace" /> que representa el ámbito de <see langword="xml:space" /> actual.  
  
 <list type="table"><listheader><term> Valor</term><description> Significado</description></listheader><item><term><see langword="None" /></term><description> Este es el valor predeterminado si no existe ningún ámbito de <see langword="xml:space" />.</description></item><item><term><see langword="Default" /></term><description> El ámbito actual es <see langword="xml:space" />="default".</description></item><item><term><see langword="Preserve" /></term><description> El ámbito actual es <see langword="xml:space" />="preserve".</description></item></list></returns>
    </member>
    <member name="T:System.Xml.XmlWriterSettings">
      <summary>Especifica un conjunto de características compatibles en el objeto <see cref="T:System.Xml.XmlWriter" /> creado mediante el método <see cref="Overload:System.Xml.XmlWriter.Create" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Clone">
      <summary>Crea una copia de la instancia de la clase <see cref="T:System.Xml.XmlWriterSettings" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlWriterSettings" /> clonado.</returns>
    </member>
    <member name="M:System.Xml.XmlWriterSettings.Reset">
      <summary>Restablece los miembros de la clase de configuración a sus valores predeterminados.</summary>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Async">
      <summary>Obtiene o establece un valor que indica si los métodos asincrónicos <see cref="T:System.Xml.XmlWriter" /> se pueden utilizar en una instancia determinada de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>
        <see langword="true" /> si se pueden usar métodos asincrónicos; si no, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CheckCharacters">
      <summary>Obtiene o establece un valor que indica si el escritor XML debería comprobar y asegurarse de que todos los caracteres en el documento se ajustan a la sección "2.2 Characters" de la recomendación del Consorcio W3C XML 1.0.</summary>
      <returns>Es <see langword="true" /> si se va a realizar la comprobación de caracteres; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.CloseOutput">
      <summary>Obtiene o establece un valor que indica si el objeto <see cref="T:System.Xml.XmlWriter" /> también debe cerrar la secuencia subyacente o <see cref="T:System.IO.TextWriter" /> cuando se llama al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>Es <see langword="true" /> para cerrar también la secuencia subyacente o <see cref="T:System.IO.TextWriter" />; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.ConformanceLevel">
      <summary>Obtiene o establece el nivel de conformidad que el sistema de escritura XML comprueba para la salida XML.</summary>
      <returns>Uno de los valores de enumeración que especifica el nivel de conformidad (documento, fragmento o detección automática). De manera predeterminada, es <see cref="F:System.Xml.ConformanceLevel.Document" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> no realiza escape de los atributos de URI.</summary>
      <returns>
        <see langword="true" /> Si no <see cref="T:System.Xml.XmlWriter" /> escapa a los atributos de URI; de lo contrario, <see langword="false" /> . De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Encoding">
      <summary>Obtiene o establece el tipo de codificación de texto que se va a usar.</summary>
      <returns>Codificación de texto que se va a usar. De manera predeterminada, es <see langword="Encoding.UTF8" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.Indent">
      <summary>Obtiene o establece un valor que indica si se va a aplicar sangría a los elementos.</summary>
      <returns>Es <see langword="true" /> para escribir elementos individuales en líneas nuevas y aplicar sangría; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.IndentChars">
      <summary>Obtiene o establece la cadena de caracteres que se va a usar al aplicar sangría. Esta opción se utiliza cuando la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> se establece en <see langword="true" />.</summary>
      <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> es <see langword="null" />.</exception>
      <returns>Cadena de caracteres que se va a usar al aplicar sangría. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es dos espacios.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NamespaceHandling">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> debe quitar declaraciones de espacio de nombres duplicadas al escribir contenido XML. El comportamiento predeterminado es que el sistema de escritura genere todas las declaraciones de espacio de nombres que se encuentran en la resolución de espacios de nombres del sistema de escritura.</summary>
      <returns>Enumeración <see cref="T:System.Xml.NamespaceHandling" /> utilizada para especificar si se van a quitar las declaraciones de espacio de nombres duplicadas en <see cref="T:System.Xml.XmlWriter" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
      <summary>Obtiene o establece la cadena de caracteres que se va a usar para los saltos de línea.</summary>
      <exception cref="T:System.ArgumentNullException">El valor asignado a <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> es <see langword="null" />.</exception>
      <returns>Cadena de caracteres que se va a usar para los saltos de línea. Se puede establecer en cualquier valor de cadena. Sin embargo, para garantizar la validez del contenido XML, debe especificar solo caracteres de espacio en blanco válidos, como caracteres de espacio, tabulaciones, retornos de carro y saltos de línea. El valor predeterminado es <c>\r\n</c> (retorno de carro, nueva línea).</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineHandling">
      <summary>Obtiene o establece un valor que indica si se deben normalizar los saltos de línea en el resultado.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.NewLineHandling" />. De manera predeterminada, es <see cref="F:System.Xml.NewLineHandling.Replace" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.NewLineOnAttributes">
      <summary>Obtiene o establece un valor que indica si los atributos se deben escribir en una nueva línea.</summary>
      <returns>Es <see langword="true" /> para escribir los atributos en líneas individuales; en caso contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 Esta configuración no se aplica cuando el valor de la propiedad <see cref="P:System.Xml.XmlWriterSettings.Indent" /> es <see langword="false" />.</para></block>  
  
 Cuando <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> se establece en <see langword="true" />, a cada atributo le precede una nueva línea y un nivel adicional de sangría.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration">
      <summary>Obtiene o establece un valor que indica si debe omitir una declaración XML.</summary>
      <returns>Es <see langword="true" /> para omitir la declaración XML; en caso contrario, es <see langword="false" />. El valor predeterminado es <see langword="false" />, se escribe una declaración XML.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.OutputMethod">
      <summary>Obtiene el método utilizado para serializar el resultado de <see cref="T:System.Xml.XmlWriter" />.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XmlOutputMethod" />. De manera predeterminada, es <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</returns>
    </member>
    <member name="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose">
      <summary>Obtiene o establece un valor que indica si <see cref="T:System.Xml.XmlWriter" /> agregará etiquetas de cierre a todas las etiquetas de elementos sin cerrar cuando se llame al método <see cref="M:System.Xml.XmlWriter.Close" />.</summary>
      <returns>
        <see langword="true" /> si se cerrarán todas las etiquetas de elementos sin cerrar; si no, <see langword="false" />. El valor predeterminado es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.IXPathNavigable">
      <summary>Proporciona un descriptor de acceso a la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
      <summary>Devuelve un nuevo objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Un objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XmlCaseOrder">
      <summary>Especifica el criterio de ordenación para las mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.LowerFirst">
      <summary>Las minúsculas se ordenan antes que las mayúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.None">
      <summary>Pase por alto la distinción entre mayúsculas y minúsculas.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlCaseOrder.UpperFirst">
      <summary>Las mayúsculas se ordenan antes que las minúsculas.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlDataType">
      <summary>Especifica el tipo de datos que se utiliza para determinar el criterio de ordenación.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Number">
      <summary>Los valores se ordenan numéricamente.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlDataType.Text">
      <summary>Los valores se ordenan alfabéticamente.</summary>
    </member>
    <member name="T:System.Xml.XPath.XmlSortOrder">
      <summary>Especifica el criterio de ordenación.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Ascending">
      <summary>Los nodos se ordenan de manera ascendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera ascendente, aparecerán como 1, 2, 3, 4.</summary>
    </member>
    <member name="F:System.Xml.XPath.XmlSortOrder.Descending">
      <summary>Los nodos se ordenan de manera descendente. Por ejemplo, si se ordenan los números 1, 2, 3 y 4 de manera descendente, aparecerán como 4, 3, 2, 1.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathExpression">
      <summary>Proporciona una clase con tipo que representa a una expresión XPath compilada.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
      <summary>Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según el objeto <see cref="T:System.Collections.IComparer" /> especificado.</summary>
      <param name="expr">Objeto que representa el criterio de ordenación. Puede ser el valor <see langword="string" /> del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada.</param>
      <param name="comparer">Un objeto <see cref="T:System.Collections.IComparer" /> que proporciona las comparaciones de tipo de datos específicas para comprobar si dos objetos son equivalentes.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo, y o bien no se proporciona un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien el prefijo no se encuentra en el <see cref="T:System.Xml.XmlNamespaceManager" /> suministrado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
      <summary>Cuando se reemplaza en una clase derivada, ordena los nodos seleccionados por la expresión XPath según los parámetros proporcionados.</summary>
      <param name="expr">Objeto que representa el criterio de ordenación. Puede ser el valor <see langword="string" /> del nodo o un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> con una expresión XPath compilada.</param>
      <param name="order">Valor <see cref="T:System.Xml.XPath.XmlSortOrder" /> que indica el criterio de ordenación.</param>
      <param name="caseOrder">Valor <see cref="T:System.Xml.XPath.XmlCaseOrder" /> que indica cómo se ordenan las mayúsculas y las minúsculas.</param>
      <param name="lang">Idioma que se va a usar para la comparación. Usa la clase <see cref="T:System.Globalization.CultureInfo" /> que se puede pasar al método <see cref="Overload:System.String.Compare" /> para los tipos de idioma; por ejemplo, "es-es" para español de España. Si se especifica una cadena vacía, se usa el entorno del sistema para determinar la <see cref="T:System.Globalization.CultureInfo" />.</param>
      <param name="dataType">Valor <see cref="T:System.Xml.XPath.XmlDataType" /> que indica el criterio de ordenación del tipo de datos.</param>
      <exception cref="T:System.Xml.XPath.XPathException">La <see cref="T:System.Xml.XPath.XPathExpression" /> o el criterio de ordenación incluye un prefijo, y o bien no se proporciona un <see cref="T:System.Xml.XmlNamespaceManager" />, o bien el prefijo no se encuentra en el <see cref="T:System.Xml.XmlNamespaceManager" /> suministrado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Clone">
      <summary>Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Un nuevo objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
      <summary>Compila la expresión XPath especificada y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</summary>
      <param name="xpath">Expresión XPath.</param>
      <exception cref="T:System.ArgumentException">El parámetro de la expresión XPath no es una expresión XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Compila la expresión XPath especificada, con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para la resolución de espacio de nombres y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</summary>
      <param name="xpath">Expresión XPath.</param>
      <param name="nsResolver">Un objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> para la resolución de espacio de nombres.</param>
      <exception cref="T:System.ArgumentException">El parámetro de la expresión XPath no es una expresión XPath válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.IXmlNamespaceResolver)">
      <summary>Cuando se reemplaza en una clase derivada, especifica el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se va a usar para la resolución del espacio de nombres.</summary>
      <param name="nsResolver">Objeto que implementa la interfaz <see cref="T:System.Xml.IXmlNamespaceResolver" /> que se usa para la resolución del espacio de nombres.</param>
      <exception cref="T:System.Xml.XPath.XPathException">El parámetro del objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> no se deriva de <see cref="T:System.Xml.IXmlNamespaceResolver" />.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)">
      <summary>Cuando se reemplaza en una clase derivada, especifica el objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se va a usar para la resolución del espacio de nombres.</summary>
      <param name="nsManager">Objeto <see cref="T:System.Xml.XmlNamespaceManager" /> que se usa para la resolución del espacio de nombres.</param>
      <exception cref="T:System.Xml.XPath.XPathException">El parámetro de objeto <see cref="T:System.Xml.XmlNamespaceManager" /> no se deriva de la clase <see cref="T:System.Xml.XmlNamespaceManager" />.</exception>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.Expression">
      <summary>Cuando se reemplaza en una clase derivada, se obtiene una representación <see langword="string" /> de <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <returns>Representación <see langword="string" /> del objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathExpression.ReturnType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el tipo de resultado de la expresión XPath.</summary>
      <returns>Valor <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de resultado de la expresión XPath.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathItem">
      <summary>Representa un elemento en el Modelo de datos de XQuery 1.0 y XPath 2.0.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
      <summary>Devuelve el valor del elemento como el tipo especificado.</summary>
      <param name="returnType">Tipo como el que se tiene que devolver el valor del elemento.</param>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del elemento como tipo solicitado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Cuando se reemplaza en una clase derivada, devuelve el valor del elemento como el tipo especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de los espacios de nombres.</summary>
      <param name="returnType">Tipo como el que se tiene que devolver el valor del elemento.</param>
      <param name="nsResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de los espacios de nombres.</param>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del elemento como tipo solicitado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.IsNode">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un valor que indica si el elemento representa un nodo XPath o un valor atómico.</summary>
      <returns>
        <see langword="true" /> si el elemento representa un nodo XPath; <see langword="false" /> si el elemento representa un valor atómico.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.TypedValue">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el elemento actual como un objeto sometido a conversión boxing del tipo más apropiado de .NET Framework 2.0 según su tipo de esquema.</summary>
      <returns>Elemento actual como objeto sometido a conversión boxing del tipo más apropiado de .NET Framework.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.Value">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor <see langword="string" /> del elemento.</summary>
      <returns>Valor <see langword="string" /> del elemento.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsBoolean">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
      <returns>Valor del elemento como un valor de tipo <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDateTime">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
      <returns>Valor del elemento como un valor de tipo <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsDouble">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del elemento como un valor de tipo <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsInt">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del elemento como un valor de tipo <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueAsLong">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el valor del elemento como un valor de tipo <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException">El valor del elemento no está en el formato correcto para el tipo <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
      <exception cref="T:System.OverflowException">La conversión intentada ha producido un desbordamiento.</exception>
      <returns>Valor del elemento como un valor de tipo <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.ValueType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el tipo de .NET Framework 2.0 del elemento.</summary>
      <returns>Tipo de .NET Framework del elemento. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathItem.XmlType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene <see cref="T:System.Xml.Schema.XmlSchemaType" /> del elemento.</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaType" /> para el elemento.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNamespaceScope">
      <summary>Define el ámbito de espacio de nombres.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.All">
      <summary>Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual. Esto incluye el espacio de nombres <c>xmlns:xml</c> que siempre se declara de manera implícita. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.ExcludeXml">
      <summary>Devuelve todos los espacios de nombres definidos en el ámbito del nodo actual, excluyendo el espacio de nombres <c>xmlns:xml</c>. Siempre se declara implícitamente el espacio de nombres <c>xmlns:xml</c>. No está definido el orden de los espacios de nombres que se devuelven.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNamespaceScope.Local">
      <summary>Devuelve todos los espacios de nombres definidos localmente en el nodo actual.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathNavigator">
      <summary>Proporciona un modelo de cursor para navegar y editar datos XML.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear uno o varios nodos secundarios nuevos al final de la lista de nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que está colocado <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz o un nodo de elementos.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear nodos secundarios nuevos al final de la lista de nodos secundarios del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
      <summary>Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual usando la cadena de datos XML especificada.</summary>
      <param name="newChild">Cadena de datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de cadena de datos XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que está colocado <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz o un nodo de elementos.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El parámetro de cadena de datos XML no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
      <summary>Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.XmlReader" /> se encuentra en un estado de error o está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que está colocado <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz o un nodo de elementos.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
      <summary>Crea un nuevo nodo secundario al final de la lista de nodos secundarios del nodo actual mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que está colocado <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz o un nodo de elementos.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
      <summary>Crea un nuevo nodo de elemento secundario al final de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.</summary>
      <param name="prefix">Prefijo del espacio de nombres del nuevo nodo de elemento secundario (si lo hay).</param>
      <param name="localName">Nombre local del nuevo nodo de elemento secundario (si lo hay).</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo nodo de elementos secundarios, si lo tiene. <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value">Valor del nuevo nodo de elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que está colocado <see cref="T:System.Xml.XPath.XPathNavigator" /> no es el nodo raíz o un nodo de elementos.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
      <summary>Comprueba que los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> se ajustan al esquema del lenguaje de definición de esquemas XML (XSD) proporcionado.</summary>
      <param name="schemas">
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas utilizados para validar los datos XML contenidos en <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <param name="validationEventHandler">
        <see cref="T:System.Xml.Schema.ValidationEventHandler" /> que recibe información sobre los errores y advertencias de validación del esquema.</param>
      <exception cref="T:System.Xml.Schema.XmlSchemaValidationException">Se ha producido un error de validación de esquema y no se ha especificado ningún <see cref="T:System.Xml.Schema.ValidationEventHandler" /> para controlar los errores de validación.</exception>
      <exception cref="T:System.InvalidOperationException">El <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en un nodo que no es un elemento, ni un atributo ni el nodo raíz, o bien no hay información de tipo para realizar la validación.</exception>
      <exception cref="T:System.ArgumentException">Se llamó al método <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> con un parámetro <see cref="T:System.Xml.Schema.XmlSchemaSet" /> cuando <see cref="T:System.Xml.XPath.XPathNavigator" /> no estaba colocado en el nodo raíz de los datos XML.</exception>
      <returns>Es <see langword="true" /> si no se produce ningún error de validación de esquema; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Clone">
      <summary>Cuando se invalida en una clase derivada, se crea un nuevo <see cref="T:System.Xml.XPath.XPathNavigator" /> que se coloca en el mismo nodo que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Nuevo <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el mismo nodo que este <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Compara la posición del <see cref="T:System.Xml.XPath.XPathNavigator" /> actual con la del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="nav">El <see cref="T:System.Xml.XPath.XPathNavigator" /> con el que se va a comparar.</param>
      <returns>Valor de <see cref="T:System.Xml.XmlNodeOrder" /> que representa la posición comparativa de los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
      <summary>Compila una cadena que representa una expresión XPath y devuelve un objeto <see cref="T:System.Xml.XPath.XPathExpression" />.</summary>
      <param name="xpath">Cadena que representa a una expresión XPath.</param>
      <exception cref="T:System.ArgumentException">El parámetro <paramref name="xpath" /> contiene una expresión XPath que no es válida.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que representa la expresión XPath.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
      <summary>Crea un nodo de atributo en el nodo del elemento actual usando el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor especificado.</summary>
      <param name="prefix">Prefijo del espacio de nombres del nuevo nodo de atributo (si lo hay).</param>
      <param name="localName">Nombre local del nuevo nodo de atributo que no puede ser <see cref="F:System.String.Empty" /> ni <see langword="null" />.</param>
      <param name="namespaceURI">URI de espacio de nombres del nuevo nodo de atributo (si lo hay).</param>
      <param name="value">Valor del nuevo nodo de atributo. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un nodo de atributo vacío.</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateAttributes">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear nuevos atributos en el elemento actual.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear nuevos atributos en el elemento actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
      <summary>Devuelve una copia de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Una copia <see cref="T:System.Xml.XPath.XPathNavigator" /> de este <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
      <summary>Elimina un intervalo de nodos relacionados desde el nodo actual hasta el nodo especificado.</summary>
      <param name="lastSiblingToDelete">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a eliminar.</param>
      <exception cref="T:System.ArgumentNullException">El <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.InvalidOperationException">El último nodo especificado para su eliminación no es un nodo relacionado válido del nodo actual.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.DeleteSelf">
      <summary>Elimina el nodo actual y sus nodos secundarios.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> está colocado en un nodo que no se puede eliminar, como el nodo raíz o un nodo de espacio de nombres.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
      <summary>Evalúa la expresión XPath especificada y devuelve el resultado con tipo.</summary>
      <param name="xpath">Cadena que representa a una expresión XPath que se puede evaluar.</param>
      <exception cref="T:System.ArgumentException">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Evalúa la expresión XPath especificada y devuelve el resultado con tipo mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver prefijos de espacio de nombres en la expresión XPath.</summary>
      <param name="xpath">Cadena que representa a una expresión XPath que se puede evaluar.</param>
      <param name="resolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de espacio de nombres en la expresión XPath.</param>
      <exception cref="T:System.ArgumentException">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
      <summary>Evalúa la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado con tipo.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.</param>
      <exception cref="T:System.ArgumentException">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
      <summary>Usa el contexto proporcionado para evaluar la expresión <see cref="T:System.Xml.XPath.XPathExpression" /> y devuelve el resultado con tipo.</summary>
      <param name="expr">
        <see cref="T:System.Xml.XPath.XPathExpression" /> que se puede evaluar.</param>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala al conjunto de nodos seleccionado en el que se va a llevar a cabo la evaluación.</param>
      <exception cref="T:System.ArgumentException">El tipo de valor devuelto de la expresión XPath es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>Resultado de la expresión (valor booleano, número, cadena o conjunto de nodos). Se asigna a los objetos <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" /> o <see cref="T:System.Xml.XPath.XPathNodeIterator" />, respectivamente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
      <summary>Obtiene el valor del atributo con el nombre local y el identificador URI de espacio de nombres que se hayan especificado.</summary>
      <param name="localName">Nombre local del atributo. <paramref name="localName" /> distingue mayúsculas de minúsculas.</param>
      <param name="namespaceURI">URI de espacio de nombres del atributo.</param>
      <returns>
        <see cref="T:System.String" /> que contiene el valor del atributo especificado; <see cref="F:System.String.Empty" /> si no se encuentra ningún atributo coincidente o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
      <summary>Devuelve el valor del nodo Namespace correspondiente al nombre local especificado.</summary>
      <param name="name">Nombre local del nodo Namespace.</param>
      <returns>
        <see cref="T:System.String" /> que contiene el valor del nodo de espacio de nombres; <see cref="F:System.String.Empty" /> si no se encuentra ningún nodo de espacio de nombres y si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en un nodo de elemento.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
      <summary>Devuelve los espacios de nombres en el ámbito del nodo actual.</summary>
      <param name="scope">Valor <see cref="T:System.Xml.XmlNamespaceScope" /> que especifica los espacios de nombres que se van a devolver.</param>
      <returns>Colección <see cref="T:System.Collections.Generic.IDictionary`2" /> de nombres de espacio de nombres con clave de prefijo.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.</summary>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado después del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo relacionado detrás el nodo seleccionado actualmente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
      <summary>Crea un nuevo nodo relacionado detrás del nodo seleccionado actualmente usando la cadena XML especificada.</summary>
      <param name="newSibling">Cadena de datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado después del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El parámetro de cadena XML no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
      <summary>Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado usando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.XmlReader" /> se encuentra en un estado de error o está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado después del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
      <summary>Crea un nuevo nodo relacionado detrás del nodo actualmente seleccionado mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado después del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo relacionado antes del nodo seleccionado actualmente.</summary>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado antes del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo relacionado antes del nodo seleccionado actualmente.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
      <summary>Crea un nuevo nodo relacionado delante del nodo seleccionado actualmente usando la cadena XML especificada.</summary>
      <param name="newSibling">Cadena de datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado antes del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El parámetro de cadena XML no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
      <summary>Crea un nuevo nodo relacionado antes del nodo actualmente seleccionado usando el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newSibling">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.XmlReader" /> se encuentra en un estado de error o está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado antes del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
      <summary>Crea un nuevo nodo relacionado antes del nodo actualmente seleccionado mediante los nodos del <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newSibling">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo que se va a agregar como nuevo nodo relacionado.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado antes del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
      <summary>Crea un nuevo elemento relacionado detrás del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.</summary>
      <param name="prefix">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo elemento secundario, si lo tiene. <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado después del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
      <summary>Crea un nuevo elemento relacionado delante del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificado con el valor seleccionado.</summary>
      <param name="prefix">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo elemento secundario, si lo tiene. <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException">La posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite insertar un nuevo nodo relacionado antes del nodo actual.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)">
      <summary>Determina si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es un descendiente del objeto actual <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="nav">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es descendiente del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
      <summary>Cuando se reemplaza en una clase derivada, determina si el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual está en la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se compara con este <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      <returns>
        <see langword="true" /> si los dos objetos <see cref="T:System.Xml.XPath.XPathNavigator" /> tienen la misma posición; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
      <summary>Obtiene el identificador URI de espacio de nombres del prefijo especificado.</summary>
      <param name="prefix">Prefijo cuyo identificador URI de espacio de nombres se desea resolver. Para hacer coincidir el espacio de nombres predeterminado, pase <see cref="F:System.String.Empty" />.</param>
      <returns>
        <see cref="T:System.String" /> que contiene el URI de espacio de nombres asignado al prefijo de espacio de nombres especificado; es <see langword="null" /> si no se asigna ningún URI de espacio de nombres al prefijo especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
      <summary>Obtiene el prefijo declarado del URI de espacio de nombres especificado.</summary>
      <param name="namespaceURI">URI de espacio de nombres que se va a resolver para el prefijo.</param>
      <returns>
        <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asignado al URI de espacio de nombres especificado; en caso contrario, es <see cref="F:System.String.Empty" /> si no se asigna ningún prefijo al URI de espacio de nombres especificado. La cadena <see cref="T:System.String" /> devuelta está subdividida.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
      <summary>Determina si el nodo actual coincide con la expresión XPath especificada.</summary>
      <param name="xpath">Expresión XPath.</param>
      <exception cref="T:System.ArgumentException">La expresión XPath no se puede evaluar.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>
        <see langword="true" /> si el nodo actual coincide con la expresión XPath especificada; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
      <summary>Determina si el nodo actual coincide con la <see cref="T:System.Xml.XPath.XPathExpression" /> especificada.</summary>
      <param name="expr">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la expresión XPath compilada.</param>
      <exception cref="T:System.ArgumentException">La expresión XPath no se puede evaluar.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>
        <see langword="true" /> si el nodo actual coincide con <see cref="T:System.Xml.XPath.XPathExpression" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
      <summary>Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> a la misma posición que el <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="other">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que se sitúa en el nodo al que se desea desplazarse.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente a la misma posición que el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
      <summary>Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el atributo cuyo nombre local y URI de espacio de nombres coincidan.</summary>
      <param name="localName">Nombre local del atributo.</param>
      <param name="namespaceURI">El URI de espacio de nombres del atributo; es <see langword="null" /> si el espacio de nombres está vacío.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al atributo; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
      <summary>Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo secundario con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName">El nombre local del nodo secundario al que se va a desplazar.</param>
      <param name="namespaceURI">El URI de espacio de nombres del nodo secundario al que se va a desplazar.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)">
      <summary>Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al nodo secundario del objeto <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo secundario al que se va a desplazar.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo secundario; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirst">
      <summary>Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al primer nodo relacionado del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo relacionado del actual; <see langword="false" />, si no hay ningún primer nodo relacionado o si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si <see cref="T:System.Xml.XPath.XPathNavigator" /> se coloca en el primer <see cref="T:System.Xml.XPath.XPathNavigator" /> relacionado, devolverá <see langword="true" /> y no moverá su posición.  
  
Si <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> devuelve <see langword="false" /> porque no es el primer nodo relacionado o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está ubicado en un atributo, la posición de <see cref="T:System.Xml.XPath.XPathNavigator" /> no se modifica.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute">
      <summary>Cuando se reemplaza en una clase derivada, desplaza <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer atributo del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer atributo del nodo actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild">
      <summary>Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el primer nodo secundario del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo secundario del nodo actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace">
      <summary>Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el primer nodo de espacio de nombres del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al primer nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope">Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al primer nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
      <summary>Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el identificador URI de espacio de nombres especificados en el orden del documento.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento con el nombre local y el identificador URI de espacio de nombres especificados al límite especificado, en el orden del documento.</summary>
      <param name="localName">Nombre local del elemento.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del elemento.</param>
      <param name="end">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)">
      <summary>Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al elemento siguiente del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado en el orden del documento.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
      <summary>Mueve el <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente elemento del <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado, al límite especificado, en el orden del documento.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del elemento. <see cref="T:System.Xml.XPath.XPathNodeType" /> no puede ser <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> ni <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      <param name="end">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el límite del elemento que el <see cref="T:System.Xml.XPath.XPathNavigator" /> actual no sobrepasa durante la búsqueda del elemento siguiente.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
      <summary>Cuando se invalida en una clase derivada, se desplaza al nodo con un atributo de tipo <c>ID</c> cuyo valor coincide con el <see cref="T:System.String" /> especificado.</summary>
      <param name="id">
        <see cref="T:System.String" /> que representa el valor de <c>ID</c> del nodo al que quiera desplazarse.</param>
      <returns>Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> se realiza correctamente; en caso contrario, es <see langword="false" />. Si es <see langword="false" />, no cambia la posición del explorador.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
      <summary>Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo de espacio de nombres con el prefijo correspondiente especificado.</summary>
      <param name="name">Prefijo de espacio de nombres del nodo de espacio de nombres.</param>
      <returns>Es <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al espacio de nombres especificado se realiza correctamente; es <see langword="false" /> si no se encuentra ningún nodo de espacio de nombres o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no se coloca en ningún nodo de elemento. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext">
      <summary>Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo relacionado del nodo actual.</summary>
      <returns>
        <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, <see langword="false" /> si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
      <summary>Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo relacionado con el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="localName">El nombre local del siguiente nodo relacionado al que se va a desplazar.</param>
      <param name="namespaceURI">El URI de espacio de nombres del siguiente nodo relacionado al que se va a desplazar.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo relacionado; <see langword="false" />, si no hay ningún elemento relacionado más, o bien si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)">
      <summary>Mueve el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado del nodo actual que coincida con el <see cref="T:System.Xml.XPath.XPathNodeType" /> especificado.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo relacionado al que se va a desplazar.</param>
      <returns>
        <see langword="true" /> si el desplazamiento de <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo relacionado se realiza correctamente; en caso contrario, <see langword="false" /> si no hay más elementos relacionados o si <see cref="T:System.Xml.XPath.XPathNavigator" /> está actualmente situado en un nodo de atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute">
      <summary>Cuando se reemplaza en una clase derivada, desplaza <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente atributo.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente atributo; <see langword="false" />, si no hay ningún atributo más. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace">
      <summary>Desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el siguiente nodo Namespace.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
      <summary>Cuando se reemplaza en una clase derivada, mueve <see cref="T:System.Xml.XPath.XPathNavigator" /> al siguiente nodo de espacio de nombres que coincida con el <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> especificado.</summary>
      <param name="namespaceScope">Valor de <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> que describe el ámbito de espacio de nombres.</param>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al siguiente nodo del espacio de nombres; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToParent">
      <summary>Cuando se reemplaza en una clase derivada, el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza hasta el nodo primario del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo primario del actual; de lo contrario, <see langword="false" />. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToPrevious">
      <summary>Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo relacionado anterior del nodo actual.</summary>
      <returns>
        <see langword="true" />, si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplaza correctamente al nodo relacionado anterior; de lo contrario, <see langword="false" />, si no hay ningún nodo relacionado anterior, o bien si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> se encuentra posicionado en un nodo de un atributo. Si es <see langword="false" />, no cambia la posición de <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.MoveToRoot">
      <summary>Desplaza <see cref="T:System.Xml.XPath.XPathNavigator" /> hasta el nodo raíz al que pertenece el nodo actual.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que se coloca <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> usado para crear un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
      <summary>Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual usando la cadena XML especificada.</summary>
      <param name="newChild">Cadena de datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que se coloca <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El parámetro de cadena XML no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
      <summary>Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante el contenido XML del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newChild">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.XmlReader" /> se encuentra en un estado de error o está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que se coloca <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
      <summary>Crea un nuevo nodo secundario al principio de la lista de nodos secundarios del nodo actual mediante los nodos del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newChild">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo para agregarlo como nuevo nodo secundario.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que se coloca <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
      <summary>Crea un nuevo nodo de elemento secundario al principio de la lista de nodos secundarios del nodo actual mediante el prefijo de espacio de nombres, el nombre local y el URI de espacio de nombres especificados con el valor seleccionado.</summary>
      <param name="prefix">Prefijo del espacio de nombres del nuevo elemento secundario (si lo hay).</param>
      <param name="localName">Nombre local del nuevo elemento secundario (si lo hay).</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres del nuevo elemento secundario, si lo tiene. <see cref="F:System.String.Empty" /> y <see langword="null" /> son equivalentes.</param>
      <param name="value">Valor del nuevo elemento secundario. Si se pasan <see cref="F:System.String.Empty" /> o <see langword="null" />, se crea un elemento vacío.</param>
      <exception cref="T:System.InvalidOperationException">El nodo actual en el que se coloca <see cref="T:System.Xml.XPath.XPathNavigator" /> no permite anteponer un nuevo nodo secundario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
      <summary>Devuelve un objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento o en el nodo raíz.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene el nodo actual y sus nodos secundarios.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
      <summary>Reemplaza un intervalo de nodos relacionados desde el nodo actual hasta al nodo especificado.</summary>
      <param name="lastSiblingToReplace">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el último nodo relacionado del intervalo que se va a reemplazar.</param>
      <exception cref="T:System.ArgumentNullException">El <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado es <see langword="null" />.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.InvalidOperationException">El último nodo especificado para su reemplazo no es un nodo relacionado válido del nodo actual.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlWriter" /> que se usa para especificar el intervalo de reemplazo.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
      <summary>Reemplaza el nodo actual por el contenido de la cadena especificada.</summary>
      <param name="newNode">Cadena de datos XML del nuevo nodo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de cadena XML es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento, texto, instrucción de procesamiento o comentario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El parámetro de cadena XML no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
      <summary>Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XmlReader" /> especificado.</summary>
      <param name="newNode">Objeto <see cref="T:System.Xml.XmlReader" /> colocado en los datos XML del nuevo nodo.</param>
      <exception cref="T:System.ArgumentException">El objeto <see cref="T:System.Xml.XmlReader" /> se encuentra en un estado de error o está cerrado.</exception>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XmlReader" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento, texto, instrucción de procesamiento o comentario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XmlReader" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
      <summary>Reemplaza el nodo actual por el contenido del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> especificado.</summary>
      <param name="newNode">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> situado en el nuevo nodo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento, texto, instrucción de procesamiento o comentario.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
      <exception cref="T:System.Xml.XmlException">El contenido XML del parámetro de objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> no está bien formado.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
      <summary>Selecciona un conjunto de nodos usando la expresión XPath especificada.</summary>
      <param name="xpath">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <exception cref="T:System.ArgumentException">La expresión XPath contiene un error o su tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selecciona un conjunto de nodos mediante la expresión XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="xpath">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <param name="resolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de los espacios de nombres.</param>
      <exception cref="T:System.ArgumentException">La expresión XPath contiene un error o su tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
      <summary>Selecciona un conjunto de nodos usando el <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expr">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.</param>
      <exception cref="T:System.ArgumentException">La expresión XPath contiene un error o su tipo de valor devuelto no es un conjunto de nodos.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La expresión XPath no es válida.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que señala el conjunto de nodos seleccionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
      <summary>Selecciona todos los nodos antecesores del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name">Nombre local de los nodos antecesores.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres de los nodos antecesores.</param>
      <param name="matchSelf">
        <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Selecciona todos los nodos antecesores del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos antecesores.</param>
      <param name="matchSelf">
        <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados. Los nodos que se devuelven están en orden de documento inverso.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
      <summary>Selecciona todos los nodos secundarios del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name">Nombre local de los nodos secundarios.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres de los nodos secundarios.</param>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
      <summary>Selecciona todos los nodos secundarios del nodo actual que tengan el <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos secundarios.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
      <summary>Selecciona todos los nodos descendientes del nodo actual que tengan el nombre local y el URI de espacio de nombres especificados.</summary>
      <param name="name">Nombre local de los nodos descendientes.</param>
      <param name="namespaceURI">Identificador URI de espacio de nombres de los nodos descendientes.</param>
      <param name="matchSelf">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <see langword="null" /> no se puede pasar como parámetro.</exception>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
      <summary>Selecciona todos los nodos descendientes del nodo actual que tengan un <see cref="T:System.Xml.XPath.XPathNodeType" /> correspondiente.</summary>
      <param name="type">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> de los nodos descendientes.</param>
      <param name="matchSelf">Es <see langword="true" /> para incluir el nodo de contexto en la selección; en caso contrario, es <see langword="false" />.</param>
      <returns>
        <see cref="T:System.Xml.XPath.XPathNodeIterator" /> que contiene los nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
      <summary>Selecciona un solo nodo en <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante la consulta XPath especificada.</summary>
      <param name="xpath">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <exception cref="T:System.ArgumentException">Se encontró un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La consulta XPath no es válida.</exception>
      <returns>Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
      <summary>Selecciona un solo nodo del objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> usando la consulta XPath especificada con el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="xpath">
        <see cref="T:System.String" /> que representa una expresión XPath.</param>
      <param name="resolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de espacio de nombres en la consulta XPath.</param>
      <exception cref="T:System.ArgumentException">Se encontró un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La consulta XPath no es válida.</exception>
      <returns>Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
      <summary>Selecciona un solo nodo en el <see cref="T:System.Xml.XPath.XPathNavigator" /> mediante el objeto <see cref="T:System.Xml.XPath.XPathExpression" /> especificado.</summary>
      <param name="expression">Objeto <see cref="T:System.Xml.XPath.XPathExpression" /> que contiene la consulta XPath compilada.</param>
      <exception cref="T:System.ArgumentException">Se encontró un error en la consulta XPath o el tipo de valor devuelto de la expresión XPath no es un nodo.</exception>
      <exception cref="T:System.Xml.XPath.XPathException">La consulta XPath no es válida.</exception>
      <returns>Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene el primer nodo que coincide con la consulta XPath especificada; en caso contrario, es <see langword="null" /> si la consulta no genera resultados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
      <summary>Establece el valor con tipo del nodo actual.</summary>
      <param name="typedValue">Nuevo valor con tipo del nodo.</param>
      <exception cref="T:System.ArgumentException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite el tipo del objeto especificado.</exception>
      <exception cref="T:System.ArgumentNullException">El valor especificado no puede ser <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no está colocado en un nodo de elemento o de atributo.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
      <summary>Establece el valor del nodo actual.</summary>
      <param name="value">Nuevo valor del nodo.</param>
      <exception cref="T:System.ArgumentNullException">El parámetro de valor es <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> está colocado en el nodo raíz, un nodo de espacio de nombres, o el valor especificado no es válido.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> no admite la edición.</exception>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
      <summary>Crea una nueva copia del objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Nueva copia del objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ToString">
      <summary>Obtiene el valor de texto del nodo actual.</summary>
      <returns>
        <see langword="string" /> que contiene el valor de texto del nodo actual.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>Obtiene el valor del nodo actual como el <see cref="T:System.Type" /> especificado mediante el objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> especificado para resolver los prefijos de espacio de nombres.</summary>
      <param name="returnType">
        <see cref="T:System.Type" /> como el que se devuelve el valor del nodo actual.</param>
      <param name="nsResolver">Objeto <see cref="T:System.Xml.IXmlNamespaceResolver" /> usado para resolver los prefijos de los espacios de nombres.</param>
      <exception cref="T:System.FormatException">El valor del nodo actual no tiene el formato correcto para el tipo de destino.</exception>
      <exception cref="T:System.InvalidCastException">La conversión intentada no es válida.</exception>
      <returns>Valor del nodo actual como el <see cref="T:System.Type" /> solicitado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
      <summary>Envía la secuencia del nodo actual y sus nodos secundarios al objeto <see cref="T:System.Xml.XmlWriter" /> especificado.</summary>
      <param name="writer">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se envía la secuencia.</param>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el URI base del nodo actual.</summary>
      <returns>La ubicación desde la que se cargó el nodo o <see cref="F:System.String.Empty" /> si no hay ningún valor.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.CanEdit">
      <summary>Obtiene un valor que indica si el elemento <see cref="T:System.Xml.XPath.XPathNavigator" /> puede editar los datos XML subyacentes.</summary>
      <returns>
        <see langword="true" /> Si <see cref="T:System.Xml.XPath.XPathNavigator" /> puede editar los datos XML subyacentes; de lo contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasAttributes">
      <summary>Obtiene un valor que indica si el nodo actual tiene algún atributo.</summary>
      <returns>
        <see langword="true" /> Si el nodo actual tiene atributos; Devuelve <see langword="false" /> si el nodo actual no tiene atributos o si <see cref="T:System.Xml.XPath.XPathNavigator" /> no está situado en un nodo de elemento.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.HasChildren">
      <summary>Obtiene un valor que indica si el nodo actual tiene algún nodo secundario.</summary>
      <returns>
        <see langword="true" /> si el nodo actual tiene nodos secundarios; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.InnerXml">
      <summary>Obtiene o establece el marcado que representa los nodos secundarios del nodo actual.</summary>
      <exception cref="T:System.InvalidOperationException">La propiedad <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> no se puede establecer.</exception>
      <returns>
        <see cref="T:System.String" /> que contiene el marcado de los nodos secundarios del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsEmptyElement">
      <summary>Cuando se invalida en una clase derivada, obtiene un valor que indica si el nodo actual es un elemento vacío sin etiqueta de cierre de elemento.</summary>
      <returns>
        <see langword="true" /> si el nodo actual es un elemento vacío; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.IsNode">
      <summary>Obtiene un valor que indica si el nodo actual representa un nodo XPath.</summary>
      <returns>Siempre devuelve <see langword="true" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> del nodo actual sin prefijo de espacio de nombres.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el nombre local del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, nodos de texto o comentario).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Name">
      <summary>Cuando se invalida en una clase derivada, obtiene el nombre completo del nodo actual.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> calificado del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene nombre (por ejemplo, nodos de texto o comentario).</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
      <summary>Cuando se invalida en una clase derivada, obtiene el URI de espacio de nombres del nodo actual.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el URI de espacio de nombres del nodo actual o <see cref="F:System.String.Empty" /> si el nodo actual no tiene ningún URI de espacio de nombres.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XmlNameTable" /> de <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlNameTable" /> que permite obtener la versión subdividida de una cadena <see cref="T:System.String" /> en el documento XML.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
      <summary>Obtiene un <see cref="T:System.Collections.IEqualityComparer" /> que se usa para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEqualityComparer" /> que se usa para la comparación de igualdad de objetos <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.NodeType">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el <see cref="T:System.Xml.XPath.XPathNodeType" /> del nodo actual.</summary>
      <returns>Uno de los valores de <see cref="T:System.Xml.XPath.XPathNodeType" /> que representan el nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.OuterXml">
      <summary>Obtiene o establece el marcado que representa las etiquetas de apertura y cierre del nodo actual y sus nodos secundarios.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el marcado que representa las etiquetas de apertura y cierre del nodo actual y de sus nodos secundarios.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.Prefix">
      <summary>Cuando se invalida en una clase derivada, obtiene el prefijo de espacio de nombres asociado al nodo actual.</summary>
      <returns>
        <see cref="T:System.String" /> que contiene el prefijo de espacio de nombres asociado al nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
      <summary>Obtiene la información de esquema asignada al nodo actual como resultado de la validación del esquema.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> que contiene la información de esquema del nodo actual.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.TypedValue">
      <summary>Obtiene el nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.</summary>
      <returns>El nodo actual en forma de objeto del tipo de .NET Framework más adecuado al que se ha aplicado la compresión boxing.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
      <summary>Lo utilizan las implementaciones de <see cref="T:System.Xml.XPath.XPathNavigator" /> que proporcionan una vista XML "virtual" sobre un almacén para proporcionar acceso a los objetos subyacentes.</summary>
      <returns>De manera predeterminada, es <see langword="null" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean">
      <summary>Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Boolean" />.</summary>
      <exception cref="T:System.FormatException">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Boolean" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Boolean" /> intentada no es válida.</exception>
      <returns>Valor del nodo actual como un valor de tipo <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime">
      <summary>Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.DateTime" />.</summary>
      <exception cref="T:System.FormatException">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.DateTime" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.DateTime" /> intentada no es válida.</exception>
      <returns>Valor del nodo actual como un valor de tipo <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsDouble">
      <summary>Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Double" />.</summary>
      <exception cref="T:System.FormatException">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Double" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Double" /> intentada no es válida.</exception>
      <returns>Valor del nodo actual como un valor de tipo <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsInt">
      <summary>Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Int32" />.</summary>
      <exception cref="T:System.FormatException">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int32" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int32" /> intentada no es válida.</exception>
      <returns>Valor del nodo actual como un valor de tipo <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueAsLong">
      <summary>Obtiene el valor del nodo actual como un valor de tipo <see cref="T:System.Int64" />.</summary>
      <exception cref="T:System.FormatException">El valor de cadena del nodo actual no se puede convertir en un valor <see cref="T:System.Int64" />.</exception>
      <exception cref="T:System.InvalidCastException">La conversión a <see cref="T:System.Int64" /> intentada no es válida.</exception>
      <returns>Valor del nodo actual como un valor de tipo <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.ValueType">
      <summary>Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual.</summary>
      <returns>Obtiene el <see cref="T:System.Type" /> de .NET Framework del nodo actual. El valor predeterminado es <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
      <summary>Obtiene el ámbito <c>xml:lang</c> del nodo actual.</summary>
      <returns>
        <see cref="T:System.String" />Que contiene el valor del ámbito <c>xml: lang</c> o <see cref="F:System.String.Empty" /> si el nodo actual no tiene ningún valor de ámbito <c>xml: lang</c> para devolver.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNavigator.XmlType">
      <summary>Obtiene la información de <see cref="T:System.Xml.Schema.XmlSchemaType" /> del nodo actual.</summary>
      <returns>Objeto <see cref="T:System.Xml.Schema.XmlSchemaType" />; el valor predeterminado es <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeIterator">
      <summary>Proporciona un iterador por un conjunto de nodos seleccionado.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
      <summary>Cuando se reemplaza en una clase derivada, devuelve un clon de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</summary>
      <returns>Un nuevo clon de objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" /> de este objeto <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
      <summary>Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.</summary>
      <returns>Un objeto <see cref="T:System.Collections.IEnumerator" /> para recorrer en iteración el conjunto de nodos seleccionado.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.MoveNext">
      <summary>Cuando se reemplaza en una clase derivada, desplaza el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> devuelto por la propiedad <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> al siguiente nodo del conjunto de nodos seleccionado.</summary>
      <returns>
        <see langword="true" /> si el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> se desplazó al siguiente nodo; <see langword="false" /> si no hay más nodos seleccionados.</returns>
    </member>
    <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
      <summary>Crea un nuevo objeto copiado de la instancia actual.</summary>
      <returns>Nuevo objeto que es copia de esta instancia.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Count">
      <summary>Obtiene el índice del último nodo del conjunto de nodos seleccionado.</summary>
      <returns>El índice del último nodo del conjunto seleccionado de nodos o 0 si no hay ningún nodo seleccionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
      <summary>Cuando se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> para este <see cref="T:System.Xml.XPath.XPathNodeIterator" />, situado en el nodo de contexto actual.</summary>
      <returns>Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> colocado en el nodo de contexto desde el que se seleccionó el conjunto de nodos. Debe llamarse al método <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> para mover <see cref="T:System.Xml.XPath.XPathNodeIterator" /> al primer nodo del conjunto seleccionado.</returns>
    </member>
    <member name="P:System.Xml.XPath.XPathNodeIterator.CurrentPosition">
      <summary>Cuando se reemplaza en una clase derivada, se obtiene el índice de la posición actual en el conjunto de nodos seleccionado.</summary>
      <returns>Índice de la posición actual.</returns>
    </member>
    <member name="T:System.Xml.XPath.XPathNodeType">
      <summary>Define los tipos de nodo XPath que se pueden devolver desde la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.All">
      <summary>Cualquiera de los tipos de nodo <see cref="T:System.Xml.XPath.XPathNodeType" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Attribute">
      <summary>Un atributo, como <c>id='123'</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Comment">
      <summary>Un comentario, como <c>&lt;!-- my comment --&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Element">
      <summary>Un elemento, como <c>&lt;element&gt;</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Namespace">
      <summary>Un espacio de nombres, como <c>xmlns="namespace"</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction">
      <summary>Una instrucción de procesamiento, como <c>&lt;?pi test?&gt;</c>. Esto no incluye las declaraciones XML, que no se encuentran visibles para la clase <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Root">
      <summary>Nodo raíz del documento XML o árbol de nodos.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace">
      <summary>Un nodo con caracteres de espacio en blanco y <c>xml:space</c> establecido en <c>preserve</c>.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Text">
      <summary>Contenido de texto de un nodo. Equivalente al texto del Modelo de objetos de documento (DOM) y tipos de nodo de CDATA. Contiene por lo menos un carácter.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathNodeType.Whitespace">
      <summary>Nodo sólo con caracteres de espacio en blanco y sin espacio en blanco significativo. Los caracteres de espacio en blanco son <c>#x20</c>, <c>#x9</c>, <c>#xD</c> o <c>#xA</c>.</summary>
    </member>
    <member name="T:System.Xml.XPath.XPathResultType">
      <summary>Especifica el tipo de valor devuelto de la expresión XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Any">
      <summary>Cualquiera de los tipos de nodo XPath.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Boolean">
      <summary>Un valor <see cref="T:System.Boolean" /><see langword="true" /> o <see langword="false" />.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Error">
      <summary>La expresión no evalúa el tipo XPath correcto.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Navigator">
      <summary>Fragmento de árbol.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.NodeSet">
      <summary>Colección de nodos.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.Number">
      <summary>Valor numérico.</summary>
    </member>
    <member name="F:System.Xml.XPath.XPathResultType.String">
      <summary>Valor <see cref="T:System.String" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextFunction">
      <summary>Proporciona una interfaz para una determinada función definida en la hoja de estilos de transformaciones XSL (Extensible Stylesheet Language for Transformations) durante la ejecución en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
      <summary>Proporciona el método de invocación de la función con los argumentos especificados en el contexto indicado.</summary>
      <param name="xsltContext">Contexto XSLT de la llamada de función.</param>
      <param name="args">Argumentos de la llamada de función. Cada argumento es un elemento de la matriz.</param>
      <param name="docContext">Nodo de contexto de la llamada de función.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor devuelto de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ArgTypes">
      <summary>Obtiene los tipos de XPath suministrados para la lista de argumentos de la función. Esta información se puede utilizar para descubrir la firma de la función que permite diferenciar las distintas funciones sobrecargadas.</summary>
      <returns>Matriz de <see cref="T:System.Xml.XPath.XPathResultType" /> que representa los tipos de la lista de argumentos de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Maxargs">
      <summary>Obtiene el número máximo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.</summary>
      <returns>Número máximo de argumentos de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.Minargs">
      <summary>Obtiene el número mínimo de argumentos de la función. Esto permite al usuario diferenciar las distintas funciones sobrecargadas.</summary>
      <returns>Número mínimo de argumentos de la función.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextFunction.ReturnType">
      <summary>Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath devuelto por la función.</returns>
    </member>
    <member name="T:System.Xml.Xsl.IXsltContextVariable">
      <summary>Proporciona una interfaz a una variable determinada definida en la hoja de estilos durante la ejecución en tiempo de ejecución.</summary>
    </member>
    <member name="M:System.Xml.Xsl.IXsltContextVariable.Evaluate(System.Xml.Xsl.XsltContext)">
      <summary>Evalúa la variable en tiempo de ejecución y devuelve un objeto que representa el valor de la variable.</summary>
      <param name="xsltContext">
        <see cref="T:System.Xml.Xsl.XsltContext" /> que representa el contexto de ejecución de la variable.</param>
      <returns>
        <see cref="T:System.Object" /> que representa el valor de la variable. Entre los tipos que pueden devolverse se incluyen: número, cadena, valor booleano, fragmento de documento o conjunto de nodos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsLocal">
      <summary>Obtiene un valor que indica si la variable es local.</summary>
      <returns>Es <see langword="true" /> si la variable es una variable local del contexto actual; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.IsParam">
      <summary>Obtiene un valor que indica si la variable es un parámetro XSLT (Extensible Stylesheet Language Transformation). Puede tratarse de un parámetro para una hoja de estilos o para una plantilla.</summary>
      <returns>Es <see langword="true" /> si la variable es un parámetro XSLT; en caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.IXsltContextVariable.VariableType">
      <summary>Obtiene el <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.</summary>
      <returns>
        <see cref="T:System.Xml.XPath.XPathResultType" /> que representa el tipo de XPath de la variable.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XslCompiledTransform">
      <summary>Transforma datos XML usando una hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.#ctor(System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslCompiledTransform" /> con la configuración de depuración especificada.</summary>
      <param name="enableDebug">Es <see langword="true" /> para generar información de depuración; de lo contrario, es <see langword="false" />. Si se establece en <see langword="true" />, la hoja de estilos se puede depurar con el depurador de Microsoft Visual Studio.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
      <summary>Carga un método de una hoja de estilos compilada con la utilidad <see langword="XSLTC.exe" />.</summary>
      <param name="executeMethod">Objeto <see cref="T:System.Reflection.MethodInfo" /> que representa el método <c>execute</c> generado por compilador de la hoja de estilos compilada.</param>
      <param name="queryData">Matriz de tipo byte de estructuras de datos serializados en el campo <c>staticData</c> de la hoja de estilos compilada como se ha generado con el método <see cref="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)" />.</param>
      <param name="earlyBoundTypes">Matriz de tipos almacenada en el campo <c>ebTypes</c> generado por compilador de la hoja de estilos compilada.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
      <summary>Carga y compila la hoja de estilos situada en el URI especificado.</summary>
      <param name="stylesheetUri">URI de la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheetUri" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar la hoja de estilos.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="stylesheetUri" /> no se puede resolver.  
  
o bien 
Se produjo un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar la hoja de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Carga y compila la hoja de estilos XSLT que especifica el URI. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheetUri">URI de la hoja de estilos.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">Clase <see cref="T:System.Xml.XmlResolver" /> usada para resolver el URI de la hoja de estilos y cualquier hoja de estilos a la que se haga referencia en los elementos <c>import</c> e <c>include</c> XSLT.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheetUri" /> o <paramref name="stylesheetResolver" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar la hoja de estilos.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="stylesheetUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="stylesheetUri" /> no se puede resolver.  
  
o bien 
Se produjo un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="stylesheetUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar la hoja de estilos.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
      <summary>Carga la hoja de estilos compilada que se creó usando el compilador XSLT (xsltc.exe).</summary>
      <param name="compiledStylesheet">Nombre de la clase que contiene la hoja de estilos compilada.  
  
 Normalmente se trata del nombre de la hoja de estilos. A menos que se especifique lo contrario, la herramienta xsltc.exe usa el nombre de la hoja de estilos para los nombres de ensamblado y clase.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
      <summary>Compila la hoja de estilos incluida en <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XmlReader" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheet">
        <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">Clase <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las hojas de estilos a las que se hace referencia en los elementos <c>import</c> e <c>include</c> XSLT. Si es <see langword="null" />, los recursos externos no se resuelven.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Compila la hoja de estilos incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
      <summary>Compila la hoja de estilos XSLT incluida en <see cref="T:System.Xml.XPath.IXPathNavigable" />. La clase <see cref="T:System.Xml.XmlResolver" /> resuelve todos los elementos <c>import</c> e <c>include</c> XSLT y la configuración XSLT determina los permisos de la hoja de estilos.</summary>
      <param name="stylesheet">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente una clase <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos.</param>
      <param name="settings">
        <see cref="T:System.Xml.Xsl.XsltSettings" /> que se va a aplicar a la hoja de estilos. Si el valor es <see langword="null" />, se aplica la configuración <see cref="P:System.Xml.Xsl.XsltSettings.Default" />.</param>
      <param name="stylesheetResolver">Clase <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver las hojas de estilos a las que se hace referencia en los elementos <c>import</c> e <c>include</c> XSLT. Si es <see langword="null" />, los recursos externos no se resuelven.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="stylesheet" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">La hoja de estilos contiene un error.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el URI y envía el resultado a un archivo.</summary>
      <param name="inputUri">URI del documento de entrada.</param>
      <param name="resultsFile">URI del archivo de salida.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inputUri" /> o <paramref name="resultsFile" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.FileNotFoundException">No se puede encontrar el documento de entrada.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="inputUri" /> o <paramref name="resultsFile" /> no se puede resolver.  
  
o bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> o <paramref name="resultsFile" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="inputUri">URI del documento de entrada.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="inputUri" /> no se puede resolver.  
  
o bien 
Se produjo un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en un flujo. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="inputUri">URI del documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Flujo al que se desea enviar la salida.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="inputUri" /> no se puede resolver.  
  
o bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="inputUri">URI del documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="inputUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="inputUri" /> no se puede resolver.  
  
o bien 
Se ha producido un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada que especifica el URI y guarda el resultado en una clase <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="inputUri">URI del documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="inputUri" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">El valor <paramref name="inputtUri" /> incluye un nombre de archivo o un directorio que no se puede encontrar.</exception>
      <exception cref="T:System.Net.WebException">El valor <paramref name="inputUri" /> no se puede resolver.  
  
o bien 
Se produjo un error al procesar la solicitud.</exception>
      <exception cref="T:System.UriFormatException">
        <paramref name="inputUri" /> no es un URI válido.</exception>
      <exception cref="T:System.Xml.XmlException">Hubo un error de análisis al cargar el documento de entrada.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Flujo al que se desea enviar la salida.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XmlReader" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución y XmlResolver resuelve la función <c>document()</c> XSLT.</summary>
      <param name="input">
        <see cref="T:System.Xml.XmlReader" /> que contiene el documento de entrada.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <param name="documentResolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado mediante el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en una secuencia. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Flujo al que se desea enviar la salida.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.IO.TextWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en un objeto <see cref="T:System.Xml.XmlWriter" />. La clase <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En Microsoft .NET Framework, puede ser una clase <see cref="T:System.Xml.XmlNode" /> (normalmente <see cref="T:System.Xml.XmlDocument" />) o una clase <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="arguments">
        <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos, calificados con el espacio de nombres, utilizados como entrada para la transformación. Este valor puede ser <see langword="null" />.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <c>xsl:output</c>, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> devuelto por la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <exception cref="T:System.ArgumentNullException">El valor de <paramref name="input" /> o <paramref name="results" /> es <see langword="null" />.</exception>
      <exception cref="T:System.Xml.Xsl.XsltException">Se ha producido un error al ejecutar la transformación XSLT.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Ejecuta la transformación usando el documento de entrada especificado por el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" /> y guarda el resultado en <see cref="T:System.Xml.XmlWriter" />. El <see cref="T:System.Xml.Xsl.XsltArgumentList" /> proporciona argumentos adicionales en tiempo de ejecución y <see cref="T:System.Xml.XmlResolver" /> resuelve la función <see langword="document()" /> XSLT.</summary>
      <param name="input">El documento que se va a transformar lo especifica el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</param>
      <param name="arguments">Lista de argumentos como <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</param>
      <param name="results">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.  
  
Si la hoja de estilos contiene un elemento <see langword="xsl:output" />, deberá crear la clase <see cref="T:System.Xml.XmlWriter" /> usando el objeto <see cref="T:System.Xml.XmlWriterSettings" /> que devuelve la propiedad <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" />. Con ello se garantiza que <see cref="T:System.Xml.XmlWriter" /> tenga la configuración de resultados correcta.</param>
      <param name="documentResolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <see langword="document()" /> de XSLT. Si es <see langword="null" />, la función <see langword="document()" /> no se resuelve.</param>
    </member>
    <member name="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings">
      <summary>Obtiene un objeto <see cref="T:System.Xml.XmlWriterSettings" /> que contiene la información de salida derivada del elemento <c>xsl:output</c> de la hoja de estilos.</summary>
      <returns>Objeto de solo lectura <see cref="T:System.Xml.XmlWriterSettings" /> que contiene la información de salida derivada del elemento <c>xsl: Output</c> de la hoja de estilos. Este valor puede ser <see langword="null" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltArgumentList">
      <summary>Contiene un número variable de argumentos, los cuales son parámetros XSLT o bien objetos de extensión.</summary>
    </member>
    <member name="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered">
      <summary>Aparece cuando hay un mensaje especificado por el elemento <c>xsl:message</c> en la hoja de estilos.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.#ctor">
      <summary>Implementa una nueva instancia de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
      <summary>Agrega un nuevo objeto a la lista <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al URI del espacio de nombres.</summary>
      <param name="namespaceUri">URI de espacio de nombres que se va a asociar al objeto. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía.</param>
      <param name="extension">Objeto que se va a agregar a la lista.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> es <see langword="null" /> o http://www.w3.org/1999/XSL/Transform 
El <paramref name="namespaceUri" /> ya tiene un objeto de extensión asociado.</exception>
      <exception cref="T:System.Security.SecurityException">El llamador no dispone de permisos suficientes como para llamar a este método.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
      <summary>Agrega un parámetro a <see cref="T:System.Xml.Xsl.XsltArgumentList" /> y lo asocia al nombre completo del espacio de nombres.</summary>
      <param name="name">Nombre que se va a asociar al parámetro.</param>
      <param name="namespaceUri">URI de espacio de nombres que se va a asociar al parámetro. Para utilizar el espacio de nombres predeterminado, hay que especificar una cadena vacía.</param>
      <param name="parameter">Valor del parámetro u objeto que se va a agregar a la lista.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="namespaceUri" /> es <see langword="null" /> o http://www.w3.org/1999/XSL/Transform.  
  
El <paramref name="name" /> no es un nombre válido según la especificación W3C XML.  
  
El <paramref name="namespaceUri" /> tiene ya un parámetro asociado.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.Clear">
      <summary>Quita todos los parámetros y objetos de extensión de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
      <summary>Obtiene el objeto asociado al espacio de nombres dado.</summary>
      <param name="namespaceUri">URI del espacio de nombres del objeto.</param>
      <returns>Objeto URI del espacio de nombres o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
      <summary>Obtiene el parámetro asociado al nombre completo del espacio de nombres.</summary>
      <param name="name">Nombre del parámetro. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; sin embargo, el nombre no puede ser <see langword="null" />.</param>
      <param name="namespaceUri">URI de espacio de nombres asociado al parámetro.</param>
      <returns>Objeto del parámetro o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
      <summary>Quita el objeto con el URI del espacio de nombres de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="namespaceUri">URI del espacio de nombres asociado al objeto que se va a eliminar.</param>
      <returns>Objeto con el URI del espacio de nombres o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
      <summary>Quita el parámetro de <see cref="T:System.Xml.Xsl.XsltArgumentList" />.</summary>
      <param name="name">Nombre del parámetro que se va a quitar. <see cref="T:System.Xml.Xsl.XsltArgumentList" /> no comprueba si el nombre que se ha pasado es un nombre local válido; sin embargo, el nombre no puede ser <see langword="null" />.</param>
      <param name="namespaceUri">URI del espacio de nombres del parámetro que se va a quitar.</param>
      <returns>Objeto del parámetro o <see langword="null" /> si no se encontró ninguno.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltCompileException">
      <summary>Excepción producida por el método Load cuando se encuentra un error en la hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Exception,System.String,System.Int32,System.Int32)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XsltCompileException" />.</summary>
      <param name="inner">Objeto <see cref="T:System.Exception" /> que produjo la excepción <see langword="XsltCompileException" />.</param>
      <param name="sourceUri">Ruta de acceso de la hoja de estilos.</param>
      <param name="lineNumber">Número de línea que indica dónde se produjo el error en la hoja de estilos.</param>
      <param name="linePosition">Posición de línea que indica dónde se produjo el error en la hoja de estilos.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XsltCompileException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XsltCompileException" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" /> que contiene la información de contexto.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltCompileException" /> con un mensaje de error especificado y una referencia a la excepción interna que provoca esta excepción.</summary>
      <param name="message">Mensaje que describe el error.</param>
      <param name="innerException">La excepción que es la causa de la excepción actual o <see langword="null" /> si no se especifica ninguna excepción interna.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas las propiedades <see langword="XsltCompileException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="T:System.Xml.Xsl.XsltContext">
      <summary>Encapsula el contexto de ejecución actual del procesador XSLT permitiendo que XPath pueda resolver funciones, parámetros y espacios de nombres en expresiones XPath.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltContext" /> con el objeto <see cref="T:System.Xml.NameTable" /> especificado.</summary>
      <param name="table">Objeto <see cref="T:System.Xml.NameTable" /> que se va a usar.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, compara las direcciones URI base de dos documentos en función del orden en que el procesador XSLT cargó los documentos (es decir, la clase <see cref="T:System.Xml.Xsl.XslTransform" />).</summary>
      <param name="baseUri">Dirección URI base del primer documento que se va a comparar.</param>
      <param name="nextbaseUri">Dirección URI base del segundo documento que se va a comparar.</param>
      <returns>Valor entero que describe el orden relativo de dos identificadores URI base: es -1 si <paramref name="baseUri" /> aparece antes que <paramref name="nextbaseUri" />; es 0 si los dos identificadores URl base son idénticos, y es 1 si <paramref name="baseUri" /> aparece después de <paramref name="nextbaseUri" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <summary>Cuando se reemplaza en una clase derivada, evalúa si se van a conservar los nodos de espacio en blanco o si se van a quitar en el contexto especificado.</summary>
      <param name="node">Nodo de espacio en blanco que se va a conservar o quitar en el contexto actual.</param>
      <returns>
        <see langword="true" /> si el espacio en blanco se va a conservar o <see langword="false" /> si el espacio en blanco se va a quitar.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <summary>Cuando se reemplaza en una clase derivada, resuelve una referencia de función y devuelve interfaz <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función. <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> se utiliza en tiempo de ejecución para obtener el valor devuelto de la función.</summary>
      <param name="prefix">Prefijo de la función tal y como aparece en la expresión XPath.</param>
      <param name="name">Nombre de la función.</param>
      <param name="ArgTypes">Matriz de tipos de argumento de la función que se va a resolver. Este método permite seleccionar varios métodos con el mismo nombre, por ejemplo, métodos sobrecargados.</param>
      <returns>
        <see cref="T:System.Xml.Xsl.IXsltContextFunction" /> que representa la función.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
      <summary>Cuando se reemplaza en una clase derivada, resuelve una referencia de variable y devuelve una interfaz <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable.</summary>
      <param name="prefix">Prefijo de la variable tal y como aparece en la expresión XPath.</param>
      <param name="name">Nombre de la variable.</param>
      <returns>
        <see cref="T:System.Xml.Xsl.IXsltContextVariable" /> que representa la variable en tiempo de ejecución.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltContext.Whitespace">
      <summary>Cuando se reemplaza en una clase derivada, obtiene un valor que indica si se van a incluir los nodos de espacio en blanco en los resultados.</summary>
      <returns>Es <see langword="true" /> para comprobar si se van a incluir en los resultados los nodos de espacio en blanco de la documentación de origen; es <see langword="false" /> para no evaluar los nodos de espacio en blanco. De manera predeterminada, es <see langword="true" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltException">
      <summary>Excepción que se produce cuando se produce un error al procesar una transformación XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XsltException" /> utilizando la información de los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" /> que contiene todas las propiedades de una <see langword="XsltException" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltException" /> con el mensaje de error especificado.</summary>
      <param name="message">Mensaje que describe el error.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.Exception)">
      <summary>Inicializa una nueva instancia de la clase <see langword="XsltException" />.</summary>
      <param name="message">Descripción de la condición de error.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> que ha producido la excepción <see langword="XsltException" />, si la hay. Este valor puede ser <see langword="null" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XsltException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Transmite todas las propiedades <see langword="XsltException" /> a la clase <see cref="T:System.Runtime.Serialization.SerializationInfo" /> para el <see cref="T:System.Runtime.Serialization.StreamingContext" /> dado.</summary>
      <param name="info">Objeto <see langword="SerializationInfo" />.</param>
      <param name="context">Objeto <see langword="StreamingContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LineNumber">
      <summary>Obtiene el número de línea que indica dónde se produjo el error en la hoja de estilos.</summary>
      <returns>Número de línea que indica dónde se produjo el error en la hoja de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.LinePosition">
      <summary>Obtiene la posición de línea que indica dónde se produjo el error en la hoja de estilos.</summary>
      <returns>Posición de línea que indica dónde se produjo el error en la hoja de estilos.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.Message">
      <summary>Obtiene el mensaje de error con formato que describe la excepción actual.</summary>
      <returns>Mensaje de error con formato que describe la excepción actual.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltException.SourceUri">
      <summary>Obtiene la ruta de acceso de la hoja de estilos.</summary>
      <returns>Ruta de acceso de la hoja de estilos.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs">
      <summary>Proporciona datos para el evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltMessageEncounteredEventArgs.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" />.</summary>
    </member>
    <member name="P:System.Xml.Xsl.XsltMessageEncounteredEventArgs.Message">
      <summary>Obtiene el contenido del elemento <c>xsl:message</c>.</summary>
      <returns>Contenido del elemento <c>xsl: Message</c> .</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltMessageEncounteredEventHandler">
      <summary>Representa el método que controlará el evento <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" />.</summary>
      <param name="sender">Origen del evento.</param>
      <param name="e">
        <see cref="T:System.Xml.Xsl.XsltMessageEncounteredEventArgs" /> que contiene los datos del evento.</param>
    </member>
    <member name="T:System.Xml.Xsl.XslTransform">
      <summary>Transforma datos XML utilizando una hoja de estilo XLST (Extensible Stylesheet Language for Transformations, Lenguaje de hoja de estilos extensible para transformaciones).</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XslTransform" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
      <summary>Carga la hoja de estilos XSLT especificada por una dirección URL.</summary>
      <param name="url">La dirección URL que especifica la hoja de estilos XSLT a cargar.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene un script incrustado y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
      <summary>Carga la hoja de estilos XSLT especificada por una dirección URL.</summary>
      <param name="url">La dirección URL que especifica la hoja de estilos XSLT a cargar.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>.  
  
Si es <see langword="null" />, se utiliza un <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado sin credenciales del usuario para abrir la hoja de estilos. El objeto <see cref="T:System.Xml.XmlUrlResolver" /> predeterminado no se usa para resolver los recursos externos de la hoja de estilos, por lo que los elementos <c>xsl:import</c> y <c>xsl:include</c> quedan sin resolver.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene un script incrustado y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="stylesheet">Objeto <see cref="T:System.Xml.XmlReader" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.IXPathNavigable" />.</summary>
      <param name="stylesheet">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, un objeto <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El recurso cargado no es una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
      <summary>Carga la hoja de estilos XSLT incluida en el objeto <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
      <param name="stylesheet">Objeto <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene la hoja de estilos XSLT.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> se usa para cargar la hoja de estilos y cualquier hoja u hojas de estilos a las que se haga referencia en los elementos <c>xsl:import</c> y <c>xsl:include</c>. Si es <see langword="null" />, los recursos externos no se resuelven.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />.</param>
      <exception cref="T:System.Xml.Xsl.XsltCompileException">El nodo actual no cumple los requisitos de una hoja de estilos válida.</exception>
      <exception cref="T:System.Security.SecurityException">La hoja de estilos contiene scripts incrustados y el llamador no dispone de un permiso <see langword="UnmanagedCode" />.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
      <summary>Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.</summary>
      <param name="inputfile">Dirección URL del documento origen que se va a transformar.</param>
      <param name="outputfile">Dirección URL del archivo de salida.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML del archivo de entrada y envía el resultado a un archivo de salida.</summary>
      <param name="inputfile">Dirección URL del documento origen que se va a transformar.</param>
      <param name="outputfile">Dirección URL del archivo de salida.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Flujo al que se desea enviar la salida.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Flujo al que se desea enviar la salida.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.IXPathNavigable" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">Un objeto que implementa la interfaz <see cref="T:System.Xml.XPath.IXPathNavigable" />. En .NET Framework, puede ser un objeto <see cref="T:System.Xml.XmlNode" /> (normalmente, <see cref="T:System.Xml.XmlDocument" />) o un objeto <see cref="T:System.Xml.XPath.XPathDocument" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Flujo al que se desea enviar la salida.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.Stream" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Flujo al que se desea enviar la salida.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.IO.TextWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando el <paramref name="args" /> especificado y envía el resultado a un <see cref="T:System.Xml.XmlReader" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
      <returns>Objeto <see cref="T:System.Xml.XmlReader" /> que contiene los resultados de la transformación.</returns>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
      <summary>Transforma los datos XML de <see cref="T:System.Xml.XPath.XPathNavigator" /> utilizando los argumentos especificados y envía el resultado a un <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> que contiene los datos que se van a transformar.</param>
      <param name="args">Objeto <see cref="T:System.Xml.Xsl.XsltArgumentList" /> que contiene los argumentos calificados con el nombre de espacio de nombres utilizados como entrada para la transformación.</param>
      <param name="output">Objeto <see cref="T:System.Xml.XmlWriter" /> al que se desea enviar el resultado.</param>
      <param name="resolver">
        <see cref="T:System.Xml.XmlResolver" /> que se usa para resolver la función <c>document()</c> de XSLT. Si es <see langword="null" />, la función <c>document()</c> no se resuelve.  
  
<see cref="T:System.Xml.XmlResolver" /> no se almacena en caché una vez finalizado el método <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />.</param>
      <exception cref="T:System.InvalidOperationException">Se produjo un error al procesar la transformación XSLT.  
  
Nota: éste es un cambio de comportamiento respecto a las versiones anteriores. Se inicia una <see cref="T:System.Xml.Xsl.XsltException" /> si usa Microsoft .NET Framework versión 1.1 o anterior.</exception>
    </member>
    <member name="P:System.Xml.Xsl.XslTransform.XmlResolver">
      <summary>Establece <see cref="T:System.Xml.XmlResolver" /> que se utiliza para resolver recursos externos cuando se llama al método <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />.</summary>
      <returns>Objeto <see cref="T:System.Xml.XmlResolver" /> que se va a utilizar durante la transformación. Si se establece en <see langword="null" /> , la función <c>Document ()</c> de XSLT no se resuelve.</returns>
    </member>
    <member name="T:System.Xml.Xsl.XsltSettings">
      <summary>Especifica las características XSLT que se admitirán durante la ejecución de la hoja de estilos XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración predeterminada.</summary>
    </member>
    <member name="M:System.Xml.Xsl.XsltSettings.#ctor(System.Boolean,System.Boolean)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración especificada.</summary>
      <param name="enableDocumentFunction">
        <see langword="true" /> para habilitar la compatibilidad con la función <c>document()</c> XSLT; en caso contrario, <see langword="false" />.</param>
      <param name="enableScript">Es <see langword="true" /> para habilitar la compatibilidad con los bloques de script incrustado; de lo contrario, es <see langword="false" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.Default">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con la configuración predeterminada. La compatibilidad con la función <c>document()</c> XSLT y los bloques de script incrustado está deshabilitada.</summary>
      <returns>Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction">
      <summary>Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con la función <c>document()</c> XSLT.</summary>
      <returns>
        <see langword="true" /> para admitir la función <c>Document ()</c> de XSLT; en caso contrario, <see langword="false" /> . De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.EnableScript">
      <summary>Obtiene o establece un valor que indica si se va a habilitar la compatibilidad con los bloques de script incrustado.</summary>
      <returns>Es <see langword="true" /> para admitir los bloques de script en las hojas de estilos XSLT; de lo contrario, es <see langword="false" />. De manera predeterminada, es <see langword="false" />.</returns>
    </member>
    <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
      <summary>Obtiene un objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> que habilita la compatibilidad con la función <c>document()</c> XSLT y los bloques de script incrustado.</summary>
      <returns>Objeto <see cref="T:System.Xml.Xsl.XsltSettings" /> con las propiedades <see cref="P:System.Xml.Xsl.XsltSettings.EnableDocumentFunction" /> y <see cref="P:System.Xml.Xsl.XsltSettings.EnableScript" /> establecidas en <see langword="true" />.</returns>
    </member>
  </members>
</doc>