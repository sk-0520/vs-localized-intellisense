<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Representa una operación con el contexto que se usará para el registro.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">Nombre de la operación.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para tener un nuevo elemento de equipaje con la clave y el valor especificados.</summary>
      <param name="key">Clave de equipaje.</param>
      <param name="value">Valor de equipaje.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)">
      <summary>Agrega el evento de actividad especificado a la lista de eventos.</summary>
      <param name="e">Evento de actividad que se va a agregar.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.Object)">
      <summary>Actualiza la actividad para que tenga una etiqueta con un <paramref name="key" /> adicional y <paramref name="value" />.</summary>
      <param name="key">Nombre de la clave de etiqueta.</param>
      <param name="value">Valor de etiqueta asignado a la clave de entrada.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para que tenga una etiqueta nueva con los elementos <paramref name="key" /> y <paramref name="value" /> proporcionados.</summary>
      <param name="key">Clave de etiqueta.</param>
      <param name="value">Valor de etiqueta.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose">
      <summary>Detiene la actividad si ya se ha iniciado y notifica a cualquier cliente de escucha de eventos. De lo contrario, no ocurrirá nada.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose(System.Boolean)">
      <summary>Cuando se reemplaza por un tipo derivado, este método libera todos los recursos asignados.</summary>
      <param name="disposing">
        <see langword="false" /> si se llama al método desde el finalizador; <see langword="true" /> si se llama desde el código de usuario.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Devuelve el valor de un par clave-valor agregado a la actividad con <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">Clave de equipaje.</param>
      <returns>Valor del elemento de par clave-valor si existe o <see langword="null" /> si no existe.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetCustomProperty(System.String)">
      <summary>Devuelve el objeto asignado al nombre de propiedad especificado.</summary>
      <param name="propertyName">Nombre asociado al objeto.</param>
      <returns>Objeto asignado al nombre de la propiedad, si se encuentra uno; de lo contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)">
      <summary>Adjunta cualquier objeto personalizado a esta actividad. Si el <paramref name="propertyName" /> especificado estaba previamente asociado a otro objeto, la propiedad se actualizará para asociarse al <paramref name="propertyValue" /> nuevo en su lugar. Se recomienda usar un nombre de propiedad único para evitar conflictos con cualquier persona que use el mismo valor.</summary>
      <param name="propertyName">Nombre al que se va a asociar el valor.</param>
      <param name="propertyValue">Objeto que se va a adjuntar y asignar al nombre de la propiedad.</param>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para establecer su elemento <see cref="P:System.Diagnostics.Activity.Duration" /> como la diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización especificada.</summary>
      <param name="endTimeUtc">Hora de finalización UTC.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Establece el formato del identificador de este objeto <see cref="T:System.Diagnostics.Activity" /> antes de que se inicie.</summary>
      <param name="format">Uno de los valores de enumeración que especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Establece el identificador principal mediante la convención W3C de un elemento TraceId y un elemento SpanId.</summary>
      <param name="traceId">Elemento TraceId de la actividad principal.</param>
      <param name="spanId">Elemento SpanId de la actividad principal.</param>
      <param name="activityTraceFlags">Uno de los valores de enumeración que especifica marcas definidas por el estándar W3C asociadas a una actividad.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Actualiza <see cref="T:System.Diagnostics.Activity" /> para indicar que el elemento <see cref="T:System.Diagnostics.Activity" /> con un identificador <paramref name="parentId" /> ha producido <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">Identificador de la operación principal.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Establece la hora de inicio de <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">Hora de inicio <see cref="T:System.Diagnostics.Activity" /> en formato UTC.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetTag(System.String,System.Object)">
      <summary>Agrega o actualiza la etiqueta de actividad con el valor y la clave de entrada.</summary>
      <param name="key">Nombre de la clave de etiqueta.</param>
      <param name="value">Valor de etiqueta asignado a la clave de entrada.</param>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Inicia la actividad.</summary>
      <returns>
        <see langword="this" /> para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Detiene la actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Obtiene las marcas (definidas por la especificación del id. W3C) asociadas a la actividad.</summary>
      <returns>marcas asociadas a la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Obtiene una colección de pares clave-valor que representa la información que se pasa a los elementos secundarios de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Una enumeración de pares de clave y valor de cadena de cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Context">
      <summary>Obtiene el contexto de la actividad. El contexto solo es válido si se ha iniciado la actividad.</summary>
      <returns>Contexto de la actividad, si se ha iniciado la actividad; de lo contrario, devuelve el contexto predeterminado.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Obtiene o establece la operación actual (<see cref="T:System.Diagnostics.Activity" />) del subproceso actual.  Fluye a través de llamadas asincrónicas.</summary>
      <returns>Operación actual para el subproceso actual.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Obtiene o establece el formato del id. predeterminado para el elemento <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.DisplayName">
      <summary>Obtiene o establece el nombre para mostrar de la actividad.</summary>
      <returns>Cadena que representa el nombre para mostrar de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Obtiene la duración de la operación.</summary>
      <returns>La diferencia entre <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> y la hora de finalización si <see cref="T:System.Diagnostics.Activity" /> ha finalizado ( <see cref="M:System.Diagnostics.Activity.Stop" /> o <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> se ha llamado a), o <see cref="F:System.TimeSpan.Zero" /> si <see cref="T:System.Diagnostics.Activity" /> no ha finalizado y <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> no se ha llamado a.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Events">
      <summary>Obtiene la lista de todos los eventos de actividad asociados a esta actividad.</summary>
      <returns>Una enumeración de eventos de actividad asociados a esta actividad. Si la actividad no tiene ningún evento, devuelve una enumeración vacía.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Obtiene o establece un valor que determina si el elemento <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> siempre se utiliza para definir el formato del id. predeterminado.</summary>
      <returns>
        <see langword="true" /> para usar siempre el <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> ; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Obtiene un identificador específico de una solicitud determinada.</summary>
      <returns>El id. de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Obtiene el formato para el elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>Formato del <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IsAllDataRequested">
      <summary>Indica si esta actividad se debe rellenar con toda la información de propagación, así como todas las demás propiedades, como vínculos, etiquetas y eventos.</summary>
      <returns>
        <see langword="true" /> Si se debe rellenar la actividad; <see langword="false" /> en caso contrario,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Kind">
      <summary>Obtiene la relación entre la actividad, sus elementos primarios y sus elementos secundarios en un seguimiento.</summary>
      <returns>Uno de los valores de enumeración que indica la relación entre la actividad, sus elementos primarios y sus elementos secundarios en un seguimiento.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Links">
      <summary>Obtiene la lista de todos los vínculos de actividad asociados a esta actividad.</summary>
      <returns>Una enumeración de vínculos de actividad conectados a esta actividad. Si la actividad no tiene ningún vínculo, devuelve una enumeración vacía.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Obtiene el nombre de la operación.</summary>
      <returns>Nombre de la operación.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Obtiene el elemento primario <see cref="T:System.Diagnostics.Activity" /> que ha creado esta actividad.</summary>
      <returns>Elemento primario de este objeto <see cref="T:System.Diagnostics.Activity" /> , si procede del mismo proceso, o <see langword="null" /> si esta instancia no tiene ningún elemento primario (es una actividad raíz) o si el elemento primario es de fuera del proceso.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Obtiene el identificador del elemento primario de esta actividad.</summary>
      <returns>IDENTIFICADOR primario, si existe, o <see langword="null" /> si no lo está.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Obtiene el elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> del objeto primario.</summary>
      <returns>Del elemento primario <see cref="P:System.Diagnostics.Activity.SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Obtiene un valor que indica si se establece la marca W3CIdFlags.Recorded.</summary>
      <returns>
        <see langword="true" /> Si se establece la marca W3CIdFlags. Recorded; en caso contrario, <see langword="false" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Obtiene el identificador de raíz de este <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>IDENTIFICADOR raíz o <see langword="null" /> si la instancia actual tiene <see cref="P:System.Diagnostics.Activity.ParentId" /> o <see cref="P:System.Diagnostics.Activity.Id" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Source">
      <summary>Obtiene el origen de actividad asociado a esta actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Obtiene la parte del intervalo del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>IDENTIFICADOR de la parte del intervalo de <see cref="P:System.Diagnostics.Activity.Id" /> , si <see cref="T:System.Diagnostics.Activity" /> tiene el formato del W3C; de lo contrario, es cero <see langword="SpanId" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Obtiene la hora a la que se ha iniciado la operación.</summary>
      <returns>La hora UTC en que se inició la operación.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TagObjects">
      <summary>Devuelve la lista de etiquetas que representan la información que se va a registrar junto con la actividad. Esta información no se pasa a los elementos secundarios de esta actividad.</summary>
      <returns>Una enumeración de pares clave-valor de etiquetas y objetos.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Obtiene una colección de pares clave-valor que representa la información que se va a registrar junto con <see cref="T:System.Diagnostics.Activity" /> en el sistema de registro.</summary>
      <returns>Una enumeración de pares de clave-valor de cadena-cadena.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Obtiene la parte de TraceId del elemento <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>IDENTIFICADOR de la parte TraceId de <see cref="P:System.Diagnostics.Activity.Id" /> , si el identificador tiene el formato W3C; de lo contrario, un valor cero TraceId.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Obtiene el encabezado <see langword="tracestate" /> W3C.</summary>
      <returns>Encabezado del W3C <see langword="tracestate" /> .</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityContext">
      <summary>Representación que se ajusta a la especificación de W3C TraceContext. Contiene dos identificadores: un TraceId y un SpanId, junto con un conjunto de valores de TraceState específico del sistema y TraceFlags comunes.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.#ctor(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags,System.String,System.Boolean)">
      <summary>Construye una instancia de contexto de actividad nueva con los argumentos especificados.</summary>
      <param name="traceId">Identificador de seguimiento.</param>
      <param name="spanId">Identificador de intervalo.</param>
      <param name="traceFlags">Contienen detalles sobre el seguimiento.</param>
      <param name="traceState">Transporta datos de configuración específicos del sistema.</param>
      <param name="isRemote">Indica si el contexto se propaga desde un elemento primario remoto.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Diagnostics.ActivityContext)">
      <summary>Indica si el objeto actual es igual que otro objeto del mismo tipo.</summary>
      <param name="value">Objeto que se va a comparar con esta instancia.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="other" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Object)">
      <summary>Determina si esta instancia y un objeto <see langword="ActivityContext" /> especificado tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar con esta instancia.</param>
      <returns>
        <see langword="true" /> si el objeto actual es igual al parámetro <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.GetHashCode">
      <summary>Proporciona una función hash para el elemento <see langword="ActivityContext" /> actual adecuada para algoritmos hash y estructuras de datos, como una tabla hash.</summary>
      <returns>Código hash para el objeto <see langword="ActivityContext" /> actual.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Equality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Determina si dos valores <see langword="ActivityContext" /> especificados son iguales.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Inequality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>Determina si dos valores <see langword="ActivityContext" /> especificados no son iguales.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Parse(System.String,System.String)">
      <summary>Analiza los encabezados de contexto de seguimiento del W3C en un objeto <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">Encabezado primario de seguimiento del W3C.</param>
      <param name="traceState">Estado del seguimiento.</param>
      <exception cref="T:System.ArgumentException">El elemento primario de seguimiento no es válido.</exception>
      <returns>Objeto <see cref="T:System.Diagnostics.ActivityContext" /> creado en la operación de análisis.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.TryParse(System.String,System.String,System.Diagnostics.ActivityContext@)">
      <summary>Intenta analizar los encabezados de contexto de seguimiento del W3C en un objeto <see cref="T:System.Diagnostics.ActivityContext" />.</summary>
      <param name="traceParent">Encabezado primario de seguimiento del W3C.</param>
      <param name="traceState">Estado de seguimiento del W3C.</param>
      <param name="context">Cuando este método devuelve <see langword="true" />, se crea el objeto <see cref="T:System.Diagnostics.ActivityContext" /> en la operación de análisis.</param>
      <returns>
        <see langword="true" /> si el análisis se ha realizado correctamente; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.IsRemote">
      <summary>Indica si el contexto de la actividad se propagó de un elemento primario remoto.</summary>
      <returns>
        <see langword="true" /> Si se propagó desde un elemento primario remoto; <see langword="false" /> en caso contrario,.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.SpanId">
      <summary>Identificador de la solicitud como lo conoce el autor de la llamada.</summary>
      <returns>Identificador del intervalo en el contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceFlags">
      <summary>Marcas definidas por el estándar W3C junto con el identificador de la actividad.</summary>
      <returns>Marcas de seguimiento de contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceId">
      <summary>Identificador de seguimiento.</summary>
      <returns>El identificador de seguimiento en el contexto.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceState">
      <summary>Contiene el encabezado "tracestate" de W3C.</summary>
      <returns>Cadena que representa el encabezado ' tracestate ' de W3C.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityCreationOptions`1">
      <summary>Encapsula toda la información que se envía al cliente de escucha de actividad para tomar decisiones sobre la creación de la instancia de la actividad, así como su estado.

Los parámetros de tipo genérico posibles son <see cref="T:System.Diagnostics.ActivityContext" /> o <see cref="T:System.String" />.</summary>
      <typeparam name="T">Tipo de la <see langword="Parent" /> propiedad. Debe ser <see cref="T:System.String" /> o <see langword="ActivityContext" />.</typeparam>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Kind">
      <summary>Obtiene el tipo de actividad con el que se creará la actividad.</summary>
      <returns>Uno de los valores de enumeración que representa un tipo de actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Links">
      <summary>Obtiene la enumeración de los vínculos de actividad con los que se creará la actividad.</summary>
      <returns>Una enumeración de vínculos de actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Name">
      <summary>Obtiene el nombre que se va a usar como OperationName de la actividad que se va a crear.</summary>
      <returns>Cadena que representa el nombre de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Parent">
      <summary>Obtiene el contexto primario o el identificador primario con que se creará la actividad.</summary>
      <returns>Elemento primario de la actividad, representado como <see cref="T:System.String" /> o como <see cref="T:System.Diagnostics.ActivityContext" /> .</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.SamplingTags">
      <summary>Obtiene la colección que se usa para agregar más etiquetas durante el proceso de muestreo. Las etiquetas agregadas también se agregan a la actividad creada si se decide que debe crearse mediante devoluciones de llamadas de <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>Colección de etiquetas de actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Source">
      <summary>Obtiene el origen de actividad que crea la actividad.</summary>
      <returns>Objeto de origen de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Tags">
      <summary>Obtiene las etiquetas con las que se creará la actividad.</summary>
      <returns>Una enumeración de pares de clave y valor de etiquetas asociadas a la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.TraceId">
      <summary>Obtiene el identificador de seguimiento que se va a utilizar en el objeto Activity si se decide que debe crearse mediante devoluciones de llamada de <see cref="T:System.Diagnostics.ActivityListener" />.</summary>
      <returns>Identificador de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityEvent">
      <summary>Representa un evento que contiene un nombre y una marca de tiempo, así como una lista opcional de etiquetas.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String)">
      <summary>Inicializa una instancia de evento de actividad nueva con el nombre especificado y con la hora actual como la marca de tiempo del evento.</summary>
      <param name="name">Nombre del evento.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String,System.DateTimeOffset,System.Diagnostics.ActivityTagsCollection)">
      <summary>Inicializa una instancia de evento de actividad nueva con el nombre especificado, la marca de tiempo y las etiquetas.</summary>
      <param name="name">Nombre del evento.</param>
      <param name="timestamp">Marca de tiempo del evento. La marca de tiempo solo se debe usar para los eventos que ocurrieron en el pasado, no en el momento de esta llamada.</param>
      <param name="tags">Etiquetas de evento.</param>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Name">
      <summary>Obtiene el nombre del evento de actividad.</summary>
      <returns>Cadena que representa el nombre del evento de actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Tags">
      <summary>Obtiene la colección de etiquetas asociadas con el evento.</summary>
      <returns>Una enumeración de pares clave-valor que contiene las etiquetas asociadas al evento.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Timestamp">
      <summary>Obtiene la marca de tiempo del evento de actividad.</summary>
      <returns>Desplazamiento de fecha y hora que representa la marca de tiempo del evento de actividad.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Especifica el formato de la propiedad <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>Formato jerárquico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Formato desconocido.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>Formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityKind">
      <summary>Describe la relación entre la actividad, sus elementos primarios y sus elementos secundarios en un seguimiento.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Client">
      <summary>Solicitud saliente al componente externo.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Consumer">
      <summary>Salida recibida de un componente externo.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Internal">
      <summary>Operación interna dentro de una aplicación, en lugar de operaciones con elementos primarios o secundarios remotos. Este es el valor predeterminado.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Producer">
      <summary>Salida proporcionada a los componentes externos.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Server">
      <summary>Solicitudes entrantes provenientes de un componente externo.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityLink">
      <summary>Las actividades pueden estar vinculadas a cero o más instancias de contexto de actividad que están relacionadas de manera causal.

Los vínculos de actividad pueden apuntar a contextos de actividad dentro de un único seguimiento o a través de varios seguimientos.

Los vínculos de actividad se pueden utilizar para representar operaciones por lotes en las que varias actividades de inicio iniciaron una actividad, donde cada una de las cuales representa un único elemento entrante que se está procesando en el lote.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.#ctor(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityTagsCollection)">
      <summary>Construye un vínculo de actividad nuevo, que se puede vincular a una actividad.</summary>
      <param name="context">El contexto de la actividad de seguimiento.</param>
      <param name="tags">La lista de par clave-valor de etiquetas asociadas al contexto de la actividad.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Diagnostics.ActivityLink)">
      <summary>Indica si el vínculo de actividad actual es igual a otro vínculo de actividad.</summary>
      <param name="value">El vínculo de actividad que se va a comparar.</param>
      <returns>Es <see langword="true" /> si el vínculo de actividad actual es igual a <paramref name="other" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Object)">
      <summary>Indica si el vínculo de actividad actual es igual a otro objeto.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>Es <see langword="true" /> si el vínculo de actividad actual es igual a <paramref name="obj" />; de lo contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.GetHashCode">
      <summary>Proporciona una función hash para el elemento <see langword="ActivityLink" /> actual adecuada para algoritmos hash y estructuras de datos, como una tabla hash.</summary>
      <returns>Código hash para el objeto <see langword="ActivityLink" /> actual.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Equality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Determina si dos valores <see langword="ActivityLink" /> especificados son iguales.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Inequality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>Determina si dos valores <see langword="ActivityLink" /> especificados no son iguales.</summary>
      <param name="left">Primer valor que se va a comparar.</param>
      <param name="right">Segundo valor que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="left" /> y <paramref name="right" /> no son iguales; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Context">
      <summary>Recupera el contexto de la actividad dentro de este vínculo de actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Tags">
      <summary>Recupera la enumeración de par clave-valor de las etiquetas adjuntas al contexto de la actividad.</summary>
      <returns>Una enumeración de etiquetas adjuntas al contexto de la actividad.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityListener">
      <summary>Permite escuchar los eventos de actividad de inicio y detención y brinda la oportunidad de decidir la creación de una actividad para los escenarios de muestreo.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.#ctor">
      <summary>Construye un objeto de cliente de escucha de actividad nuevo para empezar a escuchar los eventos de la actividad.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.Dispose">
      <summary>Anula el registro de este objeto de cliente de escucha de actividad para que no escuche los eventos de la actividad.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStarted">
      <summary>Obtiene o establece la devolución de llamada que se usa para escuchar el evento de inicio de la actividad.</summary>
      <returns>Instancia de devolución de llamada de actividad utilizada para escuchar el evento de inicio de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStopped">
      <summary>Obtiene o establece la devolución de llamada que se usa para escuchar el evento de detención de la actividad.</summary>
      <returns>Instancia de devolución de llamada de actividad utilizada para escuchar el evento de detención de actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.Sample">
      <summary>Obtiene o establece la devolución de llamadas que se usa para decidir si se permite la creación de objetos <see cref="T:System.Diagnostics.Activity" /> con un estado de datos específico.</summary>
      <returns>Instancia de la actividad de ejemplo.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.SampleUsingParentId">
      <summary>Obtiene o establece la devolución de llamadas que se usa para decidir si se permite la creación de objetos <see cref="T:System.Diagnostics.Activity" /> con un estado de datos específico.</summary>
      <returns>Instancia de la actividad de ejemplo.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ShouldListenTo">
      <summary>Obtiene o establece la devolución de llamada que permite decidir si los eventos de objeto de actividad que se crearon con el objeto de origen de la actividad se deben escuchar o no.</summary>
      <returns>
        <see langword="true" /> para escuchar eventos; <see langword="false" /> en caso contrario,.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySamplingResult">
      <summary>Valores de enumeración utilizados por <see cref="T:System.Diagnostics.ActivityListener" /> para indicar la cantidad de datos que se van a recopilar para el elemento <see cref="T:System.Diagnostics.Activity" /> relacionado. La solicitud de más datos produce una sobrecarga de rendimiento mayor.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllData">
      <summary>El objeto Activity se debe rellenar con toda la información de propagación y también con todas las demás propiedades, como vínculos, etiquetas y eventos. El uso de este valor hace que <see cref="P:System.Diagnostics.Activity.IsAllDataRequested" /> devuelva <see langword="true" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllDataAndRecorded">
      <summary>El objeto Activity se debe rellenar igual que el caso <see cref="F:System.Diagnostics.ActivitySamplingResult.AllData" />. Además, Activity.Recorded se establece en <see langword="true" />. En el caso de las actividades que usan los identificadores de seguimiento del W3C, establece un bit de marca en el identificador que se propagará en sentido descendente solicitando que el seguimiento se grabe en todas partes.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.None">
      <summary>No es necesario crear el objeto Activity.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.PropagationData">
      <summary>Es necesario crear el objeto Activity. Tendrá las propiedades Name, Source, Id y Baggage. Las demás propiedades no son necesarias y este agente de escucha las omitirá.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySource">
      <summary>Proporciona las API para crear e iniciar objetos <see cref="T:System.Diagnostics.Activity" />, así como para registrar objetos <see cref="T:System.Diagnostics.ActivityListener" />, a fin de escuchar los eventos de <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)">
      <summary>Construye un objeto de origen de la actividad con el <paramref name="name" /> especificado.</summary>
      <param name="name">El nombre del objeto de origen de la actividad.</param>
      <param name="version">La versión del componente que publica la información de seguimiento.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)">
      <summary>Agrega un cliente a los eventos de inicio y detención de la actividad.</summary>
      <param name="listener">El objeto de cliente de escucha de actividad que se va a usar para escuchar los eventos de actividad.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.Dispose">
      <summary>Desecha el objeto de origen de la actividad, quita la instancia actual de la lista global y vacía la lista de clientes de escucha.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.HasListeners">
      <summary>Comprueba si hay clientes de escucha para este origen de actividad.</summary>
      <returns>
        <see langword="true" /> si hay un cliente de escucha registrado para este origen de actividad; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)">
      <summary>Crea una actividad si hay clientes de escucha activos para ella, mediante el tipo de actividad y el nombre especificado.</summary>
      <param name="name">El nombre de la operación de la actividad.</param>
      <param name="kind">El tipo de actividad.</param>
      <returns>El objeto de actividad creado, si tuvo clientes de escucha activos, o<see langword="null" /> si no tiene clientes de escucha de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Crea una actividad nueva si hay clientes de escucha activos para ella, mediante el nombre especificado, el tipo de actividad, el contexto de actividad primario, las etiquetas, el vínculo de actividad opcional y la hora de inicio opcional.</summary>
      <param name="name">El nombre de la operación de la actividad.</param>
      <param name="kind">El tipo de actividad.</param>
      <param name="parentContext">El objeto <see cref="T:System.Diagnostics.ActivityContext" /> primario con el que se va a inicializar el objeto de actividad creado.</param>
      <param name="tags">La lista opcional de etiquetas con la que se va a inicializar el objeto de actividad creado.</param>
      <param name="links">La lista opcional de <see cref="T:System.Diagnostics.ActivityLink" /> con la que se va a inicializar el objeto de actividad creado.</param>
      <param name="startTime">La marca de tiempo de inicio opcional para establecer en el objeto de actividad creado.</param>
      <returns>El objeto de actividad creado, si tuvo clientes de escucha activos, o<see langword="null" /> si no tiene clientes de escucha de eventos.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>Crea una actividad nueva si hay clientes de escucha activos para ella, mediante el nombre especificado, el tipo de actividad, el id. primario, las etiquetas, los vínculos de actividad opcionales y la hora de inicio opcional.</summary>
      <param name="name">El nombre de la operación de la actividad.</param>
      <param name="kind">El tipo de actividad.</param>
      <param name="parentId">El id. primario con el que se va a inicializar el objeto de actividad creado.</param>
      <param name="tags">La lista opcional de etiquetas con la que se va a inicializar el objeto de actividad creado.</param>
      <param name="links">La lista opcional de <see cref="T:System.Diagnostics.ActivityLink" /> con la que se va a inicializar el objeto de actividad creado.</param>
      <param name="startTime">La marca de tiempo de inicio opcional para establecer en el objeto de actividad creado.</param>
      <returns>El objeto de actividad creado, si tuvo clientes de escucha activos, o<see langword="null" /> si no tiene clientes de escucha de eventos.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Name">
      <summary>Devuelve el nombre del origen de la actividad.</summary>
      <returns>Cadena que representa el nombre del origen de la actividad.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Version">
      <summary>Devuelve la versión del origen de la actividad.</summary>
      <returns>Cadena que representa la versión de origen de la actividad.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Representa un elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> con formato según un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copia los 8 bytes del elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> actual en un intervalo especificado.</summary>
      <param name="destination">El intervalo al que los 8 bytes de SpanID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de ocho bytes.</summary>
      <param name="idData">Intervalo de solo lectura de ocho bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de 16 caracteres hexadecimales.</summary>
      <param name="idData">Intervalo que contiene 16 caracteres hexadecimales.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.

o bien 
Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivitySpanId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Determina si esta instancia y la instancia <see cref="T:System.Diagnostics.ActivitySpanId" /> especificada tienen el mismo valor.</summary>
      <param name="spanId">La instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="spanId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>la instancia actual y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivitySpanId" />, tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivitySpanId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Devuelve el código hash de SpanId.</summary>
      <returns>El código hash de SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen el mismo valor.</summary>
      <param name="spanId1">Primera instancia que se va a comparar.</param>
      <param name="spandId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es el mismo valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determine si dos instancias <see cref="T:System.Diagnostics.ActivitySpanId" /> especificadas tienen valores distintos.</summary>
      <param name="spanId1">Primera instancia que se va a comparar.</param>
      <param name="spandId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el valor SpanId de <paramref name="spanId1" /> es distinto del valor SpanId de <paramref name="spandId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 16 caracteres de este id. de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection">
      <summary>ActivityTagsCollection es una clase de colección que se usa para almacenar etiquetas de seguimiento.

Esta colección se usará con clases como <see cref="T:System.Diagnostics.ActivityEvent" /> y <see cref="T:System.Diagnostics.ActivityLink" />.

El comportamiento de esta colección es el siguiente: - Los elementos de la colección se ordenarán en función de cómo se agreguen.
- No se permite la duplicación se elementos con la misma clave.
- Al usar el indizador para almacenar un elemento en la colección: - Si el elemento tiene una clave que ya existía en la colección y el valor es <see langword="null" />, el elemento de colección que coincide con la clave se quitará de la colección.
- Si el elemento tiene una clave que ya existía en la colección y el valor no es <see langword="null" />, el valor del elemento nuevo reemplazará el valor anterior almacenado en la colección.
- De lo contrario, el elemento se agregará a la colección.
- El método Add agregará un elemento nuevo a la colección si todavía no existe un elemento con la misma clave. De lo contrario, se generará una excepción.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor">
      <summary>Crea una instancia nueva de la colección.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Crea una instancia nueva de la colección y almacena los elementos de la lista de entrada en la colección.</summary>
      <param name="list">Lista inicial que se va a almacenar en la colección.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Agrega un elemento a la colección.</summary>
      <param name="item">Par clave-valor de la etiqueta que se va a agregar a la colección.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> ya existe en la lista.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> es <see langword="null" />.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.String,System.Object)">
      <summary>Agrega una etiqueta con la clave y el valor proporcionados a la colección. Esta colección no permite agregar dos etiquetas con la misma clave.</summary>
      <param name="key">Clave de etiqueta.</param>
      <param name="value">Valor de etiqueta.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Clear">
      <summary>Quita todos los elementos de la colección.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina si <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valor específico.</summary>
      <param name="item">Objeto que se va a buscar en <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> si <paramref name="item" /> se encuentra en la matriz <see cref="T:System.Collections.Generic.ICollection`1" />; en caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.ContainsKey(System.String)">
      <summary>Determina si la colección contiene un elemento con la clave especificada.</summary>
      <param name="key">Clave que se buscará en <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <returns>
        <see langword="true" /> si la colección contiene etiquetas con esa clave. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia los elementos de la colección en una matriz a partir de un índice de matriz concreto.</summary>
      <param name="array">Matriz que constituye el destino de los elementos copiados de la colección.</param>
      <param name="arrayIndex">Índice de base cero de la matriz donde comienza la copia.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.GetEnumerator">
      <summary>Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns>Enumerador para <see langword="ActivityTagsCollection" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Quita la primera aparición de un elemento concreto de la colección.</summary>
      <param name="item">Par clave-valor que se va a quitar.</param>
      <returns>
        <see langword="true" /> si el elemento se eliminó con éxito de la colección; de lo contrario, <see langword="false" />. Este método también devuelve <see langword="false" /> si el elemento no se encuentra en la colección original.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.String)">
      <summary>Quita de la colección la etiqueta con la clave especificada.</summary>
      <param name="key">Clave de etiqueta.</param>
      <returns>
        <see langword="true" /> si el elemento existía y se quitó. En caso contrario, es <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns>Enumerador que se puede utilizar para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Devuelve un enumerador que procesa una iteración en la colección.</summary>
      <returns>Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.TryGetValue(System.String,System.Object@)">
      <summary>Obtiene el valor asociado a la clave especificada.</summary>
      <param name="key">Clave de etiqueta.</param>
      <param name="value">Valor de etiqueta.</param>
      <returns>Cuando este método devuelve resultados, el valor asociado a la clave especificada si se encuentra la clave; en caso contrario, el valor predeterminado para el tipo del parámetro de valor. Este parámetro se pasa sin inicializar.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Count">
      <summary>Obtiene el número de elementos contenido en la colección.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.IsReadOnly">
      <summary>Obtiene un valor que indica si la colección es de solo lectura. Siempre devuelve <see langword="false" />.</summary>
      <returns>Siempre devuelve <see langword="false" />.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Item(System.String)">
      <summary>Obtiene o establece un elemento de colección especificado.
        
Al establecer un valor en esta propiedad del indexador, se observará el compartimiento siguiente: si la clave ya existía en la colección y el valor es <see langword="null" />, el elemento de colección que coincide con la clave se quitará de la colección.
- Si la clave ya existía en la colección y el valor no es <see langword="null" />, el valor reemplazará el valor anterior almacenado en la colección.
- De lo contrario, se agregará un elemento nuevo a la colección.</summary>
      <param name="key">Clave del valor que se va a obtener o establecer.</param>
      <returns>Objeto asignado a la clave.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Keys">
      <summary>Obtiene la lista de las claves de todas las etiquetas almacenadas.</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Values">
      <summary>Obtiene la lista de los valores de todas las etiquetas almacenadas.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection.Enumerator">
      <summary>Enumera los elementos de un objeto <see langword="ActivityTagsCollection" />.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.Dispose">
      <summary>Realiza tareas definidas por la aplicación asociadas a la liberación o al restablecimiento de recursos no administrados.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.MoveNext">
      <summary>Desplaza el enumerador al siguiente elemento de la colección.</summary>
      <returns>Es <see langword="true" /> si el enumerador avanzó con éxito hasta el siguiente elemento; es <see langword="false" /> si el enumerador alcanzó el final de la colección.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Establece el enumerador en su posición inicial (antes del primer elemento de la colección).</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.Current">
      <summary>Obtiene el elemento de la colección situado en la posición actual del enumerador.</summary>
      <returns>Elemento de la colección en la posición actual del enumerador.</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Obtiene el elemento de la colección situado en la posición actual del enumerador.</summary>
      <returns>Elemento de la colección en la posición actual del enumerador.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Especifica las marcas definidas por el estándar W3C asociadas a una actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>No se marcó la actividad.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>La actividad (o, lo que es más probable, sus elementos primarios) están marcados como útiles para registrar.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Representa un elemento <see cref="P:System.Diagnostics.Activity.TraceId" /> cuyo formato se basa en un estándar W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copia los 16 bytes del elemento <see cref="T:System.Diagnostics.ActivityTraceId" /> actual en un intervalo especificado.</summary>
      <param name="destination">Intervalo en el que los 16 bytes de TraceID van a copiarse.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 16 bytes.</summary>
      <param name="idData">Intervalo de solo lectura de 16 bytes.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no contiene ocho bytes.</exception>
      <returns>Nuevo id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de 32 caracteres hexadecimales.</summary>
      <param name="idData">Intervalo que contiene 32 caracteres hexadecimales.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> no tiene 16 caracteres hexadecimales.

o bien

Los caracteres de <paramref name="idData" /> no son todos caracteres hexadecimales en minúscula o su valor no es cero en todos los casos.</exception>
      <returns>Nuevo id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuevo valor <see cref="T:System.Diagnostics.ActivityTraceId" /> desde un intervalo de solo lectura de bytes codificados UTF8.</summary>
      <param name="idData">Intervalo de solo lectura de bytes codificados UTF8.</param>
      <returns>Nuevo id. de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Crea un nuevo elemento <see cref="T:System.Diagnostics.ActivitySpanId" /> según un número aleatorio (que muy probablemente sea único).</summary>
      <returns>Id. del nuevo intervalo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Determina si la instancia actual y un objeto <see cref="T:System.Diagnostics.ActivityTraceId" /> especificado son iguales.</summary>
      <param name="traceId">La instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="traceId" /> tiene el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Determina si esta instancia y un objeto especificado, que también debe ser una instancia <see cref="T:System.Diagnostics.ActivityTraceId" />, tienen el mismo valor.</summary>
      <param name="obj">Objeto que se va a comparar.</param>
      <returns>
        <see langword="true" /> si <paramref name="obj" /> es una instancia de <see cref="T:System.Diagnostics.ActivityTraceId" /> con el mismo valor hexadecimal que la instancia actual; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Devuelve el código hash del identificador de seguimiento.</summary>
      <returns>El código hash del identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1">Primera instancia que se va a comparar.</param>
      <param name="traceId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es el mismo que el de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina si dos instancias <see cref="T:System.Diagnostics.ActivityTraceId" /> especificadas tienen el mismo valor.</summary>
      <param name="traceId1">Primera instancia que se va a comparar.</param>
      <param name="traceId2">Segunda instancia que se va a comparar.</param>
      <returns>
        <see langword="true" /> si el identificador de seguimiento de <paramref name="traceId1" /> es distinto al de <paramref name="traceId2" />; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Devuelve una cadena hexadecimal de 16 caracteres que representa este identificador de intervalo.</summary>
      <returns>Representación de cadena hexadecimal de 32 caracteres de este identificador de seguimiento.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Devuelve una cadena hexadecimal de 32 caracteres que representa este identificador de seguimiento.</summary>
      <returns>Representación de cadena hexadecimal de 32 caracteres de este identificador de seguimiento.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Proporciona una implementación de la clase abstracta <see cref="T:System.Diagnostics.DiagnosticSource" /> que representa una ubicación con nombre a la que un origen envía su información (eventos).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Crea un nuevo <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">Nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Desecha el elemento NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Determina si hay algún suscriptor registrado.</summary>
      <returns>
        <see langword="true" /> si hay algún suscriptor registrado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Comprueba si <see cref="T:System.Diagnostics.DiagnosticListener" /> está habilitado.</summary>
      <param name="name">Nombre del evento que se va a comprobar.</param>
      <returns>
        <see langword="true" /> si las notificaciones están habilitadas; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Comprueba si algún suscriptor de los eventos de diagnóstico está interesado en recibir eventos con este nombre. Los suscriptores indican su interés mediante un delegado proporcionado en <see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" />.</summary>
      <param name="name">Nombre del evento que se va a comprobar.</param>
      <param name="arg1">Objeto que representa un contexto.</param>
      <param name="arg2">Objeto que representa un contexto.</param>
      <returns>
        <see langword="true" /> si está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca el método OnActivityExport de todos los suscriptores.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Invoca el método OnActivityImport de todos los suscriptores.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Objeto que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Agrega un suscriptor.</summary>
      <param name="observer">Suscriptor.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre y hasta dos objetos de contexto.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra los eventos en función de su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si un filtro de evento no es deseable.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Agrega un suscriptor, opcionalmente filtra los eventos en función de su nombre y hasta dos objetos de contexto, y especifica los métodos a los que se va a llamar cuando los proveedores importen o exporten actividades externas al proceso.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra eventos según su nombre y hasta dos objetos de contexto (que pueden ser <see langword="null" />), o bien <see langword="null" /> si no quiere usarse un filtro de evento.</param>
      <param name="onActivityImport">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud entrante.</param>
      <param name="onActivityExport">Delegado de acción que recibe la actividad afectada por un evento externo y un objeto que representa la solicitud saliente.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Agrega un suscriptor y, opcionalmente, filtra los eventos en función de su nombre.</summary>
      <param name="observer">Suscriptor.</param>
      <param name="isEnabled">Delegado que filtra los eventos en función de su nombre (<see cref="T:System.String" />). El delegado debe devolver <see langword="true" /> si el evento está habilitado.</param>
      <returns>Referencia a una interfaz que permite a los clientes de escucha dejar de recibir notificaciones antes de que el elemento <see cref="T:System.Diagnostics.DiagnosticSource" /> haya terminado de enviarlas.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Devuelve una cadena con el nombre de este DiagnosticListener.</summary>
      <returns>Nombre de este DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Registra una notificación.</summary>
      <param name="name">Nombre del evento que se registrará.</param>
      <param name="value">Objeto que representa la carga para el evento.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Obtiene la colección de clientes de escucha de este elemento <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Obtiene el nombre de <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>Nombre del objeto <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Clase abstracta que permite instrumentar el código para el registro de tiempo de producción de las cargas de datos enriquecidos para su uso dentro del proceso que se ha instrumentado.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Inicializa una instancia de la clase <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <returns>
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Comprueba que el evento de notificación esté habilitado.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <param name="arg1">Objeto que representa el contexto adicional de IsEnabled. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro para comprobar si el consumidor quiere obtener notificaciones de estos eventos. En función de esto, el productor puede llamar a IsEnabled(string, object, object) de nuevo con el contexto no <see langword="null" />.</param>
      <param name="arg2">Opcional. Objeto que representa el contexto adicional de IsEnabled. <see langword="null" /> es el valor predeterminado. Los consumidores pueden recibir <see langword="null" />, lo que puede indicar que el productor ha llamado a IsEnabled(string) puro o ha pasado todo el contexto necesario en <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" /> si el evento de notificación está habilitado; de lo contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfiere el estado desde una actividad a algún evento u operación, como una solicitud HTTP saliente, que se producirá fuera del proceso.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Objeto que representa la solicitud saliente.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Transfiere el estado a una actividad desde algún evento u operación, como una solicitud entrante, que se produjo fuera del proceso.</summary>
      <param name="activity">Actividad afectada por un evento externo.</param>
      <param name="payload">Carga útil que representa la solicitud entrante.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Inicia <see cref="T:System.Diagnostics.Activity" /> y escribe un evento de inicio.</summary>
      <param name="activity">
        <see cref="T:System.Diagnostics.Activity" /> que se va a iniciar.</param>
      <param name="args">Objeto que representa el valor que se va a pasar como una carga para el evento.</param>
      <returns>Actividad iniciada para un encadenamiento práctico.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Detiene el elemento <see cref="T:System.Diagnostics.Activity" /> dado, mantiene la actividad global <see cref="P:System.Diagnostics.Activity.Current" /> y notifica a los consumidores que <see cref="T:System.Diagnostics.Activity" /> se ha detenido.</summary>
      <param name="activity">Actividad que se va a detener.</param>
      <param name="args">Objeto que representa el valor pasado como una carga para el evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Proporciona una manera genérica de registrar cargas complejas.</summary>
      <param name="name">Nombre del evento que se va a escribir.</param>
      <param name="value">Objeto que representa el valor que se va a pasar como una carga para el evento. Suele ser un tipo anónimo que contiene varios subvalores.</param>
    </member>
    <member name="T:System.Diagnostics.SampleActivity`1">
      <summary>Delegado que define la firma de las devoluciones de llamadas de <see cref="T:System.Diagnostics.ActivityListener" /> utilizadas en el proceso de muestreo.</summary>
      <param name="options">Opciones de creación de Activity usadas por devoluciones de llamadas de <see cref="T:System.Diagnostics.ActivityListener" /> para decidir si se crea el objeto de actividad o no.</param>
      <typeparam name="T">Tipo del elemento primario solicitado con el que se va a crear el objeto de actividad. Debe ser una cadena o una <see cref="T:System.Diagnostics.ActivityContext" /> instancia de.</typeparam>
      <returns>Objeto que contiene los resultados de muestreo, que indican la cantidad de datos que se van a recopilar para el objeto <see cref="T:System.Diagnostics.Activity" /> relacionado.</returns>
    </member>
  </members>
</doc>