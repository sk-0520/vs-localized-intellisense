<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Reflection.DispatchProxy</name>
  </assembly>
  <members>
    <member name="T:System.Reflection.DispatchProxy">
      <summary>Fournit un mécanisme pour instancier les objets proxy et gérer leur méthode de distribution.</summary>
    </member>
    <member name="M:System.Reflection.DispatchProxy.#ctor" />
    <member name="M:System.Reflection.DispatchProxy.Create``2">
      <summary>Crée une instance d’objet qui dérive de la classe <typeparamref name="TProxy" /> et implémente l’interface <typeparamref name="T" />.</summary>
      <typeparam name="T">Interface que le proxy doit implémenter.</typeparam>
      <typeparam name="TProxy">Classe de base à utiliser pour la classe proxy.</typeparam>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="T" /> est une classe ou <typeparamref name="TProxy" /> est scellé ou n’a pas de constructeur sans paramètre.</exception>
      <returns>Instance d’objet qui implémente <typeparamref name="T" />.</returns>
    </member>
    <member name="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])">
      <summary>Chaque fois qu’une méthode sur le type de proxy généré est appelée, cette méthode est appelée pour distribuer le contrôle.</summary>
      <param name="targetMethod">Méthode que l’appelant a appelée.</param>
      <param name="args">Arguments passés par l’appelant à la méthode.</param>
      <returns>Objet à retourner à l’appelant, ou <see langword="null" /> pour les méthodes void.</returns>
    </member>
  </members>
</doc>