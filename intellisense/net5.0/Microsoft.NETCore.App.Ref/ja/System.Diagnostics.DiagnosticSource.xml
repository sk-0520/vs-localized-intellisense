<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>ログ記録に使用されるコンテキストを使用して、操作を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="operationName">操作の名前。</param>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>指定したキーと値の新しい baggage 項目を得られるように <see cref="T:System.Diagnostics.Activity" /> を更新します。</summary>
      <param name="key">baggage キーです。</param>
      <param name="value">baggage 値です。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddEvent(System.Diagnostics.ActivityEvent)">
      <summary>指定したアクティビティ イベントをイベント リストに追加します。</summary>
      <param name="e">追加するアクティビティ イベント。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.Object)">
      <summary>追加の <paramref name="key" /> と <paramref name="value" /> を含むタグを持つようにアクティビティを更新します。</summary>
      <param name="key">タグ キー名。</param>
      <param name="value">入力キーにマップされるタグ値。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>指定した <paramref name="key" /> と <paramref name="value" /> で新しいタグが得られるように <see cref="T:System.Diagnostics.Activity" /> を更新します。</summary>
      <param name="key">タグ キーです。</param>
      <param name="value">タグ値です。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose">
      <summary>アクティビティが既に開始されている場合は停止し、すべてのイベント リスナーに通知します。 それ以外の場合は、何も起こりません。</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.Dispose(System.Boolean)">
      <summary>このメソッドが派生型でオーバーライドされた場合、割り当てられたすべてのリソースが解放されます。</summary>
      <param name="disposing">メソッドがファイナライザーから呼び出されている場合は <see langword="false" />。ユーザー コードから呼び出す場合は <see langword="true" />。</param>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>
        <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" /> でアクティビティに追加されたキーと値のペアの値を返します。</summary>
      <param name="key">baggage キーです。</param>
      <returns>存在する場合は、キーと値のペア項目の値で、それ以外の場合は <see langword="null" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetCustomProperty(System.String)">
      <summary>指定したプロパティ名にマップされたオブジェクトを返します。</summary>
      <param name="propertyName">オブジェクトに関連付けられた名前。</param>
      <returns>プロパティ名にマップされたオブジェクト。見つからなかった場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetCustomProperty(System.String,System.Object)">
      <summary>このアクティビティにカスタム オブジェクトをアタッチします。 指定した <paramref name="propertyName" /> が以前に別のオブジェクトに関連付けられていた場合は、代わりに新しい <paramref name="propertyValue" /> に関連付けられるようにプロパティが更新されます。 同じ値を使用する他のユーザーとの競合を避けるために、一意のプロパティ名を使用することをお勧めします。</summary>
      <param name="propertyName">値を関連付ける名前。</param>
      <param name="propertyValue">プロパティ名にアタッチしてマップするオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> を更新して、その <see cref="P:System.Diagnostics.Activity.Duration" /> を <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> と指定した停止時間の差に設定します。</summary>
      <param name="endTimeUtc">UTC の停止時刻です。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>開始される前に、この <see cref="T:System.Diagnostics.Activity" /> で ID 形式を設定します。</summary>
      <param name="format">
        <see cref="P:System.Diagnostics.Activity.Id" /> プロパティの形式を指定する列挙値の 1 つ。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>TraceId および SpanId の W3C 規約を使用して、親 ID を設定します。</summary>
      <param name="traceId">親アクティビティの TraceId。</param>
      <param name="spanId">親アクティビティの SpanId。</param>
      <param name="activityTraceFlags">アクティビティに関連付けられている、W3C 標準で定義されたフラグを指定する列挙値の 1 つ。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>この <see cref="T:System.Diagnostics.Activity" /> を更新して、<paramref name="parentId" /> の ID の <see cref="T:System.Diagnostics.Activity" /> がこの <see cref="T:System.Diagnostics.Activity" /> を発生させたことを示します。</summary>
      <param name="parentId">親操作の ID です。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>この <see cref="T:System.Diagnostics.Activity" /> の開始時間を設定します。</summary>
      <param name="startTimeUtc">UTC での <see cref="T:System.Diagnostics.Activity" /> の開始時間です。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetTag(System.String,System.Object)">
      <summary>入力キーと値を使用してアクティビティ タグを追加または更新します。</summary>
      <param name="key">タグ キー名。</param>
      <param name="value">入力キーにマップされるタグ値。</param>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>アクティビティを開始します。</summary>
      <returns>チェーンで役立つ <see langword="this" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>アクティビティを停止します。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>アクティビティに関連付けられている (W3C ID 仕様によって定義された) フラグを取得します。</summary>
      <returns>アクティビティに関連付けられているフラグ。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>この <see cref="T:System.Diagnostics.Activity" /> の子に渡される情報を表すキーと値のペアのコレクションを取得します。</summary>
      <returns>文字列文字列のキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Context">
      <summary>アクティビティのコンテキストを取得します。 コンテキストは、アクティビティが開始されている場合にのみ有効になります。</summary>
      <returns>アクティビティが開始されている場合は、アクティビティのコンテキスト。それ以外の場合は、既定のコンテキストを返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>現在のスレッドの現在の操作 (<see cref="T:System.Diagnostics.Activity" />) を取得または設定します。  これは非同期呼び出し間でフローします。</summary>
      <returns>現在のスレッドの現在の操作。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> の既定の ID の形式を取得または設定します。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.DisplayName">
      <summary>アクティビティの表示名を取得または設定します。</summary>
      <returns>アクティビティの表示名を表す文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>操作の継続時間を取得します。</summary>
      <returns>が終了した <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /><see cref="T:System.Diagnostics.Activity" /> ( <see cref="M:System.Diagnostics.Activity.Stop" /> またはが呼び出された) 場合は、と終了時刻の間の差 <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /><see cref="F:System.TimeSpan.Zero" /> 。が <see cref="T:System.Diagnostics.Activity" /> 終了し <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> ておらず、が呼び出されなかった場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Events">
      <summary>このアクティビティにアタッチされているすべてのアクティビティ イベントのリストを取得します。</summary>
      <returns>このアクティビティに関連付けられているアクティビティイベントの列挙体。 アクティビティにイベントがない場合は、空の列挙体を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>既定の ID 形式を定義するために <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> を常に使用するかどうかを決定する値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> 常にを使用する <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> 場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>特定の要求に固有の識別子を取得します。</summary>
      <returns>アクティビティ ID。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> の形式を取得します。</summary>
      <returns>の形式 <see cref="P:System.Diagnostics.Activity.Id" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IsAllDataRequested">
      <summary>このアクティビティに、すべての伝達情報に加えて、リンク、タグ、イベントなどの他のすべてのプロパティを設定する必要があるかどうかを示します。</summary>
      <returns>
        <see langword="true" /> アクティビティを設定する必要がある場合は。 <see langword="false" /> それ以外の場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Kind">
      <summary>トレースにおける、アクティビティ、その親、およびその子の間のリレーションシップを取得します。</summary>
      <returns>トレースにおけるアクティビティ、親、およびその子との関係を示す列挙値の1つ。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Links">
      <summary>このアクティビティにアタッチされているすべてのアクティビティ リンクのリストを取得します。</summary>
      <returns>このアクティビティにアタッチされているアクティビティリンクの列挙体。 アクティビティにリンクがない場合、は空の列挙を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>操作名を取得します。</summary>
      <returns>操作の名前。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>このアクティビティを作成した親 <see cref="T:System.Diagnostics.Activity" /> を取得します。</summary>
      <returns>このの親が <see cref="T:System.Diagnostics.Activity" /> 同じプロセスからのものである場合、または <see langword="null" /> このインスタンスが親を持たない場合 (ルートアクティビティの場合)、または親がプロセスの外部からのものである場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>このアクティビティの親の ID を取得します。</summary>
      <returns>親 ID (存在する場合)、または存在 <see langword="null" /> しない場合はです。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>親の <see cref="P:System.Diagnostics.Activity.SpanId" /> を取得します。</summary>
      <returns>親の <see cref="P:System.Diagnostics.Activity.SpanId" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>W3CIdFlags.Recorded フラグが設定されているかどうかを示す値を取得します。</summary>
      <returns>
        <see langword="true" /> W3CIdFlags フラグが設定されている場合は。それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>この <see cref="T:System.Diagnostics.Activity" /> のルート ID を取得します。</summary>
      <returns>ルート ID <see langword="null" /> 。現在のインスタンスがまたはのいずれかを持っている場合は <see cref="P:System.Diagnostics.Activity.ParentId" /><see cref="P:System.Diagnostics.Activity.Id" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Source">
      <summary>このアクティビティに関連付けられているアクティビティ ソースを取得します。</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> の SPAN 部分を取得します。</summary>
      <returns>が <see cref="P:System.Diagnostics.Activity.Id" /> W3C 形式の場合は、の SPAN 部分の ID。それ以外の場合は <see cref="T:System.Diagnostics.Activity" /> 0 <see langword="SpanId" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>操作が開始された時間を取得します。</summary>
      <returns>操作が開始された UTC 時刻。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TagObjects">
      <summary>アクティビティと共にログに記録する情報を表すタグのリストを返します。 この情報は、このアクティビティの子には渡されません。</summary>
      <returns>タグとオブジェクトのキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>ログ システムに <see cref="T:System.Diagnostics.Activity" /> と共に書き込まれる情報を表すキーと値のペアのコレクションを取得します。</summary>
      <returns>文字列文字列のキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> の TraceId 部分を取得します。</summary>
      <returns>ID に W3C 形式が指定されている場合は、の TraceId 部分の ID <see cref="P:System.Diagnostics.Activity.Id" /> 。それ以外の場合は 0 TraceId。</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>W3C <see langword="tracestate" /> ヘッダーを取得します。</summary>
      <returns>W3C <see langword="tracestate" /> ヘッダー。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityContext">
      <summary>W3C TraceContext 仕様に準拠した表現。 TraceId、SpanId という 2 つの識別子と、共通する TraceFlags のセット、およびシステム固有の TraceState 値が含まれます。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.#ctor(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags,System.String,System.Boolean)">
      <summary>指定した引数を使用して、新しいアクティビティ コンテキスト インスタンスを構築します。</summary>
      <param name="traceId">トレース識別子です。</param>
      <param name="spanId">スパン識別子。</param>
      <param name="traceFlags">トレースに関する詳細を格納します。</param>
      <param name="traceState">システム固有の構成データを格納します。</param>
      <param name="isRemote">コンテキストがリモートの親から反映されるかどうかを示します。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Diagnostics.ActivityContext)">
      <summary>現在のオブジェクトが、同じ型の別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="value">このインスタンスと比較するオブジェクト。</param>
      <returns>現在のオブジェクトが <paramref name="other" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Equals(System.Object)">
      <summary>このインスタンスと指定した <see langword="ActivityContext" /> オブジェクトの値が同一かどうかを判断します。</summary>
      <param name="obj">このインスタンスと比較するオブジェクト。</param>
      <returns>現在のオブジェクトが <paramref name="obj" /> パラメーターと等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に適した、現在の <see langword="ActivityContext" /> のハッシュ関数を提供します。</summary>
      <returns>現在の <see langword="ActivityContext" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Equality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>2 つの指定した <see langword="ActivityContext" /> 値が等しいかどうかを判断します。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.op_Inequality(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityContext)">
      <summary>2 つの指定した <see langword="ActivityContext" /> 値が等しくないかどうかを判断します。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.Parse(System.String,System.String)">
      <summary>W3C トレース コンテキスト ヘッダーを <see cref="T:System.Diagnostics.ActivityContext" /> オブジェクトに解析します。</summary>
      <param name="traceParent">W3C トレースの親ヘッダー。</param>
      <param name="traceState">トレースの状態。</param>
      <exception cref="T:System.ArgumentException">トレースの親が無効です。</exception>
      <returns>解析操作で作成された <see cref="T:System.Diagnostics.ActivityContext" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityContext.TryParse(System.String,System.String,System.Diagnostics.ActivityContext@)">
      <summary>W3C トレース コンテキスト ヘッダーを <see cref="T:System.Diagnostics.ActivityContext" /> オブジェクトに解析することを試みます。</summary>
      <param name="traceParent">W3C トレースの親ヘッダー。</param>
      <param name="traceState">W3C トレースの状態。</param>
      <param name="context">このメソッドから <see langword="true" /> が返された場合に、解析操作で作成される <see cref="T:System.Diagnostics.ActivityContext" /> オブジェクト。</param>
      <returns>解析が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.IsRemote">
      <summary>アクティビティ コンテキストがリモートの親から反映されたかどうかを示します。</summary>
      <returns>
        <see langword="true" /> リモートの親から伝達された場合は。 <see langword="false" /> それ以外の場合は。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.SpanId">
      <summary>呼び出し元によって認識される要求の ID。</summary>
      <returns>コンテキスト内のスパン Id。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceFlags">
      <summary>W3C 標準によって定義されたフラグと、アクティビティの ID。</summary>
      <returns>コンテキストトレースフラグ。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceId">
      <summary>トレース識別子。</summary>
      <returns>コンテキスト内のトレース識別子。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityContext.TraceState">
      <summary>W3C の 'tracestate' ヘッダーを保持します。</summary>
      <returns>W3C の ' tracestate ' ヘッダーを表す文字列。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityCreationOptions`1">
      <summary>アクティビティ リスナーに送信されるすべての情報をカプセル化し、アクティビティ インスタンスの作成と、その状態に関する意思決定を行います。

可能なジェネリック型パラメーターは <see cref="T:System.Diagnostics.ActivityContext" /> または <see cref="T:System.String" /> です。</summary>
      <typeparam name="T">プロパティの型 <see langword="Parent" /> 。 <see cref="T:System.String" /> または <see langword="ActivityContext" /> である必要があります。</typeparam>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Kind">
      <summary>アクティビティの作成に使用するアクティビティの種類を取得します。</summary>
      <returns>アクティビティの種類を表す列挙値の1つ。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Links">
      <summary>アクティビティの作成に使用するアクティビティ リンクの列挙型を取得します。</summary>
      <returns>アクティビティリンクの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Name">
      <summary>作成されるアクティビティの OperationName として使用する名前を取得します。</summary>
      <returns>アクティビティ名を表す文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Parent">
      <summary>アクティビティの作成に使用する親コンテキストまたは親 ID を取得します。</summary>
      <returns>として、またはとして表現される、アクティビティの親 <see cref="T:System.String" /><see cref="T:System.Diagnostics.ActivityContext" /> 。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.SamplingTags">
      <summary>サンプリング プロセス中にタグを追加するために使用されるコレクションを取得します。 追加されたタグは、作成されたアクティビティが <see cref="T:System.Diagnostics.ActivityListener" /> コールバックによって作成される必要があると判断された場合には、それにも追加されます。</summary>
      <returns>アクティビティタグコレクション。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Source">
      <summary>アクティビティの作成に使用するアクティビティ ソースを取得します。</summary>
      <returns>アクティビティソースオブジェクト。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.Tags">
      <summary>アクティビティの作成に使用するタグを取得します。</summary>
      <returns>アクティビティに関連付けられているタグのキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityCreationOptions`1.TraceId">
      <summary>
        <see cref="T:System.Diagnostics.ActivityListener" /> コールバックによって作成される必要があると判断された場合に、アクティビティ オブジェクト内で使用するトレース ID を取得します。</summary>
      <returns>トレース Id。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityEvent">
      <summary>名前とタイムスタンプに加え、必要に応じてタグのリストを含むイベントを表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String)">
      <summary>指定した名前と現在の時刻をイベントのタイムスタンプとして使用して、新しいアクティビティ イベント インスタンスを初期化します。</summary>
      <param name="name">イベントの名前です。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityEvent.#ctor(System.String,System.DateTimeOffset,System.Diagnostics.ActivityTagsCollection)">
      <summary>指定した名前、タイムスタンプ、およびタグを使用して、新しいアクティビティ イベント インスタンスを初期化します。</summary>
      <param name="name">イベントの名前です。</param>
      <param name="timestamp">イベントのタイムスタンプ。 タイムスタンプは、この呼び出しの時点ではなく、過去に発生したイベントに対してのみ使用する必要があります。</param>
      <param name="tags">イベント タグ。</param>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Name">
      <summary>アクティビティ イベントの名前を取得します。</summary>
      <returns>アクティビティイベント名を表す文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Tags">
      <summary>イベントに関連付けられているタグのコレクションを取得します。</summary>
      <returns>イベントに関連付けられているタグを格納しているキーと値のペアの列挙体。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityEvent.Timestamp">
      <summary>アクティビティ イベントのタイムスタンプを取得します。</summary>
      <returns>アクティビティイベントのタイムスタンプを表す datetime オフセット。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>
        <see cref="P:System.Diagnostics.Activity.Id" /> プロパティの形式を指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>階層的形式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>不明な形式。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>W3C 形式。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityKind">
      <summary>トレースにおける、アクティビティ、その親、およびその子の間のリレーションシップについて説明します。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Client">
      <summary>外部コンポーネントへの送信要求。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Consumer">
      <summary>外部コンポーネントから受け取った出力。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Internal">
      <summary>リモートの親または子を使用した操作に対する、アプリケーション内の内部操作。 これが既定値です。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Producer">
      <summary>外部コンポーネントに提供される出力。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityKind.Server">
      <summary>外部コンポーネントから受信した要求。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityLink">
      <summary>アクティビティは、因果関係のある 0 個以上のアクティビティ コンテキスト インスタンスにリンクすることができます。

アクティビティ リンクによって、1 つのトレース内または複数のトレースにわたるアクティビティ コンテキストを指すことができます。

アクティビティ リンクを使用して、アクティビティが複数の開始アクティビティによって開始されたバッチ操作を表すことができます。それぞれがバッチ内で処理される 1 つの受信項目を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.#ctor(System.Diagnostics.ActivityContext,System.Diagnostics.ActivityTagsCollection)">
      <summary>アクティビティにリンクできる、新しいアクティビティ リンクを構築します。</summary>
      <param name="context">トレース アクティビティ コンテキスト。</param>
      <param name="tags">アクティビティ コンテキストに関連付けられているタグのキーと値のペアのリスト。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Diagnostics.ActivityLink)">
      <summary>現在のアクティビティ リンクが別のアクティビティ リンクと等しいかどうかを示します。</summary>
      <param name="value">比較するアクティビティ リンク。</param>
      <returns>現在のアクティビティ リンクが <paramref name="other" /> に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.Equals(System.Object)">
      <summary>現在のアクティビティ リンクが別のオブジェクトと等しいかどうかを示します。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>現在のアクティビティ リンクが <paramref name="obj" /> に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.GetHashCode">
      <summary>ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に適した、現在の <see langword="ActivityLink" /> のハッシュ関数を提供します。</summary>
      <returns>現在の <see langword="ActivityLink" /> のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Equality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>2 つの指定した <see langword="ActivityLink" /> 値が等しいかどうかを判断します。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityLink.op_Inequality(System.Diagnostics.ActivityLink,System.Diagnostics.ActivityLink)">
      <summary>2 つの指定した <see langword="ActivityLink" /> 値が等しくないかどうかを判断します。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Context">
      <summary>このアクティビティ リンク内のアクティビティ コンテキストを取得します。</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityLink.Tags">
      <summary>アクティビティ コンテキストにアタッチされているタグのキーと値のペアの列挙型を取得します。</summary>
      <returns>アクティビティコンテキストにアタッチされているタグの列挙体。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityListener">
      <summary>アクティビティの開始イベントと停止イベントをリッスンできるようにし、サンプリング シナリオ用のアクティビティの作成を決定する機会を与えます。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.#ctor">
      <summary>アクティビティ イベントのリッスンを開始するための新しいアクティビティ リスナー オブジェクトを構築します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityListener.Dispose">
      <summary>アクティビティ イベントのリッスンから、このアクティビティ リスナー オブジェクトの登録を解除します。</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStarted">
      <summary>アクティビティ開始イベントをリッスンするために使用されるコールバックを取得または設定します。</summary>
      <returns>アクティビティの開始イベントをリッスンするために使用されるアクティビティコールバックインスタンス。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ActivityStopped">
      <summary>アクティビティ停止イベントをリッスンするために使用されるコールバックを取得または設定します。</summary>
      <returns>アクティビティの停止イベントをリッスンするために使用されるアクティビティコールバックインスタンス。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.Sample">
      <summary>特定のデータ状態を持つ <see cref="T:System.Diagnostics.Activity" /> オブジェクトの作成を許可するかどうかを決定するために使用するコールバックを取得または設定します。</summary>
      <returns>サンプルアクティビティインスタンス。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.SampleUsingParentId">
      <summary>特定のデータ状態を持つ <see cref="T:System.Diagnostics.Activity" /> オブジェクトの作成を許可するかどうかを決定するために使用するコールバックを取得または設定します。</summary>
      <returns>サンプルアクティビティインスタンス。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityListener.ShouldListenTo">
      <summary>アクティビティ ソース オブジェクトを使用して作成されたアクティビティ オブジェクト イベントをリッスンする必要があるかどうかを決定できるコールバックを取得または設定します。</summary>
      <returns>
        <see langword="true" /> イベントをリッスンする場合は。 <see langword="false" /> それ以外の場合は。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySamplingResult">
      <summary>
        <see cref="T:System.Diagnostics.ActivityListener" /> によって使用される列挙値であり、関連する <see cref="T:System.Diagnostics.Activity" /> について収集するデータの量を示します。 より多くのデータを要求すると、それだけパフォーマンスのオーバーヘッドが大きくなります。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllData">
      <summary>このアクティビティ オブジェクトには、すべての伝達情報に加えて、リンク、タグ、イベントなどの他のすべてのプロパティを設定する必要があります。 この値を使用すると、<see cref="P:System.Diagnostics.Activity.IsAllDataRequested" /> から <see langword="true" /> が返されます。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.AllDataAndRecorded">
      <summary>アクティビティ オブジェクトには、<see cref="F:System.Diagnostics.ActivitySamplingResult.AllData" /> の場合と同じ値を設定する必要があります。 さらに、Activity.Recorded は <see langword="true" /> に設定されます。 W3C トレース ID を使用するアクティビティの場合は、これにより、下流に伝達される ID 内で、トレースをすべての場所に記録することを要求するフラグ ビットが設定されます。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.None">
      <summary>アクティビティ オブジェクトを作成する必要はありません。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivitySamplingResult.PropagationData">
      <summary>アクティビティ オブジェクトを作成する必要があります。 名前、ソース、ID、および手荷物が含まれます。 その他のプロパティは不要であり、このリスナーによって無視されます。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySource">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> オブジェクトを作成して開始し、<see cref="T:System.Diagnostics.Activity" /> イベントをリッスンする <see cref="T:System.Diagnostics.ActivityListener" /> オブジェクトを登録するための API を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.#ctor(System.String,System.String)">
      <summary>指定した <paramref name="name" /> を持つアクティビティ ソース オブジェクトを構築します。</summary>
      <param name="name">アクティビティ ソース オブジェクトの名前。</param>
      <param name="version">トレース情報を発行するコンポーネントのバージョン。</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.AddActivityListener(System.Diagnostics.ActivityListener)">
      <summary>イベントを開始および停止するアクティビティにリスナーを追加します。</summary>
      <param name="listener">アクティビティ イベントのリッスンに使用するアクティビティ リスナー オブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.Dispose">
      <summary>アクティビティ ソース オブジェクトを破棄し、グローバル リストから現在のインスタンスを削除して、リスナーのリストを空にします。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.HasListeners">
      <summary>このアクティビティ ソースのリスナーがあるかどうかを確認します。</summary>
      <returns>このアクティビティ ソースに登録されているリスナーがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind)">
      <summary>アクティブなリスナーが存在する場合は、指定した名前とアクティビティの種類を使用して、新しいアクティビティを作成します。</summary>
      <param name="name">アクティビティの操作名。</param>
      <param name="kind">アクティビティの種類。</param>
      <returns>アクティブなリスナーが存在する場合は、作成されたアクティビティ オブジェクト。イベント リスナーが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.Diagnostics.ActivityContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>アクティブなリスナーが存在する場合、新しいアクティビティを作成します。指定した名前、アクティビティの種類、親アクティビティ コンテキスト、タグ、アクティビティ リンク (省略可能)、開始時刻 (省略可能) を使用します。</summary>
      <param name="name">アクティビティの操作名。</param>
      <param name="kind">アクティビティの種類。</param>
      <param name="parentContext">作成されたアクティビティ オブジェクトを初期化する親 <see cref="T:System.Diagnostics.ActivityContext" /> オブジェクト。</param>
      <param name="tags">作成されたアクティビティ オブジェクトを初期化するタグのリスト (省略可能)。</param>
      <param name="links">作成されたアクティビティ オブジェクトを初期化する <see cref="T:System.Diagnostics.ActivityLink" /> のリスト (省略可能)。</param>
      <param name="startTime">作成されたアクティビティ オブジェクトに設定する開始タイムスタンプ (省略可能)。</param>
      <returns>アクティブなリスナーが存在する場合は、作成されたアクティビティ オブジェクト。イベント リスナーが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySource.StartActivity(System.String,System.Diagnostics.ActivityKind,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Collections.Generic.IEnumerable{System.Diagnostics.ActivityLink},System.DateTimeOffset)">
      <summary>アクティブなリスナーが存在する場合、新しいアクティビティを作成します。指定した名前、アクティビティの種類、親 ID、タグ、アクティビティ リンク (省略可能)、開始時刻 (省略可能) を使用します。</summary>
      <param name="name">アクティビティの操作名。</param>
      <param name="kind">アクティビティの種類。</param>
      <param name="parentId">作成されたアクティビティ オブジェクトを初期化する親 ID。</param>
      <param name="tags">作成されたアクティビティ オブジェクトを初期化するタグのリスト (省略可能)。</param>
      <param name="links">作成されたアクティビティ オブジェクトを初期化する <see cref="T:System.Diagnostics.ActivityLink" /> のリスト (省略可能)。</param>
      <param name="startTime">作成されたアクティビティ オブジェクトに設定する開始タイムスタンプ (省略可能)。</param>
      <returns>アクティブなリスナーが存在する場合は、作成されたアクティビティ オブジェクト。イベント リスナーが存在しない場合は <see langword="null" />。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Name">
      <summary>アクティビティ ソースの名前を返します。</summary>
      <returns>アクティビティのソース名を表す文字列。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivitySource.Version">
      <summary>アクティビティ ソースのバージョンを返します。</summary>
      <returns>アクティビティソースのバージョンを表す文字列。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>W3C 標準に基づいて書式設定された <see cref="P:System.Diagnostics.Activity.SpanId" /> を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>現在の <see cref="T:System.Diagnostics.ActivitySpanId" /> の 8 バイトを指定のスパンにコピーします。</summary>
      <param name="destination">SpanID の 8 バイトがコピーされるスパン。</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>8 バイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData">8 バイトの読み取り専用スパン。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> には 8 バイトは含まれません。</exception>
      <returns>新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>16 個の 16 進数文字の読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData">16 個の 16 進数文字を含むスパン。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> には、16 個の 16 進数文字は含まれていません。

- または - 
<paramref name="idData" /> の文字は、すべて小文字の 16 進数文字でもすべてゼロでもありません。</exception>
      <returns>新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8 でエンコードされたバイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> 値を作成します。</summary>
      <param name="idData">UTF8 でエンコードされたバイトの読み取り専用スパン。</param>
      <returns>新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>ランダムな数 (一意となる可能性が非常に高い) に基づいて新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> を作成します。</summary>
      <returns>新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>このインスタンスと、指定した <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="spanId">比較対象のインスタンス。</param>
      <returns>
        <paramref name="spanId" /> が現在のインスタンスと同じ 16 進数値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>現在のインスタンスと指定したオブジェクト (やはり <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスである必要があります) が同じ値です。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Diagnostics.ActivitySpanId" /> のインスタンスで、現在のインスタンスと同じ 16 進値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>SpanId のハッシュ コードを返します。</summary>
      <returns>SpanId のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>指定した 2 つの <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="spanId1">比較する 1 番目のインスタンス。</param>
      <param name="spandId2">比較する 2 番目のインスタンス。</param>
      <returns>
        <paramref name="spanId1" /> の SpanId が <paramref name="spandId2" /> の SpanId と同じ場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>指定した 2 つの <see cref="T:System.Diagnostics.ActivitySpanId" /> インスタンスの値が異なるかどうかを判断します。</summary>
      <param name="spanId1">比較する 1 番目のインスタンス。</param>
      <param name="spandId2">比較する 2 番目のインスタンス。</param>
      <returns>
        <paramref name="spanId1" /> の SpanId が <paramref name="spandId2" /> の SpanId と異なる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns>このスパン ID を 16 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns>このスパン ID を 16 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection">
      <summary>ActivityTagsCollection は、トレース タグを格納するために使用するコレクション クラスです。

このコレクションは、<see cref="T:System.Diagnostics.ActivityEvent" /> や <see cref="T:System.Diagnostics.ActivityLink" /> などのクラスと共に使用されます。

このコレクションは次のように動作します: - コレクション項目は、追加された方法に従って並べ替えられます。
- 同じキーを持つ項目の重複は許可されません。
- インデクサーを使用してコレクションに項目を格納する場合: - 項目に、コレクション内に以前に存在していたキーが含まれていて、その値が <see langword="null" /> である場合、キーに一致するコレクション項目がコレクションから削除されます。
- 項目に、コレクション内に以前に存在していたキーが含まれていて、その値が <see langword="null" /> でない場合、新しい項目の値によってコレクションに格納されている古い値が置き換えられます。
- それ以外の場合は、項目がコレクションに追加されます。
- Add メソッドでは、同じキーを持つ項目が既に存在していない場合に、新しい項目がコレクションに追加されます。 それ以外の場合は、例外がスローされます。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor">
      <summary>コレクションの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>コレクションの新しいインスタンスを作成し、コレクションに入力リスト項目を格納します。</summary>
      <param name="list">コレクションに格納する最初のリスト。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>項目をコレクションに追加します。</summary>
      <param name="item">コレクションに追加するタグのキーと値のペア。</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> はリストに既に存在します。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Add(System.String,System.Object)">
      <summary>指定したキーと値を持つタグをコレクションに追加します。 このコレクションに、同じキーを持つタグを 2 つ追加することはできません。</summary>
      <param name="key">タグ キーです。</param>
      <param name="value">タグ値です。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Clear">
      <summary>コレクションからすべての項目を削除します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" /> に特定の値が格納されているかどうかを判断します。</summary>
      <param name="item">
        <see cref="T:System.Collections.Generic.ICollection`1" /> 内で検索するオブジェクト。</param>
      <returns>
        <see langword="true" /> が <paramref name="item" /> に存在する場合は <see cref="T:System.Collections.Generic.ICollection`1" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.ContainsKey(System.String)">
      <summary>指定したキーの要素がコレクションに含まれているかどうかを確認します。</summary>
      <param name="key">
        <see cref="T:System.Collections.Generic.IDictionary`2" /> 内で検索されるキー。</param>
      <returns>そのキーを持つタグがコレクションに含まれている場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>特定の配列インデックスを開始位置として、配列にコレクションの要素をコピーします。</summary>
      <param name="array">コレクション要素のコピー先となる配列。</param>
      <param name="arrayIndex">コピーの開始位置となる、配列の 0 から始まるインデックス。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>
        <see langword="ActivityTagsCollection" /> の列挙子。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>最初に検出した特定の項目をコレクションから削除します。</summary>
      <param name="item">削除するタグのキーと値のペア。</param>
      <returns>コレクションから項目が正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 このメソッドは、項目が元のコレクションに見つからない場合にも <see langword="false" /> を返します。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Remove(System.String)">
      <summary>指定したキーを持つタグをコレクションから削除します。</summary>
      <param name="key">タグ キーです。</param>
      <returns>項目が存在していて、削除された場合は <see langword="true" />。 それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションの反復処理に使用できる列挙子。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>コレクションを反復処理する列挙子を返します。</summary>
      <returns>コレクションを反復処理するために使用できる <see cref="T:System.Collections.IEnumerator" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.TryGetValue(System.String,System.Object@)">
      <summary>指定したキーに関連付けられている値を取得します。</summary>
      <param name="key">タグ キーです。</param>
      <param name="value">タグ値です。</param>
      <returns>メソッドから制御が戻ったときにキーが見つかっていた場合は、指定されたキーに関連付けられている値。それ以外の場合は、value パラメーターの型の既定値。 このパラメーターは初期化せずに渡されます。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Count">
      <summary>コレクションに格納されている要素の数を取得します。</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.IsReadOnly">
      <summary>コレクションが読み取り専用かどうかを示す値を取得します。 これは常に <see langword="false" /> を返します。</summary>
      <returns>常に <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Item(System.String)">
      <summary>指定したコレクション項目を取得または設定します。
        
このインデクサー プロパティに値を設定するときに、次の動作が発生します: - キーが以前にコレクション内に存在していて、その値が <see langword="null" /> である場合、そのキーに一致するコレクション項目はコレクションから削除されます。
- キーが以前にコレクション内に存在していて、値が <see langword="null" /> でない場合、その値によってコレクションに格納されている古い値が置き換えられます。
- それ以外の場合は、新しい項目がコレクションに追加されます。</summary>
      <param name="key">取得または設定する値のキー。</param>
      <returns>キーにマップされているオブジェクト。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Keys">
      <summary>格納されているすべてのタグのキーのリストを取得します。</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Values">
      <summary>格納されているすべてのタグの値のリストを取得します。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTagsCollection.Enumerator">
      <summary>
        <see langword="ActivityTagsCollection" /> の要素を列挙します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.Dispose">
      <summary>アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.MoveNext">
      <summary>列挙子をコレクションの次の要素に進めます。</summary>
      <returns>列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>列挙子を初期位置、つまりコレクションの最初の要素の前に設定します。</summary>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.Current">
      <summary>列挙子の現在位置にあるコレクション内の要素を取得します。</summary>
      <returns>コレクション内の、列挙子の現在位置にある要素。</returns>
    </member>
    <member name="P:System.Diagnostics.ActivityTagsCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>列挙子の現在位置にあるコレクション内の要素を取得します。</summary>
      <returns>コレクション内の、列挙子の現在位置にある要素。</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>アクティビティに関連付けられている、W3C 標準で定義されたフラグを指定します。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>アクティビティはマークされていません。</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>アクティビティ (または多くの場合、その親) は、記録するのに役立つものとしてマークされています。</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>形式が W3C 標準に基づく <see cref="P:System.Diagnostics.Activity.TraceId" /> を表します。</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>現在の <see cref="T:System.Diagnostics.ActivityTraceId" /> の 16 バイトを指定のスパンにコピーします。</summary>
      <param name="destination">トレース ID の 16 バイトがコピーされるスパン。</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>16 バイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData">16 バイトの読み取り専用スパン。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> には 8 バイトは含まれません。</exception>
      <returns>新しいトレース ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>32 個の 16 進数文字の読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData">32 個の 16 進数文字を含むスパン。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> には、16 個の 16 進数文字は含まれていません。

- または -

<paramref name="idData" /> の文字は、すべて小文字の 16 進数文字でもすべてゼロでもありません。</exception>
      <returns>新しいトレース ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>UTF8 でエンコードされたバイトの読み取り専用スパンから新しい <see cref="T:System.Diagnostics.ActivityTraceId" /> 値を作成します。</summary>
      <param name="idData">UTF8 でエンコードされたバイトの読み取り専用スパン。</param>
      <returns>新しいトレース ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>ランダムな数 (一意となる可能性が非常に高い) に基づいて新しい <see cref="T:System.Diagnostics.ActivitySpanId" /> を作成します。</summary>
      <returns>新しいスパン ID。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>現在のインスタンスと指定した <see cref="T:System.Diagnostics.ActivityTraceId" /> が、等しいかどうかを判断します。</summary>
      <param name="traceId">比較対象のインスタンス。</param>
      <returns>
        <paramref name="traceId" /> が現在のインスタンスと同じ 16 進数値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>このインスタンスと、指定したオブジェクトの値が同一かどうかを判断します。<see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスを指定する必要があります。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Diagnostics.ActivityTraceId" /> のインスタンスで、現在のインスタンスと同じ 16 進値の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>TraceId のハッシュ コードを返します。</summary>
      <returns>TraceId のハッシュ コード。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>指定した 2 つの <see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="traceId1">比較する 1 番目のインスタンス。</param>
      <param name="traceId2">比較する 2 番目のインスタンス。</param>
      <returns>
        <paramref name="traceId1" /> の TraceId が <paramref name="traceId2" /> の TraceId と同じである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>指定した 2 つの <see cref="T:System.Diagnostics.ActivityTraceId" /> インスタンスの値が同一かどうかを判断します。</summary>
      <param name="traceId1">比較する 1 番目のインスタンス。</param>
      <param name="traceId2">比較する 2 番目のインスタンス。</param>
      <returns>
        <paramref name="traceId1" /> の TraceId が <paramref name="traceId2" /> の TraceId と異なる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>このスパン ID を表す 16 文字からなる 16 進数文字列を返します。</summary>
      <returns>このトレース ID を 32 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>このトレース ID を表す 32 文字からなる 16 進数文字列を返します。</summary>
      <returns>このトレース ID を 32 文字からなる 16 進数文字列で表現したもの。</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>ソースがその情報を送信する (イベント) 名前付きの場所を表す抽象 <see cref="T:System.Diagnostics.DiagnosticSource" /> クラスの実装を提供します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>新しい <see cref="T:System.Diagnostics.DiagnosticListener" /> を作成します。</summary>
      <param name="name">この <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>NotificationListeners を破棄します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>登録されているサブスクライバーが存在するかどうかを判断します。</summary>
      <returns>登録されているサブスクライバーがいる場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticListener" /> が有効かどうかを確認します。</summary>
      <param name="name">確認するイベントの名前。</param>
      <returns>通知が有効になっている場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>診断イベントに対するいずれかのサブスクライバーが、この名前のイベントの受信に関心があるかどうかを確認します。 サブスクライバーは、<see cref="Overload:System.Diagnostics.DiagnosticListener.Subscribe" /> で提供されるデリゲートを使用して関心を示します。</summary>
      <param name="name">確認するイベントの名前。</param>
      <param name="arg1">コンテキストを表すオブジェクト。</param>
      <param name="arg2">コンテキストを表すオブジェクト。</param>
      <returns>有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>すべてのサブスクライバーの OnActivityExport メソッドを呼び出します。</summary>
      <param name="activity">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload">送信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>すべてのサブスクライバーの OnActivityImport メソッドを呼び出します。</summary>
      <param name="activity">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload">受信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>サブスクライバーを追加します。</summary>
      <param name="observer">サブスクライバーです。</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>サブスクライバーを追加し、任意で、その名前と最大 2 つのコンテキスト オブジェクトに基づいてイベントをフィルタリングします。</summary>
      <param name="observer">サブスクライバーです。</param>
      <param name="isEnabled">その名前と最大 2 つのコンテキスト オブジェクト (<see langword="null" /> が可能) に基づいてイベントをフィルタリングするデリゲートです。あるいは、イベント フィルターが望ましくない場合、<see langword="null" />。</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>サブスクライバーを追加し、任意で、その名前と最大 2 つのコンテキスト オブジェクトに基づいてイベントをフィルタリングし、プロバイダーがプロセスの外からアクティビティをインポートまたはエクスポートするときに呼び出すメソッドを指定します。</summary>
      <param name="observer">サブスクライバーです。</param>
      <param name="isEnabled">その名前と最大 2 つのコンテキスト オブジェクト (<see langword="null" /> が可能) に基づいてイベントをフィルタリングするデリゲートです。あるいは、イベント フィルターが望ましくない場合、<see langword="null" />。</param>
      <param name="onActivityImport">外部イベントの影響を受けるアクティビティを受け取るアクション デリゲートおよび受信要求を表すオブジェクトです。</param>
      <param name="onActivityExport">外部イベントの影響を受けるアクティビティを受け取るアクション デリゲートおよび送信要求を表すオブジェクトです。</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>サブスクライバーを追加し、任意で、その名前に基づいてイベントをフィルタリングします。</summary>
      <param name="observer">サブスクライバーです。</param>
      <param name="isEnabled">その名前 (<see cref="T:System.String" />) に基づいてイベントをフィルタリングするデリゲートです。 イベントが有効な場合、このデリゲートは <see langword="true" /> を返します。</param>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> が通知の送信を完了する前に、リスナーが通知の受信を停止できるインターフェイスへの参照。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>この DiagnosticListener の名前と共に文字列を返します。</summary>
      <returns>この DiagnosticListener の名前です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>通知をログ記録します。</summary>
      <param name="name">ログ記録するイベントの名前。</param>
      <param name="value">イベントのペイロードを表すオブジェクト。</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>この <see cref="T:System.Diagnostics.DiagnosticListener" /> のリスナーのコレクションを取得します。</summary>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>この <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前を取得します。</summary>
      <returns>
        <see cref="T:System.Diagnostics.DiagnosticListener" /> の名前。</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>コードが、インストルメント化されたプロセスで使用されるために、リッチ データのペイロードの生産時間のログ記録に使用されるのをインストルメント化する抽象クラスです。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>
        <see cref="T:System.Diagnostics.DiagnosticSource" /> クラスのインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>通知イベントが有効になったかどうかを確認します。</summary>
      <param name="name">書き込まれるイベントの名前です。</param>
      <returns>通知イベントが有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>通知イベントが有効になったかどうかを確認します。</summary>
      <param name="name">書き込まれるイベントの名前です。</param>
      <param name="arg1">IsEnabled の追加のコンテキストを表すオブジェクトです。 コンシューマーは <see langword="null" /> を受け取ります。これは、プロデューサーが純粋な IsEnabled(string) を呼び出し、コンシューマーがそのようなイベントの通知をそもそも受け取りたいかを確認したことを示している場合があります。 これに基づいて、プロデューサーが非 <see langword="null" /> コンテキストを使用して再度 IsEnabled(string, object, object) を呼び出す場合があります。</param>
      <param name="arg2">省略可能。 IsEnabled の追加のコンテキストを表すオブジェクトです。 既定では <see langword="null" /> です。 コンシューマーは <see langword="null" /> を受け取ります。これは、プロデューサーが純粋な IsEnabled(string) を呼び出したか、プロデューサーが必要なすべてのコンテキストを <paramref name="arg1" /> で渡していることを示している場合があります。</param>
      <returns>通知イベントが有効な場合は <see langword="true" /> で、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>送信される HTTP 要求など、プロセスの外で発生するイベントまたは操作にアクティビティから状態を転送します。</summary>
      <param name="activity">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload">送信要求を表すオブジェクト。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>プロセスの外で発生した、受信要求など、イベントまたは操作からアクティビティに状態を転送します。</summary>
      <param name="activity">外部イベントの影響を受けるアクティビティ。</param>
      <param name="payload">受信した要求を表すペイロード。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>
        <see cref="T:System.Diagnostics.Activity" /> を開始し、開始イベントを書き込みます。</summary>
      <param name="activity">開始する <see cref="T:System.Diagnostics.Activity" /> です。</param>
      <param name="args">イベントのペイロードとして渡される値を表すオブジェクトです。</param>
      <returns>チェーンで役立つために開始されたアクティビティです。</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>指定した <see cref="T:System.Diagnostics.Activity" /> を停止し、グローバルな <see cref="P:System.Diagnostics.Activity.Current" /> アクティビティを維持し、コンシューマーに <see cref="T:System.Diagnostics.Activity" /> が停止されたことを通知します。</summary>
      <param name="activity">停止するアクティビティです。</param>
      <param name="args">イベントのペイロードとして渡される値を表すオブジェクトです。</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>複雑なペイロードのログを記録する汎用的な方法です。</summary>
      <param name="name">書き込まれるイベントの名前です。</param>
      <param name="value">イベントのペイロードとして渡される値を表すオブジェクトです。 これは通常、いくつかのサブ値を含む匿名型です。</param>
    </member>
    <member name="T:System.Diagnostics.SampleActivity`1">
      <summary>サンプリング プロセスで使用される <see cref="T:System.Diagnostics.ActivityListener" /> コールバックのシグネチャを定義するデリゲート。</summary>
      <param name="options">アクティビティ オブジェクトの作成の有無を決定するために <see cref="T:System.Diagnostics.ActivityListener" /> コールバックによって使用されるアクティビティ作成オプション。</param>
      <typeparam name="T">アクティビティオブジェクトを作成するために要求された親の型。 文字列またはインスタンスのいずれかである必要があり <see cref="T:System.Diagnostics.ActivityContext" /> ます。</typeparam>
      <returns>サンプリング結果を含むオブジェクトであり、関連する <see cref="T:System.Diagnostics.Activity" /> について収集するデータの量を示します。</returns>
    </member>
  </members>
</doc>