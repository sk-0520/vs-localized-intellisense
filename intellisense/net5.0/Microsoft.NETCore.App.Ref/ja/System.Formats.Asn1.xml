<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Formats.Asn1</name>
  </assembly>
  <members>
    <member name="T:System.Formats.Asn1.Asn1Tag">
      <summary>この型は、ITU-T 推奨 X.680 で説明されているように、ASN.1 タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Boolean">
      <summary>ブール値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedBitString">
      <summary>構築されたエンコードでのビット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ConstructedOctetString">
      <summary>構築されたエンコードでのオクテット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Enumerated">
      <summary>列挙値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.GeneralizedTime">
      <summary>GeneralizedTime 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Integer">
      <summary>整数値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Null">
      <summary>
        <see langword="null" /> 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.ObjectIdentifier">
      <summary>オブジェクト識別子値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveBitString">
      <summary>プリミティブ エンコードでのビット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.PrimitiveOctetString">
      <summary>プリミティブ エンコードでのオクテット文字列値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.Sequence">
      <summary>シーケンス値のユニバーサル クラス タグ (常に構築されたエンコード) を表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.SetOf">
      <summary>SetOf 値のユニバーサル クラス タグ (常に構築されたエンコード) を表します。</summary>
    </member>
    <member name="F:System.Formats.Asn1.Asn1Tag.UtcTime">
      <summary>UtcTime 値のユニバーサル クラス タグを表します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.TagClass,System.Int32,System.Boolean)">
      <summary>指定したタグ クラス内で指定した値の <see cref="T:System.Formats.Asn1.Asn1Tag" /> を作成します。</summary>
      <param name="tagClass">このタグのタグ クラス。</param>
      <param name="tagValue">このタグの数値。</param>
      <param name="isConstructed">構築されたタグの場合は <see langword="true" />、プリミティブ タグの場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="tagClass" /> は既知の値ではありません。
-または- <paramref name="tagValue" /> が負の値です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.#ctor(System.Formats.Asn1.UniversalTagNumber,System.Boolean)">
      <summary>UNIVERSAL クラスからタグの <see cref="T:System.Formats.Asn1.Asn1Tag" /> を作成します。</summary>
      <param name="universalTagNumber">このタグのセマンティック型を指定する列挙値の 1 つ。</param>
      <param name="isConstructed">構築されたタグの場合は <see langword="true" />、プリミティブ タグの場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="universalTagNumber" /> は既知の値ではありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsConstructed">
      <summary>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="true" /> のタグを生成します。</summary>
      <returns>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="true" /> のタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.AsPrimitive">
      <summary>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="false" /> のタグを生成します。</summary>
      <returns>
        <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> と同じ値を持つが、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> が <see langword="false" /> のタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize">
      <summary>このタグの BER エンコードに必要なバイト数を報告します。</summary>
      <returns>このタグの BER エンコードに必要なバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Decode(System.ReadOnlySpan{System.Byte},System.Int32@)">
      <summary>
        <paramref name="source" /> で始まる、BER でエンコードされたタグを読み取ります。</summary>
      <param name="source">先頭が BER でエンコードされたタグである読み取り専用のバイト シーケンス。</param>
      <param name="bytesConsumed">このメソッドの戻り値には、エンコードされたタグに提供されたバイト数が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">指定されたデータはタグにデコードされません。</exception>
      <returns>デコードされたタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Encode(System.Span{System.Byte})">
      <summary>このタグの BER でエンコードされた形式を <paramref name="destination" /> に書き込みます。</summary>
      <param name="destination">エンコードされたタグの書き込み先の開始位置。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="destination" />.<see cref="P:System.Span`1.Length" /> &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />。</exception>
      <returns>
        <paramref name="destination" /> に書き込むバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)">
      <summary>
        <paramref name="other" /> がこのタグと同じエンコードを持っているかどうかをテストします。</summary>
      <param name="other">等しいかどうかをテストするためのタグ。</param>
      <returns>
        <paramref name="other" /> が <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" />、<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" />、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> の値と同じ場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.Equals(System.Object)">
      <summary>
        <paramref name="obj" /> がこのタグと同じエンコードを持つ <see cref="T:System.Formats.Asn1.Asn1Tag" /> かどうかをテストします。</summary>
      <param name="obj">値が等しいかどうかをテストするオブジェクト</param>
      <returns>
        <paramref name="obj" /> が <see cref="T:System.Formats.Asn1.Asn1Tag" /> ではない場合は <see langword="false" />、それ以外の場合は <see cref="M:System.Formats.Asn1.Asn1Tag.Equals(System.Formats.Asn1.Asn1Tag)" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.GetHashCode">
      <summary>このインスタンスのハッシュ コードを返します。</summary>
      <returns>32 ビット符号付き整数ハッシュ コード。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.HasSameClassAndValue(System.Formats.Asn1.Asn1Tag)">
      <summary>
        <paramref name="other" /> がこのタグと同じ <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> 値と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> 値を持っているかどうかをテストし、<see cref="P:System.Formats.Asn1.Asn1Tag.IsConstructed" /> は比較しません。</summary>
      <param name="other">概念が等しいかどうかをテストするためのタグ。</param>
      <returns>
        <paramref name="other" /> がこのタグと同じ <see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> と <see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> を持っている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Equality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>2 つの <see cref="T:System.Formats.Asn1.Asn1Tag" /> の値の BER エンコードが同じであるかどうかをテストします。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> の BER エンコードが同じである場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.op_Inequality(System.Formats.Asn1.Asn1Tag,System.Formats.Asn1.Asn1Tag)">
      <summary>2 つの <see cref="T:System.Formats.Asn1.Asn1Tag" /> の値の BER エンコードが異なっているかどうかをテストします。</summary>
      <param name="left">比較する最初の値です。</param>
      <param name="right">比較する 2 番目の値です。</param>
      <returns>
        <paramref name="left" /> と <paramref name="right" /> の BER エンコードが異なっている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.ToString">
      <summary>デバッグに適したこのタグのテキスト表現を指定します。</summary>
      <returns>デバッグに適したこのタグのテキスト表現。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryDecode(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.Asn1Tag@,System.Int32@)">
      <summary>
        <paramref name="source" /> で始まる、BER でエンコードされたタグの読み取りを試みます。</summary>
      <param name="source">先頭が BER でエンコードされたタグである読み取り専用のバイト シーケンス。</param>
      <param name="tag">デコードされたタグ。</param>
      <param name="bytesConsumed">このメソッドの戻り値には、エンコードされたタグに提供されたバイト数 (失敗した場合は 0) が含まれます。 このパラメーターは初期化前として処理されます。</param>
      <returns>タグが正しくデコードされた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.Asn1Tag.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>このタグの BER でエンコードされた形式の <paramref name="destination" /> への書き込みを試みます。</summary>
      <param name="destination">エンコードされたタグの書き込み先の開始位置。</param>
      <param name="bytesWritten">成功した場合は <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" /> から値を受け取り、失敗した場合は 0 を受け取ります。</param>
      <returns>
        <paramref name="destination" /> の場合は <see langword="false" />。<see cref="P:System.Span`1.Length" /> それ以外の場合は &lt; <see cref="M:System.Formats.Asn1.Asn1Tag.CalculateEncodedSize" />(), <see langword="true" />。</returns>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.IsConstructed">
      <summary>タグが構築されたエンコード (<see langword="true" />)、またはプリミティブ エンコード (<see langword="false" />) を表しているかどうかを示します。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagClass">
      <summary>このタグが属するタグ クラス。</summary>
    </member>
    <member name="P:System.Formats.Asn1.Asn1Tag.TagValue">
      <summary>このタグの数値。</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnContentException">
      <summary>エンコードされた ASN.1 値を正常にデコードできない場合にスローされる例外。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor">
      <summary>既定のメッセージを使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化したデータを使用して、<see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
      <param name="context">転送元または転送先に関するコンテキスト情報。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String)">
      <summary>提供されたメッセージを使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
    </member>
    <member name="M:System.Formats.Asn1.AsnContentException.#ctor(System.String,System.Exception)">
      <summary>この例外の原因となった、提供されたメッセージと例外を使用して <see cref="T:System.Formats.Asn1.AsnContentException" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="message">例外の原因を説明するエラー メッセージ。</param>
      <param name="inner">現在の例外の原因となった例外。</param>
    </member>
    <member name="T:System.Formats.Asn1.AsnDecoder">
      <summary>BER、CER、または DER でエンコードされた ASN.1 データをデコードするためのステートレス メソッドを提供します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを使用を持つ <paramref name="source" /> からビット文字列値を読み取り、新しい配列でコンテンツを返します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>ビット文字列値のコンテンツを含む配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadBoolean(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からブール値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadCharacterString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた文字列を返します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="encodingType">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、<paramref name="encodingType" /> と同じではありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@)">
      <summary>指定したエンコード規則を使用して、<paramref name="source" /> バッファーの先頭にあるエンコードされた値のコンテンツ範囲を検索します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">
        <paramref name="source" /> は、指定したエンコード規則に基づいてエンコードされた値を表していません。</exception>
      <returns>コンテンツを識別するタグ。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に従って、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、その内容をバッファーのスライスとして返します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>符号付きビッグ エンディアン形式の列挙値のバイトを格納しているバッファーのスライス。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、<paramref name="enumType" /> によって指定された非 [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="enumType">ターゲットの型を表す型オブジェクト。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="enumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> は列挙型ではありません。
-または- <paramref name="enumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="enumType" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="enumType" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="enumType" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadEnumeratedValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から列挙値を読み取り、<typeparamref name="TEnum" /> によって指定された非 [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum">ターゲット列挙型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> は列挙型ではありません。
-または- <typeparamref name="TEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <typeparamref name="TEnum" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadGeneralizedTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から GeneralizedTime 値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadInteger(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から整数値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた数値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadIntegerBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に従って、指定したタグを持つ <paramref name="source" /> から整数値を読み取り、その内容をバッファーのスライスとして返します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>符号付きビッグ エンディアン形式の整数値のバイトを格納しているバッファーのスライス。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitList(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>エンコードされた値からのビット。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Type,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取り、<paramref name="flagsEnumType" /> によって指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="flagsEnumType">ターゲットの型を表す型オブジェクト。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="flagsEnumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> は列挙型ではありません。
-または- <paramref name="flagsEnumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> が <see langword="null" /> である</exception>
      <returns>
        <paramref name="flagsEnumType" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNamedBitListValue``1(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から NamedBitList を読み取り、<typeparamref name="TFlagsEnum" /> によって指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <typeparam name="TFlagsEnum">ターゲット列挙型</typeparam>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TFlagsEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> は列挙型ではありません。
-または- <typeparamref name="TFlagsEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <typeparamref name="TFlagsEnum" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadNull(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から <see langword="null" /> 値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadObjectIdentifier(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からオブジェクト識別子値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>ドットで区切られた 10 進表記のデコードされたオブジェクト識別子。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを使用を持つ <paramref name="source" /> からオクテット文字列値を読み取り、新しい配列でコンテンツを返します。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>オクテット文字列値のコンテンツを含む配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSequence(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から Sequence または Sequence-Of 値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadSetOf(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から Set-Of 値を読み取ります。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="contentOffset">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="skipSortOrderValidation">表示されている順序でデータを常に受け入れる場合は <see langword="true" />、エンコード規則によって並べ替えが必要なときに、データが正しく並べ替えられていることを確認するには <see langword="false" /> (CER および DER)。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.ReadUtcTime(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から UtcTime 値の読み取りを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="twoDigitYearMax">この値で表される最大の年。
既定値の 2049 は、X.509 証明書の 1950-2049 の範囲を表しています。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="twoDigitYearMax" /> が [99, 9999] の範囲内にありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadBitString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から <paramref name="destination" /> にビット文字列値のコピーを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns>
        <paramref name="destination" /> がビット文字列の値を受け取るのに十分な大きさの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterString(System.ReadOnlySpan{System.Byte},System.Span{System.Char},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から文字列を読み取り、指定した対象のバッファーにデコードされた文字列をコピーします。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="encodingType">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="charsWritten">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた文字数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。
-または- <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、<paramref name="encodingType" /> と同じではありません。</exception>
      <returns>
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.Int32@,System.Int32@)">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から文字列を読み取り、指定した対象のバッファーに未処理バイトのコピーを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns>
        <paramref name="destination" /> が未処理の文字列値を受け取るのに十分な大きさの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadEncodedValue(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>指定したエンコード規則を使用して、<paramref name="source" /> バッファーの先頭にあるエンコードされた値のコンテンツ範囲の検索を試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="tag">このメソッドから制御が戻るときに、コンテンツを識別するタグ。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentOffset">このメソッドから制御が戻るときの、<paramref name="source" /> の開始を基準とするコンテンツ ペイロードのオフセット。
このパラメーターは初期化前として処理されます。</param>
      <param name="contentLength">このメソッドから制御が戻るときの、コンテンツ ペイロードのバイト数 (0 の場合もあります)。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <returns>
        <paramref name="source" /> が指定したエンコード規則で有効な構造のエンコードを表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号付き 32 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="value">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>整数値が <see cref="F:System.Int32.MinValue" /> 以上 <see cref="F:System.Int32.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号付き 64 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="value">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>整数値が <see cref="F:System.Int64.MinValue" /> 以上 <see cref="F:System.Int64.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadOctetString(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からオクテット文字列値を取得し、指定した対象のバッファーに値のコピーを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesWritten">このメソッドから制御が戻るときに、<paramref name="destination" /> に書き込まれた合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="destination" /> が <paramref name="source" /> と重なっています。</exception>
      <returns>
        <paramref name="destination" /> がオクテット文字列の値を受け取ることができる大きさである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveBitString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Int32@,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>ビット文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="value">成功すると、ビット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>ビット文字列値にプリミティブ エンコードがあり、未使用として報告されたすべてのビットが 0 に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveCharacterStringBytes(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.Asn1Tag,System.ReadOnlySpan{System.Byte}@,System.Int32@)">
      <summary>未処理の文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <param name="value">成功すると、ビット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns>文字列値にプリミティブ エンコードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadPrimitiveOctetString(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.ReadOnlySpan{System.Byte}@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>オクテット文字列値が 1 つの (プリミティブ) エンコードに含まれている場合は、指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> からその値の取得を試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="value">成功すると、オクテット文字列の値に対応する入力バッファーのスライスを受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>オクテット文字列値にプリミティブ エンコードがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt32(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号なし 32 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="value">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>整数値が <see cref="F:System.UInt32.MinValue" /> 以上 <see cref="F:System.UInt32.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnDecoder.TryReadUInt64(System.ReadOnlySpan{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.UInt64@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したエンコード規則に基づいて、指定したタグを持つ <paramref name="source" /> から、符号なし 64 ビット値として整数値の読み取りを試みます。</summary>
      <param name="source">エンコードされたデータを含むバッファー。</param>
      <param name="ruleSet">データを解釈するときに使用するエンコード制約。</param>
      <param name="value">成功すると、解釈された数値を受け取ります。
このパラメーターは初期化前として処理されます。</param>
      <param name="bytesConsumed">このメソッドから制御が戻るときに、エンコードされた値の合計バイト数。
このパラメーターは初期化前として処理されます。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>整数値が <see cref="F:System.UInt64.MinValue" /> 以上 <see cref="F:System.UInt64.MaxValue" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnEncodingRules">
      <summary>
        <see cref="T:System.Formats.Asn1.AsnReader" /> または <see cref="T:System.Formats.Asn1.AsnWriter" /> のエンコード規則セットです。</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.BER">
      <summary>ITU-T X.690 の基本エンコード規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.CER">
      <summary>ITU-T X.690 の正規エンコード規則</summary>
    </member>
    <member name="F:System.Formats.Asn1.AsnEncodingRules.DER">
      <summary>ITU-T X.690 Distinguished Encoding Rules</summary>
    </member>
    <member name="T:System.Formats.Asn1.AsnReader">
      <summary>BER、CER、または DER でエンコードされた ASN.1 データのステートフルな順方向専用のリーダー。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.#ctor(System.ReadOnlyMemory{System.Byte},System.Formats.Asn1.AsnEncodingRules,System.Formats.Asn1.AsnReaderOptions)">
      <summary>指定されたルールセットを使用して <paramref name="data" /> の上に <see cref="T:System.Formats.Asn1.AsnReader" /> を構築します。</summary>
      <param name="data">読み取るデータ。</param>
      <param name="ruleSet">リーダーのエンコード制約。</param>
      <param name="options">リーダーの追加オプション。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekContentBytes">
      <summary>リーダーを前進させることなく、次のエンコードされた値のコンテンツ オクテット (バイト) の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得します。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">現在のエンコード規則では、タグまたは長さが無効なポイントにリーダーが配置されています。</exception>
      <returns>次のエンコードされた値のコンテンツ オクテットのバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekEncodedValue">
      <summary>リーダーを前進させることなく、次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得します。 不定長エンコードの場合、これには End of Contents マーカーが含まれます。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">現在のエンコード規則では、リーダーはタグまたは長さが無効なポイントに配置されます。</exception>
      <returns>次にエンコードされた値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.PeekTag">
      <summary>リーダーを前進させることなく、次のデータ位置でエンコードされたタグを読み取ります。</summary>
      <exception cref="T:System.Formats.Asn1.AsnContentException">リーダーの現在位置でタグをデコードできませんでした。</exception>
      <returns>デコードされたタグ値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBitString(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ BIT STRING として次の値を読み取り、値をバイト配列で返します。</summary>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>新しく割り当てられた、厳密にサイズ指定された配列の値のコピー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadBoolean(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つブール値として次の値を読み取ります。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadCharacterString(System.Formats.Asn1.UniversalTagNumber,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた値を文字列として返します。</summary>
      <param name="encodingType">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="expectedTag">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は <paramref name="encodingType" /> と同じではありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEncodedValue">
      <summary>次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビューを取得し、それを越えてリーダーを進めます。 不定長エンコードの場合、これには End of Contents マーカーが含まれます。</summary>
      <returns>次にエンコードされた値の <see cref="T:System.ReadOnlyMemory`1" /> ビュー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ列挙型として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>符号付きビッグ エンディアン形式の列挙値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ列挙型として次の値を読み取り、<paramref name="enumType" /> で指定された non-[<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="enumType">ターゲットの型を表す型オブジェクト。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="enumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enumType" /> は列挙型ではありません。
-または- <paramref name="enumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="enumType" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="enumType" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="enumType" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="enumType" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadEnumeratedValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ列挙型として次の値を読み取り、<typeparamref name="TEnum" /> で指定された non-[<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum">ターゲット列挙型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TEnum" /> は列挙型ではありません。
-または- <typeparamref name="TEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されました。
-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <typeparamref name="TEnum" /> に変換された列挙値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadGeneralizedTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ GeneralizedTime として次の値を読み取ります。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadInteger(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ整数として次の値を読み取ります。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadIntegerBytes(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ整数として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>符号付きビッグ エンディアン形式の整数値のバイト。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitList(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ NamedBitList として次の値を読み取ります。</summary>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>エンコードされた値からのビット。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue(System.Type,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ NamedBitList として次の値を読み取り、<paramref name="flagsEnumType" /> で指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="flagsEnumType">ターゲットの型を表す型オブジェクト。</param>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <paramref name="flagsEnumType" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="flagsEnumType" /> は列挙型ではありません。
-または- <paramref name="flagsEnumType" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="flagsEnumType" /> が <see langword="null" /> である</exception>
      <returns>
        <paramref name="flagsEnumType" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNamedBitListValue``1(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ NamedBitList として次の値を読み取り、<typeparamref name="TFlagsEnum" /> で指定された [<see cref="T:System.FlagsAttribute" />] 列挙型に変換します。</summary>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <typeparam name="TFlagsEnum">ターゲット列挙型</typeparam>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- エンコードされた値が大きすぎて <typeparamref name="TFlagsEnum" /> 値に収まりません。</exception>
      <exception cref="T:System.ArgumentException">
        <typeparamref name="TFlagsEnum" /> は列挙型ではありません。
-または- <typeparamref name="TFlagsEnum" /> が <see cref="T:System.FlagsAttribute" /> で宣言されていません。-または- <paramref name="expectedTag" />。<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <typeparamref name="TFlagsEnum" /> に変換された NamedBitList 値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ NULL として次の値を読み取ります。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadObjectIdentifier(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ OBJECT IDENTIFIER として次の値を読み取り、ドット付き 10 進形式の文字列で値を返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>ドット付き 10 進形式文字列でのオブジェクト識別子の値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>タグ UNIVERSAL 4 を使用して、OCTET STRING として次の値を読み取り、値をバイト配列で返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>新しく割り当てられた、厳密にサイズ指定された配列の値のコピー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ SEQUENCE または SEQUENCE-OF として次の値を読み取り、その結果をシーケンスの最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) に配置された新しいリーダーとして返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>シーケンスの最初の値に (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) 配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ SET-OF として次の値を読み取り、その結果を set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" />) に配置された新しいリーダーとして返します。</summary>
      <param name="skipSortOrderValidation">表示されている順序でデータを常に受け入れる場合は <see langword="true" />、エンコード規則によって並べ替えが必要なときに、データが正しく並べ替えられていることを確認するには <see langword="false" /> (CER および DER)。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ SET-OF として次の値を読み取り、コンストラクターの <see cref="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification" /> 値 (既定値は <see langword="false" />) を使用して、set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダーとして結果を返します。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>set-of の最初の値 (または <see cref="P:System.Formats.Asn1.AsnReader.HasData" /> == <see langword="false" /> を使用して) に配置された新しいリーダー。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ UTCTime として次の値を読み取ります。</summary>
      <param name="twoDigitYearMax">この値で表される最大の年。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ReadUtcTime(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>コンストラクターに渡されたオプションの <see cref="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax" /> 値を使用して、指定したタグを持つ UTCTime として次の値を読み取ります (既定値は 2049)。</summary>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>デコードされた値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.ThrowIfNotEmpty">
      <summary>リーダーに残りのデータがある場合は標準化された <see cref="T:System.Formats.Asn1.AsnContentException" /> をスローし、<see cref="P:System.Formats.Asn1.AsnReader.HasData" /> が <see langword="false" /> を返す場合は、関数を実行しません。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadBitString(System.Span{System.Byte},System.Int32@,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ BIT STRING として次の値を読み取り、指定されたコピー先のバッファーに値をコピーします。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="bytesWritten">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> はリーダーを進め、そうでない場合は、<see langword="false" /> とリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterString(System.Span{System.Char},System.Formats.Asn1.UniversalTagNumber,System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグとエンコードの種類を持つ文字列として次の値を読み取り、デコードされた値を指定したコピー先のバッファーにコピーします。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="encodingType">処理する値の型を表す列挙値の 1 つ。</param>
      <param name="charsWritten">成功すると、<paramref name="destination" /> に書き込まれた文字数を受け取ります。</param>
      <param name="expectedTag">読み取る前に確認するタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> は既知の文字列型ではありません。</exception>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。
-または- 文字列が正常にデコードされませんでした。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は <paramref name="encodingType" /> と同じではありません。</exception>
      <returns>
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadCharacterStringBytes(System.Span{System.Byte},System.Formats.Asn1.Asn1Tag,System.Int32@)">
      <summary>指定したタグを持つ文字列として次の値を読み取り、未処理のバイトを指定したコピー先のバッファーにコピーします。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <param name="bytesWritten">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns>
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt32(System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>次の値を、指定したタグを持つ整数として、符号付き 32 ビット値として読み取ろうとします。</summary>
      <param name="value">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>値が <see cref="F:System.Int32.MinValue" /> と <see cref="F:System.Int32.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadInt64(System.Int64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>次の値を、指定したタグを持つ整数として、符号付き 64 ビット値として読み取ろうとします。</summary>
      <param name="value">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>値が <see cref="F:System.Int64.MinValue" /> と <see cref="F:System.Int64.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadOctetString(System.Span{System.Byte},System.Int32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ OCTET STRING として次の値を読み取り、指定されたコピー先のバッファーに値をコピーします。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="bytesWritten">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <paramref name="destination" /> に値を受け取るのに十分な長さがある場合は、<see langword="true" /> でリーダーを進め、そうでない場合は、<see langword="false" /> でリーダーは進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveBitString(System.Int32@,System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ BIT STRING として次の値を読み取り、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="unusedBitCount">成功すると、ライターによって "未使用" として報告された最後のバイトのビット数を受け取ります。</param>
      <param name="value">成功すると、BIT STRING の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>BIT STRING 値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveCharacterStringBytes(System.Formats.Asn1.Asn1Tag,System.ReadOnlyMemory{System.Byte}@)">
      <summary>指定したタグを持つ文字として次の値を読み取り、元のデータの内容を未処理の <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <param name="contents">成功すると、文字列の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は文字列型のタグではありません。</exception>
      <returns>文字列値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadPrimitiveOctetString(System.ReadOnlyMemory{System.Byte}@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定したタグを持つ OCTET STRING として次の値を読み取ろうとし、元のデータの内容を <see cref="T:System.ReadOnlyMemory`1" /> として返します。</summary>
      <param name="contents">成功すると、OCTET STRING の値に対応する元のデータに対して <see cref="T:System.ReadOnlyMemory`1" /> を受け取ります。</param>
      <param name="expectedTag">読み取る前に確認するタグ。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>OCTET STRING 値にプリミティブ エンコードが含まれている場合は、<see langword="true" /> でリーダーを進め、構築されたエンコードがある場合は <see langword="false" /> でリーダーを進めません。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt32(System.UInt32@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>次の値を、指定したタグを持つ整数として、符号なし 32 ビット値として読み取ろうとします。</summary>
      <param name="value">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>値が <see cref="F:System.UInt32.MinValue" /> と <see cref="F:System.UInt32.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnReader.TryReadUInt64(System.UInt64@,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>次の値を、指定したタグを持つ整数として、符号なし 64 ビット値として読み取ろうとします。</summary>
      <param name="value">成功した場合は、デコードされた値を受け取ります。</param>
      <param name="expectedTag">読み取る前にチェックするタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.Formats.Asn1.AsnContentException">次の値には、正しいタグがありません。
-または- 現在のエンコード規則では、長さのエンコードが無効です。
-または- 現在のエンコード規則では、コンテンツが有効ではありません。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="expectedTag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="expectedTag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>値が <see cref="F:System.UInt64.MinValue" /> と <see cref="F:System.UInt64.MaxValue" /> の間にない場合、<see langword="false" /> でリーダーを進めません。それ以外の場合は <see langword="true" /> が返され、リーダーが進みます。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.HasData">
      <summary>リーダーが処理可能な残りのデータを持っているかどうかの指標を取得します。</summary>
      <returns>
        <see langword="true" /> リーダーが処理するデータが他にもある場合は、それ以外の場合は <see langword="false" /> 。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReader.RuleSet">
      <summary>このリーダーによって使用されているエンコード規則を取得します。</summary>
      <returns>このリーダーによって使用されているエンコーディング規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnReaderOptions">
      <summary>
        <see cref="T:System.Formats.Asn1.AsnReader" /> の動作を変更するオプションを指定します。</summary>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.SkipSetSortOrderVerification">
      <summary>リーダーが Set 値または Set-Of 値の並べ替え順序をバイパスする必要があるかどうかを示す値を取得または設定します。</summary>
      <returns>
        <see langword="true" /> 現在のエンコーディング規則に対してセットまたはセットの値が正しく並べ替えられていることをリーダーが検証しない場合は。それ以外の場合は <see langword="false" /> 。
既定値は、<see langword="false" /> です。</returns>
    </member>
    <member name="P:System.Formats.Asn1.AsnReaderOptions.UtcTimeTwoDigitYearMax">
      <summary>UtcTime 値で表される最大の年を取得または設定します。</summary>
      <returns>UtcTime 値で表される最大の年。 既定値は2049です。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter">
      <summary>BER、CER、および DER でエンコードされた ASN.1 データのライター。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.#ctor(System.Formats.Asn1.AsnEncodingRules)">
      <summary>指定されたエンコード規則のセットを使用して、新しい <see cref="T:System.Formats.Asn1.AsnWriter" /> を作成します。</summary>
      <param name="ruleSet">ライターのエンコード制約。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="ruleSet" /> が定義されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.CopyTo(System.Formats.Asn1.AsnWriter)">
      <summary>このライターの値を別のライターにコピーします。</summary>
      <param name="destination">値を受け取るライター。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destination" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。
-または- このライターは空です。
-または- このライターは複数の最上位の値を表します。
-または- このライターの値は、コピー先のライターのルールセットと互換性のない方法でエンコードされています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode">
      <summary>エンコードされた値を含む新しい配列を返します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns>エンコードされた値を含む正確にサイズ指定された配列。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Encode(System.Span{System.Byte})">
      <summary>データのエンコードされた表現を <paramref name="destination" /> に書き込みます。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns>
        <paramref name="destination" /> に書き込むバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.Formats.Asn1.AsnWriter)">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> が <paramref name="other" /> と同じ出力を生成するかどうかを判断します。</summary>
      <param name="other">エンコードされた値と比較するインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns>保留中のエンコードされたデータが <paramref name="other" /> と同一である場合は <see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.EncodedValueEquals(System.ReadOnlySpan{System.Byte})">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.Encode" /> が <paramref name="other" /> と同じ出力を生成するかどうかを判断します。</summary>
      <param name="other">比較対象のエンコードされた値。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns>保留中のエンコードされたデータが <paramref name="other" /> と同一である場合は <see langword="true" />、それ以外の場合は<see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.GetEncodedLength">
      <summary>
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> によって書き込まれるバイト数を取得します。</summary>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、<see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" />、または <see cref="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> が、対応する Pop メソッドなしで呼び出されました。</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)" /> によって書き込まれるバイト数。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>タグ UNIVERSAL 4 を持つオープン オクテット文字列が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException">ライターは、現在、指定されたタグを持つオクテット文字列内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオープン シーケンス文字列が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException">ライターは、現在、指定されたタグを持つシーケンス内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオープン Set-Of が閉じていることを示し、ライターが親コンテキストに返されます。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.InvalidOperationException">ライターは、現在、指定されたタグを持つ Set-Of 内に配置されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオクテット文字列値の書き込みを開始します。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopOctetString(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つシーケンスの書き込みを開始します。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 16) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ Set-Of の書き込みを開始します。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 17) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <returns>
        <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を自動的に呼び出す、破棄可能な値。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Reset">
      <summary>リソースを解放せずに、ライターをリセットしてデータを含めないようにします。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.TryEncode(System.Span{System.Byte},System.Int32@)">
      <summary>データのエンコードされた表現の <paramref name="destination" /> への書き込みを試みます。</summary>
      <param name="destination">書き込み先のバッファー。</param>
      <param name="bytesWritten">成功すると、<paramref name="destination" /> に書き込まれたバイト数を受け取ります。</param>
      <exception cref="T:System.InvalidOperationException">
        <see cref="M:System.Formats.Asn1.AsnWriter.PushSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PushSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> は、<see cref="M:System.Formats.Asn1.AsnWriter.PopSequence(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> または <see cref="M:System.Formats.Asn1.AsnWriter.PopSetOf(System.Nullable{System.Formats.Asn1.Asn1Tag})" /> を介して閉じられていません。</exception>
      <returns>エンコードが成功した場合は <see langword="true" />、<paramref name="destination" /> が小さすぎる場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBitString(System.ReadOnlySpan{System.Byte},System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つビット文字列値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="unusedBitCount">セマンティックではない末尾のビットの数。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> の長さが 0 で <paramref name="unusedBitCount" /> が 0 ではありません。-または- <paramref name="value" /> が空ではなく、<paramref name="unusedBitCount" /> で識別されるビットのいずれかが設定されています。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="unusedBitCount" /> が [0,7] の範囲内にありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteBoolean(System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つブール値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 1) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>エンコードの種類に対応する指定されたタグを使用して、指定されたエンコードの種類を使用して、指定された文字列を書き込みます。</summary>
      <param name="encodingType">使用するエンコードを表す列挙値の 1 つ。</param>
      <param name="str">書き込む文字列。</param>
      <param name="tag">書き込むタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> は、制限された文字列のエンコードの種類ではありません。
-または- <paramref name="encodingType" /> は、このメソッドで現在サポートされていない制限付き文字文字列のエンコードの種類です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteCharacterString(System.Formats.Asn1.UniversalTagNumber,System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>エンコードの種類に対応する指定されたタグを使用して、指定されたエンコードの種類を使用して、指定された文字列を書き込みます。</summary>
      <param name="encodingType">使用するエンコードを表す列挙値の 1 つ。</param>
      <param name="value">書き込む文字列。</param>
      <param name="tag">書き込むタグ、または要求されたエンコードの種類に適したユニバーサル タグの場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" /> である</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="encodingType" /> は、制限された文字列のエンコードの種類ではありません。
-または- <paramref name="encodingType" /> は、このメソッドで現在サポートされていない制限付き文字文字列のエンコードの種類です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEncodedValue(System.ReadOnlySpan{System.Byte})">
      <summary>既にエンコードされている単一の値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> は現在のエンコード規則で読み取れませんでした。
-または- <paramref name="value" /> に最初の値の末尾を越えたデータがあります。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>タグ UNIVERSAL 10 を持つ列挙型として non-[<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value">書き込むボックス化された列挙値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> はボックス化された列挙値ではありません。
-または- <paramref name="value" /> のボックス化解除された型が [<see cref="T:System.FlagsAttribute" />] で宣言されています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteEnumeratedValue``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>タグ UNIVERSAL 10 を持つ列挙型として non-[<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value">書き込むボックス化された列挙値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 10) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum">書き込む非 [ <see cref="T:System.FlagsAttribute" /> ] 列挙型。</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <typeparamref name="TEnum" /> が列挙型ではありません。
-または- <typeparamref name="TEnum" /> が [<see cref="T:System.FlagsAttribute" />] で宣言されています。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteGeneralizedTime(System.DateTimeOffset,System.Boolean,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定した UNIVERSAL 24 を使用して、指定された <see cref="T:System.DateTimeOffset" /> を GeneralizedTime として書き込みます。秒の小数部は任意で除外できます。</summary>
      <param name="value">書き込む値。</param>
      <param name="omitFractionalSeconds">0 以外の値が存在する場合でも、<paramref name="value" /> の秒の小数部を 0 として扱う場合は <see langword="true" />。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 24) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Int64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.Numerics.BigInteger,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value">符号付きビッグエンディアン バイト順で書き込まれる整数値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentException">最上位の 9 ビットがすべて設定されています。
-または- 最上位の 9 ビットがすべて未設定です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteInteger(System.UInt64,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteIntegerUnsigned(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ整数値を書き込みます。</summary>
      <param name="value">符号なしビッグエンディアン バイト順で書き込まれる整数値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 2) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentException">最上位の 9 ビットがすべて未設定です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Collections.BitArray,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ NamedBitList としてビット配列値を書き込みます。</summary>
      <param name="value">書き込むビット</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList(System.Enum,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ NamedBitList として [<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value">書き込むボックス化された列挙値</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="value" /> はボックス化された列挙値ではありません。
-または- <paramref name="value" /> のボックス化解除された型が [<see cref="T:System.FlagsAttribute" />] で宣言されていません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNamedBitList``1(``0,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ NamedBitList として [<see cref="T:System.FlagsAttribute" />] 列挙値を書き込みます。</summary>
      <param name="value">書き込む列挙値</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 3) の場合は <see langword="null" />。</param>
      <typeparam name="TEnum">書き込む [ <see cref="T:System.FlagsAttribute" /> ] 列挙型。</typeparam>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <typeparamref name="TEnum" /> が列挙値ではありません。
-または- <typeparamref name="TEnum" /> が [<see cref="T:System.FlagsAttribute" />] で宣言されていません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteNull(System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つ NULL を書き込みます。</summary>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 5) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.ReadOnlySpan{System.Char},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオブジェクト識別子を書き込みます。</summary>
      <param name="oidValue">書き込むオブジェクト識別子。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="oidValue" /> が有効なドット形式 10 進オブジェクト識別子ではありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteObjectIdentifier(System.String,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオブジェクト識別子を書き込みます。</summary>
      <param name="oidValue">書き込むオブジェクト識別子。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 6) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。
-または- <paramref name="oidValue" /> が有効なドット形式 10 進オブジェクト識別子ではありません。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="oidValue" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteOctetString(System.ReadOnlySpan{System.Byte},System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定されたタグを持つオクテット文字列値を書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 4) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Int32,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>年が許容範囲内にある場合は、指定された値を、指定したタグを持つ UTCTime として書き込みます。</summary>
      <param name="value">書き込む値。</param>
      <param name="twoDigitYearMax">UTC に変換後の、<paramref name="value" /> の最大有効年。
X.509 Time.utcTime 範囲 1950-2049 の場合は、<c>2049</c> を渡します。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" />.<see cref="P:System.DateTimeOffset.Year" /> (UTC への変換後) は、(<paramref name="twoDigitYearMax" /> - 100, <paramref name="twoDigitYearMax" />] の範囲内にありません。</exception>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.WriteUtcTime(System.DateTimeOffset,System.Nullable{System.Formats.Asn1.Asn1Tag})">
      <summary>指定された値を、指定したタグを持つ UTCTime として書き込みます。2 桁の年はコンテキストで有効として受け入れられます。</summary>
      <param name="value">書き込む値。</param>
      <param name="tag">書き込むタグ、または既定のタグ (Universal 23) の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="tag" />.<see cref="P:System.Formats.Asn1.Asn1Tag.TagClass" /> は <see cref="F:System.Formats.Asn1.TagClass.Universal" /> ですが、<paramref name="tag" /> です。<see cref="P:System.Formats.Asn1.Asn1Tag.TagValue" /> は、メソッドに対して正しくありません。</exception>
    </member>
    <member name="P:System.Formats.Asn1.AsnWriter.RuleSet">
      <summary>このライターによって使用されているエンコード規則を取得します。</summary>
      <returns>このライターによって使用されているエンコーディング規則。</returns>
    </member>
    <member name="T:System.Formats.Asn1.AsnWriter.Scope">
      <summary>論理スコープとして構文のスコープを使用して、開かれているタグを安全に閉じるための <see cref="T:System.IDisposable" /> ターゲットを提供します。</summary>
    </member>
    <member name="M:System.Formats.Asn1.AsnWriter.Scope.Dispose">
      <summary>アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="T:System.Formats.Asn1.TagClass">
      <summary>特定の ASN.1 タグのタグ クラス。</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Application">
      <summary>アプリケーション タグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.ContextSpecific">
      <summary>コンテキスト固有のタグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Private">
      <summary>プライベート タグ クラス</summary>
    </member>
    <member name="F:System.Formats.Asn1.TagClass.Universal">
      <summary>ユニバーサル タグ クラス</summary>
    </member>
    <member name="T:System.Formats.Asn1.UniversalTagNumber">
      <summary>ITU-T X.680 のユニバーサル クラスのタグ割り当てです。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BitString">
      <summary>BitString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.BMPString">
      <summary>BMPString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Boolean">
      <summary>Boolean を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Date">
      <summary>Date を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.DateTime">
      <summary>Date-Time を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Duration">
      <summary>Duration を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Embedded">
      <summary>Embedded-PDV を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.EndOfContents">
      <summary>不確定長エンコードでの End-of-Contents マーカーの予約済み識別子。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Enumerated">
      <summary>Enumerated を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.External">
      <summary>External を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralizedTime">
      <summary>GeneralizedTime を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GeneralString">
      <summary>GeneralString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.GraphicString">
      <summary>GraphicString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.IA5String">
      <summary>IA5String を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.InstanceOf">
      <summary>Instance-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Integer">
      <summary>Integer を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ISO646String">
      <summary>ISO646String (VisibleString) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Null">
      <summary>Null を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.NumericString">
      <summary>NumericString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectDescriptor">
      <summary>ObjectDescriptor を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifier">
      <summary>ObjectIdentifier を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.ObjectIdentifierIRI">
      <summary>ObjectIdentifier IRI (Internationalized Resource Identifier) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.OctetString">
      <summary>OctetString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.PrintableString">
      <summary>PrintableString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Real">
      <summary>Real を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifier">
      <summary>RelativeObjectIdentifier を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.RelativeObjectIdentifierIRI">
      <summary>RelativeObjectIdentifier IRI (Internationalized Resource Identifier) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Sequence">
      <summary>Sequence を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SequenceOf">
      <summary>Sequence-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Set">
      <summary>Set を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.SetOf">
      <summary>Set-Of を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.T61String">
      <summary>T61String (TeletexString) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TeletexString">
      <summary>TeletexString (T61String) を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.Time">
      <summary>Time を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.TimeOfDay">
      <summary>Time-Of-Day を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UniversalString">
      <summary>UniversalString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UnrestrictedCharacterString">
      <summary>無制限の文字列を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UtcTime">
      <summary>UTCTime を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.UTF8String">
      <summary>UTF8String を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VideotexString">
      <summary>VideotexString を表すユニバーサル クラスのタグ値。</summary>
    </member>
    <member name="F:System.Formats.Asn1.UniversalTagNumber.VisibleString">
      <summary>VisibleString (ISO646String) を表すユニバーサル クラスのタグ値。</summary>
    </member>
  </members>
</doc>