<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Runtime.Serialization.Xml</name>
  </assembly>
  <members>
    <member name="T:System.Runtime.Serialization.DataContractResolver">
      <summary>シリアル化および逆シリアル化の際に型と <see langword="xsi:type" /> 表現との間の動的なマッピングを行う機構を提供します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.ResolveName(System.String,System.String,System.Type,System.Runtime.Serialization.DataContractResolver)">
      <summary>このメソッドをオーバーライドして、逆シリアル化中に指定された <see langword="xsi:type" /> 名と名前空間をデータ コントラクト型にマップします。</summary>
      <param name="typeName">マップする <see langword="xsi:type" /> 名。</param>
      <param name="typeNamespace">マップする <see langword="xsi:type" /> の名前空間。</param>
      <param name="declaredType">データ コントラクト内で宣言された型。</param>
      <param name="knownTypeResolver">既知の型リゾルバー。</param>
      <returns>
        <see langword="xsi:type" /> 名および名前空間のマップ先の型。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractResolver.TryResolveType(System.Type,System.Type,System.Runtime.Serialization.DataContractResolver,System.Xml.XmlDictionaryString@,System.Xml.XmlDictionaryString@)">
      <summary>このメソッドをオーバーライドして、シリアル化中にデータ コントラクト型を <see langword="xsi:type" /> 名と名前空間にマップします。</summary>
      <param name="type">マップする型。</param>
      <param name="declaredType">データ コントラクト内で宣言された型。</param>
      <param name="knownTypeResolver">既知の型リゾルバー。</param>
      <param name="typeName">xsi:type の名前。</param>
      <param name="typeNamespace">xsi:type の名前空間。</param>
      <returns>マッピングが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializer">
      <summary>ある型のインスタンスを、提供されたデータ コントラクトを使用して、XML ストリームまたはドキュメントにシリアル化または逆シリアル化します。 このクラスは継承できません。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトと、オブジェクト グラフ内に存在可能な既知の型のコレクションをシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Runtime.Serialization.DataContractSerializerSettings)">
      <summary>指定した型と設定をシリアル化または逆シリアル化する <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="type">シリアル化または逆シリアル化するインスタンスの型。</param>
      <param name="settings">シリアライザーの設定。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、指定した XML ルート要素と名前空間を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前。</param>
      <param name="rootNamespace">シリアル化または逆シリアル化するコンテンツを囲む XML 要素の名前空間。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.String,System.String,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。 このメソッドは、さらに、XML ルート要素と名前空間を示す 2 つの文字列パラメーターと、オブジェクト グラフ内に存在可能な既知の型のリストを指定します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">コンテンツのルート要素名。</param>
      <param name="rootNamespace">ルート要素の名前空間。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトを、<see cref="T:System.Xml.XmlDictionaryString" /> のパラメーターを通して指定した XML ルート要素と名前空間を使用してシリアル化または逆シリアル化します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="rootNamespace">ルート要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスの新しいインスタンスを初期化し、指定した型のオブジェクトをシリアル化または逆シリアル化します。 このメソッドは、さらに、XML ルート要素と名前空間を示す 2 つの <see cref="T:System.Xml.XmlDictionaryString" /> パラメーターと、オブジェクト グラフ内に存在可能な既知の型のリストを指定します。</summary>
      <param name="type">シリアル化または逆シリアル化されるインスタンスの型。</param>
      <param name="rootName">コンテンツのルート要素名を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="rootNamespace">ルート要素の名前空間を含む <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="knownTypes">オブジェクト グラフ内に存在可能な既知の型を含む <see cref="T:System.Collections.Generic.IEnumerable`1" /> の <see cref="T:System.Type" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns>読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>逆シリアル化できるオブジェクトに <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを決定します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>読み取るストリームの開始要素にリーダーが配置されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、値を読み取る前にオブジェクト名の検証チェックを行うかどうかを指定します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName">コンストラクター内で提供されたルートの名前値にオブジェクトの名前が対応するかどうかをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="verifyObjectName" /> パラメーターが <see langword="true" /> に設定されており、要素名と名前空間がコンストラクター内の値と対応しません。</exception>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean,System.Runtime.Serialization.DataContractResolver)">
      <summary>XML ドキュメントまたはドキュメント ストリームを読み取り、逆シリアル化されたオブジェクトを返します。  メソッドには、オブジェクト名を検証するかどうかを指定するパラメーター、および実行時の <see langword="xsi:type" /> 宣言のマッピングに使用するリゾルバーが含まれます。</summary>
      <param name="reader">内容を読み取るために使用する XML リーダー。</param>
      <param name="verifyObjectName">オブジェクト名を確認する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="dataContractResolver">
        <see langword="xsi:type" /> 宣言をデータ コントラクト型にマップする <see cref="T:System.Runtime.Serialization.DataContractResolver" /> の実装。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、値を読み取る前にオブジェクト名の検証チェックを行うかどうかを指定します。</summary>
      <param name="reader">XML ストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName">コンストラクター内で提供されたルートの名前値にオブジェクトの名前が対応するかどうかをチェックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="verifyObjectName" /> パラメーターが <see langword="true" /> に設定されており、要素名と名前空間がコンストラクター内の値と対応しません。</exception>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
      <param name="writer">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の終了要素を書き込みます。</summary>
      <param name="writer">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object,System.Runtime.Serialization.DataContractResolver)">
      <summary>指定した XmlDictionaryWriter を使用して、すべてのオブジェクト データ (XML の開始要素、コンテンツ、外側の要素) を XML ドキュメントまたはストリームに書き込みます。 メソッドには、実行時の <see langword="xsi:type" /> 宣言のマッピングに使用するリゾルバーが含まれます。</summary>
      <param name="writer">コンテンツを XML ドキュメントまたはストリームに書き込むために使用する XmlDictionaryWriter。</param>
      <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
      <param name="dataContractResolver">
        <see langword="xsi:type" /> 宣言を既知のデータ コントラクトにマップするために使用される <see cref="T:System.Runtime.Serialization.DataContractResolver" /> の実装。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、すべてのオブジェクト データ (XML の開始要素、コンテンツ、終了要素) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
      <param name="writer">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">ストリームに書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML コンテンツを書き込みます。</summary>
      <param name="writer">ストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">ストリームに書き込むオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される型がデータ コントラクト規則に準拠していません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">書き込まれているインスタンスに問題があります。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
      <param name="writer">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、XML の開始要素を書き込みます。</summary>
      <param name="writer">XML 開始要素を書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むオブジェクト。</param>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.DataContractResolver">
      <summary>既知のコントラクト型に <see langword="xsi:type" /> 宣言を動的にマップするために使用するコンポーネントを取得します。</summary>
      <returns>
        <see cref="T:System.Runtime.Serialization.DataContractResolver" /> クラスの実装。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.IgnoreExtensionDataObject">
      <summary>クラスがシリアル化または逆シリアル化されるときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得します。</summary>
      <returns>拡張データを省略する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.KnownTypes">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> コンストラクターに既知の型として渡される、予測型を含む <see cref="T:System.Runtime.Serialization.DataContractSerializer" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph">
      <summary>シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得します。</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">項目数が最大値を超えています。</exception>
      <returns>シリアル化、または逆シリアル化する項目の最大数。 既定値は、<see cref="F:System.Int32.MaxValue" /> です。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences">
      <summary>オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用するかどうかを示す値を取得します。</summary>
      <returns>参照を保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializer.SerializeReadOnlyTypes">
      <summary>読み取り専用の型をシリアル化するかどうかを指定する値を取得します。</summary>
      <returns>読み取り専用の型がシリアル化される場合は <see langword="true" />。すべての型がシリアル化される場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerExtensions">
      <summary>
        <see cref="T:System.Runtime.Serialization.ISerializationSurrogateProvider" /> を設定および取得するメソッドを提供することで、<see cref="T:System.Runtime.Serialization.DataContractSerializer" /> クラスを拡張します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.GetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer)">
      <summary>このシリアライザーのサロゲート シリアル化プロバイダーを返します。</summary>
      <param name="serializer">サロゲートされているシリアライザー。</param>
      <returns>サロゲート シリアライザー。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerExtensions.SetSerializationSurrogateProvider(System.Runtime.Serialization.DataContractSerializer,System.Runtime.Serialization.ISerializationSurrogateProvider)">
      <summary>この <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> のサロゲート シリアル化プロバイダーを指定します。</summary>
      <param name="serializer">サロゲートされているシリアライザー。</param>
      <param name="provider">サロゲート シリアル化プロバイダー。</param>
    </member>
    <member name="T:System.Runtime.Serialization.DataContractSerializerSettings">
      <summary>データ コントラクト シリアライザーの設定を指定します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.DataContractSerializerSettings.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.DataContractSerializerSettings" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.DataContractResolver">
      <summary>既知のコントラクト型に xsi:type 宣言を動的にマップするのに使用するコンポーネントを取得または設定します。</summary>
      <returns>既知のコントラクト型に xsi:type 宣言を動的にマップするのに使用するコンポーネント。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.IgnoreExtensionDataObject">
      <summary>クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する値を取得または設定します。</summary>
      <returns>クラスがシリアル化または逆シリアル化されているときに、そのクラスの拡張により提供されるデータを無視するかどうかを指定する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.KnownTypes">
      <summary>DataContractSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクションを取得または設定します。</summary>
      <returns>DataContractSerializerSettings のこのインスタンスを使用してシリアル化されるオブジェクト グラフ内に存在可能な型のコレクション。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.MaxItemsInObjectGraph">
      <summary>シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数を取得または設定します。</summary>
      <returns>シリアル化または逆シリアル化するオブジェクト グラフ内の項目の最大数。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.PreserveObjectReferences">
      <summary>オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用するかどうかを示す値を取得または設定します。</summary>
      <returns>オブジェクトの参照データを保持するために非標準の XML コンストラクトを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootName">
      <summary>選択したオブジェクトのルート名を取得または設定します。</summary>
      <returns>選択されたオブジェクトのルート名。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.RootNamespace">
      <summary>指定したオブジェクトのルート名前空間を取得または設定します。</summary>
      <returns>指定されたオブジェクトのルート名前空間。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.DataContractSerializerSettings.SerializeReadOnlyTypes">
      <summary>読み取り専用の型をシリアル化するかどうかを指定する値を取得または設定します。</summary>
      <returns>読み取り専用の型をシリアル化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExportOptions">
      <summary>
        <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> に対して設定できるオプションを表します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.ExportOptions.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.ExportOptions" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.ExportOptions.KnownTypes">
      <summary>シリアル化または逆シリアル化の間に検出される可能性がある型のコレクションを取得します。</summary>
      <returns>シリアル化または逆シリアル化の間に検出される可能性がある型を含む <see langword="KnownTypes" /> コレクション。 このコレクションに指定されたすべての型の XML スキーマ表現が、<see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> によってエクスポートされます。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.ExtensionDataObject">
      <summary>新しいメンバーの追加によって拡張された、バージョン付きのデータ コントラクトのデータを格納します。</summary>
    </member>
    <member name="T:System.Runtime.Serialization.IExtensibleDataObject">
      <summary>
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> が <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性でマークされた型の逆シリアル化中に検出した追加データを格納するためのデータ構造体を提供します。</summary>
    </member>
    <member name="P:System.Runtime.Serialization.IExtensibleDataObject.ExtensionData">
      <summary>追加のデータを格納する構造体を取得または設定します。</summary>
      <returns>データ コントラクトの一部としては認識されないデータを含んだ <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> です。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XmlObjectSerializer">
      <summary>オブジェクトを XML ストリームまたはドキュメントとしてシリアル化するために使用する基本クラスを用意します。 このクラスは抽象クラスです。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
      <summary>読み取り可能な XML 要素に <see cref="T:System.Xml.XmlDictionaryReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns>リーダーがデータを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.IsStartObject(System.Xml.XmlReader)">
      <summary>読み取り可能な XML 要素に <see cref="T:System.Xml.XmlReader" /> が配置されているかどうかを指定する値を取得します。</summary>
      <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>リーダーの位置が開始要素である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.IO.Stream)">
      <summary>
        <see cref="T:System.IO.Stream" /> を使用して XML ストリームまたはドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="stream">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.IO.Stream" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> を使用して XML ストリームまたはドキュメントを読み取り、逆シリアル化されたオブジェクトを返します。さらに、リーダーがデータを読み取る前に、シリアライザーがデータを読み取ることができるかどうかを指定できます。</summary>
      <param name="reader">XML ドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="verifyObjectName">周囲の XML 要素名と名前空間がルート名とルート名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。</summary>
      <param name="reader">XML ストリームまたはドキュメントを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> を使用して XML ドキュメントまたはストリームを読み取り、逆シリアル化されたオブジェクトを返します。さらに、リーダーがデータを読み取る前に、シリアライザーがデータを読み取ることができるかどうかを指定できます。</summary>
      <param name="reader">XML ドキュメントまたはストリームを読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="verifyObjectName">周囲の XML 要素名と名前空間がルート名とルート名前空間に対応するかどうかをチェックする場合は <see langword="true" />。この検査をスキップする場合は <see langword="false" />。</param>
      <returns>逆シリアル化されたオブジェクト。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクト データの末尾を XML の終了要素として XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteEndObject(System.Xml.XmlWriter)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクト データの末尾を XML の終了要素として XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.IO.Stream,System.Object)">
      <summary>
        <see cref="T:System.IO.Stream" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="stream">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.IO.Stream" />。</param>
      <param name="graph">ストリームに書き込むデータを格納したオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">コンテンツを XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
      <summary>
        <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクトの完全なコンテンツ (開始、コンテンツ、および終了) を XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>指定した <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクトのコンテンツだけを XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
      <summary>指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクトのコンテンツだけを XML ドキュメントまたはストリームに書き込みます。</summary>
      <param name="writer">XML ドキュメントまたはストリームを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">書き込むコンテンツを格納するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
      <summary>指定した <see cref="T:System.Xml.XmlDictionaryWriter" /> を使用して、オブジェクト データの先頭を XML の開始要素として書き込みます。</summary>
      <param name="writer">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
      <param name="graph">シリアル化するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlObjectSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
      <summary>指定した <see cref="T:System.Xml.XmlWriter" /> を使用して、オブジェクト データの先頭を XML の開始要素として書き込みます。</summary>
      <param name="writer">XML ドキュメントを書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="graph">シリアル化するオブジェクト。</param>
      <exception cref="T:System.Runtime.Serialization.InvalidDataContractException">シリアル化される種類がデータ コントラクト規則に従いません。 たとえば、<see cref="T:System.Runtime.Serialization.DataContractAttribute" /> 属性が型に適用されていません。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">シリアル化されるインスタンスに問題があります。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">シリアル化されるオブジェクトが最大数を超えました。 <see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /> プロパティをチェックします。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XmlSerializableServices">
      <summary>XML の読み取りと書き込みを行うメソッドを含みます。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.AddDefaultSchema(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
      <summary>指定した型名を使用して既定のスキーマの型を生成し、それを指定したスキーマ セットに追加します。</summary>
      <param name="schemas">生成されたスキーマの型を追加する <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
      <param name="typeQName">スキーマに割り当てる型名を指定する <see cref="T:System.Xml.XmlQualifiedName" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="schemas" /> または <paramref name="typeQName" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.ReadNodes(System.Xml.XmlReader)">
      <summary>指定したリーダーから XML ノードのセットを読み取り、結果を返します。</summary>
      <param name="xmlReader">読み取るために使用する <see cref="T:System.Xml.XmlReader" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlReader" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">読み取り中に、<see langword="null" /> のノードが見つかりました。</exception>
      <returns>
        <see cref="T:System.Xml.XmlNode" /> 型の配列。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XmlSerializableServices.WriteNodes(System.Xml.XmlWriter,System.Xml.XmlNode[])">
      <summary>指定したライターを使用して、指定したノードを書き込みます。</summary>
      <param name="xmlWriter">書き込むために使用する <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="nodes">書き込む <see cref="T:System.Xml.XmlNode" /> 型の配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlWriter" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="T:System.Runtime.Serialization.XPathQueryGenerator">
      <summary>データ コントラクトを表すクラス、およびそのコントラクトのメンバーを表すメタデータを指定すると、該当するメンバーの XPath クエリが生成されます。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Text.StringBuilder,System.Xml.XmlNamespaceManager@)">
      <summary>指定したコントラクト データ型、メタデータ要素の配列、トップ レベルの要素、および名前空間を使用して、データ コントラクトから XPath を作成します。</summary>
      <param name="type">データ コントラクトを表す型。</param>
      <param name="pathToMember">
        <see cref="Overload:System.Type.GetMember" /> クラスの <see cref="T:System.Type" /> メソッドを使用して生成されたメタデータ。クエリの生成に使用する特定のデータ メンバーをポイントします。</param>
      <param name="rootElementXpath">トップ レベルの要素が xpath 内にある必要があります。</param>
      <param name="namespaces">データ コントラクト内で検出される XML 名前空間とそのプレフィックス。</param>
      <returns>
        <see cref="T:System.String" />  
  
型およびメンバー データから生成される XPath。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer(System.Type,System.Reflection.MemberInfo[],System.Xml.XmlNamespaceManager@)">
      <summary>指定したデータ コントラクト型、メタデータ要素の配列、および名前空間を使用して、データ コントラクトから XPath を作成します。</summary>
      <param name="type">データ コントラクトを表す型。</param>
      <param name="pathToMember">
        <see cref="Overload:System.Type.GetMember" /> クラスの <see cref="T:System.Type" /> メソッドを使用して生成されたメタデータ。クエリの生成に使用する特定のデータ メンバーをポイントします。</param>
      <param name="namespaces">データ コントラクト内で検出される XML 名前空間とそのプレフィックス。</param>
      <returns>
        <see cref="T:System.String" />  
  
型およびメンバー データから生成される XPath。</returns>
    </member>
    <member name="T:System.Runtime.Serialization.XsdDataContractExporter">
      <summary>データ コントラクトで使用する .NET Framework 型のセットを XML スキーマ ファイル (.xsd) に変換できるようにします。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor">
      <summary>
        <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)">
      <summary>スキーマのセットを指定して、<see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> クラスの新しいインスタンスを初期化します。</summary>
      <param name="schemas">エクスポートするスキーマを含む <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</param>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>アセンブリのセットに含まれている共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="assemblies">エクスポートする型のアセンブリを含む <see cref="T:System.Reflection.Assembly" /> の <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <returns>型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})">
      <summary>
        <see cref="T:System.Collections.Generic.ICollection`1" /> に含まれる共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="types">エクスポートする指定された型を含む <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <returns>型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)">
      <summary>指定した共通言語ランタイム (CLR) 型がエクスポート可能かどうかどうかを示す値を取得します。</summary>
      <param name="type">エクスポートする <see cref="T:System.Type" />。</param>
      <returns>型をエクスポートできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})">
      <summary>指定したアセンブリのコレクションに含まれる型を変換します。</summary>
      <param name="assemblies">エクスポートする型を含む (<see cref="T:System.Reflection.Assembly" /> の) <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="assemblies" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">コレクション内の <see cref="T:System.Reflection.Assembly" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})">
      <summary>このメソッドに渡された <see cref="T:System.Collections.Generic.ICollection`1" /> に含まれた型を変換します。</summary>
      <param name="types">エクスポートする型を含む (<see cref="T:System.Type" /> の) <see cref="T:System.Collections.Generic.ICollection`1" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="types" /> 引数が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentException">コレクション内の型が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)">
      <summary>指定した .NET Framework 型を XML スキーマ定義言語 (XSD) のスキーマに変換します。</summary>
      <param name="type">XML スキーマに変換する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)">
      <summary>
        <see cref="T:System.Type" /> のトップレベル名と名前空間を返します。</summary>
      <param name="type">照会する <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns>この <see cref="T:System.Xml.XmlQualifiedName" /> のトップレベル名と名前空間を表す <see cref="T:System.Type" />。この名前が、このオブジェクトを書き込むときにストリームに書き込まれます。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)">
      <summary>指定した型の XML スキーマの型を返します。</summary>
      <param name="type">スキーマを返す型。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns>XML スキーマを含む <see cref="T:System.Xml.Schema.XmlSchemaType" />。</returns>
    </member>
    <member name="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)">
      <summary>
        <see cref="T:System.Type" /> のコントラクト名とコントラクト名前空間を返します。</summary>
      <param name="type">エクスポートされた <see cref="T:System.Type" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> 引数が <see langword="null" /> です。</exception>
      <returns>型のコントラクト名とその名前空間を表す <see cref="T:System.Xml.XmlQualifiedName" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Options">
      <summary>エクスポート操作に対して設定できるオプションを含む <see cref="T:System.Runtime.Serialization.ExportOptions" /> を取得または設定します。</summary>
      <returns>スキーマへの型のエクスポート方法をカスタマイズするために使用されるオプションを含む <see cref="T:System.Runtime.Serialization.ExportOptions" />。</returns>
    </member>
    <member name="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas">
      <summary>エクスポートされた XML スキーマのコレクションを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.Schema.XmlSchemaSet" /> メソッドの呼び出し後の、共通言語ランタイム (CLR) の型のセットから変換されたスキーマを含む <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />。</returns>
    </member>
    <member name="T:System.Xml.IFragmentCapableXmlDictionaryWriter">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> で実装されると XML フラグメントの処理を可能にする、プロパティとメソッドを含みます。</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment">
      <summary>XML フラグメントの処理を終了します。</summary>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)">
      <summary>XML フラグメントの処理を開始します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="generateSelfContainedTextFragment">フラグメントの外部で宣言している名前空間をフラグメントの内部で使用しているときに、その名前空間を再宣言する場合は <see langword="true" />。名前空間を再宣言しない場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)">
      <summary>基になるライターのストリームに、XML フラグメントを書き込みます。</summary>
      <param name="buffer">書き込むバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の書き込み開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> に書き込むバイト数。</param>
    </member>
    <member name="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment">
      <summary>この <see cref="T:System.Xml.XmlDictionaryWriter" /> が XML フラグメントを処理できるかどうか示す値を取得します。</summary>
      <returns>この <see langword="true" /> が XML フラグメントを処理できる場合は <see cref="T:System.Xml.XmlDictionaryWriter" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.IStreamProvider">
      <summary>ストリームを提供するクラスによって実装できるインターフェイスを表します。</summary>
    </member>
    <member name="M:System.Xml.IStreamProvider.GetStream">
      <summary>ストリームを取得します。</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> オブジェクト。</returns>
    </member>
    <member name="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>出力するストリームを解放します。</summary>
      <param name="stream">解放するストリーム。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryReaderInitializer">
      <summary>新しいドキュメントを読むためにバイナリ リーダーを再初期化するメソッドを提供します。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>指定した入力バッファーを使用してバイナリ リーダーを再初期化します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み込み開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み込み可能バイト数。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="M:System.Xml.IXmlBinaryReaderInitializer.SetInput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>指定した入力ストリームを使用してバイナリ リーダーを再初期化します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Xml.IXmlBinaryWriterInitializer">
      <summary>このインターフェイスから派生する XML バイナリ ライターの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlBinaryWriterInitializer.SetOutput(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>このメソッドを実装する XML バイナリ ライターの初期化要件を指定します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="dictionary">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream">完了時にストリームがライターによって閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.IXmlDictionary">
      <summary>
        <see langword="interface" /> および <see cref="T:System.Xml.XmlDictionaryReader" /> の実装が使用するために、XML ディクショナリが実装する必要のあるコントラクトを定義する <see cref="T:System.Xml.XmlDictionaryWriter" />。</summary>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>ディクショナリ内のエントリの検索を試みます。</summary>
      <param name="key">検索するキー。</param>
      <param name="result">
        <paramref name="key" /> が定義されている場合は、そのキーにマッピングされている <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <returns>キーがディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>指定した文字列値をディクショナリでチェックします。</summary>
      <param name="value">チェックされる文字列値。</param>
      <param name="result">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <returns>値がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.IXmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>指定した <see cref="T:System.Xml.XmlDictionaryString" /> をディクショナリでチェックします。</summary>
      <param name="value">チェックされる <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" /> がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.IXmlTextReaderInitializer">
      <summary>このインターフェイスから派生する XML テキスト リーダーの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>バッファーを読み取る XML テキスト リーダーの初期化要件を指定します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="M:System.Xml.IXmlTextReaderInitializer.SetInput(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>ストリームを読み取る XML テキスト リーダーの初期化要件を指定します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
    </member>
    <member name="T:System.Xml.IXmlTextWriterInitializer">
      <summary>このインターフェイスから派生する XML テキスト ライターの実装要件を指定します。</summary>
    </member>
    <member name="M:System.Xml.IXmlTextWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>このメソッドを実装する XML テキスト ライターの初期化要件を指定します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="ownsStream">完了時にストリームがライターによって閉じられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="T:System.Xml.OnXmlDictionaryReaderClose">
      <summary>リーダーを閉じるときのコールバック メソッドに対する <see langword="delegate" />。</summary>
      <param name="reader">
        <c>OnClose</c> イベントを発生させる <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
    </member>
    <member name="T:System.Xml.UniqueId">
      <summary>GUID に最適化された一意の識別子。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor">
      <summary>新しい一意の GUID を使用して、このクラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[])">
      <summary>
        <see cref="T:System.Guid" /> を表すバイト配列を使用して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="guid">
        <see cref="T:System.Guid" /> を表すバイト配列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> は 16 バイトより短いため、有効ではありません。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Byte[],System.Int32)">
      <summary>
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列の、オフセットで指定されている位置から開始して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="guid">
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset">
        <see langword="byte" /> を表す <see cref="T:System.Guid" /> 配列内のオフセット位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Char[],System.Int32,System.Int32)">
      <summary>指定した数のエントリを使用し、<see langword="char" /> 内の指定したオフセット位置から開始して、このクラスの新しいインスタンスを作成します。</summary>
      <param name="chars">
        <see langword="char" /> を表す <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset">
        <see langword="char" /> を表す <see cref="T:System.Guid" /> 配列内のオフセット位置。</param>
      <param name="count">
        <paramref name="offset" /> から開始して、使用する配列エントリの数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。

- または -

<paramref name="count" /> が、0 未満か、または配列の長さから <paramref name="offset" /> を引いた値を超えています。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="count" /> が 0 です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.Guid)">
      <summary>
        <see cref="T:System.Guid" /> を使用するこのクラスの新しいインスタンスを作成します。</summary>
      <param name="guid">
        <see cref="T:System.Guid" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="guid" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.#ctor(System.String)">
      <summary>文字列を使用するこのクラスの新しいインスタンスを作成します。</summary>
      <param name="value">
        <see cref="T:System.Xml.UniqueId" /> の生成に使用する文字列。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> の長さが 0 です。</exception>
    </member>
    <member name="M:System.Xml.UniqueId.Equals(System.Object)">
      <summary>オブジェクトがこの <see cref="T:System.Xml.UniqueId" /> と等しいかどうかを検査します。</summary>
      <param name="obj">比較対象のオブジェクト。</param>
      <returns>オブジェクトがこの <see cref="T:System.Xml.UniqueId" /> と等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.GetHashCode">
      <summary>この <see cref="T:System.Xml.UniqueId" /> のハッシュ コード表現を作成します。</summary>
      <returns>この <see cref="T:System.Xml.UniqueId" /> の整数ハッシュ コード表現。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Equality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>2 つの <see cref="T:System.Xml.UniqueId" /> が等しいかどうかを調べる等値演算子をオーバーライドします。</summary>
      <param name="id1">最初の <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2">第 2 の <see cref="T:System.Xml.UniqueId" />。</param>
      <returns>2 つの <see langword="true" /> が等しい場合、または両方とも <see cref="T:System.Xml.UniqueId" /> の場合は <see langword="null" />、両者が等しくない場合、または一方のみが <see langword="false" /> の場合は <see langword="null" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.op_Inequality(System.Xml.UniqueId,System.Xml.UniqueId)">
      <summary>2 つの <see cref="T:System.Xml.UniqueId" /> が等しくないかどうかを調べる等値演算子をオーバーライドします。</summary>
      <param name="id1">最初の <see cref="T:System.Xml.UniqueId" />。</param>
      <param name="id2">第 2 の <see cref="T:System.Xml.UniqueId" />。</param>
      <returns>オーバーライドした等値演算子が <see langword="true" /> を返す場合は <see langword="false" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToCharArray(System.Char[],System.Int32)">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 値を <see langword="char" /> 配列に格納します。</summary>
      <param name="chars">
        <see langword="char" /> の配列</param>
      <param name="offset">
        <see langword="char" /> 配列内の <see cref="T:System.Xml.UniqueId" /> 値の挿入開始位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="chars" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="guid" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns>
        <see langword="char" /> 値で埋められた <see cref="T:System.Xml.UniqueId" /> 配列のエントリの数。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.ToString">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> 値を文字列形式で表示します。</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" /> 値の文字列表現。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Byte[],System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> としての <see cref="T:System.Xml.UniqueId" /> の値の取得を試み、指定したバイト配列の指定したオフセット位置に格納します。</summary>
      <param name="buffer">
        <see langword="byte" /> を格納する <see cref="T:System.Guid" /> 配列。</param>
      <param name="offset">
        <see langword="byte" /> 配列内の <see cref="T:System.Guid" /> 値の挿入開始位置。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が、0 未満か、配列の長さを超えています。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns>
        <see langword="true" /> のこのインスタンスに格納された値が <see cref="T:System.Xml.UniqueId" /> である場合は <see cref="T:System.Guid" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.UniqueId.TryGetGuid(System.Guid@)">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> の値の <see cref="T:System.Guid" /> としての取得を試みます。</summary>
      <param name="guid">成功した場合は <see cref="T:System.Guid" />、それ以外の場合は <see cref="F:System.Guid.Empty" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="buffer" /> と <paramref name="offset" /> で指定される値は 16 バイトより短いため、有効ではありません。</exception>
      <returns>UniqueId が <see cref="T:System.Guid" /> を表す場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.UniqueId.CharArrayLength">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> の文字列表現の長さを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" /> の文字列表現の長さ。</returns>
    </member>
    <member name="P:System.Xml.UniqueId.IsGuid">
      <summary>
        <see cref="T:System.Xml.UniqueId" /> が <see cref="T:System.Guid" /> かどうかを示します。</summary>
      <returns>
        <see cref="T:System.Xml.UniqueId" /> が <see cref="T:System.Guid" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryReaderSession">
      <summary>最適化された文字列を動的な方法で管理できるようにします。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.#ctor">
      <summary>
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Add(System.Int32,System.String)">
      <summary>入力パラメーターから <see cref="T:System.Xml.XmlDictionaryString" /> を作成し、それを内部コレクションに追加します。</summary>
      <param name="id">キーの値。</param>
      <param name="value">値。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="id" /> が 0 未満です。</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">キーが <paramref name="id" /> であるエントリが既に存在します。</exception>
      <returns>内部コレクションに追加される新しく作成された <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.Clear">
      <summary>すべてのコンテンツの内部コレクションを消去します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>キーの一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="key">検索するキー。</param>
      <param name="result">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="key" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>値の一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="value">検索する値。</param>
      <param name="result">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="value" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlBinaryReaderSession.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>値の一致するエントリが内部コレクションに含まれるかどうかを確認します。</summary>
      <param name="value">検索する値。</param>
      <param name="result">このメソッドから制御が戻るときに、エントリが見つかった場合は文字列が格納されます。それ以外の場合は <see langword="null" /> が格納されます。 このパラメーターは初期化せずに渡されます。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="value" /> に一致するエントリが見つからなかった場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="T:System.Xml.XmlBinaryWriterSession">
      <summary>動的ディクショナリを使用してメッセージ内に出現する共通の文字列を圧縮し、状態を維持できるようにします。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.#ctor">
      <summary>このクラスのインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.Reset">
      <summary>内部コレクションを消去します。</summary>
    </member>
    <member name="M:System.Xml.XmlBinaryWriterSession.TryAdd(System.Xml.XmlDictionaryString,System.Int32@)">
      <summary>内部コレクションに <see cref="T:System.Xml.XmlDictionaryString" /> の追加を試みます。</summary>
      <param name="value">追加する <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="key">正常に追加された <see cref="T:System.Xml.XmlDictionaryString" /> のキー。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.InvalidOperationException">キーが <paramref name="key" /> であるエントリが既に存在します。</exception>
      <returns>文字列を追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionary">
      <summary>Windows Communication Foundation (WCF) の XML リーダー/ライターの実装の最適化に使用されるディクショナリを実装します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor">
      <summary>空の <see cref="T:System.Xml.XmlDictionary" /> を作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionary.#ctor(System.Int32)">
      <summary>初期量で <see cref="T:System.Xml.XmlDictionary" /> を作成します。</summary>
      <param name="capacity">ディクショナリの初期サイズ。</param>
    </member>
    <member name="M:System.Xml.XmlDictionary.Add(System.String)">
      <summary>文字列を <see cref="T:System.Xml.XmlDictionary" /> に追加します。</summary>
      <param name="value">ディクショナリに追加する文字列。</param>
      <returns>追加された <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Int32,System.Xml.XmlDictionaryString@)">
      <summary>ディクショナリ内のエントリの検索を試みます。</summary>
      <param name="key">検索するキー。</param>
      <param name="result">
        <paramref name="key" /> が定義されている場合は、そのキーにマッピングされている <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <returns>キーがディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.String,System.Xml.XmlDictionaryString@)">
      <summary>指定した文字列値をディクショナリでチェックします。</summary>
      <param name="value">チェックされる文字列値。</param>
      <param name="result">ディクショナリ文字列が見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />、それ以外の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns>値がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionary.TryLookup(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString@)">
      <summary>指定した <see cref="T:System.Xml.XmlDictionaryString" /> をディクショナリでチェックします。</summary>
      <param name="value">チェックされる <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="result">見つかった場合は、対応する <see cref="T:System.Xml.XmlDictionaryString" />。それ以外の場合は <see langword="null" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryString" /> がディクショナリ内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionary.Empty">
      <summary>
        <see langword="static" /> の空の <see cref="T:System.Xml.IXmlDictionary" /> を取得します。</summary>
      <returns>
        <see langword="static" /> の空の <see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReader">
      <summary>シリアル化および逆シリアル化を実行するために Windows Communication Foundation (WCF) が <see langword="abstract" /> から派生する <see cref="T:System.Xml.XmlReader" /> クラス。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.#ctor">
      <summary>このクラスのインスタンスを作成します。  派生クラスによってのみ呼び出されます。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session">使用する <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="dictionary">使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session">使用する <see cref="T:System.Xml.XmlBinaryReaderSession" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> が 0 未満の値か、オフセットを引いたバッファー サイズより大きい値です。

- または -

<paramref name="offset" /> が 0 未満の値か、バッファー サイズより大きい値です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> または <paramref name="quotas" /> が <see langword="null" /> です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlDictionaryReaderQuotas,System.Xml.XmlBinaryReaderSession,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="dictionary">
        <see cref="T:System.Xml.XmlDictionary" /> エクスポートします。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="session">
        <see cref="T:System.Xml.XmlBinaryReaderSession" /> エクスポートします。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateBinaryReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>.NET バイナリ XML 形式を読み取ることのできる <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="quotas">この操作に適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateDictionaryReader(System.Xml.XmlReader)">
      <summary>既存の <see cref="T:System.Xml.XmlDictionaryReader" /> から <see cref="T:System.Xml.XmlReader" /> のインスタンスを作成します。</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding">入力の可能な文字エンコーディング。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings">入力の可能な文字エンコーディング。</param>
      <param name="contentType">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings">入力の可能な文字エンコーディング。</param>
      <param name="contentType">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas">リーダーに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="maxBufferSize">バッファーの許容最大サイズ。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encodings">入力の可能な文字エンコーディング。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encoding">ストリームの可能な文字エンコーディング。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encodings">ストリームの可能な文字エンコーディング。</param>
      <param name="contentType">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.String,System.Xml.XmlDictionaryReaderQuotas,System.Int32,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encodings">ストリームの可能な文字エンコーディング。</param>
      <param name="contentType">メッセージの Content-Type MIME タイプ。</param>
      <param name="quotas">メッセージの MIME 型。</param>
      <param name="maxBufferSize">リーダーに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateMtomReader(System.IO.Stream,System.Text.Encoding[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>MTOM 形式で XML を読み込む <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encodings">ストリームの可能な文字エンコーディング。</param>
      <param name="quotas">このリーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="encoding" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="encoding">適用するエンコード プロパティを指定する <see cref="T:System.Text.Encoding" /> オブジェクト。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <param name="quotas">リーダーに適用されるクォータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="quotas">リーダーに適用されるクォータ。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="encoding">適用するエンコード プロパティを指定する <see cref="T:System.Text.Encoding" /> オブジェクト。</param>
      <param name="quotas">適用する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</param>
      <param name="onClose">リーダーが閉じられたときに呼び出すデリゲート。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.CreateTextReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="quotas">リーダーに適用されるクォータ。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReader" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.EndCanonicalization">
      <summary>このメソッドはまだ実装されていません。</summary>
      <exception cref="T:System.NotSupportedException">常に。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>派生クラスでオーバーライドされると、属性の値を取得します。</summary>
      <param name="localName">属性のローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="namespaceUri">属性の名前空間を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <returns>属性の値。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.GetNonAtomizedNames(System.String@,System.String@)">
      <summary>アトミック化されていない名前を取得します。</summary>
      <param name="localName">ローカル名。</param>
      <param name="namespaceUri">ローカル <paramref name="localName" /> の名前空間。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.String[],System.String)">
      <summary>名前の配列内における現在のノードのローカル名のインデックスを取得します。</summary>
      <param name="localNames">検索するローカル名の文字列配列。</param>
      <param name="namespaceUri">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> または配列内のいずれかの名前が <see langword="null" /> です。

- または -

<paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns>名前の配列内における現ノードのローカル名のインデックス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IndexOfLocalName(System.Xml.XmlDictionaryString[],System.Xml.XmlDictionaryString)">
      <summary>名前の配列内における現在のノードのローカル名のインデックスを取得します。</summary>
      <param name="localNames">検索するローカル名の <see cref="T:System.Xml.XmlDictionaryString" /> 配列。</param>
      <param name="namespaceUri">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localNames" /> または配列内のいずれかの名前が <see langword="null" /> です。

- または -

<paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns>名前の配列内における現ノードのローカル名のインデックス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.String)">
      <summary>パラメーター <paramref name="localName" /> が現在のノードのローカル名かどうかを確認します。</summary>
      <param name="localName">現在のノードのローカル名。</param>
      <returns>
        <paramref name="localName" /> が現ノードのローカル名に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsLocalName(System.Xml.XmlDictionaryString)">
      <summary>パラメーター <paramref name="localName" /> が現在のノードのローカル名かどうかを確認します。</summary>
      <param name="localName">現在のノードのローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="localName" /> が現ノードのローカル名に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.String)">
      <summary>パラメーター <paramref name="namespaceUri" /> が現在のノードの名前空間かどうかを確認します。</summary>
      <param name="namespaceUri">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="namespaceUri" /> が現ノードの名前空間に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsNamespaceUri(System.Xml.XmlDictionaryString)">
      <summary>パラメーター <paramref name="namespaceUri" /> が現在のノードの名前空間かどうかを確認します。</summary>
      <param name="namespaceUri">現在のノードの名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
      <returns>
        <paramref name="namespaceUri" /> が現ノードの名前空間に一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartArray(System.Type@)">
      <summary>リーダーの位置が配列の先頭かどうかを確認します。 このクラスは <see langword="false" /> を返しますが、配列の概念を持つ派生クラスは <see langword="true" /> を返す可能性があります。</summary>
      <param name="type">有効なノードである場合はノードの型、それ以外の場合は <see langword="null" />。</param>
      <returns>リーダーの位置が配列ノードの先頭になっている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>最初のタグが開始タグかまたは空要素タグか、およびローカル名と名前空間 URI が現在のノードのものと一致するかどうかを検査します。</summary>
      <param name="localName">属性のローカル名を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <param name="namespaceUri">属性の名前空間を表す <see cref="T:System.Xml.XmlDictionaryString" />。</param>
      <returns>配列の最初のタグが開始タグまたは空要素タグで、<paramref name="localName" /> および <paramref name="namespaceUri" /> が一致する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.IsTextNode(System.Xml.XmlNodeType)">
      <summary>現在のノードがテキスト ノードかどうかをテストします。</summary>
      <param name="nodeType">検査するノードの型。</param>
      <returns>ノードの型が <see cref="F:System.Xml.XmlNodeType.Text" />、<see cref="F:System.Xml.XmlNodeType.Whitespace" />、<see cref="F:System.Xml.XmlNodeType.SignificantWhitespace" />、<see cref="F:System.Xml.XmlNodeType.CDATA" />、または <see cref="F:System.Xml.XmlNodeType.Attribute" /> の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement">
      <summary>現在のコンテンツ ノードが開始要素または空要素かどうかを検査します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String)">
      <summary>現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="name">要素の <see cref="P:System.Xml.XmlReader.Name" /> プロパティ。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.String,System.String)">
      <summary>現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.MoveToStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>現在のコンテンツ ノードが開始要素または空要素かどうか、および要素の <see cref="P:System.Xml.XmlReader.LocalName" /> プロパティと <see cref="P:System.Xml.XmlReader.NamespaceURI" /> プロパティが指定した引数と一致するかどうかを検査します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素のローカル名。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.DateTime" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Decimal" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Double" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Guid" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="short" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>繰り返し発生する整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="long" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="float" /> 型の数値を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">浮動小数点を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する浮動小数点の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された浮動小数点の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.TimeSpan" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.DateTime" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Decimal" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Double" /> ノード型を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.Guid" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="short" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>繰り返し発生する整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="long" /> 型の整数を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">整数を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する整数の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された整数の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see langword="float" /> 型の数値を、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">浮動小数点を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する浮動小数点の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納された浮動小数点型の数値の数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>繰り返し発生する <see cref="T:System.TimeSpan" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
      <returns>配列に格納されたノード数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.String,System.String)">
      <summary>繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Boolean" /> ノードの <see cref="T:System.Boolean" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadBooleanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>繰り返し発生する <see cref="T:System.Boolean" /> ノードを、型指定された配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Boolean" /> ノードの <see cref="T:System.Boolean" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
      <summary>ノードのコンテンツを指定した型に変換します。</summary>
      <param name="type">返される値の <see cref="T:System.Type" />。</param>
      <param name="namespaceResolver">型変換に関連する名前空間プレフィックスの解決に使用される <see cref="T:System.Xml.IXmlNamespaceResolver" /> オブジェクト。 たとえば、<see cref="T:System.Xml.XmlQualifiedName" /> オブジェクトを <c>xs:string</c> に変換するときにこれを使用できます。 この値は null 参照でもかまいません。</param>
      <returns>要求された型に変換された、連結されたテキストの内容または属性値。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBase64">
      <summary>コンテンツを読み取り、Base64 でデコードされたバイナリ バイトを返します。</summary>
      <exception cref="T:System.Xml.XmlException">配列のサイズが、このリーダーの MaxArrayLength クォータを超えています。</exception>
      <returns>Base64 でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex">
      <summary>コンテンツを読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</summary>
      <exception cref="T:System.Xml.XmlException">配列のサイズが <see cref="F:System.Int32.MaxValue" /> よりも大きくなっています。</exception>
      <returns>
        <see langword="BinHex" /> でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsBinHex(System.Int32)">
      <summary>コンテンツを読み取り、<see langword="BinHex" /> でデコードされたバイナリ バイトを返します。</summary>
      <param name="maxByteArrayContentLength">配列の最大長。</param>
      <exception cref="T:System.Xml.XmlException">配列のサイズが <paramref name="maxByteArrayContentLength" /> よりも大きくなっています。</exception>
      <returns>
        <see langword="BinHex" /> でデコードされたバイナリ バイトが格納されたバイト配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsChars(System.Char[],System.Int32,System.Int32)">
      <summary>コンテンツを <see langword="char" /> 配列に読み取ります。</summary>
      <param name="chars">文字を格納する配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列に格納する文字の数。</param>
      <returns>読み取られた文字数。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsDecimal">
      <summary>ノードのコンテンツを <see langword="decimal" /> に変換します。</summary>
      <returns>ノード コンテンツの <see langword="decimal" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsFloat">
      <summary>ノードのコンテンツを <see langword="float" /> に変換します。</summary>
      <returns>ノード コンテンツの <see langword="float" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsGuid">
      <summary>ノードのコンテンツを <see langword="guid" /> に変換します。</summary>
      <returns>ノード コンテンツの <see langword="guid" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsQualifiedName(System.String@,System.String@)">
      <summary>ノードのコンテンツを修飾名表現に変換します。</summary>
      <param name="localName">修飾名 (<see langword="out" /> パラメーター) の <see cref="P:System.Xml.XmlReader.LocalName" /> 部分。</param>
      <param name="namespaceUri">修飾名 (<see langword="out" /> パラメーター) の <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 部分。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString">
      <summary>ノードのコンテンツを文字列に変換します。</summary>
      <returns>文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Int32)">
      <summary>ノードのコンテンツを文字列に変換します。</summary>
      <param name="maxStringContentLength">最大文字列長。</param>
      <returns>文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.String[],System.Int32@)">
      <summary>ノードのコンテンツを文字列に変換します。</summary>
      <param name="strings">コンテンツと照合する文字列の配列。</param>
      <param name="index">コンテンツに一致する <paramref name="strings" /> 内のエントリのインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> が <see langword="null" />です。

- または -

<paramref name="strings" /> 内のエントリが <see langword="null" /> です。</exception>
      <returns>文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsString(System.Xml.XmlDictionaryString[],System.Int32@)">
      <summary>ノードのコンテンツを文字列に変換します。</summary>
      <param name="strings">コンテンツを照合する <see cref="T:System.Xml.XmlDictionaryString" /> オブジェクトの配列。</param>
      <param name="index">コンテンツに一致する <paramref name="strings" /> 内のエントリのインデックス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="strings" /> が <see langword="null" />です。

- または -

<paramref name="strings" /> 内のエントリが <see langword="null" /> です。</exception>
      <returns>文字列表現のノード コンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsTimeSpan">
      <summary>ノードのコンテンツを <see cref="T:System.TimeSpan" /> に変換します。</summary>
      <returns>ノード コンテンツの <see cref="T:System.TimeSpan" /> 表現。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadContentAsUniqueId">
      <summary>ノードのコンテンツを一意の識別子に変換します。</summary>
      <returns>一意な識別子で表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.String,System.String)">
      <summary>ノードのコンテンツを <see cref="T:System.DateTime" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.DateTime" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDateTimeArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>ノードのコンテンツを <see cref="T:System.DateTime" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.DateTime" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.String,System.String)">
      <summary>ノードのコンテンツを <see cref="T:System.Decimal" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Decimal" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDecimalArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>ノードのコンテンツを <see cref="T:System.Decimal" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Decimal" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.String,System.String)">
      <summary>ノードのコンテンツを <see cref="T:System.Double" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Double" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadDoubleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>ノードのコンテンツを <see cref="T:System.Double" /> 配列に変換します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Double" /> 配列として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBase64">
      <summary>ノードのコンテンツを Base64 バイトの配列に変換します。</summary>
      <returns>Base64 バイトの配列として表されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBinHex">
      <summary>ノードのコンテンツを <see langword="BinHex" /> バイトの配列に変換します。</summary>
      <returns>
        <see langword="BinHex" /> バイトの配列として表されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsBoolean">
      <summary>要素のコンテンツを <see cref="T:System.Boolean" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Boolean" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDateTime">
      <summary>要素のコンテンツを <see cref="T:System.DateTime" /> に変換します。</summary>
      <exception cref="T:System.ArgumentException">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException">要素が有効な形式ではありません。</exception>
      <returns>
        <see cref="T:System.DateTime" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDecimal">
      <summary>要素のコンテンツを <see cref="T:System.Decimal" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Decimal" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsDouble">
      <summary>要素のコンテンツを <see cref="T:System.Double" /> に変換します。</summary>
      <returns>
        <see cref="T:System.Double" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsFloat">
      <summary>要素のコンテンツを浮動小数点数 (<see cref="T:System.Single" />) に変換します。</summary>
      <returns>浮動小数点数 (<see cref="T:System.Single" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsGuid">
      <summary>要素のコンテンツを <see cref="T:System.Guid" /> に変換します。</summary>
      <exception cref="T:System.ArgumentException">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException">要素が有効な形式ではありません。</exception>
      <returns>
        <see cref="T:System.Guid" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsInt">
      <summary>要素のコンテンツを整数 (<see cref="T:System.Int32" />) に変換します。</summary>
      <returns>整数 (<see cref="T:System.Int32" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsLong">
      <summary>要素のコンテンツを長整数 (<see cref="T:System.Int64" />) に変換します。</summary>
      <returns>長整数 (<see cref="T:System.Int64" />) として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsString">
      <summary>要素のコンテンツを <see cref="T:System.String" /> に変換します。</summary>
      <returns>
        <see cref="T:System.String" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsTimeSpan">
      <summary>要素のコンテンツを <see cref="T:System.TimeSpan" /> に変換します。</summary>
      <returns>
        <see cref="T:System.TimeSpan" /> として表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadElementContentAsUniqueId">
      <summary>要素のコンテンツを一意の識別子に変換します。</summary>
      <exception cref="T:System.ArgumentException">要素が有効な形式ではありません。</exception>
      <exception cref="T:System.FormatException">要素が有効な形式ではありません。</exception>
      <returns>一意な識別子で表現されたノードのコンテンツ。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement">
      <summary>現在のノードが要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String)">
      <summary>現在のノードが、指定した <paramref name="name" /> を持つ要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <param name="name">要素の限定名。</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.String,System.String)">
      <summary>現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素で、リーダーを次のノードに進めるかどうかを確認します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadFullStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素で、リーダーを次のノードに進めるかどうかを確認します。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <exception cref="T:System.Xml.XmlException">
        <see cref="M:System.Xml.XmlDictionaryReader.IsStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)" /> は、<see langword="false" /> を返します。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.Guid" /> の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Guid" /> の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadGuidArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.Guid" /> の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.Guid" /> の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="short" /> 型の整数 (<see cref="T:System.Int16" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="short" /> 整数 (<see cref="T:System.Int16" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt16Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="short" /> 型の整数 (<see cref="T:System.Int16" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="short" /> 整数 (<see cref="T:System.Int16" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、整数 (<see cref="T:System.Int32" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>整数 (<see cref="T:System.Int32" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt32Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、整数 (<see cref="T:System.Int32" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>整数 (<see cref="T:System.Int32" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="long" /> 型の整数 (<see cref="T:System.Int64" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="long" /> 整数 (<see cref="T:System.Int64" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadInt64Array(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="long" /> 型の整数 (<see cref="T:System.Int64" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="long" /> 整数 (<see cref="T:System.Int64" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="float" /> 型の数値 (<see cref="T:System.Single" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="float" /> 数 (<see cref="T:System.Single" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadSingleArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see langword="float" /> 型の数値 (<see cref="T:System.Single" />) の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see langword="float" /> 数 (<see cref="T:System.Single" />) の配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>現在のノードが、指定した <paramref name="localName" /> および <paramref name="namespaceUri" /> を持つ要素であるか調べ、リーダーを次のノードに進めます。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString">
      <summary>現在のノードのコンテンツを文字列に読み取ります。</summary>
      <exception cref="T:System.InvalidOperationException">現在のノードのコンテンツを読み取ることができません。</exception>
      <exception cref="T:System.Xml.XmlException">許容最大文字列長を超えました。</exception>
      <returns>現在のノードのコンテンツを含む文字列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadString(System.Int32)">
      <summary>現在のノードのコンテンツを、指定した最大長の文字列に読み取ります。</summary>
      <param name="maxStringContentLength">許容される最大文字列長。</param>
      <exception cref="T:System.InvalidOperationException">現在のノードのコンテンツを読み取ることができません。</exception>
      <exception cref="T:System.Xml.XmlException">許容最大文字列長を超えました。</exception>
      <returns>現在のノードのコンテンツを含む文字列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.String,System.String)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.TimeSpan" /> の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.TimeSpan" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadTimeSpanArray(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した <paramref name="localName" /> と <paramref name="namespaceUri" /> を持つ一連のノードのコンテンツを、<see cref="T:System.TimeSpan" /> の配列に読み取ります。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <returns>
        <see cref="T:System.TimeSpan" /> 配列。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.ReadValueAsBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>実装されていません。</summary>
      <param name="buffer">読み込み元のバッファー。</param>
      <param name="offset">
        <paramref name="buffer" /> の読み取り開始位置。</param>
      <param name="count">
        <paramref name="buffer" /> からの読み取り可能バイト数。</param>
      <exception cref="T:System.NotSupportedException">常に。</exception>
      <returns>実装されていません。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>このメソッドはまだ実装されていません。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="includeComments">コメントが含まれるかどうかを判定します。</param>
      <param name="inclusivePrefixes">含まれるプレフィックス。</param>
      <exception cref="T:System.NotSupportedException">常に。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetArrayLength(System.Int32@)">
      <summary>このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="count">派生クラスでオーバーライドされない限り、0 を返します。</param>
      <returns>派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetBase64ContentLength(System.Int32@)">
      <summary>このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="length">派生クラスでオーバーライドされない限り、0 を返します。</param>
      <returns>派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetLocalNameAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="localName">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。 .</param>
      <returns>派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetNamespaceUriAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="namespaceUri">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。</param>
      <returns>派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryReader.TryGetValueAsDictionaryString(System.Xml.XmlDictionaryString@)">
      <summary>このクラスでは実装されていません (常に <see langword="false" /> を返します)。 派生クラスでオーバーライドされる場合があります。</summary>
      <param name="value">派生クラスでオーバーライドされない限り、<see langword="null" /> を返します。</param>
      <returns>派生クラスでオーバーライドされない限り <see langword="false" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.CanCanonicalize">
      <summary>このプロパティは常に <see langword="false" /> を返します。 その派生クラスが正規化をサポートする場合は、<see langword="true" /> を返すようにオーバーライドできます。</summary>
      <returns>
        <see langword="false" /> を返します。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReader.Quotas">
      <summary>このクラスの現在のインスタンスに適用されるクォータ値を取得します。</summary>
      <returns>このクラスの現在のインスタンスに適用される <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotas">
      <summary>XmlDictionaryReaders の構成可能なクォータ値を格納します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.#ctor">
      <summary>このクラスの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryReaderQuotas.CopyTo(System.Xml.XmlDictionaryReaderQuotas)">
      <summary>このインスタンスの値に基づいて、渡されるクォータ インスタンスにプロパティを設定します。</summary>
      <param name="quotas">値をコピーする <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> インスタンス。</param>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、渡されるインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentNullException">渡されるターゲット <paramref name="quotas" /> が <see langword="null" /> です。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.Max">
      <summary>すべてのプロパティに最大値を設定して、このクラスのインスタンスを取得します。</summary>
      <returns>プロパティが <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> に設定された <see cref="F:System.Int32.MaxValue" /> のインスタンス。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength">
      <summary>許される最大配列長を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns>許される最大配列長。 既定値は 16384 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead">
      <summary>1 回の読み取りで返すことができる最大バイト数を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns>1 回の読み取りで返すことができる最大バイト数。 既定値は 4096 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxDepth">
      <summary>入れ子になったノードの最大深度を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns>入れ子になったノードの最大深度。 既定値は 32 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount">
      <summary>テーブル名の最大文字数を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns>テーブル名の最大文字数。 既定値は 16384 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength">
      <summary>リーダーによって返される文字列の最大長を取得または設定します。</summary>
      <exception cref="T:System.InvalidOperationException">値の <see langword="set" /> を試みましたが、このインスタンスのクォータ値は読み取り専用です。</exception>
      <exception cref="T:System.ArgumentException">ゼロより小さい値を <see langword="set" /> しようとしました。</exception>
      <returns>リーダーによって返される文字列の最大長。 既定値は 8192 です。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryReaderQuotas.ModifiedQuotas">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> の変更されたクォータを取得します。</summary>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> の変更されたクォータ。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryReaderQuotaTypes">
      <summary>XmlDictionaryReaders の構成可能なクォータ値を列挙します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxArrayLength">
      <summary>許容される最大配列長を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxBytesPerRead">
      <summary>1 回の読み取りで返すことができる最大バイト数を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxDepth">
      <summary>入れ子になったノードの最大深度を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxNameTableCharCount">
      <summary>テーブル名の最大文字数を指定します。</summary>
    </member>
    <member name="F:System.Xml.XmlDictionaryReaderQuotaTypes.MaxStringContentLength">
      <summary>リーダーによって返される文字列の最大長を指定します。</summary>
    </member>
    <member name="T:System.Xml.XmlDictionaryString">
      <summary>
        <see cref="T:System.Xml.XmlDictionary" /> に格納されているエントリを表します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.#ctor(System.Xml.IXmlDictionary,System.String,System.Int32)">
      <summary>このクラスのインスタンスを作成します。</summary>
      <param name="dictionary">このインスタンスを格納する <see cref="T:System.Xml.IXmlDictionary" />。</param>
      <param name="value">ディクショナリ エントリの値である文字列。</param>
      <param name="key">ディクショナリ エントリのキーである整数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> または <paramref name="value" /> が <see langword="null" /> です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="key" /> が 0 未満であるか、または <see cref="F:System.Int32.MaxValue" />/4 を超えています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryString.ToString">
      <summary>このオブジェクトのテキスト表現を表示します。</summary>
      <returns>クラスの現在のインスタンスの文字列値。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Dictionary">
      <summary>
        <see cref="T:System.Xml.IXmlDictionary" /> のこのインスタンスのコンストラクターに渡される <see cref="T:System.Xml.XmlDictionaryString" /> を表します。</summary>
      <returns>このディクショナリ エントリの <see cref="T:System.Xml.IXmlDictionary" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Empty">
      <summary>空の文字列を表す <see cref="T:System.Xml.XmlDictionaryString" /> を取得します。</summary>
      <returns>空の文字列を表す <see cref="T:System.Xml.XmlDictionaryString" />。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Key">
      <summary>クラスのこのインスタンスの整数キーを取得します。</summary>
      <returns>クラスのこのインスタンスの整数キー。</returns>
    </member>
    <member name="P:System.Xml.XmlDictionaryString.Value">
      <summary>クラスのこのインスタンスの文字列値を取得します。</summary>
      <returns>クラスの現在のインスタンスの文字列値。</returns>
    </member>
    <member name="T:System.Xml.XmlDictionaryWriter">
      <summary>シリアル化および逆シリアル化を実行するために Windows Communication Foundation (WCF) が <see cref="T:System.Xml.XmlWriter" /> から派生する抽象クラスを表します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.#ctor">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream)">
      <summary>WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary)">
      <summary>WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="dictionary">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession)">
      <summary>WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="dictionary">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateBinaryWriter(System.IO.Stream,System.Xml.IXmlDictionary,System.Xml.XmlBinaryWriterSession,System.Boolean)">
      <summary>WCF バイナリ XML 形式を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">読み込み元のストリーム。</param>
      <param name="dictionary">共有ディクショナリとして使用する <see cref="T:System.Xml.XmlDictionary" />。</param>
      <param name="session">使用する <see cref="T:System.Xml.XmlBinaryWriterSession" />。</param>
      <param name="ownsStream">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateDictionaryWriter(System.Xml.XmlWriter)">
      <summary>既存の <see cref="T:System.Xml.XmlDictionaryWriter" /> から <see cref="T:System.Xml.XmlWriter" /> のインスタンスを作成します。</summary>
      <param name="writer">
        <see cref="T:System.Xml.XmlWriter" /> のインスタンス。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> が <see langword="null" />です。</exception>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String)">
      <summary>MTOM 形式で XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="maxSizeInBytes">ライターでバッファーされる最大バイト数。</param>
      <param name="startInfo">ContentType SOAP ヘッダーの属性。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateMtomWriter(System.IO.Stream,System.Text.Encoding,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>MTOM 形式で XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="maxSizeInBytes">ライターでバッファーされる最大バイト数。</param>
      <param name="startInfo">Infoset を含む MIME パートの Content-Type。</param>
      <param name="boundary">メッセージの MIME 境界。</param>
      <param name="startUri">Infoset を含む MIME パートの Content-ID URI。</param>
      <param name="writeMessageHeaders">メッセージ ヘッダーを書き込む場合は <see langword="true" />。</param>
      <param name="ownsStream">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream)">
      <summary>テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding)">
      <summary>テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="encoding">出力の文字エンコーディング。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.CreateTextWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>テキスト XML を書き込む <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンスを作成します。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="encoding">ストリームの文字エンコーディング。</param>
      <param name="ownsStream">完了時にストリームがライターによって閉じられる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
      <returns>
        <see cref="T:System.Xml.XmlDictionaryWriter" /> のインスタンス。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.EndCanonicalization">
      <summary>派生クラスによって実装されると、対応する <see cref="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])" /> の呼び出しによって開始された正規化を停止します。</summary>
      <exception cref="T:System.NotSupportedException">メソッドはまだ実装されていません。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.StartCanonicalization(System.IO.Stream,System.Boolean,System.String[])">
      <summary>派生クラスで実装された場合、正規化が開始されます。</summary>
      <param name="stream">書き込まれるストリーム。</param>
      <param name="includeComments">コメントを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <param name="inclusivePrefixes">含まれるプレフィックス。</param>
      <exception cref="T:System.NotSupportedException">メソッドはまだ実装されていません。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">データを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から書き込む値の数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int16" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int32[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int32" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Int64[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int64" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.Single[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Single" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.String,System.String,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Boolean[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Boolean" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.DateTime[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.DateTime" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Decimal[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Decimal" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Double[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Double" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Guid[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Guid" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int16[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int16" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int32[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int32" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Int64[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Int64" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.Single[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.Single" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteArray(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.TimeSpan[],System.Int32,System.Int32)">
      <summary>
        <see cref="T:System.TimeSpan" /> 配列からノードを書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="array">ノードを格納している配列。</param>
      <param name="offset">配列の開始インデックス。</param>
      <param name="count">配列から取得するノード数。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="offset" /> が &lt; 0 または &gt; <paramref name="array" /> の長さです。

- または -

<paramref name="count" /> が 0 未満、または <paramref name="array" /> の長さから <paramref name="offset" /> を引いたものより大きい値です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>属性の修飾名と値を書き込みます。</summary>
      <param name="prefix">属性のプレフィックス。</param>
      <param name="localName">属性のローカル名。</param>
      <param name="namespaceUri">属性の名前空間 URI。</param>
      <param name="value">属性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteAttributeString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>属性の修飾名と値を書き込みます。</summary>
      <param name="localName">属性のローカル名。</param>
      <param name="namespaceUri">属性の名前空間 URI。</param>
      <param name="value">属性。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
      <summary>指定したバイナリ バイトを base64 として非同期にエンコードし、その結果生成されるテキストを書き込みます。</summary>
      <param name="buffer">エンコードするバイト配列。</param>
      <param name="index">書き込むバイトの開始を示すバッファー内の位置。</param>
      <param name="count">書き込むバイト数。</param>
      <exception cref="T:System.InvalidOperationException">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。

- または -

<see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlDictionaryWriter" /> 非同期メソッドが呼び出されました。 この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
      <returns>非同期の <see langword="WriteBase64" /> 操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>テキスト コンテンツの要素を書き込みます。</summary>
      <param name="prefix">要素のプレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="value">要素の内容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteElementString(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString,System.String)">
      <summary>テキスト コンテンツの要素を書き込みます。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <param name="value">要素の内容。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> から現在の XML ノードを書き込みます。</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="defattr">
        <see langword="XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlReader" /> から現在の XML ノードを書き込みます。</summary>
      <param name="reader">
        <see cref="T:System.Xml.XmlReader" />。</param>
      <param name="defattr">
        <see cref="T:System.Xml.XmlReader" /> の既定の属性をコピーする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="reader" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteQualifiedName(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>名前空間の修飾名を書き込みます。 このメソッドは、指定した名前空間のスコープ内にあるプレフィックスを検索します。</summary>
      <param name="localName">修飾名のローカル名。</param>
      <param name="namespaceUri">修飾名の名前空間 URI。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="localName" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定したプレフィックス、ローカル名、および名前空間 URI を使用して、属性の開始を書き込みます。</summary>
      <param name="prefix">名前空間プレフィックス。</param>
      <param name="localName">属性のローカル名。</param>
      <param name="namespaceUri">属性の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定したローカル名および名前空間 URI を使用して、属性の開始を書き込みます。</summary>
      <param name="localName">属性のローカル名。</param>
      <param name="namespaceUri">属性の名前空間 URI。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.String,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した開始タグを書き込み、指定した名前空間とプレフィックスに関連付けます。</summary>
      <param name="prefix">要素のプレフィックス。</param>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <exception cref="T:System.InvalidOperationException">ライターが閉じています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteStartElement(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>指定した開始タグを書き込み、指定した名前空間に関連付けます。</summary>
      <param name="localName">要素のローカル名。</param>
      <param name="namespaceUri">要素の名前空間 URI。</param>
      <exception cref="T:System.InvalidOperationException">ライターが閉じています。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteString(System.Xml.XmlDictionaryString)">
      <summary>指定したテキストの内容を書き込みます。</summary>
      <param name="value">書き込むテキスト。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteTextNode(System.Xml.XmlDictionaryReader,System.Boolean)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryReader" /> が現在配置されているテキスト ノードを書き込みます。</summary>
      <param name="reader">テキスト値を取得する <see cref="T:System.Xml.XmlDictionaryReader" />。</param>
      <param name="isAttribute">リーダーが属性値または要素コンテンツに配置されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Guid)">
      <summary>
        <see cref="T:System.Guid" /> 値を書き込みます。</summary>
      <param name="value">書き込む <see cref="T:System.Guid" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.TimeSpan)">
      <summary>
        <see cref="T:System.TimeSpan" /> 値を書き込みます。</summary>
      <param name="value">書き込む <see cref="T:System.TimeSpan" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.IStreamProvider)">
      <summary>
        <see cref="T:System.Xml.IStreamProvider" /> から値を書き込みます。</summary>
      <param name="value">書き込む <see cref="T:System.Xml.IStreamProvider" /> 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
      <exception cref="T:System.Xml.XmlException">
        <paramref name="value" /> が <see langword="null" /> ストリーム オブジェクトを返します。</exception>
      <exception cref="T:System.InvalidOperationException">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.UniqueId)">
      <summary>一意の ID 値を書き込みます。</summary>
      <param name="value">書き込む一意の ID 値。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValue(System.Xml.XmlDictionaryString)">
      <summary>
        <see cref="T:System.Xml.XmlDictionaryString" /> 値を書き込みます。</summary>
      <param name="value">
        <see cref="T:System.Xml.XmlDictionaryString" /> 値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteValueAsync(System.Xml.IStreamProvider)">
      <summary>
        <see cref="T:System.Xml.IStreamProvider" /> の値を非同期に書き込みます。</summary>
      <param name="value">書き込む <see cref="T:System.Xml.IStreamProvider" /> 値。</param>
      <exception cref="T:System.InvalidOperationException">先行の非同期操作が完了する前に、<see cref="T:System.Xml.XmlDictionaryWriter" /> メソッドが呼び出されました。 この場合、「非同期操作が既に実行されています」というメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。

- または -

<see cref="P:System.Xml.XmlWriterSettings.Async" /> フラグを <see langword="true" /> に設定せずに、<see cref="T:System.Xml.XmlDictionaryWriter" /> 非同期メソッドが呼び出されました。 この場合、非同期メソッドを使用するには XmlWriterSettings.Async を true に設定する必要があることを示すメッセージと共に <see cref="T:System.InvalidOperationException" /> がスローされます。</exception>
      <returns>非同期の <see langword="WriteValue" /> 操作を表すタスク。</returns>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.String,System.String)">
      <summary>現在のノードに標準 XML 属性を書き込みます。</summary>
      <param name="localName">属性のローカル名。</param>
      <param name="value">属性の値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlAttribute(System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>現在のノードに XML 属性を書き込みます。</summary>
      <param name="localName">属性のローカル名。</param>
      <param name="value">属性の値。</param>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.String)">
      <summary>名前空間の宣言属性を書き込みます。</summary>
      <param name="prefix">指定された名前空間にバインドされるプレフィックス。</param>
      <param name="namespaceUri">プレフィックスがバインドされる名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
    </member>
    <member name="M:System.Xml.XmlDictionaryWriter.WriteXmlnsAttribute(System.String,System.Xml.XmlDictionaryString)">
      <summary>名前空間の宣言属性を書き込みます。</summary>
      <param name="prefix">指定された名前空間にバインドされるプレフィックス。</param>
      <param name="namespaceUri">プレフィックスがバインドされる名前空間。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="namespaceUri" /> が <see langword="null" />です。</exception>
    </member>
    <member name="P:System.Xml.XmlDictionaryWriter.CanCanonicalize">
      <summary>このプロパティは常に <see langword="false" /> を返します。 その派生クラスが正規化をサポートする場合は、<see langword="true" /> を返すようにオーバーライドできます。</summary>
      <returns>常に <see langword="false" />。</returns>
    </member>
  </members>
</doc>