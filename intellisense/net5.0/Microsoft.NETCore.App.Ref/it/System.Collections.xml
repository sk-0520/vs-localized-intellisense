<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections</name>
  </assembly>
  <members>
    <member name="T:System.Collections.BitArray">
      <summary>Gestisce una matrice compatta di valori di bit, rappresentati come booleani, dove <see langword="true" /> indica che il bit è attivo (1), mentre <see langword="false" /> indica che il bit è inattivo (0).</summary>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Boolean[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori booleani.</summary>
      <param name="values">Matrice di valori Boolean da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Byte[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice di byte specificata.</summary>
      <param name="bytes">Matrice di byte contenente i valori da copiare, dove ogni byte rappresenta 8 bit consecutivi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bytes" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="bytes" /> è maggiore di <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che contiene i valori di bit copiati dall'oggetto <see cref="T:System.Collections.BitArray" /> specificato.</summary>
      <param name="bits">Oggetto <see cref="T:System.Collections.BitArray" /> da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bits" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit, inizialmente impostato su <see langword="false" />.</summary>
      <param name="length">Il numero di valori di bit nella nuova <see cref="T:System.Collections.BitArray" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> che può contenere il numero specificato di valori di bit, inizialmente impostato sul valore specificato.</summary>
      <param name="length">Numero di valori di bit nel nuovo oggetto <see cref="T:System.Collections.BitArray" />.</param>
      <param name="defaultValue">Il valore Boolean da assegnare a ogni bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.BitArray.#ctor(System.Int32[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.BitArray" /> contenente i valori di bit copiati dalla matrice specificata di valori interi a 32 bit.</summary>
      <param name="values">Matrice di valori interi contenente i valori da copiare, dove ogni valore rappresenta 32 bit consecutivi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">La lunghezza di <paramref name="values" /> è maggiore di <see cref="F:System.Int32.MaxValue" /></exception>
    </member>
    <member name="M:System.Collections.BitArray.And(System.Collections.BitArray)">
      <summary>Esegue l'operazione con AND bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con AND bit per bit.</summary>
      <param name="value">Matrice con cui eseguire l'operazione AND bit per bit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> e l'oggetto <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
      <returns>Matrice contenente il risultato dell'operazione con AND bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Clone">
      <summary>Crea una copia superficiale di <see cref="T:System.Collections.BitArray" />.</summary>
      <returns>Copia superficiale di <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.BitArray" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.BitArray" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.BitArray" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
      <exception cref="T:System.InvalidCastException">Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.BitArray" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.BitArray.Get(System.Int32)">
      <summary>Ottiene il valore del bit in una posizione specifica nella <see cref="T:System.Collections.BitArray" />.</summary>
      <param name="index">Indice in base zero del valore da ottenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
  
-oppure- 
 <paramref name="index" /> è maggiore o uguale al numero di elementi della <see cref="T:System.Collections.BitArray" />.</exception>
      <returns>Il valore del bit nella posizione <paramref name="index" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.BitArray" />.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per l'intero oggetto <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="M:System.Collections.BitArray.LeftShift(System.Int32)">
      <summary>Sposta tutti i valori di bit dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente a sinistra del numero di bit specificato da <paramref name="count" />.</summary>
      <param name="count">Numero di spostamenti da effettuare per ogni bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> è minore di zero.</exception>
      <returns>Oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Not">
      <summary>Consente di invertire tutti i valori dei bit nella <see cref="T:System.Collections.BitArray" /> corrente in modo che gli elementi impostati su <see langword="true" /> diventino <see langword="false" /> e gli elementi impostati su <see langword="false" /> diventino <see langword="true" />.</summary>
      <returns>Istanza corrente con i valori di bit invertiti.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Or(System.Collections.BitArray)">
      <summary>Esegue l'operazione con OR bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR bit per bit.</summary>
      <param name="value">Matrice con cui eseguire l'operazione OR bit per bit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> e l'oggetto <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
      <returns>Matrice contenente il risultato dell'operazione con OR bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.BitArray.RightShift(System.Int32)">
      <summary>Sposta tutti i valori di bit dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente a destra di un numero di bit pari a <paramref name="count" />.</summary>
      <param name="count">Numero di spostamenti da effettuare per ogni bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="count" /> è minore di zero.</exception>
      <returns>Oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)">
      <summary>Imposta il bit in una posizione specifica nell'oggetto <see cref="T:System.Collections.BitArray" /> sul valore specificato.</summary>
      <param name="index">Indice in base zero del bit da impostare.</param>
      <param name="value">Valore Boolean da assegnare al bit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
  
-oppure- 
 <paramref name="index" /> è maggiore o uguale al numero di elementi nell'oggetto <see cref="T:System.Collections.BitArray" />.</exception>
    </member>
    <member name="M:System.Collections.BitArray.SetAll(System.Boolean)">
      <summary>Imposta tutti i bit dell'oggetto <see cref="T:System.Collections.BitArray" /> sul valore specificato.</summary>
      <param name="value">Valore Boolean da assegnare a tutti i bit.</param>
    </member>
    <member name="M:System.Collections.BitArray.Xor(System.Collections.BitArray)">
      <summary>Esegue l'operazione con OR esclusivo bit per bit tra gli elementi dell'oggetto <see cref="T:System.Collections.BitArray" /> corrente e gli elementi corrispondenti nella matrice specificata. L'oggetto <see cref="T:System.Collections.BitArray" /> corrente verrà modificato per archiviare il risultato dell'operazione con OR esclusivo bit per bit.</summary>
      <param name="value">La matrice con la quale eseguire l'operazione OR esclusivo bit per bit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> e l'oggetto <see cref="T:System.Collections.BitArray" /> corrente non contengono lo stesso numero di elementi.</exception>
      <returns>Matrice contenente il risultato dell'operazione con OR esclusivo bit per bit, che è un riferimento all'oggetto <see cref="T:System.Collections.BitArray" /> corrente.</returns>
    </member>
    <member name="P:System.Collections.BitArray.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.BitArray" /> è di sola lettura.</summary>
      <returns>Questa proprietà è sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.BitArray" /> è sincronizzato (thread-safe).</summary>
      <returns>Questa proprietà è sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.Item(System.Int32)">
      <summary>Ottiene o imposta il valore del bit in una specifica posizione nella <see cref="T:System.Collections.BitArray" />.</summary>
      <param name="index">Indice in base zero del valore da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.BitArray.Count" />.</exception>
      <returns>Il valore del bit nella posizione <paramref name="index" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.Length">
      <summary>Ottiene o imposta il numero di elementi nell'oggetto <see cref="T:System.Collections.BitArray" />.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">La proprietà è impostata su un valore minore di zero.</exception>
      <returns>Numero di elementi in <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="P:System.Collections.BitArray.SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.BitArray" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.CollectionExtensions">
      <summary>Fornisce metodi di estensione per le raccolte generiche.</summary>
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)">
      <summary>Tenta di ottenere il valore associato alla chiave specificata da <paramref name="key" /> in <paramref name="dictionary" />.</summary>
      <param name="dictionary">Dizionario con chiavi di tipo <typeparamref name="TKey" /> e valori di tipo <typeparamref name="TValue" />.</param>
      <param name="key">Chiave del valore da ottenere.</param>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <returns>Istanza di <typeparamref name="TValue" />. Quando il metodo ha esito positivo, l'oggetto restituito è il valore associato alla chiave specificata da <paramref name="key" />. Quando il metodo ha esito negativo, restituisce il valore <see langword="default" /> per <typeparamref name="TValue" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)">
      <summary>Tenta di ottenere il valore associato alla chiave specificata in <paramref name="dictionary" />.</summary>
      <param name="dictionary">Dizionario con chiavi di tipo <typeparamref name="TKey" /> e valori di tipo <typeparamref name="TValue" />.</param>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="defaultValue">Valore predefinito da restituire quando <paramref name="dictionary" /> non riesce a trovare un valore associato alla chiave specificata da <paramref name="key" />.</param>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <returns>Istanza di <typeparamref name="TValue" />. Quando il metodo ha esito positivo, l'oggetto restituito è il valore associato alla chiave specificata da <paramref name="key" />. Quando il metodo ha esito negativo, restituisce <paramref name="defaultValue" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.Remove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)">
      <summary>Tenta di rimuovere il valore con la chiave specificata da <paramref name="key" /> da <paramref name="dictionary" />.</summary>
      <param name="dictionary">Dizionario con chiavi di tipo <typeparamref name="TKey" /> e valori di tipo <typeparamref name="TValue" />.</param>
      <param name="key">Chiave del valore da rimuovere.</param>
      <param name="value">Quando questo metodo restituisce <see langword="true" />, il valore rimosso. Quando questo metodo restituisce <see langword="false" />, il valore <see langword="default" /> per <typeparamref name="TValue" />.</param>
      <typeparam name="TKey">Tipo di chiavi contenute nell’oggetto <paramref name="dictionary" />.</typeparam>
      <typeparam name="TValue">Tipo dei valori nell’oggetto <paramref name="dictionary" />.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> quando viene trovato un valore in <paramref name="dictionary" /> con la chiave specificata da <paramref name="key" />. <see langword="false" /> quando <paramref name="dictionary" /> non riesce a trovare un valore associato alla chiave specificata da <paramref name="key" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.CollectionExtensions.TryAdd``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
      <summary>Tenta di aggiungere la chiave specificata da <paramref name="key" /> e <paramref name="value" /> a <paramref name="dictionary" />.</summary>
      <param name="dictionary">Dizionario con chiavi di tipo <typeparamref name="TKey" /> e valori di tipo <typeparamref name="TValue" />.</param>
      <param name="key">Chiave del valore da aggiungere.</param>
      <param name="value">Il valore da aggiungere.</param>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> quando <paramref name="key" /> e <paramref name="value" /> vengono aggiunti correttamente a <paramref name="dictionary" />. <see langword="false" /> quando <paramref name="dictionary" /> contiene già la chiave specificata da <paramref name="key" />, nel qual caso non viene aggiunto alcun elemento.</returns>
    </member>
    <member name="T:System.Collections.Generic.Comparer`1">
      <summary>Fornisce una classe base per le implementazioni dell'interfaccia generica <see cref="T:System.Collections.Generic.IComparer`1" />.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Comparer`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
      <summary>Quando è sottoposto a override in una classe derivata, esegue un confronto tra due oggetti dello stesso tipo e restituisce un valore che indica se un oggetto è minore, uguale o maggiore dell'altro.</summary>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <exception cref="T:System.ArgumentException">Il tipo <paramref name="T" /> non implementa l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore</term><description> Significato</description></listheader><item><term> Minore di zero</term><description><paramref name="x" /> è minore di <paramref name="y" />.</description></item><item><term> Zero</term><description><paramref name="x" /> è uguale a <paramref name="y" />.</description></item><item><term> Maggiore di zero</term><description><paramref name="x" /> è maggiore di <paramref name="y" />.</description></item></list></returns>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})">
      <summary>Crea un operatore di confronto utilizzando il confronto specificato.</summary>
      <param name="comparison">Confronto da utilizzare.</param>
      <returns>Nuovo operatore di confronto.</returns>
    </member>
    <member name="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <summary>Confronta due oggetti e restituisce un valore indicante se uno è minore, uguale o maggiore dell'altro.</summary>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="x" /> o <paramref name="y" /> non consente di effettuare il cast al tipo <paramref name="T" />.  
  
-oppure- 
 I parametri <paramref name="x" /> e <paramref name="y" /> non implementano l'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" />.</exception>
      <returns>Intero con segno che indica i valori relativi di <paramref name="x" /> e <paramref name="y" />, come illustrato nella tabella seguente.  
  
 <list type="table"><listheader><term> Valore</term><description> Significato</description></listheader><item><term> Minore di zero</term><description><paramref name="x" /> è minore di <paramref name="y" />.</description></item><item><term> Zero</term><description><paramref name="x" /> è uguale a <paramref name="y" />.</description></item><item><term> Maggiore di zero</term><description><paramref name="x" /> è maggiore di <paramref name="y" />.</description></item></list></returns>
    </member>
    <member name="P:System.Collections.Generic.Comparer`1.Default">
      <summary>Restituisce un operatore di confronto di ordinamento predefinito per il tipo specificato dall'argomento generico.</summary>
      <returns>Oggetto che eredita l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> e viene utilizzato come un operatore di confronto di ordinamento per il tipo <paramref name="T" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2">
      <summary>Rappresenta una raccolta di chiavi e valori.</summary>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale predefinita e che usa l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e che usa l'operatore di confronto uguaglianze predefinito per il tipo di chiave.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e che usa l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> indicata.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinito per il tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene gli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> specificato.</summary>
      <param name="collection">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi vengono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="collection" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IEnumerable`1" /> specificata e che utilizza l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> indicata.</summary>
      <param name="collection">Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinito per il tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="collection" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificata.</summary>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinito per il tipo di chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con capacità iniziale specificata e che usa l'operatore di confronto di eguaglianza predefinito per il tipo di chiave.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Dictionary`2" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.Dictionary`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> specificata.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Dictionary`2" /> può contenere.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinito per il tipo di chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2" /> con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato alla classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Add(`0,`1)">
      <summary>Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Clear">
      <summary>Rimuove tutte le chiavi e i valori della raccolta <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
      <summary>Determina se la raccolta <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un valore specifico.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.Dictionary`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)">
      <summary>Assicura che il dizionario possa contenere fino a un numero specificato di voci senza che sia necessario espandere lo spazio di archiviazione sottostante.</summary>
      <param name="capacity">Numero di voci.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di 0.</exception>
      <returns>Capacità corrente di <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>Struttura <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" /> della raccolta <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.Dictionary`2" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
      <summary>Rimuove il valore con la chiave specificata dall'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'elemento viene trovato e rimosso; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non viene trovato in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Remove(`0,`1@)">
      <summary>Rimuove il valore con la chiave specificata da <see cref="T:System.Collections.Generic.Dictionary`2" /> e copia l'elemento nel parametro <paramref name="value" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <param name="value">Elemento rimosso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'elemento viene trovato e rimosso; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Aggiunge il valore specificato all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> con la chiave specificata.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che rappresenta la chiave e il valore da aggiungere alla raccolta <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">La chiave di <paramref name="keyValuePair" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene una coppia chiave/valore specifica.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" />, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che costituisce la destinazione degli elementi <see cref="T:System.Collections.Generic.KeyValuePair`2" /> copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Rimuove una chiave e un valore dal dizionario.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> che rappresenta la chiave e il valore da rimuovere da <see cref="T:System.Collections.Generic.Dictionary`2" />.</param>
      <returns>
        <see langword="true" /> se la chiave e il valore rappresentati da <paramref name="keyValuePair" /> vengono trovati e rimossi; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non viene trovato in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non dispone di indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Aggiunge la chiave e il valore specificati al dizionario.</summary>
      <param name="key">Oggetto da usare come chiave.</param>
      <param name="value">Oggetto da utilizzare come valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.  
  
-oppure- 
 Il tipo del valore indicato nel parametro <paramref name="value" /> non è assegnabile al tipo di valore <paramref name="TValue" /> dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" />.  
  
-oppure- 
nell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> è già presente un valore con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TrimExcess">
      <summary>Imposta la capacità di questo dizionario sul valore che avrebbe avuto se il dizionario fosse stato inizializzato in origine con tutte le voci.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)">
      <summary>Imposta la capacità del dizionario in modo che possa contenere fino a un numero specificato di voci senza la necessità di alcuna espansione dello spazio di archiviazione sottostante.</summary>
      <param name="capacity">La nuova capacità.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di <see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)">
      <summary>Tenta di aggiungere la chiave e il valore specificati al dizionario.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Può essere <see langword="null" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se la coppia chiave/valore è stata aggiunta al dizionario correttamente. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario restituisce il valore predefinito per il tipo di parametro <paramref name="value" />. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.Dictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Comparer">
      <summary>Ottiene l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, che viene usato per determinare l'uguaglianza delle chiavi per il dizionario.</summary>
      <returns>Implementazione dell'interfaccia generica <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> che viene usata per determinare l'uguaglianza fra chiavi del dizionario <see cref="T:System.Collections.Generic.Dictionary`2" /> corrente e per fornire i valori hash delle chiavi.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Count">
      <summary>Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Item(`0)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La proprietà viene recuperata e <paramref name="key" /> non esiste nella raccolta.</exception>
      <returns>Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione Get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione Set crea una nuovo elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Keys">
      <summary>Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary>Ottiene un valore che indica se il dizionario è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <paramref name="TKey" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> di tipo <paramref name="TValue" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary>Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</summary>
      <returns>Raccolta contenente le chiavi di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary>Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</summary>
      <returns>Raccolta contenente i valori di <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Ottiene un valore che indica se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di dimensioni fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ottiene o imposta il valore con la chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> costruito in modo predefinito è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.Dictionary`2" />.  
  
-oppure- 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.Dictionary`2" />.</exception>
      <returns>Valore associato alla chiave specificata o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> di <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Keys">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.System#Collections#IDictionary#Values">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Values">
      <summary>Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> contenente i valori di <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento del dizionario nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Collections.DictionaryEntry" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>Ottiene la chiave dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Chiave dell'elemento del dizionario nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>Ottiene il valore dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Valore dell'elemento del dizionario nella posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.KeyCollection">
      <summary>Rappresenta la raccolta di chiavi in <see cref="T:System.Collections.Generic.Dictionary`2" />. La classe non può essere ereditata.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in cui sono riprodotte le chiavi dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2" /> specificato.</summary>
      <param name="dictionary">Classe <see cref="T:System.Collections.Generic.Dictionary`2" /> le cui chiavi vengono riprodotte nella nuova classe <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" /> per <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se l'elemento non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.  
  
Il recupero del valore di questa proprietà è un'operazione O(1).</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.ValueCollection">
      <summary>Rappresenta la raccolta di valori in un oggetto <see cref="T:System.Collections.Generic.Dictionary`2" />. La classe non può essere ereditata.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in cui sono riprodotti i valori dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> specificato.</summary>
      <param name="dictionary">Insieme <see cref="T:System.Collections.Generic.Dictionary`2" /> i cui valori sono riportati nel nuovo oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" /> per <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Sempre generato.</exception>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="item" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="true" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.EqualityComparer`1">
      <summary>Fornisce una classe base per le implementazioni dell'interfaccia generica <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.</summary>
      <typeparam name="T">Tipo di oggetti da confrontare.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.EqualityComparer`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
      <summary>Quando sottoposto a override in una classe derivata, determina se due oggetti di tipo <typeparamref name="T" /> sono uguali.</summary>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se gli oggetti specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
      <summary>Quando ne viene eseguito l'override in una classe derivata, viene usato come funzione hash dell'oggetto specificato per gli algoritmi e le strutture di dati hash, come ad esempio una tabella hash.</summary>
      <param name="obj">Oggetto per il quale ottenere un codice hash.</param>
      <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.</exception>
      <returns>Codice hash per l'oggetto specificato.</returns>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
      <summary>Determina se gli oggetti specificati sono uguali.</summary>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <exception cref="T:System.ArgumentException">Il tipo del parametro <paramref name="x" /> o <paramref name="y" /> non consente di effettuare il cast al tipo <typeparamref name="T" />.</exception>
      <returns>
        <see langword="true" /> se gli oggetti specificati sono uguali; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
      <summary>Viene restituito un codice hash per l'oggetto specificato.</summary>
      <param name="obj">Oggetto <see cref="T:System.Object" /> per cui è necessario che sia restituito un codice hash.</param>
      <exception cref="T:System.ArgumentNullException">Il tipo di <paramref name="obj" /> è un tipo di riferimento e <paramref name="obj" /> è <see langword="null" />.  
  
-oppure- 
 Il tipo del parametro <paramref name="obj" /> non consente di effettuare il cast al tipo <typeparamref name="T" />.</exception>
      <returns>Codice hash per l'oggetto specificato.</returns>
    </member>
    <member name="P:System.Collections.Generic.EqualityComparer`1.Default">
      <summary>Restituisce un operatore di confronto uguaglianze predefinito per il tipo specificato dall'argomento generico.</summary>
      <returns>Istanza predefinita della classe <see cref="T:System.Collections.Generic.EqualityComparer`1" /> per il tipo <typeparamref name="T" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1">
      <summary>Rappresenta un insieme di valori.</summary>
      <typeparam name="T">Tipo di elementi contenuti nel set di hash.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.HashSet`1" /> e usa l'operatore di confronto per l'uguaglianza per il tipo di insieme.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza per il tipo di insieme, contiene gli elementi copiati dalla raccolta specificata e presenta una capacità sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection">Raccolta i cui elementi vengono copiati nel nuovo insieme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza specificato per il tipo di insieme, contiene gli elementi copiati dalla raccolta specificata e ha una capacità sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection">Raccolta i cui elementi vengono copiati nel nuovo insieme.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure <see langword="null" /> per usare l'implementazione di <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita per il tipo di set.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.HashSet`1" /> e usa l'operatore di confronto per l'uguaglianza specificato per il tipo di insieme.</summary>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure <see langword="null" /> per usare l'implementazione di <see cref="T:System.Collections.Generic.EqualityComparer`1" /> predefinita per il tipo di set.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" />, che è vuota ma include spazio riservato per <paramref name="capacity" /> e usa l'operatore di confronto per l'uguaglianza per il tipo di set.</summary>
      <param name="capacity">Dimensioni iniziali dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /></param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> che usa l'operatore di confronto per l'uguaglianza specificato per il tipo di set e ha una capacità sufficiente a contenere gli elementi <paramref name="capacity" />.</summary>
      <param name="capacity">Dimensioni iniziali dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /></param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> da usare per confrontare i valori nel set oppure null (Nothing in Visual Basic) per usare l'implementazione predefinita di <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> per il tipo di set.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.HashSet`1" /> con dati serializzati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Add(`0)">
      <summary>Aggiunge l'elemento specificato a un insieme.</summary>
      <param name="item">Elemento da aggiungere all'insieme.</param>
      <returns>
        <see langword="true" /> se l'elemento viene aggiunto all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />, <see langword="false" /> se l'elemento è già presente.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Clear">
      <summary>Rimuove tutti gli elementi da un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Contains(`0)">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> contiene l'elemento specificato.</summary>
      <param name="item">Elemento da individuare nell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> contiene l'elemento specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[])">
      <summary>Copia gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice, a partire da un indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> è maggiore della lunghezza del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copia il numero specificato di elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> in una matrice, a partire da un indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count">Numero di elementi da copiare in <paramref name="array" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="arrayIndex" /> è maggiore della lunghezza del parametro <paramref name="array" /> di destinazione.  
  
-oppure- 
 <paramref name="count" /> è maggiore dello spazio disponibile da <paramref name="index" /> alla fine del parametro <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.CreateSetComparer">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per test di uguaglianza di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per test di uguaglianza approfonditi dell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.EnsureCapacity(System.Int32)">
      <summary>Garantisce che questo set di hash possa conservare il numero specificato di elementi senza aumentare.</summary>
      <param name="capacity">Capacità minima da garantire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
      <returns>Nuova capacità di questa istanza.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove tutti gli elementi della raccolta specificata dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="other">Raccolta di elementi da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari per serializzare un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente per contenere solo elementi presenti in tale oggetto e nella raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset corretto della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset corretto di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset corretto della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset corretto di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un subset di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è un superset di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all’oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente e una raccolta specificata condividono elementi comuni.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> e il parametro <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Remove(`0)">
      <summary>Rimuove l'elemento specificato da un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="item">Elemento da rimuovere.</param>
      <returns>
        <see langword="true" /> se l'elemento viene trovato e rimosso; in caso contrario, <see langword="false" />.  Questo metodo restituisce <see langword="false" /> se <paramref name="item" /> non viene trovato nell'oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato da una raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Numero di elementi rimossi dalla raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> e la raccolta specificata contengono gli stessi elementi.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> è uguale a <paramref name="other" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente in modo che contenga solo elementi presenti in tale oggetto o nella raccolta specificata, ma non entrambi.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento a un oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TrimExcess">
      <summary>Imposta la capacità di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> sul numero effettivo di elementi che contiene, arrotondato per eccesso a un valore vicino specifico dell'implementazione.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.TryGetValue(`0,`0@)">
      <summary>Cerca un determinato valore nel set e restituisce il valore uguale eventualmente trovato.</summary>
      <param name="equalValue">Valore da cercare.</param>
      <param name="actualValue">Valore del set trovato dalla ricerca oppure il valore predefinito di T se la ricerca non ha restituito alcuna corrispondenza.</param>
      <returns>Valore che indica se la ricerca è stata eseguita correttamente.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente per contenere tutti gli elementi presenti in tale oggetto, nella raccolta specificata o in entrambi.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.HashSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Comparer">
      <summary>Ottiene l'oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" />, che viene usato per determinare l'uguaglianza dei valori nell'insieme.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> usato per determinare l'uguaglianza dei valori nell'insieme.</returns>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Count">
      <summary>Ottiene il numero di elementi contenuti in un insieme.</summary>
      <returns>Numero di elementi contenuti nell'insieme.</returns>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se una raccolta è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.HashSet`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse utilizzate da un oggetto <see cref="T:System.Collections.Generic.HashSet`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo della raccolta <see cref="T:System.Collections.Generic.HashSet`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento della raccolta <see cref="T:System.Collections.Generic.HashSet`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta nella posizione corrente dell'enumeratore, restituito come un oggetto <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1">
      <summary>Rappresenta un elenco a doppio collegamento.</summary>
      <typeparam name="T">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> contenente gli elementi copiati dalla classe <see cref="T:System.Collections.IEnumerable" /> specificata e la cui capacità è sufficiente a contenere il numero di elementi copiati.</summary>
      <param name="collection">Oggetto <see cref="T:System.Collections.IEnumerable" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedList`1" /> serializzabile con gli oggetti <see cref="T:System.Runtime.Serialization.SerializationInfo" /> e <see cref="T:System.Runtime.Serialization.StreamingContext" /> specificati.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente l'origine e la destinazione del flusso serializzato associato a <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Aggiunge un nuovo nodo che contiene il valore specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato dopo il nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dopo il quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="newNode" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.  
  
-oppure- 
 <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
      <summary>Aggiunge un nuovo nodo che contiene il valore specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale viene inserito un nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</param>
      <param name="value">Valore da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato prima del nodo esistente indicato nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> prima del quale inserire il nuovo nodo indicato nel parametro <paramref name="newNode" />.</param>
      <param name="newNode">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.  
  
-oppure- 
 <paramref name="newNode" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.  
  
-oppure- 
 <paramref name="newNode" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
      <summary>Aggiunge un nuovo nodo contenente il valore specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value">Valore da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nuovo nodo specificato all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
      <summary>Aggiunge un nuovo nodo contenente il valore specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns>Nuovo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore indicato nel parametro <paramref name="value" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Aggiunge il nodo specificato alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Nuovo oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> appartiene a un altro oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Clear">
      <summary>Rimuove tutti i nodi dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
      <summary>Determina se un valore è incluso nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <paramref name="value" /> è presente in <see cref="T:System.Collections.Generic.LinkedList`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> in un oggetto <see cref="T:System.Array" /> compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
      <summary>Trova il primo nodo che contiene il valore specificato.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns>Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
      <summary>Trova l'ultimo nodo che contiene il valore specificato.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns>Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente il valore specificato, se presente; in caso contrario, <see langword="null" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.LinkedList`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
      <summary>Rimuove dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> la prima occorrenza del valore specificato.</summary>
      <param name="value">Valore da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <returns>
        <see langword="true" /> se l'elemento contenente il valore indicato nel parametro <paramref name="value" /> viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="value" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.LinkedList`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
      <summary>Rimuove il nodo specificato da <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="node">Oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> da rimuovere da <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="node" /> non è presente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> corrente.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveFirst">
      <summary>Rimuove il nodo all'inizio dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.RemoveLast">
      <summary>Rimuove il nodo alla fine dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.LinkedList`1" /> è vuota.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="value">Valore da aggiungere alla fine dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere l'elenco collegato come una raccolta.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzata per scorrere l'elenco collegato come una raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Count">
      <summary>Ottiene il numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Numero di nodi effettivamente contenuti nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.First">
      <summary>Ottiene il primo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Primo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Last">
      <summary>Ottiene l'ultimo nodo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Ultimo nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" /> dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.LinkedList`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedList`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.LinkedList`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta. La classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.LinkedList`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.LinkedList`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.LinkedListNode`1">
      <summary>Rappresenta un nodo in una <see cref="T:System.Collections.Generic.LinkedList`1" />. La classe non può essere ereditata.</summary>
      <typeparam name="T">Specifica il tipo di elemento dell'elenco collegato.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.LinkedListNode`1.#ctor(`0)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.LinkedListNode`1" /> contenente i dati specificati.</summary>
      <param name="value">Valore contenuto nell'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</param>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.List">
      <summary>Ottiene l'insieme <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene il nodo <see cref="T:System.Collections.Generic.LinkedListNode`1" />.</summary>
      <returns>Riferimento all'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" /> a cui appartiene l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> oppure <see langword="null" /> se l'oggetto <see cref="T:System.Collections.Generic.LinkedListNode`1" /> non è collegato.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
      <summary>Ottiene il nodo successivo dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Riferimento al nodo successivo nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, or <see langword="null" /> se il nodo corrente è l'ultimo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.Last" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
      <summary>Ottiene il nodo precedente dell'insieme <see cref="T:System.Collections.Generic.LinkedList`1" />.</summary>
      <returns>Riferimento al nodo precedente nell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />, or <see langword="null" /> se il nodo corrente è primo elemento (<see cref="P:System.Collections.Generic.LinkedList`1.First" />) dell'oggetto <see cref="T:System.Collections.Generic.LinkedList`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.Value">
      <summary>Ottiene il valore contenuto nel nodo.</summary>
      <returns>Valore contenuto nel nodo.</returns>
    </member>
    <member name="P:System.Collections.Generic.LinkedListNode`1.ValueRef">
      <summary>Ottiene un riferimento al valore contenuto nel nodo.</summary>
      <returns>Riferimento al valore utilizzato dal nodo.</returns>
    </member>
    <member name="T:System.Collections.Generic.List`1">
      <summary>Rappresenta un elenco di oggetti fortemente tipizzato accessibile per indice. Fornisce metodi per la ricerca, l'ordinamento e la modifica degli elenchi.</summary>
      <typeparam name="T">Tipo degli elementi nell'elenco.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection">Raccolta i cui elementi vengono copiati nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.List`1" /> vuota e con capacità iniziale specificata.</summary>
      <param name="capacity">Numero di elementi che possono essere archiviati inizialmente nel nuovo elenco.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di 0.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Add(`0)">
      <summary>Aggiunge un oggetto alla fine di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item">Oggetto da aggiungere alla fine di <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
      <summary>Aggiunge gli elementi della raccolta specificata alla fine di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="collection">Raccolta i cui elementi devono essere aggiunti alla fine di <see cref="T:System.Collections.Generic.List`1" />. La raccolta non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />, se il tipo <paramref name="T" /> è un tipo di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.AsReadOnly">
      <summary>Restituisce un wrapper <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> di sola lettura per la raccolta corrente.</summary>
      <returns>Oggetto che fa da wrapper di sola lettura per l'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(`0)">
      <summary>Cerca un elemento nell'intero <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto predefinito e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="item">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.InvalidOperationException">L'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
      <returns>Indice in base zero di <paramref name="item" /> nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se <paramref name="item" /> viene trovato; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
      <summary>Cerca un elemento nell'intero <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="item">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano gli elementi.  
  
-oppure- 
 <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto predefinito.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
      <returns>Indice in base zero di <paramref name="item" /> nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se <paramref name="item" /> viene trovato; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
      <summary>Cerca un elemento in un intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato usando l'operatore di confronto specificato e restituisce l'indice in base zero dell'elemento.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo in cui eseguire la ricerca.</param>
      <param name="count">Lunghezza dell'intervallo in cui eseguire la ricerca.</param>
      <param name="item">Oggetto da individuare. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
      <returns>Indice in base zero di <paramref name="item" /> nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> ordinato, se <paramref name="item" /> viene trovato; in caso contrario, un numero negativo che rappresenta il complemento bit per bit dell'indice dell'elemento successivo maggiore di <paramref name="item" /> o, se non è disponibile alcun elemento maggiore, il complemento bit per bit di <see cref="P:System.Collections.Generic.List`1.Count" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.List`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.List`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
      <summary>Converte gli elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente in un altro tipo e restituisce un elenco contenente gli elementi convertiti.</summary>
      <param name="converter">Delegato <see cref="T:System.Converter`2" /> che converte ogni elemento da un tipo in un altro.</param>
      <typeparam name="TOutput">Tipo degli elementi della matrice di destinazione.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="converter" /> è <see langword="null" />.</exception>
      <returns>Oggetto <see cref="T:System.Collections.Generic.List`1" /> del tipo di destinazione contenente gli elementi convertiti dall'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrente.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(`0[])">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore del numero di elementi che l'oggetto <paramref name="array" /> di destinazione può contenere.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>Copia un intervallo di elementi da <see cref="T:System.Collections.Generic.List`1" /> in una matrice compatibile unidimensionale, a partire dall'indice specificato della matrice di destinazione.</summary>
      <param name="index">Indice in base zero dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine a partire dal quale viene effettuata la copia.</param>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.List`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="arrayIndex" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> è maggiore o uguale al valore di <see cref="P:System.Collections.Generic.List`1.Count" /> dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine.  
  
-oppure- 
Il numero di elementi da <paramref name="index" /> alla fine dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> di origine è maggiore dello spazio disponibile da <paramref name="arrayIndex" /> alla fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
      <summary>Determina se <see cref="T:System.Collections.Generic.List`1" /> contiene gli elementi che corrispondono alle condizioni definite dal predicato specificato.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.List`1" /> contiene uno o più elementi che corrispondono alle condizioni definite dal predicato specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce la prima occorrenza all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Primo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; in caso contrario, viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
      <summary>Recupera tutti gli elementi che soddisfano le condizioni definite nel predicato specificato.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Oggetto <see cref="T:System.Collections.Generic.List`1" /> contenente tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato, se presente; in caso contrario, un oggetto <see cref="T:System.Collections.Generic.List`1" /> vuoto.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia dall'indice specificato e contiene il numero indicato di elementi.</summary>
      <param name="startIndex">Indice iniziale in base zero della ricerca.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.  
  
-oppure- 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <param name="startIndex">Indice iniziale in base zero della ricerca.</param>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
      <summary>Cerca un elemento che corrisponda alle condizioni definite dal predicato specificato e restituisce l'indice in base zero della prima occorrenza all'interno di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Indice in base zero della prima occorrenza di un elemento che corrisponde alle condizioni definite da <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite nel predicato specificato e restituisce l'ultima occorrenza all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Ultimo elemento che soddisfa le condizioni definite dal predicato specificato, se trovato; in caso contrario, viene restituito il valore predefinito del tipo <paramref name="T" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi in <see cref="T:System.Collections.Generic.List`1" /> che contiene il numero indicato di elementi e termina in corrispondenza dell'indice specificato.</summary>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.  
  
-oppure- 
 <paramref name="startIndex" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi in <see cref="T:System.Collections.Generic.List`1" /> compreso tra il primo elemento e l'indice specificato.</summary>
      <param name="startIndex">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
      <summary>Cerca un elemento che soddisfi le condizioni definite dal predicato specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni dell'elemento da cercare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Indice in base zero dell'ultima occorrenza di un elemento che corrisponde alle condizioni definite in <paramref name="match" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
      <summary>Esegue l'azione specificata su ogni elemento di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="action">Delegato <see cref="T:System.Action`1" /> da eseguire su ogni elemento di <see cref="T:System.Collections.Generic.List`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="action" /> è <see langword="null" />.</exception>
      <exception cref="T:System.InvalidOperationException">Un elemento nella raccolta è stato modificato.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.List`1.Enumerator" /> per <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
      <summary>Crea una copia dei riferimenti di un intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> di origine.</summary>
      <param name="index">Indice in base zero di <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza del quale inizia la serie.</param>
      <param name="count">Numero di elementi nell'intervallo.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Copia dei riferimenti di un intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> di origine.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza nell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che è compreso tra l'indice specificato e l'ultimo elemento.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra <paramref name="index" /> e l'ultimo elemento, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intervallo di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia in corrispondenza dell'indice specificato e contiene il numero di elementi specificato.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index">Indice iniziale in base zero della ricerca. 0 (zero) è valido in un elenco vuoto.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero della prima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> che inizia da <paramref name="index" /> e contiene il numero di elementi corrispondente a <paramref name="count" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto da inserire. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
      <summary>Inserisce gli elementi di una raccolta in <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero in corrispondenza del quale devono essere inseriti i nuovi elementi.</param>
      <param name="collection">Raccolta i cui elementi devono essere inseriti in <see cref="T:System.Collections.Generic.List`1" />. La raccolta non può essere <see langword="null" />, ma può contenere elementi <see langword="null" />, se il tipo <paramref name="T" /> è un tipo di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> è maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza nell'intera classe <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" />, se presente; in caso contrario, –1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi nella classe <see cref="T:System.Collections.Generic.List`1" /> che è compresa tra il primo elemento e l'indice specificato.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index">Indice iniziale in base zero della ricerca all'indietro.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi dell'oggetto <see cref="T:System.Collections.Generic.List`1" /> compreso tra il primo elemento e <paramref name="index" />, se presente; in caso contrario, –1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
      <summary>Cerca l'oggetto specificato e restituisce l'indice in base zero dell'ultima occorrenza all'interno dell'intervallo di elementi della classe <see cref="T:System.Collections.Generic.List`1" /> che contiene il numero di elementi specificato e termina in corrispondenza dell'indice specificato.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <param name="index">Indice iniziale in base zero della ricerca all'indietro.</param>
      <param name="count">Numero di elementi nella sezione in cui eseguire la ricerca.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è compreso nell'intervallo di indici validi per <see cref="T:System.Collections.Generic.List`1" />.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> e <paramref name="count" /> non specificano una sezione valida in <see cref="T:System.Collections.Generic.List`1" />.</exception>
      <returns>Indice in base zero dell'ultima occorrenza di <paramref name="item" /> all'interno dell'intervallo di elementi in <see cref="T:System.Collections.Generic.List`1" /> che contiene un numero di elementi corrispondente a <paramref name="count" /> e termina in corrispondenza di <paramref name="index" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.List`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="item" /> non è stato trovato nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
      <summary>Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni degli elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Numero di elementi rimossi da <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
      <summary>Rimuove un intervallo di elementi da <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo di elementi da rimuovere.</param>
      <param name="count">Numero di elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Reverse">
      <summary>Inverte l'ordine degli elementi nell'intero <see cref="T:System.Collections.Generic.List`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
      <summary>Inverte l'ordine degli elementi nell'intervallo specificato.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo da invertire.</param>
      <param name="count">Numero di elementi nell'intervallo da invertire.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non indicano un intervallo valido di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort">
      <summary>Ordina gli elementi dell'intero oggetto <see cref="T:System.Collections.Generic.List`1" /> usando l'operatore di confronto predefinito.</summary>
      <exception cref="T:System.InvalidOperationException">L'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
      <summary>Ordina gli elementi dell'intero <see cref="T:System.Collections.Generic.List`1" /> usando l'operatore di confronto specificato.</summary>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
      <exception cref="T:System.ArgumentException">L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
      <summary>Ordina gli elementi nell'intera classe <see cref="T:System.Collections.Generic.List`1" /> usando l'oggetto <see cref="T:System.Comparison`1" /> specificato.</summary>
      <param name="comparison">Oggetto <see cref="T:System.Comparison`1" /> da usare quando si confrontano gli elementi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparison" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">L'implementazione di <paramref name="comparison" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparison" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary>Ordina gli elementi di un intervallo di elementi di <see cref="T:System.Collections.Generic.List`1" /> usando l'operatore di confronto specificato.</summary>
      <param name="index">Indice iniziale in base zero dell'intervallo da ordinare.</param>
      <param name="count">Lunghezza dell'intervallo da ordinare.</param>
      <param name="comparer">Implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> da usare durante il confronto di elementi oppure <see langword="null" /> per usare la proprietà <see cref="P:System.Collections.Generic.Comparer`1.Default" /> dell'operatore di confronto.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="count" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="index" /> e <paramref name="count" /> non specificano un intervallo valido in <see cref="T:System.Collections.Generic.List`1" />.  
  
-oppure- 
L'implementazione di <paramref name="comparer" /> ha causato un errore durante l'ordinamento. Ad esempio, <paramref name="comparer" /> potrebbe non restituire 0 quando si confronta un elemento con se stesso.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="comparer" /> è <see langword="null" /> e l'operatore di confronto predefinito <see cref="P:System.Collections.Generic.Comparer`1.Default" /> non riesce a trovare l'implementazione dell'interfaccia generica <see cref="T:System.IComparable`1" /> o l'interfaccia <see cref="T:System.IComparable" /> per il tipo <paramref name="T" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.IList" />.</summary>
      <param name="item">Oggetto <see cref="T:System.Object" /> da aggiungere a <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo di <paramref name="item" /> non può essere assegnato a <see cref="T:System.Collections.IList" />.</exception>
      <returns>Posizione in cui è stato inserito il nuovo elemento.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
      <summary>Stabilisce se <see cref="T:System.Collections.IList" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto <see cref="T:System.Object" /> da individuare in <see cref="T:System.Collections.IList" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.IList" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determina l'indice di un elemento specifico in <see cref="T:System.Collections.IList" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo di <paramref name="item" /> non può essere assegnato a <see cref="T:System.Collections.IList" />.</exception>
      <returns>Indice di <paramref name="item" />, se presente nell'elenco; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserisce un elemento in <see cref="T:System.Collections.IList" /> in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero nel quale <paramref name="item" /> deve essere inserito.</param>
      <param name="item">Oggetto da inserire in <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">Il tipo di <paramref name="item" /> non può essere assegnato a <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.IList" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.IList" />.</param>
      <exception cref="T:System.ArgumentException">Il tipo di <paramref name="item" /> non può essere assegnato a <see cref="T:System.Collections.IList" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.List`1.ToArray">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.List`1" /> in una nuova matrice.</summary>
      <returns>Matrice contenente le copie degli elementi di <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.TrimExcess">
      <summary>Imposta la capacità sul numero reale di elementi nell'oggetto <see cref="T:System.Collections.Generic.List`1" />, se tale numero è inferiore a un valore soglia.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
      <summary>Determina se ogni elemento nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrisponde alle condizioni definite dal predicato specificato.</summary>
      <param name="match">Delegato <see cref="T:System.Predicate`1" /> che definisce le condizioni per verificare gli elementi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se ogni elemento nell'oggetto <see cref="T:System.Collections.Generic.List`1" /> corrisponde alle condizioni definite dal predicato specificato; in caso contrario, <see langword="false" />. Se l'elenco è privo di elementi, il valore restituito è <see langword="true" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.Capacity">
      <summary>Ottiene o imposta il numero totale di elementi che la struttura dati interna è in grado di contenere senza alcun ridimensionamento.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="P:System.Collections.Generic.List`1.Capacity" /> è impostato su un valore minore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile nel sistema non è sufficiente.</exception>
      <returns>Numero di elementi che <see cref="T:System.Collections.Generic.List`1" /> può contenere prima che sia necessario un ridimensionamento.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.  
  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.List`1.Count" />.</exception>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.IList" /> sono fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IList" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IList" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.List`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)">
      <summary>Ottiene o imposta l'elemento in corrispondenza dell'indice specificato.</summary>
      <param name="index">Indice in base zero dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> non è un indice valido nell'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <exception cref="T:System.ArgumentException">La proprietà viene impostata e il tipo del parametro <paramref name="value" /> non è assegnabile all'interfaccia <see cref="T:System.Collections.IList" />.</exception>
      <returns>Elemento in corrispondenza dell'indice specificato.</returns>
    </member>
    <member name="T:System.Collections.Generic.List`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.List`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.List`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.List`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.List`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.Queue`1">
      <summary>Rappresenta una raccolta di oggetti FIFO (First-In First-Out).</summary>
      <typeparam name="T">Specifica il tipo di elementi della coda.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection">Raccolta i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Queue`1" /> vuota e con capacità iniziale specificata.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Queue`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Clear">
      <summary>Rimuove tutti gli oggetti da <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.Queue`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.Queue`1" /> in un oggetto <see cref="T:System.Array" /> unidimensionale esistente, partendo dall'indice della matrice specificata.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Queue`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Dequeue">
      <summary>Consente di rimuovere e restituire l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.Queue`1" /> è vuota.</exception>
      <returns>Oggetto rimosso dall'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
      <summary>Aggiunge un oggetto alla fine di <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.Queue`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.Queue`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Peek">
      <summary>Restituisce l'oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> senza rimuoverlo.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.Queue`1" /> è vuota.</exception>
      <returns>Oggetto all'inizio della <see cref="T:System.Collections.Generic.Queue`1" /> .</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.ToArray">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.Queue`1" /> in una nuova matrice.</summary>
      <returns>Nuova matrice contenente gli elementi copiati dalla <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
      <summary>Imposta la capacità sul numero effettivo di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TryDequeue(`0@)">
      <summary>Rimuove l'oggetto all'inizio di e lo <see cref="T:System.Collections.Generic.Queue`1" /> copia nel <paramref name="result" /> parametro.</summary>
      <param name="result">Oggetto rimosso.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> Se l'oggetto viene rimosso correttamente. <see langword="false" /> se <see cref="T:System.Collections.Generic.Queue`1" /> è vuoto.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.TryPeek(`0@)">
      <summary>Restituisce un valore che indica se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Queue`1" /> e se ne è presente uno copiato nel <paramref name="result" /> parametro. L'oggetto non viene rimosso da <see cref="T:System.Collections.Generic.Queue`1" /> .</summary>
      <param name="result">Se presente, l'oggetto all'inizio di <see cref="T:System.Collections.Generic.Queue`1" /> ; in caso contrario, il valore predefinito di <typeparamref name="T" /> .</param>
      <returns>
        <see langword="true" /> Se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Queue`1" /> ; <see langword="false" /> se <see cref="T:System.Collections.Generic.Queue`1" /> è vuoto.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Queue`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Queue`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.Queue`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Queue`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Queue`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Queue`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.ReferenceEqualityComparer">
      <summary>
        <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> che usa l'uguaglianza dei riferimenti (<see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)" />) anziché l'uguaglianza dei valori (<see cref="M:System.Object.Equals(System.Object)" />) per il confronto di due istanze di oggetto.</summary>
    </member>
    <member name="M:System.Collections.Generic.ReferenceEqualityComparer.Equals(System.Object,System.Object)">
      <summary>Determina se due riferimenti a oggetti si riferiscono alla stessa istanza di oggetto.</summary>
      <param name="x">Primo oggetto da confrontare.</param>
      <param name="y">Secondo oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se sia <paramref name="x" /> che <paramref name="y" /> si riferiscono alla stessa istanza di oggetto o se entrambi sono <see langword="null" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.ReferenceEqualityComparer.GetHashCode(System.Object)">
      <summary>Restituisce un codice hash per l'oggetto specificato. Il codice hash restituito è basato sull'identità dell'oggetto, non sul contenuto dell'oggetto.</summary>
      <param name="obj">Oggetto per il quale recuperare il codice hash.</param>
      <returns>Codice hash per l'identità di <paramref name="obj" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.ReferenceEqualityComparer.Instance">
      <summary>Ottiene l'istanza singleton di <see cref="T:System.Collections.Generic.ReferenceEqualityComparer" />.</summary>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2">
      <summary>Rappresenta una raccolta di coppie chiave/valore ordinate in base alla chiave.</summary>
      <typeparam name="TKey">Tipo di chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo di valori nel dizionario.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e usa l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> e usa l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per il confronto delle chiavi.</summary>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> predefinito per il tipo di chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene usata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita per il tipo di chiave.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contenente elementi copiati dalla classe <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata e viene usata l'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> specificata per confrontare le chiavi.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare per confrontare le chiavi oppure <see langword="null" /> per usare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> predefinito per il tipo di chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
      <summary>Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
      <summary>Determina se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)">
      <summary>Determina se la raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.SortedDictionary`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.SortedDictionary`2" /> nella matrice di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> indicata, a partire dall'indice specificato.</summary>
      <param name="array">Matrice unidimensionale di strutture <see cref="T:System.Collections.Generic.KeyValuePair`2" /> in cui effettuare la copia degli elementi della raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2" /> corrente. La matrice deve avere indice in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> per <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se il parametro <paramref name="key" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="keyValuePair" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Generic.SortedDictionary`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Stabilisce se l'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contiene una coppia chiave/valore specifica.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Rimuove dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> la prima occorrenza dell'elemento specificato.</summary>
      <param name="keyValuePair">Struttura <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyValuePair" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non è stato trovato nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> in una matrice, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Oggetto da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.  
  
-oppure- 
 <paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.  
  
-oppure- 
In <see cref="T:System.Collections.IDictionary" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Comparer">
      <summary>Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> usata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> utilizzata per ordinare gli elementi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Count">
      <summary>Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave del valore da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La proprietà viene recuperata e <paramref name="key" /> non esiste nella raccolta.</exception>
      <returns>Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione Get genera un'eccezione <see cref="T:System.Collections.Generic.KeyNotFoundException" />, mentre un'operazione Set crea una nuovo elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
      <summary>Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary>Ottiene una raccolta contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Raccolta contenente le chiavi presenti in <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary>Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Raccolta contenente i valori nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> .</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key">Chiave dell'elemento da ottenere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.  
  
-oppure- 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.SortedDictionary`2" />.</exception>
      <returns>L'elemento con la chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
      <summary>Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> contenente i valori di <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Entry">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento nell'insieme in corrispondenza della posizione corrente del dizionario, restituito come una struttura <see cref="T:System.Collections.DictionaryEntry" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
      <summary>Ottiene la chiave dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Ottiene la chiave dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
      <summary>Ottiene il valore dell'elemento nella posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Valore dell'elemento nell'insieme in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection">
      <summary>Rappresenta la raccolta di chiavi in <see cref="T:System.Collections.Generic.SortedDictionary`2" />. La classe non può essere ereditata.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in cui sono riprodotte le chiavi dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary">Classe <see cref="T:System.Collections.Generic.SortedDictionary`2" /> le cui chiavi vengono riprodotte nella nuova classe <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
      <summary>Copia gli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in una matrice unidimensionale esistente, a partire dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" /> della raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> contiene il valore specificato.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se l'elemento è presente nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />.  Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
      <returns>
        <see langword="true" /> se l'elemento viene rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />, in caso contrario <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se l'elemento non viene trovato in <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection">
      <summary>Rappresenta la raccolta di valori in un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2" />. La classe non può essere ereditata.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in cui sono riprodotti i valori dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> specificato.</summary>
      <param name="dictionary">Insieme <see cref="T:System.Collections.Generic.SortedDictionary`2" /> i cui valori sono riportati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
      <summary>Copia gli elementi dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in una matrice unidimensionale esistente, a partire dall'indice di matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>Struttura <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" /> della raccolta <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
      <summary>Aggiunge un elemento a <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
      <summary>Determina se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un valore specifico.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
      <summary>Rimuove la prima occorrenza di un oggetto specifico da <see cref="T:System.Collections.Generic.ICollection`1" />. Questa implementazione genera sempre un'eccezione <see cref="T:System.NotSupportedException" />.</summary>
      <param name="item">Oggetto da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">Generata sempre. La raccolta è di sola lettura.</exception>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />. In caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se il parametro <paramref name="item" /> non viene trovato nella classe <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi dell'oggetto <see cref="T:System.Collections.ICollection" /> in una matrice, iniziando in corrispondenza di un particolare indice di matrice.</summary>
      <param name="array">Matrice unidimensionale che è la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <typeparam name="TKey" />
      <typeparam name="TValue" />
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedList`2">
      <summary>Rappresenta una raccolta di coppie chiave/valore ordinate per chiave in base all'implementazione <see cref="T:System.Collections.Generic.IComparer`1" /> associata.</summary>
      <typeparam name="TKey">Tipo di chiavi nella raccolta.</typeparam>
      <typeparam name="TValue">Tipo di valori nella raccolta.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedList`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata, la cui capacità è sufficiente a contenere il numero di elementi copiati e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> predefinita.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedList`2" /> che contiene gli elementi copiati dall'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" /> specificata, la cui capacità è sufficiente a contenere il numero di elementi copiati e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="dictionary">Oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /> i cui elementi sono copiati nel nuovo oggetto <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dictionary" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dictionary" /> contiene una o più chiavi duplicate.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32)">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza vuota della classe <see cref="T:System.Collections.Generic.SortedList`2" />, con la capacità iniziale predefinita e che usa l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> specificata.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</param>
      <param name="comparer">Implementazione di <see cref="T:System.Collections.Generic.IComparer`1" /> da usare quando si confrontano le chiavi.  
  
-oppure- 
 <see langword="null" /> per utilizzare l'oggetto <see cref="T:System.Collections.Generic.Comparer`1" /> per il tipo della chiave.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
      <summary>Aggiunge un elemento con la chiave e il valore specificati al metodo <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key">Chiave dell'elemento da aggiungere.</param>
      <param name="value">Valore dell'elemento da aggiungere. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">In <see cref="T:System.Collections.Generic.SortedList`2" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Clear">
      <summary>Rimuove tutti gli elementi da <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedList`2" /> contiene una chiave specifica.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.ContainsValue(`1)">
      <summary>Stabilisce se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un valore specifico.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con il valore specificato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.IEnumerator`1" /> di tipo <see cref="T:System.Collections.Generic.KeyValuePair`2" /> per la raccolta <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
      <summary>Cerca la chiave specificata e restituisce l'indice in base zero all'interno dell'intera raccolta <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>Indice in base zero della chiave specificata nel parametro <paramref name="key" /> all'interno dell'intera raccolta <see cref="T:System.Collections.Generic.SortedList`2" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)">
      <summary>Cerca il valore specificato e restituisce l'indice in base zero della prima occorrenza all'interno dell'intera raccolta <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="value">Valore da individuare in <see cref="T:System.Collections.Generic.SortedList`2" />.  Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>Indice in base zero della prima occorrenza di <paramref name="value" /> all'interno dell'intero oggetto <see cref="T:System.Collections.Generic.SortedList`2" />, se presente; in caso contrario, -1.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.Remove(`0)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'elemento viene rimosso correttamente; in caso contrario, <see langword="false" />.  Questo metodo restituisce anche <see langword="false" /> se <paramref name="key" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.SortedList`2" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)">
      <summary>Rimuove l'elemento in corrispondenza dell'indice specificato di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <param name="index">Indice in base zero dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
  
-oppure- 
 <paramref name="index" /> è uguale a o maggiore di <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Aggiunge una coppia chiave/valore all'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da aggiungere a <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Consente di stabilire se <see cref="T:System.Collections.Generic.ICollection`1" /> contiene un elemento specifico.</summary>
      <param name="keyValuePair">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da individuare in <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyValuePair" /> è presente in <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.Generic.ICollection`1" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.ICollection`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>Rimuove la prima occorrenza di una coppia chiave/valore specifica dall'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="keyValuePair">Oggetto <see cref="T:System.Collections.Generic.KeyValuePair`2" /> da rimuovere da <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> se <paramref name="keyValuePair" /> è stato rimosso correttamente da <see cref="T:System.Collections.Generic.ICollection`1" />; in caso contrario, <see langword="false" />. Questo metodo restituisce anche <see langword="false" /> se <paramref name="keyValuePair" /> non è stato trovato nell'interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> originale.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Aggiunge un elemento con la chiave e il valore forniti all'interfaccia <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Oggetto <see cref="T:System.Object" /> da usare come chiave dell'elemento da aggiungere.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da usare come valore dell'elemento da aggiungere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Il tipo della chiave indicata nel parametro <paramref name="key" /> non è assegnabile al tipo di chiave <paramref name="TKey" /> dell'insieme <see cref="T:System.Collections.IDictionary" />.  
  
-oppure- 
 <paramref name="value" /> è un tipo che non è possibile assegnare al tipo di valore <paramref name="TValue" /> dell'oggetto <see cref="T:System.Collections.IDictionary" />.  
  
-oppure- 
In <see cref="T:System.Collections.IDictionary" /> è già presente un elemento con la stessa chiave.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determina se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave specificata.</summary>
      <param name="key">Chiave da individuare in <see cref="T:System.Collections.IDictionary" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la chiave; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
      <summary>Restituisce <see cref="T:System.Collections.IDictionaryEnumerator" /> per <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionaryEnumerator" /> per l'oggetto <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Rimuove l'elemento con la chiave specificata da <see cref="T:System.Collections.IDictionary" />.</summary>
      <param name="key">Chiave dell'elemento da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TrimExcess">
      <summary>Imposta la capacità sul numero effettivo di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.SortedList`2" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
      <summary>Ottiene il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave di cui si deve ottenere il valore.</param>
      <param name="value">Quando termina, questo metodo restituisce il valore associato alla chiave specificata nel caso in cui la chiave venga trovata; in caso contrario, il valore predefinito per il tipo di parametro <paramref name="value" />. Questo parametro viene passato non inizializzato.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.SortedList`2" /> contiene un elemento con la chiave specificata; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Capacity">
      <summary>Ottiene o imposta il numero di elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</summary>
      <exception cref="T:System.ArgumentOutOfRangeException">L'oggetto <see cref="P:System.Collections.Generic.SortedList`2.Capacity" /> è impostato su un valore minore di <see cref="P:System.Collections.Generic.SortedList`2.Count" />.</exception>
      <exception cref="T:System.OutOfMemoryException">La memoria disponibile nel sistema non è sufficiente.</exception>
      <returns>Numero degli elementi che <see cref="T:System.Collections.Generic.SortedList`2" /> può contenere.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Comparer">
      <summary>Ottiene l'interfaccia <see cref="T:System.Collections.Generic.IComparer`1" /> per l'elenco ordinato.</summary>
      <returns>Oggetto <see cref="T:System.IComparable`1" /> dell'oggetto <see cref="T:System.Collections.Generic.SortedList`2" /> corrente</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Count">
      <summary>Ottiene il numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>Numero di coppie chiave/valore contenute in <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Item(`0)">
      <summary>Ottiene o imposta il valore associato alla chiave specificata.</summary>
      <param name="key">Chiave di cui si deve ottenere o impostare il valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">La proprietà viene recuperata e <paramref name="key" /> non esiste nella raccolta.</exception>
      <returns>Valore associato alla chiave specificata. Se la chiave specificata non viene trovata, un'operazione get genera <see cref="T:System.Collections.Generic.KeyNotFoundException" /> e un'operazione set crea un nuovo elemento con la chiave specificata.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Keys">
      <summary>Ottiene una raccolta contenente le chiavi in <see cref="T:System.Collections.Generic.SortedList`2" /> nell'ordine specificato.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.IList`1" /> contenente le chiavi della classe <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura; in caso contrario, <see langword="false" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi di <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.Generic.ICollection`1" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
      <summary>Ottiene <see cref="T:System.Collections.Generic.ICollection`1" /> contenente i valori in <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Oggetto contenente i valori presenti in <see cref="T:System.Collections.Generic.IDictionary`2" /> .</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Keys">
      <summary>Ottiene una raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</summary>
      <returns>Raccolta enumerabile contenente le chiavi nel dizionario di sola lettura.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IReadOnlyDictionary{TKey@TValue}#Values">
      <summary>Ottiene una raccolta enumerabile contenente i valori nel dizionario di sola lettura.</summary>
      <returns>Raccolta enumerabile contenente i valori nel dizionario di sola lettura.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsFixedSize">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> ha dimensioni fisse.</summary>
      <returns>
        <see langword="true" /> se le dimensioni dell'oggetto <see cref="T:System.Collections.IDictionary" /> sono fisse; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#IsReadOnly">
      <summary>Ottiene un valore che indica se <see cref="T:System.Collections.IDictionary" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se <see cref="T:System.Collections.IDictionary" /> è di sola lettura; in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.SortedList`2" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
      <summary>Ottiene o imposta l'elemento con la chiave specificata.</summary>
      <param name="key">Chiave dell'elemento da ottenere o impostare.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentException">Viene assegnato un valore e il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe<see cref="T:System.Collections.Generic.SortedList`2" />.  
  
-oppure- 
Viene assegnato un valore e il tipo di <paramref name="value" /> non può essere assegnato al tipo di valore <paramref name="TValue" /> della classe<see cref="T:System.Collections.Generic.SortedList`2" />.</exception>
      <returns>L'elemento con la chiave specificata, o <see langword="null" /> se <paramref name="key" /> non è presente nel dizionario o se il tipo di <paramref name="key" /> non può essere assegnato al tipo di chiave <paramref name="TKey" /> della classe <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente le chiavi di <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente le chiavi dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
      <summary>Ottiene <see cref="T:System.Collections.ICollection" /> contenente i valori in <see cref="T:System.Collections.IDictionary" />.</summary>
      <returns>Interfaccia <see cref="T:System.Collections.ICollection" /> contenente i valori dell'interfaccia <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedList`2.Values">
      <summary>Ottiene una raccolta contenente i valori di <see cref="T:System.Collections.Generic.SortedList`2" />.</summary>
      <returns>Raccolta <see cref="T:System.Collections.Generic.IList`1" /> contenente i valori di <see cref="T:System.Collections.Generic.SortedList`2" />.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1">
      <summary>Rappresenta una raccolta di oggetti di cui viene mantenuto l'ordinamento.</summary>
      <typeparam name="T">Tipo di elementi presenti nel set.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che usa un operatore di confronto specificato.</summary>
      <param name="comparer">Operatore di confronto predefinito da usare per il confronto degli oggetti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comparer" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da una raccolta enumerabile specificata.</summary>
      <param name="collection">Raccolta enumerabile da copiare.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene elementi copiati da una raccolta enumerabile specificata e che usa un operatore di confronto specificato.</summary>
      <param name="collection">Raccolta enumerabile da copiare.</param>
      <param name="comparer">Operatore di confronto predefinito da usare per il confronto degli oggetti.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.SortedSet`1" /> che contiene dati serializzati.</summary>
      <param name="info">Oggetto contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context">Struttura contenente l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
      <summary>Aggiunge un elemento al set e restituisce un valore che indica se l'aggiunta è stata eseguita correttamente.</summary>
      <param name="item">Elemento da aggiungere all'insieme.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> viene aggiunto al set; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Clear">
      <summary>Rimuove tutti gli elementi dal set.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
      <summary>Determina se il set contiene un elemento specifico.</summary>
      <param name="item">Elemento da individuare nel set.</param>
      <returns>
        <see langword="true" /> se il set contiene <paramref name="item" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'inizio della matrice di destinazione.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> di origine supera il numero di elementi che può essere contenuto nella matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
      <summary>Copia un numero specificato di elementi da <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <param name="count">Numero degli elementi da copiare.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.  
  
-oppure- 
 <paramref name="count" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" /> che può essere usato per creare una raccolta contenente singoli set.</summary>
      <returns>Operatore di confronto per la creazione di una raccolta di set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.IEqualityComparer" />, in base a un operatore di confronto specificato, che può essere usato per creare una raccolta contenente singoli set.</summary>
      <param name="memberEqualityComparer">Operatore di confronto da usare per la creazione dell'operatore di confronto restituito.</param>
      <returns>Operatore di confronto per la creazione di una raccolta di set.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Rimuove tutti gli elementi inclusi in una raccolta specificata dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</summary>
      <param name="other">Raccolta di elementi da rimuovere dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetEnumerator">
      <summary>Restituisce un enumeratore che esegue l'iterazione di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Enumeratore che consente di scorrere <see cref="T:System.Collections.Generic.SortedSet`1" /> nell'ordine specificato.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati di cui è necessario disporre per serializzare un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
      <summary>Restituisce una visualizzazione di un subset in un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="lowerValue">Valore minimo desiderato nella visualizzazione.</param>
      <param name="upperValue">Valore massimo desiderato nella visualizzazione.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="lowerValue" /> è maggiore di <paramref name="upperValue" /> secondo l'operatore di confronto.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">Un'operazione che si è tentato di eseguire nella visualizzazione non rientra nell'intervallo specificato da <paramref name="lowerValue" /> e <paramref name="upperValue" />.</exception>
      <returns>Visualizzazione di un subset contenente solo i valori inclusi nell'intervallo specificato.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi inclusi anche in una raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset corretto della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset corretto di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset corretto di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un subset della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è un subset di <paramref name="other" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset della raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> è un superset di <paramref name="other" />, in caso contrario <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all’oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e una raccolta specificata condividono elementi comuni.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> e il parametro <paramref name="other" /> condividono almeno un elemento comune; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
      <summary>Rimuove un elemento specificato da <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="item">Elemento da rimuovere.</param>
      <returns>
        <see langword="true" /> se l'elemento viene trovato e rimosso correttamente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
      <summary>Rimuove tutti gli elementi che corrispondono alle condizioni definite dal predicato specificato da un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="match">Delegato che definisce le condizioni degli elementi da rimuovere.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="match" /> è <see langword="null" />.</exception>
      <returns>Numero di elementi rimossi dalla raccolta <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Reverse">
      <summary>Restituisce un oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</summary>
      <returns>Enumeratore che scorre <see cref="T:System.Collections.Generic.SortedSet`1" /> in ordine inverso.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente e la raccolta specificata contengono gli stessi elementi.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
      <returns>
        <see langword="true" /> se l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente è uguale a <paramref name="other" />. In caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga solo elementi presenti in tale oggetto o nella raccolta specificata, ma non in entrambi.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Aggiunge un elemento a un oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">Oggetto da aggiungere all'oggetto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">La classe <see cref="T:System.Collections.Generic.ICollection`1" /> è di sola lettura.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia l'intero oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> in una matrice unidimensionale compatibile, a partire dall'indice della matrice specificato.</summary>
      <param name="array">Matrice unidimensionale che costituisce la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />. La matrice deve avere un'indicizzazione in base zero.</param>
      <param name="index">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentException">Il numero di elementi nella matrice di origine è maggiore dello spazio disponibile tra <paramref name="index" /> e la fine della matrice di destinazione.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Enumeratore che può essere usato per scorrere la raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.SortedSet`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari per serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> contenente le informazioni necessarie per serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza della raccolta <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.TryGetValue(`0,`0@)">
      <summary>Cerca un determinato valore nel set e restituisce il valore uguale eventualmente trovato.</summary>
      <param name="equalValue">Valore da cercare.</param>
      <param name="actualValue">Valore del set trovato dalla ricerca oppure il valore predefinito di T se la ricerca non ha restituito alcuna corrispondenza.</param>
      <returns>Valore che indica se la ricerca è stata eseguita correttamente.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
      <summary>Modifica l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente in modo che contenga tutti gli elementi presenti in tale oggetto e nella raccolta specificata.</summary>
      <param name="other">Raccolta da confrontare con l'oggetto <see cref="T:System.Collections.Generic.SortedSet`1" /> corrente.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Comparer">
      <summary>Ottiene l'oggetto <see cref="T:System.Collections.Generic.IComparer`1" /> usato per ordinare i valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>L’operatore di confronto usato per ordinare i valori in <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Count">
      <summary>Ottiene il numero di elementi in <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <returns>Numero di elementi in <see cref="T:System.Collections.Generic.SortedSet`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Max">
      <summary>Ottiene il valore massimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns>Valore massimo nel set.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Min">
      <summary>Ottiene il valore minimo in <see cref="T:System.Collections.Generic.SortedSet`1" />, come definito dall'operatore di confronto.</summary>
      <returns>Valore minimo nel set.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ottiene un valore che indica se un oggetto <see cref="T:System.Collections.ICollection" /> è di sola lettura.</summary>
      <returns>
        <see langword="true" /> se la raccolta è di sola lettura; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso all'oggetto <see cref="T:System.Collections.ICollection" /> è sincronizzato (affidabile).</summary>
      <returns>
        <see langword="true" /> se l'accesso all'oggetto <see cref="T:System.Collections.ICollection" /> è sincronizzato; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />. Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.SortedSet`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.SortedSet`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo della raccolta <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e genera l'evento di deserializzazione quando la deserializzazione è completa.</summary>
      <param name="sender">Origine dell'evento di deserializzazione.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">L'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> associato all'istanza corrente di <see cref="T:System.Collections.Generic.SortedSet`1" /> non è valido.</exception>
    </member>
    <member name="M:System.Collections.Generic.SortedSet`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementa l'interfaccia <see cref="T:System.Runtime.Serialization.ISerializable" /> e restituisce i dati necessari a serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene le informazioni necessarie a serializzare l'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene l'origine e la destinazione del flusso serializzato associato all'istanza di <see cref="T:System.Collections.Generic.SortedSet`1" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> è <see langword="null" />.</exception>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.Generic.Stack`1">
      <summary>Rappresenta una raccolta di istanze LIFO (Last-In-First-Out) a dimensione variabile dello stesso tipo specificato.</summary>
      <typeparam name="T">Specifica il tipo di elementi nello stack.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> vuota e con capacità iniziale predefinita.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" /> che contiene gli elementi copiati dalla raccolta specificata e ha la capacità sufficiente per contenere il numero di elementi copiati.</summary>
      <param name="collection">Raccolta da cui copiare gli elementi.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> è <see langword="null" />.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)">
      <summary>Consente l'inizializzazione di una nuova istanza della classe <see cref="T:System.Collections.Generic.Stack`1" />, che è vuota e ha la capacità iniziale maggiore tra quella specificata e quella predefinita.</summary>
      <param name="capacity">Numero iniziale degli elementi che <see cref="T:System.Collections.Generic.Stack`1" /> può contenere.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> è minore di zero.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Clear">
      <summary>Rimuove tutti gli oggetti da <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Contains(`0)">
      <summary>Determina se un elemento è incluso in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item">Oggetto da individuare nella raccolta <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
      <returns>
        <see langword="true" /> se <paramref name="item" /> è presente in <see cref="T:System.Collections.Generic.Stack`1" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
      <summary>Copia <see cref="T:System.Collections.Generic.Stack`1" /> in una <see cref="T:System.Array" /> unidimensionale esistente, iniziando dall'indice di matrice specificato.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.Generic.Stack`1" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">Il numero di elementi nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.GetEnumerator">
      <summary>Restituisce un enumeratore per l'insieme <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>
        <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> per l'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Peek">
      <summary>Viene restituito l'oggetto all'inizio dello <see cref="T:System.Collections.Generic.Stack`1" /> senza rimuoverlo.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.Stack`1" /> è vuota.</exception>
      <returns>Oggetto all'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Pop">
      <summary>Rimuove e restituisce l'oggetto all'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La classe <see cref="T:System.Collections.Generic.Stack`1" /> è vuota.</exception>
      <returns>Oggetto rimosso dall'inizio dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Push(`0)">
      <summary>Inserisce un oggetto all'inizio della classe <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <param name="item">Oggetto di cui effettuare il push in <see cref="T:System.Collections.Generic.Stack`1" />. Il valore può essere <see langword="null" /> per i tipi di riferimento.</param>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di scorrere la raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerator`1" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copia gli elementi di <see cref="T:System.Collections.ICollection" /> in <see cref="T:System.Array" /> a partire da un particolare indice <see cref="T:System.Array" />.</summary>
      <param name="array">Oggetto <see cref="T:System.Array" /> unidimensionale che rappresenta la destinazione degli elementi copiati dall'oggetto <see cref="T:System.Collections.ICollection" />. L'indicizzazione di <see cref="T:System.Array" /> deve essere in base zero.</param>
      <param name="arrayIndex">Indice in base zero in <paramref name="array" /> in corrispondenza del quale viene avviata la copia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> è <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> è minore di zero.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> è multidimensionale.  
  
-oppure- 
 <paramref name="array" /> non ha un'indicizzazione in base zero.  
  
-oppure- 
Il numero di elementi nell'oggetto <see cref="T:System.Collections.ICollection" /> di origine è maggiore dello spazio disponibile tra <paramref name="arrayIndex" /> e la fine dell'oggetto <paramref name="array" /> di destinazione.  
  
-oppure- 
Non è possibile eseguire il cast automatico del tipo dell'oggetto <see cref="T:System.Collections.ICollection" /> di origine al tipo dell'oggetto <paramref name="array" /> di destinazione.</exception>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Restituisce un enumeratore che consente di eseguire l'iterazione di una raccolta.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere usato per eseguire l'iterazione della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.ToArray">
      <summary>Consente di copiare lo <see cref="T:System.Collections.Generic.Stack`1" /> in una nuova matrice.</summary>
      <returns>Nuova matrice contenente le copie degli elementi dello <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TrimExcess">
      <summary>Imposta la capacità sul numero effettivo di elementi contenuti nell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />, se questo numero è inferiore al 90 per cento della capacità corrente.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TryPeek(`0@)">
      <summary>Restituisce un valore che indica se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> e, se presente, lo copia nel <paramref name="result" /> parametro. L'oggetto non viene rimosso da <see cref="T:System.Collections.Generic.Stack`1" /> .</summary>
      <param name="result">Se presente, l'oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> ; in caso contrario, il valore predefinito di <typeparamref name="T" /> .</param>
      <returns>
        <see langword="true" /> Se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> ; <see langword="false" /> se <see cref="T:System.Collections.Generic.Stack`1" /> è vuoto.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.TryPop(`0@)">
      <summary>Restituisce un valore che indica se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> e se ne è presente uno, lo copia nel <paramref name="result" /> parametro e lo rimuove da <see cref="T:System.Collections.Generic.Stack`1" /> .</summary>
      <param name="result">Se presente, l'oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> ; in caso contrario, il valore predefinito di <typeparamref name="T" /> .</param>
      <returns>
        <see langword="true" /> Se è presente un oggetto all'inizio di <see cref="T:System.Collections.Generic.Stack`1" /> ; <see langword="false" /> se <see cref="T:System.Collections.Generic.Stack`1" /> è vuoto.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Count">
      <summary>Ottiene il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <returns>Il numero di elementi contenuti in <see cref="T:System.Collections.Generic.Stack`1" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized">
      <summary>Ottiene un valore che indica se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe).</summary>
      <returns>
        <see langword="true" /> se l'accesso a <see cref="T:System.Collections.ICollection" /> è sincronizzato (thread-safe); in caso contrario, <see langword="false" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre <see langword="false" />.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
      <summary>Ottiene un oggetto che può essere usato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.</summary>
      <returns>Oggetto che può essere utilizzato per sincronizzare l'accesso a <see cref="T:System.Collections.ICollection" />.  Nell'implementazione predefinita di <see cref="T:System.Collections.Generic.Stack`1" />, questa proprietà restituisce sempre l'istanza corrente.</returns>
    </member>
    <member name="T:System.Collections.Generic.Stack`1.Enumerator">
      <summary>Enumera gli elementi di un oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <typeparam name="T" />
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.Dispose">
      <summary>Rilascia tutte le risorse usate da <see cref="T:System.Collections.Generic.Stack`1.Enumerator" />.</summary>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.MoveNext">
      <summary>Sposta l'enumeratore all'elemento successivo dell'oggetto <see cref="T:System.Collections.Generic.Stack`1" />.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
      <returns>
        <see langword="true" /> se l'enumeratore è stato spostato correttamente in avanti in corrispondenza dell'elemento successivo, <see langword="false" /> se l'enumeratore ha superato la fine della raccolta.</returns>
    </member>
    <member name="M:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Reset">
      <summary>Imposta l'enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta. La classe non può essere ereditata.</summary>
      <exception cref="T:System.InvalidOperationException">La raccolta è stata modificata dopo la creazione dell'enumeratore.</exception>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento dell'insieme <see cref="T:System.Collections.Generic.Stack`1" /> in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
      <summary>Ottiene l'elemento in corrispondenza della posizione corrente dell'enumeratore.</summary>
      <exception cref="T:System.InvalidOperationException">L'enumeratore è posizionato prima del primo elemento della raccolta o dopo l'ultimo elemento.</exception>
      <returns>Elemento della raccolta in corrispondenza della posizione corrente dell'enumeratore.</returns>
    </member>
    <member name="T:System.Collections.StructuralComparisons">
      <summary>Fornisce oggetti per eseguire un confronto strutturale di due oggetti della raccolta.</summary>
    </member>
    <member name="P:System.Collections.StructuralComparisons.StructuralComparer">
      <summary>Ottiene un oggetto predefinito che esegue un confronto strutturale di due oggetti.</summary>
      <returns>Oggetto predefinito utilizzato per eseguire un confronto strutturale di due oggetti insieme.</returns>
    </member>
    <member name="P:System.Collections.StructuralComparisons.StructuralEqualityComparer">
      <summary>Ottiene un oggetto predefinito che confronta due oggetti per determinarne l'uguaglianza strutturale.</summary>
      <returns>Oggetto predefinito utilizzato per confrontare due oggetti insieme e determinarne l'uguaglianza strutturale.</returns>
    </member>
  </members>
</doc>