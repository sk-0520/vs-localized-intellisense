<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Diagnostics.DiagnosticSource</name>
  </assembly>
  <members>
    <member name="T:System.Diagnostics.Activity">
      <summary>Rappresenta un'operazione con il contesto da usare per la registrazione.</summary>
    </member>
    <member name="M:System.Diagnostics.Activity.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="operationName">Nome dell'operazione.</param>
    </member>
    <member name="P:System.Diagnostics.Activity.ActivityTraceFlags">
      <summary>Ottiene i flag definiti dalla specifica W3C ID che sono associati all'attività.</summary>
      <returns>flag associati all'attività.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)">
      <summary>Aggiorna <see cref="T:System.Diagnostics.Activity" /> in modo da avere un nuovo articolo del bagaglio con la chiave e il valore specificati.</summary>
      <param name="key">La chiave del bagaglio.</param>
      <param name="value">Il valore del bagaglio.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.AddTag(System.String,System.String)">
      <summary>Aggiorna <see cref="T:System.Diagnostics.Activity" /> in modo da avere un nuovo tag con gli elementi <paramref name="key" /> e <paramref name="value" /> specificati. .</summary>
      <param name="key">La chiave del tag.</param>
      <param name="value">Il valore del tag.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Baggage">
      <summary>Ottiene una raccolta di coppie chiave-valore che rappresenta le informazioni passate agli elementi figlio di questo <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>Enumerazione di coppie chiave-valore stringa-stringa.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Current">
      <summary>Ottiene o imposta l'operazione corrente (<see cref="T:System.Diagnostics.Activity" />) per il thread corrente.  Il flusso passa attraverso le chiamate asincrone.</summary>
      <returns>Operazione corrente per il thread corrente.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.DefaultIdFormat">
      <summary>Ottiene o imposta il formato ID predefinito per <see cref="T:System.Diagnostics.Activity" />.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Duration">
      <summary>Ottiene la durata dell'operazione.</summary>
      <returns>Il Delta compreso <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> tra e l'ora di fine <see cref="T:System.Diagnostics.Activity" /> se è terminato<see cref="M:System.Diagnostics.Activity.Stop" /> ( <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> o è stato chiamato) <see cref="F:System.TimeSpan.Zero" /> o se <see cref="T:System.Diagnostics.Activity" /> l'oggetto non è <see cref="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)" /> stato terminato e non è stato chiamato.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ForceDefaultIdFormat">
      <summary>Ottiene o imposta un valore che determina se usare sempre <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" /> per definire il formato ID predefinito.</summary>
      <returns>
        <see langword="true" />per utilizzare sempre l' <see cref="P:System.Diagnostics.Activity.DefaultIdFormat" />oggetto; in <see langword="false" />caso contrario,.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.GetBaggageItem(System.String)">
      <summary>Restituisce il valore di una coppia chiave-valore aggiunta all'attività con <see cref="M:System.Diagnostics.Activity.AddBaggage(System.String,System.String)" />.</summary>
      <param name="key">La chiave del bagaglio.</param>
      <returns>Il valore dell'elemento coppia chiave-valore, se esiste, o <see langword="null" /> se non esiste.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Id">
      <summary>Ottiene un identificatore specifico per una particolare richiesta.</summary>
      <returns>ID dell'attività.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.IdFormat">
      <summary>Ottiene il formato per <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>Formato per l'oggetto <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.OperationName">
      <summary>Ottiene il nome dell'operazione.</summary>
      <returns>Nome dell'operazione.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Parent">
      <summary>Ottiene l'elemento <see cref="T:System.Diagnostics.Activity" /> padre che ha creato questa attività.</summary>
      <returns>L'elemento padre di <see cref="T:System.Diagnostics.Activity" />questo oggetto, se è dello stesso processo o <see langword="null" /> se questa istanza non dispone di un elemento padre (si tratta di un'attività radice) o se l'elemento padre è esterno al processo.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentId">
      <summary>Ottiene l'ID dell'elemento padre di questa attività.</summary>
      <returns>ID padre, se presente, oppure <see langword="null" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.ParentSpanId">
      <summary>Ottiene l'elemento <see cref="P:System.Diagnostics.Activity.SpanId" /> del padre.</summary>
      <returns>Oggetto dell'elemento <see cref="P:System.Diagnostics.Activity.SpanId" />padre.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.Recorded">
      <summary>Ottiene un valore che indica se il flag W3CIdFlags.Recorded è impostato.</summary>
      <returns>
        <see langword="true" />Se il flag W3CIdFlags. registrato è impostato; in caso <see langword="false" />contrario,.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.RootId">
      <summary>Ottiene l'ID radice di questo <see cref="T:System.Diagnostics.Activity" />.</summary>
      <returns>ID radice o <see langword="null" /> se l'istanza corrente ha un <see cref="P:System.Diagnostics.Activity.ParentId" /> oggetto o <see cref="P:System.Diagnostics.Activity.Id" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetEndTime(System.DateTime)">
      <summary>Aggiorna <see cref="T:System.Diagnostics.Activity" /> per impostare il relativo <see cref="P:System.Diagnostics.Activity.Duration" /> come differenza tra <see cref="P:System.Diagnostics.Activity.StartTimeUtc" /> e l'ora di arresto specificata.</summary>
      <param name="endTimeUtc">L'ora UTC di arresto.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetIdFormat(System.Diagnostics.ActivityIdFormat)">
      <summary>Imposta il formato dell'ID per questo oggetto <see cref="T:System.Diagnostics.Activity" /> prima dell'avvio.</summary>
      <param name="format">Uno dei valori di enumerazione che specifica il formato della proprietà <see cref="P:System.Diagnostics.Activity.Id" />.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivityTraceFlags)">
      <summary>Imposta l'ID padre usando la convenzione W3C di TraceId e SpanId.</summary>
      <param name="traceId">TraceId dell'attività padre.</param>
      <param name="spanId">SpanId dell'attività padre.</param>
      <param name="activityTraceFlags">Uno dei valori di enumerazione che specifica i flag definiti dallo standard W3C associati a un'attività.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetParentId(System.String)">
      <summary>Aggiorna questo elemento <see cref="T:System.Diagnostics.Activity" /> per indicare che <see cref="T:System.Diagnostics.Activity" /> con ID <paramref name="parentId" /> ha causato <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="parentId">ID dell'operazione padre.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.SetStartTime(System.DateTime)">
      <summary>Imposta l'ora di inizio di questo <see cref="T:System.Diagnostics.Activity" />.</summary>
      <param name="startTimeUtc">Ora di inizio <see cref="T:System.Diagnostics.Activity" /> in formato UTC.</param>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.SpanId">
      <summary>Ottiene la parte SPAN di <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID della parte span di <see cref="P:System.Diagnostics.Activity.Id" />, <see cref="T:System.Diagnostics.Activity" /> se ha il formato W3C; in caso contrario, zero <see langword="SpanId" />.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Start">
      <summary>Avvia l'attività.</summary>
      <returns>
        <see langword="this" /> per un comodo concatenamento.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.StartTimeUtc">
      <summary>Ottiene l'ora in cui è stata avviata l'operazione.</summary>
      <returns>Ora UTC in cui l'operazione è stata avviata.</returns>
    </member>
    <member name="M:System.Diagnostics.Activity.Stop">
      <summary>Arresta l'attività.</summary>
    </member>
    <member name="P:System.Diagnostics.Activity.Tags">
      <summary>Ottiene una raccolta di coppie chiave-valore che rappresentano le informazioni che verranno registrate con <see cref="T:System.Diagnostics.Activity" /> nel sistema di registrazione.</summary>
      <returns>Enumerazione di coppie chiave-valore-stringa di stringa.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceId">
      <summary>Ottiene la parte TraceId di <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
      <returns>ID della parte traceid di <see cref="P:System.Diagnostics.Activity.Id" />, se l'ID ha il formato W3C; in caso contrario, un traceid zero.</returns>
    </member>
    <member name="P:System.Diagnostics.Activity.TraceStateString">
      <summary>Ottiene l'intestazione <see langword="tracestate" /> per W3C.</summary>
      <returns>Intestazione W3C <see langword="tracestate" /> .</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityIdFormat">
      <summary>Specifica il formato della proprietà <see cref="P:System.Diagnostics.Activity.Id" />.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Hierarchical">
      <summary>Formato gerarchico.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.Unknown">
      <summary>Formato sconosciuto.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityIdFormat.W3C">
      <summary>Formato W3C.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivitySpanId">
      <summary>Rappresenta una proprietà <see cref="P:System.Diagnostics.Activity.SpanId" /> con formato basato su uno standard W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})">
      <summary>Copia gli 8 byte dello struct <see cref="T:System.Diagnostics.ActivitySpanId" /> corrente in un intervallo specifico.</summary>
      <param name="destination">Intervallo in cui copiare gli 8 byte di SpanID.</param>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivitySpanId" /> da un intervallo di sola lettura di otto byte.</summary>
      <param name="idData">Intervallo di sola lettura di otto byte.</param>
      <returns>Nuovo ID intervallo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> non contiene otto byte.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivitySpanId" /> da un intervallo di sola lettura di 16 caratteri esadecimali.</summary>
      <param name="idData">Intervallo contenente 16 caratteri esadecimali.</param>
      <returns>Nuovo ID intervallo.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> non contiene 16 caratteri esadecimali.
In alternativa 
I caratteri in <paramref name="idData" /> non sono tutti caratteri esadecimali minuscoli o tutti zero.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivitySpanId" /> da un intervallo di sola lettura di byte con codifica UTF8.</summary>
      <param name="idData">Intervallo di sola lettura di byte con codifica UTF8.</param>
      <returns>Nuovo ID intervallo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.CreateRandom">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivitySpanId" /> basato su un numero casuale che sarà probabilmente univoco.</summary>
      <returns>Nuovo ID intervallo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)">
      <summary>Determina se questa istanza e l'istanza specificata di <see cref="T:System.Diagnostics.ActivitySpanId" /> hanno lo stesso valore.</summary>
      <param name="spanId">Istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="spanId" /> ha lo stesso valore esadecimale dell'istanza corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)">
      <summary>L'istanza corrente e un oggetto specificato, che deve essere anche un'istanza di <see cref="T:System.Diagnostics.ActivitySpanId" />, hanno lo stesso valore.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.ActivitySpanId" /> e ha lo stesso valore esadecimale dell'istanza corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.GetHashCode">
      <summary>Restituisce il codice hash dell'oggetto SpanId.</summary>
      <returns>Codice hash dell'oggetto SpanId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determina se due istanze specificate di <see cref="T:System.Diagnostics.ActivitySpanId" /> hanno lo stesso valore.</summary>
      <param name="spanId1">Prima istanza da confrontare.</param>
      <param name="spandId2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore SpanId di <paramref name="spanId1" /> è uguale a quello di <paramref name="spandId2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)">
      <summary>Determinare se due istanze specificate di <see cref="T:System.Diagnostics.ActivitySpanId" /> hanno valori diversi.</summary>
      <param name="spanId1">Prima istanza da confrontare.</param>
      <param name="spandId2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore SpanId di <paramref name="spanId1" /> è diverso da quello di <paramref name="spandId2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToHexString">
      <summary>Restituisce una stringa esadecimale di 16 caratteri che rappresenta l'ID intervallo.</summary>
      <returns>Rappresentazione di stringa esadecimale di 16 caratteri dell'ID intervallo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivitySpanId.ToString">
      <summary>Restituisce una stringa esadecimale di 16 caratteri che rappresenta l'ID intervallo.</summary>
      <returns>Rappresentazione di stringa esadecimale di 16 caratteri dell'ID intervallo.</returns>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceFlags">
      <summary>Specifica i flag definiti dallo standard W3C che sono associati a un'attività.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.None">
      <summary>L'attività non è stata contrassegnata.</summary>
    </member>
    <member name="F:System.Diagnostics.ActivityTraceFlags.Recorded">
      <summary>L'attività (o più probabilmente i relativi elementi padre) è stata contrassegnata come utile per la registrazione.</summary>
    </member>
    <member name="T:System.Diagnostics.ActivityTraceId">
      <summary>Rappresenta una proprietà <see cref="P:System.Diagnostics.Activity.TraceId" /> il cui formato si basa su uno standard W3C.</summary>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CopyTo(System.Span{System.Byte})">
      <summary>Copia i 16 byte dello struct <see cref="T:System.Diagnostics.ActivityTraceId" /> corrente in un intervallo specifico.</summary>
      <param name="destination">Intervallo in cui copiare i 16 byte dell'ID traccia.</param>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromBytes(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivityTraceId" /> da un intervallo di sola lettura di 16 byte.</summary>
      <param name="idData">Intervallo di sola lettura di 16 byte.</param>
      <returns>Nuovo ID traccia.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> non contiene otto byte.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromString(System.ReadOnlySpan{System.Char})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivityTraceId" /> da un intervallo di sola lettura di 32 caratteri esadecimali.</summary>
      <param name="idData">Intervallo contenente 32 caratteri esadecimali.</param>
      <returns>Nuovo ID traccia.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="idData" /> non contiene 16 caratteri esadecimali.
In alternativa
I caratteri in <paramref name="idData" /> non sono tutti caratteri esadecimali minuscoli o tutti zero.</exception>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivityTraceId" /> da un intervallo di sola lettura di byte con codifica UTF8.</summary>
      <param name="idData">Intervallo di sola lettura di byte con codifica UTF8.</param>
      <returns>Nuovo ID traccia.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.CreateRandom">
      <summary>Crea un nuovo valore <see cref="T:System.Diagnostics.ActivitySpanId" /> basato su un numero casuale che sarà probabilmente univoco.</summary>
      <returns>Nuovo ID intervallo.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Diagnostics.ActivityTraceId)">
      <summary>Determina se l'istanza corrente e un oggetto <see cref="T:System.Diagnostics.ActivityTraceId" /> specificato sono uguali.</summary>
      <param name="traceId">Istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="traceId" /> ha lo stesso valore esadecimale dell'istanza corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.Equals(System.Object)">
      <summary>Determina se questa istanza e un oggetto specificato, che deve essere anche un'istanza di <see cref="T:System.Diagnostics.ActivityTraceId" />, hanno lo stesso valore.</summary>
      <param name="obj">Oggetto da confrontare.</param>
      <returns>
        <see langword="true" /> se <paramref name="obj" /> è un'istanza di <see cref="T:System.Diagnostics.ActivityTraceId" /> e ha lo stesso valore esadecimale dell'istanza corrente; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.GetHashCode">
      <summary>Restituisce il codice hash dell'oggetto TraceId.</summary>
      <returns>Codice hash dell'oggetto TraceId.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Equality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se due istanze specificate di <see cref="T:System.Diagnostics.ActivityTraceId" /> hanno lo stesso valore.</summary>
      <param name="traceId1">Prima istanza da confrontare.</param>
      <param name="traceId2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore TraceId di <paramref name="traceId1" /> è uguale a quello di <paramref name="traceId2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.op_Inequality(System.Diagnostics.ActivityTraceId,System.Diagnostics.ActivityTraceId)">
      <summary>Determina se due istanze specificate di <see cref="T:System.Diagnostics.ActivityTraceId" /> hanno lo stesso valore.</summary>
      <param name="traceId1">Prima istanza da confrontare.</param>
      <param name="traceId2">Seconda istanza da confrontare.</param>
      <returns>
        <see langword="true" /> se il valore TraceId di <paramref name="traceId1" /> è diverso da quello di <paramref name="traceId2" />; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToHexString">
      <summary>Restituisce una stringa esadecimale di 16 caratteri che rappresenta l'ID intervallo.</summary>
      <returns>Rappresentazione di stringa esadecimale di 32 caratteri di questo ID traccia.</returns>
    </member>
    <member name="M:System.Diagnostics.ActivityTraceId.ToString">
      <summary>Restituisce una stringa esadecimale di 32 caratteri che rappresenta questo ID traccia.</summary>
      <returns>Rappresentazione di stringa esadecimale di 32 caratteri dell'ID traccia.</returns>
    </member>
    <member name="T:System.Diagnostics.DiagnosticListener">
      <summary>Offre un'implementazione della classe astratta <see cref="T:System.Diagnostics.DiagnosticSource" /> che rappresenta una posizione denominata a cui un'origine invia le informazioni (eventi).</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.#ctor(System.String)">
      <summary>Crea un nuovo oggetto <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <param name="name">Nome di <see cref="T:System.Diagnostics.DiagnosticListener" />.</param>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.AllListeners">
      <summary>Ottiene la raccolta di listener per questo oggetto <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Dispose">
      <summary>Elimina NotificationListeners.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled">
      <summary>Determina se sono presenti sottoscrittori registrati.</summary>
      <returns>
        <see langword="true" /> se sono presenti sottoscrittori registrati, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String)">
      <summary>Verifica se l'oggetto <see cref="T:System.Diagnostics.DiagnosticListener" /> è abilitato.</summary>
      <param name="name" />
      <returns>
        <see langword="true" /> se le notifiche sono disabilitate; in caso contrario, <see langword="false" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se DiagnosticListener è abilitato.</summary>
      <param name="name" />
      <param name="arg1" />
      <param name="arg2" />
      <returns>
        <see langword="true" /> se è abilitato, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="P:System.Diagnostics.DiagnosticListener.Name">
      <summary>Ottiene il nome di <see cref="T:System.Diagnostics.DiagnosticListener" />.</summary>
      <returns>Nome di <see cref="T:System.Diagnostics.DiagnosticListener" />.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Richiama il metodo OnActivityExport di tutti i sottoscrittori.</summary>
      <param name="activity">Attività interessata da un evento esterno.</param>
      <param name="payload">Oggetto che rappresenta la richiesta in uscita.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Richiama il metodo OnActivityImport di tutti i sottoscrittori.</summary>
      <param name="activity">Attività interessata da un evento esterno.</param>
      <param name="payload">Oggetto che rappresenta la richiesta in ingresso.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Aggiunge un sottoscrittore.</summary>
      <param name="observer">Sottoscrittore.</param>
      <returns>Riferimento a un'interfaccia che consente ai listener di non ricevere più notifiche prima che <see cref="T:System.Diagnostics.DiagnosticSource" /> ne abbia completato l'invio.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean})">
      <summary>Aggiunge un sottoscrittore e facoltativamente filtra gli eventi in base al nome e a un massimo di due contesti di ambiente.</summary>
      <param name="observer">Sottoscrittore.</param>
      <param name="isEnabled">Delegato che filtra gli eventi in base al nome e a un massimo di due contesti di ambiente (che possono essere <see langword="null" />) oppure <see langword="null" /> se un filtro eventi non è ottimale.</param>
      <returns>Riferimento a un'interfaccia che consente ai listener di non ricevere più notifiche prima che <see cref="T:System.Diagnostics.DiagnosticSource" /> ne abbia completato l'invio.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Func{System.String,System.Object,System.Object,System.Boolean},System.Action{System.Diagnostics.Activity,System.Object},System.Action{System.Diagnostics.Activity,System.Object})">
      <summary>Aggiunge un sottoscrittore, facoltativamente filtra gli eventi in base al nome e a un massimo di due contesti di ambiente e specifica i metodi da chiamare quando i provider importano o esportano attività dall'esterno del processo.</summary>
      <param name="observer">Sottoscrittore.</param>
      <param name="isEnabled">Delegato che filtra gli eventi in base al nome e a un massimo di due contesti di ambiente (che possono essere <see langword="null" />) oppure <see langword="null" /> se un filtro eventi non è ottimale.</param>
      <param name="onActivityImport">Delegato dell'azione che riceve l'attività interessata da un evento esterno e da un oggetto che rappresenta la richiesta in ingresso.</param>
      <param name="onActivityExport">Delegato dell'azione che riceve l'attività interessata da un evento esterno e da un oggetto che rappresenta la richiesta in uscita.</param>
      <returns>Riferimento a un'interfaccia che consente ai listener di non ricevere più notifiche prima che <see cref="T:System.Diagnostics.DiagnosticSource" /> ne abbia completato l'invio.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Subscribe(System.IObserver{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Predicate{System.String})">
      <summary>Aggiunge un sottoscrittore e facoltativamente filtra gli eventi in base al nome.</summary>
      <param name="observer">Sottoscrittore.</param>
      <param name="isEnabled">Un delegato che filtra gli eventi in base al nome (<see cref="T:System.String" />). Il delegato deve restituire <see langword="true" /> se l'evento è abilitato.</param>
      <returns>Riferimento a un'interfaccia che consente ai listener di non ricevere più notifiche prima che <see cref="T:System.Diagnostics.DiagnosticSource" /> ne abbia completato l'invio.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.ToString">
      <summary>Restituisce una stringa con il nome di questo DiagnosticListener.</summary>
      <returns>Il nome di questo DiagnosticListener.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticListener.Write(System.String,System.Object)">
      <summary>Registra una notifica.</summary>
      <param name="name">Nome dell'evento da registrare.</param>
      <param name="value">Oggetto che rappresenta il payload per l'evento.</param>
    </member>
    <member name="T:System.Diagnostics.DiagnosticSource">
      <summary>Una classe astratta che consente di instrumentare il codice per la registrazione in fase di produzione di payload con dati avanzati da usare all'interno del processo instrumentato.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.#ctor">
      <summary>Inizializza un'istanza della classe <see cref="T:System.Diagnostics.DiagnosticSource" />.</summary>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)">
      <summary>Verifica se l'evento di notifica è abilitato.</summary>
      <param name="name">Nome dell'evento in fase di scrittura.</param>
      <returns>
        <see langword="true" /> se l'evento di notifica è abilitato, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)">
      <summary>Verifica se l'evento di notifica è abilitato.</summary>
      <param name="name">Nome dell'evento in fase di scrittura.</param>
      <param name="arg1">Oggetto che rappresenta il contesto aggiuntivo di IsEnabled. I consumer devono aspettarsi di ricevere <see langword="null" /> che potrebbe indicare che il producer ha chiamato IsEnabled(string) puro per verificare il se consumer vuole ricevere notifiche per tali eventi. In base a ciò, il producer può chiamare nuovamente IsEnabled (string, object, object) con un contesto diverso da <see langword="null" />.</param>
      <param name="arg2">Facoltativo. Oggetto che rappresenta il contesto aggiuntivo di IsEnabled. <see langword="null" /> per impostazione predefinita. I consumer devono aspettarsi di ricevere <see langword="null" /> che potrebbe indicare che il producer ha chiamato IsEnabled(string) puro o ha inviato tutto il contesto necessario in <paramref name="arg1" />.</param>
      <returns>
        <see langword="true" /> se l'evento di notifica è abilitato, <see langword="false" /> in caso contrario.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)">
      <summary>Trasferisce lo stato da un'attività a un evento o operazione, come una richiesta HTTP, che si verificherà esternamente al processo.</summary>
      <param name="activity">Attività interessata da un evento esterno.</param>
      <param name="payload">Oggetto che rappresenta la richiesta in uscita.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)">
      <summary>Trasferisce lo stato a un'attività da un evento o operazione, come una richiesta HTTP, che si è verificata esternamente al processo.</summary>
      <param name="activity">Attività interessata da un evento esterno.</param>
      <param name="payload">Payload che rappresenta la richiesta in entrata.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Avvia un <see cref="T:System.Diagnostics.Activity" /> e scrive un evento iniziale.</summary>
      <param name="activity">
        <see cref="T:System.Diagnostics.Activity" /> da avviare.</param>
      <param name="args">Oggetto che rappresenta il valore passato come payload per l'evento.</param>
      <returns>L'attività avviata per il concatenamento pratico.</returns>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)">
      <summary>Arresta l'attività <see cref="T:System.Diagnostics.Activity" /> data, mantiene l'attività <see cref="P:System.Diagnostics.Activity.Current" /> globale e notifica agli utenti che l'attività <see cref="T:System.Diagnostics.Activity" /> è stata arrestata.</summary>
      <param name="activity">Attività da arrestare.</param>
      <param name="args">Oggetto che rappresenta il valore passato come payload per l'evento.</param>
    </member>
    <member name="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)">
      <summary>Offre un modo generico di registrazione dei payload complessi.</summary>
      <param name="name">Nome dell'evento in fase di scrittura.</param>
      <param name="value">Oggetto che rappresenta il valore passato come payload per l'evento. Si tratta spesso di un tipo anonimo che contiene diversi valori secondari.</param>
    </member>
  </members>
</doc>